{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Nonequilibrium Field Theories and Stochastic Dynamics","text":"<p>Course: Nonequilibrium Field Theories and Stochastic Dynamics Instructor: Prof. Erwin Frey Institution: Ludwig-Maximilians-Universit\u00e4t M\u00fcnchen (LMU Munich) Semester: Summer 2025</p>"},{"location":"#course-videos","title":"Course Videos","text":"<p>YouTube Playlist: Complete Course Videos</p>"},{"location":"#about-this-website","title":"About This Website","text":"<p>This website contains comprehensive learning materials for the Nonequilibrium Field Theories and Stochastic Dynamics course, including detailed Chinese lecture notes and corresponding Python code implementations.</p>"},{"location":"#course-content","title":"Course Content","text":"<p>This course explores the fundamental principles and advanced concepts of nonequilibrium field theories and stochastic dynamics. The focus is on stochastic processes in particle and field systems, emphasizing mathematical formalisms such as Langevin equations, Fokker-Planck equations, and path integrals. Additionally, the lectures cover applications in soft matter physics, active matter, and non-equilibrium statistical mechanics.</p>"},{"location":"#learning-materials","title":"Learning Materials","text":"<ul> <li>40 Chinese Lecture Notes: Detailed theoretical derivations, physical explanations, and mathematical proofs</li> <li>65 Python Code Implementations: Computational experiments and visualizations corresponding to each lecture</li> <li>Complete Image Resources: All diagrams and illustrations used in the course</li> <li>Terminology Glossary: Professional terms with Chinese-English translations</li> </ul>"},{"location":"#course-structure","title":"Course Structure","text":""},{"location":"#part-i-foundations-of-stochastic-processes-lectures-1-10","title":"Part I: Foundations of Stochastic Processes (Lectures 1-10)","text":"<ul> <li>Random Walks and Brownian Motion</li> <li>Elementary Stochastic Models</li> <li>Markov Processes and Master Equations</li> </ul>"},{"location":"#part-ii-stochastic-dynamics-of-particles-lectures-11-25","title":"Part II: Stochastic Dynamics of Particles (Lectures 11-25)","text":"<ul> <li>Langevin and Fokker-Planck Equations</li> <li>Stochastic Simulation Techniques</li> <li>Stochastic Thermodynamics</li> </ul>"},{"location":"#part-iii-from-discrete-states-to-fields-lectures-26-35","title":"Part III: From Discrete States to Fields (Lectures 26-35)","text":"<ul> <li>Reaction Networks and Field Theories</li> <li>Coarse-Grained Dynamics of Fields</li> </ul>"},{"location":"#part-iv-field-theories-of-nonequilibrium-systems-lectures-36-40","title":"Part IV: Field Theories of Nonequilibrium Systems (Lectures 36-40)","text":"<ul> <li>Dynamical Functionals and MSR Formalism</li> <li>Hydrodynamics and Fluctuating Fluids</li> <li>Nonequilibrium Pattern Formation</li> <li>Field Theory of Active Matter</li> </ul>"},{"location":"#course-video-titles","title":"Course Video Titles","text":"<p>Based on the course structure and repository contents, the lecture series includes the following topics:</p>"},{"location":"#i-foundations-of-stochastic-processes-lectures-1-10","title":"I. Foundations of Stochastic Processes (Lectures 1-10)","text":"<ol> <li>Thermodynamics, Statistical Mechanics, Nonequilibrium Physics and Teaching Philosophy (43 min)</li> <li>Simple Random Walk (41 min)</li> <li>Gaussian Random Walk, Poisson Process, Gillespie Algorithm (45 min)</li> <li>Gillespie Algorithm, Master Equation, Generating Function, Population Dynamics (45 min)</li> <li>Population Dynamics: Linear Death Process, The Lotka-Volterra Process (58 min)</li> <li>Fundamental Equations For Markov Processes: Chapman-Kolmogorov Equation (36 min)</li> <li>Forward Master Eq., Q-matrix for Linear Birth-death Process, General Properties of Master Eq. (41 min)</li> <li>Perron-Frobenius thm., Indecomposable Q-matrices, Rev. &amp; Stationary Procs., Detailed Balance (48 min)</li> <li>Consequences of Detailed Balance, Irreversibility and Entropy Production (42 min)</li> <li>The Ehrenfest Model, Entropy and Kullback-Leibler Divergence (37 min)</li> </ol>"},{"location":"#ii-stochastic-dynamics-of-particles-lectures-11-25","title":"II. Stochastic Dynamics of Particles (Lectures 11-25)","text":"<ol> <li>Markov Chain Monte Carlo, Jump Processes, Diffusion Processes, Fokker-Planck Equation (54 min)</li> <li>Brownian Motion (Wiener Process), Ornstein-Uhlenbeck Process, Einstein-Stokes Relation (35 min)</li> <li>Monte Carlo Sampling as Stochastic Process (44 min)</li> <li>Hamiltonian Monte Carlo Sampling (49 min)</li> <li>Chemotaxis, Run-and-Tumble Motion as Two-State Process, Keller\u2013Segel model (47 min)</li> <li>Schnitzer Model, Anti-Diffusion, Motility-Induced Phase Separation (33 min)</li> <li>Langevin Equation, Brownian Particle, Fluctuation\u2013Dissipation Theorem (43 min)</li> <li>Fokker-Planck Equation of Brownian Particle, Overdamped Langevin Equation, Smoluchowsky equation (39 min)</li> <li>Path Integral Formulation of Langevin Equations (45 min)</li> <li>Stochastic Differential Equations, Ito's Lemma, Stochastic integrals, Ito and Stratonovich (42 min)</li> <li>Ito's Formulas, Transformation Between Stratonovich and Ito Formulation (47 min)</li> <li>Path Integrals for Systems with Multiplicative Noise (27 min)</li> <li>Interacting Brownian Particles, Fluctuations Near Equilibrium, Time Correlations of Fluctuations (47 min)</li> <li>Onsager Coefficients and Symmetry Relations, Dynamic Form of the Fluctuation\u2013Dissipation Theorem (45 min)</li> <li>Gradient Dynamics, Model A, Classical Ising model, Ginzburg\u2013Landau Equation, Allen\u2013Cahn Equation (54 min)</li> </ol>"},{"location":"#iii-from-discrete-states-to-fields-lectures-26-35","title":"III. From Discrete States to Fields (Lectures 26-35)","text":"<ol> <li>Critical Slowing Down, Response Function, Dynamic Susceptibility, Model B (39 min)</li> <li>Hydrodynamics of Simple Fluids, Frictionless Fluids, Euler Equation (51 min)</li> <li>Viscous Fluid, Navier-Stokes Equation, Entropy Balance and Heat Conduction (41 min)</li> <li>Irreversible Linear Thermodynamics, Dry Diffusive Particles Systems (46 min)</li> <li>Brownian Particles Suspended in a Fluid, Model H (30 min)</li> <li>Dynamic Functionals for Field Theories with Additive Noise, Onsager-Machlup Functional (1h 3min)</li> <li>Janssen-De Dominicis Response Functional, Fluctuation-Dissipation Relation (25 min)</li> <li>Non-Equilibrium Work and Fluctuation Theorem, Jarzynski's Work Relation, Crooks' Fluct. Theorem (1h 19min)</li> <li>Directed Percolation, Spectral Method for Linear Death Process (1h 6min)</li> <li>Path Integral for Master Equation (31 min)</li> </ol>"},{"location":"#iv-field-theories-of-nonequilibrium-systems-lectures-36-40","title":"IV. Field Theories of Nonequilibrium Systems (Lectures 36-40)","text":"<ol> <li>Coherent State Path Integral, Operator Algebra and the Imaginary Noise (40 min)</li> <li>Kramers-Moyal Expansion and the Low Noise Limit of the Path Integral (41 min)</li> <li>Multi-Species Path Integrals, Rock-Paper-Scissors (49 min)</li> <li>Path Integrals on a Lattice: From Hopping to Continuous Field Theories (43 min)</li> <li>Kramers-Moyal Path Integral Approach, Field Theory for Interacting Particles (32 min)</li> </ol>"},{"location":"#technical-features","title":"Technical Features","text":"<ul> <li>Responsive Design: Supports desktop and mobile devices</li> <li>Dark/Light Theme: Switchable interface themes</li> <li>Mathematical Formula Rendering: High-quality math display based on MathJax</li> <li>Code Highlighting: Syntax-highlighted Python code</li> <li>One-Click Copy: Quick copy of code snippets</li> <li>Multilingual Support: Chinese-English bilingual interface</li> </ul>"},{"location":"#usage-instructions","title":"Usage Instructions","text":"<ol> <li>Navigation: Use the left sidebar to browse content by lecture</li> <li>Search: Click the search icon in the header to find specific content</li> <li>Theme Toggle: Use the top-right button to switch between dark/light themes</li> <li>Code Execution: Copy code to your Python environment to run</li> <li>Mathematical Formulas: Formulas support zooming and interactive viewing</li> </ol>"},{"location":"#language-support","title":"Language Support","text":"<p>Currently, most content is available in Chinese. English translations are being added gradually:</p> <ul> <li>Course Introduction (Lecture 1) - Available in English</li> <li>Remaining Lectures - Chinese with English interface</li> </ul> <p>Use the language switcher in the header to toggle between Chinese and English views.</p>"},{"location":"#acknowledgments-and-citation","title":"Acknowledgments and Citation","text":""},{"location":"#course-source","title":"Course Source","text":"<p>This learning material is based on Prof. Erwin Frey's course at LMU Munich. All theoretical content is credited to the original course.</p>"},{"location":"#style-reference","title":"Style Reference","text":"<p>The website design style references the Physics-based Deep Learning project.</p>"},{"location":"#open-source-license","title":"Open Source License","text":"<p>This project is licensed under the Creative Commons Attribution-NonCommercial 4.0 International License.</p> <p>Note: This website is for educational purposes and contains study materials for the course \"Nonequilibrium Field Theories and Stochastic Dynamics\" by Prof. Erwin Frey at LMU Munich.</p>"},{"location":"notes/1.%20Course%20Introduction/","title":"Course Introduction","text":"<p>These are self-study notes for the course Nonequilibrium Field Theories and Stochastic Dynamics (Prof. Erwin Frey, LMU Munich, Summer Semester 2025). Prof. Erwin Frey prefers chalkboard lectures. To document my learning, I organized my notes into articles and wrote Python code to deepen understanding. There are 40 chapters in total; this chapter is the course introduction.</p> <p></p> <p>Note: I followed the course on YouTube only; there is no official handout. Everything here comes from notes taken while watching the videos. A sample of the original notes is below:</p> <p></p>"},{"location":"notes/1.%20Course%20Introduction/#course-overview","title":"Course Overview","text":"<p>This course introduces the principles and advanced ideas of nonequilibrium field theory and stochastic dynamics, focusing on stochastic processes in particle and field systems, especially the Langevin equation, the Fokker-Planck equation, and path-integral formalisms.</p> <p>The content spans a complete path from basic stochastic-process theory to modern methods in nonequilibrium field theory, including dynamical functionals and fluctuation theorems. Special attention is given to the Kardar-Parisi-Zhang (KPZ) equation, which describes universal features of nonequilibrium growth. We also discuss active-matter systems, where collective behavior emerges from interactions that break detailed balance.</p> <p>Applications include soft condensed matter, active matter, and nonequilibrium statistical physics, providing a theoretical foundation for complex systems from biological processes to turbulent fluids. The learning path starts with elementary stochastic models, proceeds to the fundamental equations of Markov processes, and culminates in advanced field-theoretic methods such as dynamical functionals and fluctuation theorems.</p>"},{"location":"notes/1.%20Course%20Introduction/#teaching-philosophy","title":"Teaching Philosophy","text":"<p>Prof. Erwin Frey structures the course around four guiding principles.</p> <p></p> <ul> <li> <p>Physics-first and conceptually rich: The course emphasizes building physical intuition before introducing formal mathematics, focusing on understanding the mechanisms behind phenomena rather than mere mathematical manipulation. Course content starts from specific physical problems and gradually guides students to corresponding theoretical frameworks.</p> </li> <li> <p>Grounded in real phenomena: Course content is closely connected to observable physical phenomena, including pattern formation in biological systems and the dynamics of soft matter systems. Theoretical methods are combined with practical applications, reflecting physics' value as a science that describes the natural world.</p> </li> <li> <p>Problem sets as a core component: Exercise design is an important component of the course, aimed at deepening conceptual understanding, developing problem-solving skills, and extending course content. Through systematic practice, students consolidate and expand their knowledge.</p> </li> <li> <p>Connected to current research: The course introduces contemporary topics and case studies from physics research, combining fundamental theory with cutting-edge developments to provide a foundation for students' further research.</p> </li> </ul>"},{"location":"notes/1.%20Course%20Introduction/#1-panorama-of-physical-theory","title":"1. Panorama of Physical Theory","text":"<p>To locate nonequilibrium physics within physics as a whole, three interlinked yet distinct frameworks are reviewed: thermodynamics, statistical physics, and nonequilibrium physics. Understanding their differences and connections is essential for this course.</p>"},{"location":"notes/1.%20Course%20Introduction/#11-thermodynamics-universal-laws-for-macroscopic-systems","title":"1.1 Thermodynamics: Universal Laws for Macroscopic Systems","text":"<p>Thermodynamics studies how energy, heat, and work govern macroscopic behavior. Its power lies in universality: its laws (energy conservation, the second law, etc.) apply to all macroscopic systems without tracking microscopic details.</p>"},{"location":"notes/1.%20Course%20Introduction/#basic-concepts-and-variables","title":"Basic concepts and variables","text":"<p>To construct thermodynamic theory, we first need to establish a language for describing system states. Thermodynamics introduces two fundamentally different types of physical quantities to characterize macroscopic systems:</p> <p>Intensive vs. extensive variables - The distinction between intensive and extensive variables is the first step in understanding thermodynamics. Intensive variables such as temperature (\\(T\\)), pressure (\\(P\\)), and chemical potential (\\(\\mu\\)) do not depend on system size - whether it's a glass of water or a lake, the temperature can be the same. In contrast, extensive variables such as volume (\\(V\\)), internal energy (\\(E\\)), and entropy (\\(S\\)) scale proportionally with system size and are additive. This distinction is not merely a mathematical convenience but reflects the deep structure of the physical world: intensive variables describe the \"quality\" of a system, while extensive variables describe its \"quantity.\"</p> <p>Thermodynamic potentials - Building on this foundation, the concept of thermodynamic potentials emerges. Internal energy \\(U\\), Helmholtz free energy \\(F = U - TS\\), and Gibbs free energy \\(G = U - TS + PV\\) are characteristic functions for different constraints. Each potential selects a set of \"natural variables\" - for example, Gibbs free energy \\(G(T,P)\\) uses temperature and pressure as natural variables, which are precisely the conditions most easily controlled in experiments. The importance of potential functions lies in the fact that when they reach extrema under their respective constraints, they correspond to equilibrium states, and their derivatives give all other thermodynamic quantities.</p> <p>Heat and work - The concepts of heat and work define the accounting method for energy exchange. Work is ordered energy transfer (such as piston compressing gas), while heat is disordered energy transfer (such as molecular collisions). This distinction, seemingly simple, is actually profound: it implies differences in energy quality and lays the foundation for the formulation of the second law.</p> <p>Equilibrium and state functions - These are the core concepts of thermodynamics. Equilibrium is a state with time-independent macroscopic properties, serving as the starting point for thermodynamic analysis. State functions such as internal energy \\(U\\), entropy \\(S\\), and enthalpy \\(H\\) depend only on the current state of the system, not on the path taken to reach that state. This path independence allows us to compute changes in state functions along any reversible path, greatly simplifying thermodynamic calculations. The total differential properties of state functions ensure the consistency of thermodynamic relations, such as the Maxwell relations.</p>"},{"location":"notes/1.%20Course%20Introduction/#guiding-role-of-the-laws","title":"Guiding role of the laws","text":"<p>The four laws of thermodynamics form the axiomatic foundation of the entire theory. The zeroth law establishes the consistency of the temperature concept; the first law expresses energy conservation, \\(dU = \\delta Q - \\delta W\\); the second law introduces the concept of entropy and states that for isolated systems \\(dS \\geq 0\\); the third law sets the absolute scale of entropy.</p> <p>Among these, the relationship between the second law and irreversibility is the most profound. The principle of entropy increase not only gives the direction of processes but also introduces the \"arrow of time\" into the macroscopic world. Why does heat always flow from hot objects to cold objects? Why do gases always diffuse from high-pressure regions to low-pressure regions? The answers are all contained in the principle of entropy increase - natural processes always proceed in the direction of increasing the total entropy of the system.</p>"},{"location":"notes/1.%20Course%20Introduction/#from-fundamentals-to-applications","title":"From fundamentals to applications","text":"<p>Equations of state such as \\(PV = nRT\\) connect measurable quantities and tie theory to experiment; more complex systems require refined equations of state such as the van der Waals equation.</p> <p>Gibbs\u2013Thomson relation. Surface effects alter phase equilibria. The Gibbs\u2013Thomson relation \\(\\ln(p/p_0) = \\frac{2\\gamma V_m}{rRT}\\) relates curvature to equilibrium vapor pressure via surface tension \\(\\gamma\\), molar volume \\(V_m\\), and radius \\(r\\). It explains why small droplets evaporate more readily and small crystals dissolve more easily, and underlies nucleation, growth, and Ostwald ripening.</p> <p>Thermodynamic response functions - heat capacity, isothermal compressibility, thermal expansion - quantify how systems respond to small perturbations and diagnose stability (negative values signal instabilities).</p> <p>Phase transitions and emergence. Near critical points, systems display scale invariance and universal behavior - macroscopic order emerging from microscopic disorder.</p> <p>Ginzburg-Landau free energy introduces an order parameter and an effective free energy to analyze diverse transitions within a unified framework.</p> <p>Transport laws describe relaxation away from equilibrium: Fourier's law, constitutive relations for viscous fluids, and so on. Linear nonequilibrium thermodynamics unifies these relations.</p> <p>Onsager reciprocal relations, \\(L_{ij} = L_{ji}\\), reveal deep symmetry among transport processes (Seebeck and Peltier effects) rooted in microscopic time-reversal symmetry.</p>"},{"location":"notes/1.%20Course%20Introduction/#12-statistical-physics-bridging-micro-and-macro","title":"1.2 Statistical Physics: Bridging Micro and Macro","text":"<p>If thermodynamics describes what happens, statistical physics explains why. It shows how macroscopic laws and emergent collective behavior arise from probabilistic microscopic dynamics, using ensembles, fluctuations, and coarse graining to connect microstates to observables.</p>"},{"location":"notes/1.%20Course%20Introduction/#microscopic-foundations-and-probabilities","title":"Microscopic foundations and probabilities","text":"<p>The starting point of statistical physics is acknowledging a fundamental fact: we cannot and need not track the precise motion of every microscopic particle. Instead, we adopt the language of probability to describe systems.</p> <p>Microstate - A microstate is the most detailed description of a system - specifying the position and momentum of every particle. Imagine a gas containing \\(10^{23}\\) molecules; its microstate is a complete \"snapshot\" of this astronomical number of particles. However, macroscopic measurements (such as temperature, pressure) correspond not to a single microstate but to a vast collection of microstates. This leads to a profound realization: macroscopic properties are statistical averages of microstates.</p> <p>To handle this statistical nature, statistical physics introduces the concept of probability distribution. Different microstates occur with different probabilities; this probability distribution contains all the statistical information about the system. The key question is: what determines this probability distribution?</p>"},{"location":"notes/1.%20Course%20Introduction/#ensembles-and-the-partition-function","title":"Ensembles and the partition function","text":"<p>Ensemble - An ensemble is the core concept of statistical physics - it is a collection of a large number of system replicas under identical macroscopic constraints. Different constraint conditions correspond to different ensembles: the canonical ensemble fixes temperature, the grand canonical ensemble fixes temperature and chemical potential, and so on.</p> <p>Partition function - The central mathematical object is \\(Z = \\sum_i e^{-E_i/(k_B T)}\\), which appears simple but actually contains all the thermodynamic information of the system. What is the physical meaning of the partition function? It is the sum of \"weights\" of all possible microstates, where the weight of each state is given by the Boltzmann factor \\(e^{-E_i/(k_B T}\\) - the higher the energy of a state, the smaller its probability of occurrence.</p> <p>Once the partition function is obtained, thermodynamics naturally emerges from statistical physics: free energy \\(F = -k_B T \\ln Z\\), entropy \\(S = -\\partial F/\\partial T\\), internal energy \\(U = \\langle E \\rangle\\), and so on. This derivation from microscopic to macroscopic demonstrates the explanatory power of statistical physics.</p>"},{"location":"notes/1.%20Course%20Introduction/#statistical-entropy","title":"Statistical entropy","text":"<p>The concept of statistical entropy gives microscopic meaning to the abstract quantities of thermodynamics. Boltzmann's formula \\(S = k_B \\ln \\Omega\\) tells us that entropy measures the \"diversity\" of system microstates - the more possible microstates, the greater the entropy. Gibbs' more general formulation \\(S = -k_B \\sum_i p_i \\ln p_i\\) interprets entropy as the \"information content\" or \"uncertainty\" of the probability distribution.</p> <p>This understanding explains why entropy always increases: isolated systems always evolve from a few special microstates (low entropy) to many ordinary microstates (high entropy), which is purely a result of probability - \"ordinary\" situations are more likely to occur than \"special\" ones.</p>"},{"location":"notes/1.%20Course%20Introduction/#fluctuations-and-correlations","title":"Fluctuations and correlations","text":"<p>Statistical physics not only predicts average behavior but also reveals the universality of fluctuations. Due to the random motion of microscopic particles, any macroscopic quantity fluctuates around its mean value. These fluctuations are not \"noise\" but physical phenomena carrying important information.</p> <p>Correlation functions describe how fluctuations at different spatial and temporal points are related to each other; they are key to understanding collective behavior. Near critical points of phase transitions, correlation lengths diverge and systems exhibit long-range correlations - this is precisely the mechanism by which macroscopic order emerges from microscopic disorder.</p> <p>Order parameter - A macroscopic variable that quantifies the degree of order, it occupies a central position in phase transition theory. In ordered phases, the order parameter is non-zero; in disordered phases, it is zero. For example, in ferromagnets, magnetization is the order parameter; in liquid-gas phase transitions, density difference is the order parameter. The concept of order parameters allows us to describe various seemingly different phase transition phenomena using a unified mathematical language, revealing their common essence.</p> <p>Renormalization group - A powerful theoretical tool for handling multi-scale physical problems. Its core idea is to study how physical systems behave at different observation scales. Through systematic \"coarse graining\" - ignoring short-range details while preserving long-range behavior - the renormalization group reveals the universality of critical phenomena: different microscopic systems may exhibit the same macroscopic behavior near critical points because they belong to the same \"universality class.\" This theory not only explains the universality of phase transitions but also provides deep insights into understanding scaling behavior in complex systems.</p>"},{"location":"notes/1.%20Course%20Introduction/#tools-linking-micro-and-macro","title":"Tools linking micro and macro","text":"<p>Statistical physics has developed a series of powerful theoretical tools to handle complex systems:</p> <p>Law of large numbers - Ensures the determinism of macroscopic quantities: although individual particle behavior is random, the average behavior of large numbers of particles is deterministic. This explains why the macroscopic world appears deterministic despite its random microscopic foundation.</p> <p>Boltzmann distribution - \\(p_i \\propto e^{-E_i/(k_B T)}\\) is the universal probability distribution for equilibrium states. It does not depend on the specific details of the system, only on energy and temperature. This universality is the source of statistical physics' predictive power.</p> <p>Fluctuation-dissipation theorems - Establish quantitative relationships between equilibrium fluctuations and nonequilibrium response. They tell us that we can predict a system's response to external perturbations by observing its spontaneous fluctuations.</p> <p>When systems approach phase transitions, critical phenomena reveal another aspect of statistical physics: systems exhibit universality and scaling laws near critical points, where different microscopic systems may exhibit the same macroscopic behavior. This universality suggests the existence of deeper symmetries and invariances.</p> <p>Linear response theory - Handles system response to small external perturbations, transforming nonequilibrium problems into calculations of equilibrium properties, laying the foundation for understanding transport phenomena.</p> <p>Finally, statistical physics must face a profound question: the emergence of irreversibility. Microscopic dynamics are time-reversal symmetric, yet macroscopic phenomena exhibit clear directionality. Statistical physics explains this apparent contradiction through probability theory and the law of large numbers: irreversibility is not absolute but the result of overwhelming probability.</p> <p>Through these concepts and tools, statistical physics successfully bridges the gap between microscopic and macroscopic scales, not only explaining the origin of thermodynamic laws but also providing a solid theoretical foundation for understanding emergent behavior in complex systems.</p>"},{"location":"notes/1.%20Course%20Introduction/#13-nonequilibrium-physics-beyond-equilibrium","title":"1.3 Nonequilibrium Physics: Beyond Equilibrium","text":"<p>Nonequilibrium physics investigates systems away from thermodynamic equilibrium, combining macroscopic laws with microscopic descriptions to address transport, dissipation, fluctuations, and emergent structure across scales. Many compelling natural phenomena - from cell physiology to weather - are far from equilibrium.</p>"},{"location":"notes/1.%20Course%20Introduction/#hallmarks-of-nonequilibrium-systems","title":"Hallmarks of nonequilibrium systems","text":"<p>To understand nonequilibrium physics, we must first recognize the fundamental differences between nonequilibrium and equilibrium systems.</p> <p>Driving and dissipation balance - This is the core characteristic of nonequilibrium systems. Unlike equilibrium systems, nonequilibrium systems require continuous input of energy or matter to maintain their state. This external driving achieves dynamic balance with the system's internal dissipation processes, allowing the system to maintain a state far from thermodynamic equilibrium.</p> <p>Fluxes and production rates - These concepts occupy a central position in nonequilibrium physics. In these systems, energy, matter, charge, and so on, flow continuously, forming various \"flows\" - heat flow, particle flow, current flow, etc. Simultaneously, the system continuously produces entropy, which is a direct manifestation of irreversible processes. These flows are not transient disturbances but defining features of the system's stable existence.</p> <p>Nonequilibrium steady state (NESS) - This is a key concept in nonequilibrium physics. Many nonequilibrium systems, under continuous driving, reach a seemingly \"stable\" state: macroscopic properties do not change over time, but there are persistent net flows and entropy production internally. Living systems are paradigmatic examples of NESS - living cells maintain their highly ordered state through continuous metabolism, appearing static but actually full of dynamic processes.</p>"},{"location":"notes/1.%20Course%20Introduction/#breaking-detailed-balance","title":"Breaking detailed balance","text":"<p>Breaking of detailed balance - This is the fundamental marker distinguishing equilibrium from nonequilibrium systems. At equilibrium, microscopic reversibility requires that the rate of any elementary process must equal the rate of its reverse process - this is the principle of detailed balance. Mathematically expressed as: for any two states \\(i\\) and \\(j\\), we must have \\(\\pi_i W_{i \\to j} = \\pi_j W_{j \\to i}\\), where \\(\\pi_i\\) is the equilibrium probability and \\(W_{i \\to j}\\) is the transition rate.</p> <p>In nonequilibrium systems, this principle is systematically violated. External driving breaks the symmetry of microscopic processes, leading to net circulating flows and directed motion. This breaking is not an accidental disturbance but the foundation of system function - it is precisely this asymmetry that enables molecular motors to move directionally and allows cells to actively transport matter.</p>"},{"location":"notes/1.%20Course%20Introduction/#from-stochastic-processes-to-field-theory-a-layered-syllabus","title":"From stochastic processes to field theory: a layered syllabus","text":"<p>According to the lecture outline, the theory is organized into four ascending layers:</p> <p>Foundations of Stochastic Processes. From random walks and Brownian motion (Bernoulli or Gaussian walks; diffusion equation) through elementary stochastic models (Poisson processes, birth-death dynamics, molecular motors) to Markov processes and master equations (Chapman-Kolmogorov; discrete and continuous state spaces).</p> <ul> <li>2. Simple Random Walk</li> <li>3. Gaussian Random Walk and Poisson Process</li> <li>4. Gillespie Algorithm, Master Equation, Generating Functions, and Population Dynamics</li> <li>5. Population Dynamics: Linear Death Process and Lotka-Volterra System</li> <li>6. Fundamental Equations of Markov Processes: Chapman-Kolmogorov</li> <li>7. Forward Master Equation and the Q Matrix</li> <li>8. Perron-Frobenius Theorem, Steady States, and Detailed Balance</li> <li>9. Nonequilibrium States: Irreversibility and Entropy Production</li> <li>10. Ehrenfest Model, Entropy, and KL Divergence</li> </ul> <p>Stochastic Dynamics of Particles. Langevin and Fokker-Planck equations (path integrals; multiplicative noise), stochastic simulation (Gillespie algorithm; stochastic integration), and stochastic thermodynamics (entropy production, detailed balance, fluctuation theorems).</p> <ul> <li>11. Continuous Markov Processes and the Fokker-Planck Equation</li> <li>12. Brownian Motion and the Ornstein-Uhlenbeck Process</li> <li>13. Monte Carlo Sampling as a Stochastic Process</li> <li>14. Hamiltonian Monte Carlo</li> <li>15. Chemotaxis, Run-and-Tumble, and the Keller-Segel Model</li> <li>16. Schnitzer Model, Anomalous Diffusion, and Motility-Induced Phase Separation</li> <li>17. Langevin Equation, Brownian Particles, and the Fluctuation-Dissipation Theorem</li> <li>18. Fokker-Planck and Smoluchowski: From Trajectories to Probability Dynamics</li> <li>19. Path-Integral Formulation of Stochastic Processes</li> <li>20. Stochastic Differential Equations</li> <li>21. Ito Integrals and a Unified Framework</li> <li>22. Path Integrals for Systems with Multiplicative Noise</li> </ul> <p>From Discrete States to Fields. Reaction networks to field theories via the master equation and Kramers-Moyal expansion; coarse-grained field dynamics (relaxational dynamics; conserved vs. non-conserved fields).</p> <ul> <li>23. From Coarse Graining to Fluctuating Continuum Theories</li> <li>24. Onsager Coefficients, Reciprocity, and the Dynamic FDT</li> <li>25. Gradient Dynamics, Phase Transitions, and Relaxation</li> <li>26. Critical Slowing Down, Dynamic Response, and Conservation Laws</li> <li>27. Simple Fluids, Inertial Fluids, and Eulerian Hydrodynamics</li> <li>28. Viscous Fluids, Navier-Stokes, Entropy Balance, and Heat Conduction</li> <li>29. Irreversible Linear Thermodynamics and Dry Diffusive Particle Systems</li> <li>30. Brownian Particles in Fluids - Model H</li> </ul> <p>Field Theories of Nonequilibrium Systems. Dynamical functionals and MSR formalism (Onsager-Machlup; Janssen-de Dominicis), fluctuating hydrodynamics and Model H, nonequilibrium pattern formation, and active-matter field theory.</p> <ul> <li>31. Dynamical Functionals, Additive-Noise Field Theory, and the Onsager-Machlup Functional</li> <li>32. Janssen-De Dominicis Response Functional and Fluctuation-Dissipation Relations</li> <li>33. Nonequilibrium Work and Fluctuation Theorems</li> <li>34. Directed Percolation, Absorbing States, and Spectral Methods</li> <li>35. Path-Integral Representation of the Master Equation</li> <li>36. Coherent-State Path Integrals, Operator Algebras, and Imaginary Noise</li> <li>37. Kramers-Moyal Expansion and the Low-Noise Limit</li> <li>38. Multi-Species Path Integrals and Cyclic Competition Dynamics</li> <li>39. From Particle Jumps to Continuum Field Theories</li> <li>40. A Unified Field-Theoretic Framework</li> </ul>"},{"location":"notes/1.%20Course%20Introduction/#layered-progression-of-methods","title":"Layered progression of methods","text":"<p>This structure reflects a layered methodology: from single-particle stochastic trajectories to ensemble probability evolution; from discrete jump processes to continuous field theories; from linear response near equilibrium to complex far-from-equilibrium behavior. Each layer brings specific mathematical tools and physical insights.</p> <p>To place the three frameworks side by side, compare:</p> Property Thermodynamics Statistical Physics Nonequilibrium Physics Scope Macroscopic systems Microscopic to macroscopic Dynamic, evolving systems Typical state Equilibrium Equilibrium ensembles NESS; transient states Key variables \\(T, P, V, E, S\\) (macroscopic) Microstates; probability distributions; partition function Fluxes; production rates; fluctuations Governing principles Laws of thermodynamics Statistical ensembles; Boltzmann weight Fluctuation theorems; entropy production; broken detailed balance"},{"location":"notes/1.%20Course%20Introduction/#2-a-paradigm-of-stochastic-processes-brownian-motion","title":"2. A Paradigm of Stochastic Processes - Brownian Motion","text":"<p>History often provides a doorway into complex fields. Brownian motion is more than a story: it epitomizes how microscopic fluctuations dominate mesoscopic dynamics.</p>"},{"location":"notes/1.%20Course%20Introduction/#21-robert-browns-little-secret-the-beginning","title":"2.1 Robert Brown's \"Little Secret\": The Beginning","text":"<p>In 1827 the botanist Robert Brown observed pollen grains under a microscope and found that they moved rapidly and irregularly without ever stopping. This phenomenon, later called Brownian motion, puzzled contemporaries; some even attributed it to a vital force. When Charles Darwin asked for the explanation, Brown replied, \"That is my little secret.\"</p>"},{"location":"notes/1.%20Course%20Introduction/#22-einsteins-explanation-and-perrins-verification","title":"2.2 Einstein's Explanation and Perrin's Verification","text":"<p>Einstein realized that a suspended particle is incessantly bombarded by surrounding molecules in thermal motion. For a macroscopic body, collisions statistically cancel; for a microscopic grain, finite-number fluctuations leave imbalanced random forces that drive irregular motion.</p> <p>This explanation was revolutionary:</p> <ol> <li>It provided direct, visible evidence for atoms and molecules, bridging invisible molecular collisions to visible mesoscopic motion.</li> <li>It introduced the concept of a random force, foundational for modern stochastic dynamics.</li> <li>It revealed the link between fluctuations and dissipation: the same molecular collisions that cause random motion also cause viscous drag under external forcing, foreshadowing the fluctuation-dissipation theorem.</li> </ol> <p>Jean Baptiste Perrin measured mean-squared displacements and used them to determine Avogadro's number, in excellent agreement with theory, giving decisive experimental support to Einstein's ideas. He received the 1926 Nobel Prize in Physics.</p>"},{"location":"notes/1.%20Course%20Introduction/#3-milestones-in-nonequilibrium-physics","title":"3. Milestones in Nonequilibrium Physics","text":"<p>The success of Brownian motion theory opened the door to nonequilibrium physics. Throughout the 20th century, physicists developed a toolkit whose abstraction and scope steadily increased.</p>"},{"location":"notes/1.%20Course%20Introduction/#31-stochastic-dynamics-1900s-1940s-mesoscopic-noisy-dynamics","title":"3.1 Stochastic Dynamics (1900s-1940s): Mesoscopic Noisy Dynamics","text":"<p>Goal: formulate dynamical equations for stochastic phenomena such as Brownian motion.</p> <p>Langevin equation. For a single Brownian particle, Paul Langevin split Newton's law \\(m\\ddot{x} = F\\) into</p> <p>1) a systematic, predictable dissipative force \\(-\\gamma \\dot{x}\\) (viscous drag), and</p> <p>2) a rapidly fluctuating random force \\(\\eta(t)\\) representing molecular impacts.</p> <p>Thus, conceptually,</p> \\[ m \\ddot{x} = - \\gamma \\dot{x} + \\eta(t). \\] <p>This unifies macroscopic dissipation (via gamma) with microscopic fluctuations (via eta) in a single stochastic differential equation and describes a random trajectory.</p> <p>Fokker-Planck equation. Rather than single trajectories, the probability density P(x,t) for an ensemble evolves as</p> \\[ \\frac{\\partial P}{\\partial t} = - \\nabla \\cdot ( \\mathbf{A} P ) + \\frac{1}{2} \\nabla^2 ( \\mathbf{B} P ), \\] <p>where the drift term with vector \\(\\mathbf{A}\\) is deterministic transport due to systematic forces, and the diffusion term with tensor \\(\\mathbf{B}\\) reflects noise-induced spreading. The Fokker-Planck and Langevin pictures are equivalent Eulerian and Lagrangian views of the same process.</p>"},{"location":"notes/1.%20Course%20Introduction/#32-linear-nonequilibrium-thermodynamics-1930s-1960s-transport-near-equilibrium","title":"3.2 Linear Nonequilibrium Thermodynamics (1930s-1960s): Transport Near Equilibrium","text":"<p>For small departures from equilibrium, thermodynamic fluxes \\(J_i\\) (heat, charge, particles) respond linearly to thermodynamic forces \\(X_j\\) (temperature, electrical, chemical-potential gradients):</p> \\[ J_i = \\sum_j L_{ij} X_j. \\] <p>Diagonal \\(L_{ii}\\) give direct laws (Fourier, Ohm, and so on).</p> <p>Onsager reciprocal relations. Lars Onsager revealed the structure of cross effects: a temperature gradient can induce an electric current (Seebeck), and a potential gradient can induce heat flow (Peltier). In the absence of time-reversal breaking (for example, magnetic fields), \\(L_{ij} = L_{ji}\\), with symmetry rooted in microscopic reversibility. Onsager received the 1968 Nobel Prize in Chemistry.</p>"},{"location":"notes/1.%20Course%20Introduction/#33-fluctuation-dissipation-theorem-1950s-1970s-linking-response-and-fluctuations","title":"3.3 Fluctuation-Dissipation Theorem (1950s-1970s): Linking Response and Fluctuations","text":"<p>The FDT synthesizes the Langevin and Onsager viewpoints. Physically: a system's linear response to small external perturbations is quantitatively linked to its spontaneous equilibrium fluctuations.</p> <p>Examples. For Brownian motion, diffusion (fluctuations) and mobility (response) are related. Johnson noise in resistors links resistance to the voltage-noise spectrum. Practically, by measuring equilibrium correlation functions (how a system \"jitters\" by itself), one predicts linear response to weak forcing. Breakdown of FDT signals far-from-equilibrium behavior.</p>"},{"location":"notes/1.%20Course%20Introduction/#34-from-classic-to-modern-pattern-formation-to-active-matter","title":"3.4 From Classic to Modern: Pattern Formation to Active Matter","text":"<p>As the toolkit matured, attention moved from simple particle systems to spatially extended, driven systems far from equilibrium:</p> <ul> <li>Classical pattern formation (1960s-1980s). Turing-type reaction-diffusion systems generate stationary patterns (spots, stripes) via instabilities arising from unequal diffusion coefficients.</li> <li>Field-theoretic approaches (1970s-present). The Doi-Peliti and Martin-Siggia-Rose-Janssen-de Dominicis (MSRJD) formalisms map master equations for reacting-diffusing particles to field-theoretic path integrals, enabling coarse graining and renormalization-group analysis.</li> <li>Renormalization group (1970s-present). RG explains universality and scaling of fluctuations in equilibrium and nonequilibrium settings.</li> <li>Large-deviation theory (1980s-present). Path-based probability quantifies rare events, entropy-production fluctuations, and noise-induced transitions - central for nonequilibrium systems and biological processes.</li> <li>Nonequilibrium pattern formation (2000s-present). Noise and driving can stabilize complex spatiotemporal structures; noise can even help create and maintain order.</li> <li>Active matter (2000s-present). Self-driven units (bacteria, cytoskeletal filaments, bird flocks) continuously break detailed balance and exhibit emergent collective order.</li> <li>Physics of living systems (2000s-present). Mechano-chemical feedback, collective cell behaviors, and stochastic biological networks are addressed with nonequilibrium statistical physics.</li> </ul>"},{"location":"notes/1.%20Course%20Introduction/#4-nonequilibrium-pattern-formation-and-physics-of-living-systems","title":"4. Nonequilibrium Pattern Formation and Physics of Living Systems","text":""},{"location":"notes/1.%20Course%20Introduction/#41-nonequilibrium-pattern-formation","title":"4.1 Nonequilibrium Pattern Formation","text":"<p>Nonequilibrium pattern formation represents one of the most fascinating aspects of modern nonequilibrium physics. Unlike classical pattern formation in equilibrium systems, nonequilibrium patterns emerge from the interplay between driving forces, dissipation, and fluctuations in systems far from equilibrium.</p>"},{"location":"notes/1.%20Course%20Introduction/#key-characteristics-of-nonequilibrium-patterns","title":"Key Characteristics of Nonequilibrium Patterns","text":"<p>Driving and Dissipation Balance: Nonequilibrium patterns require continuous energy input to maintain their structure. This energy is dissipated through various mechanisms, creating a dynamic balance that sustains the pattern.</p> <p>Fluctuation-Stabilized Structures: In contrast to equilibrium systems where fluctuations typically destroy order, nonequilibrium systems can use fluctuations to create and stabilize complex patterns. Noise can even help maintain order in certain regimes.</p> <p>Emergent Collective Behavior: Individual components following simple rules can collectively generate complex, large-scale patterns through self-organization mechanisms.</p>"},{"location":"notes/1.%20Course%20Introduction/#examples-of-nonequilibrium-pattern-formation","title":"Examples of Nonequilibrium Pattern Formation","text":"<ul> <li>Turing Patterns: Reaction-diffusion systems where different diffusion rates of chemical species lead to spontaneous pattern formation (spots, stripes, spirals)</li> <li>Active Matter Patterns: Self-propelled particles can form flocks, swarms, and other collective structures</li> <li>Biological Morphogenesis: Development of complex structures in living organisms through chemical signaling and mechanical forces</li> </ul>"},{"location":"notes/1.%20Course%20Introduction/#42-physics-of-living-systems","title":"4.2 Physics of Living Systems","text":"<p>The physics of living systems represents a cutting-edge application of nonequilibrium statistical physics to biological phenomena. Living organisms are paradigmatic nonequilibrium systems that maintain high order through continuous energy consumption.</p>"},{"location":"notes/1.%20Course%20Introduction/#core-principles","title":"Core Principles","text":"<p>Mechanochemical Feedback: Biological systems often involve feedback loops between mechanical forces and chemical processes, where mechanical deformation affects chemical reactions and vice versa.</p> <p>Collective Cell Behavior: Individual cells can coordinate their behavior to produce emergent tissue-level phenomena through cell-cell communication and mechanical interactions.</p> <p>Stochastic Biological Networks: Biological processes at the cellular and molecular level are inherently stochastic, requiring new theoretical frameworks to understand their dynamics.</p>"},{"location":"notes/1.%20Course%20Introduction/#research-applications","title":"Research Applications","text":"<ul> <li>Cell Division and Morphogenesis: Understanding how mechanical and chemical processes coordinate to create complex biological structures</li> <li>Neural Network Dynamics: Applying statistical physics to understand brain function and neural synchronization</li> <li>Tissue Development: Modeling how individual cells coordinate to form functional tissues</li> </ul>"},{"location":"notes/1.%20Course%20Introduction/#5-frontiers-and-intersections-nonequilibrium-physics-in-living-systems","title":"5. Frontiers and Intersections: Nonequilibrium Physics in Living Systems","text":"<p>Life is the quintessential nonequilibrium phenomenon: organisms maintain highly ordered states far from equilibrium by continuously consuming energy and matter. Living systems thus offer both rich case studies and tough challenges for nonequilibrium physics.</p>"},{"location":"notes/1.%20Course%20Introduction/#51-schrodinger-what-is-life","title":"5.1 Schrodinger: \"What Is Life?\"","text":"<p>In 1944 Erwin Schrodinger argued that, although living matter does not evade known physical laws, it likely obeys additional, then-unknown principles that would, once revealed, become integral to physics. Today many of these are understood as nonequilibrium rules governing open, energy-consuming systems that self-organize and perform complex functions.</p>"},{"location":"notes/1.%20Course%20Introduction/#52-case-studies-from-the-frey-group","title":"5.2 Case Studies from the Frey Group","text":"<p>The following examples from the Frey group illustrate how nonequilibrium ideas solve concrete biological problems.</p> <ul> <li>Cell polarity in yeast</li> <li> <p>Biological question: Before budding, a single-celled budding yeast must select a specific point from its originally nearly spherically symmetric cell surface and concentrate all cell growth resources at that point to form a \"bud.\" This is a typical symmetry breaking problem.</p> </li> <li> <p>Physical mechanism: The core of this process is a GTPase named Cdc42. On the cell membrane, activated Cdc42 molecules can recruit and activate more Cdc42 molecules through a positive feedback loop. This \"rich-get-richer\" mechanism, combined with slow diffusion of molecules on the membrane and fast diffusion in the cytosol, can spontaneously concentrate originally uniformly distributed Cdc42 molecules into a single, stable \"polarity cap,\" thereby marking the future growth site. This is a self-organization process driven by reaction-diffusion mechanisms. Research by Prof. Frey and his collaborators further reveals that this seemingly single process actually contains multiple, functionally redundant self-organization mechanisms, giving yeast polarity processes extremely strong robustness to gene mutations or environmental perturbations and explaining their high evolvability.</p> </li> <li> <p>Min oscillations in E. coli</p> </li> <li> <p>Biological question: A rod-shaped E. coli must divide precisely at the geometric center of the cell to ensure equal-sized daughter cells. How does the cell \"find\" its midpoint?</p> </li> <li> <p>Physical mechanism: E. coli utilizes an exquisite dynamic positioning system - the Min protein system. This system consists of three proteins: MinC, MinD, and MinE. Among them, MinD is an ATP-consuming motor protein that can bind to the cell membrane when driven by ATP; MinE can promote MinD to hydrolyze ATP, causing it to detach from the membrane. The interaction and diffusion of these two proteins together constitute a reaction-diffusion oscillator. In the cell, MinD and MinE form a standing wave that shuttles from one pole to the other with a period of about one minute. As a division inhibitor, MinC protein follows MinD in its movement. Due to this back-and-forth oscillation, MinC protein has the highest time-averaged concentration at the poles and the lowest at the geometric center of the cell. Thus, the cell center becomes the only location \"allowed\" for the division machinery (FtsZ ring) to assemble, ensuring precise centering of division. This process is a typical nonequilibrium steady state (NESS) that continuously consumes energy (ATP hydrolysis) to maintain a dynamic, biologically functional spatial pattern.</p> </li> <li> <p>Geometry decoding in starfish oocytes</p> </li> <li> <p>Biological question: In life activities such as cell division, intracellular signals (such as protein concentration waves) must propagate accurately across complex, dynamically changing cell geometry and reach specific targets. How do cells accurately \"decode\" their own geometric information under different shapes to ensure precise execution of biological functions? For example, in very large starfish oocytes, a key RhoA protein activity wave always propagates precisely from the cell surface to the nucleus location, whether the cell is stretched into an ellipsoid or compressed into a star shape.</p> </li> <li> <p>Physical mechanism: This research reveals an exquisite, hierarchical pattern formation mechanism (\"patterns forming patterns\"). The cell's geometric shape information is first encoded as a long-range, stable gradient of the cell-cycle regulator Cdk1 - a \"background pattern\" generated by a reaction-diffusion system. Then, a second reaction-diffusion system - the RhoA protein cycle - \"reads\" this background gradient. This system acts like a bistable switch, only being activated where Cdk1 concentration exceeds a certain threshold, launching an excitable traveling wave on the cortex. The propagation path and final position of this wave are precisely guided and determined by the first pattern (Cdk1 gradient). Through this cascading \"pattern guides pattern\" approach, the cell cleverly converts complex geometric information into robust biochemical signaling, ensuring that even under strong shape perturbations, key signals can still precisely reach their targets.</p> </li> <li> <p>Synthetic cell motility</p> </li> <li> <p>Biological question/goal: Autonomous cell movement is one of the most fundamental characteristics of life, relying on complex cytoskeletal and motor protein systems. Can we construct an autonomously moving \"synthetic cell\" using only minimal components without these complex \"musculoskeletal\" systems? This is a core challenge in the field of \"bottom-up\" synthetic biology, aimed at exploring the minimal physicochemical principles that drive life phenomena.</p> </li> <li> <p>Physical mechanism: This research successfully utilized E. coli's Min protein system to achieve persistent, directed movement of a liposome (synthetic cell model) on a surface. The core is a mechano-chemical feedback loop. First, MinD and MinE proteins, driven by ATP, self-organize to form asymmetric protein concentration distributions on the inner and outer surfaces of the liposome membrane and the supporting plane (chemical part). This uneven protein distribution, through two possible mechanisms, leads to symmetry breaking of the liposome shape and generates driving force (mechanical part): 1) Proteins act like \"zippers\" to form and break unequal connections between the liposome and the supporting plane; 2) Protein aggregation directly changes local membrane curvature and tension. This chemical pattern-driven deformation and movement, in turn, affects the Min protein's own reaction-diffusion dynamics, because the Min system is very sensitive to geometric shape. This \"chemical pattern affects shape; shape changes feedback to chemical pattern\" cycle ultimately drives this minimalist synthetic cell to achieve unprecedented, cytoskeleton-free persistent crawling movement.</p> </li> </ul>"},{"location":"notes/1.%20Course%20Introduction/#53-complexity-science-nobel-prizes-and-other-honors","title":"5.3 Complexity Science: Nobel Prizes and Other Honors","text":"<ul> <li> <p>2021 Nobel Prize in Physics: Awarded to Syukuro Manabe, Klaus Hasselmann, and Giorgio Parisi for their \"groundbreaking contributions to our understanding of complex physical systems.\" Particularly noteworthy is Parisi's work, which revealed the hidden deep structures and fluctuation laws in disordered systems such as spin glasses. The theoretical tools developed by Parisi provide a universal framework for understanding various complex systems filled with randomness and \"ergodicity breaking,\" which is closely related to the stochastic processes and statistical field theory ideas that will be studied in this course.</p> </li> <li> <p>2024 Nobel Prize in Physics: Awarded to John J. Hopfield and Geoffrey E. Hinton for their \"groundbreaking discoveries and inventions that made artificial neural network machine learning possible.\" Notably, the mathematical model of the associative memory network (Hopfield network) proposed by Hopfield is precisely derived from the spin glass model in statistical physics. This eloquently demonstrates that statistical physics, particularly the ideas of handling many-body interactions and collective behavior, has become a theoretical cornerstone in fields such as artificial intelligence and information science.</p> </li> </ul> <p></p> <ul> <li>2025 Boltzmann Medal: Awarded to Mehran Kardar and Yoshiki Kuramoto. Kardar has made important contributions to the unified understanding of fluctuations, interface growth, and other phenomena in both equilibrium and nonequilibrium systems (such as the famous KPZ equation). Kuramoto pioneered the theory of synchronization phenomena in complex systems (such as the Kuramoto model), revealing universal principles of collective dynamic behavior from neural networks to firefly flashing. The work of these two scholars represents the core frontiers of nonequilibrium physics and is precisely the theme that will be deeply explored in the subsequent parts of this course.</li> </ul> <p></p> <p>These examples show that the concepts and methods in this course are not ivory-tower curiosities but keys to understanding complex phenomena from life to intelligence, and they remain central to active research today.</p>"},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/","title":"Preface: Entropy Production and the Signature of Irreversibility","text":"<p>In the previous lectures (especially 8 and 9) we studied the master equation and distinguished global balance from detailed balance. Detailed balance implies a steady state, but not every steady state satisfies detailed balance. This distinction is key for nonequilibrium physics and leads us to irreversibility.</p> <p>In a nonequilibrium steady state (NESS), macroscopic observables (e.g., the distribution) are time\u2011independent, yet persistent probability currents flow inside the system. These net currents signal irreversibility. To quantify it we use the entropy production rate.</p>"},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/#quantifying-irreversibility-entropy-production-rate-sigma","title":"Quantifying Irreversibility: Entropy Production Rate \\(\\sigma\\)","text":"<p>One expression for \\(\\sigma\\) is</p> \\[ \\sigma = \\sum_{i j} \\pi_j w_{i j} \\, \\ln\\!\\left(\\frac{w_{j i}}{w_{i j}}\\right), \\] <p>where \\(\\pi_j\\) is the steady probability of state \\(j\\) and \\(w_{i j}\\) is the rate from \\(j\\) to \\(i\\), so \\(\\pi_j w_{i j}\\) is the steady probability flux \\(j\\to i\\). The log measures forward\u2013backward rate asymmetry; if \\(w_{i j}=w_{j i}\\) this term vanishes.</p> <p>An equivalent (exact) form is</p> \\[ \\sigma = \\sum_{i j} \\pi_j w_{i j} \\, \\ln\\!\\left(\\frac{\\pi_i w_{j i}}{\\pi_j w_{i j}}\\right), \\] <p>obtained by using global balance \\(\\sum_j (\\pi_j w_{j i}-\\pi_i w_{i j})=0\\) to show \\(\\sum_{i j} \\pi_j w_{i j}\\ln(\\pi_j/\\pi_i)=0\\) and adding this identity inside the log. The inner ratio becomes \u201cbackward flux / forward flux,\u201d highlighting net cyclic circulation as the origin of entropy production.</p> <p>An equivalent symmetric expression over unordered pairs is</p> \\[ \\sigma \\,=\\, \\sum_{i&lt;j} J_{i j}\\,\\ln\\!\\left(\\frac{w_{i\\to j}}{w_{j\\to i}}\\right),\\quad J_{i j}:=\\pi_i w_{i\\to j}-\\pi_j w_{j\\to i}. \\] <p>This makes explicit the universal (flux)\\(\\times\\)(force) structure with thermodynamic force (affinity) \\(A_{i j}:=\\ln\\!\\left(\\frac{w_{i\\to j}}{w_{j\\to i}}\\right)\\).</p> <p>Basic properties:</p> <p>1) Nonnegativity: \\(\\sigma\\ge 0\\) (by Jensen\u2019s inequality). Physically this is the second law in stochastic processes: the steady entropy production rate is never negative.</p> <p>2) Relation to detailed balance:    - \\(\\sigma=0\\) iff detailed balance holds: \\(\\pi_j w_{i j}=\\pi_i w_{j i}\\) for all pairs. This is true thermodynamic equilibrium.    - In NESS, \\(\\sigma&gt;0\\) and some net current \\(J_{i j}=\\pi_i w_{i j}-\\pi_j w_{j i}\\ne0\\) exists.</p>"},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/#1-ehrenfest-model-a-simple-system-for-big-ideas","title":"1. Ehrenfest Model: A Simple System for Big Ideas","text":""},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/#11-the-classic-model","title":"1.1 The Classic Model","text":"<p>The Ehrenfest model (urn/flea model) was introduced to clarify the statistical nature of the second law: how macroscopic irreversibility emerges from microscopically reversible dynamics. Two boxes and \\(N\\) distinguishable particles: at each step pick one uniformly at random and move it to the other box. Microscopic moves are reversible, yet the system overwhelmingly evolves from highly imbalanced macrostates (all particles in one box) toward the most probable macrostate (roughly equal split).</p> <p>It is not meant to mimic a specific material but to reveal how macroscopic arrows (toward disorder/equilibrium) arise statistically.</p> <p>[\u2026 translated content of sections 1.2\u20133.2 mirroring the Chinese text, including formulas and explanations \u2026]</p>"},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/#4-simulating-the-ehrenfest-model-in-python","title":"4. Simulating the Ehrenfest Model in Python","text":"<p>We use the Gillespie algorithm for continuous\u2011time Markov processes: compute the total exit rate, draw an exponential waiting time, then choose the jump by relative rates.</p>"},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/#41-simulating-trajectories","title":"4.1 Simulating Trajectories","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef simulate_ehrenfest_trajectory(N=50, n_initial=50, lambda_rate=1.0, t_max=40):\n    \"\"\"\n    Simulate a single trajectory of the Ehrenfest model using the Gillespie algorithm.\n    \"\"\"\n    t = 0.0\n    n = n_initial\n    times = [t]\n    n_values = [n]\n    while t &lt; t_max:\n        rate_gain = lambda_rate * (N - n)\n        rate_lose = lambda_rate * n\n        total_rate = rate_gain + rate_lose\n        if total_rate == 0:\n            break\n        dt = np.random.exponential(1.0 / total_rate)\n        t += dt\n        if t &gt; t_max:\n            break\n        if np.random.rand() &lt; rate_gain / total_rate:\n            n += 1\n        else:\n            n -= 1\n        times.append(t)\n        n_values.append(n)\n    return times, n_values\n\n# --- Simulation parameters ---\nN = 50\nmean_n = N / 2\nstd_n = 0.5 * np.sqrt(N)\nlambda_rate_sim = 1.0\n\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6))\nfig.suptitle('Stochastic Trajectories', fontsize=20, color='darkgreen')\n\n# Left: relaxation from far from equilibrium\nnum_trajectories = 4\nn_initial_short = 5\nt_max_short = 50\nfor i in range(num_trajectories):\n    times, n_values = simulate_ehrenfest_trajectory(N=N, n_initial=n_initial_short, lambda_rate=lambda_rate_sim, t_max=t_max_short)\n    ax1.step(times, n_values, where='post')\nax1.axhline(mean_n, color='orangered', linestyle='--', lw=2.5, label=r'$\\langle n \\rangle$')\nax1.axhline(mean_n + std_n, color='green', linestyle='-.', lw=2.5, label=r'$\\langle n \\rangle \\pm \\sigma$')\nax1.axhline(mean_n - std_n, color='green', linestyle='-.', lw=2.5)\nax1.set_xlabel('time'); ax1.set_ylabel('Fleas on Alice')\nax1.set_xlim(0, t_max_short); ax1.set_ylim(0, 38)\nax1.legend(loc='lower right'); ax1.grid(True)\n\n# Right: long equilibrium fluctuations\nn_initial_long = int(mean_n); t_max_long = 5000\ntimes_long, n_values_long = simulate_ehrenfest_trajectory(N=N, n_initial=n_initial_long, lambda_rate=lambda_rate_sim, t_max=t_max_long)\nax2.plot(times_long, n_values_long, lw=0.8)\nax2.axhline(mean_n, color='orangered', linestyle='--', lw=2.5)\nax2.axhline(mean_n + std_n, color='green', linestyle='-.', lw=2.5)\nax2.axhline(mean_n - std_n, color='green', linestyle='-.', lw=2.5)\nax2.set_xlabel('time'); ax2.set_xlim(0, t_max_long); ax2.set_ylim(0, 38); ax2.grid(True)\n\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code></pre> <p>The system quickly relaxes from \\(n=50\\) to \\(\\langle n\\rangle=25\\) and then fluctuates around the mean within roughly one standard deviation.</p>"},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/#42-verifying-the-equilibrium-distribution","title":"4.2 Verifying the Equilibrium Distribution","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.special import comb\nfrom collections import Counter\n\ndef simulate_ehrenfest_trajectory(N=50, n_initial=5, lambda_rate=1.0, t_max=50):\n    t = 0.0; n = n_initial\n    times, n_values = [t], [n]\n    while t &lt; t_max:\n        rate_gain = lambda_rate * (N - n)\n        rate_lose = lambda_rate * n\n        total_rate = rate_gain + rate_lose\n        if total_rate == 0: break\n        dt = np.random.exponential(1.0 / total_rate)\n        t += dt\n        if t &gt; t_max: break\n        if np.random.rand() &lt; rate_gain / total_rate:\n            n += 1\n        else:\n            n -= 1\n        times.append(t); n_values.append(n)\n    return times, n_values\n\ndef simulate_for_distribution(N=50, lambda_rate=1.0, num_steps=100000):\n    n = N // 2\n    n_counts = np.zeros(N + 1, dtype=int)\n    for _ in range(num_steps):\n        rate_gain = lambda_rate * (N - n)\n        rate_lose = lambda_rate * n\n        total_rate = rate_gain + rate_lose\n        if total_rate == 0: break\n        if np.random.rand() &lt; rate_gain / total_rate:\n            n += 1\n        else:\n            n -= 1\n        n_counts[n] += 1\n    return n_counts / num_steps\n\nN = 50; mean_n = N/2; std_n = 0.5*np.sqrt(N)\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6))\nfig.suptitle('Equilibrium Distribution', fontsize=20, color='darkgreen')\n\ntimes, n_values = simulate_ehrenfest_trajectory(N=N, n_initial=5, t_max=50)\nax1.step(times, n_values, where='post')\nax1.axhline(mean_n, color='orangered', linestyle='--', lw=2)\nax1.axhline(mean_n + std_n, color='green', linestyle='-.', lw=2)\nax1.axhline(mean_n - std_n, color='green', linestyle='-.', lw=2)\nax1.set_xlabel('time'); ax1.set_ylabel('Fleas on Alice')\nax1.set_xlim(0, 50); ax1.set_ylim(0, 35); ax1.grid(True)\n\nsimulated_dist = simulate_for_distribution(N=N, num_steps=5_000_000)\nn_range = np.arange(N + 1)\nanalytical_dist = comb(N, n_range) / (2**N)\nax2.bar(n_range, simulated_dist, width=1.0, label='simulation', alpha=0.7, color='steelblue', edgecolor='black', linewidth=0.8)\nax2.plot(n_range, analytical_dist, 'ko-', markerfacecolor='black', markeredgecolor='black', markersize=4, lw=1.0, label='analytic solution')\nax2.set_xlabel('Fleas on Alice'); ax2.set_ylabel('Probability')\nax2.set_xlim(12, 38); ax2.set_ylim(0, 0.125)\nax2.legend(); ax2.grid(axis='y', linestyle='--', alpha=0.7)\n\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code></pre> <p>The empirical distribution matches the binomial prediction.</p>"},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/#5-quantifying-relaxation-to-equilibrium-statistical-entropy-and-kl-divergence","title":"5. Quantifying Relaxation to Equilibrium: Statistical Entropy and KL Divergence","text":""},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/#51-timedependent-entropy","title":"5.1 Time\u2011Dependent Entropy","text":"<p>Gibbs/Shannon entropy over microstates \\(\\{\\sigma_i\\}\\):</p> \\[ S(t) := -\\sum_{\\{\\sigma_i\\}} p(\\{\\sigma_i\\}, t) \\ln p(\\{\\sigma_i\\}, t). \\]"},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/#52-from-micro-to-macro-entropy","title":"5.2 From Micro to Macro Entropy","text":"<p>Assume all \\(\\binom{N}{n}\\) microstates within a macrostate \\(n\\) are equally likely at time \\(t\\), so</p> \\[ p_n(t) = \\binom{N}{n}\\,p(\\{\\sigma_i\\}, t). \\] <p>Then</p> \\[ S(t) = -\\sum_{n=0}^{N} p_n(t) \\ln p_n(t) + \\sum_{n=0}^{N} p_n(t) \\ln \\binom{N}{n}. \\] <p>The first term is uncertainty over macrostates; the second is the expected Boltzmann entropy of microstates within each macrostate.</p>"},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/#53-kl-divergence-distance-to-equilibrium","title":"5.3 KL Divergence: Distance to Equilibrium","text":"<p>Define</p> \\[ H(t) = \\sum_n p_n(t) \\ln \\!\\left(\\frac{p_n(t)}{\\pi_n}\\right) \\ge 0, \\] <p>vanishing iff \\(p_n(t)=\\pi_n\\) for all \\(n\\). One finds a simple relation</p> \\[ H(t) = S_\\infty - S(t), \\] <p>so \\(H(t)\\) decreases monotonically to 0 as \\(S(t)\\) increases to its maximum \\(S_\\infty\\) (an H\u2011theorem statement).</p>"},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/#54-simulating-entropy-evolution","title":"5.4 Simulating Entropy Evolution","text":"<p>We simulate an ensemble to estimate \\(p_n(t)\\) over time.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.special import comb\n\ndef simulate_ensemble(N=30, n_initial=30, num_trajectories=5000, t_points=np.linspace(0, 15, 100)):\n    \"\"\"\n    Simulates an ensemble of Ehrenfest trajectories to calculate p_n(t).\n    Returns p_n_t with p_n_t[i, j] = p_j(t_i).\n    \"\"\"\n    # Tau-leaping approximation for speed (sufficient for demonstration)\n    p_n_t = np.zeros((len(t_points), N + 1))\n    p_n_t[0, n_initial] = 1.0\n    dt = t_points[1] - t_points[0] if len(t_points) &gt; 1 else 0\n    lambda_rate = 0.1\n    for i in range(1, len(t_points)):\n        p_prev = p_n_t[i-1, :]\n        p_curr = np.copy(p_prev)\n        for n in range(N + 1):\n            p_curr[n] -= p_prev[n] * lambda_rate * (n + (N - n)) * dt\n            if n &gt; 0:\n                p_curr[n] += p_prev[n-1] * lambda_rate * (N - (n - 1)) * dt\n            if n &lt; N:\n                p_curr[n] += p_prev[n+1] * lambda_rate * (n + 1) * dt\n        p_n_t[i, :] = p_curr\n    return p_n_t\n\nN = 30\nt_eval = np.linspace(0, 15, 150)\np_n_t = simulate_ensemble(N=N, n_initial=N, t_points=t_eval)\n\npi_n = comb(N, np.arange(N + 1)) / (2**N)\nlog_comb_N_n = np.log(comb(N, np.arange(N + 1)))\n\nS_t, H_t = [], []\nfor p_n in p_n_t:\n    p_n_safe = p_n[p_n &gt; 0]\n    pi_n_safe = pi_n[p_n &gt; 0]\n    term1 = -np.sum(p_n_safe * np.log(p_n_safe))\n    term2 = np.sum(p_n * log_comb_N_n)\n    S_t.append(term1 + term2)\n    H_t.append(np.sum(p_n_safe * np.log(p_n_safe / pi_n_safe)))\n\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6))\nax1.plot(t_eval, S_t); ax1.set_title('Statistical Entropy S(t)')\nax1.set_xlabel('Time'); ax1.set_ylabel('Entropy S(t)'); ax1.grid(True)\nax2.plot(t_eval, H_t); ax2.set_title('Kullback-Leibler Divergence H(t)')\nax2.set_xlabel('Time'); ax2.set_ylabel('KL Divergence H(t)'); ax2.grid(True)\nplt.tight_layout(); plt.show()\n</code></pre> <p></p> <p>We observe \\(S(t)\\) increasing from a low initial value and saturating at a maximum, while \\(H(t)\\) decreases to 0 \u2014 a vivid visualization of the second law in the Ehrenfest model.</p>"},{"location":"notes/10.%20Ehrenfest%20Model%2C%20Entropy%2C%20and%20KL%20Divergence/#summary-basic-insights-of-statistical-mechanics","title":"Summary: Basic Insights of Statistical Mechanics","text":"<p>Some basic insights:</p> <p>(i) A macroscopically imbalanced initial state overwhelmingly evolves toward more disordered, near\u2011equilibrium states.</p> <p>(ii) In equilibrium, fluctuations have no arrow of time.</p> <p>(iii) Large fluctuations away from equilibrium (to extremely improbable states) are exceedingly rare.</p> <p>(iv) A statistically determined arrow of time originates from the assumption that a system is prepared in a highly ordered, very improbable state. Even for small systems, \u201coverwhelmingly\u201d and \u201cexceedingly\u201d are conservative. The arrow of time reflects special low\u2011entropy initial conditions, not an intrinsic asymmetry of the microscopic laws.</p> <p></p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/","title":"Introduction","text":"<p>In previous lectures, Prof. Erwin Frey discussed Markov processes for systems with discrete states, such as molecule counts or gene switch states. Many phenomena in nature, however, are intrinsically continuous: a particle\u2019s position in a fluid, a concentration field in a chemical reaction, or a cell\u2019s migration in tissue. The goal of this lecture is to extend our Markov-process framework from discrete to continuous state spaces.</p> <p>This extension is not a trivial mathematical tweak; it reveals two distinct classes of stochastic dynamics and leads to two core evolution equations. For systems whose states undergo instantaneous changes of finite magnitude (e.g., molecular motor steps), we will derive an integro\u2013differential master equation. For systems whose states change continuously and smoothly (e.g., Brownian motion), we will derive the celebrated Fokker\u2013Planck equation, a partial differential equation.</p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#1-review-of-the-master-equation","title":"1. Review of the Master Equation","text":"<p>Before entering the world of continuous state spaces, we briefly review the key concepts and equations for discrete Markov processes\u2014the foundation on which the extension will be built.</p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#11-chapmankolmogorov-equation","title":"1.1 Chapman\u2013Kolmogorov Equation","text":"<p>The theoretical basis of all Markov processes is the Markov property: the future depends only on the present, not on the past. Its mathematical embodiment is the Chapman\u2013Kolmogorov equation:</p> \\[  p(n,t\\mid n_0,t_0) = \\sum_{n'} p(n,t\\mid n',t')\\, p(n',t'\\mid n_0,t_0) \\quad \\text{for } t_0 \\le t' \\le t. \\] <p>Physically, this says: the total probability of being in state \\(n\\) at time \\(t\\) starting from \\(n_0\\) at \\(t_0\\) equals the sum over all possible intermediate states \\(n'\\) at an intermediate time \\(t'\\). It describes how probability propagates via \\(t'\\).</p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#12-master-equation","title":"1.2 Master Equation","text":"<p>Writing the Chapman\u2013Kolmogorov equation in differential form yields the master equation for continuous-time evolution:</p> \\[  \\frac{d}{dt} p(t) = Q\\, p(t). \\] <p>Here \\(p(t)\\) is a column vector with elements \\(p(n,t)\\) (the probability of being in state \\(n\\) at time \\(t\\)), and \\(Q\\) is the transition-rate matrix.</p> <p>More concretely, the \u201cgain\u2013loss\u201d form is</p> \\[  \\partial_t p(n,t\\mid\\cdot) = \\sum_m w(n,m)\\, p(m,t\\mid\\cdot) - w(n)\\, p(n,t\\mid\\cdot), \\] <p>where \\(w(n,m)\\) is the rate from state \\(m\\) to \\(n\\), and the total outflow rate is \\(w(n)=\\sum_m w(m,n)\\). The interpretation is intuitive: the time rate of change of \\(p(n,t)\\) equals the total inflow from all other states minus the total outflow from \\(n\\).</p> <p>Rearranging terms gives the \u201cnet-current\u201d form:</p> \\[  \\partial_t p(n,t\\mid\\cdot) = \\sum_m \\big[ w(n,m)\\, p(m,t\\mid\\cdot) - w(m,n)\\, p(n,t\\mid\\cdot) \\big], \\] <p>highlighting the net probability current between each pair \\((n,m)\\).</p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#13-core-results-for-irreducible-markov-processes","title":"1.3 Core Results for Irreducible Markov Processes","text":"<p>For finite, irreducible Markov processes (every state can reach every other state in finitely many steps), we have:</p> <ul> <li>A unique steady-state distribution \\(p^{\\mathrm{ss}}\\) with strictly positive components.</li> <li>If the process is reversible, it satisfies detailed balance: \\(w(n,m)\\, p_m^{\\mathrm{ss}} = w(m,n)\\, p_n^{\\mathrm{ss}}\\). In steady state, the net current between any two states vanishes.</li> <li>If the process is irreversible, steady state exhibits sustained probability currents forming cycles.</li> <li>Irreversibility can be quantified by entropy production, reflecting asymmetry between forward and backward trajectories.</li> </ul> <p>These notions\u2014especially detailed balance\u2014are central to equilibrium physics and also underpin powerful computational methods such as Markov chain Monte Carlo.</p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#2-markov-chain-monte-carlo-mcmc","title":"2. Markov Chain Monte Carlo (MCMC)","text":"<p>Markov chain Monte Carlo (MCMC) was initiated by Nicholas Metropolis and coauthors in 1953 (the Metropolis algorithm) and later generalized by W. K. Hastings, among others.</p> <p>MCMC addresses a fundamental difficulty in physics and statistics: computing averages or sampling from complex distributions over enormous (even infinite) state spaces, where direct summation or integration is infeasible. The core idea is to \u201ctrade time for space\u201d: rather than exhaustively scanning the space, design a Markov chain that forgets its initial condition and converges to a unique steady-state distribution equal to the target (e.g., the Boltzmann distribution in physics).</p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#23-python-simulation-2d-ising-model","title":"2.3 Python Simulation: 2D Ising Model","text":"<p>To experience the Metropolis algorithm in a concrete setting, we simulate the classic 2D Ising model: a square lattice with spins \\(S_i=\\pm1\\) on each site and nearest-neighbor interactions. The Hamiltonian is</p> \\[  H = -J \\sum_{\\langle i,j \\rangle} S_i S_j, \\] <p>with \\(J=1\\) and \\(\\langle i,j \\rangle\\) denoting nearest neighbors. Aligned neighbors (\\(S_i S_j=1\\)) lower the energy by \\(J\\), while anti-aligned neighbors raise it by \\(J\\). At low temperature the system tends to a ferromagnetic state of uniform magnetization.</p> <p>The following Python code implements Metropolis sampling for the 2D Ising model.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n\ndef initialize_lattice(N):\n    \"\"\"\n    Initialize an N x N lattice with random spin states of +1 or -1.\n    \"\"\"\n    return 2 * np.random.randint(2, size=(N, N)) - 1\n\ndef calculate_energy_change(lattice, i, j):\n    \"\"\"\n    Calculate the energy change caused by flipping the spin at position (i, j).\n    Periodic boundary conditions are used.\n    \"\"\"\n    N = lattice.shape[0]\n    s_current = lattice[i, j]\n\n    # Find spin values of the four neighboring sites (top, bottom, left, right)\n    s_top = lattice[(i - 1) % N, j]\n    s_bottom = lattice[(i + 1) % N, j]\n    s_left = lattice[i, (j - 1) % N]\n    s_right = lattice[i, (j + 1) % N]\n\n    # Energy change dE = E_final - E_initial\n    # E_initial = -J * s_current * (s_top + s_bottom + s_left + s_right)\n    # E_final = -J * (-s_current) * (s_top + s_bottom + s_left + s_right)\n    # dE = E_final - E_initial = 2 * J * s_current * (sum of neighbors)\n    # Set J=1\n    dE = 2 * s_current * (s_top + s_bottom + s_left + s_right)\n    return dE\n\ndef metropolis_sweep(lattice, beta):\n    \"\"\"\n    Perform one complete Metropolis scan (N*N attempts).\n    beta = 1 / (k_B * T)\n    \"\"\"\n    N = lattice.shape[0]\n    for _ in range(N * N):\n        # Randomly select a lattice site\n        i, j = np.random.randint(0, N, size=2)\n\n        # Calculate energy change\n        dE = calculate_energy_change(lattice, i, j)\n\n        # Metropolis acceptance/rejection criterion\n        if dE &lt;= 0 or np.random.rand() &lt; np.exp(-beta * dE):\n            lattice[i, j] *= -1 # Accept flip\n\n    return lattice\n\n# --- Simulation parameters ---\nN = 50  # Lattice size\nT = 1.5 # Temperature (critical temperature Tc is approximately 2.269)\nbeta = 1.0 / T\nn_sweeps = 3000 # Total number of sweeps for simulation\nframe_interval = 50 # Record a frame every this many sweeps\n\n# --- Initialization ---\nlattice = initialize_lattice(N)\n\n# Set up visualization\nfig, ax = plt.subplots(figsize=(10, 8))\nim = ax.imshow(lattice, cmap='RdYlBu', vmin=-1, vmax=1, interpolation='nearest')\nax.set_title(f'2D Ising Model (T = {T:.2f}, Sweep = 0)', fontsize=16)\nax.set_axis_off()\n\n# Add color bar\ncbar = plt.colorbar(im, ax=ax, shrink=0.8)\ncbar.set_label('Spin', fontsize=14)\n\n# --- Simulation and animation ---\ndef update(frame):\n    global lattice\n    # Perform frame_interval sweeps\n    for _ in range(frame_interval):\n        lattice = metropolis_sweep(lattice, beta)\n    im.set_data(lattice)\n    ax.set_title(f'2D Ising Model (T = {T:.2f}, Sweep = {frame * frame_interval})', fontsize=16)\n    return [im]\n\n# Create animation\nani = FuncAnimation(fig, update, frames=n_sweeps // frame_interval,\n                    interval=100, blit=False, repeat=False)\n\nplt.tight_layout()\nplt.show()\n\n# Save as GIF file\n\nimport imageio\nprint(\"Saving animation as GIF file...\")\n\n    # Re-run simulation to capture all frames\nlattice_gif = initialize_lattice(N)\n\n    # Create images for GIF\nfig_gif, ax_gif = plt.subplots(figsize=(10, 8))\nim_gif = ax_gif.imshow(lattice_gif, cmap='RdYlBu', vmin=-1, vmax=1, interpolation='nearest')\nax_gif.set_title(f'2D Ising Model (T = {T:.2f}, Sweep = 0)', fontsize=16)\nax_gif.set_axis_off()\ncbar_gif = plt.colorbar(im_gif, ax=ax_gif, shrink=0.8)\ncbar_gif.set_label('Spin', fontsize=14)\n\nwith imageio.get_writer('ising_model.gif', mode='I', duration=0.1, loop=0) as writer:\n        # Save initial state\n    fig_gif.canvas.draw()\n    image_array = np.array(fig_gif.canvas.renderer._renderer)\n    writer.append_data(image_array[:, :, :3])\n    print(f\"Saved 0/{n_sweeps // frame_interval} frames\")\n\n        # Step through simulation and save each frame\n    for i in range(n_sweeps // frame_interval):\n        for _ in range(frame_interval):\n            lattice_gif = metropolis_sweep(lattice_gif, beta)\n        im_gif.set_data(lattice_gif)\n        ax_gif.set_title(f'2D Ising Model (T = {T:.2f}, Sweep = {(i+1) * frame_interval})', fontsize=16)\n        fig_gif.canvas.draw()\n        image_array = np.array(fig_gif.canvas.renderer._renderer)\n        writer.append_data(image_array[:, :, :3])\n\n        if (i+1) % 10 == 0:\n            print(f\"Saved {i+1}/{n_sweeps // frame_interval} frames\")\n\nplt.close(fig_gif)\n</code></pre> <p></p> <p>With temperature \\(T\\) below the critical value \\(T_c\\approx2.269\\) (e.g., \\(T=1.5\\)), the system evolves from a random \u201csalt-and-pepper\u201d configuration into large same-spin domains, and eventually to an almost fully ordered ferromagnetic state. This showcases how simple local rules (a detailed-balance acceptance criterion) guide the system to the global low-energy equilibrium, illustrating emergence from micro to macro.</p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#3-markov-processes-in-continuous-state-space","title":"3. Markov Processes in Continuous State Space","text":"<p>We now make the core leap of this lecture: generalizing from discrete states (e.g., spins \\(\\pm1\\)) to a continuous state space. The state variable \\(\\vec{X}(t)\\) takes values in a continuous domain, e.g., \\(\\vec{X}(t)\\in\\mathbb{R}^d\\). To build intuition, consider these examples.</p> <ul> <li> <p>Brownian motion. A pollen grain suspended in fluid is incessantly buffeted by molecules and performs an irregular motion. Its position \\(X(t)\\in\\mathbb{R}^3\\) is continuous in time; a trajectory is continuous but nowhere differentiable.</p> </li> <li> <p>Molecular motors.</p> </li> </ul> <p></p> <p></p> <p>Kinesin, for instance, walks along microtubules with steps of roughly 8 nm. A coarse-grained position \\(x(t)\\) along the track captures its motion. Underlying chemistry (ATP hydrolysis) is discrete, so the position path mixes discrete jumps with thermal fluctuations near binding sites.</p> <ul> <li>Bacterial chemotaxis (run-and-tumble).</li> </ul> <p></p> <p></p> <p>E. coli searches for nutrients using alternating \u201cruns\u201d (straight motion) and \u201ctumbles\u201d (sudden reorientation). The state requires at least position \\(x(t)\\) and direction \\(\\theta(t)\\), both continuous. Trajectories consist of smooth line segments punctuated by instantaneous direction changes.</p> <p>These examples preview the models we will build: Brownian motion is a pure diffusion process with continuous paths; kinesin stepping is a jump process with discontinuous paths; chemotaxis is a hybrid mixing both. They provide concrete physical contexts for the abstract equations to follow.</p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#4-sample-paths-and-evolution-equations","title":"4. Sample Paths and Evolution Equations","text":"<p>In continuous space, we describe states by a probability density function (PDF) \\(P(x,t)\\), where \\(P(x,t)\\,dx\\) is the probability of finding the system within an infinitesimal volume around \\(x\\) at time \\(t\\).</p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#41-two-types-of-paths","title":"4.1 Two Types of Paths","text":"<p>Based on the nature of sample paths over an infinitesimal time interval \\(\\Delta t\\), we distinguish two classes. The Kramers\u2013Moyal criterion examines how the probability of a displacement larger than any small \\(\\epsilon\\) scales with \\(\\Delta t\\).</p> <ul> <li> <p>Continuous sample paths. Changes are smooth; probability is transported locally by drift and spread by diffusion.</p> </li> <li> <p>Discontinuous (jump) paths. Changes occur via finite jumps; probability is transferred nonlocally between states via transition rates.</p> </li> </ul>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#42-continuous-space-master-equation-jump-processes","title":"4.2 Continuous-Space Master Equation (Jump Processes)","text":"<p>For jump processes in a continuous state space, probability flows via nonlocal transitions with rate density \\(w(x\\mid x';t)\\) from \\(x'\\) to \\(x\\). The evolution is governed by the continuous-space master equation (gain\u2013loss balance):</p> \\[  \\partial_t P(x,t\\mid\\cdot) = \\int dx'\\, \\Big[ w(x\\mid x';t)\\, P(x',t\\mid\\cdot) - w(x'\\mid x;t)\\, P(x,t\\mid\\cdot) \\Big]. \\]"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#43-fokkerplanck-equation-diffusion-processes","title":"4.3 Fokker\u2013Planck Equation (Diffusion Processes)","text":"<p>For processes with continuous paths, probability evolves locally under drift and diffusion characterized by drift vector \\(A_i(x,t)\\) and diffusion tensor \\(B_{ij}(x,t)\\). The Fokker\u2013Planck (Kolmogorov forward) equation reads</p> \\[  \\partial_t P(x,t\\mid\\cdot) = -\\partial_i\\big[ A_i(x,t)\\, P(x,t\\mid\\cdot) \\big] + \\tfrac{1}{2} \\, \\partial_i\\partial_j \\big[ B_{ij}(x,t)\\, P(x,t\\mid\\cdot) \\big]. \\] <p>This macroscopic, deterministic PDE for the probability density is determined by the microscopic stochastic increments (mean and covariance) of the underlying random walk. Although individual trajectories are unpredictable, the ensemble PDF follows a well-defined law.</p> <p>Fokker\u2013Planck equations appear across physics and beyond: statistical mechanics (relaxation to Boltzmann equilibrium), quantitative finance (e.g., Black\u2013Scholes), systems biology (gene-expression noise and intracellular fluctuations), neuroscience (stochastic membrane dynamics), meteorology and fluid mechanics (transport and dispersion in turbulence), and more.</p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#44-case-ii-pure-diffusion-and-the-fokkerplanck-equation","title":"4.4 Case II: Pure Diffusion and the Fokker\u2013Planck Equation","text":"<p>For processes with continuous sample paths, we cannot define jump rates because the system moves only within a neighborhood of its current position. Returning to the evolution of test-function averages, expand a smooth test function \\(f(x')\\) around \\(x\\) (Taylor expansion):</p> \\[  f(x') = f(x) + (x'_i - x_i)\\, \\partial_i f(x) + \\tfrac{1}{2} (x'_i - x_i)(x'_j - x_j)\\, \\partial_i\\partial_j f(x) + \\cdots. \\] <p>This introduces the moments of the infinitesimal increment \\(\\Delta x = x' - x\\). For diffusion processes, only the first two moments survive in the limit \\(\\Delta t\\to0\\). Define</p> <ul> <li>Drift vector \\(A_i(x,t)\\):</li> </ul> <p>$$   A_i(x,t) := \\lim_{\\Delta t\\to0} \\frac{1}{\\Delta t} \\int dx'\\, (x'i - x_i)\\, P(x', t+\\Delta t \\mid x,t)   \\equiv \\left. \\frac{\\langle \\Delta x_i \\rangle}{\\Delta t} \\right|{\\Delta t\\to0}.   $$</p> <ul> <li>Diffusion matrix \\(B_{ij}(x,t)\\):</li> </ul> <p>$$   B_{ij}(x,t) := \\lim_{\\Delta t\\to0} \\frac{1}{\\Delta t} \\int dx'\\, (x'i - x_i)(x'_j - x_j)\\, P(x', t+\\Delta t \\mid x,t)   \\equiv \\left. \\frac{\\langle \\Delta x_i\\, \\Delta x_j \\rangle}{\\Delta t} \\right|{\\Delta t\\to0}.   $$</p> <p>Inserting the expansion and integrating by parts (to shift derivatives from \\(f\\) to \\(P\\)) yields the Fokker\u2013Planck equation for the probability density \\(P(x,t)\\):</p> \\[  \\partial_t P(x,t\\mid\\cdot) = -\\partial_i\\big[ A_i(x,t)\\, P(x,t\\mid\\cdot) \\big] + \\tfrac{1}{2}\\, \\partial_i\\partial_j \\big[ B_{ij}(x,t)\\, P(x,t\\mid\\cdot) \\big]. \\] <p>It can be viewed as a local probability-conservation law \\(\\partial_t P = -\\partial_i J_i\\) with probability current</p> \\[  J_i(x,t) = A_i(x,t)\\, P(x,t) - \\tfrac{1}{2}\\, \\partial_j\\big[ B_{ij}(x,t)\\, P(x,t)\\big], \\] <p>that is, a sum of a drift current (\\(A_i P\\)) and a diffusion current (proportional to spatial gradients of \\(B_{ij} P\\)). The equation is deterministic at the PDF level\u2014given \\(P(x,0)\\), the time evolution \\(P(x,t)\\) is fixed\u2014while its coefficients \\(A_i\\) and \\(B_{ij}\\) encode the stochastic microscopic increments (mean and covariance).</p> <p>Applications span statistical physics (relaxation to Boltzmann equilibrium), quantitative finance (e.g., Black\u2013Scholes), systems biology (intracellular noise; gene expression), neuroscience (stochastic membrane dynamics), and geophysical/engineering transport (dispersion in turbulence).</p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#45-python-simulation-2d-brownian-motion","title":"4.5 Python Simulation: 2D Brownian Motion","text":"<p>To visualize diffusion and the solution to the Fokker\u2013Planck equation, consider free diffusion in 2D with zero drift (\\(A=0\\)) and isotropic diffusion \\(B_{ij}=2D\\,\\delta_{ij}\\). The Fokker\u2013Planck equation reduces to</p> \\[  \\partial_t P = D\\, \\nabla^2 P, \\] <p>whose solution is Gaussian with zero mean and variance growing linearly in time. A discrete-time approximation is the 2D random walk</p> \\[  \\vec X(t+\\Delta t) = \\vec X(t) + \\sqrt{2D\\,\\Delta t}\\, \\vec\\eta, \\] <p>where \\(\\vec\\eta\\) is a 2D standard normal vector. The following code simulates multiple trajectories, plots their endpoints and distributions, and creates an animation.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n\n# --- Simulation parameters ---\nn_walkers = 10      # Number of particles to simulate\nn_steps = 1000      # Number of steps for each particle\ndt = 0.01           # Time step size\nD = 1.0             # Diffusion coefficient\n\n# --- Simulation process ---\n# Generate random displacements for all steps\n# Shape is (n_walkers, n_steps, 2), representing (particle, step, x/y coordinates)\n# np.random.randn generates standard normal distribution random numbers\nrandom_displacements = np.random.randn(n_walkers, n_steps, 2) * np.sqrt(2 * D * dt)\n\n# Calculate trajectories for each particle\n# np.cumsum(..., axis=1) performs cumulative sum along the time step dimension\n# Initial position is (0,0)\ntrajectories = np.cumsum(random_displacements, axis=1)\n\n# --- Visualization ---\nfig, ax = plt.subplots(figsize=(8, 8))\n\n# Plot trajectory of each particle\nfor i in range(n_walkers):\n    # trajectories[i, :, 0] is all x coordinates of particle i\n    # trajectories[i, :, 1] is all y coordinates of particle i\n    ax.plot(trajectories[i, :, 0], trajectories[i, :, 1], alpha=0.7)\n\n# Mark start and end points\nstart_points = np.zeros((n_walkers, 2))\nend_points = trajectories[:, -1, :]  # Take the last point of each trajectory\nax.scatter(start_points[:, 0], start_points[:, 1], color='red', s=100, zorder=3, label='Start')\nax.scatter(end_points[:, 0], end_points[:, 1], color='green', s=50, zorder=3, label='End')\n\nax.set_title(f'2D Brownian Motion ({n_walkers} walkers, {n_steps} steps)')\nax.set_xlabel('X Position')\nax.set_ylabel('Y Position')\nax.legend()\nax.grid(True)\nax.set_aspect('equal', adjustable='box')\nplt.show()\n\n# --- Plot distribution of end points ---\nfig_hist, ax_hist = plt.subplots(figsize=(10, 8))\n\n# Increase number of particles to better show Gaussian distribution\nn_walkers_hist = 1000  # Increased number of particles\nrandom_displacements_hist = np.random.randn(n_walkers_hist, n_steps, 2) * np.sqrt(2 * D * dt)\ntrajectories_hist = np.cumsum(random_displacements_hist, axis=1)\nend_points_hist = trajectories_hist[:, -1, :]\n\n# Use more bins and better color mapping to show distribution\nhist_plot = ax_hist.hist2d(end_points_hist[:, 0], end_points_hist[:, 1], bins=50, cmap='hot')\nax_hist.set_title('Distribution of End Points\\n(2D Gaussian Distribution)', fontsize=16)\nax_hist.set_xlabel('Final X Position', fontsize=12)\nax_hist.set_ylabel('Final Y Position', fontsize=12)\nax_hist.set_aspect('equal', adjustable='box')\n\n# Add theoretical contour lines\nx_min, x_max = np.min(end_points_hist[:, 0]), np.max(end_points_hist[:, 0])\ny_min, y_max = np.min(end_points_hist[:, 1]), np.max(end_points_hist[:, 1])\nx = np.linspace(x_min, x_max, 100)\ny = np.linspace(y_min, y_max, 100)\nX, Y = np.meshgrid(x, y)\n# Theoretical variance\nsigma_squared = 2 * D * n_steps * dt\nZ = np.exp(-(X**2 + Y**2) / (2 * sigma_squared))\nax_hist.contour(X, Y, Z, levels=5, colors='blue', alpha=0.6, linewidths=1)\n\n# Add color bar\ncbar = plt.colorbar(hist_plot[3], ax=ax_hist, label='Number of walkers')\ncbar.set_label('Number of walkers', fontsize=12)\n\nplt.tight_layout()\nplt.show()\n\n# --- Plot 1D projection distributions ---\nfig_proj, (ax_x, ax_y) = plt.subplots(1, 2, figsize=(12, 5))\n\n# X-direction projection\nax_x.hist(end_points_hist[:, 0], bins=50, density=True, alpha=0.7, color='skyblue', edgecolor='black', linewidth=0.5)\n# Theoretical X-direction distribution\nsigma = np.sqrt(2 * D * n_steps * dt)\nx_range = np.linspace(np.min(end_points_hist[:, 0]), np.max(end_points_hist[:, 0]), 100)\ngaussian_x = 1/np.sqrt(2*np.pi*sigma**2) * np.exp(-x_range**2/(2*sigma**2))\nax_x.plot(x_range, gaussian_x, 'r-', linewidth=2, label=f'Theoretical Gaussian\\n$\\sigma^2 = {sigma**2:.2f}$')\nax_x.set_xlabel('X Position')\nax_x.set_ylabel('Probability Density')\nax_x.set_title('X Distribution')\nax_x.legend()\nax_x.grid(True, alpha=0.3)\n\n# Y-direction projection\nax_y.hist(end_points_hist[:, 1], bins=50, density=True, alpha=0.7, color='lightcoral', edgecolor='black', linewidth=0.5)\nax_y.plot(x_range, gaussian_x, 'r-', linewidth=2, label=f'Theoretical Gaussian\\n$\\sigma^2 = {sigma**2:.2f}$')\nax_y.set_xlabel('Y Position')\nax_y.set_ylabel('Probability Density')\nax_y.set_title('Y Distribution')\nax_y.legend()\nax_y.grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n\n# --- Create Brownian motion animation ---\nfig_anim, ax_anim = plt.subplots(figsize=(8, 8))\n\n# Set animation parameters\nn_frames = 200  # Number of animation frames\nstep_interval = n_steps // n_frames  # Steps between each frame\n\n# Initialize animation elements\nlines = [ax_anim.plot([], [], alpha=0.7)[0] for _ in range(n_walkers)]\npoints = ax_anim.scatter([], [], color='red', s=50, zorder=3)\n\n# Set axes\nax_anim.set_xlim(np.min(trajectories[:, :, 0]), np.max(trajectories[:, :, 0]))\nax_anim.set_ylim(np.min(trajectories[:, :, 1]), np.max(trajectories[:, :, 1]))\nax_anim.set_title('2D Brownian Motion Animation')\nax_anim.set_xlabel('X Position')\nax_anim.set_ylabel('Y Position')\nax_anim.grid(True)\nax_anim.set_aspect('equal', adjustable='box')\n\ndef animate(frame):\n    # Calculate which step to display for current frame\n    step = min(frame * step_interval, n_steps - 1)\n\n    # Update each trajectory\n    for i in range(n_walkers):\n        lines[i].set_data(trajectories[i, :step, 0], trajectories[i, :step, 1])\n\n    # Update current point positions\n    current_points = trajectories[:, step, :]\n    points.set_offsets(current_points)\n\n    ax_anim.set_title(f'2D Brownian Motion (Step {step}/{n_steps})')\n    return lines + [points]\n\n# Create animation\nanim = FuncAnimation(fig_anim, animate, frames=n_frames, interval=50, blit=False, repeat=True)\nplt.show()\n\n# Save animation as GIF\ntry:\n    import imageio\n    import io\n    from PIL import Image\n\n    print(\"Saving Brownian motion animation as GIF file...\")\n\n    # Create temporary image list\n    images = []\n\n    # Generate animation frames\n    for frame in range(0, n_frames, 2):  # Take every other frame to reduce file size\n        animate(frame)\n        fig_anim.canvas.draw()\n\n        # Convert figure to image\n        buf = io.BytesIO()\n        fig_anim.savefig(buf, format='png', dpi=100)\n        buf.seek(0)\n        img = Image.open(buf)\n        images.append(img)\n\n        if frame % 20 == 0:\n            print(f\"Processed {frame}/{n_frames} frames\")\n\n    # Save as GIF\n    images[0].save('brownian_motion.gif', save_all=True, append_images=images[1:], \n                   duration=100, loop=0)\n    print(\"Animation saved as brownian_motion.gif\")\n\nexcept ImportError:\n    print(\"Missing libraries required to save GIF (imageio or PIL), please install: pip install imageio pillow\")\n\nplt.show()\n</code></pre> <p></p> <p>Ten independent walkers start at the origin (red dot) and follow 1,000-step trajectories. Each colored curve is one possible history. The Fokker\u2013Planck equation does not track any particular path; it governs the time evolution of the ensemble probability \u201ccloud\u201d formed by many such paths.</p> <p>Increasing the number of particles to 10,000 and plotting only endpoints yields a heatmap approximating the 2D Gaussian predicted by the diffusion equation from a delta-function initial condition. The overlaid blue contours are the theoretical iso-probability curves; simulation and theory agree.</p> <p>Projecting the 2D distribution onto \\(x\\)- and \\(y\\)-axes gives one-dimensional Gaussian marginals. Although motion is in 2D, each orthogonal component follows an independent 1D Brownian motion.</p>"},{"location":"notes/11.%20Continuous%20Markov%20Processes%20and%20the%20Fokker%E2%80%93Planck%20Equation/#summary","title":"Summary","text":"<p>We discussed pure jump and pure diffusion processes. Many real systems combine both, as in run-and-tumble motion. A unified evolution equation combines a Fokker\u2013Planck term with a continuous-space master-equation term:</p> \\[ \\partial_t P(\\vec x,t\\mid\\cdot) = \\underbrace{-\\partial_i\\big[A_i(\\vec x,t)P\\big] + \\tfrac{1}{2}\\, \\partial_i\\partial_j\\big[B_{ij}(\\vec x,t)P\\big]}_{\\text{drift and diffusion (Fokker\u2013Planck)}} + \\underbrace{\\int d x'\\,\\big[ w(\\vec x\\mid\\vec x';t) P(\\vec x',t\\mid\\cdot) - w(\\vec x'\\mid\\vec x;t) P(\\vec x,t\\mid\\cdot) \\big]}_{\\text{jumps (master equation)}}. \\] <p>Thus, continuous-state stochastic processes split into two broad classes by path regularity: jump processes, described by a continuous-space master equation, and diffusion processes, described by a Fokker\u2013Planck equation. Hybrid dynamics combine both contributions.</p>"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/","title":"Introduction: The Fokker\u2013Planck Equation as a Unifying Framework","text":"<p>In the previous lecture we introduced the Fokker\u2013Planck equation (FPE), a universal and powerful framework for the time evolution of probability density functions in continuous-state Markov processes.</p> <p>For one-dimensional systems, the generic FPE reads</p> \\[ \\frac{\\partial P(x,t)}{\\partial t} = -\\frac{\\partial}{\\partial x}\\big[A(x)\\,P(x,t)\\big] + D(x)\\,\\frac{\\partial^2}{\\partial x^2} P(x,t), \\] <p>where \\(P(x,t)\\) is the PDF of finding the particle at \\(x\\) at time \\(t\\). The equation contains two core parts describing two basic physical mechanisms:</p> <ul> <li>Drift term, with coefficient \\(A(x)\\). This encodes deterministic, systematic influences (a force) and represents the local mean velocity at \\(x\\), pushing the distribution\u2019s center toward preferred directions/locations (e.g., gravity, spring restoring force).</li> <li>Diffusion term, with coefficient \\(D(x)\\). This quantifies random kicks from thermal fluctuations and spreads the distribution in time. \\(D(x)\\) is directly tied to the variance of displacements.</li> </ul> <p>The FPE follows from the Chapman\u2013Kolmogorov equation via the Kramers\u2013Moyal expansion, under a key physical simplification: in an infinitesimal \\(\\Delta t\\), only the first (mean) and second (variance) moments of the displacement are significant; higher moments can be neglected. This holds for dynamics built from many small, independent random events (e.g., countless molecular collisions), so by the central limit theorem the net displacement approaches a Gaussian process. Thus the FPE captures phenomena driven by smooth deterministic forces plus fine-grained, approximately Gaussian noise.</p> <p></p> <p>We now study two fundamental special cases within this framework: the Wiener process and the Ornstein\u2013Uhlenbeck (O\u2013U) process. They represent, respectively, pure diffusion and diffusion with a linear restoring force, and will reveal core principles of stochastic dynamics.</p>"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#1-wiener-process-prototype-of-pure-diffusion","title":"1. Wiener Process \u2014 Prototype of Pure Diffusion","text":"<p>The Wiener process is the mathematically rigorous formulation of Brownian motion. It models a particle\u2019s random motion driven solely by thermal fluctuations, with no external force or potential.</p>"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#11-basic-properties","title":"1.1 Basic Properties","text":"<p>Define the moments of the infinitesimal displacement \\(\\Delta x\\) over time \\(\\Delta t\\):</p> <p>Zero drift:</p> \\[ A = \\lim_{\\Delta t\\to0} \\frac{\\langle \\Delta x \\rangle}{\\Delta t} = 0, \\] <p>meaning there is no directional bias; left/right are equally likely and the ensemble-averaged displacement is zero.</p> <p>Constant diffusion:</p> \\[ B = \\lim_{\\Delta t\\to0} \\frac{\\langle (\\Delta x)^2 \\rangle}{\\Delta t} = 2D, \\] <p>with diffusion coefficient \\(D&gt;0\\). Hence the mean-squared displacement (MSD) scales linearly in time, \\(\\langle(\\Delta x)^2\\rangle=2D\\,\\Delta t\\). The uncertainty (spread) grows like \\(\\sqrt{t}\\); \\(D\\) has units [length]\\(^2\\)/[time].</p> <p>With \\(A(x)=0\\) and \\(D(x)=D\\) constant, the FPE becomes the diffusion equation:</p>"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#12-diffusion-equation-and-its-solution","title":"1.2 Diffusion Equation and Its Solution","text":"<p>The diffusion equation describes evolution driven purely by random motion. For a particle located at \\(x_0\\) at \\(t_0\\), i.e., \\(P(x,t_0\\mid x_0,t_0)=\\delta(x-x_0)\\), the solution is Gaussian:</p> \\[ P(x,t\\mid x_0,t_0) = \\frac{1}{\\sqrt{4\\pi D (t-t_0)}} \\exp\\!\\left[-\\frac{(x-x_0)^2}{4D (t-t_0)}\\right],\\quad t&gt;t_0. \\] <p>This has mean \\(\\langle x\\rangle=x_0\\) and variance \\(\\operatorname{Var}[x]=2D (t-t_0)\\).</p>"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#13-computational-lab-i-simulating-brownian-motion-in-python","title":"1.3 Computational Lab I: Simulating Brownian Motion in Python","text":"<p>We simulate: (1) single trajectories and (2) an ensemble distribution obeying the diffusion equation.</p> <p>1) Single-trajectory simulation</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# Parameters\nD = 1.0      # diffusion coefficient\nT = 5.0      # total time\ndt = 0.001   # time step\nn_steps = int(T/dt)\nn_traj = 5   # number of independent trajectories\n\n# Simulate\nt = np.linspace(0, T, n_steps+1)\ntraj = np.zeros((n_traj, n_steps+1))\nfor i in range(n_traj):\n    xi = np.zeros(n_steps+1)\n    for k in range(n_steps):\n        xi[k+1] = xi[k] + np.sqrt(2*D*dt)*np.random.randn()\n    traj[i] = xi\n\n# Plot\nplt.figure(figsize=(10,6))\nfor i in range(n_traj):\n    plt.plot(t, traj[i], alpha=0.8)\nplt.xlabel('Time')\nplt.ylabel('Position')\nplt.title('Sample Trajectories of 1D Brownian Motion (Wiener Process)')\nplt.grid(True, ls='--', alpha=0.5)\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p> <p>Each path is continuous yet jagged; Wiener paths are continuous everywhere but nowhere differentiable. Since \\(\\Delta X\\propto\\sqrt{\\Delta t}\\), the finite-difference \u201cvelocity\u201d \\(\\Delta X/\\Delta t\\) diverges as \\(\\Delta t\\to0\\), hence SDEs use differentials \\(dX(t)\\) rather than time derivatives.</p> <p>2) Ensemble evolution and comparison to theory</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n\n# Parameters\nD = 1.0\nT = 5.0\ndt = 0.01\nnum_steps = int(T/dt)\nnum_particles = 10000\nx0 = 0.0\n\nx = np.full(num_particles, x0)\nsnapshots = {}\nsnapshot_times = [0.1, 1.0, 5.0]\n\nfor i in range(num_steps):\n    t_current = (i + 1) * dt\n    x = x + np.sqrt(2 * D * dt) * np.random.randn(num_particles)\n    for ts in snapshot_times:\n        if np.isclose(t_current, ts):\n            snapshots[ts] = x.copy()\n\nplt.figure(figsize=(12,7))\nbins = np.linspace(-15, 15, 101)\nfor ts, positions in snapshots.items():\n    plt.hist(positions, bins=bins, density=True, alpha=0.6, label=f'Sim t={ts}s')\n    mean_th = x0\n    var_th = 2 * D * ts\n    std_th = np.sqrt(var_th)\n    xs = np.linspace(-15, 15, 400)\n    plt.plot(xs, norm.pdf(xs, loc=mean_th, scale=std_th), 'k--', lw=2, label=f'Theory t={ts}s')\n\nplt.title('Ensemble Position Distributions vs Diffusion Equation (Gaussian)')\nplt.xlabel('x')\nplt.ylabel('PDF')\nplt.grid(True, ls='--', alpha=0.5)\nplt.legend()\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p> <p>The ensemble histograms match the Gaussian solution, demonstrating how macroscopic determinism (the PDE) emerges from microscopic randomness.</p>"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#2-ornsteinuhlenbeck-process-constrained-diffusion","title":"2. Ornstein\u2013Uhlenbeck Process \u2014 Constrained Diffusion","text":"<p>Many systems are constrained. The Ornstein\u2013Uhlenbeck (O\u2013U) process augments diffusion with a linear restoring force.</p>"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#21-physical-system-brownian-particle-in-a-harmonic-potential-well","title":"2.1 Physical System: Brownian Particle in a Harmonic Potential Well","text":"<p>Consider a small particle in fluid, buffeted by thermal noise and tethered by a harmonic potential</p> \\[ U(x) = \\tfrac{1}{2} k x^2. \\] <p>The restoring force is \\(F_{\\rm restore}=-\\nabla U=-k x\\). In low-Reynolds-number flow (negligible inertia), this balances Stokes\u2019 drag \\(F_{\\rm drag}=\\zeta\\,\\dot x\\) with friction coefficient \\(\\zeta=6\\pi\\eta R\\). Force balance gives</p> \\[ -kx=\\zeta\\,\\dot x \\quad\\Rightarrow\\quad \\dot x = -\\frac{k}{\\zeta} x \\equiv -\\gamma x, \\] <p>with relaxation rate \\(\\gamma=k/\\zeta\\) and relaxation time \\(\\tau=1/\\gamma\\). Thus the drift is linear: \\(A(x)=-\\gamma x\\) (mean reversion). Thermal kicks yield constant diffusion \\(B=2D\\).</p>"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#22-governing-equation-and-solution","title":"2.2 Governing Equation and Solution","text":"<p>Insert \\(A(x)=-\\gamma x\\) and constant \\(D\\) into the FPE:</p> \\[ \\frac{\\partial P}{\\partial t} = \\frac{\\partial}{\\partial x}\\big[\\gamma x\\, P\\big] + D\\, \\frac{\\partial^2 P}{\\partial x^2}. \\] <p>We solve via Fourier transform and method of characteristics. Define the characteristic function</p> \\[ \\phi(k,t) := \\int_{-\\infty}^{\\infty} e^{ikx} P(x,t)\\,dx. \\] <p>It obeys</p> \\[ \\frac{\\partial \\phi}{\\partial t} + \\gamma k\\, \\frac{\\partial \\phi}{\\partial k} = -D k^2\\, \\phi. \\] <p>Along characteristics \\(dk/dt=-\\gamma k \\Rightarrow k(t)=k_0 e^{-\\gamma t}\\), the total derivative satisfies</p> \\[ \\frac{d\\phi}{dt} = -D\\, k(t)^2\\, \\phi \\quad\\Rightarrow\\quad \\phi(t) = \\phi(0) \\exp\\!\\left(-D \\int_0^t k_0^2 e^{-2\\gamma t'} dt'\\right) = \\phi(0) \\exp\\!\\left(-\\frac{D k_0^2}{2\\gamma}(1-e^{-2\\gamma t})\\right). \\] <p>For initial \\(P(x,0)=\\delta(x-x_0)\\), \\(\\phi(0)=e^{ik_0 x_0}\\). Using \\(k_0=k e^{\\gamma t}\\) yields</p> \\[ \\phi(k,t) = \\exp\\!\\left( i k x_0 e^{-\\gamma t} - \\frac{D k^2}{2\\gamma} (1-e^{-2\\gamma t}) \\right). \\]"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#23-dynamical-interpretation","title":"2.3 Dynamical Interpretation","text":"<p>This is the characteristic function of a Gaussian. Comparing to \\(\\exp\\big( i k\\, \\langle x\\rangle - \\tfrac{1}{2} k^2\\,\\operatorname{Var}(x)\\big)\\) gives</p> <p>Mean:</p> \\[ \\langle x \\rangle(t) = x_0 e^{-\\gamma t}. \\] <p>Variance:</p> \\[ \\operatorname{Var}[x](t) = \\frac{D}{\\gamma} \\big(1 - e^{-2\\gamma t}\\big), \\] <p>so at short times \\(\\operatorname{Var}\\approx 2Dt\\) (free diffusion limit), while as \\(t\\to\\infty\\) it saturates at the steady-state value \\(D/\\gamma\\). The O\u2013U process thus reaches a stationary Gaussian with mean 0 and variance \\(D/\\gamma\\).</p>"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#24-computational-lab-ii-simulating-a-confined-particle","title":"2.4 Computational Lab II: Simulating a Confined Particle","text":"<p>The SDE is</p> \\[  dX(t) = -\\gamma X(t)\\,dt + \\sqrt{2D}\\, dW(t), \\] <p>with Euler\u2013Maruyama update</p> \\[  X(t+\\Delta t) = X(t) - \\gamma X(t)\\, \\Delta t + \\sqrt{2D\\,\\Delta t}\\, N(0,1). \\] <p>1) Single-trajectory example</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nD = 1.0\ngamma = 0.5\nT = 50.0\ndt = 0.01\nn = int(T/dt)\n\nt = np.linspace(0, T, n+1)\nx = np.zeros(n+1)\nx[0] = 10.0\n\nfor i in range(n):\n    x[i+1] = x[i] - gamma*x[i]*dt + np.sqrt(2*D*dt)*np.random.randn()\n\nplt.figure(figsize=(10,6))\nplt.plot(t, x, label='Trajectory')\nplt.axhline(0, color='r', ls='--', label='Equilibrium (x=0)')\nplt.title('O\u2013U Process: Single Trajectory in a Harmonic Well')\nplt.xlabel('Time')\nplt.ylabel('x')\nplt.grid(True, ls='--', alpha=0.5)\nplt.legend()\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p> <p>2) Ensemble mean and variance vs theory</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nD = 1.0\ngamma = 0.5\nT = 10.0\ndt = 0.01\nn = int(T/dt)\nN = 10000\nx0 = 5.0\n\nt = np.linspace(0, T, n+1)\nX = np.full((N, n+1), x0)\nmean_sim = np.zeros(n+1)\nvar_sim = np.zeros(n+1)\nmean_sim[0] = x0\nvar_sim[0] = 0.0\n\nfor i in range(n):\n    X[:, i+1] = X[:, i] - gamma*X[:, i]*dt + np.sqrt(2*D*dt)*np.random.randn(N)\n    mean_sim[i+1] = X[:, i+1].mean()\n    var_sim[i+1] = X[:, i+1].var()\n\nmean_the = x0*np.exp(-gamma*t)\nvar_the = (D/gamma)*(1 - np.exp(-2*gamma*t))\n\nfig, (ax1, ax2) = plt.subplots(2, 1, figsize=(10,9), sharex=True)\nax1.plot(t, mean_sim, 'o', ms=4, label='Sim mean')\nax1.plot(t, mean_the, 'r-', lw=2.5, label='Theory mean')\nax1.set_ylabel('\u27e8x\u27e9')\nax1.set_title('Ornstein\u2013Uhlenbeck: Mean and Variance')\nax1.grid(True, ls='--', alpha=0.5)\nax1.legend()\n\nax2.plot(t, var_sim, 'o', ms=4, label='Sim var')\nax2.plot(t, var_the, 'r-', lw=2.5, label='Theory var')\nax2.axhline(D/gamma, color='k', ls='--', label=f'Steady var D/\u03b3 = {D/gamma:.2f}')\nax2.set_xlabel('Time')\nax2.set_ylabel('Var[x]')\nax2.grid(True, ls='--', alpha=0.5)\nax2.legend()\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p>"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#25-wiener-vs-ornsteinuhlenbeck-a-comparison","title":"2.5 Wiener vs Ornstein\u2013Uhlenbeck: A Comparison","text":"Feature Wiener process Ornstein\u2013Uhlenbeck process Physical picture Free dust in unbounded space Bead tethered by a spring in fluid Drift \\(A(x)\\) 0 (no bias) \\(-\\gamma x\\) (linear restoring; mean reversion) Diffusion \\(D(x)\\) \\(D\\) (const.) \\(D\\) (const.) FPE \\(\\partial_t P = D\\, \\partial_x^2 P\\) \\(\\partial_t P = \\partial_x(\\gamma x P) + D\\, \\partial_x^2 P\\) Mean \\(\\langle x\\rangle(t)\\) \\(x_0\\) (constant) \\(x_0 e^{-\\gamma t}\\) (decays to 0) Variance \\(\\operatorname{Var}[x](t)\\) \\(2Dt\\) (unbounded linear growth) \\(\\tfrac{D}{\\gamma}(1-e^{-2\\gamma t})\\) (saturates) Steady state None (unbounded diffusion) Gaussian with variance \\(D/\\gamma\\)"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#3-einsteinstokes-relation-a-deep-link-between-fluctuation-and-dissipation","title":"3. Einstein\u2013Stokes Relation: A Deep Link Between Fluctuation and Dissipation","text":""},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#31-bridge-to-thermodynamics","title":"3.1 Bridge to Thermodynamics","text":"<p>As \\(t\\to\\infty\\), the O\u2013U process reaches a steady state: a time-invariant Gaussian at the origin with variance</p> \\[ \\langle x^2 \\rangle_{\\rm ss} = \\operatorname{Var}_{\\rm ss} = \\frac{D}{\\gamma}. \\] <p>This corresponds physically to thermal equilibrium with the environment.</p>"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#32-equipartition-theorem","title":"3.2 Equipartition Theorem","text":"<p>For a harmonic potential \\(U(x)=\\tfrac{1}{2} k x^2\\), equipartition gives</p> \\[ \\langle U \\rangle = \\left\\langle \\tfrac{1}{2} k x^2 \\right\\rangle = \\tfrac{1}{2} k \\langle x^2 \\rangle = \\tfrac{1}{2} k_B T, \\] <p>so</p> \\[ \\langle x^2 \\rangle_{\\rm eq} = \\frac{k_B T}{k}. \\]"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#33-derivation-and-insight","title":"3.3 Derivation and Insight","text":"<p>Equating the two expressions for the same equilibrium quantity,</p> \\[ \\frac{D}{\\gamma} = \\frac{k_B T}{k}, \\qquad \\gamma = \\frac{k}{\\zeta} = \\frac{k}{6\\pi\\eta R}, \\] <p>yields the Einstein\u2013Stokes relation</p> \\[ D = \\frac{k_B T}{6\\pi\\eta R} = \\frac{k_B T}{\\zeta}. \\]"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#34-fluctuationdissipation-theorem-fdt","title":"3.4 Fluctuation\u2013Dissipation Theorem (FDT)","text":"<ul> <li>Fluctuation: \\(D\\) measures microscopic random agitation from the thermal bath.</li> <li>Dissipation: \\(\\zeta=6\\pi\\eta R\\) quantifies macroscopic energy loss (drag) in driven motion.</li> </ul> <p>The Einstein\u2013Stokes relation shows they are two faces of the same microscopic interactions with the bath. Temperature \\(T\\) links the strength of fluctuations and of dissipation.</p>"},{"location":"notes/12.%20Brownian%20Motion%20and%20the%20Ornstein%E2%80%93Uhlenbeck%20Process/#summary","title":"Summary","text":"<p>The O\u2013U process offers an analytically tractable \u201claboratory\u201d containing both fluctuation (\\(D\\)) and dissipation (via \\(\\gamma\\) and \\(\\zeta\\)). Solving its dynamics and comparing the steady state to equilibrium thermodynamics yields a constructive proof of FDT. The principle reaches far beyond Brownian motion, e.g., Johnson\u2013Nyquist noise of resistors in electronics.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/","title":"Introduction: From Analytical Theory to a Computational Tool","text":"<p>This lecture is TA-led. In the past several sessions, Prof. Erwin Frey has built a powerful theoretical framework for understanding and describing stochastic processes. Starting from the basics of Markov processes, we derived the Chapman-Kolmogorov equation, and then obtained the master equation and the Fokker-Planck equation. We also discussed steady states, the detailed-balance condition, and the Perron-Frobenius theorem, which provide deep insight into how systems reach and maintain equilibrium.</p> <p>So far our perspective has been analytical: given a stochastic process (defined by its transition rates), we analyze its behavior, e.g., what the steady-state distribution is. In this lecture, we shift from analysis to synthesis and application. We show how the Markov-process framework - especially Markov chains - can be turned into a practical computational tool to solve a fundamental problem across the sciences: statistical inference, i.e., learning model parameters from data.</p> <p>By cleverly designing a Markov process whose stationary distribution is exactly a target distribution, we can generate samples from that distribution and thereby solve otherwise intractable integrals. This approach is called Markov chain Monte Carlo (MCMC). It has transformed Bayesian statistics and many scientific fields that rely on computational modeling.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#1-problem-statement-inferring-models-from-real-world-data","title":"1. Problem Statement: Inferring Models from Real-World Data","text":"<p>A core task in science is to build and validate mathematical models from observations. A good model not only explains existing data but also predicts the future. The predictive power of a model depends entirely on its parameters. How do we determine unknown parameters from experimental or observational data?</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#11-a-classic-ecosystem-lynx-and-hare","title":"1.1 A Classic Ecosystem: Lynx and Hare","text":"<p>To make it concrete, consider a classic ecological example: the predator-prey dynamics of Canadian lynx (predator) and snowshoe hare (prey). The Hudson's Bay Company recorded pelts from 1900 to 1920; these counts are regarded as reliable proxies for population sizes.</p> <p></p> <p></p> <p>Plotting the data reveals periodic oscillations in both species, with the predator peak lagging behind the prey peak.</p> <p></p> <p>A natural question is: can we find a mathematical model that explains and predicts this periodic behavior? More specifically, can we infer the \"laws\" (parameters) that govern the dynamics from the data?</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#12-lotka-volterra-model-a-mathematical-description","title":"1.2 Lotka-Volterra Model: A Mathematical Description","text":"<p>A famous model for predator-prey systems is the Lotka-Volterra equations, a pair of coupled ODEs describing changes in two populations. Let \\(x\\) be the hare (prey) population and \\(y\\) the lynx (predator) population:</p> \\[ \\frac{dx}{dt} = \\alpha x - \\beta xy \\quad \\text{(hares)} \\] \\[ \\frac{dy}{dt} = -\\gamma y + \\delta xy \\quad \\text{(lynx)} \\] <p>Interpretation of each term:</p> <ul> <li>\\(\\alpha x\\): natural exponential growth of hares in the absence of predators (\\(y=0\\)); \\(\\alpha\\) is the hare birth rate.</li> <li>\\(-\\beta xy\\): loss of hares due to predation; encounter frequency \\(\\propto xy\\); \\(\\beta\\) is predation efficiency.</li> <li>\\(-\\gamma y\\): natural death of lynx in the absence of food (\\(x=0\\)); \\(\\gamma\\) is the lynx death rate.</li> <li>\\(+\\delta xy\\): lynx reproduction thanks to predation; proportional to \\(xy\\); \\(\\delta\\) is the conversion efficiency from prey to predator growth.</li> </ul> <p>The \"laws\" are encoded in \\(\\theta=\\{\\alpha,\\beta,\\gamma,\\delta\\}\\). Given observations \\(D\\) (the time series), parameter inference asks for the most plausible \\(\\theta\\).</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#2-bayesian-framework-a-systematic-approach","title":"2. Bayesian Framework: A Systematic Approach","text":"<p>How can we systematically learn parameters \\(\\theta\\) from data \\(D\\)? Bayesian inference provides a probability-based, logically coherent framework: it is fundamentally a rule for updating degrees of belief in light of new evidence.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#21-introducing-bayes-theorem","title":"2.1 Introducing Bayes' Theorem","text":"<p>Bayesian inference formalizes learning from data via</p> \\[ \\underbrace{p(\\theta\\mid D)}_{\\text{posterior}} = \\frac{\\underbrace{p(D\\mid\\theta)}_{\\text{likelihood}}\\, \\underbrace{p(\\theta)}_{\\text{prior}}}{\\underbrace{p(D)}_{\\text{evidence}}}. \\]"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#22-decomposing-bayes-theorem","title":"2.2 Decomposing Bayes' Theorem","text":"<ul> <li>Prior \\(p(\\theta)\\): knowledge/belief before seeing data.</li> <li>Likelihood \\(p(D\\mid\\theta)\\): plausibility of data under parameters.</li> <li>Evidence \\(p(D)\\): normalization; often intractable.</li> <li>Posterior \\(p(\\theta\\mid D)\\): what we want to characterize/sample.</li> </ul> <p>Bayesian thinking differs from traditional \"best-fit\" approaches (e.g., least squares). Classical methods may return a single best parameter set. In contrast, Bayesian methods say: there is no single \"correct\" \\(\\theta\\) - instead there is a landscape of plausibilities over parameter space. One region may be very plausible while another is unlikely.</p> <p>This probabilistic perspective is powerful. It lets us ask deeper questions such as: \"What is the probability that the hare birth rate \\(\\alpha\\) lies between 0.5 and 0.6?\" or \"Are the predation rate \\(\\beta\\) and the lynx death rate \\(\\gamma\\) correlated?\" This represents a shift from deterministic to probabilistic thinking that honestly reflects our uncertainty given finite data.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#3-computational-bottleneck-high-dimensional-integrals","title":"3. Computational Bottleneck: High-Dimensional Integrals","text":"<p>Having a posterior \\(p(\\theta\\mid D)\\) solves inference in principle, but in practice we often need summaries such as expectations and variances.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#31-from-distributions-to-expectations","title":"3.1 From Distributions to Expectations","text":"<p>Model comparison, prediction, and uncertainty quantification are often expectations under the posterior. For a function \\(f(\\theta)\\) (e.g., \\(f(\\theta)=\\alpha\\) to compute the mean of \\(\\alpha\\)), we need to evaluate</p> \\[ \\langle f(\\theta) \\rangle = \\int f(\\theta)\\, p(\\theta\\mid D)\\, d\\theta^n, \\] <p>an integral over the full \\(n\\)-dimensional parameter space (here \\(n=4\\)). We also encounter the evidence (normalization) itself,</p> \\[ p(D) = \\int p(D\\mid\\theta)\\, p(\\theta)\\, d\\theta, \\] <p>which is frequently the hardest quantity in Bayesian inference.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#32-the-curse-of-dimensionality","title":"3.2 The Curse of Dimensionality","text":"<p>Why are these integrals so hard? Direct gridding explodes with dimension. Suppose we take 10 grid points per parameter:</p> <ul> <li>1D: \\(10^1=10\\) evaluations.</li> <li>2D: \\(10^2=100\\) evaluations.</li> <li>4D (our Lotka-Volterra case): \\(10^4=10{,}000\\) evaluations.</li> <li>20D: \\(10^{20}\\) evaluations - utterly infeasible.</li> </ul> <p>Worse, high-dimensional geometry defeats low-dimensional intuition: the posterior mass typically concentrates in a tiny, irregular region, while most of the space has near-zero density.</p> <p></p> <p>Uniform grids are blind; they waste almost all effort evaluating points where \\(p(\\theta\\mid D)\\approx 0\\). The \"curse of dimensionality\" is not just slowness, but a fundamental scaling barrier. The problem is search efficiency: in an exponentially large space, we must find a small, unknown \"important\" region. We need a different strategy that focuses effort where it matters.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#4-a-new-strategy-monte-carlo-integration","title":"4. A New Strategy: Monte Carlo Integration","text":"<p>Facing high-dimensional integrals, we turn to a smarter approach: Monte Carlo integration replaces deterministic grids with random sampling.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#41-power-of-the-law-of-large-numbers","title":"4.1 Power of the Law of Large Numbers","text":"<p>Monte Carlo integration uses the law of large numbers to approximate integrals by sample averages:</p> \\[ \\langle f(\\theta) \\rangle = \\int f(\\theta)\\, p(\\theta\\mid D)\\, d\\theta \\;\\approx\\; \\frac{1}{N} \\sum_{i=1}^{N} f\\big(\\theta^{(i)}\\big). \\] <p>The \"magic\" lies in how we generate the samples \\(\\{\\theta^{(i)}\\}\\).</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#42-importance-sampling-the-key-insight","title":"4.2 Importance Sampling: The Key Insight","text":"<p>To make the approximation accurate and efficient, the samples should be drawn from the target itself, \\(p(\\theta\\mid D)\\). This is the essence of importance sampling: by drawing from the target, computation automatically focuses on high-probability regions - the very regions that dominate the integral - rather than wasting effort in probability \"deserts\".</p> <p>This reframes the problem: instead of integrating, we \"just\" need to sample from a complex, high-dimensional, and even unnormalized distribution \\(p(\\theta\\mid D)\\) (since \\(p(D)\\) is unknown). Embracing randomness becomes the way to overcome the curse of dimensionality. What we need is not an integrator, but a sampler.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#5-generating-samples-via-stochastic-processes-mcmc","title":"5. Generating Samples via Stochastic Processes: MCMC","text":"<p>How do we build a machine that samples from an arbitrary \\(p(\\theta\\mid D)\\)? The answer returns to Markov chains.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#51-toolbox-recap-markov-chains-and-stationary-distributions","title":"5.1 Toolbox Recap: Markov Chains and Stationary Distributions","text":"<p>Recall key ideas (Lectures 6-8):</p> <ul> <li>Markov chain: a memoryless stochastic process; the future depends only on the present.</li> <li>Stationary distribution \\(\\pi\\): under conditions such as ergodicity, the chain converges to a limiting distribution \\(\\pi\\).</li> <li>Perron-Frobenius theorem: provides existence/uniqueness guarantees for broad classes.</li> <li>Detailed balance (sufficient condition): \\(\\pi(\\theta)\\, W(\\theta'\\mid\\theta) = \\pi(\\theta')\\, W(\\theta\\mid\\theta')\\), where \\(W\\) is the transition rule.</li> </ul>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#52-core-idea-of-mcmc","title":"5.2 Core Idea of MCMC","text":"<p>Design a Markov chain whose unique stationary distribution equals the target posterior \\(\\pi(\\theta)=p(\\theta\\mid D)\\). Then:</p> <p>1) Pick any initial point \\(\\theta^{(0)}\\). 2) Evolve the chain according to its transition rule. 3) Run long enough to \"forget\" the initial condition (burn-in). 4) Record the subsequent states \\(\\{\\theta^{(i)}\\}\\).</p> <p>By the definition of stationarity, \\(\\{\\theta^{(i)}\\}\\) are samples from \\(p(\\theta\\mid D)\\). This inverts the usual direction of analysis: earlier we learned \"given \\(W\\), find \\(\\pi\\)\"; now we ask \"given desired \\(\\pi\\), construct \\(W\\)\" - and detailed balance provides the blueprint.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#6-metropolis-hastings-algorithm-a-practical-recipe","title":"6. Metropolis-Hastings Algorithm: A Practical Recipe","text":"<p>How do we construct a suitable \\(W\\) in practice? The Metropolis-Hastings (MH) algorithm provides a general and powerful recipe for building a Markov chain with any target distribution.</p> <p>Historically, Metropolis et al. (1953) introduced the symmetric-proposal version to tackle high-dimensional problems in physics; Hastings (1970) generalized it to asymmetric proposals. Today MH is central across Bayesian computation and many other fields.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#61-algorithm-metropolis-hastings-mh","title":"6.1 Algorithm: Metropolis-Hastings (MH)","text":"<p>Metropolis (1953) introduced the symmetric-proposal version; Hastings (1970) generalized to asymmetric proposals. MH is ubiquitous in Bayesian computation and beyond.</p> <p>Steps:</p> <p>1) Initialize with any \\(\\theta^{(0)}\\). 2) For \\(i=1,2,\\dots,N\\): - Propose \\(\\theta' \\sim q(\\theta'\\mid \\theta^{(i-1)})\\) (e.g., Gaussian random walk). - Compute acceptance probability   $$   A(\\theta'\\mid\\theta) = \\min\\Bigl(1, \\frac{p(\\theta')\\, q(\\theta\\mid\\theta')}{p(\\theta)\\, q(\\theta'\\mid\\theta)}\\Bigr),   $$   where \\(p(\\theta)\\) denotes the (unnormalized) target \\(p(\\theta\\mid D)\\). - Draw \\(u\\sim\\mathrm{Unif}(0,1)\\). If \\(u&lt;A\\), accept (\\(\\theta^{(i)}=\\theta'\\)); else reject (\\(\\theta^{(i)}=\\theta^{(i-1)}\\)).</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#62-why-it-works-enforcing-detailed-balance","title":"6.2 Why It Works: Enforcing Detailed Balance","text":"<p>The MH acceptance rule ensures detailed balance and thus the target stationary distribution. Two key ratios appear in \\(A(\\theta'\\mid\\theta)\\):</p> <ul> <li>Target ratio \\(\\dfrac{p(\\theta')}{p(\\theta)}\\): if the proposal moves to a higher-probability region, this ratio exceeds 1 and the move is always accepted; if lower, the move is accepted with some probability, enabling exploration beyond just the peaks.</li> <li>Proposal correction \\(\\dfrac{q(\\theta\\mid\\theta')}{q(\\theta'\\mid\\theta)}\\): compensates for any asymmetry or bias in proposals. With a symmetric proposal (e.g., Gaussian random walk), this factor is 1 and we recover the original Metropolis rule \\(A=\\min\\bigl(1, p(\\theta')/p(\\theta)\\bigr)\\).</li> </ul> <p>Crucially, the evidence \\(p(D)\\) cancels in ratios:</p> \\[ \\frac{p(\\theta\\mid D)}{p(\\theta'\\mid D)} = \\frac{p(D\\mid\\theta)\\,p(\\theta)}{p(D\\mid\\theta')\\,p(\\theta')}. \\] <p>Hence we only need likelihood and prior up to constants. This neatly sidesteps the hardest normalization in Bayesian inference while retaining correctness via detailed balance.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#7-using-mcmc-for-lotka-volterra-parameter-inference","title":"7. Using MCMC for Lotka-Volterra Parameter Inference","text":"<p>We now apply MH to infer \\((\\alpha,\\beta,\\gamma,\\delta)\\) from the Hudson's Bay data. The ODE model lacks a simple closed-form solution; for each parameter set we integrate numerically, making the posterior highly nontrivial - an ideal use case for MCMC. This case illustrates an end-to-end workflow: start from data, posit a mechanistic model, define a Bayesian posterior, and sample it via a carefully designed stochastic process.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#71-modeling-plan","title":"7.1 Modeling Plan","text":"<p>1) Model: Lotka-Volterra ODEs. 2) Data: 1900-1920 hare (H) and lynx (L) counts. 3) Target: posterior \\(p(\\alpha,\\beta,\\gamma,\\delta\\mid\\text{data})\\). 4) Method: MH sampler in 4D parameter space. - Posterior \\(\\propto\\) likelihood \\(\\times\\) prior.   - Likelihood: compare model predictions with data, e.g., log-normal errors.   - Prior: weakly informative (wide normals or uniforms). - Proposal: Gaussian random walk.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#72-python-implementation","title":"7.2 Python Implementation","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import odeint\nfrom scipy.stats import norm\n\n# 1. Load data\n# Data source: https://github.com/stan-dev/example-models\n# Year, Lynx (x1000), Hare (x1000)\ndata = np.array([\n    [1900, 4.0, 30.0], [1901, 6.1, 47.2], [1902, 9.8, 70.2],\n    [1903, 35.2, 77.4], [1904, 59.4, 36.3], [1905, 41.7, 20.6],\n    [1906, 19.0, 18.1], [1907, 13.0, 21.4], [1908, 8.3, 22.0],\n    [1909, 9.1, 25.4], [1910, 7.4, 27.1], [1911, 8.0, 40.3],\n    [1912, 12.3, 57.0], [1913, 19.5, 76.6], [1914, 45.7, 52.3],\n    [1915, 51.1, 19.5], [1916, 29.7, 11.2], [1917, 15.8, 7.6],\n    [1918, 9.7, 14.6], [1919, 10.1, 16.2], [1920, 8.6, 24.7]\n])\nyears = data[:, 0]\nlynx_data = data[:, 1]\nhare_data = data[:, 2]\ny_obs = np.vstack((hare_data, lynx_data)).T # Observed data [H, L]\n\n# 2. Define Lotka-Volterra model\ndef lotka_volterra(y, t, alpha, beta, gamma, delta):\n    \"\"\"\n    Lotka-Volterra differential equations\n    y: [H, L] population array\n    t: time\n    alpha, beta, gamma, delta: model parameters\n    \"\"\"\n    H, L = y\n    dH_dt = alpha * H - beta * H * L\n    dL_dt = delta * H * L - gamma * L\n    return [dH_dt, dL_dt]\n\n# 3. Define log posterior probability function\ndef log_posterior(theta, y_obs, t_obs):\n    alpha, beta, gamma, delta = theta\n\n    # a. Log-Prior\n    # Assume parameters follow wide normal distributions, and must be positive\n    if any(p &lt;= 0 for p in theta):\n        return -np.inf\n    log_prior_alpha = norm.logpdf(alpha, loc=1, scale=1)\n    log_prior_beta = norm.logpdf(beta, loc=0.05, scale=0.05)\n    log_prior_gamma = norm.logpdf(gamma, loc=1, scale=1)\n    log_prior_delta = norm.logpdf(delta, loc=0.02, scale=0.02)\n    log_p = log_prior_alpha + log_prior_beta + log_prior_gamma + log_prior_delta\n\n    # b. Log-Likelihood\n    # Initial conditions use the first point of data\n    y0 = y_obs[0, :]\n    # Numerically solve differential equations using odeint\n    y_pred = odeint(lotka_volterra, y0, t_obs, args=(alpha, beta, gamma, delta))\n\n    # Assume errors follow a log-normal distribution, equivalent to log-transformed data following a normal distribution\n    # We also need to estimate a standard deviation sigma for the error\n    # For simplicity, we fix a reasonable sigma value here\n    sigma = 0.5 \n    log_likelihood = np.sum(norm.logpdf(np.log(y_obs), loc=np.log(y_pred), scale=sigma))\n\n    return log_p + log_likelihood\n\n# 4. Implement Metropolis-Hastings MCMC\ndef metropolis_hastings(log_posterior_func, n_iter, initial_theta, proposal_std, y_obs, t_obs):\n    # Initialization\n    n_params = len(initial_theta)\n    chain = np.zeros((n_iter, n_params))\n    chain[0, :] = initial_theta\n\n    current_log_post = log_posterior_func(initial_theta, y_obs, t_obs)\n\n    accepted_count = 0\n\n    for i in range(1, n_iter):\n        if i % 1000 == 0:\n            print(f\"Iteration {i}/{n_iter}...\")\n\n        # a. Propose new point\n        proposal_theta = np.random.normal(loc=chain[i-1, :], scale=proposal_std)\n\n        # b. Calculate acceptance probability\n        proposal_log_post = log_posterior_func(proposal_theta, y_obs, t_obs)\n\n        log_alpha = proposal_log_post - current_log_post\n\n        # c. Accept or reject\n        if np.log(np.random.rand()) &lt; log_alpha:\n            chain[i, :] = proposal_theta\n            current_log_post = proposal_log_post\n            accepted_count += 1\n        else:\n            chain[i, :] = chain[i-1, :]\n\n    print(f\"Acceptance rate: {accepted_count / n_iter:.2f}\")\n    return chain\n\n# 5. Run MCMC\nn_iterations = 50000\nburn_in = 10000 # Discard early unstable samples\ninitial_params = [1.0, 0.05, 1.0, 0.02] # Initial guess\nproposal_widths = [0.05, 0.001, 0.05, 0.001] # Proposal distribution standard deviation, needs tuning\nt_span = np.arange(len(years)) # Time points (0, 1, 2, ...)\n\nchain = metropolis_hastings(log_posterior, n_iterations, initial_params, proposal_widths, y_obs, t_span)\n\n# Discard burn-in and thin if desired\nposterior_samples = chain[burn_in:, :]\n\n# 6. Diagnostics and visualization\nparam_names = [r\"alpha (hares)\", r\"beta (predation)\", r\"gamma (lynx)\", r\"delta (conversion)\"]\n\n# a. Trace plots\nplt.figure(figsize=(15, 8))\nfor i in range(4):\n    plt.subplot(2, 2, i+1)\n    plt.plot(posterior_samples[:, i])\n    plt.title(f'Trace of {param_names[i]}')\n    plt.xlabel('Iteration')\n    plt.ylabel('Parameter Value')\nplt.tight_layout()\nplt.show()\n\n# b. Plot posterior distributions\nplt.figure(figsize=(15, 8))\nfor i in range(4):\n    plt.subplot(2, 2, i+1)\n    plt.hist(posterior_samples[:, i], bins=50, density=True, alpha=0.6)\n    plt.title(f'Posterior of {param_names[i]}')\n    plt.xlabel('Parameter Value')\n    plt.ylabel('Density')\nplt.tight_layout()\nplt.show()\n\n# c. Plot model predictions vs. real data\nplt.figure(figsize=(12, 6))\n# Randomly sample some parameter combinations from the posterior distribution for simulation\nn_samples_plot = 100\nsample_indices = np.random.randint(0, len(posterior_samples), n_samples_plot)\n\nfor idx in sample_indices:\n    params = posterior_samples[idx, :]\n    y_pred = odeint(lotka_volterra, y_obs[0,:], t_span, args=tuple(params))\n    plt.plot(years, y_pred[:, 0], color='skyblue', alpha=0.1) # Predicted hares\n    plt.plot(years, y_pred[:, 1], color='lightcoral', alpha=0.1) # Predicted lynx\n\n# Plot original data points\nplt.plot(years, hare_data, 'o-', color='blue', label='Observed Hares')\nplt.plot(years, lynx_data, 'o-', color='red', label='Observed Lynx')\nplt.xlabel('Year')\nplt.ylabel('Population (x1000)')\nplt.title('Lotka-Volterra Model Fit to Hudson Bay Data')\nplt.legend()\nplt.grid(True)\nplt.show()\n</code></pre> <p>Trace plots: show sampled values per parameter across iterations. Ideally we see \"caterpillar-like\" fluctuations around a stable region (the chain has forgotten its initial state and explores the typical set). Strong trends suggest insufficient burn-in or poor proposals (slow mixing).</p> <p></p> <p>Posterior distributions: histograms visualize uncertainty; tall-narrow peaks indicate strong constraints, wide-flat shapes indicate weak information.</p> <p></p> <p>Model predictions vs data: thin translucent lines are trajectories from 100 posterior samples, forming a credible band. Observed points lie mostly within, indicating the Lotka-Volterra model with inferred parameters captures the historical predator-prey cycles.</p>"},{"location":"notes/13.%20Monte%20Carlo%20Sampling%20as%20a%20Stochastic%20Process/#conclusion","title":"Conclusion","text":"<p>This lecture turns stochastic-process theory from a purely analytical tool into a practical computational engine. Starting from a real scientific problem - inferring model parameters from data - we saw how the Bayesian framework defines the target posterior, but direct computation is blocked by the curse of dimensionality.</p> <p>MCMC, especially Metropolis-Hastings, provides an elegant way out: by reframing sampling as the steady state of a constructed Markov chain and enforcing detailed balance, we both avoid the evidence and gain an efficient exploration strategy for complex high-dimensional spaces.</p> <p>This bridges the theoretical first half of the course with applied methods, showing how deep theory becomes an immediately useful tool. MCMC and its variants are cornerstones of modern computational statistics, machine learning, and many quantitative sciences; mastering their core ideas opens the door to much more complex models.</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/","title":"Introduction: Overcoming the Inefficiency of Random Walks","text":"<p>This lecture, taught by the TA, introduces a more powerful Markov chain Monte Carlo (MCMC) method designed to overcome the main weakness of the standard Metropolis-Hastings algorithm: its inefficient \"random-walk\" exploration in state space. The method borrows ideas from classical mechanics to construct a more intelligent proposal mechanism.</p> <p></p> <p>The core idea is to stop taking random, directionless steps and instead regard the sampling variables as a particle moving in a potential energy field. By simulating its physical trajectory, we can propose new states that are far from the current one but still have high acceptance probability. This enables much faster exploration and convergence, especially in high dimensions.</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#1-review-metropolis-hastings-and-its-limitations","title":"1. Review: Metropolis-Hastings and Its Limitations","text":"<p>As discussed in the previous lecture Monte Carlo Sampling as a Stochastic Process, our goal is to construct a Markov chain whose stationary distribution equals the target distribution p(theta) we wish to sample. The Metropolis-Hastings algorithm provides a general scheme for this.</p> <p>The algorithm proposes a new state theta' from a proposal distribution q(theta'|theta) and accepts it with probability alpha. As emphasized at the start of the lecture, this acceptance probability is the key to satisfying detailed balance. In general form:</p> \\[\\alpha(\\theta'|\\theta) = \\min\\left(1, \\frac{p(\\theta)q(\\theta'|\\theta)}{p(\\theta')q(\\theta|\\theta')}\\right)\\] <p>This ratio corrects any asymmetry in the proposal q and biases the chain toward states of higher p. If we propose a move to a high-probability region, the factor p(theta') is large and alpha increases. If our proposal makes it easier to go from theta to theta' than to return, the factor q(theta|theta')/q(theta'|theta) compensates, ensuring the chain is not trapped in regions that are easy to enter but hard to leave.</p> <p>A common simplification is to use a symmetric proposal, q(theta'|theta) = q(theta'|theta). Then the acceptance reduces to:</p> \\[\\alpha = \\min\\left(1, \\frac{p(\\theta')}{p(\\theta)}\\right)\\] <p>This is the Metropolis algorithm, a special case of Metropolis-Hastings. Crucially, the normalization constant Z of p(theta) cancels in the ratio, which is a major practical advantage: we only need the unnormalized form of p(theta).</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#random-walk-metropolis-hastings-and-its-fatal-pitfall","title":"\"Random-Walk\" Metropolis-Hastings and Its Fatal Pitfall","text":"<p>A very common symmetric proposal is a Gaussian centered at the current state:</p> \\[q(\\theta'|\\theta) = \\mathcal{N}(\\theta'|\\theta, \\sigma^2)\\] <p>This is intuitive and easy to implement, but it is precisely where inefficiency originates. The performance of the random walk depends critically on the step size sigma.</p> <ul> <li>Small sigma: proposals remain very close to the current state. Since p(theta) changes little, acceptance is high. However, the chain moves slowly and explores diffusively. This yields strong sample autocorrelation and demands very long chains to obtain effectively independent samples. The chain may get stuck near local probability peaks.</li> <li>Large sigma: exploration could be faster in principle. But for any moderately complex distribution, a large random jump is likely to land in a region of much lower probability (the \"typical set\" of a distribution is often a thin shell rather than a solid ball). Acceptance alpha collapses and the chain stalls.</li> </ul> <p>The dilemma becomes severe in high dimensions. In 1D, a random step has about a 50% chance of pointing in a \"useful\" direction. In D dimensions, volume grows exponentially, and a random step almost surely points away from the narrow regions of high probability. Efficiency decays exponentially with D.</p> <p>This trade-off makes random-walk Metropolis-Hastings unsuitable for complex, high-dimensional targets common in modern Bayesian statistics, machine learning, and physics. We need proposals that are both far-reaching and likely to be accepted.</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#2-a-new-view-recasting-probability-as-potential-energy","title":"2. A New View: Recasting Probability as Potential Energy","text":"<p>To overcome the fundamental limitation of random-walk exploration in high dimensions, we need a more intelligent strategy. The inspiration comes from a cornerstone model in statistical physics - the Ising model.</p> <p>In the Ising model, the probability of a microscopic configuration (e.g., a string of up/down spins, denoted by {sigma}) is fully determined by its energy and the temperature, taking the elegant Boltzmann form:</p> \\[p(\\{\\sigma\\}) = \\frac{1}{Z} e^{-\\beta H(\\{\\sigma\\})}\\] <p>Here H is the Hamiltonian (energy) of the configuration, beta is an inverse-temperature parameter, and Z normalizes the probability to one. This suggests a powerful reinterpretation for generic sampling tasks: treat the negative log-density as potential energy.</p> <p></p> <p>Specifically, for a target density p(theta), define the energy (potential)</p> \\[E(\\theta) = -\\log p(\\theta) + \\text{constant}\\] <p>Equivalently, one can write the Boltzmann-style relation</p> \\[p(\\theta) \\propto e^{-E(\\theta)}.\\] <p>so that high-probability regions correspond to low \"energy.\" This opens the door to using dynamics to navigate the landscape.</p> <p>This seemingly simple change of variables is a conceptual leap that reshapes how we view sampling:</p> <ol> <li>From blind to directed: the original task of finding high-p(theta) regions in high dimensions becomes exploring low-E(theta) valleys. A purely statistical task turns into navigating an energy landscape with clear physical intuition.</li> <li>Introducing \"force\": random walks are blind to terrain. In physics, motion is driven by force, which here is the negative gradient of potential:</li> </ol> <p>\\(\\(F = -\\nabla E(\\theta) = -\\nabla(-\\log p(\\theta)) = \\nabla \\log p(\\theta)\\)\\)</p> <p>This force always points toward increasing probability density, providing a principled direction for efficient exploration.</p> <p>Historical note. The idea of leveraging Hamiltonian dynamics for sampling originated in lattice gauge theory. The pioneering Hybrid (Hamiltonian) Monte Carlo work by Duane, Kennedy, Pendleton, and Roweth (1987) addressed high-dimensional integrals in lattice QCD. The method was later popularized in statistics and machine learning - most notably by Radford Neal - and has become a cornerstone of modern Bayesian inference.</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#3-building-a-hamiltonian-system-introduce-momentum","title":"3. Building a Hamiltonian System: Introduce Momentum","text":""},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#31-why-introduce-momentum","title":"3.1 Why Introduce Momentum?","text":"<p>If we only follow the gradient of log p(theta), we would perform steepest-descent-like moves that get trapped or move slowly along narrow valleys. Introducing a fictitious momentum variable v allows us to simulate inertial motion that can traverse long distances while respecting the geometry of the target.</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#32-define-the-hamiltonian-htheta-v","title":"3.2 Define the Hamiltonian H(theta, v)","text":"<p>Augment the parameter theta with momentum v and define the Hamiltonian as the sum of potential and kinetic energies:</p> \\[H(\\theta, v) = E(\\theta) + K(v) = -\\log p(\\theta) + \\frac{1}{2} v^{\\top} M^{-1} v\\] <p>where M is a positive-definite mass matrix (often the identity or a preconditioning matrix). The joint density over (theta, v) becomes a Gibbs distribution proportional to exp(-H(theta, v)).</p> <ul> <li>Momentum v: encodes speed and direction of exploration in parameter space.</li> <li>Mass matrix M: a key tuning element.</li> <li>Simple choice: M = I assumes equal \"mass\" in all directions so the system responds uniformly to forces.</li> <li>Deeper use: choosing M aligned with the target covariance makes \"narrow\" directions heavier (more cautious moves) and \"wide\" directions lighter (bolder moves), greatly improving efficiency for correlated targets.</li> </ul>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#33-canonical-gibbs-joint-distribution","title":"3.3 Canonical (Gibbs) Joint Distribution","text":"<p>The augmented target becomes</p> \\[\\pi(\\theta, v) \\propto \\exp\\big(-H(\\theta, v)\\big) = p(\\theta)\\, \\exp\\!\\left(-\\tfrac{1}{2} v^{\\top} M^{-1} v\\right)\\] <p>which factorizes into the original target p(theta) and an independent Gaussian over v. Resampling v from this Gaussian at each iteration enables the sampler to jump across level sets and explore the landscape rather than follow a single deterministic path.</p> <p>Importantly, momentum is only an auxiliary variable used to drive exploration. After proposing and (possibly) accepting a new state, we discard v and retain only theta, so the collected samples are marginally distributed according to the original target p(theta).</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#4-a-step-by-step-guide-to-hamiltonian-monte-carlo","title":"4. A Step-by-Step Guide to Hamiltonian Monte Carlo","text":""},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#41-step-1-resample-momentum","title":"4.1 Step 1: Resample Momentum","text":"<p>Sample a fresh momentum \\( \\tilde v \\sim \\mathcal{N}(0, M) \\). This randomization is what makes HMC a valid MCMC method: it allows the sampler to jump between energy level sets and explore the landscape. Without it, the dynamics would be purely deterministic and stuck on a single level set.</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#42-step-2-evolve-by-hamiltons-equations","title":"4.2 Step 2: Evolve by Hamilton's Equations","text":"<p>Given a start (theta, \\(\\tilde v\\)), simulate the dynamics for a fixed time T to propose (theta', v') using Hamilton's equations:</p> \\[\\frac{d\\theta}{dt} = \\frac{\\partial H}{\\partial v} = M^{-1} v\\] \\[\\frac{dv}{dt} = -\\frac{\\partial H}{\\partial \\theta} = -\\nabla_\\theta E(\\theta) = \\nabla_\\theta \\log p(\\theta)\\] <p>Interpretation: - The first equation says position changes at velocity \\(M^{-1} v\\). - The second is Newton's second law: momentum changes with the force, the negative gradient of potential. The particle is \"pulled\" toward lower energy (higher probability).</p> <p>This is the heart of HMC's power: unlike random walks, trajectories are guided by the gradient of log p(theta), naturally steering toward and through high-probability regions. We can thus propose a theta' far from theta yet still plausible, yielding high acceptance.</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#43-step-3-numerical-integration-via-the-leapfrog-method","title":"4.3 Step 3: Numerical Integration via the Leapfrog Method","text":"<p>Hamilton's equations are continuous ODEs and generally have no closed form, so we approximate trajectories numerically. Simple schemes like Euler quickly accumulate error and fail to conserve energy, leading to low acceptance. HMC uses a symplectic integrator, typically the leapfrog method, which preserves the geometric structure.</p> <p>For a small step size epsilon, one leapfrog step is:</p> <ol> <li>\\( v(t + \\tfrac{\\epsilon}{2}) = v(t) - (\\tfrac{\\epsilon}{2}) \\, \\nabla_\\theta E(\\theta(t)) = v(t) + (\\tfrac{\\epsilon}{2}) \\, \\nabla_\\theta \\log p(\\theta(t)) \\)</li> <li>\\( \\theta(t + \\epsilon) = \\theta(t) + \\epsilon M^{-1} v(t + \\tfrac{\\epsilon}{2}) \\)</li> <li>\\( v(t + \\epsilon) = v(t + \\tfrac{\\epsilon}{2}) - (\\tfrac{\\epsilon}{2}) \\, \\nabla_\\theta E(\\theta(t + \\epsilon)) = v(t + \\tfrac{\\epsilon}{2}) + (\\tfrac{\\epsilon}{2}) \\, \\nabla_\\theta \\log p(\\theta(t + \\epsilon)) \\)</li> </ol> <p>Repeat L = T/epsilon times to simulate total time T.</p> <p>Why this scheme? Symplectic integrators such as leapfrog have two key properties:</p> <ol> <li>Time reversibility: Simulating L steps from (theta, v) to (theta', v'), then flipping momentum to -v' and running L steps brings you exactly to (theta, -v). This is crucial for detailed balance.</li> <li>Volume preservation: The map in (theta, v) phase space preserves volume, so it does not artificially compress or rarify probability mass - essential for valid MCMC transitions.</li> </ol> <p>Although leapfrog does not conserve H exactly (it incurs O(epsilon^2) energy error), it has excellent long-term stability and preserves the geometry needed for high acceptance rates even after many steps.</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#44-step-4-metropolis-hastings-correction","title":"4.4 Step 4: Metropolis-Hastings Correction","text":"<p>After L leapfrog steps we obtain a proposal (theta', v'). Because numerical integration is approximate, total energy is not perfectly conserved and H(theta', v') will slightly differ from H(theta, \\(\\tilde v\\)). We make the algorithm exact by applying a final Metropolis acceptance step:</p> \\[\\alpha = \\min\\left(1, \\exp\\big[-(H(\\theta', v') - H(\\theta, \\tilde{v}))\\big]\\right)\\] <p>This is profound: in HMC, the accept/reject step is not the main driver of exploration (the dynamics are). Instead, it acts as a quality-control check on the integrator. If integration keeps energy nearly constant (H' ~ H), then alpha ~ 1. If epsilon is too large, errors increase, energy drifts, and proposals are (rightfully) rejected.</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#5-visualizing-hmc-vs-random-walk-metropolis","title":"5. Visualizing HMC vs. Random-Walk Metropolis","text":"<p>The animations make the contrast clear. To build intuition, we compare a simple Random-Walk Metropolis (RWM) sampler to HMC on a correlated 2D Gaussian target - a classic test where correlations frustrate axis-aligned random walkers.</p> <p>The code below implements and compares the two algorithms.</p> <ol> <li>Target distribution: log-density (negative potential) and its gradient for a correlated 2D Gaussian.</li> <li>RWM sampler: standard random-walk Metropolis.</li> <li>HMC sampler: leapfrog integrator plus the full HMC loop.</li> <li>Visualization: sample paths over contour lines of the target.</li> </ol> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import multivariate_normal\n\n# --- Target distribution (correlated 2D Gaussian distribution) --- \n# This defines our \"potential energy field\"\nmean = np.array([0.0, 0.0])\ncov = np.array([[1.0, 0.95], \n                [0.95, 1.0]])\ninv_cov = np.linalg.inv(cov)\ntarget_dist = multivariate_normal(mean, cov)\n\ndef potential_energy(theta):\n    \"\"\" Potential energy U(theta) = -log p(theta) \"\"\"\n    return -target_dist.logpdf(theta)\n\ndef grad_potential_energy(theta):\n    \"\"\" Gradient of potential energy, i.e., -d/d(theta) log p(theta) \"\"\"\n    # For Gaussian distribution N(mu, Sigma), the gradient of log p is -inv(Sigma) * (theta - mu)\n    # So the gradient of potential energy (-log p) is inv(Sigma) * (theta - mu)\n    return inv_cov @ (theta - mean)\n\n# --- Leapfrog integrator ---\ndef leapfrog(theta, v, grad_U, epsilon, L):\n    \"\"\"\n    Perform L steps of leapfrog integration.\n    theta: current position\n    v: current momentum\n    grad_U: function to compute gradient of potential energy\n    epsilon: step size\n    L: number of steps\n    \"\"\"\n    # Initial half-step momentum update\n    v_half = v - 0.5 * epsilon * grad_U(theta)\n    # L-1 full-step updates\n    for _ in range(L - 1):\n        theta = theta + epsilon * v_half\n        v_half = v_half - epsilon * grad_U(theta)\n    # Final full-step position update\n    theta = theta + epsilon * v_half\n    # Final half-step momentum update\n    v = v_half - 0.5 * epsilon * grad_U(theta)\n    return theta, v\n\n# --- HMC sampler ---\ndef hmc_sampler(start_theta, n_samples, epsilon, L):\n    samples = [start_theta]\n    theta = start_theta\n\n    for _ in range(n_samples - 1):\n        # 1. Sample momentum\n        v_current = np.random.randn(2)\n\n        # 2. Simulate trajectory using leapfrog\n        theta_prop, v_prop = leapfrog(np.copy(theta), np.copy(v_current), grad_potential_energy, epsilon, L)\n\n        # 3. Metropolis-Hastings correction\n        # H(theta, v) = U(theta) + K(v), where K(v) = 0.5 * v.T @ v\n        U_current = potential_energy(theta)\n        K_current = 0.5 * (v_current @ v_current)\n        H_current = U_current + K_current\n\n        U_prop = potential_energy(theta_prop)\n        K_prop = 0.5 * (v_prop @ v_prop)\n        H_prop = U_prop + K_prop\n\n        # Acceptance probability\n        alpha = min(1.0, np.exp(H_current - H_prop))\n\n        if np.random.rand() &lt; alpha:\n            theta = theta_prop\n\n        samples.append(theta)\n\n    return np.array(samples)\n\n# --- Random Walk Metropolis sampler ---\ndef rwm_sampler(start_theta, n_samples, step_size):\n    samples = [start_theta]\n    theta = start_theta\n\n    for _ in range(n_samples - 1):\n        # Propose a new state\n        theta_prop = theta + step_size * np.random.randn(2)\n\n        # Acceptance probability\n        alpha = min(1.0, np.exp(potential_energy(theta) - potential_energy(theta_prop)))\n\n        if np.random.rand() &lt; alpha:\n            theta = theta_prop\n\n        samples.append(theta)\n\n    return np.array(samples)\n\n# --- Run simulation and plot ---\nn_samples = 500\nstart_theta = np.array([-2.5, 2.5])\n\n# Adjust parameters\nhmc_samples = hmc_sampler(start_theta, n_samples, epsilon=0.1, L=20)\nrwm_samples = rwm_sampler(start_theta, n_samples, step_size=0.15)\n\n# Plotting\nx = np.linspace(-3, 3, 100)\ny = np.linspace(-3, 3, 100)\nX, Y = np.meshgrid(x, y)\npos = np.dstack((X, Y))\nZ = target_dist.pdf(pos)\n\nplt.figure(figsize=(12, 6))\n\n# RWM plot\nplt.subplot(1, 2, 1)\nplt.contour(X, Y, Z, levels=10, cmap='viridis')\nplt.plot(rwm_samples[:, 0], rwm_samples[:, 1], 'r-o', markersize=3, alpha=0.5)\nplt.title(f\"Random Walk Metropolis (N={n_samples})\")\nplt.xlabel(r\"$\\\\theta_1$\")\nplt.ylabel(r\"$\\\\theta_2$\")\n\n# HMC plot\nplt.subplot(1, 2, 2)\nplt.contour(X, Y, Z, levels=10, cmap='viridis')\nplt.plot(hmc_samples[:, 0], hmc_samples[:, 1], 'b-o', markersize=3, alpha=0.5)\nplt.title(f\"Hamiltonian Monte Carlo (N={n_samples})\")\nplt.xlabel(r\"$\\\\theta_1$\")\nplt.ylabel(r\"$\\\\theta_2$\")\n\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p> <p>We see that the RWM path (left) is dense with tiny steps and diffusive exploration, whereas HMC (right) makes long moves across high-probability regions, yielding representative samples much faster.</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#6-estimating-lotka-volterra-parameters-with-modern-bayesian-methods","title":"6. Estimating Lotka-Volterra Parameters with Modern Bayesian Methods","text":"<p>We now put theory into practice and reproduce the classroom example from the lecture opening: predator-prey dynamics of lynx and hares. Using Hamiltonian Monte Carlo (HMC) in the modern probabilistic programming framework PyMC, and the Hudson's Bay Company dataset, we infer seven unknown parameters of the Lotka-Volterra model: \\(\\alpha,\\beta,\\gamma,\\delta\\), initial populations \\(H_0, L_0\\), and observation noise \\(\\sigma\\).</p> <p>The challenge is that the Lotka-Volterra model is a system of ODEs with no simple closed form. For any parameter vector, we must solve the ODEs numerically to obtain trajectories. This makes the posterior p(theta|D) highly complex and correlated in multiple dimensions - exactly the scenario where advanced MCMC like HMC (and NUTS) shines.</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#61-modeling-plan","title":"6.1 Modeling Plan","text":"<ol> <li>Model: Lotka-Volterra ODEs.</li> <li>Data: hare and lynx populations from 1900-1920.</li> <li>Target: the joint posterior \\(p(\\alpha,\\beta,\\gamma,\\delta,H_{0},L_{0},\\sigma\\mid\\text{data})\\).</li> <li>Method: build the probabilistic model in PyMC; use the default No-U-Turn Sampler (NUTS), an efficient HMC variant.</li> </ol> <p>State space: seven parameters \\((\\alpha,\\beta,\\gamma,\\delta,H_{0},L_{0},\\sigma)\\).</p> <p>Target distribution: posterior \\(p(\\theta\\mid D) \\propto p(D\\mid \\theta) p(\\theta)\\).</p> <p>Likelihood \\(p(D\\mid\\theta)\\): assume log-normal errors between observations and model predictions, i.e., model outputs are positive and the log of predictions fits the log of the data with normal noise - very reasonable for population counts.</p> <p>Priors \\(p(\\theta)\\): choose lognormal (or half-normal) priors to encode the physical constraint that all parameters (growth/interaction rates, initial populations, noise) are positive. This is reasonable prior knowledge and stabilizes the ODE solver.</p> <p>Gradient information and HMC: unlike random-walk MH, HMC uses Hamiltonian dynamics driven by gradients of the log-posterior. Here we employ sunode to efficiently compute sensitivities (gradients) of ODE solutions w.r.t. parameters, enabling NUTS to handle this challenging posterior.</p> <pre><code>\"\"\"\nUsing modern PyMC (v5+) and sunode library to reproduce the Lotka-Volterra model.\nThis version replaces the old PyMC3 + Theano + manual gradient implementation.\n\"\"\"\nimport pymc as pm\nimport numpy as np\nimport arviz as az\nimport sunode\nimport sunode.wrappers.as_pytensor\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n\n# 1. Data preparation (Hudson Bay Company dataset)\n# Keeping consistent with the data used in the original tutorial\ntimes = np.arange(1900, 1921, 1)\nhare_data = np.array([\n    30.0, 47.2, 70.2, 77.4, 36.3, 20.6, 18.1, 21.4, 22.0, 25.4,\n    27.1, 40.3, 57.0, 76.6, 52.3, 19.5, 11.2, 7.6, 14.6, 16.2, 24.7\n])\nlynx_data = np.array([\n    4.0, 6.1, 9.8, 35.2, 59.4, 41.7, 19.0, 13.0, 8.3, 9.1, 7.4,\n    8.0, 12.3, 19.5, 45.7, 51.1, 29.7, 15.8, 9.7, 10.1, 8.6\n])\ndata = np.stack([hare_data, lynx_data]).T\nspecies_names = ['hares', 'lynx']\n\n# 2. Define ODE equations\n# sunode uses sympy for symbolic definition and automatic differentiation, which is very efficient\ndef lotka_volterra(t, y, p):\n    \"\"\"\n    Right-hand side of the Lotka-Volterra (predator-prey) equations.\n\n    Args:\n        t: Time (sympy symbol)\n        y: Dataclass of state variables (species populations), containing y.hares and y.lynx\n        p: Dataclass of parameters, containing p.alpha, p.beta, p.gamma, p.delta\n\n    Returns:\n        A dictionary describing the rate of change of each state variable.\n    \"\"\"\n    return {\n        'hares': p.alpha * y.hares - p.beta * y.lynx * y.hares,\n        'lynx': p.delta * y.hares * y.lynx - p.gamma * y.lynx,\n    }\n\n# 3. Build PyMC probabilistic model\n# Define coordinates to use 'time' and 'species' dimensions in the model\ncoords = {\"time\": times, \"species\": species_names}\n\nwith pm.Model(coords=coords) as model:\n    # --- Prior distributions ---\n    # Use Lognormal priors to ensure parameters are positive, preventing ODE solutions from becoming negative\n    alpha = pm.Lognormal(\"alpha\", mu=np.log(1), sigma=0.5)\n    beta = pm.Lognormal(\"beta\", mu=np.log(0.05), sigma=0.5)\n    gamma = pm.Lognormal(\"gamma\", mu=np.log(1), sigma=0.5)\n    delta = pm.Lognormal(\"delta\", mu=np.log(0.05), sigma=0.5)\n\n    # Priors for initial states\n    initial_hares = pm.Lognormal(\"initial_hares\", mu=np.log(30), sigma=1)\n    initial_lynx = pm.Lognormal(\"initial_lynx\", mu=np.log(4), sigma=1)\n\n    # Prior for observation noise\n    sigma = pm.HalfNormal(\"sigma\", sigma=1)\n\n    # --- Solve ODE using sunode ---\n    # This is the key step that replaces the manual Theano Op\n    y_hat, _, _, _, _, _ = sunode.wrappers.as_pytensor.solve_ivp(\n        y0={\n            # Define initial conditions for the ODE\n            # Format: {'variable_name': (PyTensor variable, shape)}\n            'hares': (initial_hares, ()),\n            'lynx': (initial_lynx, ()),\n        },\n        params={\n            # Define parameters for the ODE\n            # sunode will automatically compute gradients with respect to these PyTensor variables\n            'alpha': (alpha, ()),\n            'beta': (beta, ()),\n            'gamma': (gamma, ()),\n            'delta': (delta, ()),\n            # sunode requires all parameters to be PyTensor variables or numpy arrays\n            '_dummy': np.array(0.), \n        },\n        # Pass in the ODE function we defined earlier\n        rhs=lotka_volterra,\n        # Define time points for solving\n        tvals=times,\n        t0=times[0],\n    )\n\n    # --- Likelihood function ---\n    # sunode returns a dictionary, we need to stack the solution into a matrix to match the shape of observed data\n    ode_solution = pm.math.stack([y_hat['hares'], y_hat['lynx']], axis=1)\n\n    # Assume observations follow a log-normal distribution\n    Y_obs = pm.Lognormal(\n        \"Y_obs\", \n        mu=pm.math.log(ode_solution), \n        sigma=sigma, \n        observed=data, \n        dims=(\"time\", \"species\")\n    )\n\n# 4. Run sampler\n# The NUTS sampler will utilize the exact gradient information provided by sunode\nwith model:\n    # sunode's C backend does not support multiprocessing \"pickling\", so we must use a single core\n    idata = pm.sample(2000, tune=2000, chains=4, cores=1, target_accept=0.9)\n\n# 5. Results visualization\n# Plot posterior distributions of parameters\naz.plot_posterior(idata, var_names=[\"alpha\", \"beta\", \"gamma\", \"delta\", \"initial_hares\", \"initial_lynx\", \"sigma\"])\nplt.suptitle(\"Posterior Distributions of Parameters\", y=1.02)\nplt.tight_layout()\nplt.savefig(\"lv_posterior_distributions.png\", dpi=300, bbox_inches='tight')\nplt.show()\n\n# Interpretation: Each subplot shows the posterior distribution of one parameter\n# (alpha, beta, gamma, delta, initial_hares, initial_lynx, sigma). The peak\n# indicates the most probable value (MAP region), and the width quantifies our\n# uncertainty. A tall, narrow distribution means the data strongly constrains\n# that parameter; a short, wide shape indicates weaker information and higher\n# uncertainty.\n\n# Extract posterior predictive samples\nwith model:\n    posterior_predictive = pm.sample_posterior_predictive(idata)\n\n# Plot posterior predictions vs. real data\nfig, axes = plt.subplots(2, 1, figsize=(10, 8), sharex=True)\n\nfor i, (spec, color) in enumerate(zip(species_names, ['C0', 'C1'])):\n    # Plot real data\n    axes[i].plot(times, data[:, i], 'o', color=color, label=f\"Observed {spec.capitalize()}\")\n\n    # Extract posterior predictive mean and 94% credible interval\n    pred_mean = posterior_predictive.posterior_predictive['Y_obs'].mean(dim=('chain', 'draw')).sel(species=spec)\n    hdi_94 = az.hdi(posterior_predictive.posterior_predictive['Y_obs'].sel(species=spec), hdi_prob=0.94)\n\n    # Plot posterior predictions\n    axes[i].plot(times, pred_mean, color=color, lw=2, label=f\"Posterior Mean {spec.capitalize()}\")\n    # Use isel (integer selection) instead of sel (label selection) to get HDI upper and lower bounds\n    axes[i].fill_between(times, hdi_94.Y_obs.isel(hdi=0), hdi_94.Y_obs.isel(hdi=1), color=color, alpha=0.3, label=\"94% HDI\")\n\n    axes[i].set_ylabel(\"Population\")\n    axes[i].set_title(f\"{spec.capitalize()} Population Dynamics\")\n    axes[i].legend()\n\naxes[1].set_xlabel(\"Year\")\nplt.tight_layout()\nplt.savefig(\"lv_posterior_predictions.png\", dpi=300, bbox_inches='tight')\nplt.show()\n\n# Interpretation: The thin translucent bands summarize uncertainty from the\n# posterior predictive distribution. Most observed points fall within the\n# credible band, showing that the Lotka-Volterra model, with inferred\n# parameters, captures the historical predator-prey cycles. This visual\n# agreement supports the adequacy of the model and the calibration of the\n# inferred parameters.\n\n# 6. Phase plot\nplt.figure(figsize=(8, 8))\npred_mean_hares = posterior_predictive.posterior_predictive['Y_obs'].mean(dim=('chain', 'draw')).sel(species='hares')\npred_mean_lynx = posterior_predictive.posterior_predictive['Y_obs'].mean(dim=('chain', 'draw')).sel(species='lynx')\n\nplt.plot(pred_mean_hares, pred_mean_lynx, lw=2, label=\"Posterior Mean Trajectory\")\nplt.plot(hare_data, lynx_data, 'o', alpha=0.8, label=\"Observed Data\")\nplt.xlabel(\"Hares Population\")\nplt.ylabel(\"Lynx Population\")\nplt.title(\"Lotka-Volterra Phase Portrait\")\nplt.legend()\nplt.grid(True, linestyle='--', alpha=0.6)\nplt.savefig(\"lv_phase_portrait.png\", dpi=300, bbox_inches='tight')\nplt.show()\n\n# Interpretation: The phase portrait compares the posterior-mean trajectory in\n# state space (hares vs. lynx) with the observed data. Agreement of the overall\n# orbit shape and scale indicates that the inferred dynamics reproduce the\n# characteristic predator-prey cycles.\n\n\n# 7. Trace plot\n# This plot is used to diagnose the health of the MCMC sampling process\naz.plot_trace(idata, var_names=[\"alpha\", \"beta\", \"gamma\", \"delta\", \"initial_hares\", \"initial_lynx\", \"sigma\"])\nplt.tight_layout()\nplt.savefig(\"lv_trace_plot.png\", dpi=300, bbox_inches='tight')\nplt.show()\n\n# Interpretation: The trace plot is used to diagnose MCMC health. We expect\n# caterpillar-like stationarity without long-term trends. Strong trends or\n# stickiness indicate poor mixing (e.g., step size too large/small, too few\n# integration steps) and may require retuning.\n\n# 8. Results visualization\n# Plot posterior distributions of parameters\naz.plot_posterior(\n    idata, \n    var_names=[\"alpha\", \"beta\", \"gamma\", \"delta\", \"initial_hares\", \"initial_lynx\", \"sigma\"],\n    kind=\"hist\"  # Set chart type to histogram\n)\nplt.suptitle(\"Posterior Distributions of Parameters (Histogram)\", y=1.02)\nplt.tight_layout()\nplt.savefig(\"lv_posterior_histograms.png\", dpi=300, bbox_inches='tight')\nplt.show()\n\n# Interpretation: Histogram view of the posteriors provides a complementary\n# summary of parameter uncertainty. Together with trace plots and posterior\n# predictive checks, it supports a more honest uncertainty quantification than\n# a single point estimate.\n</code></pre> <p></p> <p>Compared with the previous lecture's hand-coded Metropolis-Hastings, this version runs longer: HMC is computationally more expensive per iteration. In each iteration, MH solves the ODE once to evaluate the likelihood; HMC, to achieve efficient exploration, must (via sunode) also compute gradients (adjoints) of the ODE solution and simulate a full trajectory to produce the next sample.</p> <p>Why pay the extra cost? First, more complete modeling and more honest uncertainty: we do not fix initial conditions or errors but infer all eight parameters jointly, yielding a more faithful assessment of uncertainty. Second, unmatched sampling efficiency and reliability: while MH may produce 50,000 steps in 10 minutes, the strong autocorrelation can reduce the effective sample size to only hundreds. NUTS may take longer for 4,000 samples but often yields thousands of effectively independent draws. For scientific inference, sample quality matters far more than raw count - HMC is far more reliable for discovering the true shape of the posterior.</p> <p>A natural question is whether faster methods such as scipy.optimize.curve_fit might suffice. Optimization can yield point estimates quickly, but it does not provide the full posterior, correlations, or credible intervals that are crucial for scientific conclusions.</p> <p></p> <p>Posterior distributions after learning from the Hudson's Bay Company data. Each subplot shows one of the seven unknown parameters (including two initial conditions and observation noise). Peaks indicate the most probable values; widths quantify uncertainty.</p> <p></p> <p>Blue and orange solid lines are posterior-mean predictions for hares and lynx. The model successfully reproduces the characteristic predator-prey oscillations: hare peaks first, lynx follows; then predation reduces hares, which subsequently reduces lynx, and the cycle repeats.</p> <p></p> <p>Phase portrait (hares vs. lynx). The closed loop is the hallmark of predator-prey dynamics. Compared to the time-series view, the phase portrait emphasizes that the inferred parameters (alpha, beta, gamma, delta) produce trajectories that match the observed cyclic path, indicating the model captures the internal feedback mechanisms.</p> <p></p> <p>Right: each parameter's trace shows stable, \"caterpillar-like\" stationarity without drift, indicating convergence. Left: posterior densities from the 4 independent chains almost perfectly overlap, confirming that all chains have discovered the same target distribution.</p>"},{"location":"notes/14.%20Hamiltonian%20Monte%20Carlo%20Sampling/#summary","title":"Summary","text":"<p>HMC uses geometric information (gradients) to propose long, effective moves, dramatically improving sampling efficiency over diffusive random walks. The efficiency comes at a cost: computing gradients of the log-density and tuning more knobs (step size epsilon and number of steps L), with longer per-iteration runtime.</p> <p>Table 1 summarizes key differences between the MCMC methods discussed:</p> <p>Table 1: Comparison of MCMC Sampling Algorithms</p> Feature Random-Walk Metropolis (RWM) Hamiltonian Monte Carlo (HMC) Proposal Diffusive random steps (e.g., Gaussian noise) Deterministic trajectories from Hamiltonian dynamics Exploration Local, slow, high sample autocorrelation Global, fast, low sample autocorrelation Information needed Target density p(theta) (up to a constant) Target density p(theta) and its gradient nabla log p(theta) Acceptance rate Sensitive to step size; often tuned to ~23% Typically very high (&gt;80%) if tuned; reflects integrator accuracy Key tunables Step size sigma Step size epsilon, number of steps L High-dimensional performance Poor; suffers from curse of dimensionality Excellent; scales better with dimension Typical use Simple targets or when gradients are unavailable Gold standard for smooth targets in complex models Speed Fast per iteration (simple computations) Slow per iteration (gradient computation) <p>As a beginner, a natural question arises: with today's powerful deep learning tools, is this \"old-school\" method outdated or inferior? The answer is no - these are complementary tools suited to different problems - and the cutting edge is to combine them.</p> <p>Beyond HMC vs. MH, a broader perspective is useful in the era of deep learning. These are complementary, not competing, tools. The frontier is to combine them.</p> <p>Method comparison: Bayesian ODE inference vs. pure deep learning</p> Aspect Bayesian ODE inference (this lecture) Pure deep learning (e.g., RNN/LSTM/Transformer) Interpretability Strong (white-box): each parameter has physical meaning; inspect posteriors Weak (black-box): millions of weights; hard to explain Data needs Low: physics provides structure High: needs large datasets to avoid overfitting Prior/physics Core advantage: embed domain knowledge via priors and equations Typically ignored by default Uncertainty quantification Gold standard: full posteriors and credible intervals Not provided by default; Bayesian NN exists but is complex Compute profile Inference (sampling) slow; \"training\" minimal Training slow and data-hungry; inference fast once trained Generalization/extrapolation Strong due to physics-based structure Weak, especially for out-of-distribution <p>Two representative approaches in Scientific Machine Learning combine the best of both worlds:</p> <p>1) Universal Differential Equations (UDEs) - Start from a known but imperfect physics model (e.g., Lotka-Volterra). - Add neural networks to learn unknown terms/residuals:</p> \\[\\frac{dx}{dt} = \\alpha x - \\beta xy + \\mathbf{NN_x}(x, y, \\theta_{NN})\\] \\[\\frac{dy}{dt} = \\delta xy - \\gamma y + \\mathbf{NN_y}(x, y, \\theta_{NN})\\] <p>Benefits: - Retains interpretability: infer physical parameters \\(\\alpha, \\beta, \\gamma, \\delta\\). - Improves accuracy: \\(\\mathbf{NN}\\) learns effects missing from the physics (e.g., carrying capacity, seasonality). - Data-efficient: NN learns only residuals. - Fast to train with gradient-based optimization; often orders of magnitude faster than pure MCMC.</p> <p>2) Physics-Informed Neural Networks (PINNs) - Fit data with a neural network but add a physics violation penalty to the loss:</p> <p>Loss = data fit error + PDE/ODE residual</p> <p>This forces the network to respect physical laws while learning from data.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/","title":"Prologue: From Unbiased to Biased Random Walks","text":"<p>In earlier lectures, we examined simple random walks and their deep connection to diffusion at macroscopic scales. Those walks are unbiased: each step's direction is purely random, and a cloud of walkers spreads out over time. In biology, however, many microorganisms navigate impressively, moving toward food sources or away from harmful chemicals, even in environments where viscosity dominates and inertia is negligible.</p> <p></p> <p>Our central question: How can an organism achieve directional motion under random forces in a low-Reynolds-number regime? We study chemotaxis as the paradigm. Chemotaxis is a biased random walk: microscopic, stochastic choices are orchestrated into an effective macroscopic navigation strategy. This is a biological marvel and a compelling problem in statistical physics.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#1-biological-background-of-bacterial-chemotaxis","title":"1. Biological Background of Bacterial Chemotaxis","text":""},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#11-e-colis-motion-run-and-tumble","title":"1.1. E. coli's Motion: Run-and-Tumble","text":"<p>E. coli does not swim smoothly and continuously. Instead, it alternates between two distinct behaviors:</p> <ul> <li>Run: Several flagella rotate counterclockwise (CCW), bundle, and propel the cell forward approximately along a straight line.</li> <li>Tumble: The rotation switches to clockwise (CW), the bundle falls apart, and flagella act individually, causing a nearly in-place random reorientation that sets a new direction for the next run.</li> </ul> <p>Chemotaxis does not \u201csteer\u201d like a wheel. Rather, cells modulate the frequency of tumbles in response to changes in attractant/repellent concentration. When moving up an attractant gradient, tumbles are suppressed and runs are prolonged. When moving down an attractant gradient (or up a repellent gradient), tumble frequency increases to try a new direction sooner. This \u201ccontinue if better, change if worse\u201d rule biases the random walk and yields a macroscopic drift toward high attractant concentration.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#12-physics-of-the-microscopic-world-life-at-low-reynolds-number","title":"1.2. Physics of the Microscopic World: Life at Low Reynolds Number","text":"<p>The dimensionless Reynolds number Re = \u03c1Lv/\u03b7 measures inertial vs. viscous forces. For bacteria (L in micrometers, v \u2248 20-30 micrometers/s), Re \u2248 10^\u22126. Viscosity dominates and inertia is negligible. Consequences: - No gliding or inertia: once flagellar thrust stops, motion ceases almost instantly. - Continuous turning via body undulations (like fish) is ineffective at these scales. Hence bacteria evolved a strategy adapted to a highly damped world: stochastic run-and-tumble. It is not a compromise, but an efficient, necessary navigation strategy at this scale.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#13-molecular-machines-the-chemosensory-system","title":"1.3. Molecular Machines: The Chemosensory System","text":"<p>How is environmental change sensed and converted into motor control? A precise biochemical signaling network-the chemosensory system-implements this:</p> <p>1) Ligand binding: Attractant/repellent molecules bind methyl-accepting chemotaxis proteins (MCPs) in the membrane. 2) Signal transduction: Binding alters MCP conformation, modulating the autophosphorylation of histidine kinase CheA. Attractant binding suppresses CheA activity. 3) Phosphorylation cascade: Activated CheA (CheA-P) transfers phosphate to the response regulator CheY. 4) Motor control: Phosphorylated CheY (CheY-P) diffuses and binds the flagellar switch, increasing the probability of CCW\u2192CW transitions (tumbles). High CheY-P implies high tumble frequency. 5) Adaptation: CheZ dephosphorylates CheY-P. MCP cytoplasmic domains are reversibly methylated (CheR) and demethylated (CheB). Methylation tunes MCP control over CheA, enabling response to relative changes (gradients), not absolute levels-biological grounding of temporal sensing below.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#14-challenges-in-chemotaxis-research","title":"1.4. Challenges in Chemotaxis Research","text":"<ul> <li>Limits of sensing and navigation under noise</li> <li>Core question: How can organisms (e.g., bacteria) navigate accurately using only local, stochastic measurements?</li> <li>Deeper meaning: At microscopic scales, diffusion and binding events are random, producing noisy signals; intracellular signaling adds intrinsic biochemical noise. Cells must extract gradient information from noisy data and make effective decisions. This touches statistical inference, information theory, and control: What are the theoretical limits for finite, energy-limited systems, and how do molecular networks approach optimal information acquisition and processing?</li> <li>Thermodynamics of sensing and adaptation</li> <li>Core question: What are the energy and information costs of chemotaxis?</li> <li>Deeper meaning: Gradient sensing, signaling, motor control, and adaptation (insensitivity to background and sensitivity to relative changes) consume energy (e.g., ATP). Is there a fundamental thermodynamic lower bound for achieving a target sensing precision? These questions bridge information theory and nonequilibrium thermodynamics.</li> <li>From single-cell behavior to collective transport</li> <li>Core question: How do individual fluctuations shape population-level dynamics?</li> <li>Deeper meaning: Even if run-and-tumble is understood at the single-cell level, populations exhibit complex phenomena (collective migration, biofilms, chemotactic collapse) that do not arise from simple superposition. We must link microscopic stochastic processes to macroscopic continuum models (e.g., Keller-Segel) and study how individual variability impacts collective dynamics.</li> </ul>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#2-a-minimal-motion-model-two-state-process","title":"2. A Minimal Motion Model: Two-State Process","text":"<p>We abstract 3D run-and-tumble to a 1D, two-state process.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#21-reduction-to-one-dimension","title":"2.1. Reduction to One Dimension","text":"<p>Let bacteria move on a line. State is (x, \u03c3) with direction \u03c3 \u2208 {+1, \u22121}.</p> <ul> <li>\u03c3 = +1: right-mover.</li> <li>\u03c3 = \u22121: left-mover.</li> </ul> <p></p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#22-direction-switching-rates","title":"2.2. Direction-Switching Rates","text":"<p>\u201cTumbling\u201d changes \u03c3. Model it as stochastic switching with rates: - \u03b1+(x): rate to switch +1 \u2192 \u22121 at position x. - \u03b1\u2212(x): rate to switch \u22121 \u2192 +1 at position x.</p> <p>Allowing \u03b1+/-(x) to depend on x encodes environmental information (chemical gradients). If \u03b1+(x) \u2260 \u03b1\u2212(x), the walk becomes biased.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#23-master-equations-for-directional-probabilities","title":"2.3. Master Equations for Directional Probabilities","text":"<p>Let p+(x,t) (resp. p\u2212) be the probability density of a right- (resp. left-) mover at (x,t). Consider a small interval [x, x+dx] and track the change over a short time dt. The evolution consists of three contributions: advection, loss, and gain:</p> \\[\\partial_t p_+(x,t) = -v_0 \\, \\partial_x p_+(x,t) - \\alpha_+(x) \\, p_+(x,t) + \\alpha_-(x) \\, p_-(x,t)\\] \\[\\partial_t p_-(x,t) = +v_0 \\, \\partial_x p_-(x,t) - \\alpha_-(x) \\, p_-(x,t) + \\alpha_+(x) \\, p_+(x,t)\\] <p>Key variables and parameters</p> Symbol Name Meaning Units x, t position, time spacetime coordinates m, s \u03c3 direction state internal state (+1 right, \u22121 left) dimensionless v0 swim speed constant speed during run m/s \u03b1+(x) right\u2192left rate tumble rate +1\u2192\u22121 at x 1/s \u03b1\u2212(x) left\u2192right rate tumble rate \u22121\u2192+1 at x 1/s p+(x,t) right-mover density prob. density of \u03c3=+1 at (x,t) 1/m p\u2212(x,t) left-mover density prob. density of \u03c3=\u22121 at (x,t) 1/m"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#3-from-microstates-to-macroscopic-transport","title":"3. From Microstates to Macroscopic Transport","text":""},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#31-macroscopic-observables","title":"3.1. Macroscopic Observables","text":"<p>Define total density p and probability current J:</p> \\[p(x,t) := p_+(x,t) + p_-(x,t)\\] \\[J(x,t) := v_0 \\, [p_+(x,t) - p_-(x,t)]\\]"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#32-continuity-equation","title":"3.2. Continuity Equation","text":"<p>Adding the master equations and using the definitions, the terms involving \u03b1+/- cancel exactly and we get</p> \\[\\partial_t p(x,t) = -\\partial_x J(x,t)\\] <p>This is the continuity equation, a universal conservation law. Tumbling is an internal exchange process between right- and left-mover subpopulations; it cannot create or annihilate particles in space. Changes in total density at a location arise only from flux entering or leaving neighboring regions. The exact cancellation of tumbling terms reflects local conservation of particle number (probability).</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#33-dynamics-of-the-probability-current","title":"3.3. Dynamics of the Probability Current","text":"<p>Subtracting the master equations and substituting</p> \\[p_\\pm = \\tfrac{1}{2}\\big(p \\pm J/v_0\\big)\\] <p>yields</p> \\[\\partial_t J(x,t) = -v_0^2 \\, \\partial_x p(x,t) - (\\alpha_+ + \\alpha_-) \\, J(x,t) + v_0 \\, (\\alpha_- - \\alpha_+) \\, p(x,t)\\] <p></p> <p>Interpretation of terms: - \u2212v0^2 \u2202x p: diffusive term; density gradients drive flux like pressure. - \u2212(\u03b1+ + \u03b1\u2212) J: persistence damping by randomization of directions via tumbles. - v0 (\u03b1\u2212 \u2212 \u03b1+ ) p: drift term; asymmetry of switching creates net drift even without \u2202x p.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#4-coarse-grained-view-fokker-planck-equation","title":"4. Coarse-Grained View: Fokker-Planck Equation","text":""},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#41-adiabatic-elimination-time-scale-separation","title":"4.1. Adiabatic Elimination: Time-Scale Separation","text":"<p>Run time \u03c4run ~ 1/\u03b1 ~ 1 s; diffusion time \u03c4D ~ L^2/Deff (e.g., L ~ 100 micrometers gives ~25 s). With \u03c4D \u226b \u03c4run, J relaxes much faster than p. Set \u2202t J \u2248 0 (slave principle) to obtain the quasi-steady current.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#42-effective-fokker-planck-equation","title":"4.2. Effective Fokker-Planck Equation","text":"<p>From \u2202t J \u2248 0 we get</p> \\[J_{\\text{eff}}(x,t) = -\\frac{v_0^2}{\\alpha_+ + \\alpha_-} \\, \\partial_x p \\, + \\, v_0 \\, \\frac{\\alpha_- - \\alpha_+}{\\alpha_+ + \\alpha_-} \\, p\\] <p>Substitute into the continuity equation to obtain a closed Fokker-Planck equation (FPE):</p> \\[\\partial_t p(x,t) = \\partial_x \\Big[ D_{\\text{eff}}(x) \\, \\partial_x p - v_{\\text{eff}}(x) \\, p \\Big]\\] <p>with</p> \\[D_{\\text{eff}}(x) = \\frac{v_0^2}{\\alpha_+(x) + \\alpha_-(x)}, \\qquad v_{\\text{eff}}(x) = v_0 \\, \\frac{\\alpha_+(x) - \\alpha_-(x)}{\\alpha_+(x) + \\alpha_-(x)}\\]"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#43-python-simulation-i-biased-run-and-tumble","title":"4.3. Python Simulation I: Biased Run-and-Tumble","text":"<p>The code below simulates an ensemble of 1D particles with position-dependent tumble rates, demonstrating macroscopic drift and diffusion.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef run_tumble_1d_simulation(num_particles=5000, num_steps=4000, v0=20.0, dt=0.01, L=200.0):\n    \"\"\"\n    Simulate biased run-and-tumble motion in one-dimensional space.\n\n    Parameters:\n    num_particles (int): Number of particles to simulate.\n    num_steps (int): Total number of simulation steps.\n    v0 (float): Run speed (micrometers/s).\n    dt (float): Time step (s).\n    L (float): Length of spatial domain (-L/2 to L/2).\n    \"\"\"\n    positions = np.random.uniform(-1, 1, num_particles)\n    directions = np.random.choice([1, -1], num_particles)\n    position_history = np.zeros((num_steps, num_particles))\n\n    def alpha_plus(x):\n        return 1.0 * (1 + 2.0 * np.tanh(x / (L/4)))\n    def alpha_minus(x):\n        return 1.0 * (1 - 2.0 * np.tanh(x / (L/4)))\n\n    for step in range(num_steps):\n        position_history[step] = positions\n        prob_tumble_plus = alpha_plus(positions) * dt\n        prob_tumble_minus = alpha_minus(positions) * dt\n        rand_nums = np.random.rand(num_particles)\n        tumble_indices_plus = (directions == 1) &amp; (rand_nums &lt; prob_tumble_plus)\n        directions[tumble_indices_plus] = -1\n        tumble_indices_minus = (directions == -1) &amp; (rand_nums &lt; prob_tumble_minus)\n        directions[tumble_indices_minus] = 1\n        positions += directions * v0 * dt\n        positions[positions &gt; L/2] = L - positions[positions &gt; L/2]; directions[positions &gt; L/2] *= -1\n        positions[positions &lt; -L/2] = -L - positions[positions &lt; -L/2]; directions[positions &lt; -L/2] *= -1\n\n    return position_history\n\n# Run and visualize\nhistory = run_tumble_1d_simulation()\nnum_steps, num_particles = history.shape\ntime_points = np.arange(num_steps) * 0.01\nmean_pos = np.mean(history, axis=1)\nvar_pos  = np.var(history,  axis=1)\n\n# 1) Trajectories\nplt.style.use('seaborn-v0_8-whitegrid')\nfig, ax = plt.subplots(figsize=(10, 6))\nfor i in range(20):\n    ax.plot(time_points, history[:, i], lw=0.8, alpha=0.7)\nax.set_title('Single Particle Trajectories')\nax.set_xlabel('Time (s)')\nax.set_ylabel('Position (micrometers)')\nplt.tight_layout(); plt.savefig('particle_trajectories.png', dpi=300, bbox_inches='tight'); plt.close()\n\n# 2) Distributions over time\nfig, ax = plt.subplots(figsize=(10, 6))\ntime_indices_to_plot = [int(num_steps/10), int(num_steps/3), int(2*num_steps/3), num_steps-1]\nfor t_idx in time_indices_to_plot:\n    time = t_idx * 0.01\n    ax.hist(history[t_idx, :], bins=50, density=True, alpha=0.6, label=f't = {time:.1f} s')\nax.set_title('Distribution of Particles')\nax.set_xlabel('Position (micrometers)')\nax.set_ylabel('Probability Density')\nax.legend()\nplt.tight_layout(); plt.savefig('particle_distributions.png', dpi=300, bbox_inches='tight'); plt.close()\n\n# 3) Mean and variance evolution\nfig, ax = plt.subplots(figsize=(10, 6)); ax2 = ax.twinx()\np1, = ax.plot(time_points, mean_pos, 'r-', label='Mean Position')\np2, = ax2.plot(time_points, var_pos,  'b-', label='Variance')\nax.set_title('Evolution of Mean and Variance')\nax.set_xlabel('Time (s)')\nax.set_ylabel('Mean Position (micrometers)', color='r')\nax2.set_ylabel('Variance (micrometers^2)',  color='b')\nax.tick_params(axis='y', labelcolor='r'); ax2.tick_params(axis='y', labelcolor='b')\nax.legend([p1, p2], ['Mean Position', 'Variance'], loc='center right')\nplt.tight_layout(); plt.savefig('mean_variance_evolution.png', dpi=300, bbox_inches='tight'); plt.close()\n</code></pre> <p></p> <p>1) Trajectories show random motion with an overall pull toward the center (x = 0), i.e., bias.</p> <p></p> <p>2) Histograms show aggregation toward x = 0 over time, confirming a macroscopic drift.</p> <p></p> <p>3) Mean and variance quantitatively reflect the ensemble behavior. With a center-directed drift, the mean approaches zero; the variance grows then saturates, reflecting drift-diffusion balance. With constant asymmetric \u03b1+/-, we would observe linear growth as predicted by the FPE.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#5-closing-the-loop-biological-basis-of-sensing","title":"5. Closing the Loop: Biological Basis of Sensing","text":"<p>We have linked \u03b1+/-(x) to v_eff(x). How do cells map an external chemical field c(x) into spatially varying \u03b1+/-(x)?</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#51-temporal-sensing-mechanism","title":"5.1. Temporal Sensing Mechanism","text":"<p>A few-micrometer cell cannot directly measure tiny spatial differences across its body to estimate \u2202x c. Instead, it uses temporal sensing by monitoring concentration over time. It measures dc/dt and, by the chain rule:</p> \\[\\frac{dc}{dt} = \\frac{\\partial c}{\\partial t} + \\frac{\\partial c}{\\partial x} \\, \\frac{dx}{dt}\\] <p>For a static field and motion at speed v0 \u03c3(t):</p> \\[\\frac{dc}{dt} = v_0 \\, \\sigma(t) \\, \\partial_x c\\] <p>If dc/dt &gt; 0 (moving up an attractant gradient), CheA is suppressed, CheY-P decreases, tumbles are suppressed, and the run is prolonged; dc/dt &lt; 0 has the opposite effect.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#52-modeling-switching-rates","title":"5.2. Modeling Switching Rates","text":"<p>Assume a linear response around a baseline \u03b10:</p> \\[\\alpha(\\text{sensed change}) = \\alpha_0 \\big(1 - \\chi' \\, \\tfrac{dc}{dt}\\big)\\] <p>For \u03c3 = +1 and \u03c3 = \u22121, dc/dt = +/- v0 \u2202x c. With \u03c7 := \u03c7' \u03b10, we get</p> \\[\\alpha_+(x) = \\alpha_0 \\big(1 - \\chi \\, v_0 \\, \\partial_x c\\big)\\] \\[\\alpha_-(x) = \\alpha_0 \\big(1 + \\chi \\, v_0 \\, \\partial_x c\\big)\\] <p>Substitute into Deff and veff. For shallow gradients (\u03c7 v0 \u2202x c \u226a 1):</p> \\[v_{\\text{eff}} \\approx -\\frac{\\chi \\, v_0^2}{\\alpha_0} \\, \\partial_x c, \\qquad D_{\\text{eff}} \\approx \\frac{v_0^2}{2\\alpha_0}\\] <p>Thus cells drift up attractant gradients (\u03c7 &gt; 0) with approximately constant effective diffusion.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#6-collective-dynamics-the-keller-segel-model","title":"6. Collective Dynamics: The Keller-Segel Model","text":"<p>Organisms often modify their chemical environment by consumption/secretion, creating feedback: motion responds to gradients while aggregation alters the gradients-leading to pattern formation.</p> <p>Keller-Segel (early 1970s) modeled Dictyostelium aggregation guided by cAMP, launching mathematical biology of chemotaxis. Applications now span bacterial patterning, angiogenesis, tumor invasion/metastasis, leukocyte recruitment, and morphogenesis.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#61-coupled-equations","title":"6.1. Coupled Equations","text":"<p>A standard Keller-Segel system couples cell density \u03c1(x,t) and chemical concentration c(x,t) (we use nabla to accommodate higher spatial dimensions):</p> \\[\\partial_t \\rho = \\nabla \\cdot \\big[ D \\, \\nabla \\rho - \\chi(\\rho,c) \\, \\rho \\, \\nabla c \\big] + f_{\\text{growth}}(\\rho)\\] \\[\\partial_t c = D_c \\, \\nabla^2 c + f_{\\text{prod}}(\\rho) - f_{\\text{degrad}}(c)\\] <p></p> <p>Physical meaning: changes in \u03c1 result from diffusion, chemotactic flux, and local net growth; changes in c come from diffusion, production by cells, and degradation.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#62-a-keller-segel-visualization","title":"6.2. A Keller-Segel Visualization","text":"<p>Strongly related 2D model (as in the visualization):</p> \\[\\frac{\\partial u}{\\partial t} = \\nabla^2 u - \\nabla \\cdot (\\chi(u) \\, \\nabla v) + u(1-u)\\] \\[\\frac{\\partial v}{\\partial t} = D \\, \\nabla^2 v + u - a v\\] <p>Interpretation: u is cell density, v is chemical concentration. - nabla^2 u: random motion (effective diffusion). - \u2212nabla\u00b7(\u03c7(u) nablav): chemotactic flux; \u03c7(u) = c u/(1+u^2) models saturation at high density. - u(1\u2212u): logistic growth. - D nabla^2 v: chemical diffusion. - u \u2212 a v: production proportional to u and linear decay.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#63-emergent-patterns-chemotactic-collapse","title":"6.3. Emergent Patterns: Chemotactic Collapse","text":"<p>A small density fluctuation produces slightly more chemical, creating a weak peak in v, generating nablav that attracts more cells, which produce more chemical-a positive feedback loop. If \u03c7 is strong enough to overcome diffusion D, the instability amplifies fluctuations and sharp peaks form: chemotactic collapse. Linear stability analysis yields precise conditions.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#64-python-simulation-ii-1d-keller-segel-via-finite-differences","title":"6.4. Python Simulation II: 1D Keller-Segel via Finite Differences","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\nimport imageio, os\n\ndef solve_keller_segel_1d(L=100.0, Nx=200, T=50.0, Nt=5000, D_u=1.0, D_v=20.0, chi_0=25.0, a=1.0):\n    \"\"\"\n    1D Keller-Segel with explicit finite differences.\n    u_t = D_u * u_xx - chi_0 * (u * v_x)_x\n    v_t = D_v * v_xx + u - a*v\n    \"\"\"\n    dx = L / Nx; dt = T / Nt\n    x = np.linspace(0, L, Nx, endpoint=False)\n    if dt &gt; dx**2 / (2 * max(D_u, D_v)):\n        dt = 0.2 * dx**2 / (2 * max(D_u, D_v)); Nt = int(T / dt)\n    u = 1.0 + 0.01 * (np.random.rand(Nx) - 0.5)\n    v = u / a\n    u_history, v_history = [u.copy()], [v.copy()]\n    for n in range(Nt):\n        u_prev, u_next = np.roll(u, 1), np.roll(u, -1)\n        v_prev, v_next = np.roll(v, 1), np.roll(v, -1)\n        u_xx = (u_next - 2*u + u_prev) / dx**2\n        v_xx = (v_next - 2*v + v_prev) / dx**2\n        v_x  = (v_next - v_prev) / (2*dx)\n        J    = chi_0 * u * v_x; J_prev = np.roll(J, 1)\n        divJ = (J - J_prev) / dx\n        u_new = u + dt * (D_u * u_xx - divJ)\n        v_new = v + dt * (D_v * v_xx + u - a*v)\n        u_new = np.maximum(u_new, 0); v_new = np.maximum(v_new, 0)\n        if np.any(~np.isfinite(u_new)) or np.any(~np.isfinite(v_new)):\n            break\n        u, v = u_new, v_new\n        if n % 50 == 0:\n            u_history.append(u.copy()); v_history.append(v.copy())\n    return x, u_history, v_history\n\nx, u_hist, v_hist = solve_keller_segel_1d(T=100.0, Nt=20000, chi_0=40.0)\n\nfig, ax = plt.subplots(figsize=(10, 6))\nline, = ax.plot(x, u_hist[0], 'b-', lw=2)\nax.set_xlim(0, 100); ax.set_ylim(0, 5)\nax.set_xlabel('Position x'); ax.set_ylabel('Cell Density u(x,t)')\nax.set_title('1D Keller-Segel Simulation: Chemotactic Collapse')\ntime_text = ax.text(0.05, 0.9, '', transform=ax.transAxes)\n\ntemp_dir = 'temp_frames'; os.makedirs(temp_dir, exist_ok=True)\ngif_filename = 'keller_segel_simulation.gif'\n\ndef update(frame):\n    line.set_ydata(u_hist[frame])\n    time = frame * 50 * (100.0/20000)\n    time_text.set_text(f'Time = {time:.2f}')\n    return line, time_text\n\nfilenames = []\nfor i in range(len(u_hist)):\n    update(i)\n    filename = f'{temp_dir}/frame_{i:03d}.png'\n    plt.savefig(filename); filenames.append(filename)\n\nwith imageio.get_writer(gif_filename, mode='I', duration=0.1, loop=0) as writer:\n    for filename in filenames:\n        image = imageio.imread(filename); writer.append_data(image)\n\nfor filename in filenames: os.remove(filename)\nos.rmdir(temp_dir)\n\n# Snapshots\nplt.figure(figsize=(10, 6))\nfor frame in [0, len(u_hist)//4, len(u_hist)//2, len(u_hist)-1]:\n    time = frame * 50 * (100.0/20000)\n    plt.plot(x, u_hist[frame], label=f'Time = {time:.2f}')\nplt.xlabel('Position x'); plt.ylabel('Cell Density u(x,t)')\nplt.title('Snapshots of Cell Density Evolution')\nplt.legend(); plt.grid(True)\nplt.savefig('keller_segel_snapshots.png', dpi=300, bbox_inches='tight')\nplt.show()\n</code></pre> <p>The simulation reproduces chemotactic collapse: from nearly uniform initial conditions with small noise, local peaks grow, sharpen, and stabilize. Chemical-mediated interactions spontaneously break symmetry and form ordered structures.</p>"},{"location":"notes/15.%20Chemotaxis%2C%20Run-and-Tumble%20Motion%2C%20and%20the%20Keller%E2%80%93Segel%20Model/#conclusion","title":"Conclusion","text":"<p>We began at the molecular scale, examining the precise chemosensory network inside a single bacterium \u2014 the biochemical foundation of environmental sensing. We then abstracted this rich biology to a single-particle statistical model in one dimension: a two-state (run/tumble) process, captured by a few key switching rates alpha+/-.</p> <p>Through coarse-graining and an adiabatic (time-scale separation) approximation, we elevated this microscopic stochastic model to a continuum description. The result is a Fokker-Planck equation for the population density, with clear physical origins for the effective diffusion coefficient and drift velocity.</p> <p>Finally, coupling the cell population to its chemical environment leads to a nonlinear dynamical system \u2014 the Keller-Segel model \u2014 which exhibits emergent collective behavior not present at the single-cell level: spontaneous pattern formation and chemotactic collapse.</p> <p>This modeling chain, from molecules to populations and from microscopic stochasticity to macroscopic determinism, illustrates how theoretical physics clarifies complex bio-physical phenomena and reveals the universal organizing principles behind them.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/","title":"Introduction: From Externally Driven to Internally Driven Pattern Formation","text":"<p>In the previous lecture, we studied chemotaxis and the classic Keller-Segel model, which describes how biological populations (e.g., bacteria) aggregate in response to chemical gradients. To set the stage, we briefly recall its core idea. The Keller-Segel model consists of coupled reaction-diffusion equations that describe the spatiotemporal evolution of the particle (e.g., bacterial) density \\((g(\\vec{x},t))\\) and chemical concentration \\((c(\\vec{x},t))\\).</p> <p></p> <p>The density evolves as $$ \\partial_t g(\\vec{x}, t) = - \\vec{\\nabla} \\cdot \\Big( \\big( \\chi(c) \\, \\vec{\\nabla} c(\\vec{x}, t) \\big) \\, g(\\vec{x}, t) \\Big) + D \\, \\nabla^2 g(\\vec{x}, t) $$</p> <p>The chemical concentration evolves as $$ \\partial_t c(\\vec{x},t) = D_c \\, \\nabla^2 c(\\vec{x},t) - k \\, c(\\vec{x},t) + f(g) $$</p> <p>The first equation changes the density via a chemotactic term (motion up the chemical gradient with sensitivity \\((\\chi(c))\\)) and ordinary diffusion (random motion). The second describes production and dissipation of the chemical: diffusion \\((D_c \\nabla^2 c)\\), degradation \\((-k c)\\), and sources produced by particles \\((f(g))\\).</p> <p>At the core of Keller-Segel lies positive feedback: where particles accumulate, they raise the signal concentration, which in turn attracts even more particles. Such externally guided motion (by a chemical gradient) can transform a uniform state into a non-equilibrium steady state (NESS) with complex spatial structure, e.g., clusters or patterns.</p> <p></p> <p>While Keller-Segel explains many aggregation phenomena, it relies on a relatively intricate biological mechanism: particles must sense the environmental gradient and adjust their motion accordingly. This raises a deeper, more general physics question: even without external guidance and without direct attractive interactions, can intrinsic motility alone cause spontaneous pattern formation?</p> <p>This lecture addresses that question and explores a new mechanism of pattern formation. We will see that the intrinsic properties of particle motion - especially how speed depends on the surroundings (e.g., particle density) - can drive phase separation. This phenomenon is called motility-induced phase separation (MIPS). It marks a shift from externally driven, system-specific behavior to self-organization governed by broadly applicable physical principles.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#1-the-schnitzer-model-a-microscopic-description-of-run-and-tumble-dynamics","title":"1. The Schnitzer Model: A Microscopic Description of Run-and-Tumble Dynamics","text":"<p>To understand how microscopic motion leads to macroscopic patterns, we introduce a classic model: the Schnitzer model. Originally devised as a continuum description for run-and-tumble motion of microorganisms such as E. coli in chemotaxis, we will use it here as an idealized system to reveal the physics of MIPS.</p> <p>Developed in the late 1990s and early 2000s (M. J. Schnitzer, G. Oster, H. C. Berg), the model builds a statistical-mechanical framework for chemotactic behavior from first principles: it couples run-and-tumble stochastic motion to intracellular signaling, and via master/Fokker-Planck equations derives macroscopic drift/diffusion of populations in chemical fields. Beyond chemotaxis, it has become a standard paradigm for microbial motility, used to quantify search strategies, model pathogen invasion and immune tracking, and inspire algorithms for micro/nano-robotic swarms.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#11-system-definition","title":"1.1. System Definition","text":"<p>Consider a simplified one-dimensional system with two particle types:</p> <ul> <li>Right-movers of density \\((P_+(x,t))\\) travel with speed \\((v(x))\\) in +x.</li> <li>Left-movers of density \\((P_-(x,t))\\) travel with speed \\((v(x))\\) in -x.</li> </ul> <p>Both the speed \\((v(x))\\) and tumble rate \\((\\alpha(x))\\) may depend on position. Tumbles (at rate \\((\\alpha(x))\\)) randomly flip direction; in 1D, right-movers become left-movers and vice versa.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#12-master-equations","title":"1.2. Master Equations","text":"<p>The densities \\((P_\\pm)\\) evolve according to coupled PDEs. For right-movers: $$ \\partial_t P_+ = -\\partial_x [v(x) P_+] - \\tfrac{1}{2} \\, \\alpha(x) P_+ + \\tfrac{1}{2} \\, \\alpha(x) P_- $$</p> <p>This has three parts:</p> <ol> <li> <p>Advection: \\(-\\partial_x [v(x) P_+]\\). This is the outflow term of a continuity equation, describing how the density of right-movers changes because they travel to the right at speed \\(v(x)\\).</p> </li> <li> <p>Loss: \\(-\\tfrac{1}{2}\\,\\alpha(x) P_+\\). Right-movers tumble at rate \\(\\alpha(x)\\). In one dimension, after a tumble the direction is randomized, so with probability one half the particle becomes a left-mover. This term represents the loss from the \\(P_+\\) population due to such tumbles.</p> </li> <li> <p>Gain: \\(+\\tfrac{1}{2}\\,\\alpha(x) P_-\\). Symmetrically, left-movers tumble and with probability one half become right-movers, replenishing the \\(P_+\\) population.</p> </li> </ol> <p>For left-movers: $$ \\partial_t P_- = +\\partial_x [v(x) P_-] - \\tfrac{1}{2} \\, \\alpha(x) P_- + \\tfrac{1}{2} \\, \\alpha(x) P_+ $$</p> <p>The advection sign is positive (motion in -x). Loss/gain mirror the \\((P_+)\\) equation.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#13-macroscopic-observables","title":"1.3. Macroscopic Observables","text":"<p>We focus on macroscopic quantities derived from \\((P_\\pm)\\):</p> <ul> <li>Total density: \\((g(x,t) = P_+(x,t) + P_-(x,t))\\)</li> <li>Particle flux/current: \\((J(x,t) = v(x) [P_+(x,t) - P_-(x,t)])\\)</li> </ul> <p>Our goal is a closed evolution equation for \\((g(x,t))\\) alone - i.e., to coarse-grain.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#2-from-microscopic-rules-to-macroscopic-law-via-adiabatic-elimination","title":"2. From Microscopic Rules to Macroscopic Law via Adiabatic Elimination","text":""},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#21-principle-of-adiabatic-elimination","title":"2.1. Principle of Adiabatic Elimination","text":"<p>When variables evolve on widely separated time scales, fast variables can be assumed to relax instantaneously to quasi-steady values set by the slow ones. Eliminating the fast variables yields effective dynamics for the slow variables alone.</p> <p>In the Schnitzer model: - Slow variable: total density \\((g = P_+ + P_-)\\), which changes via spatial transport. - Fast variable: the density difference \\((P_+ - P_-)\\) tied to the flux \\((J)\\), relaxing quickly via tumbling at rate \\((\\alpha)\\).</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#22-derivation-of-the-effective-fokker-planck-equation","title":"2.2. Derivation of the Effective Fokker-Planck Equation","text":"<p>Add/subtract the master equations:</p> <ul> <li> <p>Adding: $$ \\partial_t (P_+ + P_-) = -\\partial_x [v (P_+ - P_-)]  =&gt;  \\partial_t g = -\\partial_x J $$ This is exact particle conservation: changes in total density equal minus the flux divergence.</p> </li> <li> <p>Subtracting: $$ \\partial_t (P_+ - P_-) = -\\partial_x [v (P_+ + P_-)] - \\alpha (P_+ - P_-) $$</p> </li> </ul> <p>Adiabatic approximation: \\((\\partial_t (P_+ - P_-) \\approx 0)\\). Then $$ 0 \\approx -\\partial_x [v (P_+ + P_-)] - \\alpha (P_+ - P_-) = -\\partial_x [v g] - \\alpha (P_+ - P_-) $$ so $$ (P_+ - P_-) \\approx -\\frac{1}{\\alpha(x)} \\, \\partial_x [v(x) g(x,t)] $$</p> <p>Insert into the flux definition: $$ J = v(x) (P_+ - P_-) \\approx -\\frac{v(x)}{\\alpha(x)} \\, \\partial_x [v(x) g(x,t)] $$</p> <p>Insert \\((J)\\) into conservation \\((\\partial_t g = -\\partial_x J)\\): $$ \\partial_t g(x,t) = \\partial_x \\Big( \\frac{v(x)}{\\alpha(x)} \\, \\partial_x [v(x) g(x,t)] \\Big) $$</p> <p>With the \\((\\tfrac{1}{2})\\) convention used in the master equation (loss terms are \\((\\tfrac{1}{2}\\alpha P_\\pm)\\)), the final form carries an explicit \\((\\tfrac{1}{2})\\): $$ \\partial_t g(x,t) = \\partial_x \\Big( \\frac{v(x)}{2\\,\\alpha(x)} \\, \\partial_x [v(x) g(x,t)] \\Big) $$</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#23-effective-flux-and-diffusion","title":"2.3. Effective Flux and Diffusion","text":"<p>Expand the effective flux \\((J)\\): $$ J = -\\frac{v(x)}{\\alpha(x)} \\Big( g(x,t) \\, \\partial_x v(x) + v(x) \\, \\partial_x g(x,t) \\Big) $$</p> <p>Collecting terms: $$ J = - (v(x)^2/\\alpha(x)) \\, \\partial_x g  -  (g(x,t) \\, v(x)/\\alpha(x)) \\, \\partial_x v(x) $$</p> <p>Thus macroscopic motion has two pieces: - Effective diffusion: Fick-like with \\((D_eff(x) = v(x)^2/\\alpha(x))\\). - Effective drift: proportional to \\((g)\\) and \\((\\partial_x v(x))\\), pulling toward lower \\((v(x))\\).</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#3-physics-of-active-particle-accumulation","title":"3. Physics of Active Particle Accumulation","text":""},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#31-steady-state-analysis","title":"3.1. Steady-State Analysis","text":"<p>Consider a closed system; at steady state the net flux \\((J_ss)\\) vanishes. For constant tumbling \\((\\alpha(x)=\\alpha_0)\\): $$ -\\alpha_0 \\, v(x) \\, \\partial_x [v(x) \\, g_{ss}(x)] = 0 $$ so $$ v(x) \\, g_{ss}(x) = constant $$</p> <p>Therefore $$ g_{ss}(x) \\propto 1/v(x) $$</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#32-physical-interpretation-active-particles-accumulate-where-they-move-slowly","title":"3.2. Physical Interpretation: \"Active Particles Accumulate Where They Move Slowly\"","text":"<p>The relation \\((g \\propto 1/v)\\) is a cornerstone of active-matter physics and contrasts with equilibrium. In equilibrium, steady distributions follow Boltzmann weights \\((g \\propto e^{-U/k_BT})\\) determined by energy landscapes, not by kinematics. In active systems, a non-equilibrium steady state is set by dynamics. Intuitively, if particles slow down in a region, they linger longer and accumulate (\"traffic jam\" effect), while fast regions are traversed quickly.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#4-motility-induced-phase-separation-mips","title":"4. Motility-Induced Phase Separation (MIPS)","text":"<p>So far \\((v(x))\\) was a prescribed function of position. Now we introduce a physically crucial ingredient that directly leads to phase separation.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#41-key-feedback-density-dependent-motility","title":"4.1. Key Feedback: Density-Dependent Motility","text":"<p>Assume particle speed depends on the local density, \\((v = v(g))\\). This captures crowding/steric effects (and, e.g., quorum sensing) that reduce speed at higher density. We focus on monotonically decreasing motility: $$ v'(g) = dv/dg &lt; 0 $$</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#42-onset-of-instability-anti-diffusion","title":"4.2. Onset of Instability: Anti-Diffusion","text":"<p>With \\((v(g))\\) and, for simplicity, \\((\\alpha=1)\\), the effective flux becomes $$ J = -v(g) \\, \\partial_x [g \\, v(g)] $$</p> <p>Using the chain rule, $$ J = -v(g) [ v(g) \\, \\partial_x g + g \\, v'(g) \\, \\partial_x g ] $$</p> <p>so $$ J = - [ v(g)^2 + g \\, v(g) \\, v'(g) ] \\, \\partial_x g $$</p> <p>This is still Fick-like, \\((J = -D_eff(g) \\, \\partial_x g)\\), but the effective diffusivity now depends on \\((g)\\): $$ D_eff(g) = v(g)^2 + g \\, v(g) \\, v'(g) $$</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#43-aggregation-criterion-and-positive-feedback","title":"4.3. Aggregation Criterion and Positive Feedback","text":"<p>The sign of \\((D_eff(g))\\) controls macroscopic behavior: - Normal diffusion: if \\((D_eff(g) &gt; 0)\\), flux runs down gradients and smooths inhomogeneities. - Anti-diffusion: if \\((D_eff(g) &lt; 0)\\), flux points up the gradient, amplifying fluctuations and causing spontaneous aggregation and patterns.</p> <p>Since \\((v(g)&gt;0)\\), instability occurs when $$ v(g) + g \\, v'(g) &lt; 0 $$</p> <p>equivalently $$ d/dg [g \\, v(g)] &lt; 0 $$</p> <p>The mechanism is a positive feedback loop (the core of MIPS):</p> <p>1) Initial fluctuation: starting from a nearly uniform state, a small positive density fluctuation appears due to noise.</p> <p>2) Slowing: because \\((v'(g) &lt; 0)\\), particles in the slightly denser region slow down.</p> <p>3) Accumulation: using the principle \\((g \\propto 1/v)\\), active particles accumulate where they move slowly, so more particles drift into the already denser region.</p> <p>4) Amplification: further accumulation raises the local density even more, which further decreases speed, which attracts even more particles, and so on.</p> <p>This runaway amplification breaks uniformity and drives phase separation into a dense, low-motility \"liquid\" and a dilute, high-motility \"gas.\" It is a purely non-equilibrium transition caused by motility rather than attractive forces.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#5-2d-simulation-of-mips-and-numerical-method","title":"5. 2D Simulation of MIPS and Numerical Method","text":"<p>To explore MIPS in space, we build and solve a two-dimensional model. While 1D reveals the instability, 2D shows pattern formation, competition, and coarsening - hallmarks of phase separation.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#51-physical-model-the-cahn-hilliard-equation","title":"5.1. Physical Model: The Cahn-Hilliard Equation","text":"<p>In 2D, a robust description of phase separation is the Cahn-Hilliard equation. It captures competition between \"uphill diffusion\" and an interfacial penalty that prevents infinitely sharp interfaces.</p> <p>For density \\((g(\\vec{x}, t))\\): $$ \\frac{\\partial g}{\\partial t} = M \\, \\nabla^2 \\mu $$</p> <p>Here \\((M)\\) is a constant mobility and \\((\\mu)\\) an effective chemical potential given by the functional derivative of an effective free energy \\((F[g])\\). This is a continuity equation: particles flow from higher chemical potential to lower chemical potential. $$ \\mu = \\delta F/\\delta g = f'(g) - \\kappa \\, \\nabla^2 g $$</p> <ul> <li>Bulk term \\((f'(g))\\): tied to effective interactions; in MIPS it relates to \\((D_{eff}(g))\\) via \\((f''(g) \\propto D_{eff}(g))\\). For \\((v(g) = v_0 (1 - g/g^*))\\):</li> </ul> \\[ f'(g) = v_0^2 \\left( g - \\frac{3}{2g^*} g^2 + \\frac{2}{3(g^*)^2} g^3 \\right) \\] <ul> <li>Interfacial term \\((-\\kappa \\, \\nabla^2 g)\\): \\(\\kappa&gt;0\\) sets interfacial \"tension,\" penalizing high curvature and giving interfaces a finite width and energy.</li> </ul> <p>Combining these two contributions yields a fourth-order nonlinear partial differential equation that we solve for \\(g(\\vec{x},t)\\).</p> <p>Many bacteria (e.g., E. coli, Myxococcus xanthus) form dense colonies/biofilms on substrates. Frequent collisions hinder motion (\"crowding-induced slowing\"), separating into dense, nearly immotile droplets and dilute, fast \"gas.\"</p> <p>A helpful macroscopic analogy (Frey's lecture): shoppers clustering at a storefront slow down, forcing others to slow or detour, increasing local density without any attractive force - rules of motion alone cause aggregation.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#52-numerical-method-finite-differences","title":"5.2. Numerical Method: Finite Differences","text":"<p>We solve the Cahn-Hilliard equation on an \\((N_x \\times N_y)\\) grid with finite differences. Grid indices are \\((i,j)\\), and the time index is \\(n\\).</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#spatial-discretization-2d-laplacian-five-point-stencil","title":"Spatial Discretization: 2D Laplacian (Five-Point Stencil)","text":"\\[ (\\nabla^2 U)_{i,j} \\approx (U_{i+1,j} + U_{i-1,j} + U_{i,j+1} + U_{i,j-1} - 4U_{i,j}) / (\\Delta x)^2 \\] <p>We assume equal spacing in both directions, \\(\\Delta x = \\Delta y\\). Here \\(U_{i\\pm1,j}\\) and \\(U_{i,j\\pm1}\\) denote nearest neighbors in the \\(x\\) and \\(y\\) directions, respectively.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#time-discretization-forward-euler","title":"Time Discretization: Forward Euler","text":"\\[ (\\partial g/\\partial t)_{t=t_n} \\approx (g_{i,j}^{n+1} - g_{i,j}^n)/(\\Delta t) \\]"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#full-update-one-time-step","title":"Full Update (One Time Step)","text":"<ol> <li>Compute \\((\\nabla^2 g)^n_{i,j}\\) from \\(g^n\\). For each grid point \\((i,j)\\), apply the five-point stencil above.</li> <li>Compute the chemical potential \\(\\mu^n_{i,j} = f'(g_{i,j}^n) - \\kappa \\, (\\nabla^2 g)^n_{i,j}\\).</li> <li>Compute \\((\\nabla^2 \\mu)^n_{i,j}\\). Again use the five-point stencil on \\(\\mu^n\\).</li> <li>Update \\(g_{i,j}^{n+1} = g_{i,j}^n + M \\, \\Delta t \\, (\\nabla^2 \\mu)^n_{i,j}\\).</li> </ol> <p>We use periodic boundary conditions in both directions (implemented via array rolls in the code).</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#53-python-implementation","title":"5.3. Python Implementation","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport imageio\nimport os\nfrom tqdm import tqdm\n\n# --- 1. Parameter settings ---\nL = 10.0      # System domain side length\nNx = 128      # Number of spatial grid points (same in x and y directions)\ndx = L / Nx   # Spatial step size\n\n# --- Simulation total time T=20 ---\nT = 20.0\n# --- Correspondingly reduce total steps ---\nNt = 8000\ndt = T / Nt\n\n# Model parameters\nv0 = 1.0\ng_star = 2.0\ng0 = 1.2      # Average density\nM = 1.0       # Mobility\nkappa = 1e-4  # Surface tension coefficient\n\n# --- 2. Define relevant functions ---\ndef mu_bulk_func(g, v0, g_star):\n    term1 = g\n    term2 = -(3.0 / (2.0 * g_star)) * g**2\n    term3 = (2.0 / (3.0 * g_star**2)) * g**3\n    return v0**2 * (term1 + term2 + term3)\n\n# --- 3. Initialize density field ---\ng = g0 + 0.05 * (np.random.rand(Nx, Nx) - 0.5)\n\n# Frames for storing GIF and statistical plots\nframes = []\n\n# --- 4. Main simulation loop ---\nfor n in tqdm(range(Nt), desc=f\"Simulating 2D MIPS (T={T})\"):\n    g_up, g_down = np.roll(g, -1, axis=0), np.roll(g, 1, axis=0)\n    g_left, g_right = np.roll(g, -1, axis=1), np.roll(g, 1, axis=1)\n    lap_g = (g_up + g_down + g_left + g_right - 4*g) / (dx**2)\n\n    mu_bulk = mu_bulk_func(g, v0, g_star)\n    mu = mu_bulk - kappa * lap_g\n\n    mu_up, mu_down = np.roll(mu, -1, axis=0), np.roll(mu, 1, axis=0)\n    mu_left, mu_right = np.roll(mu, -1, axis=1), np.roll(mu, 1, axis=1)\n    lap_mu = (mu_up + mu_down + mu_left + mu_right - 4*mu) / (dx**2)\n\n    g = g + M * dt * lap_mu\n\n    if n % (Nt // 100) == 0:\n        frames.append(g.copy())\n\n# --- 5. Create GIF animation ---\nprint(\"\\nCreating GIF animation...\")\ntemp_dir = 'temp_frames_mips2d_short'\nos.makedirs(temp_dir, exist_ok=True)\ngif_filename = 'MIPS_2D.gif'\nfilenames = []\n\nall_data = np.concatenate([frame.flatten() for frame in frames])\nvmin = np.percentile(all_data, 0.1)\nvmax = np.percentile(all_data, 99.9)\n\nfor i, frame_data in enumerate(frames):\n    fig, ax = plt.subplots(figsize=(8, 8))\n    im = ax.imshow(frame_data, cmap='magma', vmin=vmin, vmax=vmax, interpolation='bicubic')\n    ax.set_title(f'2D MIPS: Density Field at t = {i / (len(frames)-1) * T:.2f}')\n    ax.set_xticks([]); ax.set_yticks([])\n    plt.colorbar(im, ax=ax, fraction=0.046, pad=0.04, label=\"Density g(x,y,t)\")\n\n    filename = f'{temp_dir}/frame_{i:03d}.png'\n    plt.savefig(filename)\n    filenames.append(filename)\n    plt.close(fig)\n\ngif_duration = 0.2\nwith imageio.get_writer(gif_filename, mode='I', duration=gif_duration, loop=0) as writer:\n    for filename in tqdm(filenames, desc=\"Building GIF\"):\n        image = imageio.imread(filename)\n        writer.append_data(image)\n\nprint(f'\\nAnimation saved as {gif_filename}')\n\n# --- 6. Plot core statistics: density histogram ---\nprint(\"Creating statistical histogram plot...\")\nfig_hist, ax_hist = plt.subplots(figsize=(10, 7))\n\n# Select representative time points to plot\n# Change last index from 100 to 99, as list indices range from 0 to 99\nsnapshot_indices = [0, 10, 30, 99]\ncolors = plt.cm.viridis(np.linspace(0, 1, len(snapshot_indices)))\n\nfor i, frame_idx in enumerate(snapshot_indices):\n    time = frame_idx / (len(frames) - 1) * T  # Corrected time calculation\n    data = frames[frame_idx].flatten()\n    ax_hist.hist(data, bins=100, density=True, alpha=0.7,\n                 label=f't = {time:.1f}', color=colors[i])\n\nax_hist.set_title('Evolution of Density Distribution during MIPS', fontsize=16)\nax_hist.set_xlabel('Density (g)', fontsize=14)\nax_hist.set_ylabel('Probability Density', fontsize=14)\nax_hist.legend()\nax_hist.grid(True, alpha=0.3)\nplt.tight_layout()\nplt.savefig('MIPS_density_histogram.png')\nplt.show()\n\nprint('Histogram plot saved as MIPS_density_histogram.png')\n</code></pre> <p>The animation shows the initiation of phase separation: starting near uniform, instability amplifies small noise into an interlaced labyrinth, which breaks and retracts by interfacial tension into rounded, high-density \"droplets\" in a low-density \"gas.\"</p> <p></p> <ul> <li>\\((t = 0.0)\\) (purple): a single narrow peak at \\((g_0=1.2)\\) (uniform state).</li> <li>\\((t = 2.0)\\) (blue): distribution rapidly broadens and collapses to both sides - uniformity breaks.</li> <li>\\((t = 6.1)\\) (green): a clear bimodal structure appears - two phases emerge.</li> <li>\\((t = 20.0)\\) (yellow): bimodality fully developed; peaks correspond to \"gas\" (~0.7) and \"liquid\" (~2.25).</li> </ul>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#6-an-effective-thermodynamic-description","title":"6. An Effective Thermodynamic Description","text":"<p>Though MIPS is complex and intrinsically out of equilibrium, its behavior admits a description reminiscent of equilibrium free energy.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#61-mapping-to-a-gradient-flow","title":"6.1. Mapping to a Gradient Flow","text":"<p>The effective flux can be written $$ J_eff(x,t) = - M(g) \\, \\partial_x \\, \\mu_eff(g) $$</p> <p>Comparison with earlier expressions identifies - Mobility: \\((M(g) = g \\, v(g)^2)\\) - Effective chemical potential: \\((\\mu_eff(g) = \\log g + \\log v(g))\\)</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#62-lyapunov-functional","title":"6.2. Lyapunov Functional","text":"<p>Let \\((\\mu_eff)\\) be the functional derivative of an effective free energy (a Lyapunov functional): $$ F_eff[g] = \\int dx [ g(x) \\log g(x) - g(x) + \\int_0^g ds \\, \\log v(s) ] $$</p> <p>Indeed, $$ \\mu_eff(g) = \\delta F_eff/\\delta g = \\partial/\\partial g ( g \\log g - g + \\int_0^g ds \\, \\log v(s) ) = \\log g + \\log v(g) $$</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#63-the-system-always-moves-downhill","title":"6.3. The System Always \"Moves Downhill\"","text":"<p>The dynamics becomes a gradient flow: $$ \\partial_t g = \\partial_x [ M(g) \\, \\partial_x \\, \\delta F_eff/\\delta g ] $$</p> <p>Thus the effective free energy decreases monotonically: $$ \\frac{dF_eff}{dt} = \\int dx \\, \\mu_eff \\, \\partial_t g = \\int dx \\, \\mu_eff \\, \\partial_x [ M(g) \\, \\partial_x \\mu_eff ] $$</p> <p>With periodic boundaries (integration by parts), $$ \\frac{dF_eff}{dt} = - \\int dx \\, M(g) \\, (\\partial_x \\mu_eff)^2  &lt;=  0 $$</p> <p>So, despite being out of equilibrium, the evolution can be viewed as descending an effective energy landscape toward a minimum - the stable, phase-separated steady state. Coarsening (small droplets merging into large ones) lowers interface area and \\((F_eff)\\), akin to Ostwald ripening in equilibrium systems.</p>"},{"location":"notes/16.%20The%20Schnitzer%20Model%2C%20Anomalous%20Diffusion%2C%20and%20Motility%E2%80%91Induced%20Phase%20Separation/#conclusion","title":"Conclusion","text":"<p>This lecture starts from a microscopic model of single-particle run-and-tumble motion (the Schnitzer model). Through coarse-graining (adiabatic elimination), we derive a macroscopic evolution equation for the population density: an effective Fokker-Planck equation.</p> <p>By introducing a physically reasonable feedback (crowding-induced slowing), this macroscopic equation predicts a dynamical instability (anti-diffusion) that culminates in a striking collective phenomenon: motility-induced phase separation (MIPS). Finally, we show that the entire non-equilibrium process admits an elegant effective thermodynamic description via a Lyapunov functional; the dynamics proceeds as if the system were descending an energy landscape toward its minimum.</p> <p>Motility-induced phase separation is one of the most basic and universal self-organization mechanisms in active matter, broadly observed from bacterial colonies and synthetic colloids to robot collectives. The tools presented here provide a firm foundation for understanding these fascinating self-organizing phenomena.</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/","title":"Introduction","text":"<p>In previous lectures, Prof. Erwin Frey discussed how to describe stochastic processes using the master equation and the Fokker-Planck equation. These tools are powerful: they tell us how the probability distribution for being in a certain state at a given time evolves. This viewpoint is an ensemble perspective because it focuses on the average behavior of a theoretical collection of infinitely many identical systems. However, it does not tell us how a single particle - say, a pollen grain suspended in a liquid - actually moves along a specific, jagged path. This lecture marks a crucial shift in perspective: from describing the smooth evolution of probabilities to writing down an equation of motion that generates single-particle random trajectories. The key tool is the Langevin equation, which fuses deterministic Newtonian mechanics with stochasticity from statistical physics, providing an intuitive way to understand and simulate the behavior of particles in a thermal environment.</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#1-from-ensemble-to-trajectory-recap-and-new-view","title":"1. From Ensemble to Trajectory: Recap and New View","text":""},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#11-recap-of-markov-processes","title":"1.1. Recap of Markov Processes","text":"<p>To build a theory for single-particle trajectories, we first recall the frameworks used earlier to describe stochastic processes.</p> <ul> <li>Discrete state space</li> </ul> <p>For systems whose states are countable (e.g., the number of molecules in a compartment), probability evolution is governed by the master equation:</p> <p>$$   \\frac{dP(t)}{dt} = Q P(t)   $$</p> <p>Here, \\(P(t)\\) is a vector whose components are the probabilities of being in each discrete state, and \\(Q\\) is the transition-rate matrix. This equation describes the deterministic evolution of the entire distribution (the ensemble). If we want a single random history of an individual system, we use a trajectory sampler such as the Gillespie algorithm.</p> <ul> <li>Continuous state space</li> </ul> <p>For systems with continuous variables (e.g., position or velocity), probability evolution is described by the Fokker-Planck equation. Conceptually, it can be decomposed into parts:</p> <p>$$   \\frac{\\partial P(x,t)}{\\partial t} = \\text{drift} + \\text{diffusion} + \\text{jumps}   $$</p> <p>This equation likewise gives the deterministic evolution of the ensemble quantity \\(P(x,t)\\): a cloud of many particles drifts and diffuses.</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#12-posing-the-core-question","title":"1.2. Posing the Core Question","text":"<p>Both the master and Fokker-Planck equations answer \"Where might the particle be at time \\(t\\)?\" But they do not directly answer \"How did a particular particle move from time 0 to \\(t\\)?\" A single Brownian trajectory is continuous yet kinked everywhere and unpredictable.</p> <p></p> <p>This raises our core question: can we write a Newton-like equation of motion for an individual random particle - i.e., can we determine the unknown term in</p> \\[ \\frac{dx(t)}{dt} = ? \\] <p>The answer is the Langevin equation, proposed by Paul Langevin in the early 20th century.</p> <p>Langevin introduced his equation in 1908 to describe the irregular motion of a suspended particle undergoing molecular collisions in a fluid - a cornerstone for statistical mechanics and stochastic processes. It is a stochastic differential equation (SDE) combining deterministic forces (e.g., viscous drag) and random forces (Gaussian white noise), capturing the dynamics of a microscopic particle under driving forces, friction, and randomness. It satisfies the fluctuation-dissipation theorem, revealing how systems relax toward thermal equilibrium from nonequilibrium states.</p> <p>The equation has wide applications: simulating Brownian motion and molecular dynamics in physics, modeling reaction rates in chemistry, protein folding dynamics in biology; it underlies stochastic gradient methods in machine learning and is used for risk and volatility modeling in quantitative finance.</p> <p>The shift from the Fokker-Planck to Langevin equation is not merely a change of mathematical tool but a conceptual shift. The Fokker-Planck dynamics of \\(P(x,t)\\) are deterministic: given an initial distribution, the future evolution is fixed. By contrast, Langevin dynamics for a single trajectory \\(x(t)\\) are stochastic. The two are two sides of the same coin: one describes how the cloud of walkers evolves; the other generates each walker's steps. We will see a precise mapping between the parameters in Langevin dynamics (drift forces and noise strength) and the coefficients in the Fokker-Planck equation (drift and diffusion). Understanding this duality is foundational in stochastic process theory.</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#2-modeling-a-brownian-particle-the-necessity-of-random-forces","title":"2. Modeling a Brownian Particle: The Necessity of Random Forces","text":""},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#21-naive-macroscopic-model","title":"2.1. Naive Macroscopic Model","text":"<p>Consider a microscopic particle suspended in a liquid - the classic Brownian particle. A simplest model uses familiar macroscopic physics: an object moving in a viscous fluid experiences a drag force approximately proportional to velocity (Stokes drag). Newton's second law gives</p> \\[ m \\frac{dv(t)}{dt} = - m \\xi \\, v(t) \\] <p>Here \\(m\\) is mass and \\(v(t)\\) the velocity; the combination \\(m\\xi\\) is the friction coefficient, usually denoted \\(\\gamma\\), so \\(\\gamma = m\\xi\\). For a sphere of radius \\(R\\) in a fluid of viscosity \\(\\eta\\),</p> \\[ \\gamma = 6\\pi \\eta R. \\] <p>This first-order ODE has solution</p> \\[ v(t) = v_0 e^{-\\xi t}. \\] <p>It predicts exponential relaxation of velocity to zero on the timescale \\(\\xi^{-1}\\). The model captures dissipative energy loss due to friction but ignores random kicks from thermal motion, hence predicts eventual rest - contradicting observation.</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#22-conflict-with-thermodynamics","title":"2.2. Conflict with Thermodynamics","text":"<p>The conclusion that a particle in a fluid ultimately stops contradicts thermodynamics. By the equipartition theorem, in thermal equilibrium each quadratic degree of freedom has mean energy \\(\\tfrac{1}{2}k_B T\\). For three translational degrees of freedom,</p> \\[ \\langle E_{\\text{kin}} \\rangle = \\tfrac{1}{2} m \\langle v^2 \\rangle = \\tfrac{3}{2} k_B T. \\] <p>Hence, as long as \\(T&gt;0\\), the mean squared speed \\(\\langle v^2 \\rangle\\) is nonzero. The root-mean-square (thermal) speed is</p> \\[ \\sqrt{\\langle v^2 \\rangle} = \\sqrt{\\frac{3k_B T}{m}}. \\] <p>Thus the naive deterministic model (\\(v\\to 0\\)) conflicts with the thermodynamic requirement that \\(\\langle v^2 \\rangle\\) remains fixed by temperature.</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#23-langevins-hypothesis-a-fluctuating-force","title":"2.3. Langevin's Hypothesis: A Fluctuating Force","text":"<p>To resolve the conflict, Langevin postulated an additional, rapidly fluctuating random force \\(\\eta(t)\\) representing incessant, irregular collisions with surrounding fluid molecules. Adding this to the equation of motion gives the Langevin equation for velocity:</p> \\[ m \\frac{dv(t)}{dt} = - m \\xi \\, v(t) + \\eta(t). \\] <p>This embodies the fluid's dual role:</p> <ol> <li>Dissipation: the viscous term \\(-m\\xi v(t)\\) continuously removes kinetic energy.</li> <li>Fluctuation: the random term \\(\\eta(t)\\) injects thermal energy into the particle.</li> </ol> <p>Importantly, the microscopic mechanism causing dissipation (friction) and that causing fluctuations (random kicks) is the same: collisions with fluid molecules. The macroscopic drag \\(-m\\xi v\\) is the average effect; the stochastic \\(\\eta(t)\\) is the fluctuation around that average. This unity underlies the fluctuation-dissipation theorem derived next.</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#3-the-langevin-equation-and-the-fluctuation-dissipation-theorem","title":"3. The Langevin Equation and the Fluctuation-Dissipation Theorem","text":"<p>We cannot know the exact value of \\(\\eta(t)\\) at each instant, but we can specify its statistics.</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#31-noise-statistics","title":"3.1. Noise Statistics","text":"<ul> <li>Zero mean. By symmetry, random collisions average to zero:</li> </ul> <p>$$   \\langle \\eta(t) \\rangle = 0.   $$</p> <ul> <li>Delta-correlated (white noise). Molecular collision timescales (picoseconds) are far shorter than typical Brownian timescales (microseconds or longer). Idealize the force as temporally uncorrelated Gaussian white noise with correlation</li> </ul> <p>$$   \\langle \\eta_i(t) \\, \\eta_j(t') \\rangle = 2\\, \\Gamma\\, \\delta_{ij} \\, \\delta(t-t').   $$</p> <p>Here are the elements of this correlation:</p> <ul> <li>\\(\\Gamma\\) (noise strength): a constant that sets the amplitude of random-force fluctuations; its value is unknown a priori.</li> <li>\\(\\delta_{ij}\\) (Kronecker delta): equals 1 if \\(i=j\\) and 0 otherwise; independent force components, e.g., \\(x\\) is uncorrelated with \\(y\\) or \\(z\\).</li> <li>\\(\\delta(t-t')\\) (Dirac delta): correlations exist only at the same instant \\(t=t'\\); for \\(t\\ne t'\\) the correlation vanishes.</li> </ul>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#32-solving-for-velocity","title":"3.2. Solving for Velocity","text":"<p>Treating the Langevin equation as a linear ODE driven by \\(\\eta(t)\\) gives the integral solution</p> \\[ v(t) = v_0 e^{-\\xi t} + \\frac{1}{m} \\int_0^t d\\tau\\, e^{-\\xi (t-\\tau)} \\, \\eta(\\tau). \\] <p>Define standardized white noise \\(\\lambda(t) = \\eta(t)/\\sqrt{2\\Gamma}\\) with \\(\\langle \\lambda_i(t) \\lambda_j(t') \\rangle = \\delta_{ij}\\delta(t-t')\\). Then</p> \\[ v(t) = v_0 e^{-\\xi t} + \\frac{\\sqrt{2\\Gamma}}{m} \\int_0^t d\\tau\\, e^{-\\xi (t-\\tau)} \\, \\lambda(\\tau). \\]"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#33-velocity-autocorrelation-function","title":"3.3. Velocity Autocorrelation Function","text":"<p>A central quantity is the velocity autocorrelation function (VACF), \\(\\langle v_i(t) v_j(t') \\rangle\\). Substituting the solution and averaging yields four terms; cross terms vanish since \\(\\langle \\lambda \\rangle=0\\). Using \\(\\langle \\lambda_i(\\tau) \\lambda_j(\\tau') \\rangle = \\delta_{ij}\\delta(\\tau-\\tau')\\) one finds</p> \\[ \\langle v_i(t) v_j(t') \\rangle = \\Big( v_{0i} v_{0j} - \\frac{\\Gamma}{\\xi m^2} \\, \\delta_{ij} \\Big) e^{-\\xi (t+t')} + \\frac{\\Gamma}{\\xi m^2} \\, \\delta_{ij} \\, e^{-\\xi |t-t'|}. \\]"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#34-deriving-the-fluctuation-dissipation-theorem","title":"3.4. Deriving the Fluctuation-Dissipation Theorem","text":"<p>At long times (\\(t,t'\\gg\\xi^{-1}\\)) the initial-velocity term decays, giving the stationary VACF</p> \\[ \\langle v_i(t) v_j(t') \\rangle_{\\text{stat}} = \\frac{\\Gamma}{\\xi m^2} \\, \\delta_{ij} \\, e^{-\\xi |t-t'|}. \\] <p>Setting \\(t=t'\\) gives</p> \\[ \\langle v_i^2(t) \\rangle = \\frac{\\Gamma}{\\xi m^2}, \\qquad \\langle v^2(t) \\rangle = 3\\, \\frac{\\Gamma}{\\xi m^2}. \\] <p>Equating with equipartition \\(\\langle v^2 \\rangle = 3k_B T/m\\) yields</p> \\[ \\frac{3\\Gamma}{\\xi m^2} = \\frac{3k_B T}{m} \\;\\Rightarrow\\; \\Gamma = m\\xi k_B T = \\gamma k_B T. \\] <p>This is the fluctuation-dissipation theorem (FDT): the noise strength \\(\\Gamma\\) is not an independent parameter but is fixed by the dissipation (friction \\(\\gamma=m\\xi\\)) and the thermal energy scale \\(k_B T\\).</p> <p>For reference, here are the key physical parameters used in this lecture:</p> Symbol Name Meaning \\(m\\) mass Inertia of the Brownian particle. \\(v(t)\\) velocity Instantaneous particle velocity. \\(\\xi\\) damping rate Friction per unit mass (\\(\\gamma/m\\)); sets velocity relaxation time \\(\\xi^{-1}\\). \\(\\gamma=m\\xi\\) friction coefficient Viscous drag; for a sphere, \\(\\gamma=6\\pi\\eta R\\). \\(\\eta(t)\\) random force Thermal kicks from molecular collisions. \\(\\Gamma\\) noise strength Amplitude in \\(\\langle \\eta(t)\\eta(t') \\rangle\\). \\(k_B\\) Boltzmann constant Relates temperature and energy. \\(T\\) absolute temperature Mean kinetic energy of molecules. \\(D\\) diffusion coefficient Introduced in Section 4."},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#4-mean-squared-displacement-from-ballistic-to-diffusive-motion","title":"4. Mean Squared Displacement: From Ballistic to Diffusive Motion","text":"<p>We now turn from velocity to position, which is often what experiments track.</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#41-computing-the-msd","title":"4.1. Computing the MSD","text":"<p>The displacement is the time integral of velocity,</p> \\[\\Delta x(t) = x(t) - x(0) = \\int_0^t v(s)\\, ds,\\] <p>and the mean squared displacement (MSD) is</p> \\[\\langle |\\Delta x(t)|^2 \\rangle = \\Big\\langle \\Big(\\int_0^t v(s) ds\\Big) \\cdot \\Big(\\int_0^t v(s') ds'\\Big) \\Big\\rangle = \\int_0^t ds \\int_0^t ds'\\, \\langle v(s) \\cdot v(s') \\rangle.\\] <p>Using the stationary VACF \\(\\langle \\vec v(s)\\cdot\\vec v(s')\\rangle = 3\\, (k_B T/m)\\, e^{-\\xi |s-s'|}\\) (by FDT), one finds after integration</p> \\[\\langle |\\Delta x(t)|^2 \\rangle = \\frac{6k_B T}{m\\xi} \\Big[t - \\frac{1}{\\xi}\\big(1-e^{-\\xi t}\\big)\\Big].\\]"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#42-two-regimes-of-motion","title":"4.2. Two Regimes of Motion","text":"<p>This MSD contains rich physics revealed by limiting behaviors:</p> <ul> <li>Short times (ballistic). For \\(t\\ll \\xi^{-1}\\), \\(e^{-\\xi t}\\approx 1-\\xi t + \\tfrac{1}{2}(\\xi t)^2\\), hence</li> </ul> <p>\\(\\(\\langle |\\Delta x(t)|^2 \\rangle \\approx \\frac{3k_B T}{m} t^2 = \\langle v^2 \\rangle\\, t^2.\\)\\)</p> <p>The particle has not yet suffered many collisions; inertia dominates and MSD \\(\\propto t^2\\).</p> <ul> <li>Long times (diffusive). For \\(t\\gg \\xi^{-1}\\), \\(e^{-\\xi t}\\to 0\\), giving</li> </ul> <p>\\(\\(\\langle |\\Delta x(t)|^2 \\rangle \\approx \\frac{6k_B T}{m\\xi}\\, t.\\)\\)</p> <p>Memory of the initial velocity is lost; steps become uncorrelated and MSD \\(\\propto t\\).</p> <p>On a log-log plot, the slope crosses over smoothly from 2 at short times to 1 at long times around the relaxation time \\(\\tau_v=\\xi^{-1}=m/\\gamma\\). In this sense, the entire MSD curve serves as a \"kinetic fingerprint\" of particle-environment interaction: it vividly documents the transition of the governing physics from inertia-dominated motion to friction-dominated motion. The crossover occurs right around \\(\\tau_v\\), telling a complete story of motion from an \"inertial world\" to a \"friction-dominated world\".</p> <p></p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#43-einstein-stokes-relation","title":"4.3. Einstein-Stokes Relation","text":"<p>In \\(d\\) dimensions the diffusion coefficient \\(D\\) is defined via the long-time MSD: \\(\\langle |\\Delta x(t)|^2 \\rangle = 2d D t\\). Comparing with the \\(d=3\\) result above yields</p> \\[D = \\frac{k_B T}{m\\xi} = \\frac{k_B T}{\\gamma}.\\] <p>This is the Einstein-Stokes relation linking a macroscopic transport property (diffusivity) to microscopic parameters (temperature and friction).</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#5-simulating-brownian-particles-in-python","title":"5. Simulating Brownian Particles in Python","text":"<p>We now visualize ensemble spreading and verify the theory quantitatively.</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#51-numerical-method-euler-maruyama-scheme","title":"5.1. Numerical Method: Euler-Maruyama Scheme","text":"<p>Because the Langevin equation contains an unpredictable random term \\(\\eta(t)\\), there is no fixed analytical trajectory; we must use numerical methods. The simplest SDE integrator is Euler-Maruyama, a direct extension of Euler's method for ODEs. With timestep \\(\\Delta t\\) the updates are</p> \\[x_{n+1} = x_n + v_n\\, \\Delta t,\\] \\[m (v_{n+1}-v_n) = -m\\xi v_n\\, \\Delta t + \\int_{t_n}^{t_{n+1}} \\eta(\\tau)\\, d\\tau.\\] <p>Because of delta correlations, the noise integral scales as \\(\\sqrt{\\Delta t}\\) and is approximated by a Gaussian with variance \\(2\\Gamma\\Delta t\\). Thus</p> \\[v_{n+1} = v_n - \\xi v_n\\, \\Delta t + \\frac{\\sqrt{2\\Gamma\\Delta t}}{m}\\, N(0,1),\\] <p>with \\(N(0,1)\\) standard normal.</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#52-python-implementation","title":"5.2. Python Implementation","text":"<p>Below is a complete Python script (with comments) that simulates many Brownian particles in 2D, creates an animation of the ensemble, and plots the MSD with reference lines for ballistic (\\(\\propto t^2\\)) and diffusive (\\(\\propto t\\)) regimes.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport imageio\nimport os\nimport shutil\nimport warnings\n\nplt.style.use('dark_background')\nwarnings.filterwarnings(\"ignore\", category=UserWarning, module='imageio')\n\n# --- Parameter settings ---\n\nm = 1.0\nxi = 1.0         # Friction rate -&gt; Relaxation time tau = 1/xi = 1.0s\nkBT = 1.0        # Thermal energy, set to 1\ngamma = m * xi\nGamma = gamma * kBT\ntotal_time = 100.0\ndt = 0.01\n\n# --- General simulation parameters ---\nnum_particles = 500\nnum_steps = int(total_time / dt)\ndimensions = 2\n\n# --- 2. Initialization and simulation execution ---\npositions = np.zeros((num_particles, num_steps + 1, dimensions))\nvelocities = np.zeros((num_particles, num_steps + 1, dimensions))\n\n# Draw initial velocities from Gaussian distribution according to equipartition theorem\nv_std = np.sqrt(kBT / m)\nvelocities[:, 0, :] = np.random.normal(0, v_std, (num_particles, dimensions))\n\n# Pre-calculate noise term amplitude for efficiency\nnoise_amp = np.sqrt(2 * Gamma * dt) / m\n\nprint(\"Starting particle motion simulation...\")\nfor i in range(num_steps):\n    # Euler-Maruyama for velocity\n    noise = np.random.normal(0, 1, (num_particles, dimensions))\n    velocities[:, i+1, :] = velocities[:, i, :] - xi * velocities[:, i, :] * dt + noise_amp * noise\n    # Position update\n    positions[:, i+1, :] = positions[:, i, :] + velocities[:, i, :] * dt\n\n# --- 3. Create animation frames ---\nprint(\"Creating animation frames...\")\nframes_to_render = 80\nstep_interval = max(1, num_steps // frames_to_render)\ntemp_dir = 'temp_frames'\nos.makedirs(temp_dir, exist_ok=True)\nfilenames = []\n\nfor idx, step in enumerate(range(0, num_steps + 1, step_interval)):\n    fig, ax = plt.subplots(figsize=(7, 7))\n    ax.scatter(positions[:, step, 0], positions[:, step, 1], s=7, alpha=0.7, c='#00A0FF', edgecolor='none')\n    radius = np.sqrt(np.mean(np.sum(positions[:, step, :]**2, axis=1))) + 2.0\n    ax.set_xlim(-radius, radius)\n    ax.set_ylim(-radius, radius)\n    ax.set_aspect('equal', 'box')\n    ax.set_title(f\"Brownian Ensemble at t = {step * dt:.2f}s\", color='white')\n    ax.set_xlabel(\"x\", color='white')\n    ax.set_ylabel(\"y\", color='white')\n    ax.grid(True, linestyle='--', alpha=0.3)\n\n    filename = os.path.join(temp_dir, f\"frame_{idx:04d}.png\")\n    filenames.append(filename)\n    plt.savefig(filename, dpi=100)\n    plt.close()\n\ngif_filename = 'brownian_motion.gif'\nprint(\"Writing GIF animation...\")\nwith imageio.get_writer(gif_filename, mode='I', duration=0.08, loop=0) as writer:\n    for filename in filenames:\n        writer.append_data(imageio.imread(filename))\nshutil.rmtree(temp_dir)\nprint(f\"Animation saved to '{gif_filename}'\")\n\n# --- 4. Calculate and plot key MSD statistics ---\nprint(\"Calculating and plotting MSD statistics...\")\nsq_displacements = np.sum(positions**2, axis=2)\nmsd = np.mean(sq_displacements, axis=0)\ntime_axis = np.arange(num_steps + 1) * dt\nfig_msd, ax_msd = plt.subplots(figsize=(10, 7))\nax_msd.loglog(time_axis[1:], msd[1:], 'o', color='#00A0FF', markersize=3, alpha=0.8, label='Simulated MSD')\n\n# Reference lines\ntau_relax = 1/xi\nballistic_indices = (time_axis &gt; 0) &amp; (time_axis &lt; 0.1 * tau_relax)\nballistic_line = (dimensions * kBT / m) * time_axis[ballistic_indices]**2\nax_msd.loglog(time_axis[ballistic_indices], ballistic_line, 'r--', lw=2.5, label=r'Ballistic Regime ($\\\\propto t^2$)')\n\ndiffusive_indices = time_axis &gt; 10 * tau_relax\nD_eff = kBT / gamma\ndiffusive_line = 2 * dimensions * D_eff * time_axis[diffusive_indices]\nax_msd.loglog(time_axis[diffusive_indices], diffusive_line, 'g--', lw=2.5, label=r'Diffusive Regime ($\\\\propto t$)')\n\nax_msd.axvline(x=tau_relax, color='purple', linestyle=':', lw=2, label=f'Relaxation Time $\\\\tau = 1/\\\\xi = {tau_relax:.2e}$ s')\nax_msd.set_title(\"Mean Squared Displacement (MSD) vs. Time\", color='white', fontsize=16)\nax_msd.set_xlabel(\"Time (s)\", color='white', fontsize=12)\nax_msd.set_ylabel(\"MSD (m$^2$)\", color='white', fontsize=12)\nax_msd.legend(facecolor='gray', framealpha=0.2, labelcolor='white')\nax_msd.grid(True, which=\"both\", ls=\"--\", color='gray', alpha=0.5)\nplt.tight_layout()\nplt.savefig(\"msd_plot.png\", dpi=150)\nplt.show()\nprint(f\"MSD image saved to 'msd_plot.png'\")\n</code></pre> <p></p> <p>Shows how an ensemble (500 particles) spreads in time: all start at the origin and diffuse outward under random forces, visualizing the expanding \"probability cloud\" behind the Fokker-Planck equation.</p> <p> The MSD of all 500 simulated particles on a log-log plot. At short times (\\(t\\ll\\tau=1.0\\,\\mathrm{s}\\)), the data (blue circles) align with the \\(t^2\\) guide (red dashed), characteristic of ballistic motion. At long times (\\(t\\gg\\tau=1.0\\,\\mathrm{s}\\)), the data align with the \\(t\\) guide (green dashed), characteristic of diffusion. Around the relaxation time \\(\\tau=1.0\\,\\mathrm{s}\\) (purple vertical dotted line), the curve crosses over smoothly between regimes.</p> <p>This numerical experiment is a simple visualization. Our theoretical derivation used an idealized model (delta-correlated white noise). The simulation discretizes exactly that idealization (independent noise per step) yet reproduces the two-regime behavior robustly, indicating that white noise is an excellent effective model whenever the Brownian timescales of interest are long compared to microscopic collision times.</p>"},{"location":"notes/17.%20Langevin%20Equation%2C%20Brownian%20Particle%2C%20and%20the%20Fluctuation%E2%80%93Dissipation%20Theorem/#conclusion","title":"Conclusion","text":"<p>We completed the shift from ensemble descriptions to single-trajectory descriptions. Key points:</p> <ol> <li>Perspective shift: from the Fokker-Planck equation for probability distributions to the Langevin equation for individual trajectories - two complementary views.</li> <li>Necessity of random forces: a purely dissipative macroscopic model contradicts equipartition; a random (thermal) force must be included.</li> <li>Fluctuation-dissipation theorem: noise strength and dissipation are linked by temperature, \\(\\Gamma=\\gamma k_B T\\). This principle ensures that, over long times, the dynamics relax to the correct thermal equilibrium predicted by statistical mechanics.</li> <li>Unified regimes: Langevin dynamics unify ballistic (\\(\\text{MSD}\\propto t^2\\)) and diffusive (\\(\\text{MSD}\\propto t\\)) motion, yielding the Einstein-Stokes relation.</li> </ol> <p>The Langevin equation is a powerful tool to simulate and analyze stochastic dynamics and clarifies the intrinsic link between macroscopic dissipation and microscopic fluctuations.</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/","title":"Introduction","text":"<p>In the previous lecture, Prof. Erwin Frey introduced the Langevin equation, which describes the trajectory of a single Brownian particle by balancing two forces: a deterministic frictional (damping) force proportional to and opposing the velocity, and a random, rapidly fluctuating force representing continual collisions with surrounding solvent molecules. This provided a microscopic, single\u2011particle trajectory viewpoint.</p> <p></p> <p>In this lecture, we shift from describing a particular random path of one particle to describing how the probability distribution of an ensemble of many non\u2011interacting particles evolves in time. This is a transition from a stochastic ordinary differential equation (SDE) for a single trajectory to a deterministic partial differential equation (PDE) for the probability density itself. The new equation is the Fokker\u2013Planck equation (FPE).</p> <p>The Langevin equation contains a random term \\(\\eta(t)\\), which makes any single solution (a trajectory) unpredictable. However, by averaging over the statistics of the noise, we can derive a completely deterministic evolution equation for the probability distribution \\(p(v,t)\\). This demonstrates a core principle of statistical physics: how deterministic, predictable macroscopic laws (such as for probability distributions) emerge from underlying chaotic, random microscopic dynamics. While the Fokker\u2013Planck equation does not predict the specific path of any one particle, it does precisely predict how the \u201cprobability cloud\u201d \u2014 comprised of all possible realizations \u2014 evolves in time. This shows how statistical averaging \u201cwashes out\u201d microscopic randomness to reveal macroscopic determinism \u2014 a cornerstone linking mechanics and thermodynamics.</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#1-the-fokkerplanck-equation-in-velocity-space","title":"1. The Fokker\u2013Planck Equation in Velocity Space","text":""},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#11-starting-point-the-langevin-equation-in-velocity-space","title":"1.1 Starting Point: The Langevin Equation in Velocity Space","text":"<p>We begin with the Langevin equation for the velocity \\(v\\) of a free Brownian particle:</p> \\[ m\\frac{dv}{dt} = -m\\xi \\, v(t) + \\eta(t). \\] <p>Interpretation of each term:</p> <ul> <li>\\(m\\tfrac{dv}{dt}\\): inertia (mass times acceleration).</li> <li>\\(-m\\xi v(t)\\): viscous drag (damping), always opposing motion; \\(\\xi\\) is friction per unit mass.</li> <li>\\(\\eta(t)\\): random force representing continual, random impacts from the surrounding fluid molecules.</li> </ul> <p>The statistics of \\(\\eta(t)\\) are crucial. We model it as Gaussian with:</p> <ul> <li>Zero mean: \\(\\langle \\eta_i(t) \\rangle = 0\\).</li> <li>Delta\u2011correlated covariance (white noise): \\(\\langle \\eta_i(t)\\eta_j(t') \\rangle = 2\\Gamma \\, \\delta_{ij} \\delta(t-t')\\). The Dirac delta means forces at distinct times are uncorrelated; the strength is set by \\(\\Gamma\\).</li> </ul> <p>Here \\(\\Gamma = m\\xi k_B T\\) by the fluctuation\u2013dissipation theorem (FDT) derived previously, which links random fluctuation amplitude (\\(\\Gamma\\)) to dissipation (\\(\\xi\\)) and bath temperature (\\(T\\)), ensuring correct thermal equilibrium.</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#12-discretizing-the-dynamics","title":"1.2 Discretizing the Dynamics","text":"<p>To analyze the statistics of velocity increments, discretize over a small timestep \\(\\Delta t\\):</p> \\[ m\\frac{\\Delta v}{\\Delta t} = -m\\xi v(t) \\, \\Delta t + \\Delta W(t,\\Delta t), \\] <p>with the noise increment</p> \\[ \\Delta W(t,\\Delta t) := \\int_t^{t+\\Delta t} d\\tau\\, \\eta(\\tau), \\] <p>the net random impulse over \\(\\Delta t\\).</p> <p>Using the noise statistics,</p> <ul> <li>Mean: \\(\\langle \\Delta W_i \\rangle = \\int_t^{t+\\Delta t} d\\tau\\, \\langle \\eta_i(\\tau) \\rangle = 0\\).</li> <li>Covariance:</li> </ul> \\[ \\langle \\Delta W_k \\Delta W_j \\rangle = \\int_t^{t+\\Delta t}\\! d\\tau \\int_t^{t+\\Delta t}\\! d\\tau'\\, \\langle \\eta_k(\\tau) \\eta_j(\\tau') \\rangle = 2 m \\xi k_B T \\, \\delta_{kj}\\, \\Delta t. \\] <p>Crucially, \\(\\mathrm{Var}(\\Delta W) \\propto \\Delta t\\) (not \\((\\Delta t)^2\\)) \u2014 a hallmark of white noise and the origin of the \\(\\sqrt{t}\\) scaling in Brownian motion.</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#13-deriving-the-fokkerplanck-coefficients","title":"1.3 Deriving the Fokker\u2013Planck Coefficients","text":"<p>Define the drift and diffusion coefficients as the first and second moments per unit time of the velocity increment:</p> <ul> <li>Drift \\(A_i := \\lim_{\\Delta t\\to 0} \\tfrac{\\langle \\Delta v_i \\rangle}{\\Delta t}\\) (deterministic \u201cpush\u201d). From \\(\\langle \\Delta v_i \\rangle = -\\xi v_i \\Delta t\\) we get \\(A_i = -\\xi v_i\\).</li> <li>Diffusion \\(B_{ij} := \\lim_{\\Delta t\\to 0} \\tfrac{\\langle \\Delta v_i \\Delta v_j \\rangle}{\\Delta t}\\). Keeping leading order in \\(\\Delta t\\),</li> </ul> \\[ \\langle \\Delta v_i \\Delta v_j \\rangle \\approx \\frac{1}{m^2} \\langle \\Delta W_i \\Delta W_j \\rangle \\Rightarrow B_{ij} = \\frac{2 k_B T \\, \\xi}{m}\\, \\delta_{ij}. \\] <p>Thus velocity\u2011space diffusion is constant and proportional to temperature.</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#14-the-fokkerplanck-equation-for-velocity","title":"1.4 The Fokker\u2013Planck Equation for Velocity","text":"<p>The general Fokker\u2013Planck form is</p> \\[ \\partial_t p = -\\sum_i \\partial_{v_i}(A_i p) + \\tfrac{1}{2}\\sum_{i,j} \\partial_{v_i}\\partial_{v_j}(B_{ij} p). \\] <p>Substituting \\(A_i=-\\xi v_i\\) and \\(B_{ij} = \\tfrac{2 k_B T\\, \\xi}{m} \\delta_{ij}\\) yields</p> \\[ \\partial_t p(v,t) = \\nabla_v \\cdot [\\xi v\\, p(v,t)] + \\frac{k_B T\\, \\xi}{m} \\, \\nabla_v^2 p(v,t). \\] <p>Physically, the first term is drift: friction pulls probability toward \\(v=0\\). The second term is diffusion: random forces spread probability in velocity space.</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#15-equilibrium-recovering-thermodynamics","title":"1.5 Equilibrium: Recovering Thermodynamics","text":"<p>At long times (\\(t\\to \\infty\\)), \\(\\partial_t p=0\\) and drift\u2011 and diffusion\u2011induced fluxes balance.</p> <p>The stationary equation\u2019s solution is:</p> \\[ p_{\\text{eq}}(v) \\propto \\exp\\!\\left(-\\frac{m v^2}{2 k_B T}\\right), \\] <p>the Maxwell\u2013Boltzmann distribution. We started from a purely dynamical model \u2014 the Langevin equation \u2014 which itself knows nothing about statistical ensembles or thermodynamics. By deriving and solving the Fokker\u2013Planck equation, we demonstrate that this dynamics necessarily yields the Maxwell\u2013Boltzmann distribution for velocities, the cornerstone of equilibrium statistical mechanics. The Langevin equation describes the cause (friction and random collisions); the Fokker\u2013Planck equation describes the process (probability drift and diffusion); and the Maxwell\u2013Boltzmann distribution is the final outcome (the unique, stable equilibrium state). The Fokker\u2013Planck equation reveals the concrete dynamical mechanism by which a system thermalizes through interactions with its environment (friction and fluctuations), ultimately reaching the equilibrium predicted by thermodynamics. In this mechanism, the fluctuation\u2013dissipation theorem (\\(\\Gamma \\propto \\xi T\\)) is the key that guarantees the correct equilibrium: without it, the balance between drift and diffusion would be broken, and the system would not relax to the temperature\u2011determined state.</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#2-overdamped-limit-and-the-smoluchowski-equation","title":"2. Overdamped Limit and the Smoluchowski Equation","text":"<p>Now consider a particle moving in a potential \\(U(x)\\) with the full Langevin equation</p> \\[ m\\frac{d^2 x}{dt^2} + m\\xi \\frac{dx}{dt} = -\\nabla U(x) + \\eta(t). \\] <p>We identify inertia, damping, conservative force, and random force terms. In many physical and biological systems (e.g., colloids in water, proteins in cytoplasm), damping dominates inertia; in this overdamped (high\u2011friction) limit, momentum is rapidly randomized and the velocity adapts quasi\u2011instantly to the local force. This is a classic timescale separation: velocity \\(v\\) is a fast variable relaxing on \\(1/\\xi\\), while position \\(x\\) is a slow variable evolving over much longer times. Neglecting inertia gives the overdamped (Smoluchowski) Langevin equation</p> \\[ m\\xi\\frac{dx}{dt} = -\\nabla U(x) + \\eta(t). \\]"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#22-mobility-diffusion-and-the-einstein-relation","title":"2.2 Mobility, Diffusion, and the Einstein Relation","text":"<p>Rewrite as</p> \\[ \\frac{dx}{dt} = -\\frac{1}{m\\xi}\\, \\nabla U(x) + \\frac{1}{m\\xi}\\, \\eta(t) = -\\mu\\, \\nabla U(x) + \\xi(t), \\] <p>with mobility \\(\\mu:=1/(m\\xi)\\) (terminal speed per unit force). The rescaled noise \\(\\xi(t)=\\eta(t)/(m\\xi)\\) has covariance</p> \\[ \\langle \\xi_i(t) \\xi_j(t') \\rangle = 2\\mu k_B T\\, \\delta_{ij}\\, \\delta(t-t'). \\] <p>Defining the diffusion coefficient by \\(\\langle \\xi_i(t) \\xi_j(t') \\rangle = 2D\\, \\delta_{ij}\\, \\delta(t-t')\\) leads to the Einstein relation</p> \\[ D = \\mu k_B T. \\] <p>This unifies a macroscopic transport coefficient (\\(D\\)) with microscopic response (\\(\\mu\\)) and thermal energy \\(k_B T\\).</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#23-the-smoluchowski-equation","title":"2.3 The Smoluchowski Equation","text":"<p>Repeating the Fokker\u2013Planck derivation for position with the overdamped Langevin dynamics gives</p> <ul> <li>Drift: \\(A_i = \\lim_{\\Delta t \\to 0} \\tfrac{\\langle \\Delta x_i \\rangle}{\\Delta t} = -\\mu\\, \\partial_i U = \\mu F_i\\) with \\(F=-\\nabla U\\).</li> <li>Diffusion: \\(B_{ij} = 2D\\, \\delta_{ij}\\).</li> </ul> <p>Thus the Smoluchowski equation for \\(P(x,t)\\) is</p> \\[ \\partial_t P(x,t) = \\nabla \\cdot [\\mu (\\nabla U) P(x,t)] + D\\, \\nabla^2 P(x,t), \\] <p>or equivalently \\(\\partial_t P = \\nabla \\cdot [\\mu (\\nabla U) P + D\\, \\nabla P]\\).</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#24-equilibrium-in-a-potential","title":"2.4 Equilibrium in a Potential","text":"<p>Setting \\(\\partial_t P=0\\) (and vanishing flux at infinity) yields</p> \\[ P_{\\text{eq}}(x) \\propto \\exp\\!\\left(-\\frac{\\mu}{D} U(x)\\right) = \\exp\\!\\left(-\\frac{U(x)}{k_B T}\\right), \\] <p>using \\(D=\\mu k_B T\\). This is the Boltzmann distribution. The Smoluchowski equation gives a dynamical rationale: \\(U(x)\\) drives drift toward low energy, while thermal noise (via \\(D\\)) enables escape and exploration; the Einstein relation precisely balances these to produce the correct Boltzmann weights.</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#summary-velocity-vs-positionspace-fokkerplanck-descriptions","title":"Summary: Velocity\u2011 vs Position\u2011Space Fokker\u2013Planck Descriptions","text":"Feature Part I: Velocity space Part II: Position space (overdamped) Variable velocity \\(v(t)\\) position \\(x(t)\\) Langevin \\(m\\dot v = -m\\xi v + \\eta(t)\\) \\(\\dot x = -\\mu \\nabla U + \\xi(t)\\) Drift \\(A_i = -\\xi v_i\\) \\(A_i = -\\mu\\, \\partial_i U\\) Diffusion \\(B_{ij} = \\tfrac{2 k_B T\\, \\xi}{m}\\, \\delta_{ij}\\) \\(B_{ij} = 2D\\, \\delta_{ij}\\) Fokker\u2013Planck \\(\\partial_t p = \\nabla_v\\cdot(\\xi v p) + \\tfrac{k_B T\\, \\xi}{m} \\nabla_v^2 p\\) \\(\\partial_t P = \\nabla\\cdot(\\mu(\\nabla U)P) + D\\nabla^2 P\\) Equilibrium Maxwell\u2013Boltzmann Boltzmann Meaning thermalization of kinetic energy spatial arrangement in a potential"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#3-visualizing-a-smoluchowski-process","title":"3. Visualizing a Smoluchowski Process","text":"<p>We simulate overdamped Brownian motion of many particles in a 2D harmonic potential and animate it.</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#31-numerical-challenge-solving-sdes","title":"3.1 Numerical Challenge: Solving SDEs","text":"<p>For ODEs one might use Euler\u2019s method \\(x_{n+1} = x_n + f(x_n)\\Delta t\\), but for SDEs this is incorrect because it mishandles the noise scaling. The correct simplest method is the Euler\u2013Maruyama scheme: for \\(dX = a(X)dt + b(X)dW\\),</p> \\[ X_{n+1} = X_n + a(X_n)\\Delta t + b(X_n)\\sqrt{\\Delta t}\\, \\mathcal{N}(0,1), \\] <p>with the stochastic increment scaling as \\(\\sqrt{\\Delta t}\\).</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#32-system-setup-particles-in-a-2d-harmonic-trap","title":"3.2 System Setup: Particles in a 2D Harmonic Trap","text":"<p>We simulate many non\u2011interacting particles in 2D with overdamped Langevin dynamics.</p> <ul> <li> <p>Potential model: choose a simple 2D harmonic trap, \\(U(x,y)=\\tfrac{1}{2}k(x^2+y^2)\\), a central confining potential with force \\(F=-\\nabla U=-k\\,r\\) pointing to the origin.</p> </li> <li> <p>Discretized equations (Euler\u2013Maruyama):</p> </li> </ul> <p>$$   x_{n+1} = x_n - \\mu k\\, x_n\\, \\Delta t + \\sqrt{2D\\,\\Delta t}\\,\\mathcal{N}_x(0,1),   $$</p> <p>$$   y_{n+1} = y_n - \\mu k\\, y_n\\, \\Delta t + \\sqrt{2D\\,\\Delta t}\\,\\mathcal{N}_y(0,1),   $$</p> <p>with independent standard normal variates \\(\\mathcal{N}_x,\\mathcal{N}_y\\).</p> <ul> <li>Simulation parameters: number of particles <code>num_particles</code>, mobility <code>mu</code>, trap strength <code>k</code>, diffusion <code>D</code> (via Einstein relation and <code>kBT</code>), timestep <code>dt</code>, and total steps <code>num_steps</code>.</li> </ul>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#33-python-implementation-and-visualization","title":"3.3 Python Implementation and Visualization","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport os\nimport imageio\n\n# --- 0. Set plotting style ---\nplt.style.use('dark_background')\n\n# --- 1. Simulation parameter definition ---\nnum_particles = 500      # Increase number of particles for better statistics\nk = 1.0                  # Harmonic oscillator potential strength (U = 0.5*k*r^2)\nkBT = 0.5                # Thermal energy, k_B * T\nmu = 1.0                 # Mobility\n# Core relationship: Diffusion coefficient determined by fluctuation-dissipation theorem (Einstein relation)\nD = mu * kBT             \n\ndt = 0.01                # Time step\nnum_steps = 1000         # Total simulation steps\nsimulation_time = dt * num_steps\n\n# --- 2. Initialize particle positions ---\n# Initially distribute particles randomly within a disk\ninitial_radius = 4.0\ntheta = np.random.uniform(0, 2 * np.pi, num_particles)\nr = np.sqrt(np.random.uniform(0, initial_radius**2, num_particles))\npositions = np.zeros((num_particles, 2))\npositions[:, 0] = r * np.cos(theta)\npositions[:, 1] = r * np.sin(theta)\n\n# --- 3. Simulation main loop and GIF generation ---\nfig, ax = plt.subplots(figsize=(8, 8))\nax.set_aspect('equal')\n\n# Prepare folder to store image frames\noutput_folder = 'brownian_motion_frames'\nif not os.path.exists(output_folder):\n    os.makedirs(output_folder)\n\n# Pre-calculate coefficient for random term\nnoise_strength = np.sqrt(2 * D * dt)\n\n# Store filenames for each frame\nframe_files = []\n\nprint(\"Starting to generate GIF animation frames...\")\n# Simulation loop\nfor step in range(num_steps):\n    # This is the numerical solution of the overdamped Langevin equation (Euler-Maruyama method).\n    # This equation describes the trajectory of individual particles, and is the microscopic basis of the Fokker-Planck (Smoluchowski) equation.\n\n    # Calculate drift term (from harmonic oscillator potential F = -k*r)\n    drift = -mu * k * positions * dt\n\n    # Calculate random term (diffusion)\n    noise = noise_strength * np.random.randn(num_particles, 2)\n\n    # Update positions of all particles\n    positions += drift + noise\n\n    # Save a frame image every few steps to create GIF\n    if step % 10 == 0:\n        ax.clear()\n        # Use brighter colors to adapt to black background\n        ax.scatter(positions[:, 0], positions[:, 1], alpha=0.7, c='cyan', edgecolors='w', s=30, linewidths=0.5)\n        ax.set_xlim(-5, 5)\n        ax.set_ylim(-5, 5)\n        ax.set_title(f\"Overdamped Brownian Motion (Time = {step*dt:.2f})\", fontsize=14)\n        ax.set_xlabel(\"x position\")\n        ax.set_ylabel(\"y position\")\n\n        # Plot contour lines of theoretical equilibrium distribution\n        # Theoretical standard deviation sigma^2 = kBT/k\n        sigma_theory = np.sqrt(kBT / k)\n        circle1 = plt.Circle((0, 0), sigma_theory, color='r', fill=False, linestyle='--', label=r'$1\\sigma_{theory}$')\n        circle2 = plt.Circle((0, 0), 2*sigma_theory, color='r', fill=False, linestyle=':', label=r'$2\\sigma_{theory}$')\n        ax.add_artist(circle1)\n        ax.add_artist(circle2)\n        ax.legend()\n\n        filename = os.path.join(output_folder, f'frame_{step//10:04d}.png')\n        plt.savefig(filename)\n        frame_files.append(filename)\n\nplt.close(fig)\nprint(f\"Generated {len(frame_files)} image frames.\")\n\n# --- 4. Use imageio to combine image frames into GIF ---\nprint(\"Combining image frames into GIF...\")\ngif_path = 'overdamped_brownian_motion_dark.gif'\nwith imageio.get_writer(gif_path, mode='I', fps=20, loop=0) as writer:\n    for filename in frame_files:\n        image = imageio.imread(filename)\n        writer.append_data(image)\n\nprint(f\"GIF saved as '{gif_path}'\")\n\n# Clean up temporary image files\nfor filename in frame_files:\n    os.remove(filename)\nos.rmdir(output_folder)\nprint(\"Cleaned up temporary image files.\")\n\n\n# --- 5. Final distribution analysis: Comparison of simulation results with steady-state solution of Smoluchowski equation ---\nprint(\"Plotting final probability distribution...\")\nfig_dist, ax_dist = plt.subplots(figsize=(10, 8))\n\n# Plot 2D histogram (heatmap) of simulation results\n# This represents the particle probability distribution P(x, y) obtained from Langevin dynamics simulation\ncounts, xedges, yedges, im = ax_dist.hist2d(\n    positions[:, 0], positions[:, 1], \n    bins=50, density=True, cmap='inferno'\n)\nfig_dist.colorbar(im, ax=ax_dist, label='Simulated Probability Density')\n\n# Calculate and plot theoretical steady-state solution\n# The steady-state solution of the Smoluchowski equation is the Boltzmann distribution: P(x, y) ~ exp(-U(x,y)/kBT)\n# For harmonic oscillator potential U = 0.5*k*(x^2+y^2), this is a 2D Gaussian distribution\nsigma_theory = np.sqrt(kBT / k)\nx = np.linspace(-5, 5, 100)\ny = np.linspace(-5, 5, 100)\nX, Y = np.meshgrid(x, y)\nZ = (1.0 / (2 * np.pi * sigma_theory**2)) * np.exp(-(X**2 + Y**2) / (2 * sigma_theory**2))\n\n# Overlay theoretical solution as contour lines on heatmap\nax_dist.contour(X, Y, Z, levels=5, colors='lime', linewidths=1.5, linestyles='--')\n\n# Set chart title and labels\nax_dist.set_title(\"Final Distribution vs. Smoluchowski Equation Steady-State\", fontsize=16)\nax_dist.set_xlabel(\"x position\")\nax.set_aspect('equal')\nax_dist.set_ylabel(\"y position\")\n\n# Create a fake line object for legend\nfrom matplotlib.lines import Line2D\nlegend_elements = [Line2D([0], [0], color='lime', lw=2, linestyle='--', label='Theory (Boltzmann Distribution)')]\nax_dist.legend(handles=legend_elements)\nax_dist.set_aspect('equal', 'box')\n\nfinal_dist_path = 'final_distribution_comparison.png'\nplt.savefig(final_dist_path, dpi=150)\nprint(f\"Final distribution comparison plot saved as '{final_dist_path}'\")\nplt.show()\n</code></pre> <p>The animation shows particles spreading and then concentrating under the harmonic potential\u2019s \u201cpull\u201d and thermal noise \u201cstirring,\u201d approaching a dynamic steady concentration near the center.</p> <p></p> <p>The 2D histogram at the end of the simulation represents the empirical probability density \\(P(x,y)\\). Overlaid green dashed concentric contours show the theoretical steady state from the Smoluchowski equation \u2014 the Boltzmann distribution \\(P_{\\text{eq}}(x) \\propto e^{-U(x)/k_B T}\\), which in a harmonic trap is a 2D Gaussian. The long\u2011time statistics from the Langevin trajectories converge precisely to the steady\u2011state solution of the Fokker\u2013Planck/Smoluchowski description.</p>"},{"location":"notes/18.%20Fokker%E2%80%93Planck%20Equation%20and%20the%20Smoluchowski%20Equation%20%E2%80%94%20From%20Random%20Trajectories%20to%20Probability%20Dynamics/#conclusion","title":"Conclusion","text":"<p>This lecture builds a bridge between two fundamental perspectives on stochastic processes: the Langevin equation for particle trajectories and the Fokker\u2013Planck equation for probability evolution. Though mathematically different (SDE vs PDE), they describe the same physics and are mathematically consistent.</p> <ol> <li>From random walks in velocity to statistical laws: starting with the full Langevin equation (inertia, friction, random force) and analyzing increments over small \\(\\Delta t\\) yields drift and diffusion coefficients, leading to the Fokker\u2013Planck equation for \\(p(v,t)\\). Its stationary solution is the Maxwell\u2013Boltzmann distribution.</li> <li>High\u2011friction simplification: the overdamped limit reduces the Langevin dynamics to an equation for position alone; applying the same derivation gives the Smoluchowski equation for \\(P(x,t)\\).</li> <li>Equilibrium in a potential: the Smoluchowski equation\u2019s steady state in a potential \\(U(x)\\) is the Boltzmann distribution \\(P_{\\text{eq}}(x) \\propto e^{-U/k_B T}\\). Our Python simulation illustrates the ensemble\u2019s approach to this distribution in a harmonic trap.</li> </ol> <p>Throughout, the fluctuation\u2013dissipation theorem appears as the Einstein relation \\(D=\\mu k_B T\\), revealing the precise proportionality between fluctuations (diffusion \\(D\\)) and dissipation (mobility \\(\\mu\\) or friction \\(\\xi\\)) set by the environment\u2019s temperature \u2014 ensuring relaxation to the correct thermodynamic equilibrium.</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/","title":"Introduction: A New View of Stochastic Dynamics","text":"<p>In previous lectures, we studied two principal ways to describe stochastic processes: Langevin equations and Fokker\u2013Planck equations. Langevin equations track single\u2011particle trajectories under deterministic and random forces (a microscopic view), while Fokker\u2013Planck equations describe how the probability density of an ensemble evolves in time (a macroscopic statistical view). These correspond to following \u201ca single tree\u201d versus describing \u201cthe whole forest.\u201d</p> <p>This lecture introduces a powerful framework \u2014 the path integral. It provides a third perspective: rather than stepping state\u2011to\u2011state, we consider the complete history (trajectory) \\(x(\\tau)\\) over a time interval. The core idea is to assign a probability weight to each possible path and then \u201csum\u201d (i.e., perform a functional integral) over all paths to compute observables such as transition probabilities between states.</p> <p>The idea parallels Feynman\u2019s path integral in quantum mechanics: a particle\u2019s transition amplitude from \\(A\\) to \\(B\\) is obtained by integrating over all paths connecting \\(A\\) and \\(B\\) with phase weight \\(e^{iS/\\hbar}\\), where \\(S\\) is the classical action. In stochastic dynamics, we use real probabilities rather than complex phases; weights typically take the form \\(e^{-S}\\), where \\(S\\) is an action functional measuring how \u201cunlikely\u201d or \u201ccostly\u201d a path is.</p> <p>With this framework we can ask not only \u201cWhere will the particle be next?\u201d but also \u201cOver a time interval, which path from \\(A\\) to \\(B\\) is most probable?\u201d Beyond elegance, this perspective is useful in soft matter physics, biophysics, and quantitative finance.</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#1-recap-theoretical-landscape-of-stochastic-models","title":"1. Recap: Theoretical Landscape of Stochastic Models","text":"<p>Before building the path\u2011integral machinery, Prof. Erwin Frey recaps common models to situate path integrals within the broader theory. </p> <p>We can classify along two axes: discrete vs continuous space, and ensemble vs trajectory descriptions.</p> <ul> <li> <p>Discrete vs continuous systems:</p> </li> <li> <p>Lattice gas models: particles live on discrete lattice sites; used for crystals, spins, etc.</p> </li> <li> <p>Continuum systems: particles move in continuous space and interact via collisions; e.g., colloids in solution.</p> </li> <li> <p>Ensemble vs trajectory descriptions \u2014 the key conceptual split:</p> </li> <li> <p>Ensemble view (forest): focus on the time evolution of the probability distribution \\(P(x,t)\\).</p> <ul> <li> <p>Master equations: probability evolution on discrete state spaces \u2014 the backbone of ensemble descriptions.</p> </li> <li> <p>Fokker\u2013Planck equations: the continuum counterpart of master equations; PDEs for \\(P(x,t)\\) under drift and diffusion.</p> </li> </ul> </li> <li> <p>Trajectory view (a tree): focus on individual realizations \\(x(t)\\).</p> <ul> <li> <p>Gillespie algorithm: exact stochastic simulation for jump processes; widely used in reaction networks.</p> </li> <li> <p>Langevin equations: SDEs for continuous variables (e.g., position) with deterministic drift and random noise; solutions are random trajectories.</p> </li> <li> <p>Brownian dynamics simulations: numerical trajectories based on Langevin equations.</p> </li> </ul> </li> </ul> <p>We start from the familiar overdamped Langevin equation in 1D:</p> \\[\\dot{x}(t)=A(x(t))+\\xi(t)\\] <p>Here \\(x(t)\\) is position, \\(\\dot{x}(t)\\) the velocity, \\(A(x)\\) the deterministic drift (e.g., force \\(F(x)\\) from a potential \\(U(x)\\) divided by friction \\(\\gamma\\): \\(A=F/\\gamma\\)), and \\(\\xi(t)\\) is random noise from the environment.</p> <p>For Gaussian white noise we use:</p> <ol> <li> <p>Zero mean: \\(\\langle \\xi(t) \\rangle = 0\\).</p> </li> <li> <p>Delta correlation (memoryless): \\(\\langle \\xi(t)\\,\\xi(t') \\rangle = 2D\\,\\delta(t-t')\\), where \\(D\\) is the noise strength (diffusion coefficient; in equilibrium, \\(D = k_B T/\\gamma\\)).</p> </li> </ol>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#2-probability-of-noise-from-discrete-steps-to-continuous-paths","title":"2. Probability of Noise: From Discrete Steps to Continuous Paths","text":"<p>The first and most basic step in constructing the path-integral is to build a probability functional for the noise \\(\\xi(\\tau)\\) itself. The strategy is \"discretize first, then take the continuum limit\".</p> <p>A functional is a \u201cfunction of a function\u201d. Ordinary functions input a number (e.g., time \\(t\\)) and return a number (e.g., temperature \\(T(t)\\)). A functional inputs an entire function (e.g., a full curve \\(T(t)\\)) and returns a number (e.g., the average energy or total path length associated with that curve).</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#21-time-discretization","title":"2.1. Time Discretization","text":"<p>Divide \\([0,t]\\) into \\(n\\) small steps of size \\(\\Delta t\\) so that \\(t=n\\Delta t\\). At each time \\(\\tau_i=i\\Delta t\\) (\\(i=0,1,\\ldots,n-1\\)), define \\(\\xi_i=\\xi(\\tau_i)\\). For white noise, different times are statistically independent, so each \\(\\xi_i\\) is an independent Gaussian:</p> \\[p(\\xi_i) = \\frac{1}{\\sqrt{2\\pi\\sigma_\\xi^2}} \\exp\\left[-\\frac{\\xi_i^2}{2\\sigma_\\xi^2}\\right]\\] <p>where \\(\\sigma_\\xi^2\\) is the variance of the noise over one step \\(\\Delta t\\).</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#22-joint-probability-of-a-discrete-path","title":"2.2. Joint Probability of a Discrete Path","text":"<p>Since the \\(\\xi_i\\) are IID, the probability of a particular discrete noise path \\((\\xi_0,\\xi_1,\\ldots,\\xi_{n-1})\\) is the product:</p> <p>$$ p(\\xi_0, \\xi_1, \\ldots, \\xi_{n-1}) = \\prod_{i=0}^{n-1} p(\\xi_i) = \\left( \\frac{1}{2\\pi\\sigma_\\xi^2} \\right)^{n/2} \\exp \\left( -\\sum_{i=0}^{n-1} \\frac{\\xi_i^2}{2\\sigma_\\xi^2} \\right) $$ We focus on the exponential, which sets relative weights.</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#23-continuum-limit","title":"2.3. Continuum Limit","text":"<p>Now take \\(\\Delta t \\to 0\\) and \\(n \\to \\infty\\) with \\(t=n\\Delta t\\) fixed so sums become integrals.</p> <p>Match the discrete variance \\(\\sigma_\\xi^2\\) to the continuum diffusion \\(D\\) by equating correlations. Discrete: \\(\\langle\\xi_i\\xi_j\\rangle=\\sigma_\\xi^2\\delta_{ij}\\). Continuum: \\(\\langle\\xi(t)\\xi(t')\\rangle=2D\\,\\delta(t-t')\\). Averaging the continuum over discrete bins gives</p> \\[ \\langle \\xi_i \\xi_j \\rangle = \\int_{\\tau_i}^{\\tau_{i+1}} d\\tau \\int_{\\tau_j}^{\\tau_{j+1}} d\\tau' \\frac{\\langle \\xi(\\tau) \\xi(\\tau') \\rangle}{(\\Delta t)^2} \\approx \\frac{2D}{\\Delta t}\\, \\delta_{ij}. \\] <p>Hence \\(\\sigma_\\xi^2=2D/\\Delta t\\). Substituting into the exponent,</p> \\[- \\sum_{i=0}^{n-1} \\frac{\\xi_i^2}{2\\sigma_{\\xi}^2} = - \\frac{1}{4D} \\sum_{i=0}^{n-1} \\xi_i^2 \\Delta t\\] <p>and as \\(\\Delta t \\to 0\\) the Riemann sum becomes</p> \\[\\sum_{i=0}^{n-1} \\xi_i^2 \\Delta t \\;\\to\\; \\int_0^t d\\tau \\, \\xi^2(\\tau).\\]"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#24-probability-functional-of-noise","title":"2.4. Probability Functional of Noise","text":"<p>Thus the probability functional of a continuous noise history \\(\\xi(\\tau)\\) is</p> \\[P[\\xi(\\tau)] \\sim \\exp\\left(-\\frac{1}{4D}\\int_0^t d\\tau\\, \\xi^2(\\tau)\\right).\\] <p>This is the cornerstone of the path\u2011integral description. It says that a noise history\u2019s probability decays exponentially with its \u201cenergy\u201d \\(\\int \\xi^2\\,d\\tau\\): larger amplitude and longer duration noise fluctuations are less likely.</p> <p>Formally, the path integral is</p> \\[\\langle \\mathcal{O}[\\xi(\\tau)] \\rangle = \\int \\mathcal{D}[\\xi(\\tau)] \\, \\mathcal{O}[\\xi(\\tau)] \\exp\\left(-\\frac{1}{4D}\\int_0^t d\\tau\\, \\xi^2(\\tau)\\right),\\] <p>with \\(\\mathcal{O}[\\xi(\\tau)]\\) a functional observable and \\(\\mathcal{D}[\\xi(\\tau)]\\) the measure over paths (formally \\(\\lim_{n\\to\\infty}\\prod_{i=0}^{n-1}\\tfrac{d\\xi_i}{\\sqrt{2\\pi\\sigma_\\xi^2}}\\), including normalization).</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#3-from-noise-to-particle-the-onsagermachlup-action","title":"3. From Noise to Particle: The Onsager\u2013Machlup Action","text":"<p>We have the probability functional for noise. Our goal is the probability functional for particle paths \\(x(\\tau)\\): \\(P[x(\\tau)]\\). The key is a change of variables in the functional integral from \\(\\xi(\\tau)\\) to \\(x(\\tau)\\).</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#31-change-of-variables","title":"3.1. Change of Variables","text":"<p>In the functional integral the Jacobian is \\(\\det\\!\\left(\\tfrac{\\delta \\xi(\\tau')}{\\delta x(\\tau)}\\right)\\). A direct evaluation is involved, so return to a discrete picture.</p> <p>Write the discretized Langevin equation as</p> \\[\\frac{x_{i+1}-x_i}{\\Delta t} = \\theta A(x_{i+1})+(1-\\theta)A(x_i)+\\xi_i\\] <p>with \\(\\theta\\in[0,1]\\) selecting where we sample \\(A(x)\\) in the interval.</p> <ul> <li> <p>\\(\\theta=0\\) (It\u00f4): use \\(x_i\\) at the beginning of the step.</p> </li> <li> <p>\\(\\theta=1\\) (anti\u2011It\u00f4): use \\(x_{i+1}\\) at the end of the step.</p> </li> <li> <p>\\(\\theta=1/2\\) (Stratonovich): midpoint sampling.</p> </li> </ul> <p>Numerically, these correspond to evaluating \\(A(x)\\) at different points in \\([t_i,t_{i+1}]\\), controlled by \\(\\theta\\). It\u00f4 (\\(\\theta=0\\)) samples at the start (finance; martingales); Stratonovich (\\(\\theta=1/2\\)) approximates the midpoint, preserving the usual chain rule and matching limits of continuous noise in physical systems; anti\u2011It\u00f4 (\\(\\theta=1\\)) samples at the end (mainly of theoretical interest). The choice affects stability and, crucially, the Jacobian correction in the path integral, leading to different continuum limits and interpretations.</p> <p>Solving for \\(\\xi_i\\) gives</p> \\[\\xi_i = \\frac{x_{i+1}-x_i}{\\Delta t} - [\\theta A(x_{i+1})+(1-\\theta)A(x_i)].\\] <p>The Jacobian matrix has elements \\(J_{ij}=\\tfrac{\\partial \\xi_i}{\\partial x_j}\\), a lower\u2011triangular form with determinant the product of diagonal entries. The diagonals are</p> \\[J_{ii} = \\frac{\\partial \\xi_i}{\\partial x_i} = -\\frac{1}{\\Delta t}-(1-\\theta)A'(x_i).\\] <p>(A fully rigorous derivation tracks the \\(x_{i+1}\\) dependence on \\(x_i\\), but the final structure is the same.) In the continuum limit the Jacobian contributes an additive term to the action. One finds</p> \\[\\ln(\\text{Jacobian}) = -\\theta \\int_0^t d\\tau\\, A'(x(\\tau)).\\] <p>Thus the path weight depends not only on deviations from the deterministic trajectory but also on the local gradient of the drift field, with a coefficient set by the discretization choice \\(\\theta\\).</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#33-onsagermachlup-action","title":"3.3. Onsager\u2013Machlup Action","text":"<p>Combining the Jacobian with the Gaussian weight yields the full path probability for \\(x(\\tau)\\):</p> \\[P[x(\\tau)] \\sim \\exp(-S[x(\\tau)])\\] <p>with action</p> \\[S[x(\\tau)] = \\int_0^t d\\tau \\left[\\frac{(\\dot{x}-A(x))^2}{4D} + \\theta A'(x)\\right].\\] <p>For physical stochastic processes the Stratonovich interpretation (\\(\\theta=1/2\\)) is most natural, giving the Onsager\u2013Machlup (OM) action</p> \\[S_{OM}[x(\\tau)] = \\int_0^t d\\tau \\left[\\frac{(\\dot{x}-A(x))^2}{4D} + \\frac{1}{2} A'(x)\\right].\\] <p>This action is the core result: it assigns a number to each path \\(x(\\tau)\\) whose negative exponential is proportional to the path\u2019s probability. Smaller action means higher probability.</p> <p>Introduced by Lars Onsager and Stefan Machlup (1953, \u201cFluctuations and Irreversible Processes\u201d), the OM theory gives a least\u2011action\u2011like description of thermal fluctuations: each possible Brownian path has probability proportional to \\(\\exp(-S_{OM}[x])\\), where \\(S_{OM}\\) contains both the \u201ckinetic\u201d deviation from drift and a curvature/Jacobian correction from \\(A'(x)\\). It connects broken time\u2011reversal symmetry to path weights and bridges microscopic fluctuations to macroscopic irreversibility. Today OM actions are used across physics, biophysics (single\u2011molecule trajectories), soft\u2011matter dynamics, path\u2011sampling algorithms, etc., as a basis for most\u2011probable paths, transition states, entropy production, and more.</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#4-physical-meaning-most-probable-paths-and-experiments","title":"4. Physical Meaning: Most Probable Paths and Experiments","text":"<p>The OM action carries deep physical meaning and, as discussed in class, is supported by modern high\u2011precision experiments.</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#41-deconstructing-the-action","title":"4.1. Deconstructing the Action","text":"<p>The OM action has two parts:</p> <ul> <li>Freidlin\u2013Wentzell (FW) part</li> </ul> <p>$$   \\mathcal{L}_{FW} = \\frac{1}{4D}(\\dot{x} - A(x))^2   $$</p> <p>It quantifies the \u201ccost\u201d of deviating from deterministic drift: if \\(\\dot{x}=A(x)\\), this vanishes (minimal cost). Any noise\u2011induced deviation increases the action and lowers the path probability. In the weak\u2011noise limit (\\(D\\to 0\\)), minimizing the total action favors \\(\\dot{x}=A(x)\\), i.e., the classical deterministic path.</p> <ul> <li>Jacobian/curvature correction</li> </ul> <p>$$ \\mathcal{L}_{corr} = \\frac{1}{2}A'(x)$$</p> <p>This distinguishes OM from FW. Using \\(A(x)=F/\\gamma=-U'(x)/\\gamma\\) it can be written</p> \\[ \\frac{1}{2}A'(x) = -\\frac{1}{2\\gamma}U''(x). \\] <p>\u2022 At a potential minimum (stable point), \\(U''(x)&gt;0\\), so \\(A'(x)&lt;0\\) reduces the action and increases path probability \u2014 the system \u201clingers\u201d in wells.</p> <p>\u2022 At a barrier top (unstable point), \\(U''(x)&lt;0\\), so \\(A'(x)&gt;0\\) raises the action and suppresses paths lingering at the barrier.</p> <p>Thus at finite temperature (\\(D&gt;0\\)) path probabilities depend both on following the drift and on the local stability (curvature) of the explored landscape.</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#42-link-to-experiment-gladrow-et-al-2021","title":"4.2. Link to Experiment: Gladrow et al. (2021)","text":"<p>Prof. Frey highlighted an experiment that \u201cmeasures\u201d relative path probabilities, providing evidence for the theory:</p> <p>Gladrow, J., Keyser, U. F., Adhikari, R., &amp; Kappler, J. (2021). Experimental measurement of relative path probabilities and stochastic actions. Physical Review X, 11(3), 031022.</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#421-experimental-challenge-and-sojourn-probability","title":"4.2.1. Experimental Challenge and Sojourn Probability","text":"<p>Any exact continuous path \\(x(\\tau)\\) has zero probability measure, making direct path probabilities unobservable. The workaround is the sojourn probability: measure the probability that a trajectory remains within a thin tube of radius \\(R\\) around a reference path \\(\\varphi(t)\\) over a time interval, \\(P_R^{\\varphi}(t)\\). This is finite and measurable. Taking ratios for two references \\(\\varphi_1,\\varphi_2\\) and extrapolating \\(R\\to 0\\) yields \\(e^{-S[\\varphi_1]}/e^{-S[\\varphi_2]}\\) \u2014 the relative path probability from theory.</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#422-experimental-verdict-om-wins","title":"4.2.2. Experimental Verdict: OM Wins","text":"<p>The key finding: at room temperature (a typical finite\u2011temperature setting), measured relative path probabilities match the theoretical prediction using the OM action, while predictions using the simpler FW action show significant deviations. This proves that the Jacobian correction \\(\\\\tfrac{1}{2}A'(x)\\) is not a dispensable mathematical detail but has real, measurable physical effects at finite temperature; it is essential for correctly describing fluctuations.</p> <p>This dialogue between theory and experiment elevates the choice between It\u00f4 and Stratonovich interpretations from a mere mathematical convention to a principle set by physical reality. The setup traps a colloidal particle in a laser\u2011made double\u2011well potential inside a microchannel and tracks its position by high\u2011speed imaging.</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#423-most-probable-paths-as-physical-entities-instantons","title":"4.2.3. Most Probable Paths as Physical Entities (Instantons)","text":"<p>Theoretically, transitions between stable states (e.g., wells) are rare events. Among all paths that realize such a transition, some have the highest probability \u2014 the most probable paths, or instantons \u2014 obtained by minimizing the action \\(S[x(\\tau)]\\).</p> <p>In the experiment, the instanton concept was made tangible: analyzing data, the authors identified the path minimizing the integral escape rate within the tube, and took it as the measured instanton. This data\u2011extracted path agrees strikingly with the instanton from minimizing the OM action, showing that instantons are not merely theoretical \u2014 they represent the typical/central paths followed in rare events such as barrier crossings.</p> Feature Freidlin\u2013Wentzell (FW) action Onsager\u2013Machlup (OM) action Lagrangian \\(\\mathcal{L}_{FW} = \\tfrac{1}{4D}(\\dot{x} - A(x))^2\\) \\(\\mathcal{L}_{OM} = \\tfrac{1}{4D}(\\dot{x} - A(x))^2 + \\tfrac{1}{2}A'(x)\\) Origin Emerges in weak\u2011noise (\\(D \\to 0\\)) limit; It\u00f4 discretization (\\(\\theta=0\\)) From variable change with correct Jacobian; Stratonovich (\\(\\theta=1/2\\)) Applicability Accurate for most\u2011probable paths only at asymptotically low T or very fast transitions Accurate at finite temperature for path probabilities and most\u2011probable paths Experimental test Disagrees with room\u2011temperature colloid data Agrees excellently with experiment Core physics Captures cost of deviations from deterministic dynamics Captures both deviation cost and curvature effects on fluctuations"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#43-python-simulation-1-instanton-in-a-doublewell-potential","title":"4.3. Python Simulation 1: Instanton in a Double\u2011Well Potential","text":"<p>To intuitively understand the difference between FW and OM instantons, we can find them numerically. We discretize a path into a sequence of points and then use an optimizer to minimize the discretized action.</p> <p>The Python code below defines a double\u2011well potential and computes the FW and OM instantons that connect the two wells.</p> <ul> <li>Purpose: numerically compute and visualize the most probable path (instanton) in the double\u2011well \\(U(x)=(x^2-1)^2\\) from \\(x=-1\\) to \\(x=1\\).</li> </ul> <p>Two cost functionals are defined:</p> <ul> <li>Freidlin\u2013Wentzell (FW) action:</li> </ul> <p>Defined as \\(\\mathcal{S}_{\\text{FW}} = \\int \\frac{(\\dot{x}-A)^2}{4D}\\, dt\\), with Lagrangian   $$   \\text{Lagrangian_fw} = \\frac{(\\dot{x} - A)^2}{4D}   $$   This corresponds to the main term in the OM action and only accounts for the cost of deviating from the deterministic drift.</p> <ul> <li>Onsager\u2013Machlup (OM) action:</li> </ul> <p>Adding a correction term, the full form is:   $$   \\mathcal{S}_{\\text{OM}} = \\int \\left[ \\frac{(\\dot{x} - A)^2}{4D} + \\frac{1}{2}    \\nabla A \\right] dt   $$   where the correction is \\(\\text{Lagrangian\\_om} = 0.5\\times A'\\). Here \\(A' = dA/dx\\) is the spatial derivative of the drift \\(A(x)\\). This correction originates from the Jacobian of the transform from noise paths to particle paths and is physically essential.</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.optimize import minimize\n\n# Define physical parameters\ngamma = 1.0  # Friction coefficient\nD = 0.05     # Reduce diffusion coefficient to enhance differences\n\n# 1. Define double-well potential and its derivatives\ndef potential(x):\n    \"\"\"Double-well potential U(x) = (x^2 - 1)^2\"\"\"\n    return (x**2 - 1)**2\n\ndef force(x):\n    \"\"\"Force F(x) = -U'(x)\"\"\"\n    return -4 * x * (x**2 - 1)\n\ndef drift(x):\n    \"\"\"Drift term A(x) = F(x) / gamma\"\"\"\n    return force(x) / gamma\n\ndef drift_prime(x):\n    \"\"\"Derivative of drift term A'(x)\"\"\"\n    return (-12 * x**2 + 4) / gamma\n\n# 2. Discretized action\ndef get_action(path, dt, action_type='OM'):\n    \"\"\"Calculate discrete action of path\"\"\"\n    x = path\n    x_dot = np.diff(x) / dt\n    x_mid = (x[:-1] + x[1:]) / 2  # Midpoints for evaluating A(x) and A'(x)\n\n    A = drift(x_mid)\n    A_prime = drift_prime(x_mid)\n\n    # FW Lagrangian\n    lagrangian_fw = (x_dot - A)**2 / (4 * D)\n\n    if action_type == 'FW':\n        action = np.sum(lagrangian_fw * dt)\n    elif action_type == 'OM':\n        # OM correction term\n        lagrangian_om_corr = 0.5 * A_prime\n        action = np.sum((lagrangian_fw + lagrangian_om_corr) * dt)\n    else:\n        raise ValueError(\"action_type must be 'FW' or 'OM'\")\n\n    return action\n\n# 3. Numerical optimization to find instanton\n# Time and path settings\nT_total = 8.0  # Increase total time\nN_points = 201  # Increase number of path points\ndt = T_total / (N_points - 1)\ntime = np.linspace(0, T_total, N_points)\n\n# Initial path guess (straight line from -1 to +1)\ninitial_path = np.linspace(-1, 1, N_points)\n\n# Optimization functions\ndef objective_fw(p):\n    return get_action(p, dt, 'FW')\n\ndef objective_om(p):\n    return get_action(p, dt, 'OM')\n\n# Run optimization\n# Fix start and end points of path\ncons = ({'type': 'eq', 'fun': lambda x: x[0] + 1},\n        {'type': 'eq', 'fun': lambda x: x[-1] - 1})\n\nprint(\"Minimizing FW action...\")\nresult_fw = minimize(objective_fw, initial_path, constraints=cons, method='SLSQP', \n                     options={'maxiter': 1000, 'ftol': 1e-9})\npath_fw = result_fw.x\nprint(\"FW minimization successful:\", result_fw.success)\nprint(\"FW action value:\", result_fw.fun)\n\nprint(\"Minimizing OM action...\")\n# Use FW result as initial guess for OM\nresult_om = minimize(objective_om, path_fw, constraints=cons, method='SLSQP',\n                     options={'maxiter': 1000, 'ftol': 1e-9})\npath_om = result_om.x\nprint(\"OM minimization successful:\", result_om.success)\nprint(\"OM action value:\", result_om.fun)\n\n\n# 4. Plotting\nplt.figure(figsize=(10, 6))\nx_plot = np.linspace(-1.5, 1.5, 200)\nU_plot = potential(x_plot)\n\nplt.plot(x_plot, U_plot, 'k-', label='Potential $U(x)=(x^2-1)^2$')\nplt.plot(path_fw, potential(path_fw), 'r.--', label='FW Instanton')\nplt.plot(path_om, potential(path_om), 'b.--', label='OM Instanton')\n\nplt.title('Most Probable Paths (Instantons) in a Double-Well Potential')\nplt.xlabel('Position $x$')\nplt.ylabel('Potential Energy $U(x)$')\nplt.ylim(-0.2, 2)\nplt.legend()\nplt.grid(True)\nplt.show()\n\n# Plot path vs. time\nplt.figure(figsize=(10, 6))\nplt.plot(time, path_fw, 'r-', label='FW Instanton')\nplt.plot(time, path_om, 'b-', label='OM Instanton')\nplt.axhline(-1, color='k', linestyle='--', alpha=0.5)\nplt.axhline(1, color='k', linestyle='--', alpha=0.5)\nplt.title('Path vs. Time')\nplt.xlabel('Time $t$')\nplt.ylabel('Position $x(t)$')\nplt.legend()\nplt.grid(True)\nplt.show()\n</code></pre> </p> <p></p> <ul> <li> <p>Results: FW instanton (red) tends to move at near\u2011constant speed directly between wells (it minimizes the drift\u2011deviation cost only). OM instanton (blue) leaves the initial well faster, crosses the barrier quickly, then spends more time approaching/stabilizing in the target well.</p> </li> <li> <p>Physical meaning: this difference reflects the \\(A'(x)\\) term. Near well bottoms, \\(A'(x)&lt;0\\) lowers the action, so OM paths prefer to spend time there. The simple simulation reproduces the theory qualitatively and matches the experimental observations of Gladrow et al.</p> </li> </ul>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#5-advanced-tool-responsefield-msrjd-formulation","title":"5. Advanced Tool: Response\u2011Field (MSRJD) Formulation","text":"<p>The OM action is physically complete but can be inconvenient for explicit calculations (nonlinear in x when \\(A\\) and \\(A'\\) are complex). Borrowing from quantum field theory leads to the Martin\u2013Siggia\u2013Rose\u2013Janssen\u2013de Dominicis (MSRJD) response\u2011field formalism.</p> <p>Its idea: introduce an auxiliary (response) field \\(\\tilde{x}(\\tau)\\) to rewrite the action as one linear (or at most quadratic) in \\(x\\) and \\(\\tilde{x}\\), simplifying calculations.</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#51-derivation-idea-hubbardstratonovich-transform","title":"5.1. Derivation Idea (Hubbard\u2013Stratonovich Transform)","text":"<p>Start from the discretized path probability</p> \\[P[\\{x_i\\}] \\sim \\exp \\left(-\\tfrac{1}{4D}\\sum_i (x_{i+1}-x_i-\\Delta t A(x_i))^2\\right) \\times \\text{Jacobian}\\] <p>and use the Gaussian identity</p> \\[e^{-ay^2} = \\sqrt{\\tfrac{\\pi}{a}} \\int \\frac{d\\tilde{y}}{2\\pi} e^{-\\tilde{y}^2/(4a) + i\\tilde{y}y}\\] <p>Applying this to \\((\\dot{x}-A)\\) with one \\(\\tilde{x}_i\\) per time step and taking the continuum limit yields a new action \\(S'[x, \\tilde{x}]\\).</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#52-msrjd-action","title":"5.2. MSRJD Action","text":"<p>With a purely imaginary response field \\(i\\tilde{x}\\) (Stratonovich, \\(\\theta=1/2\\)), the path probability becomes</p> \\[P \\sim \\int \\mathcal{D}[x]\\mathcal{D}[\\tilde{x}] \\exp(-S'[x, \\tilde{x}])\\] <p>with</p> \\[S'[x, \\tilde{x}] = \\int_0^t d\\tau \\left[\\tilde{x}(\\dot{x}-A(x)) + iD\\tilde{x}^2\\right]\\] <p>Advantages:</p> <ol> <li> <p>Linear in \\(\\dot{x}\\) (easy time derivatives).</p> </li> <li> <p>Quadratic in \\(\\tilde{x}\\); nonlinearity is isolated in \\(i\\tilde{x}A(x)\\).</p> </li> <li> <p>Starting point for perturbation theory (e.g., Feynman diagrams) by splitting into \u201cfree\u201d (quadratic) and \u201cinteraction\u201d parts.</p> </li> </ol>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#6-simulation-practice-visualizing-random-paths","title":"6. Simulation Practice: Visualizing Random Paths","text":"<p>We now solve the Langevin equation and generate many stochastic trajectories to compare with the most probable path.</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#61-python-simulation-2-langevin-dynamics-and-path-distributions","title":"6.1. Python Simulation 2: Langevin Dynamics and Path Distributions","text":"<p>We use Euler\u2013Maruyama to integrate the overdamped Langevin equation in the double\u2011well.</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.optimize import minimize\n\n# Define physical parameters\ngamma = 1.0  # Friction coefficient\nD = 0.05     # Reduce diffusion coefficient to enhance differences\n\n# 1. Define double-well potential and its derivatives\ndef potential(x):\n    \"\"\"Double-well potential U(x) = (x^2 - 1)^2\"\"\"\n    return (x**2 - 1)**2\n\ndef force(x):\n    \"\"\"Force F(x) = -U'(x)\"\"\"\n    return -4 * x * (x**2 - 1)\n\ndef drift(x):\n    \"\"\"Drift term A(x) = F(x) / gamma\"\"\"\n    return force(x) / gamma\n\ndef drift_prime(x):\n    \"\"\"Derivative of drift term A'(x)\"\"\"\n    return (-12 * x**2 + 4) / gamma\n\n# 2. Discretized action\ndef get_action(path, dt, action_type='OM'):\n    \"\"\"Calculate discrete action of path\"\"\"\n    x = path\n    x_dot = np.diff(x) / dt\n    x_mid = (x[:-1] + x[1:]) / 2  # Midpoints for evaluating A(x) and A'(x)\n\n    A = drift(x_mid)\n    A_prime = drift_prime(x_mid)\n\n    # FW Lagrangian\n    lagrangian_fw = (x_dot - A)**2 / (4 * D)\n\n    if action_type == 'FW':\n        action = np.sum(lagrangian_fw * dt)\n    elif action_type == 'OM':\n        # OM correction term\n        lagrangian_om_corr = 0.5 * A_prime\n        action = np.sum((lagrangian_fw + lagrangian_om_corr) * dt)\n    else:\n        raise ValueError(\"action_type must be 'FW' or 'OM'\")\n\n    return action\n\n# 3. Numerical optimization to find instanton\n# Time and path settings\nT_total = 8.0  # Increase total time\nN_points = 201  # Increase number of path points\ndt = T_total / (N_points - 1)\ntime = np.linspace(0, T_total, N_points)\n\n# Initial path guess (straight line from -1 to +1)\ninitial_path = np.linspace(-1, 1, N_points)\n\n# Optimization functions\ndef objective_fw(p):\n    return get_action(p, dt, 'FW')\n\ndef objective_om(p):\n    return get_action(p, dt, 'OM')\n\n# Run optimization\n# Fix start and end points of path\ncons = ({'type': 'eq', 'fun': lambda x: x[0] + 1},\n        {'type': 'eq', 'fun': lambda x: x[-1] - 1})\n\nprint(\"Minimizing FW action...\")\nresult_fw = minimize(objective_fw, initial_path, constraints=cons, method='SLSQP', \n                     options={'maxiter': 1000, 'ftol': 1e-9})\npath_fw = result_fw.x\nprint(\"FW minimization successful:\", result_fw.success)\nprint(\"FW action value:\", result_fw.fun)\n\nprint(\"Minimizing OM action...\")\n# Use FW result as initial guess for OM\nresult_om = minimize(objective_om, path_fw, constraints=cons, method='SLSQP',\n                     options={'maxiter': 1000, 'ftol': 1e-9})\npath_om = result_om.x\nprint(\"OM minimization successful:\", result_om.success)\nprint(\"OM action value:\", result_om.fun)\n\n\n# 4. Plotting\nplt.figure(figsize=(10, 6))\nx_plot = np.linspace(-1.5, 1.5, 200)\nU_plot = potential(x_plot)\n\nplt.plot(x_plot, U_plot, 'k-', label='Potential $U(x)=(x^2-1)^2$')\nplt.plot(path_fw, potential(path_fw), 'r.--', label='FW Instanton')\nplt.plot(path_om, potential(path_om), 'b.--', label='OM Instanton')\n\nplt.title('Most Probable Paths (Instantons) in a Double-Well Potential')\nplt.xlabel('Position $x$')\nplt.ylabel('Potential Energy $U(x)$')\nplt.ylim(-0.2, 2)\nplt.legend()\nplt.grid(True)\nplt.show()\n\n# Plot path vs. time\nplt.figure(figsize=(10, 6))\nplt.plot(time, path_fw, 'r-', label='FW Instanton')\nplt.plot(time, path_om, 'b-', label='OM Instanton')\nplt.axhline(-1, color='k', linestyle='--', alpha=0.5)\nplt.axhline(1, color='k', linestyle='--', alpha=0.5)\nplt.title('Path vs. Time')\nplt.xlabel('Time $t$')\nplt.ylabel('Position $x(t)$')\nplt.legend()\nplt.grid(True)\nplt.show()\n</code></pre> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# Use the same physical parameters and potential function as simulation 1\ngamma = 1.0\nD = 0.25     # Moderate diffusion coefficient, balancing transition rate and rarity\nT_total = 40.0  # Further increase total time to ensure complete equilibrium\nN_points = 801  # Further increase time resolution\ndt = T_total / (N_points - 1)\ntime = np.linspace(0, T_total, N_points)\n\ndef potential(x):\n    return (x**2 - 1)**2\n\ndef drift(x):\n    return -4 * x * (x**2 - 1) / gamma\n\ndef drift_prime(x):\n    \"\"\"Derivative of drift term A'(x)\"\"\"\n    return (-12 * x**2 + 4) / gamma\n\n# Simple calculation of OM instanton path (for plotting)\ndef get_simple_om_instanton():\n    \"\"\"Calculate simplified OM instanton path for visualization\"\"\"\n    from scipy.optimize import minimize\n\n    def get_action(path, dt):\n        x = path\n        x_dot = np.diff(x) / dt\n        x_mid = (x[:-1] + x[1:]) / 2\n        A = drift(x_mid)\n        A_prime = drift_prime(x_mid)\n        lagrangian_fw = (x_dot - A)**2 / (4 * D)\n        lagrangian_om_corr = 0.5 * A_prime\n        action = np.sum((lagrangian_fw + lagrangian_om_corr) * dt)\n        return action\n\n    # Simplified optimization\n    initial_path = np.linspace(-1, 1, N_points)\n    cons = ({'type': 'eq', 'fun': lambda x: x[0] + 1},\n            {'type': 'eq', 'fun': lambda x: x[-1] - 1})\n\n    try:\n        result = minimize(lambda p: get_action(p, dt), initial_path, \n                         constraints=cons, method='SLSQP', \n                         options={'maxiter': 1000, 'ftol': 1e-6})\n        if result.success:\n            return result.x\n    except:\n        pass\n\n    # If optimization fails, return a simple S-shaped curve\n    t_norm = np.linspace(0, 1, N_points)\n    return np.tanh(4 * (t_norm - 0.5))\n\n# 1. Langevin simulator\ndef langevin_trajectory(x0, T, dt):\n    \"\"\"Generate a Langevin trajectory\"\"\"\n    n_steps = int(T / dt)\n    t = np.linspace(0, T, n_steps + 1)\n    x = np.zeros(n_steps + 1)\n    x[0] = x0\n\n    # Pre-generate all random numbers\n    noise = np.random.normal(0, 1, n_steps)\n\n    for i in range(n_steps):\n        A = drift(x[i])\n        stochastic_term = np.sqrt(2 * D * dt) * noise[i]\n        x[i+1] = x[i] + A * dt + stochastic_term\n\n    return t, x\n\n# 2. Generate large number of trajectories\nnum_trajectories = 2000  # Increase total trajectories to get sufficient transition samples\ntrajectories = []\ntransition_paths = []\nprint(f\"Simulating {num_trajectories} trajectories...\")\nfor i in range(num_trajectories):\n    t, x = langevin_trajectory(x0=-1.0, T=T_total, dt=dt)\n    trajectories.append(x)\n    # Record successful transition paths (increase threshold for stricter definition of transition)\n    if x[-1] &gt; 0.3:  # Increase threshold to ensure truly reaching right potential well\n        transition_paths.append(x)\nprint(f\"Found {len(transition_paths)} transition paths.\")\nprint(f\"Transition rate: {len(transition_paths)/num_trajectories*100:.1f}%\")\n\ntrajectories = np.array(trajectories)\ntransition_paths = np.array(transition_paths)\n\n# 3. Plotting\nplt.figure(figsize=(12, 8))\n\n# Plot potential background\nx_plot = np.linspace(-2, 2, 200)\nU_plot = potential(x_plot)\nplt.plot(x_plot, U_plot, 'k-', alpha=0.3, label='Potential $U(x)$')\n\n# First plot transition trajectories (at bottom layer)\nif len(transition_paths) &gt; 0:\n    # Only plot some transition trajectories to avoid excessive density\n    num_to_plot = min(len(transition_paths), 25)  # Display at most 25 green trajectories\n    for i in range(num_to_plot):\n        plt.plot(transition_paths[i, :], potential(transition_paths[i, :]), color='green', alpha=0.5, linewidth=1)\n\n# Then plot sample trajectories (at upper layer, increase transparency)\nfor i in range(min(150, num_trajectories)):  # Display more gray trajectories but with higher transparency\n    plt.plot(trajectories[i, :], potential(trajectories[i, :]), color='gray', alpha=0.08, linewidth=0.8)\n\n# Finally plot important paths (top layer)\nif len(transition_paths) &gt; 0:\n    # Plot average transition path\n    avg_transition_path = np.mean(transition_paths, axis=0)\n    plt.plot(avg_transition_path, potential(avg_transition_path), 'g-', linewidth=3, label='Average Transition Path')\n\n# Overlay theoretical instanton path\nprint(\"Computing OM instanton path...\")\npath_om = get_simple_om_instanton()\nplt.plot(path_om, potential(path_om), 'b--', linewidth=3, label='OM Instanton (Theory)')\n\n\nplt.title('Langevin Trajectories and the Most Probable Path')\nplt.xlabel('Position $x$')\nplt.ylabel('Potential Energy $U(x)$')\nplt.ylim(-0.2, 2.5)\n# Create a custom legend\nfrom matplotlib.lines import Line2D\nlegend_elements = [Line2D([0], [0], color='k', alpha=0.3, lw=2, label='Potential U(x)'),\n                   Line2D([0], [0], color='gray', alpha=0.4, lw=2, label='Sample Trajectories'),\n                   Line2D([0], [0], color='green', alpha=0.6, lw=2, label='Transition Trajectories'),\n                   Line2D([0], [0], color='b', linestyle='--', lw=3, label='OM Instanton (Theory)')]\nplt.legend(handles=legend_elements)\nplt.show()\n\n# Plot evolution of probability distribution over time\nfig, axes = plt.subplots(1, 4, figsize=(24, 5), sharey=True)\n# Adjust time points, covering longer time range to observe complete equilibrium process\ntime_points = [int(0.01 * N_points), int(0.1 * N_points), int(0.3 * N_points), N_points - 1]\n\nfor i, t_idx in enumerate(time_points):\n    ax = axes[i]\n    if i &lt; 3:\n        time_label = f't = {time[t_idx]:.1f}'\n    else:\n        time_label = f't = {T_total:.1f} (Final Equilibrium)'\n\n    # Plot histogram of particle positions\n    ax.hist(trajectories[:, t_idx], bins=35, density=True, alpha=0.7, \n            color='skyblue', edgecolor='black', linewidth=0.5, label='Simulation')\n\n    # Plot theoretical equilibrium distribution (Boltzmann distribution)\n    x_theory = np.linspace(-2, 2, 200)\n    boltzmann_dist = np.exp(-potential(x_theory) / D)\n    boltzmann_dist /= np.trapz(boltzmann_dist, x_theory)\n    ax.plot(x_theory, boltzmann_dist, 'r-', linewidth=2, label='Boltzmann Distribution')\n\n    ax.set_title(time_label, fontsize=12, fontweight='bold')\n    ax.set_xlabel('Position $x$')\n    if i == 0:\n        ax.set_ylabel('Probability Density')\n    ax.legend()\n    ax.grid(True, alpha=0.3)\n    ax.set_xlim(-2, 2)\n\n    # Add text showing percentage of total time\n    if i &lt; 3:\n        percentage = time[t_idx] / T_total * 100\n        ax.text(0.02, 0.98, f'{percentage:.1f}% of total time', \n                transform=ax.transAxes, verticalalignment='top', \n                bbox=dict(boxstyle='round', facecolor='wheat', alpha=0.5))\n\nplt.suptitle('Evolution of Probability Distribution Towards Equilibrium (Extended Time)', \n             fontsize=16, fontweight='bold')\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code></pre></p> <p></p> <ol> <li>Trajectory cloud and instanton: many gray trajectories fluctuate near the initial well (\\(x=-1\\)); a few green ones gain enough random \"energy\" to cross the barrier to \\(x=+1\\). These successful paths form a fuzzy \"tube\". The theoretical OM instanton (blue dashed) passes through the tube's center, showing it is the most probable path for rare events.</li> </ol> <p> 2. Evolution of probability distribution: the histograms show the ensemble view emerging from trajectories. Initially localized at \\(x=-1\\), the distribution broadens and leaks to the other well; at long times it approaches the Boltzmann distribution \\(P(x) \\\\propto e^{-U(x)/D}\\).</p>"},{"location":"notes/19.%20Path%20Integral%20Formulation%20of%20Stochastic%20Processes/#conclusion","title":"Conclusion","text":"<p>This lecture developed a third description of stochastic dynamics \u2014 a path\u2011integral formulation that sums over all possible paths with appropriate weights.</p> <ul> <li> <p>Starting from Gaussian white noise, we constructed probability functionals for noise and for particle paths via discretize\u2192continuum.</p> </li> <li> <p>We derived the Onsager\u2013Machlup action: beyond drift\u2011deviation cost (FW term), it incorporates the curvature/Jacobian correction, essential at finite temperature.</p> </li> <li> <p>Crucially, experiment (Gladrow et al.) connects directly to the theory via sojourn probabilities, confirming OM at room temperature.</p> </li> <li> <p>Finally, we outlined the MSRJD response\u2011field formalism as a practical tool for analytic calculations.</p> </li> </ul> <p>In sum, path integrals offer not only an equivalent description to Langevin/Fokker\u2013Planck but also a powerful intuition for \u201cwhole histories,\u201d revealing most\u2011probable paths for rare events and the hidden order in fluctuations.</p>"},{"location":"notes/2.%20Simple%20Random%20Walk/","title":"Introduction: From Random Steps to Physical Laws","text":"<p>A stochastic process is a mathematical framework for describing systems that evolve probabilistically over time. Among the many stochastic processes, the random walk is undoubtedly the most typical and fundamental model. Its applications are ubiquitous, from the diffusion of molecules within cells to price fluctuations in financial markets, where its basic ideas play a central role. This note aims to systematically organize and explain the one-dimensional simple random walk model based on Prof. Erwin Frey's lecture content.</p>"},{"location":"notes/2.%20Simple%20Random%20Walk/#defining-random-walk","title":"Defining Random Walk","text":"<p>Based on Prof. Frey's blackboard work at the beginning of the lecture, we can construct the basic model of a one-dimensional random walk.</p> <p></p> <p>Basic model elements: Imagine a particle (or \"walker\") moving on a one-dimensional straight line. Its motion is not continuous but occurs at discrete time points \\(t_k = k\\tau\\), where \\(k = 1, 2, 3, \\ldots\\) is the step number and \\(\\tau\\) is the time interval between each jump. The particle's position observed at any time \\(t_k\\) is denoted as \\(X_k\\).</p> <p>Core random variable: step length \\(\\xi_k\\): The displacement of each jump, i.e., the step length \\(\\xi_k\\), is a random variable. The key assumption of this model is that all step lengths \\(\\xi_k\\) are independent and identically distributed (IID) random variables. \"Identically distributed\" means that each jump follows the same probability rules; \"independent\" means that the result of any step does not affect any other step.</p> <p>Discrete vs. continuous step lengths: The distribution of step lengths can be either discrete or continuous.</p> <p>Discrete case: Step lengths can only take a finite number of specific values. The simplest case is that the particle can only move right by distance \\(a\\) or left by distance \\(a\\) in each step. That is, \\(\\xi_k \\in \\{+a, -a\\}\\). The probability of moving right is \\(p\\), and the probability of moving left is \\(q\\), with \\(p + q = 1\\). This is the core of this lecture - the simple random walk.</p> <p>Continuous case: Step lengths can take any real value, with their probability described by a probability density function \\(W(\\xi)\\), i.e., the probability that the step length falls in the interval \\([\\xi, \\xi + d\\xi]\\) is \\(W(\\xi)d\\xi\\).</p>"},{"location":"notes/2.%20Simple%20Random%20Walk/#mathematical-formulation","title":"Mathematical Formulation","text":"<p>The dynamic evolution of this model can be described by a simple recurrence relation:</p> \\[ X_k = X_{k-1} + \\xi_k \\] <p>This formula expresses the \"local\" motion rule of the model: the new position equals the old position plus a random step length.</p> <p>If we assume the particle starts from the origin, i.e., \\(X_0 = 0\\), then by iteratively expanding the above recurrence relation, we can obtain the explicit solution for the particle's position at the \\(k\\)-th step:</p> \\[ X_k = \\sum_{j=1}^{k} \\xi_j \\] <p>This formula reveals the most profound mathematical structure of the model: the macroscopic physical quantity we observe (position \\(X_k\\)) is essentially the sum of a large number of microscopic, independent random variables (step lengths \\(\\xi_j\\)). It is precisely this \"summation\" structure that allows us to use powerful statistical tools such as the law of large numbers and the central limit theorem to analyze this seemingly completely random process and discover deterministic, predictable macroscopic laws. The IID assumption is the cornerstone of all this analysis, ensuring that the statistical properties of the process do not change over time, thus allowing us to derive physical constants such as drift velocity and diffusion coefficient that do not depend on time.</p> <p>For clarity, we summarize the key variables and parameters in the model as follows.</p>"},{"location":"notes/2.%20Simple%20Random%20Walk/#table-1-key-variables-and-parameters-of-the-simple-random-walk-model","title":"Table 1: Key variables and parameters of the simple random walk model","text":"Symbol Description Definition/Value \\(k\\) Step number Integer, \\(1, 2, 3, \\ldots\\) \\(\\tau\\) Time step Duration of each jump \\(t_k\\) Physical time \\(k\\tau\\) \\(a\\) Step size Fixed distance of single-step movement \\(p\\) Probability of jumping right \\(P(\\xi_k = +a)\\) \\(q\\) Probability of jumping left \\(P(\\xi_k = -a)\\), \\(q = 1 - p\\) \\(\\xi_k\\) Step length of the \\(k\\)-th step Random variable, takes values \\(+a\\) or \\(-a\\) \\(X_k\\) Position after the \\(k\\)-th step \\(\\sum_{j=1}^{k} \\xi_j\\) (assuming \\(X_0 = 0\\)) \\(v\\) Drift velocity \\(\\frac{a(p-q)}{\\tau}\\) \\(D\\) Diffusion coefficient \\(\\frac{2a^2pq}{\\tau}\\)"},{"location":"notes/2.%20Simple%20Random%20Walk/#1-statistical-averages-and-the-emergence-of-physical-laws","title":"1. Statistical Averages and the Emergence of Physical Laws","text":"<p>For a stochastic process, we cannot accurately predict the exact position of the walker in a single experiment. However, by analyzing the statistical average behavior of a large number of such processes, we can extract deterministic physical information. We no longer ask \"Where is the particle?\" but rather \"Where is the particle on average?\" and \"How dispersed are the possible positions of the particle?\" These questions can be answered by calculating the moments of random variables (such as mean and variance).</p>"},{"location":"notes/2.%20Simple%20Random%20Walk/#11-average-position-revealing-drift-phenomena","title":"1.1 Average Position: Revealing Drift Phenomena","text":"<p>We first calculate the expected value (or mean) of the particle's position after \\(k\\) steps, denoted as \\(\\langle X_k \\rangle\\).</p> <p>Derivation process:</p> <p>Using the linearity property of expectation, the expected value of the total displacement equals the sum of the expected values of each step's displacement:</p> \\[ \\langle X_k \\rangle = \\left\\langle \\sum_{j=1}^{k} \\xi_j \\right\\rangle = \\sum_{j=1}^{k} \\langle \\xi_j \\rangle \\] <p>Calculate the expected value of single-step displacement \\(\\langle \\xi_j \\rangle\\). According to the definition of expectation, it equals the sum of all possible values multiplied by their corresponding probabilities:</p> \\[ \\langle \\xi_j \\rangle = (+a) \\cdot P(\\xi_j = a) + (-a) \\cdot P(\\xi_j = -a) = ap - aq = a(p-q) \\] <p>This value represents the average displacement per step.</p> <p>Since all step lengths are identically distributed, the expectation of each step is the same. Therefore, the expected value of the total displacement is:</p> \\[ \\langle X_k \\rangle = \\sum_{j=1}^{k} a(p-q) = k \\cdot a(p-q) \\] <p>Physical interpretation:</p> <p>This mathematical result tells us that the particle's average position is proportional to the number of steps \\(k\\). Introducing physical time \\(t_k = k\\tau\\), we can define an average velocity, the drift velocity \\(v\\):</p> \\[ v = \\frac{\\langle X_k \\rangle}{t_k} = \\frac{k a(p-q)}{k\\tau} = \\frac{a(p-q)}{\\tau} \\] <p>This means that although the motion trajectory of a single particle is tortuous and unpredictable, from a macroscopic perspective, the particle population appears to be moving in a directed manner at a constant velocity \\(v\\). This macroscopic directed motion caused by probability asymmetry is drift.</p> <p>Symmetric vs. asymmetric walks:</p> <p>The expression for the average position is entirely determined by the nature of the term \\((p-q)\\). This reveals two fundamental modes of model behavior:</p> <ol> <li> <p>Symmetric random walk \\((p = q = 1/2)\\): In this case, \\(p - q = 0\\), so \\(\\langle X_k \\rangle = 0\\). The particle has equal probability of moving left and right, with no directional preference. On average, the particle always stays near the origin. This is a pure diffusion process.</p> </li> <li> <p>Biased/asymmetric random walk \\((p \\neq q)\\): In this case, \\(p - q \\neq 0\\), resulting in a non-zero drift velocity. The particle will move in the direction of higher probability on average. In the PPT slide (Image 4), the dashed line showing the average position \\(\\langle x \\rangle\\) increasing linearly with time clearly depicts a biased random walk with \\(p &gt; q\\).</p> </li> </ol> <p>Therefore, the value of parameter \\(p\\) connects the abstract mathematical model with specific physical scenarios. A dye molecule diffusing in a stationary solvent can be described by a symmetric model, while a charged particle moving in an external electric field (electrophoresis) or a particle suspended in a flowing liquid requires a biased model.</p>"},{"location":"notes/2.%20Simple%20Random%20Walk/#12-variance-the-mathematical-fingerprint-of-diffusion-phenomena","title":"1.2 Variance: The Mathematical Fingerprint of Diffusion Phenomena","text":"<p>Next, we analyze the variance \\(\\mathrm{Var}[X_k]\\) of the particle's position, which measures the dispersion or width of the position distribution.</p> <p>Derivation process:</p> <p>According to the definition of variance: \\(\\mathrm{Var}[X_k] = \\langle X_k^2 \\rangle - \\langle X_k \\rangle^2\\). We have already calculated \\(\\langle X_k \\rangle\\); now the task is to calculate the second moment \\(\\langle X_k^2 \\rangle\\).</p> <p>Expanding \\(X_k^2\\):</p> \\[ \\langle X_k^2 \\rangle = \\left\\langle \\left( \\sum_{j=1}^{k} \\xi_j \\right)^2 \\right\\rangle = \\left\\langle \\left( \\sum_{i=1}^{k} \\xi_i \\right) \\left( \\sum_{j=1}^{k} \\xi_j \\right) \\right\\rangle = \\sum_{i=1}^{k} \\sum_{j=1}^{k} \\langle \\xi_i \\xi_j \\rangle \\] <p>Key step: separating diagonal and off-diagonal terms. This is a core technique in the solution process. We split the double sum into two parts:</p> <ul> <li> <p>Diagonal terms \\((i = j)\\): \\(\\sum_{j=1}^{k} \\langle \\xi_j^2 \\rangle\\)</p> </li> <li> <p>Off-diagonal terms \\((i \\neq j)\\): \\(\\sum_{i \\neq j} \\langle \\xi_i \\xi_j \\rangle\\)</p> </li> </ul> <p>Applying IID properties:</p> <p>For off-diagonal terms \\((i \\neq j)\\), since step lengths \\(\\xi_i\\) and \\(\\xi_j\\) are mutually independent, the expectation of their product equals the product of their individual expectations:</p> \\[ \\langle \\xi_i \\xi_j \\rangle = \\langle \\xi_i \\rangle \\langle \\xi_j \\rangle = (a(p-q))^2 \\] <p>For diagonal terms \\((i = j)\\), we calculate the expectation of the square of step length:</p> \\[ \\langle \\xi_j^2 \\rangle = (+a)^2 \\cdot p + (-a)^2 \\cdot q = a^2(p+q) = a^2 \\] <p>Combining calculations: There are \\(k\\) diagonal terms and \\(k(k-1)\\) off-diagonal terms in total. Therefore,</p> \\[ \\langle X_k^2 \\rangle = k \\cdot a^2 + k(k-1) \\cdot (a(p-q))^2 \\] <p>Final variance calculation: Substituting \\(\\langle X_k^2 \\rangle\\) and \\(\\langle X_k \\rangle^2 = (ka(p-q))^2\\) into the variance definition:</p> \\[ \\mathrm{Var}[X_k] = (k a^2 + k(k-1)a^2(p-q)^2) - (k a(p-q))^2 \\] \\[ = k a^2 + (k^2-k)a^2(p-q)^2 - k^2 a^2(p-q)^2 \\] \\[ = k a^2 - k a^2(p-q)^2 = k a^2 (1 - (p-q)^2) \\] <p>Using \\(p + q = 1\\), we have \\(1 - (p-q)^2 = (p+q)^2 - (p-q)^2 = 4pq\\). So we finally obtain:</p> \\[ \\mathrm{Var}[X_k] = 4k a^2 pq \\] <p>Physical interpretation:</p> <p>The most important feature of this result is that the variance is proportional to the number of steps \\(k\\), and therefore also proportional to physical time \\(t_k\\). This property of variance growing linearly with time is precisely the hallmark of a diffusive process.</p> <p>We can define the diffusion coefficient \\(D\\) through the relation \\(\\mathrm{Var}[X_k] = 2D t_k\\). By comparing with our derived result, we obtain:</p> \\[ 2D = \\frac{4k a^2 pq}{t_k} = \\frac{4k a^2 pq}{k\\tau} = \\frac{4 a^2 pq}{\\tau} \\implies D = \\frac{2 a^2 pq}{\\tau} \\] <p>The diffusion coefficient \\(D\\) is a physical quantity that measures the speed of random diffusion.</p> <p>\"Funnel of uncertainty\" and square root scaling:</p> <p>The physical meaning of variance growing linearly with time (\\(\\mathrm{Var} \\propto t\\)) is that the width of the particle position distribution, i.e., the standard deviation \\(\\sigma = \\sqrt{\\mathrm{Var}}\\), grows with the square root of time (\\(\\sigma \\propto \\sqrt{t}\\)). This sub-linear growth pattern is a universal characteristic of diffusive processes, fundamentally different from ballistic motion (where position \\(x \\propto t\\)). The conical region formed by \\(\\langle x \\rangle \\pm \\sigma\\) in the PPT is an excellent visualization of this fundamental scaling law. The \\(\\sqrt{t}\\) scaling explains why diffusion is efficient at microscopic scales (such as within cells) but extremely slow at macroscopic scales.</p> <p></p>"},{"location":"notes/2.%20Simple%20Random%20Walk/#13-application-example-random-walk-of-e-coli","title":"1.3 Application Example: Random Walk of E. coli","text":"<p>To connect abstract theory with the real world, Prof. Frey performed an estimation in the lecture, which in physics is called a \"back-of-the-envelope calculation\" to test the model's reasonableness.</p> <p>Problem: How long does it take for a molecule to diffuse across an E. coli cell?</p> <p>Estimation: We know the cell size \\(L \\approx 1\\,\\mu\\mathrm{m}\\) and the diffusion coefficient of similar-sized molecules in the cytoplasm \\(D \\approx 10\\,\\mu\\mathrm{m}^2/\\mathrm{s}\\). We can estimate the characteristic time \\(t\\) by setting the variance of the position distribution approximately equal to the square of the distance, i.e., \\(L^2 \\approx 2Dt\\).</p> <p>Calculation:</p> \\[ t \\approx \\frac{L^2}{2D} \\approx \\frac{(1\\,\\mu\\mathrm{m})^2}{2 \\cdot (10\\,\\mu\\mathrm{m}^2/\\mathrm{s})} = 0.05\\,\\mathrm{s} \\] <p>Significance: This simple calculation demonstrates the power of the diffusion coefficient \\(D\\) as a key physical parameter, connecting microscopic random steps with macroscopic diffusion time scales, enabling us to make quantitative predictions about real biological or chemical systems.</p>"},{"location":"notes/2.%20Simple%20Random%20Walk/#2-complete-probability-distribution","title":"2. Complete Probability Distribution","text":"<p>Mean and variance describe the center and width of the distribution, but to obtain complete information about the particle's position, we need to solve its complete probability distribution function \\(P(X_k = x)\\). It answers the question: \"What is the exact probability of finding the particle at position \\(x\\) after \\(k\\) steps?\"</p>"},{"location":"notes/2.%20Simple%20Random%20Walk/#21-combinatorial-method-binomial-distribution","title":"2.1 Combinatorial Method: Binomial Distribution","text":"<p>We can solve this problem precisely using combinatorial methods.</p> <p>Problem setup: Suppose the particle takes \\(k_+\\) steps to the right (\\(+a\\)) and \\(k_-\\) steps to the left (\\(-a\\)) in \\(k\\) steps. Then the total number of steps \\(k = k_+ + k_-\\). The final position is \\(X_k = (k_+ - k_-)a\\). For convenience, we define a dimensionless position \\(n = k_+ - k_-\\), so \\(X_k = na\\).</p> <p>Derivation process:</p> <p>Solving for \\(k_+\\) and \\(k_-\\): We can express \\(k_+\\) and \\(k_-\\) in terms of the known \\(k\\) and \\(n\\):</p> \\[ k_+ = \\frac{k+n}{2}, \\quad k_- = \\frac{k-n}{2} \\] <p>It is worth noting that for \\(k_+\\) and \\(k_-\\) to be integers, \\(k\\) and \\(n\\) must have the same parity (both even or both odd); otherwise, the particle cannot reach position \\(na\\), and its probability is zero.</p> <p>Calculating the probability of a single path: Any specific path containing \\(k_+\\) steps to the right and \\(k_-\\) steps to the left (e.g., \"right-right-left-right-...\"), since each step is independent, has a probability of:</p> \\[ p^{k_+} q^{k_-} = p^{k_+} (1-p)^{k_-} \\] <p>Calculating the total number of paths: How many different paths can reach the final position \\(na\\)? This is a classic combinatorial problem: in \\(k\\) total positions, choose \\(k_+\\) positions to place \"right steps.\" The number of ways is given by the binomial coefficient:</p> \\[ \\binom{k}{k_+} = \\frac{k!}{k_+!(k-k_+)!} = \\frac{k!}{k_+! k_-!} \\] <p>Final result: Multiplying the probability of a single path by the total number of paths, we obtain the total probability that the particle is at position \\(na\\) after the \\(k\\)-th step, which is precisely the binomial distribution:</p> \\[ P(X_k = na) = \\binom{k}{k_+} p^{k_+} (1-p)^{k_-} \\] <p>Connection between microstates and macrostates:</p> <p>The structure of this formula profoundly embodies the basic ideas of statistical mechanics. Each specific sequence of steps (such as RRLR...) is a microstate. The final net displacement (such as \\(n = 2\\)) is a macrostate. The formula shows that the probability of a macrostate occurring equals the probability of a single microstate leading to that macrostate (\\(p^{k_+} q^{k_-}\\)) multiplied by the degeneracy or multiplicity of that macrostate (\\(\\binom{k}{k_+}\\)), i.e., how many different microstates can produce the same macroscopic result. The most likely macrostates are those corresponding to the most microstate paths. The combinatorial coefficient here plays a role similar to \"entropy.\"</p>"},{"location":"notes/2.%20Simple%20Random%20Walk/#22-continuous-limit-emergence-of-gaussian-distribution","title":"2.2 Continuous Limit: Emergence of Gaussian Distribution","text":"<p>The binomial distribution is exact, but when the number of steps \\(k\\) is large, its calculation becomes very cumbersome. In physics, we are often more concerned with macroscopic behavior after many steps.</p> <p>Central Limit Theorem (CLT):</p> <p>The professor pointed out that when the number of steps \\(k\\) is very large (\\(k \\gg 1\\)), the binomial distribution can be approximated by a Gaussian distribution, also called a normal distribution:</p> \\[ P(n) \\approx \\frac{1}{\\sqrt{2\\pi \\mathrm{Var}[n]}} \\exp\\left(-\\frac{(n-\\langle n \\rangle)^2}{2\\mathrm{Var}[n]}\\right) \\] <p>This transition is not merely a mathematical approximation (such as using Stirling's formula for factorials), but a manifestation of a deeper physical principle - the Central Limit Theorem. This theorem states that the distribution of the sum of a large number of independent and identically distributed random variables (in our model, \\(X_k = \\sum \\xi_j\\)) will tend toward a Gaussian distribution, regardless of the distribution form of the individual random variables themselves (here, the distribution of individual step lengths is a simple two-point Bernoulli distribution). This explains why in nature, processes involving the accumulation of many random factors often exhibit Gaussian distributions.</p> <p>Parameters of the Gaussian distribution:</p> <p>The mean and variance of this approximate Gaussian distribution are exactly the mean and variance we directly calculated in the first section.</p> <p>Mean: \\(\\langle n \\rangle = k(p-q)\\), corresponding to a position mean of \\(\\langle X_k \\rangle = a\\langle n \\rangle = ak(p-q)\\).</p> <p>Variance: \\(\\mathrm{Var}[n] = 4kpq\\), corresponding to a position variance of \\(\\mathrm{Var}[X_k] = a^2\\mathrm{Var}[n] = 4k a^2 pq\\).</p> <p>This perfectly demonstrates the self-consistency of the model. The results obtained by directly calculating moments are completely consistent with the results obtained by solving the complete distribution and then taking the limit. This process clearly shows how macroscopic diffusion laws (whose solution is a Gaussian function) \"emerge\" from microscopic random walk rules.</p>"},{"location":"notes/2.%20Simple%20Random%20Walk/#3-python-computational-simulation-and-visualization","title":"3. Python Computational Simulation and Visualization","text":""},{"location":"notes/2.%20Simple%20Random%20Walk/#note","title":"Note","text":"<p>The following content is written by the author after studying the course and is not part of the lecture content</p> <p>Theoretical analysis provides profound insights, while computational simulation is the \"third method\" of physics research, helping us build intuitive physical images and verify the correctness of theoretical predictions.</p>"},{"location":"notes/2.%20Simple%20Random%20Walk/#31-simulation-algorithm","title":"3.1 Simulation Algorithm","text":"<p>The algorithm for simulating a single random walk trajectory is very simple:</p> <ol> <li> <p>Initialize position \\(x = 0\\) and time \\(t = 0\\).</p> </li> <li> <p>Perform \\(k\\) iterations.</p> </li> <li> <p>In each step, generate a random number in the interval \\([0,1]\\). If this number is less than \\(p\\), move one step to the right (\\(x \\leftarrow x + a\\)); otherwise, move one step to the left (\\(x \\leftarrow x - a\\)).</p> </li> <li> <p>Record the position at each step.</p> </li> </ol> <p>To analyze the overall behavior of a particle ensemble, we simply repeat the above process \\(N_{\\text{walkers}}\\) times.</p> <p>Below is a complete Python code using <code>numpy</code> and <code>matplotlib</code> libraries to simulate simple random walks and reproduce the two figures from the course PPT slides.</p> <p></p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.special import comb\n\n# --- Simulation parameters (inferred from PPT) ---\np = 0.75  # Probability of moving right\nq = 1 - p # Probability of moving left\na = 1     # Step size\ntau = 1   # Time interval\n\n# --- Figure 1: Probability distribution (left plot) ---\nnum_steps_dist = 50       # Total number of steps\nnum_walkers_dist = 50000  # Number of simulated particles for statistical distribution\n\n# Simulation\n# Generate displacement for each step (+a or -a)\nsteps = np.random.choice([a, -a], size=(num_walkers_dist, num_steps_dist), p=[p, q])\n# Calculate final position of each particle\nfinal_positions = np.sum(steps, axis=1)\n\n# Plot histogram of simulation results\nplt.figure(figsize=(12, 5))\nplt.subplot(1, 2, 1)\n# Use bins to center on even or odd positions\nbins = np.arange(final_positions.min(), final_positions.max() + 2) - 0.5\nplt.hist(final_positions, bins=bins, density=True, color='blue', alpha=0.7, label=f'Simulation (N={num_walkers_dist})')\n\n# Calculate and plot theoretical binomial distribution\nn_values = np.arange(-num_steps_dist, num_steps_dist + 1, 2) # Possible final positions n = k+ - k-\nk_plus = (num_steps_dist + n_values) / 2\nprob_theory = comb(num_steps_dist, k_plus) * (p**k_plus) * (q**(num_steps_dist - k_plus))\nplt.plot(n_values * a, prob_theory, 'ko', label='Theoretical (Binomial)')\n\nplt.title(f'Probability Distribution at k={num_steps_dist}')\nplt.xlabel('Position x')\nplt.ylabel('Probability P(x, t)')\nplt.legend()\nplt.grid(True, linestyle='--', alpha=0.6)\n\n\n# --- Figure 2: Trajectories and statistical moments (right plot) ---\nnum_steps_traj = 80       # Total number of steps\nnum_walkers_traj_show = 10 # Number of displayed trajectories\nnum_walkers_traj_stat = 2000 # Number of particles for calculating mean and variance statistics\n\n# Simulation\nsteps_stat = np.random.choice([a, -a], size=(num_walkers_traj_stat, num_steps_traj), p=[p, q])\n# Calculate position of each particle at each step (cumulative sum)\ntrajectories = np.cumsum(steps_stat, axis=1)\n# Add initial position 0 before trajectories\ntrajectories = np.insert(trajectories, 0, 0, axis=1)\n\n# Plotting\nplt.subplot(1, 2, 2)\ntime_points = np.arange(num_steps_traj + 1) * tau\n\n# Plot sample trajectories\nfor i in range(num_walkers_traj_show):\n    plt.plot(time_points, trajectories[i, :], alpha=0.5)\n\n# Calculate and plot statistical mean (from simulation)\nmean_sim = np.mean(trajectories, axis=0)\n# Calculate and plot theoretical mean\nmean_theory = time_points * a * (p - q) / tau\nplt.plot(time_points, mean_theory, 'k:', linewidth=2, label=r'$\\langle x \\rangle$')\n\n# Calculate and plot theoretical standard deviation range\nvariance_theory = 4 * (time_points/tau) * (a**2) * p * q\nstd_theory = np.sqrt(variance_theory)\nplt.plot(time_points, mean_theory + std_theory, 'k--', linewidth=2, label=r'$\\langle x \\rangle \\pm \\sigma$')\nplt.plot(time_points, mean_theory - std_theory, 'k--', linewidth=2)\n\n\nplt.title('Random Walk Trajectories and Moments')\nplt.xlabel('Time')\nplt.ylabel('Position')\nplt.legend()\nplt.grid(True, linestyle='--', alpha=0.6)\n\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p> <p>The probability distribution plot on the left is actually equivalent to taking a \"vertical slice\" at a specific time point (e.g., \\(t = 50\\)) in the right plot and then counting the distribution of all simulated particle positions at that moment.</p>"},{"location":"notes/2.%20Simple%20Random%20Walk/#summary-the-powerful-force-of-a-simple-model","title":"Summary: The Powerful Force of a Simple Model","text":"<p>Prof. Erwin Frey's lecture, starting from an extremely simple model, led us to appreciate the core ideas of statistical physics: how to derive observable, deterministic physical laws in the macroscopic world from the basic random rules of the microscopic world.</p> <p>We saw that the mean of particle position grows linearly with time (\\(\\langle X_k \\rangle \\propto t\\)), which is the macroscopic manifestation of drift; while its variance also grows linearly with time (\\(\\mathrm{Var}[X_k] \\propto t\\)), which is the universal characteristic of diffusion. The linear growth of variance is equivalent to the square root growth of standard deviation with time (\\(\\sigma_k \\propto \\sqrt{t}\\)), which is the key scaling law distinguishing diffusion from other transport processes.</p> <p>From defining the most basic random steps, to calculating their statistical moments, to solving the complete probability distribution and revealing its universality in the Gaussian distribution, this entire process is not only a mathematical derivation but also a brilliant lesson on how order emerges from disorder in the physical world. Although the simple random walk model is simple, it provides a solid foundation and profound physical intuition for understanding more complex stochastic phenomena.</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/","title":"Introduction: From Physical Intuition to Mathematical Rigor","text":"<p>In earlier lectures (especially Lecture 16), we have encountered the Langevin equation for describing stochastic phenomena such as Brownian motion. The Langevin equation provides a very intuitive physical picture: a particle's motion is determined by two parts\u2014one part is a deterministic, predictable force (such as friction), and the other part is a rapidly fluctuating random force \\(\\xi(t)\\) generated by numerous microscopic particle collisions.</p> <p>This random force, namely white noise, is typically idealized as being completely uncorrelated at any two different moments. This \"memoryless\" property is mathematically expressed through the Dirac \\(\\delta\\) function:</p> \\[\\langle\\xi(t)\\xi(t')\\rangle=2D\\delta(t-t')\\] <p>However, while this idealization is very useful physically, it brings mathematical troubles. A \"function\" that is uncorrelated with other moments at any time must be filled with infinite spikes and have infinite variance, so it is not a function in the strict sense. Direct calculus operations on such an object encounter severe mathematical challenges.</p> <p>To overcome this difficulty, mathematicians developed a completely new language\u2014stochastic differential equations (SDEs). This is not merely a symbolic change, but a fundamental leap in thinking. The core idea is to avoid directly dealing with the singular white noise \\(\\xi(t)\\) and instead study its integral. The integral of white noise, namely the Wiener process \\(W(t)\\), is a well-behaved, path-continuous stochastic process. The purpose of this lecture is to establish this rigorous mathematical tool, enabling us to precisely describe and analyze physical, biological, and even financial systems driven by randomness.</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#1-the-language-of-stochastic-differential-equations","title":"1. The Language of Stochastic Differential Equations","text":"<p>The development history of stochastic differential equations (SDEs) originates from the theoretical description of Brownian motion. French physicist Paul Langevin first proposed the Langevin equation in 1908, combining deterministic viscous resistance with random noise forces, laying the foundation for statistical mechanics and stochastic process research. This physical model was later mathematically rigorized, particularly through the development of complete stochastic integration theory by It\u00f4 and Stratonovich, solving the difficult problem of how to properly handle stochastic variable calculus. Today, SDEs have extremely wide applications: in finance, they form the basis for risk assessment, stock price volatility simulation, and the famous Black-Scholes equation; in physics, they are used for Brownian motion and molecular dynamics simulation; in biology, they are applied to population dynamics and protein folding analysis; in addition, they provide theoretical frameworks for reaction rate modeling in chemistry and stochastic gradient descent algorithms in machine learning.</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#11-wiener-increments-capturing-the-basic-units-of-randomness","title":"1.1 Wiener Increments: Capturing the Basic Units of Randomness","text":"<p>Professor Erwin Frey starts with the simplest stochastic differential equation, which describes the motion of a particle driven only by random forces:</p> \\[\\dot{x}=\\xi(t),\\] <p>Here, \\(\\xi(t)\\) is the white noise we discussed earlier, with correlation function \\(\\langle\\xi(t)\\xi(t')\\rangle=2D\\delta(t-t')\\), where \\(D\\) is the diffusion coefficient.</p> <p>To handle this equation mathematically, we do not directly solve \\(\\dot{x}\\), but instead examine the change in particle position \\(x\\) over a small time interval \\(\\Delta t\\). By integrating the above equation, we obtain:</p> \\[x(t+\\Delta t)-x(t)=\\int_t^{t+\\Delta t}d\\tau\\,\\xi(\\tau)\\equiv\\Delta W(t),\\] <p>This integral result \\(\\Delta W(t)\\) is defined as the Wiener increment. Its physical meaning is very clear: during the time interval \\(\\Delta t\\), the particle experiences countless microscopic, independent random collisions from surrounding medium molecules, and \\(\\Delta W(t)\\) is the net displacement accumulated from these collision effects.</p> <p>The Wiener increment has two crucial statistical properties:</p> <p>1. Mean Square Value:</p> <p>We can directly calculate the mean value of the square of \\(\\Delta W(t)\\):</p> \\[ \\langle\\Delta W^2(t)\\rangle=\\Big\\langle\\int_t^{t+\\Delta t}\\!d\\tau\\,\\xi(\\tau)\\int_t^{t+\\Delta t}\\!d\\tau'\\,\\xi(\\tau')\\Big\\rangle \\] <p>Using the property that expectation and integration can be interchanged, we get:</p> \\[ \\langle\\Delta W^2(t)\\rangle=\\int_t^{t+\\Delta t}\\!d\\tau\\int_t^{t+\\Delta t}\\!d\\tau'\\,\\langle\\xi(\\tau)\\xi(\\tau')\\rangle=\\int_t^{t+\\Delta t}\\!d\\tau\\int_t^{t+\\Delta t}\\!d\\tau'\\,2D\\,\\delta(\\tau-\\tau'). \\] <p>Due to the properties of the \\(\\delta\\) function, the integral has value only when \\(\\tau=\\tau'\\), so the integral over \\(\\tau'\\) yields 1 (as long as the integration interval contains \\(\\tau\\)). Finally, we obtain:</p> \\[\\langle\\Delta W^2(t)\\rangle=\\int_t^{t+\\Delta t}2D\\,d\\tau=2D\\,\\Delta t.\\] <p>This result \\(\\langle\\Delta W^2(t)\\rangle=2D\\Delta t\\) is the hallmark characteristic of diffusion processes: mean squared displacement is proportional to time interval, not to the square of time interval (the latter being characteristic of uniform linear motion). This reflects the essence of random motion.</p> <p>2. Gaussian Distribution:</p> <p>Since the Wiener increment is the superposition of numerous independent random collision effects, according to the central limit theorem, regardless of the details of individual collisions, their sum always tends toward a Gaussian (normal) distribution. Therefore, the probability distribution of \\(\\Delta W(t)\\) is:</p> \\[ P(\\Delta W(t)) = \\frac{1}{\\sqrt{4\\pi D \\Delta t}} \\exp\\left(-\\frac{\\Delta W(t)^2}{4D\\Delta t}\\right) \\] <p>This is a Gaussian distribution with mean 0 and variance \\(2D\\Delta t\\).</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#12-stochastic-integrals-and-the-wiener-process","title":"1.2 Stochastic Integrals and the Wiener Process","text":"<p>With the basic building blocks\u2014Wiener increments\u2014we can construct the particle's position \\(x(t)\\) at any time \\(t\\). We partition the time interval \\([0,t]\\) into \\(n\\) small intervals \\(\\Delta t=t/n\\), each corresponding to an independent Wiener increment \\(\\Delta W_k\\). The particle's total displacement is the sum of these increments. When the time intervals become infinitesimally small (\\(n\\to\\infty\\)), this summation becomes an integral:</p> \\[x(t)=\\lim_{n\\to\\infty}\\sum_{k=0}^{n-1}\\Delta W_k\\equiv\\int_0^t dW(s)\\] <p>This limit process defines what is called a stochastic integral. This integral itself, as a function of time \\(t\\), defines the Wiener process \\(W(t)\\), which is also called Brownian motion.</p> <p>This method of constructing continuous-time stochastic processes (\\(W(t)\\)) from discrete, independent random steps (\\(\\Delta W_k\\)) through limits is a bridge connecting discrete random walks and continuous stochastic processes.</p> <p>The statistical properties of the Wiener process \\(W(t)\\equiv x(t)\\) can be derived from the properties of its constituent units \\(\\Delta W_k\\):</p> <ul> <li> <p>Mean squared displacement: Since each \\(\\Delta W_k\\) is independent and identically distributed (iid Gaussian), the expectation of the total displacement squared equals the sum of expectations of individual displacement squares:   $$   \\langle x^2(t)\\rangle=\\langle(\\sum_{k=0}^{n-1}\\Delta W_k)^2\\rangle=\\sum_{k=0}^{n-1}\\langle\\Delta W_k^2\\rangle=\\sum_{k=0}^{n-1}2D\\Delta t=n\\cdot(2D\\frac{t}{n})=2Dt   $$</p> </li> <li> <p>Probability distribution: Similarly, according to the central limit theorem, the sum of multiple Gaussian random variables is still a Gaussian random variable, with variance equal to the sum of individual variances. Therefore, the probability distribution of \\(x(t)\\) is:   $$   P(x,t)=\\frac{1}{\\sqrt{4\\pi Dt}}\\exp\\left(-\\frac{x^2}{4Dt}\\right)   $$</p> </li> </ul> <p>It is worth noting that this probability distribution \\(P(x,t)\\) is exactly the solution to the diffusion equation (or heat equation) that we derived in earlier lectures. This reveals the deep connection between stochastic differential equations (microscopic trajectory description) and the Fokker-Planck equation (probability evolution description).</p> <p>The transformation from \\(\\xi(t)\\) to \\(dW_t\\) is the core of the entire stochastic calculus theory. It shifts our focus from a mathematically difficult-to-handle object (white noise) to a well-defined, path-continuous (though nowhere differentiable) stochastic process (Wiener process). The Langevin equation \\(\\dot{x}=\\cdots+\\xi(t)\\) is physically intuitive but mathematically non-rigorous. The stochastic differential equation \\(dx=\\cdots+dW_t\\) is not a simple symbolic substitution\u2014it is essentially a shorthand for an integral equation, i.e., \\(x(t)-x(0)=\\int_0^t\\cdots ds+\\int_0^t dW_s\\). Only in integral form is the entire theory mathematically self-consistent and rigorous.</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#13-computational-simulation-wiener-process","title":"1.3 Computational Simulation: Wiener Process","text":"<p>We can use the properties of Wiener increments to generate trajectories of the Wiener process through simple iteration. The core discretized update rule is:</p> \\[W(t_{i+1})=W(t_i)+\\Delta W_i\\] <p>where \\(\\Delta W_i\\) is a random number drawn from a Gaussian distribution with mean 0 and variance \\(2D\\Delta t\\), which is equivalent to \\(\\sqrt{2D\\Delta t}\\cdot N(0,1)\\), where \\(N(0,1)\\) is the standard normal distribution.</p> <p>The following Python code simulates and plots multiple Wiener process trajectories, verifying their mean squared displacement grows linearly with time.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# --- Parameter settings ---\nT = 10.0          # Total time\nN = 1000          # Number of time steps\ndt = T / N        # Time step size\nD = 0.5           # Diffusion coefficient (2D = 1)\nnum_paths = 500   # Number of simulated trajectories\n\n# --- Simulate Wiener process ---\n# Create an array of shape (num_paths, N+1) to store all trajectories\n# N+1 because it includes the initial point at t=0\npaths = np.zeros((num_paths, N + 1))\n\n# Generate random increments for all time steps\n# np.random.normal(loc=mean, scale=std_dev, size=...)\n# std_dev = sqrt(variance) = sqrt(2*D*dt)\nincrements = np.random.normal(0, np.sqrt(2 * D * dt), (num_paths, N))\n\n# Build trajectories by accumulating increments\n# paths[:, 1:] means filling from the second time point onwards\n# np.cumsum(..., axis=1) performs cumulative sum along the time axis (columns)\npaths[:, 1:] = np.cumsum(increments, axis=1)\n\n# --- Plotting ---\n# 1. Plot several sample trajectories\nplt.figure(figsize=(14, 6))\ntime_axis = np.linspace(0, T, N + 1)\n\nplt.subplot(1, 2, 1)\nfor i in range(min(num_paths, 10)): # Only plot first 10 to maintain clarity\n    plt.plot(time_axis, paths[i, :], lw=1)\nplt.title(f'{min(num_paths, 10)} Sample Wiener Process Paths')\nplt.xlabel('Time $t$')\nplt.ylabel('$W(t)$')\nplt.grid(True)\n\n# 2. Verify mean squared displacement\n# Calculate mean squared displacement at each time point\n# np.mean(paths**2, axis=0) computes mean along the trajectory axis (rows)\nmean_squared_displacement = np.mean(paths**2, axis=0)\ntheoretical_msd = 2 * D * time_axis\n\nplt.subplot(1, 2, 2)\nplt.plot(time_axis, mean_squared_displacement, label='Simulated $\\\\langle W^2(t) \\\\rangle$')\nplt.plot(time_axis, theoretical_msd, 'r--', label='Theoretical $2Dt$')\nplt.title('Mean Squared Displacement')\nplt.xlabel('Time $t$')\nplt.ylabel('$\\\\langle W^2(t) \\\\rangle$')\nplt.legend()\nplt.grid(True)\n\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p> <p>The left panel shows 10 simulated Wiener process sample trajectories, all starting from 0 and performing random walks. The right panel averages the squared displacements of 500 trajectories at each time point, and the resulting mean squared displacement (blue line) matches the theoretical value \\(2Dt\\) (red dashed line), verifying the core characteristics of the diffusion process.</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#2-the-surprising-aspects-of-stochastic-calculus","title":"2. The Surprising Aspects of Stochastic Calculus","text":"<p>Upon entering the core domain of stochastic calculus, we discover that it follows a set of operational rules completely different from ordinary calculus. The root of these differences lies in the inherent \"roughness\" of Wiener process paths.</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#21-first-exploration-of-itos-lemma-the-integral-of-dw_s2","title":"2.1 First Exploration of It\u00f4's Lemma: The Integral of \\((dW_s)^2\\)","text":"<p>The professor introduces a seemingly strange quantity:</p> \\[Y(t)=\\sum_{k=0}^{n-1}(\\Delta W_k)^2\\] <p>In ordinary Riemann integration, a similar summation \\(\\sum(\\Delta t_k)^2\\) would rapidly vanish as \\(\\Delta t\\to 0\\), because \\((\\Delta t)^2\\) is a higher-order infinitesimal than \\(\\Delta t\\). But in the stochastic world, the situation is completely different.</p> <p>First, we calculate the expectation of this quantity. For simplicity, we follow the lecture's setting and let \\(2D=1\\), so that \\(\\langle(\\Delta W_k)^2\\rangle=\\Delta t_k\\).</p> \\[\\langle Y(t)\\rangle=\\langle\\sum_{k=0}^{n-1}(\\Delta W_k)^2\\rangle=\\sum_{k=0}^{n-1}\\langle(\\Delta W_k)^2\\rangle=\\sum_{k=0}^{n-1}\\Delta t_k=t\\] <p>This is an astonishing result: the expectation of the sum of squares of random increments exactly equals the total time length \\(t\\). This summation is called the quadratic variation of the process in stochastic analysis.</p> <p>Even more surprising is that when \\(n\\to\\infty\\), this sum not only has expectation \\(t\\), but converges to the deterministic value \\(t\\). This conclusion is the cornerstone of It\u00f4 calculus, usually represented by a concise but extremely powerful symbolic rule:</p> \\[(dW_t)^2=dt\\] <p>This contrasts sharply with the rule \\((dt)^2=0\\) in ordinary calculus and is the ultimate source of all differences between stochastic and ordinary calculus.</p> <p></p> <p>The fundamental reason for this difference lies in the scaling behavior of fluctuations. A smooth, differentiable function changes \\(\\Delta f\\) proportionally to \\(\\Delta t\\) over a small interval \\(\\Delta t\\). Therefore, its square \\((\\Delta f)^2\\) is proportional to \\((\\Delta t)^2\\), which is a higher-order infinitesimal and can be ignored in integration. However, Wiener process paths are continuous but nowhere differentiable, with fractal characteristics. The typical fluctuation size in time \\(\\Delta t\\) is not \\(\\Delta t\\), but \\(\\sqrt{\\Delta t}\\). Therefore, the magnitude of its squared fluctuation \\((\\Delta W)^2\\) is \\((\\sqrt{\\Delta t})^2=\\Delta t\\). This means that the square of random fluctuations is of the same order of magnitude as deterministic drift terms (such as \\(A(x)\\Delta t\\)) and must never be ignored. This is precisely the fundamental reason why It\u00f4's lemma\u2014the chain rule for stochastic processes\u2014has an additional correction term.</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#22-variance-and-mean-square-convergence","title":"2.2 Variance and Mean Square Convergence","text":"<p>To prove that \\(\\sum(\\Delta W_k)^2\\) indeed converges to a deterministic value \\(t\\), we need to prove that its variance tends to zero as \\(n\\to\\infty\\).</p> <p></p> <p>1. Calculate the variance:</p> <p>Since each \\(\\Delta W_k\\) is independent, the variance of the sum equals the sum of variances:</p> \\[ \\text{Var} = \\text{Var}\\left[\\sum_{k=0}^{n-1}(\\Delta W_k)^2\\right] = \\sum_{k=0}^{n-1} \\text{Var}[(\\Delta W_k)^2] \\] <p>2. Variance of individual increment squares:</p> <p>According to the variance definition \\(\\text{Var}[Z]=\\langle Z^2\\rangle-(\\langle Z\\rangle)^2\\), we have:</p> \\[ \\text{Var}[(\\Delta W_k)^2]=\\langle(\\Delta W_k^2)^2\\rangle-(\\langle\\Delta W_k^2\\rangle)^2=\\langle\\Delta W_k^4\\rangle-(\\langle\\Delta W_k^2\\rangle)^2 \\] <p>3. Fourth moment of Gaussian variables:</p> <p>For a Gaussian random variable \\(Z\\) with mean 0 and variance \\(\\sigma^2\\), its fourth moment is \\(\\langle Z^4\\rangle=3(\\sigma^2)^2\\). In our example (with \\(2D=1\\)), \\(\\sigma^2=\\langle\\Delta W_k^2\\rangle=\\Delta t\\). Therefore:</p> \\[ \\langle\\Delta W_k^4\\rangle=3(\\Delta t)^2 \\] <p>4. Substitute and calculate:</p> \\[ \\text{Var}[(\\Delta W_k)^2]=3(\\Delta t)^2-(\\Delta t)^2=2(\\Delta t)^2 \\] <p>5. Total variance:</p> <p>Adding up the individual variances and substituting \\(\\Delta t=t/n\\):</p> \\[ \\text{Var}=\\sum_{k=0}^{n-1}2(\\Delta t)^2=n\\cdot 2(\\frac{t}{n})^2=\\frac{2t^2}{n} \\] <p>6. Take the limit:</p> <p>When the time partition becomes infinitely fine, \\(n\\to\\infty\\), the total variance tends to zero:</p> \\[ \\lim_{n\\to\\infty}\\text{Var}=\\lim_{n\\to\\infty}\\frac{2t^2}{n}=0 \\] <p>A random variable with expectation \\(t\\) and variance 0 means that the distribution of this random variable is a \\(\\delta\\) function at point \\(t\\)\u2014it is no longer random, but deterministically equals \\(t\\). This type of convergence is called mean square convergence. This provides rigorous mathematical justification for writing the following integral identity:</p> \\[\\int_0^t(dW_s)^2=t=\\int_0^t ds\\]"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#23-computational-simulation-verifying-quadratic-variation","title":"2.3 Computational Simulation: Verifying Quadratic Variation","text":"<p>We can intuitively verify the quadratic variation theory through numerical simulation. The following Python code simulates a Wiener process path and calculates its quadratic variation \\(\\sum(\\Delta W_k)^2\\). By changing the number of time steps \\(N\\), we can observe how the result converges to the total time duration \\(T\\).</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef simulate_quadratic_variation(T=1.0, N_steps_list=[100, 1000, 10000, 100000], num_trials=1000):\n    \"\"\"\n    Simulate and demonstrate convergence of quadratic variation\n    \"\"\"\n    results_mean = []\n    results_std = []\n\n    print(\"N_steps\\t\\tMean(QV)\\tStd(QV)\")\n    print(\"-\" * 40)\n\n    for N in N_steps_list:\n        dt = T / N\n        qvs = []\n        for _ in range(num_trials):\n            # Generate increments of a Brownian motion path\n            # 2D=1, so variance = dt\n            dW = np.random.normal(0, np.sqrt(dt), N)\n\n            # Calculate quadratic variation\n            qv = np.sum(dW**2)\n            qvs.append(qv)\n\n        mean_qv = np.mean(qvs)\n        std_qv = np.std(qvs)\n        results_mean.append(mean_qv)\n        results_std.append(std_qv)\n        print(f\"{N:&lt;10}\\t{mean_qv:.6f}\\t{std_qv:.6f}\")\n\n    # Plotting\n    plt.figure(figsize=(12, 5))\n\n    # Mean convergence plot\n    plt.subplot(1, 2, 1)\n    plt.plot(N_steps_list, results_mean, 'o-', label='Mean of Simulated QV')\n    plt.axhline(T, color='r', linestyle='--', label=f'Theoretical Value T={T}')\n    plt.xscale('log')\n    plt.xlabel('Number of Steps (N)')\n    plt.ylabel('Mean of Quadratic Variation')\n    plt.title('Convergence of Mean QV')\n    plt.legend()\n    plt.grid(True)\n\n    # Standard deviation convergence plot\n    plt.subplot(1, 2, 2)\n    plt.plot(N_steps_list, results_std, 'o-', label='Std Dev of Simulated QV')\n    # Theoretically standard deviation is proportional to 1/sqrt(N)\n    # Var = 2T^2/N =&gt; Std = T*sqrt(2/N)\n    theoretical_std = T * np.sqrt(2 / np.array(N_steps_list))\n    plt.plot(N_steps_list, theoretical_std, 'r--', label=r'Theoretical scaling $\\propto 1/\\sqrt{N}$')\n    plt.xscale('log')\n    plt.yscale('log')\n    plt.xlabel('Number of Steps (N)')\n    plt.ylabel('Standard Deviation of QV')\n    plt.title('Convergence of Std Dev of QV')\n    plt.legend()\n    plt.grid(True)\n\n    plt.tight_layout()\n    plt.show()\n\n# Run simulation\nsimulate_quadratic_variation(T=1.0)\n</code></pre> <p>Program output:</p> <pre><code>N_steps          Mean(QV)        Std(QV)\n----------------------------------------\n100             0.989475        0.138506\n1000            1.000001        0.045184\n10000           1.000812        0.014119\n100000          0.999990        0.004668\n</code></pre> <p></p> <p>Numerical simulation verifies the quadratic variation theory. The left panel shows that as the number of time steps N increases, the mean of the simulated quadratic variation (QV) rapidly converges to the theoretical value T=1. The right panel in log-log coordinates shows that the simulated standard deviation (blue line) is consistent with the theoretically predicted \\(1/\\sqrt{N}\\) scaling (red line), indicating that the variance indeed tends to zero as \\(N\\to\\infty\\).</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#3-multiplicative-noise-and-its-consequences","title":"3. Multiplicative Noise and Its Consequences","text":""},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#31-when-noise-depends-on-system-state","title":"3.1 When Noise Depends on System State","text":"<p>So far, the noise strength \\(\\xi(t)\\) or \\(dW_t\\) we have discussed has been constant and does not change with the system state \\(x\\). This type of noise is called additive noise. However, in many real systems, the intensity of random perturbations itself depends on the current state of the system. This type of noise is called multiplicative noise.</p> <p>A general Langevin equation with multiplicative noise can be written as:</p> \\[\\frac{dx(t)}{dt}=A(x,t)+C(x,t)\\Lambda(t)\\] <p>where the noise term is multiplied by a function \\(C(x,t)\\) that depends on the state \\(x\\) and time \\(t\\).</p> <p>Multiplicative noise has wide applications across various fields:</p> <ul> <li> <p>Population dynamics: For a population of size \\(N\\), the number of random fluctuations in birth and death events naturally scales proportionally with population size \\(N\\). A large population has far more random events than a small population.</p> </li> <li> <p>Finance: The volatility of a stock price is typically considered proportional to its own price. The higher the stock price, the greater the absolute fluctuation value of its price. This is exactly the foundation of the famous geometric Brownian motion model.</p> </li> <li> <p>Physics: When a parameter in a system (such as temperature, pressure) undergoes random fluctuations, and this parameter affects the system's evolution rate, multiplicative noise is produced.</p> </li> </ul>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#32-from-multiplicative-to-additive-a-transformation-and-a-surprise","title":"3.2 From Multiplicative to Additive: A Transformation and a Surprise","text":"<p>SDEs with multiplicative noise are usually more complex to handle than additive noise. The course introduces a clever variable substitution method that attempts to transform multiplicative noise problems into additive noise problems we are already familiar with.</p> <p>Consider the SDE \\(\\dot{x}=A(x)+C(x)\\Lambda(t)\\). We define a new variable \\(y\\) such that its rate of change is related to the rate of change of \\(x\\) through \\(C(x)\\):</p> \\[ dy = \\frac{dx}{C(x)} \\] <p>Substituting the original SDE, we obtain the equation for \\(y\\):</p> \\[\\frac{dy}{dt}=\\frac{1}{C(x)}\\frac{dx}{dt}=\\frac{A(x)}{C(x)}+\\Lambda(t)\\] <p>If we write \\(A(x)/C(x)\\) as a function of \\(y\\), \\(\\tilde{A}(y)\\), then the equation for \\(y\\) becomes a standard additive noise SDE:</p> \\[\\frac{dy}{dt}=\\tilde{A}(y)+\\Lambda(t)\\] <p>For this additive noise process in \\(y\\), we can directly write the Fokker-Planck equation satisfied by its probability density \\(\\tilde{p}(y,t)\\) (recalling Lecture 17, with unit noise strength):</p> \\[\\partial_t\\tilde{p}(y,t)=-\\partial_y[\\tilde{A}(y)\\tilde{p}(y,t)]+\\frac{1}{2}\\partial_y^2\\tilde{p}(y,t)\\] <p>Now, the most crucial step is transforming this equation back to the original variable \\(x\\). This requires using two transformation relationships:</p> <ol> <li> <p>Derivative transformation: According to the chain rule, \\(dy=dx/C(x)\\implies\\partial_x=\\frac{dy}{dx}\\partial_y=\\frac{1}{C(x)}\\partial_y\\implies\\partial_y=C(x)\\partial_x\\).</p> </li> <li> <p>Probability density transformation: Probability conservation requires \\(p(x,t)dx=\\tilde{p}(y,t)dy\\), so \\(\\tilde{p}(y,t)=p(x,t)\\frac{dx}{dy}=C(x)p(x,t)\\).</p> </li> </ol> <p>Substituting these two relationships into the Fokker-Planck equation for \\(\\tilde{p}\\) above, after a series of tedious but straightforward algebraic operations, we finally obtain equation (4) for \\(p(x,t)\\):</p> \\[\\partial_tp(x,t)=-\\partial_x[(A(x)+\\frac{1}{2}C(x)C'(x))p(x,t)]+\\frac{1}{2}\\partial_x^2[C^2(x)p(x,t)]\\] <p>Comparing this result with our \"naive\" expected Fokker-Planck equation, we find an additional term in the drift term: \\(\\frac{1}{2}C(x)C'(x)\\). This term is called \"pseudo-drift\" or \"It\u00f4 drift\". It appears to be an additional deterministic force that emerges out of nowhere, but this is not a calculation error\u2014it is a manifestation of the profound implications of stochastic calculus.</p> <p>The emergence of this additional drift term can be understood as a geometric effect. Imagine a particle randomly walking on a line. If its step size is fixed (additive noise), then it has no net drift. But if the step size depends on position \\(C(x)\\) (multiplicative noise), the situation is different. Suppose that when \\(x&gt;0\\), the step size is larger. Then, after the particle randomly takes a step to the right from the origin, its next step (whether left or right) will have a larger average step size; conversely, if it takes a step to the left, the next step will have a smaller average step size. Over time, the particle's \"exploration\" range in regions with larger step sizes is broader, causing it to have a net tendency to drift from regions with small step sizes to regions with large step sizes. The It\u00f4 drift term \\(\\frac{1}{2}C(x)C'(x)\\) is precisely the mathematical quantification of this effect, proportional to the noise intensity \\(C(x)\\) and the gradient of noise intensity \\(C'(x)\\). It is not a force in the traditional sense, but a statistical preference generated by the geometric structure of the noise.</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#4-the-ito-stratonovich-controversy","title":"4. The It\u00f4-Stratonovich Controversy","text":"<p>The mysterious \"It\u00f4 drift\" that appeared in the third section has its roots in the ambiguity of stochastic integral definitions. This leads to a core and subtle issue in stochastic calculus: the distinction between It\u00f4 and Stratonovich integrals.</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#41-the-ambiguity-of-stochastic-integrals","title":"4.1 The Ambiguity of Stochastic Integrals","text":"<p>We now use the more rigorous differential form of SDEs to write the equation:</p> \\[dx_t=A(x_t,t)dt+C(x_t,t)dW_t\\] <p>This expression is shorthand for its integral form. The stochastic part \\(\\int C(x_\\tau,\\tau)dW_\\tau\\) encounters difficulties in definition. We naturally think of defining it using Riemann sums:</p> \\[\\int_{t_0}^t C(x_\\tau,\\tau)dW_\\tau=\\lim_{n\\to\\infty}\\sum_{i=1}^n C(x_{\\bar{t}_i},\\bar{t}_i)\\Delta W_i\\] <p>where \\(\\Delta W_i=W(t_i)-W(t_{i-1})\\), and \\(\\bar{t}_i\\) is some sampling point in the small interval \\([t_{i-1},t_i]\\).</p> <p>For ordinary Riemann-Stieltjes integrals, if both the integrand and the function being integrated are \"well-behaved\" (e.g., the integrand has bounded variation), then regardless of how \\(\\bar{t}_i\\) is chosen within the interval, the limit is unique. However, while the paths of the Wiener process \\(W_t\\) are continuous, their total variation is infinite (the paths are extremely tortuous). This leads to a surprising consequence:</p> <p>Different choices of \\(\\bar{t}_i\\) lead to integrals converging to completely different results.</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#42-two-conventions-two-calculi","title":"4.2 Two Conventions, Two Calculi","text":"<p>To resolve this ambiguity, mathematicians and physicists developed two mainstream integration conventions, each defining a self-consistent calculus system.</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#ito-integral","title":"It\u00f4 Integral","text":"<ul> <li>Definition: Choose the left endpoint of the interval as the sampling point, i.e., \\(\\bar{t}_i=t_{i-1}\\).</li> </ul> <p>$$   \\int_{t_0}^t C(x_\\tau)dW_\\tau:=\\lim_{n\\to\\infty}\\sum_{i=1}^n C(x_{t_{i-1}})\\Delta W_i   $$</p> <ul> <li> <p>Core property: This definition has a very important characteristic, namely non-anticipating. In each term of the summation, the value of the integrand \\(C(x_{t_{i-1}})\\) is determined before the random \"kick\" \\(\\Delta W_i\\) occurs. Therefore, \\(C(x_{t_{i-1}})\\) and \\(\\Delta W_i\\) are statistically uncorrelated, i.e., \\(\\langle C(x_{t_{i-1}})\\Delta W_i\\rangle=\\langle C(x_{t_{i-1}})\\rangle\\langle\\Delta W_i\\rangle=0\\). This makes the It\u00f4 integral have the property of a martingale, meaning its expectation value does not change over time (in the absence of drift terms). This property is crucial in financial mathematics because it conforms to the basic principle that \"one cannot use future price information to determine current trading strategies.\"</p> </li> <li> <p>Chain rule: The It\u00f4 integral does not satisfy the classical chain rule and requires the use of the modified It\u00f4's lemma.</p> </li> </ul>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#stratonovich-integral","title":"Stratonovich Integral","text":"<ul> <li>Definition: Choose the midpoint of the interval as the sampling point, i.e., \\(\\bar{t}_i=(t_i+t_{i-1})/2\\).</li> </ul> <p>$$   \\int_{t_0}^t C(x_\\tau)\\circ dW_\\tau:=\\lim_{n\\to\\infty}\\sum_{i=1}^n C(x_{\\frac{t_i+t_{i-1}}{2}})\\Delta W_i   $$   (Usually denoted by the \\(\\circ\\) symbol for Stratonovich integral).</p> <ul> <li> <p>Core property: This symmetric sampling method makes its calculus system satisfy the classical chain rule. For example, for a function \\(f(W_t)\\), its differential is simply \\(df=f'(W_t)\\circ dW_t\\). This makes it more intuitive for physicists accustomed to classical calculus and is essential when dealing with geometric problems such as random motion on manifolds.</p> </li> <li> <p>Physical origin: The Stratonovich integral can be viewed as the mathematical limit of more realistic physical processes. Real-world noise (called \"colored noise\") always has an extremely short but non-zero correlation time \\(\\tau_c\\). The famous Wong-Zakai theorem proves that when this correlation time \\(\\tau_c\\to 0\\), the solutions of systems driven by colored noise converge to solutions of Stratonovich SDEs driven by white noise. Therefore, it is generally considered the more \"physical\" choice.</p> </li> </ul>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#43-connecting-the-two-calculi-unraveling-the-pseudo-drift-mystery","title":"4.3 Connecting the Two Calculi: Unraveling the \"Pseudo-Drift\" Mystery","text":"<p>These two integrals are not independent of each other; they can be converted to each other through a precise formula:</p> \\[\\int_0^t C(x_s)\\circ dW_s\\text{(Stratonovich)}=\\int_0^t C(x_s)dW_s\\text{(Ito)}+\\frac{1}{2}\\int_0^t C(x_s)\\frac{\\partial C(x_s)}{\\partial x}ds\\] <p>The mystery is now solved! The difference between the two integrals is exactly the \"pseudo-drift\" term we encountered in the third section. This means:</p> <ul> <li> <p>The Fokker-Planck equation we derived through variable substitution in the third section actually corresponds to the It\u00f4 SDE.</p> </li> <li> <p>If we start from a Stratonovich SDE, i.e., \\(dx_t=A(x_t)dt+C(x_t)\\circ dW_t\\), then the drift term in its corresponding Fokker-Planck equation is \\(A(x)\\), without the additional \\(\\frac{1}{2}C(x)C'(x)\\) term.</p> </li> </ul> <p>So, the \"It\u00f4-Stratonovich controversy\" is not a question of mathematical right or wrong, but a choice of physical modeling. Which calculus you choose equals choosing how to interpret the physical source of noise and determines the effective drift term in the system's probability evolution.</p> Property It\u00f4 Integral Stratonovich Integral Summation sampling point Left endpoint: \\(t_{i-1}\\) Midpoint: \\((t_{i}+t_{i-1})/2\\) Chain rule Modified chain rule (It\u00f4's lemma) Classical chain rule Martingale property \\(\\int C(x_{t})dW_{t}\\) is a martingale Not necessarily a martingale Physical model Idealized white noise; non-anticipating systems (e.g., finance) Limit of colored noise with finite correlation time (e.g., physics) F-P equation drift term \\(A(x)+\\frac{1}{2} C(x)C^{\\prime}(x)\\) \\(A(x)\\) Numerical scheme Euler-Maruyama method Euler-Heun method / Milstein method"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#44-computational-simulation-trajectory-differences-between-ito-and-stratonovich-sdes","title":"4.4 Computational Simulation: Trajectory Differences between It\u00f4 and Stratonovich SDEs","text":"<p>We can intuitively feel the difference between the two integrals by simulating a simple multiplicative noise SDE. Geometric Brownian Motion (GBM) in finance is an excellent example:</p> \\[dx_t=\\mu x_t dt+\\sigma x_t dW_t\\] <p>where \\(\\mu\\) is the drift rate and \\(\\sigma\\) is the volatility.</p> <ul> <li>It\u00f4 form simulation (Euler-Maruyama method):</li> </ul> <p>This is the most direct discretization, corresponding to left endpoint sampling of the It\u00f4 integral.</p> <p>$$   x_{i+1}=x_i+\\mu x_i\\Delta t+\\sigma x_i\\Delta W_i   $$</p> <ul> <li>Stratonovich form simulation (Euler-Heun method):</li> </ul> <p>This is a predictor-corrector scheme that approximates the effect of midpoint sampling.</p> <ol> <li> <p>Prediction step (Euler-Maruyama):      $$      \\tilde{x}_{i+1}=x_i+\\mu x_i\\Delta t+\\sigma x_i\\Delta W_i      $$</p> </li> <li> <p>Correction step:      $$      x_{i+1}=x_i+\\mu x_i\\Delta t+\\frac{\\sigma}{2}(x_i+\\tilde{x}_{i+1})\\Delta W_i      $$</p> </li> </ol> <p>The following Python code uses the same random number sequence to simulate the GBM process under both It\u00f4 and Stratonovich interpretations.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n# Can use sdeint library for more complex SDE solving\n# import sdeint\n\n# --- Parameter settings ---\nx0 = 1.0          # Initial value\nT = 1.0           # Total time\nN = 1000          # Number of time steps\ndt = T / N        # Time step size\nmu = 0.1          # Drift rate\nsigma = 0.4       # Volatility\nnum_paths = 500   # Number of simulated trajectories\n\n# --- Simulation ---\n# Generate Wiener increments shared by all paths\ndW = np.random.normal(0, np.sqrt(dt), (num_paths, N))\n\n# Initialize path arrays\nx_ito = np.zeros((num_paths, N + 1))\nx_stratonovich = np.zeros((num_paths, N + 1))\nx_ito[:, 0] = x0\nx_stratonovich[:, 0] = x0\n\n# Iterative solving\nfor i in range(N):\n    # Ito (Euler-Maruyama)\n    x_ito[:, i+1] = x_ito[:, i] + mu * x_ito[:, i] * dt + sigma * x_ito[:, i] * dW[:, i]\n\n    # Stratonovich (Euler-Heun)\n    # Prediction step\n    x_pred = x_stratonovich[:, i] + mu * x_stratonovich[:, i] * dt + sigma * x_stratonovich[:, i] * dW[:, i]\n    # Correction step\n    g_avg = 0.5 * (sigma * x_stratonovich[:, i] + sigma * x_pred)\n    x_stratonovich[:, i+1] = x_stratonovich[:, i] + mu * x_stratonovich[:, i] * dt + g_avg * dW[:, i]\n\n# --- Plotting ---\ntime_axis = np.linspace(0, T, N + 1)\nmean_ito = np.mean(x_ito, axis=0)\nmean_stratonovich = np.mean(x_stratonovich, axis=0)\n\n# Theoretical mean\n# Ito interpretation: E[x(t)] = x0 * exp(mu * t)\n# Stratonovich interpretation: E[x(t)] = x0 * exp((mu + 0.5*sigma^2) * t)\ntheoretical_mean_ito = x0 * np.exp(mu * time_axis)\ntheoretical_mean_stratonovich = x0 * np.exp((mu + 0.5 * sigma**2) * time_axis)\n\nplt.figure(figsize=(10, 6))\nplt.plot(time_axis, mean_ito, label='Ito (Euler-Maruyama) Mean')\nplt.plot(time_axis, mean_stratonovich, label='Stratonovich (Euler-Heun) Mean')\nplt.plot(time_axis, theoretical_mean_ito, 'k--', label='Theoretical Ito Mean $x_0 e^{\\mu t}$')\n# plt.plot(time_axis, theoretical_mean_stratonovich, 'g:', label='Theoretical Stratonovich Mean')\nplt.title('Comparison of Ito and Stratonovich Simulations (Mean of 500 paths)')\nplt.xlabel('Time $t$')\nplt.ylabel('Mean value $\\langle x(t) \\rangle$')\nplt.legend()\nplt.grid(True)\nplt.show()\n</code></pre> <p></p> <p>Numerical simulation of the same geometric Brownian motion SDE using It\u00f4 (blue line) and Stratonovich (orange line) numerical schemes respectively. The figure shows the average path of 500 trajectories. It can be seen that the trajectory average under the Stratonovich interpretation is systematically higher than that under the It\u00f4 interpretation, with the latter matching the theoretical expectation value of the It\u00f4 solution \\(x_0e^{\\mu t}\\) (black dashed line). This intuitively demonstrates the effective drift differences caused by different integration conventions.</p>"},{"location":"notes/20.%20Stochastic%20Differential%20Equations/#conclusion","title":"Conclusion","text":"<p>In this lecture, the professor led us through a journey from physical intuition to mathematical rigor. We started from the intuitive but definitionally ambiguous Langevin equation and, through the introduction of the Wiener process, established the rigorous mathematical language of stochastic differential equations (SDEs).</p> <p>We discovered that this new world dominated by randomness follows a set of peculiar rules, with \\((dW_t)^2=dt\\) at its core. This rule overturns the understanding of classical calculus and directly gives rise to the cornerstone of stochastic analysis\u2014It\u00f4's lemma.</p> <p>Further, in exploring multiplicative noise problems that are closer to reality, we revealed the ambiguity in the definition of stochastic integrals themselves. This led to two different calculus systems: It\u00f4 and Stratonovich. We ultimately clarified that these two systems are not a matter of right or wrong, but correspond to different physical modeling assumptions about the source of noise. The It\u00f4 integral emphasizes strict causality and is the preferred choice in finance and other fields; while the Stratonovich integral preserves the form of classical calculus and corresponds to the limit of colored noise in real physical systems. The difference between the two exactly explains the mysterious \"pseudo-drift\" term that appears in multiplicative noise.</p> <p>Mastering the mathematical tools introduced in this lecture is like obtaining a map to enter the world of stochastic dynamics. In subsequent lectures, we will use this powerful language to quantitatively analyze and predict more complex stochastic systems in physics, chemistry, biology, and other fields.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/","title":"Introduction: Crossing from Discrete to Continuous Worlds","text":"<p>Based on the introduction to simple random walks in the previous section, this section will further deepen our understanding of stochastic processes, evolving from the simple, discrete models introduced in the previous lecture to continuous models that can more accurately describe physical reality. This process will be achieved through two key generalizations:</p> <ol> <li> <p>Spatial Continuization: We will generalize the random walk model from a fixed, discrete lattice to continuous space. This step will naturally guide us from the binomial distribution to the Gaussian distribution, thus establishing the Gaussian Random Walk (GRW) model.</p> </li> <li> <p>Temporal Randomization: We will break the constraint that \"time steps\" are fixed and deterministic, and instead explore scenarios where events occur randomly on a continuous time axis. This will lead to the Poisson Process, which is crucial in statistical physics and biology.</p> </li> </ol> <p>By relaxing the strict constraints on space and time, we can construct a more universal and applicable theoretical framework, laying the foundation for understanding phenomena from molecular motors to macroscopic diffusion.</p> <p>To organize the models learned in this course so far, the following table summarizes and compares their key characteristics:</p> Characteristic Simple Random Walk (SRW) Gaussian Random Walk (GRW) Poisson Process Time Domain Discrete (\\(k=1,2,\\ldots\\)) Discrete (\\(t=1,2,\\ldots\\)) Continuous (\\(t \\in \\mathbb{R}\\)) Space Domain Discrete (lattice) Continuous (\\(X_t \\in \\mathbb{R}\\)) Discrete (lattice) Step Length Distribution Bernoulli (\\(\\pm a\\)) Gaussian (\\(N(0, \\sigma^2)\\)) Fixed (e.g., \\(+1\\)) Step Time Fixed interval (\\(\\tau\\)) Fixed interval (\\(\\tau=1\\)) Random (exponential distribution) Core Statistical Tool Binomial distribution \u2192 Gaussian (CLT) Characteristic function Survival probability Limiting Distribution Gaussian distribution (position) Gaussian distribution (position) Exponential distribution (waiting time)"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#1-review-simple-random-walk-srw-and-its-continuous-limit","title":"1. Review: Simple Random Walk (SRW) and Its Continuous Limit","text":"<p>To better understand the content of this lecture, we first review the core model from the previous lecture\u2014the Simple Random Walk (SRW)\u2014and clarify its intrinsic connection to this lecture's content. The professor's blackboard work clearly outlines the mathematical context of this transition.</p> <p></p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#core-conclusions-of-the-discrete-srw-model","title":"Core Conclusions of the Discrete SRW Model","text":"<p>On a one-dimensional coordinate system, a particle moves a distance \\(a\\) to the right with probability \\(p\\) and a distance \\(a\\) to the left with probability \\(q=1-p\\) in each discrete time step \\(\\tau\\). After \\(k\\) steps (total time \\(t_k = k\\tau\\)), we obtain the following key statistical properties:</p> <ul> <li>Average displacement: The expected position of the particle grows linearly with time, with its velocity determined by the probability difference between left and right jumps.</li> </ul> \\[ \\langle X_k \\rangle = v t_k, \\quad \\text{where velocity } v = \\frac{(p-q)a}{\\tau} \\] <ul> <li>Position probability: The probability that the particle is at position \\(na\\) after \\(k\\) steps is described by the binomial distribution. If it jumped right \\(k_+\\) times and left \\(k_-\\) times, then \\(k = k_+ + k_-\\) and \\(n = k_+ - k_-\\).</li> </ul> <p>$$   \\text{Prob}{X_k = na} = \\binom{k}{k_+} p^{k_+} (1-p)^{k_-}   $$</p> <ul> <li>Variance and diffusion: The variance of position also grows linearly with time, which is the hallmark characteristic of diffusive processes.</li> </ul> <p>$$   \\text{Var}[X_k] = 2D t_k, \\quad \\text{where diffusion coefficient } D = \\frac{2pqa^2}{\\tau}   $$</p> <p>Physical meaning: These two simple formulas reveal two fundamental characteristics of stochastic processes from microscopic to macroscopic scales.</p> <ol> <li> <p>Drift: The average displacement \\(\\langle X_k \\rangle \\propto t_k\\) describes the overall directional motion trend of the system. This trend is determined by microscopic asymmetry (\\(p \\neq q\\)). Like a weak but persistent wind, although each leaf's trajectory is tortuous and random, the entire leaf population will slowly drift in the direction of the wind.</p> </li> <li> <p>Diffusion: The variance \\(\\text{Var}[X_k] \\propto t_k\\) describes the growth of \"blur\" or \"uncertainty\" around the average trend. This is caused by the cumulative effect of microscopic randomness (both \\(p\\) and \\(q\\) are non-zero). Even if the wind is constant (\\(p=q\\), no drift), leaves will spread due to random air disturbances, with their spread range (standard deviation \\(\\sigma \\propto \\sqrt{t_k}\\)) growing with time. The linear relationship between variance and time is the \"fingerprint\" of diffusive processes, telling us that uncertainty accumulates through a large number of independent random events.</p> </li> </ol> <p>We see that although each step is completely random, the collective behavior of many steps exhibits regularity\u2014linear growth of average displacement and linear growth of variance (i.e., diffusion).</p> <p>However, many processes in the real world, such as the motion of molecular motors within cells and the occurrence of chemical reactions, evolve continuously in time. The goal of this lecture is to smoothly transition us from a discrete worldview to a continuous worldview. We will see how, when the observation scale is much larger than the step length and time interval of a single jump, the discrete binomial distribution \"emerges\" into a continuous, universal Gaussian distribution. When we consider many, small, and frequent steps, the discrete lattice model transitions to a continuous space and time model. The core of this process is one of the most profound ideas in statistical physics\u2014the Central Limit Theorem (CLT). Professor Frey further guides us to think: Why is the Gaussian distribution so special? Why do we always see it macroscopically regardless of microscopic details? Behind this lies a profound idea called \"Attractor\" and \"Universality,\" and the Renormalization Group (RG) method mentioned in the reference papers provides us with a powerful theoretical tool for understanding this universality.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#2-gaussian-distribution-a-universal-attractor","title":"2. Gaussian Distribution: A Universal Attractor","text":"<p>When the number of steps \\(k\\) is very large, the binomial distribution describing the particle's position can be excellently approximated by a Gaussian (normal) distribution. This is the core content of the Central Limit Theorem (CLT).</p> \\[ \\binom{k}{k_+} p^{k_+} (1-p)^{k_-} \\approx \\frac{1}{\\sqrt{2\\pi \\text{Var}[n]}} \\exp\\left[-\\frac{(n - \\langle n \\rangle)^2}{2 \\text{Var}[n]}\\right] \\] <p>where \\(\\langle n \\rangle = k(p-q)\\) and \\(\\text{Var}[n] = 4kpq\\).</p> <p>\\(p(x,t)\\) is the probability density of finding the walker at position \\(x\\) at time \\(t\\).</p> <p>The peak of the distribution moves at velocity \\(v\\), which corresponds to the drift we discussed earlier.</p> <p>The width of the distribution is determined by the standard deviation \\(\\sigma_t=\\sqrt{2Dt}\\), which grows with the square root of time. This indicates that particles are spreading outward through diffusion, as shown in the slide image: over time, the blue curve becomes increasingly wide and flat.</p> <p>The classroom PPT points out that the Gaussian random walk is the \"universal attractor\" for all random walks with weak local correlations. This concept originates from dynamical systems and statistical physics, and its physical meaning is far more profound than a mere mathematical approximation. The physical premise of this approximation is that our observation scale (final displacement \\(x\\)) is much larger than the single-step length \\(a\\), and the total time \\(t\\) is much larger than the single-step time \\(\\tau\\). It is precisely under this macroscopic perspective that the microscopic discreteness becomes unimportant, and the continuous, smooth Gaussian distribution emerges as an effective macroscopic description.</p> <p>It means that at long times and large scales, the macroscopic statistical behavior of stochastic processes (ultimately presenting a Gaussian distribution) does not depend on their microscopic details (for example, whether single-step jumps follow a Bernoulli distribution, uniform distribution, or other distributions). As long as the single-step random variables satisfy certain basic conditions (such as having finite variance), their large-scale accumulation will always be \"attracted\" to the same endpoint\u2014the Gaussian distribution.</p> <p>The intuitive explanation of CLT is: The distribution of the sum of a large number of independent and identically distributed random variables (here our each step) will tend toward a Gaussian distribution (also called normal distribution), regardless of what the specific distribution of single steps is (as long as its variance is finite). Therefore, the Central Limit Theorem becomes a bridge connecting the discrete microscopic world with the continuous macroscopic world, and reveals a profound principle in nature: Universality. It is precisely this universality that allows us to ignore the complexity of microscopic details and grasp the common laws governing the macroscopic behavior of systems. This idea also lays the groundwork for our subsequent understanding of the more general renormalization group theory.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#21-model-definition","title":"2.1 Model Definition","text":"<p>The Gaussian Random Walk (GRW) describes a process that is spatially continuous but temporally advances with fixed steps, defined as a sequence of random variables \\(X_t\\) with the following evolution rule:</p> \\[ X_t = X_{t-1} + \\xi_t \\] <p>where \\(X_t\\) is the position at time \\(t\\), and \\(\\xi_t\\) is the random displacement at that time. Unlike SRW, \\(\\xi_t\\) is a continuous random variable drawn from a Gaussian distribution \\(W(\\xi_t)\\) with mean 0 and variance \\(\\sigma_\\xi^2\\).</p> \\[ W(\\xi_t) = \\frac{1}{\\sqrt{2\\pi\\sigma_\\xi^2}} \\exp\\left(-\\frac{\\xi_t^2}{2\\sigma_\\xi^2}\\right) \\] <p>Assuming starting from \\(X_0 = 0\\), after \\(t\\) steps, the total displacement is the sum of all independent and identically distributed (i.i.d.) single-step displacements:</p> \\[ X_t = \\sum_{t'=1}^{t} \\xi_{t'} \\]"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#22-direct-calculation-of-statistical-properties","title":"2.2 Direct Calculation of Statistical Properties","text":"<p>We can directly use the linearity properties of expectation and variance to calculate the statistical properties of \\(X_t\\):</p> <p>Average displacement: Since the average displacement of each step \\(\\langle \\xi_{t'} \\rangle = 0\\), the average of the total displacement is also 0.</p> \\[ \\langle X_t \\rangle = \\left\\langle \\sum_{t'=1}^{t} \\xi_{t'} \\right\\rangle = \\sum_{t'=1}^{t} \\langle \\xi_{t'} \\rangle = 0 \\] <p>Variance: Since the displacements \\(\\xi_{t'}\\) of each step are mutually independent, the variance of the total displacement equals the sum of the variances of each step. If the variance of each step is the same, denoted as \\(\\sigma_\\xi^2\\), then:</p> \\[ \\langle X_t^2 \\rangle = \\text{Var}[X_t] = \\left\\langle \\left(\\sum_{t'=1}^{t} \\xi_{t'}\\right) \\left(\\sum_{t''=1}^{t} \\xi_{t''}\\right) \\right\\rangle = \\sum_{t'=1}^{t} \\sum_{t''=1}^{t} \\langle \\xi_{t'} \\xi_{t''} \\rangle \\] <p>Since \\(\\langle \\xi_{t'} \\xi_{t''} \\rangle = \\delta_{t't''} \\sigma_\\xi^2\\) (non-zero only when \\(t'=t''\\)), we have:</p> \\[ \\langle X_t^2 \\rangle = \\sum_{t'=1}^{t} \\langle \\xi_{t'}^2 \\rangle = \\sum_{t'=1}^{t} \\sigma_\\xi^2 = t \\sigma_\\xi^2 \\] <p>This again verifies the diffusive property of variance growing linearly with time.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#23-characteristic-function-a-powerful-tool-for-handling-sums-of-random-variables","title":"2.3 Characteristic Function: A Powerful Tool for Handling Sums of Random Variables","text":"<p>Although directly calculating the mean and variance is simple, obtaining the complete probability distribution function \\(p(x,t)\\) is more complex. For handling problems of summing independent random variables, the characteristic function is an extremely powerful mathematical tool.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#231-definition-and-role","title":"2.3.1 Definition and Role","text":"<p>The characteristic function of a random variable \\(X\\) is defined as the expectation value of \\(e^{isX}\\):</p> \\[ \\chi_X(s) = \\langle e^{isX} \\rangle = \\int_{-\\infty}^{\\infty} e^{isx} p(x) dx \\] <p>where \\(i\\) is the imaginary unit and \\(s\\) is a real variable. From the definition, it can be seen that the characteristic function is essentially the Fourier transform of the probability density function (PDF). It is so important mainly based on the following key properties:</p> <ol> <li> <p>Uniqueness: A probability distribution is uniquely determined by its characteristic function. If two random variables have the same characteristic function, their probability distributions must also be the same.</p> </li> <li> <p>Sum property: This is its most core advantage. For two independent random variables \\(X\\) and \\(Y\\), the characteristic function of their sum \\(Z=X+Y\\) equals the product of their respective characteristic functions: \\(\\chi_Z(s) = \\chi_X(s) \\chi_Y(s)\\).</p> </li> </ol> <p>This property converts a complex convolution operation in real space (\\(p_Z(z) = \\int p_X(x)p_Y(z-x)dx\\)) into a simple multiplication operation in Fourier space, greatly simplifying the analysis process.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#232-derivation-of-grws-characteristic-function","title":"2.3.2 Derivation of GRW's Characteristic Function","text":"<p>Now, we use the characteristic function to derive the complete probability distribution of \\(X_t\\), which completely reproduces the professor's calculation process on the blackboard.</p> <p>Single-step characteristic function: First, calculate the characteristic function \\(\\chi_{\\xi_t}(s)\\) of a single-step Gaussian displacement \\(\\xi_t\\).</p> \\[ \\chi_{\\xi_t}(s) = \\langle e^{is\\xi_t} \\rangle = \\int_{-\\infty}^{\\infty} e^{is\\xi} \\frac{1}{\\sqrt{2\\pi\\sigma_\\xi^2}} e^{-\\frac{\\xi^2}{2\\sigma_\\xi^2}} d\\xi = e^{-\\frac{1}{2}s^2\\sigma_\\xi^2} \\] <p>This is a standard Gaussian integral result, showing that the Fourier transform of a Gaussian distribution is still in Gaussian form.</p> <p>\\(t\\)-step sum characteristic function: Since \\(X_t = \\sum_{t'=1}^{t} \\xi_{t'}\\) is the sum of \\(t\\) independent random variables, its characteristic function \\(\\chi_{X_t}(s)\\) is the product of all single-step characteristic functions.</p> \\[ \\chi_{X_t}(s) = \\left\\langle e^{is \\sum_{t'=1}^{t} \\xi_{t'}} \\right\\rangle = \\left\\langle \\prod_{t'=1}^{t} e^{is\\xi_{t'}} \\right\\rangle \\] <p>Since each step is independent, the expectation of the product equals the product of expectations:</p> \\[ \\chi_{X_t}(s) = \\prod_{t'=1}^{t} \\langle e^{is\\xi_{t'}} \\rangle = \\prod_{t'=1}^{t} \\chi_{\\xi_{t'}}(s) \\] <p>Substituting the single-step result, we get:</p> \\[ \\chi_{X_t}(s) = \\prod_{t'=1}^{t} e^{-\\frac{1}{2}s^2\\sigma_\\xi^2} = e^{-\\frac{1}{2}s^2 \\sum_{t'=1}^{t} \\sigma_\\xi^2} = e^{-\\frac{1}{2}s^2 (t\\sigma_\\xi^2)} \\] <p>Obtaining the probability distribution function: We compare the final result with the form of the single-step characteristic function. We find that \\(\\chi_{X_t}(s)\\) is exactly the characteristic function corresponding to a Gaussian distribution with mean 0 and variance \\(\\sigma_{X_t}^2 = t\\sigma_\\xi^2\\). According to the uniqueness of characteristic functions, we can conclude that \\(X_t\\) also follows a Gaussian distribution. Through inverse Fourier transform, we can obtain its probability density function:</p> \\[ p(x,t) = \\frac{1}{\\sqrt{2\\pi\\sigma_{X_t}^2}} \\exp\\left(-\\frac{x^2}{2\\sigma_{X_t}^2}\\right) \\] <p>This derivation perfectly demonstrates the power of characteristic functions: a complex problem involving \\(t\\) convolutions, through conversion to Fourier space, becomes simple exponential multiplication, ultimately easily obtaining analytical results.</p> <p>To intuitively understand the properties of GRW, we can simulate it through Python code. The following code simulates multiple GRW trajectories and shows the distribution of particle positions at different times.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n\n# --- Parameter settings ---\nnum_walkers = 5000  # Number of simulated particles\nnum_steps = 100     # Total number of steps\nsigma_xi = 1.0      # Standard deviation of single-step displacement (\u03c3_\u03be)\nplot_times = [10, 30, 100]  # Time points at which to plot the distribution\n\n# --- Simulation process ---\n# Generate random displacements for all steps, shape is (num_walkers, num_steps)\n# Each step is sampled from N(0, sigma_xi^2)\nsteps = np.random.normal(loc=0.0, scale=sigma_xi, size=(num_walkers, num_steps))\n\n# Calculate the position of each walker at each step (cumulative sum)\n# positions has the same shape as (num_walkers, num_steps)\npositions = np.cumsum(steps, axis=1)\n\n# --- Visualization of results ---\nplt.figure(figsize=(12, 6))\nplt.suptitle('Gaussian Random Walk Simulation', fontsize=16)\n\n# Plot some sample trajectories\nplt.subplot(1, 2, 1)\nfor i in range(5): # Only plot 5 trajectories as examples\n    plt.plot(range(1, num_steps + 1), positions[i, :], alpha=0.7)\nplt.title('Sample Trajectories')\nplt.xlabel('Time Step (t)')\nplt.ylabel('Position (X_t)')\nplt.grid(True)\n\n# Plot position distributions at specified time points\nplt.subplot(1, 2, 2)\nfor t in plot_times:\n    # Theoretical variance\n    variance_t = t * sigma_xi**2\n    std_dev_t = np.sqrt(variance_t)\n\n    # Plot histogram of simulation data\n    plt.hist(positions[:, t-1], bins=50, density=True, alpha=0.6, label=f't = {t} (Sim)')\n\n    # Plot theoretical Gaussian distribution curve\n    x = np.linspace(-4 * std_dev_t, 4 * std_dev_t, 200)\n    pdf = norm.pdf(x, loc=0, scale=std_dev_t)\n    plt.plot(x, pdf, label=f't = {t} (Theory)')\n\nplt.title('Position Distribution at Different Times')\nplt.xlabel('Position (x)')\nplt.ylabel('Probability Density')\nplt.legend()\nplt.grid(True)\n\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code></pre> <p></p> <p>The simulation results clearly show: as time \\(t\\) increases, the distribution range (variance) of particle positions continues to expand, but the distribution shape always remains Gaussian, which is completely consistent with our theoretical derivation.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#30-conceptual-deepening-universality-scaling-and-renormalization-group-ideas","title":"3.0 Conceptual Deepening: Universality, Scaling, and Renormalization Group Ideas","text":"<p>In the classroom, after deriving the Gaussian distribution, the professor mentioned \"RG Theory\" and a paper by Ariel Amir. This is a very key but easily confusing hint, because it connects a probability theory problem with one of the most profound ideas in modern physics\u2014the Renormalization Group (RG).</p> <p>Since there are no handouts, the professor only mentioned the general name and author. A relatively matching reference is probably this paper:</p> <p>Amir A. An elementary renormalization-group approach to the generalized central limit theorem and extreme value distributions[J]. Journal of Statistical Mechanics: Theory and Experiment, 2020, 2020(1): 013214.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#31-limitations-of-the-standard-central-limit-theorem","title":"3.1 Limitations of the Standard Central Limit Theorem","text":"<p>First, it needs to be clarified that the Central Limit Theorem we discussed earlier and the Gaussian attractor it derives have a premise: the variance of single-step random variables must be finite. However, in the physical world, there exist many \"heavy-tailed\" distributions whose variance is infinite. For example, in certain glassy materials or financial markets, the probability of extreme events (very large fluctuations) is much higher than predicted by Gaussian distributions. For such systems, the limiting distribution after summing many random variables will no longer be Gaussian. This raises a question: Does there exist a more universal theoretical framework that can uniformly describe all these situations?</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#32-the-renormalization-group-perspective","title":"3.2 The Renormalization Group Perspective","text":"<p>Renormalization group theory was initially developed to solve divergence problems in quantum field theory, but its core ideas have permeated all areas of physics, especially in the phase transition theory of statistical physics.</p> <ul> <li> <p>Core idea of RG: Coarse-graining and scaling transformations: The essence of RG is a systematic \"coarse-graining\" method. Imagine a magnetic system composed of microscopic spins. We can treat a small group (e.g., 2\u00d72) of spins as a whole, describing their average behavior with an \"equivalent\" block spin. In this way, we ignore microscopic details and obtain a new system at a larger scale with fewer variables. Then, we repeat the same operation on this new system. This process of continuously \"zooming out\" the observation scale and readjusting parameters to keep the theoretical form unchanged is the RG transformation.</p> </li> <li> <p>Fixed points and universality: In the process of repeatedly performing RG transformations, the system's parameters will \"flow\" along some trajectory. The endpoint of this flow is called a \"fixed point.\" Fixed points describe systems with scale invariance, meaning they look self-similar at different scales. A fixed point and all initial systems that can flow to it together constitute a universality class. Systems in the same universality class, despite having vastly different microscopic details, exhibit completely identical properties in macroscopic critical behavior (described by the same set of critical exponents).</p> </li> </ul>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#33-applying-rg-ideas-to-random-walks","title":"3.3 Applying RG Ideas to Random Walks","text":"<p>Ariel Amir's paper provides an excellent perspective connecting RG ideas with the Central Limit Theorem.</p> <ul> <li> <p>Summing random variables is coarse-graining: Adding \\(n\\) independent and identically distributed (i.i.d.) random variables \\(\\xi_i\\) to get a new random variable \\(S_n = \\sum_{i=1}^n \\xi_i\\) can itself be seen as a coarse-graining operation in RG. We start from \\(n\\) microscopic variables and obtain a macroscopic variable \\(S_n\\) describing behavior at larger scales. After coarse-graining in RG, a scaling transformation is usually needed to compare the new system with the original system. In the random walk problem, this corresponds to standardizing the total displacement \\(S_n\\), for example, by dividing by a factor \\(\\sqrt{n}\\) (for cases with finite variance). We find that after the transformation \\(S_n / \\sqrt{n}\\), the form of the distribution tends to stabilize (Gaussian distribution), which exactly reflects the self-similarity of the system under transformation.</p> </li> <li> <p>Stable distributions are fixed points: What we are looking for are the limiting distributions under the summation operation. A distribution that maintains its form unchanged after summation (with appropriate translation and scaling) is called a stable distribution. In RG language, these stable distributions are exactly the fixed points of the summation RG transformation.</p> </li> <li> <p>RG interpretation of the Central Limit Theorem: Now we can reinterpret CLT: For all random variables with finite variance in their initial distributions (this defines a huge \"basin of attraction\"), under the action of the summation (coarse-graining) RG flow, they will all be attracted to the same, and only, fixed point\u2014the Gaussian distribution. Other details of the initial distribution (such as skewness, kurtosis, etc.) are called \"irrelevant operators\" in RG language, and they are gradually \"smoothed out\" in the continuous coarse-graining process, having no effect on the final macroscopic behavior.</p> </li> <li> <p>Generalized Central Limit Theorem (GCLT): When the initial distribution has infinite variance (e.g., heavy-tailed distributions), the system is no longer within the basin of attraction of the Gaussian fixed point. At this point, the RG flow will take them to other fixed points. These non-Gaussian stable distributions are the so-called L\u00e9vy stable distributions. Unlike Gaussian distributions, L\u00e9vy distributions typically have \"heavy tails,\" meaning the probability of extremely large jumps is much higher than predicted by Gaussian distributions, and their variance may even be infinite. Amir's paper uses this RG approach to derive all stable distribution forms, including Gaussian and L\u00e9vy distributions, in a unified and elegant way.</p> </li> </ul> <p>Therefore, the professor's mention of RG theory is to reveal a deeper picture: the Central Limit Theorem is not an isolated probability theory conclusion, but a manifestation of the grand theory about scaling and universality in physics (RG) in a specific problem. It tells us that the ubiquity of Gaussian distributions stems from their unique stability under the basic physical operation of summing random variables.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#40-poisson-process-introducing-random-time","title":"4.0 Poisson Process: Introducing Random Time","text":"<p>So far, in the models we have discussed, time has always advanced with fixed, deterministic beats. However, in many processes in nature, the occurrence of events itself is random. For example, radioactive atomic nucleus decay, molecular motor movement within cells, etc. The Poisson process is precisely the basic model for describing the random distribution of such events in time.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#41-motivation-from-clock-steps-to-random-events","title":"4.1 Motivation: From \"Clock\" Steps to Random Events","text":"<p>In SRW and GRW models, particles are like wound clocks, moving one step every fixed time \\(\\tau\\). Now we consider a new scenario: a particle has a fixed probability of jumping forward one step in any infinitesimal time interval \\(dt\\). This probability of jumping per unit time, we call the hopping rate, denoted as \\(r\\) (or \\(\\nu\\) in the slides).</p> <p></p> <ul> <li> <p>Probability of jumping forward one step in \\(dt\\) time: \\(P_+ = r \\cdot dt\\)</p> </li> <li> <p>Probability of not moving in \\(dt\\) time: \\(P_0 = 1 - r \\cdot dt\\)</p> </li> </ul> <p>The core assumption here is that \\(r\\) is a constant, not changing with time.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#42-physical-example-kinesin-molecular-motor","title":"4.2 Physical Example: Kinesin Molecular Motor","text":"<p>The kinesin shown in the classroom is an excellent physical example. Kinesin is a molecular motor that \"walks\" along microtubules within cells, responsible for transporting various organelles and vesicles. Its movement is unidirectional, but the timing of each step is random.</p> <ul> <li> <p>Step size: Each step of kinesin is about 8 nm in size, which happens to be the length of one tubulin dimer on a microtubule.</p> </li> <li> <p>Energy source: For each step, kinesin needs to hydrolyze one ATP molecule to provide energy. Therefore, its stepping rate is closely coupled to the ATP hydrolysis rate, usually in a 1:1 relationship.</p> </li> <li> <p>Rate: Under physiological conditions, kinesin's walking rate is about several tens to hundreds of steps per second. For example, experimentally measured ATP hydrolysis rates can reach about \\(50-100 \\text{ s}^{-1}\\). This makes our previously defined abstract hopping rate very specific: for kinesin, \\(r \\approx 100 \\text{ s}^{-1}\\).</p> </li> </ul>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#43-deriving-the-waiting-time-distribution","title":"4.3 Deriving the Waiting Time Distribution","text":"<p>The first core problem of the Poisson process is: After one event occurs, how long do we need to wait for the next event to occur? This question can be answered by deriving the waiting time distribution.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#431-the-concept-of-survival-probability","title":"4.3.1 The Concept of Survival Probability","text":"<p>We introduce a key quantity: the survival probability \\(S(t) = \\text{Prob}\\{T &gt; t\\}\\), which represents the probability that the event we care about (e.g., one jump) has not yet occurred by time \\(t\\). Here \\(T\\) is the waiting time random variable. According to the definition, the relationship between the survival function and the cumulative distribution function (CDF) \\(F(t) = \\text{Prob}\\{T \\le t\\}\\) is \\(S(t) = 1 - F(t)\\).</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#432-from-difference-to-differential-equation","title":"4.3.2 From Difference to Differential Equation","text":"<p>Now we derive the evolution equation for \\(S(t)\\), which is also the core derivation on the blackboard.</p> <p>Consider the survival probability \\(S(t+dt)\\) at time \\(t+dt\\). For the system to \"survive\" until time \\(t+dt\\), it must satisfy two independent conditions:</p> <ol> <li> <p>It has already survived until time \\(t\\) (probability \\(S(t)\\)).</p> </li> <li> <p>And, in the next infinitesimal time interval \\([t, t+dt]\\), no jump occurred (probability \\(1 - r dt\\)).</p> </li> </ol> <p>Therefore,</p> \\[ S(t+dt) = S(t) \\cdot (1 - r dt) \\] <p>Rearranging the above equation:</p> \\[ \\frac{S(t+dt) - S(t)}{dt} = -r S(t) \\] <p>When \\(dt \\to 0\\), the left side is the derivative of \\(S(t)\\), and we get a first-order ordinary differential equation:</p> \\[ \\frac{dS(t)}{dt} = -r S(t) \\]"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#433-exponential-distribution","title":"4.3.3 Exponential Distribution","text":"<p>The solution to this differential equation is very simple. We know the initial condition is \\(S(0)=1\\) (at time \\(t=0\\), the event has definitely not occurred yet). Solving this equation gives:</p> \\[ S(t) = e^{-rt} \\] <p>We obtain the survival probability function. The probability density function \\(p(t)\\) of waiting time can be obtained by taking the derivative of \\(F(t) = 1 - S(t)\\), i.e., \\(p(t) = -dS/dt\\):</p> \\[ p(t) = r e^{-rt} \\] <p>This is the exponential distribution. It describes the distribution of waiting times between two consecutive events when the event occurrence rate is constant.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#44-properties-of-the-poisson-process","title":"4.4 Properties of the Poisson Process","text":"<p>From the exponential distribution, we can derive some important properties of the Poisson process:</p> <ul> <li> <p>Average waiting time: \\(\\langle T \\rangle = \\int_0^\\infty t \\cdot p(t) dt = 1/r\\). This makes intuitive sense: the higher the rate, the shorter the average waiting time.</p> </li> <li> <p>Waiting time variance: \\(\\text{Var} = 1/r^2\\).</p> </li> <li> <p>Memoryless Property: This is the most unique property of the exponential distribution. It refers to the fact that the probability of future events occurring is independent of how long we have waited in the past. Mathematically expressed as \\(\\text{Prob}(T &gt; t+s | T &gt; t) = \\text{Prob}(T &gt; s)\\). That is, if we have already waited \\(t\\) seconds and kinesin hasn't moved, the probability that it will still not move in the next \\(s\\) seconds is exactly the same as the probability that a kinesin that just started waiting will not move in \\(s\\) seconds. The \"history\" of this system is forgotten. This property directly stems from our initial physical assumption\u2014that the hopping rate \\(r\\) is a constant that does not change with time.</p> </li> </ul>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#45-event-counting-poisson-distribution","title":"4.5 Event Counting: Poisson Distribution","text":"<p>In addition to waiting time, another core problem of the Poisson process is: \"What is the probability that exactly \\(k\\) events occur in a given time window \\(T\\)?\" The answer is given by the Poisson distribution:</p> \\[ P(k; T) = \\frac{(\\nu T)^k}{k!} e^{-\\nu T} \\] <p>where \\(\\lambda = \\nu T\\) is the average number of events expected to occur in that time window. This distribution, together with the exponential distribution, constitutes a complete description of the Poisson process: the exponential distribution describes \"how long to wait between events,\" while the Poisson distribution describes \"how many things can happen in a period of time.\"</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#50-simulation-gillespie-algorithm","title":"5.0 Simulation: Gillespie Algorithm","text":"<p>The detailed details of this algorithm will be introduced in the next lecture.</p> <p>The theoretical derivation of the previous section not only gives the statistical properties of the Poisson process but also provides us with a precise and efficient computer simulation method, the Gillespie algorithm (or stochastic simulation algorithm, SSA). Traditional simulation methods might discretize time into many small \\(dt\\) intervals and then decide whether events occur based on probability \\(r dt\\) in each \\(dt\\). This method is not only computationally inefficient but also approximate.</p> <p>The essence of the Gillespie algorithm lies in its use of the analytical results we have already derived to directly answer two questions:</p> <ol> <li> <p>When will the next event occur? Answer: The waiting time \\(\\Delta t\\) is drawn from the exponential distribution \\(p(t) = re^{-rt}\\).</p> </li> <li> <p>What event will occur? (When there are multiple possible events) Answer: Decide based on the relative rates of each event. For example, if a particle can jump forward at rate \\(\\nu_f\\) or backward at rate \\(\\nu_b\\), then the total rate is \\(\\nu_{total} = \\nu_f + \\nu_b\\). After determining that the next step will occur, the probability of jumping forward is \\(\\nu_f / \\nu_{total}\\), and the probability of jumping backward is \\(\\nu_b / \\nu_{total}\\). In this way, the Gillespie algorithm can precisely simulate arbitrarily complex stochastic reaction networks.</p> </li> </ol> <p>For the simple unidirectional jumping process we are currently discussing, the second step is deterministic (will only jump forward). Therefore, the core of the algorithm is to continuously generate the next waiting time from the exponential distribution.</p> <p>The following Python code implements the Gillespie algorithm for simulating a simple unidirectional Poisson process.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import poisson, expon\n\n# --- Parameter settings ---\nr = 2.0                # Average event rate\nT_max = 10.0             # Total simulation time for trajectories\nnum_trajectories = 10    # [Modification] Increase the number of displayed trajectories to 10\nnum_simulations = 20000  # Number of simulations for statistical distribution\n\n# --- Create canvas ---\nfig = plt.figure(figsize=(14, 10))\nax_traj = plt.subplot2grid((2, 2), (0, 0), colspan=2)\nax_count = plt.subplot2grid((2, 2), (1, 0))\nax_wait = plt.subplot2grid((2, 2), (1, 1))\n\nfig.suptitle(f'Poisson Process: Trajectories and Underlying Distributions (Rate r = {r})', fontsize=16)\n\n# --- 1. Simulate and plot several trajectories (top plot) ---\nall_waiting_times = [] \nfor i in range(num_trajectories):\n    t = 0.0\n    x = 0\n    times = [t]\n    positions = [x]\n\n    while t &lt; T_max:\n        delta_t = np.random.exponential(scale=1.0/r)\n        all_waiting_times.append(delta_t)\n\n        t += delta_t\n        if t &lt; T_max:\n            x += 1\n            times.append(t)\n            positions.append(x)\n\n    # To make the graph clear, only add labels for the first few trajectories\n    if i &lt; 3:\n        ax_traj.step(times, positions, where='post', label=f'Sample Trajectory {i+1}')\n    else:\n        ax_traj.step(times, positions, where='post', alpha=0.6) # Make subsequent trajectories semi-transparent\n\n# Plot theoretical mean line\nt_theory = np.linspace(0, T_max, 100)\nmean_theory = r * t_theory\nax_traj.plot(t_theory, mean_theory, 'k--', linewidth=2.5, label=f'Theoretical Mean N(t) = {r}*t')\nax_traj.set_title(f'Sample Trajectories of a Poisson Process ({num_trajectories} shown)')\nax_traj.set_xlabel('Time (t)')\nax_traj.set_ylabel('Number of Events (N(t))')\nax_traj.grid(True, linestyle='--', alpha=0.6)\nax_traj.legend()\n\n\n# --- 2. Plot event count distribution (bottom left plot) ---\nevent_counts_at_Tmax = np.random.poisson(lam=r * T_max, size=num_simulations)\nk_values = np.arange(event_counts_at_Tmax.min(), event_counts_at_Tmax.max() + 1)\nax_count.hist(event_counts_at_Tmax, bins=np.arange(k_values.min(), k_values.max() + 2) - 0.5, density=True, alpha=0.7, label='Simulation')\n\npoisson_pmf_theory = poisson.pmf(k=k_values, mu=r * T_max)\nax_count.plot(k_values, poisson_pmf_theory, 'ro-', label='Theory (Poisson)')\nax_count.set_title(f'Event Count Distribution at T={T_max}')\nax_count.set_xlabel(f'Number of Events (k)')\nax_count.set_ylabel('Probability')\nax_count.set_xticks(k_values[::2])\nax_count.legend()\nax_count.grid(True, linestyle='--', alpha=0.6)\n\n\n# --- 3. Plot waiting time distribution (bottom right plot) ---\nadditional_waits = np.random.exponential(scale=1.0/r, size=num_simulations)\nall_waiting_times.extend(additional_waits)\n\nax_wait.hist(all_waiting_times, bins=50, density=True, alpha=0.7, label='Simulation')\n\nt_values_exp = np.linspace(0, max(all_waiting_times), 200)\nexpon_pdf_theory = expon.pdf(t_values_exp, scale=1.0/r)\nax_wait.plot(t_values_exp, expon_pdf_theory, 'r-', linewidth=2, label='Theory (Exponential)')\nax_wait.set_title('Waiting Time Distribution')\nax_wait.set_xlabel('Time between events (\u0394t)')\nax_wait.set_ylabel('Probability Density')\nax_wait.legend()\nax_wait.grid(True, linestyle='--', alpha=0.6)\n\n\n# --- Display final image ---\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code></pre> <p></p> <p>It can be seen that no two trajectories are exactly the same, their jump time points are different, and their final positions at \\(t=10\\) seconds are also different. However, despite being full of randomness, all trajectories fluctuate around the black theoretical mean line \\(N(t) = 2.0 \\cdot t\\). Individual processes are unpredictable, but their long-term behavior follows an average trend.</p> <p>Bottom left plot (Event count distribution): This plot reveals the deterministic laws of the process from a statistical perspective. It counts the final positions of thousands of simulations at the exact moment \\(t=10\\) seconds and plots them as a histogram. We will find that although the results of individual experiments are random, the distribution of results from many experiments presents a very regular bell shape. More importantly, this distribution composed of simulation data (blue) coincides with the theoretical Poisson distribution (red dotted line). At fixed time points, the probability of the system's state can be precisely predicted.</p> <p>Bottom right plot (Waiting time distribution): This plot delves into the microscopic dynamics of the process. It collects all the time intervals between each \"jump\" in all trajectories (i.e., the \"horizontal length\" of each step in the top plot) and plots their probability distribution. The results show that the vast majority of waiting times are very short, while long waiting times are very rare, with their probability decaying exponentially. This simulation result (blue) also matches the theoretical exponential distribution (red line). The \"engine\" driving the evolution of the entire process\u2014the waiting time for event occurrence\u2014is itself a random variable following strict probability laws.</p>"},{"location":"notes/3.%20Gaussian%20Random%20Walk%20and%20Poisson%20Process/#summary","title":"Summary","text":"<p>This lecture led us to complete two key transitions from discrete to continuous stochastic processes, deepening our understanding of random phenomena:</p> <ol> <li> <p>From discrete space to continuous space: We saw that simple random walks tend toward Gaussian distributions in the macroscopic limit. This process can not only be described by the Central Limit Theorem but can also be interpreted from the profound ideas of renormalization groups, i.e., the Gaussian distribution is a universal fixed point under the summation operation. In this process, the characteristic function as an analytical tool demonstrates its great power in handling problems of summing independent random variables.</p> </li> <li> <p>From discrete time to continuous time: By introducing a constant event occurrence rate \\(r\\), we constructed the Poisson process model. Its core lies in the fact that the waiting time between two events follows an exponential distribution and has the unique property of memorylessness. The survival probability analysis method, by establishing and solving differential equations, becomes the key to deriving this result.</p> </li> </ol> <p>The core theme throughout this lecture is how to derive universal, macroscopic statistical laws from simple, microscopic physical assumptions (such as single-step jump distributions, constant event rates).</p> <p>A natural next step is to combine these two ideas: study a process that occurs in continuous space with events happening at continuous random times. This will directly lead us into the realm of Brownian motion and the mathematical language describing it\u2014Langevin Equation and Fokker-Planck Equation\u2014which will be the core content explored in subsequent courses.</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/","title":"Review: Poisson Process and Its Simulation","text":"<p>In the previous lecture, Prof. Erwin Frey discussed in detail the Poisson process, which describes a stochastic process where events occur at a constant average rate in continuous time. This section begins by reviewing the core mathematical characteristics of the Poisson process and uses this as a foundation to introduce more advanced stochastic process simulation and analysis methods.</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#waiting-time-distribution-and-memorylessness","title":"Waiting Time Distribution and Memorylessness","text":"<p>A core feature of the Poisson process is its \"memorylessness.\" This means that the probability of the next event occurring in some future time interval is independent of how long we have already waited. This physical property is mathematically manifested as the waiting times between events following an exponential distribution.</p> <p>The professor reviewed several key formulas describing this property on the blackboard:</p> <p></p> <p>Survival Probability \\(S(t)\\): The probability that no event occurs for a waiting time exceeding \\(t\\) starting from any moment. For the Poisson process, this probability decays exponentially with time:</p> \\[ S(t)=e^{-\\nu t} \\] <p>where \\(\\nu\\) is the constant rate of event occurrence.</p> <p>Cumulative Distribution Function (CDF) of Waiting Time \\(W(t)\\): The probability that the waiting time is less than or equal to \\(t\\). It equals 1 minus the survival probability:</p> \\[ W(t)=1-S(t)=1-e^{-\\nu t} \\] <p>Probability Density Function (PDF) of Waiting Time \\(w(t)\\): The probability density of event occurrence in an infinitesimal time window \\(dt\\) around time \\(t\\). It is the derivative of the cumulative distribution function:</p> \\[ w(t)=\\frac{dW(t)}{dt}=\\nu e^{-\\nu t} \\] <p>This set of formulas forms the foundation of the Poisson process. The exponential form of the waiting time distribution \\(w(t)\\) directly embodies memorylessness. We can verify this by calculating conditional probabilities: assuming no event has occurred before time \\(t_0\\), the conditional probability of an event occurring in the next \\(dt\\) time is:</p> \\[ P(t_0 &lt; T \\leq t_0 + dt \\mid T &gt; t_0) = \\frac{w(t_0) \\, dt}{S(t_0)} = \\frac{\\nu e^{-\\nu t_0} \\, dt}{e^{-\\nu t_0}} = \\nu \\, dt \\] <p>This result is independent of \\(t_0\\), indicating that regardless of how long we have waited, the probability of an event occurring in the next instant is always \\(\\nu dt\\).</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#simulation-dilemma-limitations-of-fixed-time-step-methods","title":"Simulation Dilemma: Limitations of Fixed Time Step Methods","text":"<p>With the analytical description of the Poisson process, a natural question arises: How do we simulate such a process on a computer? The most intuitive method is the fixed time step algorithm.</p> <p></p> <p>The approach is as follows:</p> <p>1.Discretize time into a series of small time steps \\(\\Delta t\\).</p> <p>2.In each time step, the particle has a certain probability of \"jumping\" forward one step (i.e., one event occurs).</p> <p>3.This probability \\(p_+\\) is set to the rate \\(\\nu\\) multiplied by the time step \\(\\Delta t\\), i.e., \\(p_+=\\nu\\Delta t\\).</p> <p>4.Correspondingly, the probability of no jump occurring in this step is \\(p_0=1-p_+=1-\\nu\\Delta t\\).</p> <p>However, this seemingly simple method has profound theoretical flaws and practical difficulties:</p> <ul> <li> <p>Accuracy issues: This method is valid only under the premise that \\(\\nu\\Delta t\\ll 1\\), i.e., the probability of an event occurring in one time step must be very small. If \\(\\Delta t\\) is not small enough, this approximation no longer holds. More seriously, it completely ignores the possibility of two or more events occurring in one \\(\\Delta t\\) (with probability proportional to \\((\\nu\\Delta t)^2\\) or higher-order terms).</p> </li> <li> <p>Efficiency issues: If the event occurrence rate \\(\\nu\\) is very small, then in the vast majority of time steps, the system is in a \"nothing happens\" state (\\(p_0\\approx 1\\)). The computer spends a lot of time simulating these \"no-event\" steps, resulting in extremely low efficiency.</p> </li> <li> <p>Correctness issues: This method introduces an artificial time grid, forcing events to occur only at discrete time points \\(k\\cdot\\Delta t\\) (where \\(k\\) is an integer), which contradicts the characteristic of real Poisson processes where events can occur at any continuous time.</p> </li> </ul> <p>These limitations drive us to seek a more accurate and efficient simulation method, which is one of the core contents of this lecture\u2014the Gillespie algorithm.</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#1-gillespie-algorithm-a-precise-stochastic-simulation-method","title":"1. Gillespie Algorithm: A Precise Stochastic Simulation Method","text":"<p>The Gillespie algorithm, also known as the Stochastic Simulation Algorithm (SSA), is an event-driven method that completely abandons the concept of fixed time steps. Its core idea is not to ask \"Will an event occur in the next \\(\\Delta t\\)?\" but to directly ask \"When will the next event occur?\" By directly sampling random numbers from the theoretically correct waiting time distribution, this algorithm can precisely simulate every event of the stochastic process, making it an \"exact\" simulation method whose results are statistically identical to the theoretical analytical solution.</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#11-core-idea-inverse-transform-sampling","title":"1.1 Core Idea: Inverse Transform Sampling","text":"<p>The foundation of the Gillespie algorithm is how to generate a random number that follows a specific probability distribution (here, the exponential distribution \\(w(t)=\\nu e^{-\\nu t}\\)). This requires a powerful statistical technique\u2014Inverse Transform Sampling.</p> <p>The principle is as follows:</p> <p>1.We have a target probability density function \\(w(t)\\) and its corresponding cumulative distribution function \\(W(t)=\\int_0^t w(t')dt'\\).</p> <p>2.We also have a tool that can generate uniformly distributed random numbers in the \\([0, 1]\\) interval, which we call \\(\\xi\\).</p> <p>3.The core equation is probability conservation: the probability \\(w(t)dt\\) in the range \\(dt\\) around \\(t\\) should equal the probability \\(1\\cdot d\\xi\\) in the range \\(d\\xi\\) around \\(\\xi\\). That is:</p> \\[ w(t)dt=d\\xi \\] <p>4.Integrating both sides of this equation from 0 to \\(t\\), the left side gives the cumulative distribution function \\(W(t)\\), and the right side gives \\(\\xi\\):</p> \\[ \\xi=\\int_0^t w(t')dt'=W(t) \\] <p>5.For the Poisson process, we have \\(W(t)=1-e^{-\\nu t}\\), so:</p> \\[ \\xi=1-e^{-\\nu t} \\] <p>6.Now, our goal is to solve for \\(t\\) given the known \\(\\xi\\). Through simple algebraic transformation, we can obtain the expression for \\(t\\):</p> \\[ e^{-\\nu t}=1-\\xi \\] \\[ -\\nu t=\\ln(1-\\xi) \\] \\[ t=-\\frac{1}{\\nu}\\ln(1-\\xi) \\] <p>7.Here is a clever simplification: Since \\(\\xi\\) is a uniformly distributed random number in the \\([0, 1]\\) interval, \\(1-\\xi\\) is also a uniformly distributed random number in the \\([0, 1]\\) interval. Therefore, we can use another uniform random number \\(\\xi'\\) to replace \\(1-\\xi\\), thus obtaining the final sampling formula:</p> \\[ t=-\\frac{1}{\\nu}\\ln(\\xi') \\] <p>In the lecture notes, the professor used the characteristic time \\(\\tau=1/\\nu\\) to express this, writing the formula as \\(t=-\\tau\\ln(\\xi)\\).</p> <p>This derivation not only provides a method for generating waiting times in the Poisson process but, more importantly, reveals a universal principle: to sample from any probability distribution, one only needs to first generate a uniform random number \\(\\xi\\) on \\([0, 1]\\), then calculate the inverse function of its cumulative distribution function \\(W^{-1}(\\xi)\\).</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#12-gillespie-algorithm-steps-for-poisson-process","title":"1.2 Gillespie Algorithm Steps for Poisson Process","text":"<p>Based on the above principle, the Gillespie algorithm for simulating the Poisson process can be clearly summarized as the following three-step loop:</p> <p>1.Initialization: Set initial time \\(T=0\\) and initial position (event count) \\(n=0\\).</p> <p>2.Sample waiting time:</p> <p>a. Generate a uniformly distributed random number \\(\\xi\\) in the \\([0, 1]\\) interval.</p> <p>b. Calculate the waiting time \\(t\\) for the next event occurrence according to the formula \\(t=-\\frac{1}{\\nu}\\ln(\\xi)\\).</p> <p>3.Update system state:</p> <p>a. Advance the current time by \\(t\\): \\(T \\leftarrow T+t\\).</p> <p>b. Increment the event count by one: \\(n \\leftarrow n+1\\).</p> <p>4.Loop: Repeat steps 2 and 3 until the simulation time \\(T\\) reaches the preset termination time.</p> <p>This event-driven simulation method, where the time step \\(t\\) itself is random, perfectly reproduces the inherent uncertainty of stochastic processes. It is both accurate and efficient because the computer only performs calculations when events actually occur.</p> <p></p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#13-python-code-implementation","title":"1.3 Python Code Implementation","text":"<p>Below is an example Python code implementing the Gillespie algorithm to simulate the Poisson process. The code will generate and reproduce the trajectories shown in the PPT.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef gillespie_poisson(nu, t_max):\n    \"\"\"\n    Simulate a Poisson process using the Gillespie algorithm.\n\n    Parameters:\n    nu (float): Event rate.\n    t_max (float): Total simulation time.\n\n    Returns:\n    tuple: Two lists containing event times and corresponding event counts.\n    \"\"\"\n    # Initialization\n    t = 0.0  # Current time\n    n = 0    # Current event count\n\n    # Lists to store trajectory\n    times = [t]\n    counts = [n]\n\n    # Simulation loop until maximum time is reached\n    while t &lt; t_max:\n        # 1. Draw a uniform random number from (0, 1]\n        #    Note: xi cannot be 0 because log(0) is negative infinity.\n        #    np.random.random() generates random numbers in (0, 1), which meets the requirement.\n        xi = np.random.random()\n\n        # 2. Calculate waiting time according to the formula\n        dt = -1.0/nu * np.log(xi)\n\n        # 3. Update time and count\n        t += dt\n        n += 1\n\n        # 4. Record trajectory point\n        times.append(t)\n        counts.append(n)\n\n    return times, counts\n\n# --- Simulation and plotting ---\n# Set parameters\nnu = 1.0      # Event rate\nt_max = 100   # Total simulation time\nnum_traj = 10 # Number of simulated trajectories\n\n# Create figure with two subplots\nplt.figure(figsize=(15, 6))\n\n# Left subplot: Single trajectory\nplt.subplot(1, 2, 1)\ntimes, counts = gillespie_poisson(nu, t_max)\nplt.step(times, counts, where='post', linewidth=1.5, color='blue')\n# Add theoretical expectation line (straight line y = \u03bdt)\nt_theory = np.linspace(0, t_max, 100)\nn_theory = nu * t_theory\nplt.plot(t_theory, n_theory, 'k--', linewidth=2)\nplt.xlabel('Time ($t$)')\nplt.ylabel('Event Count ($x$)')\nplt.title('Single Trajectory')\nplt.grid(True, alpha=0.3)\n\n# Right subplot: Multiple trajectories\nplt.subplot(1, 2, 2)\nfor i in range(num_traj):\n    times, counts = gillespie_poisson(nu, t_max)\n    plt.step(times, counts, where='post', linewidth=1.5, alpha=0.7)\n\n# Add theoretical expectation line (straight line y = \u03bdt)\nt_theory = np.linspace(0, t_max, 100)\nn_theory = nu * t_theory\nplt.plot(t_theory, n_theory, 'k--', linewidth=2, label='Expected $\\\\nu t$')\n\n# Set chart properties\nplt.xlabel('Time ($t$)')\nplt.ylabel('Event Count ($x$)')\nplt.title('Multiple Trajectories')\nplt.grid(True, alpha=0.3)\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#2-master-equation-deterministic-evolution-of-probability-distribution","title":"2. Master Equation: Deterministic Evolution of Probability Distribution","text":"<p>Although the Gillespie algorithm can generate single random trajectories, to understand the statistical properties of the entire stochastic process, we need a more macroscopic descriptive tool. This is the Master Equation. The master equation describes how the probability of the system being in various possible states evolves over time, and it is a deterministic differential equation.</p> <p>The history of the master equation can be traced back to the early 20th century, first proposed by physicists Max Born and Werner Heisenberg in their research on quantum mechanics and statistical physics. Its core idea is to transform microscopic stochastic processes into macroscopic probability evolution descriptions, enabling systematic analysis of the overall behavioral characteristics of stochastic systems.</p> <p>The basic principle of the master equation method is probability conservation: the rate of change of the probability that the system is in a specific state at a certain time equals the probability flow into that state minus the probability flow out of that state. This \"gain-loss\" balance concept not only applies to physical systems but is also widely used in chemical reactions, biological population dynamics, financial modeling, and many other fields.</p> <p>In specific applications, the master equation is particularly suitable for handling Markov processes with discrete state spaces. For example:</p> <ul> <li> <p>In chemical reactions, describing the probability distribution of reactant molecule numbers changing over time</p> </li> <li> <p>In biological population dynamics, characterizing the probability evolution process of population size</p> </li> <li> <p>In epidemic models, analyzing the probability distribution of susceptible, infected, and recovered individuals</p> </li> <li> <p>In finance, used for modeling the probability characteristics of asset price movements</p> </li> </ul> <p>Compared to the Gillespie algorithm, the master equation provides a more systematic and comprehensive analytical framework. The Gillespie algorithm focuses on the random evolution of single trajectories, while the master equation focuses on the deterministic evolution of the entire probability distribution. The two complement each other and together constitute an important toolkit for stochastic process analysis.</p> <p>For beginners, it is necessary to distinguish between the master equation and the mean-field self-consistent equation introduced later. The two have fundamental differences in both mathematical structure and physical meaning and should not be confused.</p> <p>The difference between self-consistent equations and master equations lies in: master equations describe the time evolution of probability distributions, while self-consistent equations focus on the internal consistency of system steady-state solutions.</p> <ul> <li> <p>Master equation: Describes the time evolution of probability distributions, in the form \\(\\frac{d}{dt}p(n,t) = \\text{gain term} - \\text{loss term}\\), focusing on the statistical behavior of the entire ensemble.</p> </li> <li> <p>Self-consistent equation: Usually refers to equations of the form \\(x = f(x)\\), where the unknown \\(x\\) appears on both sides of the equation, requiring the solution to be consistent with itself. In physics, it is commonly found in mean-field approximations, such as \\(m = \\tanh(\\beta(Jm + h))\\) where the magnetization \\(m\\) is determined through its own value.</p> </li> </ul>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#21-from-microscopic-processes-to-macroscopic-evolution","title":"2.1 From Microscopic Processes to Macroscopic Evolution","text":"<p>Let us return to the microscopic description of the Poisson process. When deriving the Gillespie algorithm, we considered the probability \\(p(n, t+dt)\\) that the system is in state \\(n\\) (i.e., \\(n\\) events have occurred) at time \\(t+dt\\). To reach this state, there are only two possible precursor paths:</p> <p>1.At time \\(t\\), the system was already in state \\(n-1\\), and then one jump occurred in the next \\(dt\\) time. The probability of this jump is \\(\\nu dt\\). Therefore, the contribution of this path is \\(p(n-1, t) \\cdot \\nu dt\\).</p> <p>2.At time \\(t\\), the system was already in state \\(n\\), and then no jump occurred in the next \\(dt\\) time. The probability of no jump is \\(1 - \\nu dt\\). Therefore, the contribution of this path is \\(p(n, t) \\cdot (1 - \\nu dt)\\).</p> <p>Adding the probabilities of these two mutually exclusive cases, we obtain the expression for \\(p(n, t+dt)\\):</p> \\[p(n, t+dt) = p(n-1, t) \\cdot \\nu dt + p(n, t) \\cdot (1 - \\nu dt)\\] <p>Next, we rearrange this equation:</p> \\[p(n, t+dt) - p(n, t) = \\nu p(n-1, t) dt - \\nu p(n, t) dt\\] \\[\\frac{p(n, t+dt) - p(n, t)}{dt} = \\nu p(n-1, t) - \\nu p(n, t)\\] <p>When \\(dt \\to 0\\), the left side is the derivative of \\(p(n, t)\\) with respect to time. Thus, we obtain the master equation for the Poisson process:</p> \\[\\frac{d}{dt} p(n, t) = \\nu p(n-1, t) - \\nu p(n, t)\\] <p>This equation holds for all \\(n \\ge 1\\). For the special case \\(n=0\\), since there is no state \\(n=-1\\), the system can only leave state 0 but cannot enter it. Therefore, its equation is:</p> \\[\\frac{d}{dt} p(0, t) = -\\nu p(0, t)\\]"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#22-gain-loss-interpretation","title":"2.2 Gain-Loss Interpretation","text":"<p>The structure of the master equation has a very clear physical meaning, and it can be viewed as a balance equation for probability flow on each state \\(n\\):</p> \\[\\frac{d}{dt} p(n, t) = \\underbrace{\\nu p(n-1, t)}_{\\text{GAIN}} - \\underbrace{\\nu p(n, t)}_{\\text{LOSS}}\\] <ul> <li> <p>Gain term (GAIN): \\(\\nu p(n-1, t)\\) represents the probability flux flowing from state \\(n-1\\) into state \\(n\\). Its magnitude equals the probability of the source state \\(p(n-1, t)\\) multiplied by the transition rate \\(\\nu\\).</p> </li> <li> <p>Loss term (LOSS): \\(\\nu p(n, t)\\) represents the probability flux flowing from state \\(n\\) out to state \\(n+1\\). Its magnitude equals the probability of the current state \\(p(n, t)\\) multiplied by the total rate \\(\\nu\\) of leaving that state.</p> </li> </ul> <p></p> <p>This \"gain-loss\" structure is a common feature of all master equations. It is essentially a continuity equation in discrete state space, describing how the rate of change of probability \"density\" \\(p(n, t)\\) equals the net difference between the probability \"flows\" into and out of that state. This also ensures total probability conservation, i.e., \\(\\frac{d}{dt} \\sum_n p(n, t) = 0\\).</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#23-from-random-trajectories-to-deterministic-evolution","title":"2.3 From Random Trajectories to Deterministic Evolution","text":"<p>Here we see a profound conceptual shift. The Gillespie algorithm simulates a random, unpredictable path \\(n(t)\\). The master equation, on the other hand, is a deterministic system of differential equations whose solution \\(p(n, t)\\) is a smooth, predictable function.</p> <p>The connection between these two lies in: the master equation describes the statistical behavior of an ensemble composed of infinitely many Gillespie trajectories. If we run countless Gillespie simulations and then count the distribution histogram of \\(n\\) values at some fixed time \\(t\\) in all simulation results, the shape of this histogram will approach the solution \\(p(n, t)\\) of the master equation. Therefore, the master equation connects microscopic randomness with macroscopic deterministic evolution of probabilities.</p> <p>In the later part of the lecture, the professor also showed the matrix form of the master equation:</p> \\[\\frac{d}{dt} \\vec{p}(t) = W \\vec{p}(t)\\] <p>where \\(\\vec{p}(t)\\) is a column vector with elements \\([p(0,t), p(1,t), \\dots]^T\\), and \\(W\\) is a transition rate matrix. This form reveals that the master equation is essentially a system of linear ordinary differential equations, opening the way for using linear algebra tools (such as eigenvalue decomposition) to solve system dynamics.</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#3-solving-master-equations-with-generating-functions","title":"3. Solving Master Equations with Generating Functions","text":"<p>Although the master equation has an elegant form, it is an infinite-dimensional coupled system of ordinary differential equations, making direct solution usually very difficult. To solve this problem, a powerful tool has been developed in mathematical physics\u2014the Generating Function.</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#31-definition-and-transformation-of-generating-functions","title":"3.1 Definition and Transformation of Generating Functions","text":"<p>The core idea of generating functions is to encode an infinite sequence of probabilities \\(p(0,t), p(1,t), \\dots\\) into a single function \\(G(s, t)\\). Its definition is:</p> \\[G(s, t) = \\sum_{n=0}^{\\infty} p(n, t) s^n\\] <p>Here, the variable \\(s\\) is an auxiliary variable with no direct physical meaning, but it acts like a \"ledger\" where the coefficient of \\(s^n\\) is the probability \\(p(n, t)\\) we care about.</p> <p>The magic of generating functions lies in their ability to transform difference operations in master equations (such as \\(p(n-1, t)\\)) into algebraic operations. We multiply both sides of the master equation \\(\\frac{d}{dt} p(n, t) = \\nu p(n-1, t) - \\nu p(n, t)\\) by \\(s^n\\) and then sum over all \\(n\\):</p> \\[\\sum_{n=0}^{\\infty} \\frac{d}{dt} p(n, t) s^n = \\sum_{n=0}^{\\infty} \\nu p(n-1, t) s^n - \\sum_{n=0}^{\\infty} \\nu p(n, t) s^n\\] <p>We handle this equation term by term:</p> <ul> <li>Left side: Since summation and differentiation can be interchanged, we get</li> </ul> \\[ \\frac{d}{dt} \\sum_{n=0}^{\\infty} p(n, t) s^n = \\frac{dG(s, t)}{dt} \\] <ul> <li>Right side second term:</li> </ul> \\[ \\sum_{n=0}^{\\infty} \\nu p(n, t) s^n = \\nu \\sum_{n=0}^{\\infty} p(n, t) s^n = \\nu G(s, t) \\] <ul> <li>Right side first term: This is the most crucial step. We make a variable substitution, let \\(m=n-1\\), then \\(n=m+1\\).</li> </ul> \\[ \\sum_{n=1}^{\\infty} \\nu p(n-1, t) s^n = \\nu \\sum_{m=0}^{\\infty} p(m, t) s^{m+1} = \\nu s \\sum_{m=0}^{\\infty} p(m, t) s^m = \\nu s G(s, t) \\] <p>(Note that the summation starts from \\(n=1\\) because \\(p(-1,t)=0\\))</p> <p>Combining these three terms, we successfully transform the infinite-dimensional system of ordinary differential equations into a single-variable partial differential equation:</p> \\[ \\frac{dG(s, t)}{dt} = \\nu s G(s, t) - \\nu G(s, t) = \\nu(s-1) G(s, t) \\]"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#32-solution-and-result-recovery","title":"3.2 Solution and Result Recovery","text":"<p>This equation for \\(G(s,t)\\) is a simple first-order linear ordinary differential equation (for fixed \\(s\\)), which we can solve directly by integration. First, we need an initial condition. Usually, we assume the system starts from \\(n=0\\) at \\(t=0\\), i.e., \\(p(n, 0) = \\delta_{n,0}\\) (1 when \\(n=0\\), 0 otherwise). This initial condition corresponds in generating function space to:</p> \\[ G(s, 0) = \\sum_{n=0}^{\\infty} p(n, 0) s^n = p(0, 0) s^0 = 1 \\] <p>Now solving the differential equation \\(\\frac{dG}{G} = \\nu(s-1) dt\\) by integrating from \\(t=0\\) to \\(t\\), we get:</p> \\[\\ln(G(s, t)) - \\ln(G(s, 0)) = \\nu(s-1)t\\] \\[\\ln(G(s, t)) = \\nu(s-1)t\\] \\[G(s, t) = e^{\\nu t(s-1)}\\] <p>We have obtained the analytical expression for the generating function. The final step is how to \"decode\" the desired \\(p(n,t)\\) from \\(G(s,t)\\). According to the definition of Taylor expansion, \\(p(n,t)\\) is exactly the coefficient of the \\(s^n\\) term in the Taylor expansion of \\(G(s,t)\\) at \\(s=0\\) divided by \\(n!\\). A more intuitive method is to directly expand \\(G(s,t)\\):</p> \\[G(s, t) = e^{\\nu t s} e^{-\\nu t} = e^{-\\nu t} \\sum_{n=0}^{\\infty} \\frac{(\\nu t s)^n}{n!} = \\sum_{n=0}^{\\infty} \\left[ e^{-\\nu t} \\frac{(\\nu t)^n}{n!} \\right] s^n\\] <p>By comparing this expansion term by term with the generating function definition \\(G(s, t) = \\sum_{n=0}^{\\infty} p(n, t) s^n\\), we immediately obtain the solution to the master equation:</p> \\[p(n, t) = e^{-\\nu t} \\frac{(\\nu t)^n}{n!}\\] <p>This is the familiar Poisson distribution with mean \\(\\lambda = \\nu t\\).</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#33-the-power-of-generating-functions-computing-moments","title":"3.3 The Power of Generating Functions: Computing Moments","text":"<p>Generating functions can not only be used to solve probability distributions but also serve as a powerful \"moment generating machine.\" We can conveniently compute various moments of the distribution by taking derivatives of \\(G(s,t)\\).</p> <ul> <li>Mean \\(\\langle n(t) \\rangle\\):</li> </ul> \\[ \\langle n(t) \\rangle = \\sum_{n=0}^{\\infty} n \\cdot p(n, t) \\] <p>Noting that \\(\\frac{\\partial G}{\\partial s} = \\sum n \\cdot p(n,t) s^{n-1}\\). Therefore,</p> \\[ \\langle n(t) \\rangle = \\left. \\frac{\\partial G(s, t)}{\\partial s} \\right|_{s=1} = \\left. \\nu t e^{\\nu t(s-1)} \\right|_{s=1} = \\nu t \\] <ul> <li>Variance \\(\\text{Var}[n(t)]\\):</li> </ul> <p>Computing variance requires the second moment. We can first calculate \\(\\langle n(n-1) \\rangle = \\left. \\frac{\\partial^2 G(s, t)}{\\partial s^2} \\right|_{s=1} = (\\nu t)^2\\)</p> <p>Then using the formula \\(\\text{Var}(n) = \\langle n^2 \\rangle - \\langle n \\rangle^2 = \\langle n(n-1) \\rangle + \\langle n \\rangle - \\langle n \\rangle^2\\):</p> \\[ \\text{Var}[n(t)] = (\\nu t)^2 + \\nu t - (\\nu t)^2 = \\nu t \\] <p>These two results \\(\\langle n(t) \\rangle = \\nu t\\) and \\(\\text{Var}[n(t)] = \\nu t\\) are the hallmark characteristics of the Poisson distribution, which we have now obtained again through the systematic method of generating functions.</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#4-application-introduction-to-population-dynamics","title":"4. Application: Introduction to Population Dynamics","text":"<p>So far, all the content we have discussed has revolved around the Poisson process with constant rates. However, the power of the master equation framework lies in its universality. By changing the functional form of transition rates, we can use it to describe a wide variety of more complex stochastic processes. In the final part of the lecture, the professor demonstrates this through an example of Population Dynamics.</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#41-simple-death-process","title":"4.1 Simple Death Process","text":"<p>Consider the simplest model: the Simple Death Process. This process can be represented by a chemical reaction-like equation:</p> \\[A \\xrightarrow{\\lambda} \\varnothing\\] <p>This indicates that individuals of species \\(A\\) die or disappear from the system at a certain rate. The key here is the physical meaning of \\(\\lambda\\): it is the per capita death rate.</p> <p>This means that if there are currently \\(n\\) individuals in the system, the total death rate of the entire population is \\(n \\cdot \\lambda\\). This is a crucial distinction: the transition rate is no longer a constant but depends on the current state \\(n\\) of the system. This state-dependent rate is a very common and important concept in stochastic modeling.</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#42-master-equation-for-death-process","title":"4.2 Master Equation for Death Process","text":"<p>We can again apply the \"gain-loss\" logic to construct the master equation for this process. We are concerned with the probability \\(p(n,t)\\) that the population size is \\(n\\) at time \\(t\\).</p> <ul> <li> <p>Gain term (GAIN): For the system to reach state \\(n\\) at time \\(t\\), it must have come from state \\(n+1\\) through one death event. When the population size is \\(n+1\\), the total death rate is \\((n+1)\\lambda\\). Therefore, the probability flux flowing from state \\(n+1\\) into state \\(n\\) is \\(\\lambda (n+1) p(n+1, t)\\).</p> </li> <li> <p>Loss term (LOSS): If the system is currently in state \\(n\\), it will leave this state due to a death event. The total death rate at this time is \\(n\\lambda\\). Therefore, the probability flux flowing out of state \\(n\\) is \\(\\lambda n p(n, t)\\).</p> </li> </ul> <p>Combining the gain and loss terms, we obtain the master equation for the simple death process:</p> \\[\\frac{d}{dt} p(n, t) = \\lambda (n+1) p(n+1, t) - \\lambda n p(n, t)\\] <p>The structure of this equation is similar to the master equation for the Poisson process, but the transition rate has changed from the constant \\(\\nu\\) to the state-dependent \\(n\\lambda\\). This simple change causes a qualitative change in the dynamic behavior of the model.</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#43-stochastic-model-vs-deterministic-model","title":"4.3 Stochastic Model vs. Deterministic Model","text":"<p>It is worth noting that the deterministic model corresponding to this stochastic model is the differential equation \\(\\frac{dN}{dt} = -\\lambda N\\), whose solution is exponential decay \\(N(t) = N_0 e^{-\\lambda t}\\).</p> <p>The stochastic model described by the master equation provides much richer information than the deterministic model:</p> <ul> <li> <p>It can not only give the evolution of the average population size (it can be proven that \\(\\langle n(t) \\rangle = n_0 e^{-\\lambda t}\\), consistent with the deterministic model) but also describe the fluctuations around the average.</p> </li> <li> <p>More importantly, it can calculate the extinction probability, i.e., \\(p(0,t)\\). This is a purely stochastic phenomenon. In the deterministic model, the population size only asymptotically approaches zero but never actually reaches zero. For small populations, this extinction caused by randomness is a crucial dynamic characteristic.</p> </li> </ul>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#44-python-code-implementation-gillespie-simulation-of-death-process","title":"4.4 Python Code Implementation: Gillespie Simulation of Death Process","text":"<p>We can modify the previous Gillespie algorithm to simulate this state-dependent death process. The only key change is that when calculating waiting times, the rate used is no longer a constant but a function of the current population size \\(n\\).</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef gillespie_death_process(lam, n0, t_max):\n    \"\"\"\n    Simulate a simple death process using the Gillespie algorithm.\n\n    Parameters:\n    lam (float): Per capita death rate.\n    n0 (int): Initial population size.\n    t_max (float): Total simulation time.\n\n    Returns:\n    tuple: Two lists containing event times and corresponding population sizes.\n    \"\"\"\n    # Initialization\n    t = 0.0\n    n = n0\n\n    times = [t]\n    counts = [n]\n\n    while t &lt; t_max and n &gt; 0:\n        # Key difference: Rate depends on state\n        rate = lam * n\n\n        # Draw waiting time\n        xi = np.random.random()\n        dt = -1.0 / rate * np.log(xi)\n\n        # Update time\n        t += dt\n\n        # Check if exceeding maximum time\n        if t &gt;= t_max:\n            # If exceeding maximum time, record final state and exit\n            times.append(t_max)\n            counts.append(n)\n            break\n\n        # Record state before event occurs\n        times.append(t)\n        counts.append(n)\n\n        # Update population size (one individual dies)\n        n -= 1\n\n        # Record state after event occurs\n        times.append(t)\n        counts.append(n)\n\n    # If extinction occurs before t_max, extend trajectory to t_max\n    if t &lt; t_max and n == 0:\n        times.append(t_max)\n        counts.append(0)\n\n    return times, counts\n\n# --- Simulation and plotting ---\n# Set parameters\nlam = 0.1     # Per capita death rate\nn0 = 50       # Initial population size\nt_max = 50    # Total simulation time\nnum_traj = 5  # Simulate 5 trajectories\n\n# Create figure\nplt.figure(figsize=(12, 7))\n\n# Plot multiple trajectories to show randomness\nfor i in range(num_traj):\n    times, counts = gillespie_death_process(lam, n0, t_max)\n    plt.step(times, counts, where='post', label=f'Trajectory {i+1}')\n\n# Plot deterministic model solution for comparison\nt_deterministic = np.linspace(0, t_max, 200)\nn_deterministic = n0 * np.exp(-lam * t_deterministic)\nplt.plot(t_deterministic, n_deterministic, 'k--', linewidth=2, label='Deterministic Model ($N_0 e^{-\\lambda t}$)')\n\nplt.xlabel('Time (t)')\nplt.ylabel('Population Size (n)')\nplt.title('Simple Death Process: Stochastic vs. Deterministic')\nplt.grid(True)\nplt.legend()\nplt.show()\n</code></pre> <p></p> <p>Running this code will show multiple colored step-like curves, each representing a simulated random history. You will find that although their overall trend is downward, the specific timing of decline and the final extinction time (when the curve touches the horizontal axis) are all random. The black dashed line represents the solution of the deterministic model, depicting the average behavior of all random trajectories. This comparison vividly demonstrates the rich dynamics that stochastic models can capture.</p>"},{"location":"notes/4.%20Gillespie%20Algorithm%2C%20Master%20Equation%2C%20Generating%20Functions%20and%20Population%20Dynamics/#summary","title":"Summary","text":"<p>This lecture led us to deeply understand stochastic processes from three complementary perspectives: the Gillespie algorithm, master equations, and generating functions. These three together constitute a powerful and complete theoretical and computational framework.</p> <p>1.Gillespie Algorithm: Provides a numerical simulation perspective. It is an event-driven exact algorithm that can generate specific single trajectories of stochastic processes, allowing us to intuitively see how randomness manifests.</p> <p>2.Master Equation: Provides a probability evolution perspective. It is a deterministic differential equation that describes how the probability of the system being in various possible states evolves over time, capturing the statistical laws of the entire stochastic process ensemble.</p> <p>3.Generating Function: Provides an analytical solution perspective. It is a powerful mathematical tool that can transform complex master equations (infinite-dimensional differential equation systems) into simple single equations, thereby obtaining analytical solutions for probability distributions and conveniently computing their various moments.</p> <p>These three methods each have their focus and together provide a solid foundation for analyzing various stochastic phenomena from particle motion in physics to population dynamics in biology.</p> <p>By introducing state-dependent rates, we have begun to glimpse how to apply this framework to more complex systems, such as chemical reaction networks and more realistic ecological models.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/","title":"Introduction: Applying Stochastic Toolkit to Life Dynamics","text":"<p>In the previous lectures, the professor has helped us establish a powerful theoretical framework for describing stochastic processes. This lecture applies these abstract tools to a specific and important field: population dynamics. The goal of this lecture is to use the knowledge we have learned to simulate the birth, death, and interactions of populations composed of discrete individuals.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#1-core-concepts-review","title":"1. Core Concepts Review","text":"<p>Before delving into new models, the professor briefly reviewed several key concepts from our toolkit:</p> <p>Master Equation: This is the core equation describing the time evolution of probability distributions in stochastic systems. Its essential idea is very intuitive: the rate of change of the probability \\(p(n,t)\\) that the system is in a specific state \\(n\\) equals the rate of transitions from other states to state \\(n\\) (the \"gain\" term) minus the rate of transitions from state \\(n\\) to other states (the \"loss\" term). Its general form is:</p> \\[\\frac{d}{dt}p(n,t) = \\text{\"gain\"} - \\text{\"loss\"}\\] <p>This equation provides us with a complete, probabilistic description of the system.</p> <p>Gillespie Algorithm: Although the master equation is precise, it is usually a set of coupled differential equations that are difficult to solve analytically. The Gillespie algorithm is an ingenious numerical method that is not an approximation to the master equation, but rather its exact stochastic realization. This algorithm can generate a series of stochastic trajectories whose statistical properties are completely consistent with those described by the master equation.</p> <p>Connection between Theory and Simulation: There exists a profound connection between theory (master equation) and simulation (Gillespie algorithm). If we run a large number of Gillespie simulations and collect the system states (e.g., population size \\(n\\)) of all trajectories at a specific time point \\(t\\), then plot a histogram of these states, this histogram will converge to the true probability distribution \\(p(n,t)\\) predicted by the master equation when the number of simulations is sufficiently large.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#why-do-we-need-stochastic-models","title":"Why Do We Need Stochastic Models?","text":"<p>You might ask, we already have deterministic models describing population growth (such as the logistic equation), so why do we need to introduce such a complex stochastic framework?</p> <p>The answer lies in the fundamental nature of physical reality. Populations are composed of discrete individuals, and individual behaviors\u2014birth, death, predation, mating\u2014are essentially probabilistic events. Deterministic models treat population size as a continuous variable, ignoring individuality and randomness, which is a reasonable approximation when population size is very large. However, when population size is small, random fluctuations (i.e., \"demographic noise\") may dominate system behavior. A random sequence of death events may cause a small population to unexpectedly go extinct, which deterministic models cannot predict.</p> <p>Therefore, stochastic models are not merely a more complex alternative to deterministic models; they are a more fundamental and realistic description of living systems. They enable us to understand and quantify phenomena driven by randomness itself, such as extinction risk, probability of disease outbreaks, and maintenance of biodiversity. In this lecture, the professor will start with the simplest \"linear death process\" and gradually build a complex ecosystem containing predators and prey, revealing how randomness fundamentally changes our understanding of system behavior.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#2-linear-death-process-foundation-of-stochastic-population-models","title":"2. Linear Death Process: Foundation of Stochastic Population Models","text":"<p>To establish an intuitive understanding of stochastic population dynamics, we start with the simplest non-trivial model: individuals in a population can only die, not be born. We will analyze this process from three different perspectives: the deterministic mean-field perspective, the stochastic master equation perspective, and the exact analytical solution.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#21-deterministic-perspective-mean-field-theory","title":"2.1 Deterministic Perspective (Mean-Field Theory)","text":"<p>First, we consider the simplest description. Suppose we have a species \\(A\\) whose individuals die at a constant rate \\(\\lambda\\). We can represent this process with a chemical reaction-like equation:</p> \\[A \\xrightarrow{\\lambda} \\varnothing\\] <p>Here, \\(\\lambda\\) represents the probability of death per individual per unit time, i.e., the per capita death rate.</p> <p>Under the mean-field approximation, we assume that the population size is very large and mixed very uniformly, so we can ignore the discreteness of individuals and random fluctuations, treating the population size \\(n(t)\\) as a continuous, deterministic variable.</p> <p>In this case, the rate of decrease of the entire population size equals the per capita death rate \\(\\lambda\\) multiplied by the current population size \\(n(t)\\). This gives us a simple first-order ordinary differential equation (ODE):</p> \\[\\frac{d}{dt}n(t) = -\\lambda n(t)\\] <p>This is a first-order linear differential equation we are very familiar with. Given the initial condition \\(n(t=0)=n_0\\), its solution is the classic exponential decay:</p> \\[n(t) = n_0 e^{-\\lambda t}\\] <p>This deterministic solution tells us the average behavioral trend of the population. It will serve as a benchmark for evaluating more complete stochastic models.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#22-deeper-exploration-stochastic-description-through-master-equation","title":"2.2 Deeper Exploration: Stochastic Description through Master Equation","text":"<p>Now, we abandon the mean-field approximation and treat the population size \\(N(t)\\) as a discrete random variable. Our goal is no longer to solve for a deterministic trajectory \\(n(t)\\), but to find the probability distribution that the population size is exactly \\(n\\) at any time \\(t\\), i.e., \\(p(n,t) = \\text{Prob}(N(t)=n)\\). For this, we need to construct the master equation for this process.</p> <p>We again apply the \"gain-loss\" principle to construct the equation:</p> \\[\\frac{d}{dt}p(n,t) = \\text{gain} - \\text{loss}\\] <ul> <li> <p>Loss Term: How does the system leave state \\(n\\)? The only way is for a death event to occur. When the population size is \\(n\\), each individual may die at rate \\(\\lambda\\). Since all individual death events are mutually independent (this is the core assumption of the \"linear\" process), the total rate of death events in the entire population is \\(n \\times \\lambda\\). Therefore, the system leaves state \\(n\\) at rate \\(\\lambda n\\). This term contributes negatively to \\(p(n,t)\\), i.e., \\(-\\lambda n p(n,t)\\).</p> </li> <li> <p>Gain Term: How does the system enter state \\(n\\)? The only way is for the system to originally be in state \\(n+1\\), then a death event occurs. When the population size is \\(n+1\\), the total rate of death events in the entire population is \\((n+1) \\times \\lambda\\). Therefore, the rate of transition from state \\(n+1\\) to state \\(n\\) is \\(\\lambda(n+1)p(n+1,t)\\). This term contributes positively.</p> </li> </ul> <p>Combining the gain and loss terms, we obtain the complete master equation for the linear death process:</p> \\[\\frac{d}{dt}p(n,t) = \\lambda(n+1)p(n+1,t) - \\lambda n p(n,t)\\] <p>This is an infinite-dimensional system of coupled ordinary differential equations (for \\(n=0,1,2,...,n_0\\)), and solving it directly is quite difficult. Fortunately, Professor Frey demonstrated a more elegant and physically intuitive method to obtain its exact solution.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#23-exact-solution-revealing-the-binomial-distribution-nature-of-survival","title":"2.3 Exact Solution: Revealing the Binomial Distribution Nature of Survival","text":"<p>Rather than directly solving the master equation, let us start with a simpler problem and then generalize step by step.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#231-survival-of-a-single-individual","title":"2.3.1 Survival of a Single Individual","text":"<p>First, consider the case where there is initially only one individual (\\(n_0=1\\)). What is the probability that this individual is still alive at time \\(t\\)? This is a classic exponential waiting problem. In any small time interval \\(dt\\), its probability of death is \\(\\lambda dt\\). Therefore, the probability \\(p(t)\\) that it is still alive at time \\(t\\) follows:</p> \\[\\frac{d}{dt}p(t) = -\\lambda p(t)\\] <p>Solving gives \\(p(t) = e^{-\\lambda t}\\). Correspondingly, its probability of having died by time \\(t\\) is \\(q(t) = 1 - p(t) = 1 - e^{-\\lambda t}\\).</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#232-generalization-to-n_0-individuals","title":"2.3.2 Generalization to \\(n_0\\) Individuals","text":"<p>Now, we return to the case where the initial population is \\(n_0\\). A core assumption of the linear death process is that each individual's death events are mutually independent. One individual's death does not affect another individual's death probability. This means that at time \\(t\\), the survival situation of the entire population can be viewed as conducting \\(n_0\\) independent \"Bernoulli trials\".</p> <p>Each trial corresponds to an initial individual, and the trial result has only two outcomes:</p> <ol> <li> <p>\"Success\": The individual is still alive at time \\(t\\), with probability \\(p(t) = e^{-\\lambda t}\\).</p> </li> <li> <p>\"Failure\": The individual has died by time \\(t\\), with probability \\(q(t) = 1 - e^{-\\lambda t}\\).</p> </li> </ol> <p>We are concerned with the probability that exactly \\(n\\) \"successes\" occur in \\(n_0\\) trials (i.e., \\(n\\) individuals survive). This is exactly the definition of the binomial distribution! Therefore, we can directly write its probability distribution:</p> \\[p(n,t) = \\binom{n_0}{n} [p(t)]^n [q(t)]^{n_0-n} = \\binom{n_0}{n} (e^{-\\lambda t})^n (1 - e^{-\\lambda t})^{n_0-n}\\] <p>This result is very profound. It reveals the direct connection between the mathematical form of the model and its physical assumptions:</p> <p>Linear rate (total rate \\(\\propto n\\)) \\(\\implies\\) Individual independence (no interactions) \\(\\implies\\) Bernoulli trials (each individual independently survives or dies) \\(\\implies\\) Binomial distribution solution.</p> <p>This logical chain is key to understanding the physical meaning of stochastic processes.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#24-distribution-moments-mean-and-variance","title":"2.4 Distribution Moments: Mean and Variance","text":"<p>Once we know that the probability distribution is a binomial distribution, we can use its known properties to calculate the mean and variance. For a binomial distribution with parameters \\((N,p)\\), its mean is \\(Np\\) and its variance is \\(Np(1-p)\\).</p> <p>In our model, \\(N\\) corresponds to the initial population \\(n_0\\), and \\(p\\) corresponds to the survival probability of a single individual \\(p(t) = e^{-\\lambda t}\\). Therefore, we can immediately obtain:</p> <p>Mean Population Size:</p> \\[\\langle n(t) \\rangle = n_0 p(t) = n_0 e^{-\\lambda t}\\] <p>Population Size Variance:</p> \\[\\sigma^2(t) = n_0 p(t) (1 - p(t)) = n_0 e^{-\\lambda t} (1 - e^{-\\lambda t})\\] <p>Here we discover a crucial conclusion: the mean value \\(\\langle n(t) \\rangle\\) of the stochastic process is exactly the same as the deterministic mean-field solution \\(n(t)\\) we derived earlier! This is a universally valid elegant result for all linear processes. It tells us that the deterministic equation indeed correctly captures the average behavior of the system.</p> <p>However, the variance \\(\\sigma^2(t)\\) is a completely new quantity brought purely by randomness. It quantifies the magnitude of \"demographic noise\"\u2014that is, the degree of fluctuation of actual population trajectories around the mean value due to the randomness of individual death events. This is information that the mean-field method cannot capture at all.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#25-computational-verification-simulating-the-linear-death-process","title":"2.5 Computational Verification: Simulating the Linear Death Process","text":"<p>We will use the Gillespie algorithm to simulate the linear death process and generate the first figure from the lecture PPT.</p> <p></p> <p>The logic of the Gillespie algorithm is as follows:</p> <p>1.Initialization: At time \\(t=0\\), set population size \\(N(0)=n_0\\).</p> <p>2.Calculate total rate: At any moment, when the population size is \\(N\\), the total rate of the next event (any death) occurring is \\(\\alpha = \\lambda N\\).</p> <p>3.Determine waiting time: The waiting time \\(\\tau\\) until the next event occurs follows an exponential distribution with rate \\(\\alpha\\). We can generate this time using the inverse transform sampling method: \\(\\tau = -\\frac{1}{\\alpha} \\ln(\\xi)\\), where \\(\\xi\\) is a uniformly distributed random number in the \\((0, 1]\\) interval.</p> <p>4.Execute event: Since there is only one type of event in the system (death), we directly update the population size: \\(N \\to N-1\\).</p> <p>5.Update time: Advance the current time: \\(t \\to t+\\tau\\).</p> <p>6.Repeat: Return to step 2, continue simulation until population size \\(N=0\\) or the preset total simulation duration is reached.</p> <p>Below is the Python code that implements this process and reproduces the two figures from the lecture.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.special import comb\n\n# --- Simulation parameters ---\nn0 = 20      # Initial population size\nlambda_rate = 1.0  # Per capita death rate\nt_max = 4.0    # Maximum simulation time\nnum_simulations = 10000 # Total number of simulated trajectories\n\n# --- Gillespie algorithm implementation for linear death process ---\ndef linear_death_gillespie(n_start, rate, t_end):\n    \"\"\"\n    Simulate linear death process using Gillespie algorithm\n    \"\"\"\n    t = 0.0\n    n = n_start\n\n    times = [t]\n    populations = [n]\n\n    while n &gt; 0 and t &lt; t_end:\n        # Total reaction rate\n        alpha = rate * n\n\n        # Generate waiting time tau\n        xi1 = np.random.uniform(0, 1)\n        tau = -np.log(xi1) / alpha\n\n        # Update time and population\n        t += tau\n        n -= 1 # Only death events\n\n        times.append(t)\n        populations.append(n)\n\n    return np.array(times), np.array(populations)\n\n# --- Run multiple simulations ---\nall_trajectories = []\nfor _ in range(num_simulations):\n    times, populations = linear_death_gillespie(n0, lambda_rate, t_max)\n    all_trajectories.append((times, populations))\n\n# --- Plotting ---\nplt.style.use('default')\nfig, axes = plt.subplots(1, 2, figsize=(12, 5))\n\n# --- Figure 1: Stochastic trajectories and deterministic solution ---\nax = axes[0]\n# Plot some example trajectories\nfor i in range(3):\n    times, populations = all_trajectories[i]\n    ax.step(times, populations, where='post')\n\n# Plot deterministic solution\nt_deterministic = np.linspace(0, t_max, 200)\nn_deterministic = n0 * np.exp(-lambda_rate * t_deterministic)\nax.plot(t_deterministic, n_deterministic, color='black', lw=2, label=r'$n(t) = n_0 e^{-\\lambda t}$')\n\nax.set_xlabel('t', fontsize=14)\nax.set_ylabel('population size', fontsize=14)\nax.set_title('stochastic trajectories', fontsize=16)\nax.set_ylim(0, n0 + 2)\nax.set_xlim(0, t_max - 0.5)\n\n# --- Figure 2: Histogram and theoretical solution at different times ---\nax = axes[1]\ntime_points = [0.1, 1.0, 4.0]\ncolors = ['darkgreen', 'saddlebrown', 'darkred']\nbar_width = 0.8\n\n# Helper function: get population size at a specific time from a trajectory\ndef get_population_at_time(trajectory, t_point):\n    times, populations = trajectory\n    # Find the index of the last time point &lt;= t_point\n    idx = np.searchsorted(times, t_point, side='right') - 1\n    return populations[idx]\n\nfor t, color in zip(time_points, colors):\n    # Collect population sizes at this time point from all simulations\n    populations_at_t = [get_population_at_time(traj, t) for traj in all_trajectories]\n\n    # Calculate histogram\n    n_values, counts = np.unique(populations_at_t, return_counts=True)\n    probabilities = counts / num_simulations\n\n    # Plot histogram\n    ax.bar(n_values, probabilities, width=bar_width, color=color, alpha=0.7, ec='black', label=f't = {t}')\n\n    # Plot theoretical binomial distribution\n    p_survival = np.exp(-lambda_rate * t)\n    n_range = np.arange(0, n0 + 1)\n    p_n_t = comb(n0, n_range) * (p_survival**n_range) * ((1 - p_survival)**(n0 - n_range))\n    # For visualization, only plot points with significant probabilities\n    # ax.plot(n_range, p_n_t, 'o', color=color, markersize=4)\n\nax.set_xlabel('n', fontsize=14)\nax.set_ylabel('p(n, t)', fontsize=14)\nax.set_title('histogram', fontsize=16)\nax.set_xlim(-1, n0 + 1)\nax.set_ylim(0, 0.7)\n\n# Add theoretical formula text\nax.text(10, 0.5, r'$p(n,t) = \\binom{n_0}{n} p^n q^{n_0-n}$', fontsize=14, color='saddlebrown')\nax.text(1.5, 0.65, 't = 4', fontsize=12, color='darkred')\nax.text(7, 0.2, 't = 1', fontsize=12, color='saddlebrown')\nax.text(17, 0.35, 't = 0.1', fontsize=12, color='darkgreen')\n\nfig.suptitle('Linear Death Process', fontsize=20, color='darkgreen', y=1.02)\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p> <p>Right figure (histogram): This figure shows the probability distribution of population size at three different time points (\\(t=0.1, 1, 4\\)). The bar chart is the empirical distribution we obtained by running tens of thousands of Gillespie simulations. We can see that as time progresses, the peak of the distribution moves left (average population size decreases), and the distribution becomes wider (relative uncertainty increases). Eventually, at very long times, most simulations end with population extinction (\\(n=0\\)). This is completely consistent with the dynamic behavior of the binomial distribution we derived.</p> <p>Left figure (stochastic trajectories): This figure shows three independent simulation trajectories (colored step lines). Each trajectory represents a possible history. The black smooth curve is the deterministic solution \\(n(t)=n_0e^{-\\lambda t}\\) we derived, which is the mean value of the stochastic process. This figure intuitively demonstrates the core characteristics of stochastic processes: individual realizations (trajectories) are random and discrete, but the average behavior of many realizations converges to the deterministic mean-field solution.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#3-lotka-volterra-process-simulating-predator-prey-interactions","title":"3. Lotka-Volterra Process: Simulating Predator-Prey Interactions","text":"<p>After mastering the simplest single-species model, we now challenge a more complex and interesting system: an ecosystem containing two interacting species\u2014predators and prey. This is the famous Lotka-Volterra model. We will see that nonlinear interactions between species produce dynamic behaviors that are far richer and more surprising than linear processes.</p> <p>The Lotka-Volterra equations are a set of coupled nonlinear differential equations describing the dynamics of predator-prey ecosystems. This model originated from the needs of ecological research in the early 20th century, independently proposed by Alfred Lotka and Vito Volterra to explain the periodic fluctuations of predator and prey population sizes in nature.</p> <p>The establishment of this system of equations is based on the following biological assumptions:</p> <ol> <li>Predator population decreases due to natural death at rate \\(-\\lambda a\\)</li> <li>Predators reproduce by preying on prey at rate \\(+\\gamma_p ab\\)</li> <li>Prey population grows due to self-reproduction at rate \\(+\\mu b\\)</li> <li>Prey decreases due to predation at rate \\(-\\gamma_p ab\\)</li> <li>Prey die due to resource competition among themselves at rate \\(-\\gamma_c b^2\\)</li> </ol> <p>These assumptions ultimately form the following coupled system of equations: $$ \\frac{d}{dt}a(t) = (-\\lambda + \\gamma_p b) \\cdot a $$</p> <p>$$ \\frac{d}{dt}b(t) = (\\mu - \\gamma_p a - \\gamma_c b) \\cdot b $$ where \\(a(t)\\) and \\(b(t)\\) represent the population densities of predators and prey, respectively.</p> <p>In practical applications, the Lotka-Volterra equations are widely used for:</p> <ol> <li>Ecosystem modeling: Analyzing predator-prey relationships, such as wolf-deer, cat-mouse ecosystem behaviors</li> <li>Fishery resource management: Guiding the formulation of sustainable fishing strategies</li> <li>Biological pest control: Designing schemes to control agricultural pests using natural enemies</li> <li>Epidemiological research: Simulating virus-host interactions in disease transmission</li> <li>Economic modeling: Describing dynamic relationships between different enterprises in business competition</li> </ol> <p>Although this model simplifies the complexity of real ecosystems, the nonlinear interaction principles it reveals are of great significance for understanding complex system behavior. Especially when randomness is introduced, this model can better reflect the fluctuation characteristics of population sizes in real ecosystems, providing theoretical foundations for ecological risk assessment and biodiversity conservation.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#31-building-the-ecosystem-basic-stochastic-processes","title":"3.1 Building the Ecosystem: Basic Stochastic Processes","text":"<p>We define two species in the system:</p> <ul> <li>A: Predator</li> <li>B: Prey</li> </ul> <p>The dynamics of this ecosystem are determined by four basic (or elementary) stochastic processes:</p> <ol> <li> <p>Predator Death: Predators die due to natural causes. This is a linear death process, similar to what we analyzed before.    \\(\\(\\varnothing \\xleftarrow{\\lambda} A\\)\\)</p> </li> <li> <p>Prey Birth: Prey reproduce themselves. Assuming sufficient resources, this is also a linear birth process.    \\(\\(B \\xrightarrow{\\mu} B + B\\)\\)</p> </li> <li> <p>Predation: This is the core interaction of the model. When a predator A encounters a prey B, it eats the prey and reproduces a new predator in the process.</p> </li> </ol> <p>$$    A + B \\xrightarrow{\\gamma_p} A + A    $$</p> <ol> <li>Prey Competition: When prey numbers are too high, they compete for limited resources (such as food, space), causing one individual to die.    $$    B + B \\xrightarrow{\\gamma_c} B    $$</li> </ol>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#32-quantifying-changes-reaction-propensities","title":"3.2 Quantifying Changes: Reaction Propensities","text":"<p>To simulate this system using the Gillespie algorithm or derive its mean-field equations, we need to convert the above symbolic reactions into mathematical rate expressions, i.e., propensity functions \\(\\alpha_\\mu\\). The propensity \\(\\alpha_\\mu\\) represents the probability of reaction \\(\\mu\\) occurring per unit time.</p> <p>Suppose the current state of the system is \\((N_A, N_B)\\), where \\(N_A\\) is the number of predators and \\(N_B\\) is the number of prey.</p> <p>\\(\\alpha_1 = \\lambda N_A\\): Total rate of predator death. Like the linear death process, it is proportional to the number of predators \\(N_A\\).</p> <p>\\(\\alpha_2 = \\mu N_B\\): Total rate of prey birth, proportional to prey number \\(N_B\\).</p> <p>\\(\\alpha_3 = \\gamma_p N_A N_B\\): Total rate of predation events. This quadratic term is the key to the model. It originates from the assumption of the \"law of mass action\": in a well-mixed system, the frequency of encounters between two different types of individuals is proportional to the product of their respective numbers.</p> <p>\\(\\alpha_4 = \\gamma_c N_B(N_B - 1)\\): Total rate of prey competition. Competition requires two prey individuals to participate. Among \\(N_B\\) prey, the number of different individual pairs that can be formed is \\(\\binom{N_B}{2} = \\frac{1}{2}N_B(N_B - 1)\\). Therefore, the total rate is proportional to this. In Professor Frey's lecture notes, the rate constant is defined as \\(\\gamma_c\\), absorbing the factor \\(1/2\\), so the propensity is written as \\(\\gamma_c N_B(N_B - 1)\\). When \\(N_B\\) is large, this approximates \\(\\gamma_c N_B^2\\).</p> <p>To clearly organize this information, we can create a table that will serve as a blueprint for our understanding and programming:</p> Process Name Chemical Reaction Rate Constant Propensity Function \\(\\alpha_\\mu(N_A, N_B)\\) State Change \\((\\Delta N_A, \\Delta N_B)\\) Predator Death \\(A \\xrightarrow{\\lambda} \\emptyset\\) \\(\\lambda\\) \\(\\lambda N_A\\) \\((-1, 0)\\) Prey Birth \\(B \\xrightarrow{\\mu} B + B\\) \\(\\mu\\) \\(\\mu N_B\\) \\((0, +1)\\) Predation \\(A + B \\xrightarrow{\\gamma_p} A + A\\) \\(\\gamma_p\\) \\(\\gamma_p N_A N_B\\) \\((+1, -1)\\) Prey Competition \\(B + B \\xrightarrow{\\gamma_c} B\\) \\(\\gamma_c\\) \\(\\gamma_c N_B (N_B - 1)\\) \\((0, -1)\\) <p>This table completely defines our stochastic model. Each row tells us the \"occurrence rate\" (propensity) of an event and \"what happens after occurrence\" (state change).</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#33-mean-field-approximation-coupled-rate-equations","title":"3.3 Mean-Field Approximation: Coupled Rate Equations","text":"<p>Similar to the linear death process, we can derive deterministic equations describing the average behavior of the system by ignoring random fluctuations. We use continuous variables \\(a(t)\\) and \\(b(t)\\) to represent the population densities of predators and prey, respectively.</p> <p>Change in predator density \\(a(t)\\):</p> <ul> <li> <p>Decreases due to natural death at rate \\(-\\lambda a\\).</p> </li> <li> <p>Increases due to preying on prey at rate \\(+\\gamma_p ab\\).</p> </li> <li> <p>Combined: \\(\\frac{d}{dt}a(t) = (-\\lambda + \\gamma_p b) \\cdot a\\)</p> </li> </ul> <p>Change in prey density \\(b(t)\\):</p> <ul> <li> <p>Increases due to self-reproduction at rate \\(+\\mu b\\).</p> </li> <li> <p>Decreases due to predation at rate \\(-\\gamma_p ab\\).</p> </li> <li> <p>Decreases due to internal competition at rate \\(-\\gamma_c b^2\\) (here we use \\(b^2\\) as a continuous approximation of \\(b(b-1)\\)).</p> </li> <li> <p>Combined: \\(\\frac{d}{dt}b(t) = (\\mu - \\gamma_p a - \\gamma_c b) \\cdot b\\)</p> </li> </ul> <p>These two coupled nonlinear ordinary differential equations are the deterministic Lotka-Volterra equations.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#34-dynamics-in-phase-space-fixed-points-and-phase-portraits","title":"3.4 Dynamics in Phase Space: Fixed Points and Phase Portraits","text":"<p>The long-term behavior of the deterministic equations can be understood by analyzing their flow field in the \\((a,b)\\) phase space. We are concerned with fixed points, i.e., points where population densities no longer change (\\(\\partial_t a=0\\) and \\(\\partial_t b=0\\)).</p> <p></p> <p>Special case (\\(\\gamma_c=0\\)): This is the most classic Lotka-Volterra model, without prey competition.</p> <p>There are two fixed points: one is the extinction point \\((0,0)\\), and the other is the coexistence fixed point \\((a^*,b^*)=(\\mu/\\gamma_p,\\lambda/\\gamma_p)\\).</p> <p>Analysis shows that this coexistence fixed point is a neutrally stable center. The system's trajectories are a series of closed orbits (periodic oscillations) around this center. The specific orbit the system is on is determined by the initial conditions.</p> <p>This system is conservative, with a conserved quantity \\(E = \\mu \\ln a + \\lambda \\ln b - \\gamma_p(a+b)\\). Each orbit corresponds to a constant \\(E\\) value.</p> <p>General case (\\(\\gamma_c&gt;0\\)): After introducing prey competition, the situation changes qualitatively.</p> <p>The position of the coexistence fixed point becomes \\((a^*,b^*)\\), where \\(b^* = (\\mu-\\gamma_p a^*)/\\gamma_c\\).</p> <p>The competition term \\(\\gamma_c b^2\\) acts as \"damping\". The fixed point is no longer a neutral center, but a stable spiral point. Regardless of the initial conditions (as long as the population doesn't go extinct), the system's trajectories will oscillate and spiral toward this unique coexistence fixed point.</p> <p>We can visualize these dynamic behaviors by plotting phase portraits.</p> <pre><code># --- Import necessary libraries ---\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import odeint\n\n# --- Define Lotka-Volterra ODE system ---\ndef lotka_volterra_ode(y, t, lambda_rate, mu_rate, gamma_p, gamma_c):\n    a, b = y\n    da_dt = mu_rate * a - gamma_p * a * b\n    db_dt = -lambda_rate * b + gamma_p * a * b - gamma_c * b\n    return [da_dt, db_dt]\n\n# --- Set parameters ---\nlambda_rate = 1.0\nmu_rate = 1.0\ngamma_p = 1.0\ngamma_c = 0.0\n\n# --- Plot phase diagrams ---\nfig, axes = plt.subplots(1, 2, figsize=(12, 6))\n\n# --- Case 1: gamma_c = 0 (neutral center) ---\ngamma_c = 0.0\nax = axes[0]\na_max, b_max = 2.0, 2.0\na_grid, b_grid = np.meshgrid(np.linspace(0, a_max, 20), np.linspace(0, b_max, 20))\n\nu, v = np.zeros_like(a_grid), np.zeros_like(b_grid)\nNI, NJ = a_grid.shape\nfor i in range(NI):\n    for j in range(NJ):\n        y = [a_grid[i, j], b_grid[i, j]]\n        dydt = lotka_volterra_ode(y, 0, lambda_rate, mu_rate, gamma_p, gamma_c)\n        u[i, j], v[i, j] = dydt[0], dydt[1]\n\n# Plot flow field\nax.streamplot(a_grid, b_grid, u, v, density=1.2, color='darkslategrey')\n\n# Plot fixed point\na_star = mu_rate / gamma_p\nb_star = lambda_rate / gamma_p\nax.plot(a_star, b_star, 'o', markersize=8, markerfacecolor='white', markeredgecolor='black', markeredgewidth=1.5)\n\n# Plot sample trajectories\ninitial_conditions = [[a_star*1.5, b_star*1.5], [a_star*0.5, b_star*0.5]]\nt_span = np.linspace(0, 50, 500)\ncolors = ['red', 'orange']\nfor i, y0 in enumerate(initial_conditions):\n    sol = odeint(lotka_volterra_ode, y0, t_span, args=(lambda_rate, mu_rate, gamma_p, gamma_c))\n    ax.plot(sol[:, 0], sol[:, 1], color=colors[i], lw=2, alpha=0.8)\n\nax.set_xlabel('a', fontsize=14)\nax.set_ylabel('b', fontsize=14)\nax.set_xlim(0, a_max)\nax.set_ylim(0, b_max)\n\n# --- Case 2: gamma_c &gt; 0 (stable spiral point) ---\ngamma_c = 0.001\nax = axes[1]\na_max, b_max = 2.0, 2.0\na_grid, b_grid = np.meshgrid(np.linspace(0, a_max, 20), np.linspace(0, b_max, 20))\n\nu, v = np.zeros_like(a_grid), np.zeros_like(b_grid)\nNI, NJ = a_grid.shape\nfor i in range(NI):\n    for j in range(NJ):\n        y = [a_grid[i, j], b_grid[i, j]]\n        dydt = lotka_volterra_ode(y, 0, lambda_rate, mu_rate, gamma_p, gamma_c)\n        u[i, j], v[i, j] = dydt[0], dydt[1]\n\nax.streamplot(a_grid, b_grid, u, v, density=1.2, color='darkslategrey')\n\n# Plot fixed point\nb_star_damped = lambda_rate / gamma_p\na_star_damped = (mu_rate - gamma_c * b_star_damped) / gamma_p\nax.plot(a_star_damped, b_star_damped, 'o', markersize=8, markerfacecolor='red', markeredgecolor='black', markeredgewidth=1.5)\n\n# Plot sample trajectories\ninitial_conditions = [[a_star_damped*1.5, b_star_damped*1.5], [a_star_damped*0.5, b_star_damped*0.5]]\nt_span = np.linspace(0, 50, 500)\ncolors = ['red', 'orange']\nfor i, y0 in enumerate(initial_conditions):\n    sol = odeint(lotka_volterra_ode, y0, t_span, args=(lambda_rate, mu_rate, gamma_p, gamma_c))\n    ax.plot(sol[:, 0], sol[:, 1], color=colors[i], lw=2, alpha=0.8)\n\nax.set_xlabel('a', fontsize=14)\nax.set_ylabel('b', fontsize=14)\nax.set_xlim(0, a_max)\nax.set_ylim(0, b_max)\n\nfig.suptitle('Phase Portraits', fontsize=20, color='darkgreen', y=1.0)\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p> <p>Left figure (\\(\\gamma_c=0\\)): This figure clearly shows a neutrally stable center. The streamlines form closed loops around the central fixed point (white circle). The two trajectories we plotted (orange and red-orange) also run along these closed orbits, never approaching or moving away from the center. This represents the continuous periodic oscillations of predator and prey numbers.</p> <p>Right figure (\\(\\gamma_c&gt;0\\)): This figure shows a stable spiral point. The streamlines now all point toward the central fixed point inside (red circle). A trajectory we plotted (red) also shows the population numbers oscillating and decaying, eventually tending toward a stable coexistence state.</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#4-complete-stochastic-simulation-gillespie-algorithm","title":"4. Complete Stochastic Simulation: Gillespie Algorithm","text":"<p>The deterministic model provides us with a blueprint for the average behavior of the system, but the real story lies hidden in randomness. Now, we will use the Gillespie algorithm to simulate the complete stochastic Lotka-Volterra process.</p> <p></p> <p></p> <p>The Gillespie algorithm steps for multiple reaction channels are as follows:</p> <p>1.Initialization: At \\(t=0\\), set state \\((N_A,N_B)\\).</p> <p>2.Calculate all propensities: Based on the current state \\((N_A,N_B)\\), calculate all four reaction propensities \\(\\alpha_1,\\alpha_2,\\alpha_3,\\alpha_4\\).</p> <p>3.Calculate total rate: Add all propensities to get the total rate \\(\\alpha_{\\text{tot}} = \\sum_{\\mu=1}^{4} \\alpha_\\mu\\).</p> <p>4.Determine waiting time: Generate the waiting time \\(\\tau = -\\frac{1}{\\alpha_{\\text{tot}}} \\ln(\\xi_1)\\) until the next event, where \\(\\xi_1\\) is a uniform random number on \\((0, 1]\\).</p> <p>5.Select the event to occur: This is the key step. We need to decide which specific event occurs based on each reaction's relative probability \\(\\alpha_\\mu/\\alpha_{\\text{tot}}\\). This can be achieved using the \"roulette wheel\" selection method: generate a second uniform random number \\(\\xi_2 \\in [0,1]\\), then select the reaction \\(\\mu\\) that satisfies \\(\\sum_{\\nu=1}^{\\mu-1} \\alpha_\\nu &lt; \\xi_2 \\alpha_{\\text{tot}} \\leq \\sum_{\\nu=1}^{\\mu} \\alpha_\\nu\\).</p> <p>6.Execute event: According to the selected reaction type, update the system state according to the state change table.</p> <p>7.Update time: Advance the current time: \\(t \\to t+\\tau\\).</p> <p>8.Repeat: Return to step 2, continue simulation until the preset total simulation duration is reached.</p> <p>Below is the Python code that implements this algorithm:</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import odeint\n\n# --- Parameter Setup ---\nlambda_rate = 1.0  # Predator death rate\nmu_rate = 1.0      # Prey birth rate\ngamma_p = 0.01     # Predation rate\n\n# --- Deterministic ODE Definition ---\ndef lotka_volterra_ode(y, t, lambda_r, mu_r, gamma_p_r, gamma_c_r):\n    \"\"\"\n    Defines the system of ordinary differential equations for the Lotka-Volterra model.\n    \"\"\"\n    a, b = y\n    dadt = (-lambda_r + gamma_p_r * b) * a\n    dbdt = (mu_r - gamma_p_r * a - gamma_c_r * b) * b\n    return [dadt, dbdt]\n\n# --- Gillespie Algorithm for Lotka-Volterra Process ---\ndef lotka_volterra_gillespie(n_a, n_b, rates, t_end):\n    \"\"\"\n    Simulates the Lotka-Volterra process using the Gillespie algorithm.\n\n    Args:\n        n_a (int): Initial number of predators.\n        n_b (int): Initial number of prey.\n        rates (tuple): A tuple of rate constants (lambda_r, mu_r, gamma_p_r, gamma_c_r).\n        t_end (float): The end time for the simulation.\n\n    Returns:\n        A tuple containing arrays for times, predator populations, and prey populations.\n    \"\"\"\n    lambda_r, mu_r, gamma_p_r, gamma_c_r = rates\n\n    t = 0.0\n    # Ensure populations are floats to avoid potential integer division issues\n    n_a = float(n_a)\n    n_b = float(n_b)\n\n    times = [t]\n    populations_a = [n_a]\n    populations_b = [n_b]\n\n    # Stoichiometry matrix: rows are reactions, columns are species (A, B)\n    nu = np.array([\n        [-1,  0],  # Reaction 1: A -&gt; 0 (Predator death)\n        [ 0, +1],  # Reaction 2: B -&gt; 2B (Prey birth)\n        [+1, -1],  # Reaction 3: A+B -&gt; 2A (Predation)\n        [ 0, -1]   # Reaction 4: 2B -&gt; B (Prey competition)\n    ])\n\n    while t &lt; t_end:\n        if n_a == 0 or n_b == 0:\n            break  # Stop if one species goes extinct\n\n        # Calculate propensities for each reaction\n        propensities = np.array([\n            lambda_r * n_a,\n            mu_r * n_b,\n            gamma_p_r * n_a * n_b,\n            gamma_c_r * n_b * (n_b - 1)\n        ])\n\n        a_total = np.sum(propensities)\n\n        if a_total == 0:\n            break # No more reactions can occur\n\n        # Generate waiting time (tau) until the next reaction\n        xi1 = np.random.uniform(0, 1)\n        tau = -np.log(xi1) / a_total\n\n        # Choose which reaction occurs\n        xi2 = np.random.uniform(0, 1)\n        p_normalized = propensities / a_total\n        reaction_idx = np.random.choice(len(propensities), p=p_normalized)\n\n        # Update time and populations\n        t += tau\n        n_a += nu[reaction_idx, 0]\n        n_b += nu[reaction_idx, 1]\n\n        times.append(t)\n        populations_a.append(n_a)\n        populations_b.append(n_b)\n\n    return np.array(times), np.array(populations_a), np.array(populations_b)\n\n# --- Initial Conditions ---\n# The deterministic fixed point is (100, 100) for gamma_c=0.\n# We start away from the fixed point to observe oscillations.\nn_a0 = 50\nn_b0 = 100\n\n# --- Plot 1: Stochastic Oscillations Time Series (Reproducing PPT_1.jpg) ---\nplt.style.use('seaborn-v0_8-whitegrid')\nfig1, ax1 = plt.subplots(figsize=(10, 6))\n\ngamma_c_1 = 0.0\nrates_1 = (lambda_rate, mu_rate, gamma_p, gamma_c_1)\n# For a better single trajectory view, let's start this one away from the fixed point too\nt_sim_1, n_a_sim_1, n_b_sim_1 = lotka_volterra_gillespie(50, 100, rates_1, 100)\n\nax1.plot(t_sim_1, n_a_sim_1, label='Predator', lw=1.5, color='royalblue')\nax1.plot(t_sim_1, n_b_sim_1, label='Prey', lw=1.5, color='darkorange')\nax1.set_xlabel('Time', fontsize=14)\nax1.set_ylabel('Population', fontsize=14)\nax1.set_title(f'Stochastic Simulation of Predator-Prey Dynamics\\n'\n              f'$\\lambda={lambda_rate}, \\mu={mu_rate}, \\gamma_p={gamma_p}, \\gamma_c={gamma_c_1}$', \n              fontsize=16)\nax1.legend(fontsize=12)\nax1.tick_params(axis='both', which='major', labelsize=12)\nax1.set_xlim(0, 100)\nax1.set_ylim(0, max(np.max(n_a_sim_1), np.max(n_b_sim_1)) * 1.1 if len(n_a_sim_1) &gt; 0 else 100)\nplt.tight_layout()\nplt.show()\n\n# --- Plot 2: Stochastic vs. Deterministic (Reproducing PPT2.jpg) ---\nfig2, axes = plt.subplots(1, 2, figsize=(16, 6))\n\n# --- Left Subplot: gamma_c = 0 ---\nax2_left = axes[0]\ngamma_c_left = 0.0\nrates_left = (lambda_rate, mu_rate, gamma_p, gamma_c_left)\nnum_simulations = 50  # Number of stochastic trajectories to plot\n\n# Run and plot multiple stochastic simulations\nfor i in range(num_simulations):\n    t_sim, n_a_sim, n_b_sim = lotka_volterra_gillespie(n_a0, n_b0, rates_left, 70)\n    # Use a low alpha to create a \"cloud\" effect\n    ax2_left.plot(t_sim, n_a_sim, color='gray', lw=0.5, alpha=0.4, \n                  label='Stochastic Simulation' if i == 0 else \"\")\n    ax2_left.plot(t_sim, n_b_sim, color='gray', lw=0.5, alpha=0.4)\n\n\n# Deterministic solution\nt_ode = np.linspace(0, 70, 1000)\ny0 = [n_a0, n_b0]\nsol_left = odeint(lotka_volterra_ode, y0, t_ode, args=rates_left)\n# Plot deterministic solution with a thick black line for contrast\nax2_left.plot(t_ode, sol_left[:, 0], color='black', lw=2.0, label='Deterministic Solution')\nax2_left.plot(t_ode, sol_left[:, 1], color='black', lw=2.0)\n\n\nax2_left.set_xlabel('Time', fontsize=12)\nax2_left.set_ylabel('Population', fontsize=12)\nax2_left.set_title(f'$\\gamma_p = {gamma_p}, \\gamma_c = {gamma_c_left}$', fontsize=14)\nax2_left.legend()\nax2_left.set_xlim(0, 70)\nax2_left.set_ylim(0, 850)\n\n\n# --- Right Subplot: gamma_c &gt; 0 ---\nax2_right = axes[1]\ngamma_c_right = 0.001\nrates_right = (lambda_rate, mu_rate, gamma_p, gamma_c_right)\n\n# Run and plot multiple stochastic simulations\nfor i in range(num_simulations):\n    t_sim, n_a_sim, n_b_sim = lotka_volterra_gillespie(n_a0, n_b0, rates_right, 70)\n    ax2_right.plot(t_sim, n_a_sim, color='gray', lw=0.5, alpha=0.4,\n                   label='Stochastic Simulation' if i == 0 else \"\")\n    ax2_right.plot(t_sim, n_b_sim, color='gray', lw=0.5, alpha=0.4)\n\n\n# Deterministic solution\nsol_right = odeint(lotka_volterra_ode, y0, t_ode, args=rates_right)\nax2_right.plot(t_ode, sol_right[:, 0], color='black', lw=2.0, label='Deterministic Solution')\nax2_right.plot(t_ode, sol_right[:, 1], color='black', lw=2.0)\n\nax2_right.set_xlabel('Time', fontsize=12)\nax2_right.set_ylabel('Population', fontsize=12)\nax2_right.set_title(f'$\\gamma_p = {gamma_p}, \\gamma_c = {gamma_c_right}$', fontsize=14)\nax2_right.legend()\nax2_right.set_xlim(0, 70)\nax2_right.set_ylim(0, 650)\n\n\nfig2.suptitle('Comparison of Stochastic Trajectories and Deterministic Solutions', fontsize=20, y=1.02)\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p> <p>First figure (stochastic oscillation time series): This figure shows a typical stochastic simulation result in the case without prey competition (\\(\\gamma_c=0\\)). We can see clear predator-prey oscillations: prey (orange line) numbers first increase, then predator (blue line) numbers increase due to abundant food; increased predators cause prey numbers to decline, then predators decline due to food shortage, completing a cycle. However, unlike the perfect periodicity of the deterministic model, the oscillations here have randomly varying amplitudes and periods.</p> <p></p> <p>Second figure (stochastic vs. deterministic comparison): This figure is the most core and thought-provoking result of this lecture.</p> <p></p> <p>Left subplot (\\(\\gamma_c=0\\)): The deterministic solution (thick black line) is a perfect, stable periodic orbit. However, the behavior of stochastic simulations (thin gray lines) is completely different. The oscillation amplitudes of stochastic trajectories tend to continuously increase, showing increasingly higher peaks and increasingly lower valleys. Why is this? The deterministic system is conservative, \"trapped\" on an orbit determined by initial conditions. Random events (birth, death) are like random \"kicks\" to the system, allowing it to randomly walk between different orbits. Since there is no force pulling it back to a specific orbit, this random walk causes oscillation amplitudes to spread, greatly increasing the risk of a species' numbers reaching zero (i.e., extinction). Here, intrinsic noise plays a destabilizing role.</p> <p>Right subplot (\\(\\gamma_c &gt; 0\\)): After introducing prey competition, the deterministic solution (thick black line) shows damped oscillations, eventually stabilizing at a fixed point. The ecosystem reaches a static equilibrium. However, stochastic simulations (thin gray lines) tell a different story again. Trajectories are indeed attracted to the vicinity of the fixed point, but they do not stop. Instead, they continue to undergo random fluctuations around the fixed point. Here, deterministic dynamics act like a \"restoring force\", always trying to pull the system back to the equilibrium point; while random events act like a continuous \"driving force\", constantly kicking the system away from the equilibrium point. The dynamic balance achieved between these two maintains sustained, noisy oscillations. In this case, intrinsic noise plays a role in maintaining dynamics and preventing the system from \"dying\".</p>"},{"location":"notes/5.%20Population%20Dynamics%20-%20Linear%20Death%20Process%20and%20Lotka-Volterra%20System/#summary","title":"Summary","text":"<p>Through this lecture, we completed a journey from simple to complex, from exponential decay of a single species to complex interactions of a complete ecosystem. More importantly, we deeply explored two different philosophies for describing these systems: deterministic mean-field theory and complete stochastic theory.</p> <p>We summarize the following key lessons:</p> <p>1.Deterministic models capture average behavior: For linear processes, or for nonlinear processes with very large population sizes, deterministic (mean-field) equations can well describe the average dynamics of the system. For example, the mean value of the linear death process is completely consistent with the deterministic solution.</p> <p>2.Randomness reveals the essence of fluctuations: Stochastic models not only give average behavior but also precisely quantify fluctuations around the mean (variance or the entire probability distribution). This \"demographic noise\" is invisible in the deterministic world, but in real biological systems, they are inevitable, core components.</p> <p>3.The role of noise is subtle and system-dependent: By comparing Lotka-Volterra models with and without competition, we see one of the most profound conclusions: noise is not always an \"annoying\" random perturbation. Its role is closely related to the deterministic dynamic structure of the system itself.</p> <ul> <li> <p>In conservative systems with neutrally stable orbits (such as \\(\\gamma_c=0\\)), noise is destructive, amplifying oscillations and driving the system toward extinction.</p> </li> <li> <p>In dissipative systems with stable attractors (such as \\(\\gamma_c&gt;0\\)), noise is creative, counterbalancing deterministic attraction, maintaining sustained dynamic fluctuations of the system, and preventing it from falling into dead equilibrium.</p> </li> </ul> <p>Finally, this lecture tells us that to truly understand phenomena such as ecosystems, cellular networks, or epidemic transmission, we must embrace randomness. Random fluctuations are not details to be averaged away, but key factors driving systems to produce rich, complex, and even counterintuitive behaviors. The \"master equation-Gillespie algorithm\" framework we established provides powerful and precise tools for exploring this stochastic world.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/","title":"Introduction","text":"<p>In previous lectures, we explored several concrete examples of stochastic processes. From the \u201csimple random walk\u201d of a particle on a one\u2011dimensional lattice in Lecture 1 to the \u201cpopulation dynamics\u201d of birth\u2013death processes in Lecture 4, we saw the central role of randomness in physical and biological systems. While these examples are specific, they raise a deeper question: Is there a universal mathematical framework, a common language, for evolution processes that \u201cdo not care about the past, only the present\u201d?</p> <p>The goal of this lecture is to establish and understand that common language. Erwin Frey will derive and explain two fundamental equations that govern all Markov processes. The first is the Chapman\u2013Kolmogorov (CK) equation, which acts as a bridge in the macroscopic description, connecting probability distributions at different times. Then we move from the macroscopic to the microscopic and derive the Master Equation, which introduces instantaneous \u201crates\u201d as a powerful tool to describe how state probabilities evolve continuously in time. Together, these two equations form the cornerstone of stochastic\u2011process theory.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#1-probabilistic-description-of-a-stochastic-process","title":"1. Probabilistic Description of a Stochastic Process","text":""},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#11-defining-a-stochastic-process","title":"1.1 Defining a Stochastic Process","text":"<p>To build a general theory, we start with a precise definition. A stochastic process can be viewed as a collection of random variables indexed by time t. In the most general case, it can be a multidimensional vector:</p> \\[ X(t) = (X_1(t), X_2(t), \\ldots) \\] <p>Each component \\(X_i(t)\\) is itself a random variable. Its values may be real numbers (\\(X_i \\in \\mathbb{R}\\)), for example the position of a Brownian particle; or integers (\\(X_i \\in \\mathbb{Z}\\)), for example the number of individuals in a population.</p> <p>To focus on core ideas, we follow the lecture and consider a single\u2011component random variable \\(X(t)\\) for now.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#12-joint-probability-density-the-complete-description","title":"1.2 Joint Probability Density: The Complete Description","text":"<p>How do we completely describe a stochastic process? The answer is: we need the joint probability that, at any sequence of times \\(t_1, t_2, \\ldots, t_n\\), the random variable \\(X(t)\\) takes values \\(x_1, x_2, \\ldots, x_n\\). This is given by the joint probability density \\(P(x_n, t_n; x_{n-1}, t_{n-1}; \\ldots; x_1, t_1)\\) defined by</p> \\[ P(x_n, t_n; \\ldots; x_1, t_1)\\, dx_n \\cdots dx_1 = \\mathrm{Prob}\\{x_n \\le X(t_n) \\le x_n + dx_n; \\ldots; x_1 \\le X(t_1) \\le x_1 + dx_1\\}. \\] <p>This expression means the joint probability that the system is observed near \\(x_1\\) at time \\(t_1\\) and near \\(x_2\\) at time \\(t_2\\), \u2026, and near \\(x_n\\) at time \\(t_n\\).</p> <p>The joint probability density is the most fundamental and complete description of a stochastic process because it encodes all temporal correlations. But this \u201ccompleteness\u201d brings huge complexity. Determining this function for real systems requires measuring or computing the probabilities of all possible history paths. As the number of time points \\(n\\) grows or the state space dimension increases, the complexity explodes, making it practically unusable. This exposes a core challenge in modeling: we must introduce physically motivated simplifications to extract a usable, solvable model from intractable complexity. The Markov property is precisely such a powerful simplification.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#13-stochastic-trajectory-and-conditional-probability","title":"1.3 Stochastic Trajectory and Conditional Probability","text":"<p>To build intuition, consider a \u201cstochastic trajectory\u201d: each realization of the process \\(X(t)\\) over time is one concrete path, i.e., one history of the system\u2019s evolution. For example:</p> <p></p> <p>To analyze dependence across times\u2014how the past influences the future\u2014we use conditional probability. By definition, given a series of past events (states \\(x_1, \\ldots, x_n\\) at times \\(t_1, \\ldots, t_n\\)), the probability of a series of future events (states \\(x_{n+1}, \\ldots, x_{n+m}\\) at times \\(t_{n+1}, \\ldots, t_{n+m}\\)) is</p> \\[ P(x_{n+m}, t_{n+m}; \\ldots; x_{n+1}, t_{n+1} \\mid x_n, t_n; \\ldots; x_1, t_1) = \\frac{P(x_{n+m}, t_{n+m}; \\ldots; x_{n+1}, t_{n+1}; x_n, t_n; \\ldots; x_1, t_1)}{P(x_n, t_n; \\ldots; x_1, t_1)}. \\] <p>This will be our starting point for the Markov property.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#2-core-assumption-the-markov-property","title":"2. Core Assumption: The Markov Property","text":""},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#21-defining-a-memoryless-process","title":"2.1 Defining a \u201cMemoryless\u201d Process","text":"<p>The Markov property restricts the \u201cmemory\u201d of a stochastic process and underpins everything that follows. Its core idea is memorylessness: the future depends only on the present, not on the entire past history that led to the present.</p> <p>In terms of conditional probabilities,</p> \\[ P(x_n, t_n \\mid x_{n-1}, t_{n-1}; \\ldots; x_1, t_1) = P(x_n, t_n \\mid x_{n-1}, t_{n-1}). \\] <p>This implies that, to predict the probability of the system being at \\(x_n\\) at time \\(t_n\\), it suffices to know only its state \\(x_{n-1}\\) at the immediately preceding time \\(t_{n-1}\\). All earlier information (\\(x_{n-2}, \\ldots, x_1\\)) is redundant for predicting the future. The present contains all information needed to predict the future.</p> <p>This simple mathematical assumption reflects a deep physical insight. A system can be approximated as Markovian when there is a separation of time scales. For a large particle in a fluid (Brownian motion), the position \\(X(t)\\) is our variable of interest. Strictly, the dynamics has memory because the velocity is correlated over short times; a complete description would track \\((X(t), V(t))\\). But collisions with many fluid molecules make the velocity correlation (memory) time very short. If we observe \\(X(t)\\) on a time scale much longer than this, the next displacement depends almost only on the current position, not on detailed velocity history. Thus the Markov property is not an absolute law but an extremely useful approximation whenever unobserved, memory\u2011carrying \u201cfast variables\u201d relax quickly and do not affect the evolution of the \u201cslow variables\u201d we care about.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#22-simplifying-the-joint-probability","title":"2.2 Simplifying the Joint Probability","text":"<p>The power of the Markov property is that it simplifies the unwieldy joint probability. By the chain rule of conditional probabilities,</p> \\[ P(x_n, t_n; \\ldots; x_1, t_1) = P(x_n, t_n \\mid x_{n-1}, t_{n-1}; \\ldots; x_1, t_1)\\, P(x_{n-1}, t_{n-1}; \\ldots; x_1, t_1). \\] <p>Applying the Markov property collapses the condition. Repeating this yields a product of two\u2011point transition probabilities:</p> \\[ P(x_n, t_n; \\ldots; x_1, t_1) = P(x_n, t_n \\mid x_{n-1}, t_{n-1})\\, P(x_{n-1}, t_{n-1} \\mid x_{n-2}, t_{n-2}) \\cdots P(x_2, t_2 \\mid x_1, t_1)\\, P(x_1, t_1). \\] <p>This is profound: the complete statistics of a Markov process are determined by two ingredients:</p> <ol> <li>Initial condition: the probability distribution \\(P(x_1, t_1)\\) at the starting time.</li> <li>Transition rule: the conditional probabilities \\(P(x_j, t_j \\mid x_{j-1}, t_{j-1})\\) that map one state to the next.</li> </ol> <p>We no longer need the intractable joint distribution over full histories. The evolution is a forward \u201cpropagation\u201d of the initial distribution via transition probabilities.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#3-chapmankolmogorov-equation-a-bridge-across-times","title":"3. Chapman\u2013Kolmogorov Equation: A Bridge Across Times","text":"<p>Armed with the Markov property, we now derive the first fundamental equation: the Chapman\u2013Kolmogorov (CK) equation.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#31-derivation-the-power-of-marginalization","title":"3.1 Derivation: The Power of Marginalization","text":"<p>The derivation uses the law of total probability (marginalization). Consider three times \\(t_1 &lt; t_2 &lt; t_3\\). We want \\(P(x_3, t_3 \\mid x_1, t_1)\\).</p> <p>To go from \\(t_1\\) to \\(t_3\\), the system must pass some intermediate state \\(x_2\\) at \\(t_2\\). Since \\(x_2\\) can be any state, we sum/integrate over all possibilities:</p> \\[ P(x_3, t_3 \\mid x_1, t_1) = \\int dx_2\\, P(x_3, t_3; x_2, t_2 \\mid x_1, t_1). \\] <p>Using conditional probabilities and the Markov property,</p> \\[ P(x_3, t_3; x_2, t_2 \\mid x_1, t_1) = \\frac{P(x_3, t_3; x_2, t_2; x_1, t_1)}{P(x_1, t_1)}. \\] <p>Apply the chain rule and the Markov property to the numerator:</p> \\[ P(x_3, t_3; x_2, t_2; x_1, t_1) = P(x_3, t_3 \\mid x_2, t_2)\\, P(x_2, t_2 \\mid x_1, t_1)\\, P(x_1, t_1). \\] <p>Substitute back:</p> \\[ P(x_3, t_3; x_2, t_2 \\mid x_1, t_1) = P(x_3, t_3 \\mid x_2, t_2)\\, P(x_2, t_2 \\mid x_1, t_1). \\] <p>Plug this into the marginalization to obtain the CK equation.</p> <p></p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#32-form-and-physical-meaning","title":"3.2 Form and Physical Meaning","text":"<p>Depending on whether the state is continuous or discrete, CK has two forms:</p> <ul> <li>Continuous state:</li> </ul> \\[ P(x_3, t_3 \\mid x_1, t_1) = \\int dx_2\\, P(x_3, t_3 \\mid x_2, t_2)\\, P(x_2, t_2 \\mid x_1, t_1). \\] <ul> <li>Discrete state (use \\(n\\) for state and set \\(t_1=t_0,\\, t_2=t',\\, t_3=t\\)):</li> </ul> \\[ P(n, t \\mid n_0, t_0) = \\sum_{n'} P(n, t \\mid n', t')\\, P(n', t' \\mid n_0, t_0). \\] <p>Physical meaning: CK says that the evolution from \\(n_0\\) to \\(n\\) can be decomposed into two Markovian steps: first \\(n_0 \\to n'\\), then \\(n' \\to n\\). The core idea is \u201csum over all possible intermediate paths.\u201d A long\u2011interval transition probability is the sum (or integral) of probabilities over all intermediate states, reflecting the composition rule of Markov evolution.</p> <p>For discrete states, CK reveals a linear\u2011algebra structure. Define a transition matrix \\(\\mathbf{T}(t_a\\!\\to\\!t_b)\\) with elements \\((\\mathbf{T})_{ij} = P(j, t_b \\mid i, t_a)\\). Then CK becomes matrix multiplication:</p> \\[ \\mathbf{T}(t_1 \\to t_3) = \\mathbf{T}(t_2 \\to t_3)\\, \\mathbf{T}(t_1 \\to t_2). \\] <p>This viewpoint is powerful: long\u2011time behavior (steady states) links directly to eigenvectors and eigenvalues of transition matrices.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#4-from-macroscopic-to-microscopic-the-master-equation","title":"4. From Macroscopic to Microscopic: The Master Equation","text":"<p>The CK equation describes probability evolution over a finite time interval. In many physical and chemical problems, we care about the instantaneous rate of change. Taking an infinitesimal time step in CK leads to the Master Equation.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#41-from-finite-steps-to-instantaneous-rates","title":"4.1 From Finite Steps to Instantaneous Rates","text":"<p>Start from discrete CK and set \\(t'=t\\) and \\(t=t+\\Delta t\\) with \\(\\Delta t\\to 0\\):</p> \\[ P(n, t+\\Delta t \\mid n_0, t_0) = \\sum_m P(n, t+\\Delta t \\mid m, t)\\, P(m, t \\mid n_0, t_0). \\] <p>Consider the time derivative</p> \\[ \\frac{d}{dt} P(n, t \\mid n_0, t_0) = \\lim_{\\Delta t\\to 0} \\frac{1}{\\Delta t}\\big[P(n, t+\\Delta t \\mid n_0, t_0) - P(n, t \\mid n_0, t_0)\\big]. \\] <p>Insert CK and use \\(P(n, t \\mid n_0, t_0) = \\sum_m \\delta_{n,m}\\, P(m, t \\mid n_0, t_0)\\) to obtain</p> \\[ \\frac{d}{dt} P(n, t \\mid n_0, t_0) = \\lim_{\\Delta t\\to 0} \\frac{1}{\\Delta t} \\sum_m \\big[ P(n, t+\\Delta t \\mid m, t) - \\delta_{n,m} \\big] P(m, t \\mid n_0, t_0). \\] <p>The bracket measures the short\u2011time change in probability to go from \\(m\\) to \\(n\\) in \\(\\Delta t\\).</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#42-the-transition-rate-matrix-q","title":"4.2 The Transition Rate Matrix, Q","text":"<p>Define the transition\u2011rate matrix \\(\\mathbf{Q}\\) by</p> \\[ Q(n,m) := \\lim_{\\Delta t\\to 0} \\frac{1}{\\Delta t}\\big[ P(n, t+\\Delta t \\mid m, t) - \\delta_{n,m} \\big]. \\] <p>Interpretation:</p> <ul> <li>Off\u2011diagonals (Gain): for \\(n\\ne m\\), write \\(w_{m\\to n}\\),</li> </ul> \\[ w_{m\\to n} := Q(n,m) = \\lim_{\\Delta t\\to 0} \\frac{1}{\\Delta t}\\, P(n, t+\\Delta t \\mid m, t). \\] <p>\\(w_{m\\to n}\\) is the instantaneous transition rate from \\(m\\) to \\(n\\) (units \\([\\mathrm{time}]^{-1}\\)). The dimensionless probability to jump \\(m\\to n\\) in an infinitesimal \\(d\\tau\\) is \\(w_{m\\to n}\\, d\\tau\\); it contributes gain into \\(n\\).</p> <ul> <li>Diagonals (Loss): for \\(n=m\\),</li> </ul> \\[ Q(m,m) = \\lim_{\\Delta t\\to 0} \\frac{1}{\\Delta t}\\big[ P(m, t+\\Delta t \\mid m, t) - 1 \\big]. \\] <p>Because \u201cno jump\u201d has probability near 1 at short times, \\(Q(m,m)&lt;0\\). Define the positive exit rate</p> \\[ w_m := -Q(m,m) = \\lim_{\\Delta t\\to 0} \\frac{1}{\\Delta t}\\big[ 1 - P(m, t+\\Delta t \\mid m, t) \\big]. \\] <p>\\(w_m\\) is the total rate to leave \\(m\\) to anywhere else; it causes loss from \\(m\\).</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#43-final-form-of-the-master-equation","title":"4.3 Final Form of the Master Equation","text":"<p>With \\(\\mathbf{Q}\\),</p> \\[ \\frac{d}{dt} P(n, t \\mid n_0, t_0) = \\sum_m Q(n,m)\\, P(m, t \\mid n_0, t_0). \\] <p>To expose gain\u2013loss form, use probability conservation.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#44-manifestation-of-probability-conservation","title":"4.4 Manifestation of Probability Conservation","text":"<p>For any starting state \\(m\\), total probability is conserved: \\(\\sum_n P(n, t+\\Delta t \\mid m, t)=1\\). Hence each column of \\(\\mathbf{Q}\\) sums to zero:</p> \\[ \\sum_n Q(n,m) = \\lim_{\\Delta t\\to 0} \\frac{1}{\\Delta t}\\Big[ \\sum_n P(n, t+\\Delta t \\mid m, t) - \\sum_n \\delta_{n,m} \\Big] = 0. \\] <p>Physically, this is probability conservation. The diagonal loss equals the sum of all off\u2011diagonal gains out of that state:</p> \\[ -Q(m,m) = \\sum_{n\\ne m} Q(n,m) \\quad \\Rightarrow \\quad w_m = \\sum_{n\\ne m} w_{m\\to n}. \\] <p>Let \\(P_n(t) \\equiv P(n, t \\mid n_0, t_0)\\). Using \\(w_{m\\to n}=Q_{nm}\\) and \\(w_n=-Q_{nn}=\\sum_{m\\ne n} w_{n\\to m}\\) gives</p> \\[ \\frac{d}{dt} P_n(t) = \\underbrace{\\sum_{m\\ne n} w_{m\\to n}\\, P_m(t)}_{\\text{Gain: from all } m \\text{ into } n} \\;- \\underbrace{\\sum_{m\\ne n} w_{n\\to m}\\, P_n(t)}_{\\text{Loss: from } n \\text{ to all } m}. \\] <p>This states: the rate of change of \\(P_n\\) equals total inflow from all other states minus total outflow from \\(n\\) to others.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#45-forward-vs-backward-master-equations","title":"4.5 Forward vs. Backward Master Equations","text":"<p>The equation derived above differentiates with respect to the \u201cend\u201d time \\(t\\) (\\(\\partial_t\\)), so it is called the forward Master Equation: given an initial condition, how does the future distribution evolve? There is also a backward Master Equation, with derivative with respect to the \u201cstart\u201d time \\(t_0\\) (\\(\\partial_{t_0}\\)), answering a different question: given a fixed final state, how should the initial distribution be chosen? In physics and chemistry, the forward equation is more common because it naturally describes forward time evolution.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#5-python-simulation-visualizing-a-discrete-markov-process","title":"5. Python Simulation: Visualizing a Discrete Markov Process","text":"<p>To connect the \u201crates\u201d in the Master Equation to actual random trajectories, we can simulate. For discrete\u2011state, continuous\u2011time Markov processes, the classic algorithm is the Gillespie algorithm (introduced in Lecture 3).</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#51-model-setup","title":"5.1 Model Setup","text":"<p>Consider a simple three\u2011state model (e.g., protein conformations): Open (O), Closed (C), and Inhibited (I). We label them 0, 1, 2. Transition rates:</p> <p>\\(O \\leftrightarrow C\\): interconversion with rates \\(w_{0\\to 1}=k_{OC}\\) and \\(w_{1\\to 0}=k_{CO}\\).</p> <p>\\(C \\to I\\): irreversible transition with rate \\(w_{1\\to 2}=k_{CI}\\).</p> <p>The rate matrix \\(\\mathbf{Q}\\) is</p> \\[ \\mathbf{Q} = \\begin{pmatrix} -k_{OC} &amp; k_{CO} &amp; 0 \\\\ k_{OC} &amp; -k_{CO} - k_{CI} &amp; 0 \\\\ 0 &amp; k_{CI} &amp; 0 \\end{pmatrix} \\] <p>Each column sums to zero, ensuring probability conservation.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#52-algorithm-and-code","title":"5.2 Algorithm and Code","text":"<p>The Gillespie idea: at any time, both \u201cwhat happens next\u201d and \u201chow long to wait\u201d are random. Two random draws determine the next event:</p> <ol> <li>Waiting time: the total exit rate \\(W\\) is the sum of all outgoing rates from the current state. The waiting time \\(\\Delta t\\) is exponential: \\(\\Delta t = -\\frac{1}{W}\\ln r_1\\), with \\(r_1\\in(0,1]\\).</li> <li>Which event: a second uniform \\(r_2\\) selects the transition proportional to its rate.</li> </ol> <p>Python implementation:</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import FancyBboxPatch, ArrowStyle\nimport matplotlib.patches as mpatches\nfrom collections import Counter\n\ndef simulate_markov_process(initial_state, rates, t_max):\n    \"\"\"\n    Simulate a discrete state, continuous time Markov process using the Gillespie algorithm.\n\n    Parameters:\n        initial_state (int): Initial state of the system (0, 1 or 2).\n        rates (dict): Dictionary of transition rates, e.g. {'k_oc': 1.0,...}.\n        t_max (float): Maximum simulation time.\n\n    Returns:\n        tuple: A tuple containing lists of times and states.\n    \"\"\"\n    # Unpack rate parameters\n    k_oc = rates.get('k_oc', 0)\n    k_co = rates.get('k_co', 0)\n    k_ci = rates.get('k_ci', 0)\n\n    # Store trajectory data\n    times = [0.0]\n    states = [initial_state]\n\n    current_time = 0.0\n    current_state = initial_state\n\n    while current_time &lt; t_max:\n        # Define possible transitions and their rates in the current state\n        possible_transitions = []\n        if current_state == 0:  # State O\n            possible_transitions = [(1, k_oc)]\n        elif current_state == 1:  # State C\n            possible_transitions = [(0, k_co), (2, k_ci)]\n        elif current_state == 2:  # State I (absorbing state)\n            # No outward transitions from state I\n            break\n\n        # Calculate total exit rate W\n        total_rate = sum(rate for _, rate in possible_transitions)\n\n        if total_rate == 0:\n            # Absorbing state, simulation ends\n            break\n\n        # Step 1: Determine time interval to next event\n        r1 = np.random.rand()\n        dt = -np.log(r1) / total_rate\n\n        current_time += dt\n        if current_time &gt; t_max:\n            break\n\n        # Step 2: Determine which event occurs\n        r2 = np.random.rand()\n        cumulative_prob = 0.0\n        next_state = -1\n        for state, rate in possible_transitions:\n            cumulative_prob += rate / total_rate\n            if r2 &lt; cumulative_prob:\n                next_state = state\n                break\n\n        # Update state and store results\n        current_state = next_state\n        times.append(current_time)\n        states.append(current_state)\n\n    return times, states\n\ndef plot_state_diagram(rates):\n    \"\"\"\n    Plot state transition diagram\n    \"\"\"\n    fig, ax = plt.subplots(1, 1, figsize=(10, 6))\n\n    # State positions\n    positions = {0: (2, 4), 1: (2, 2), 2: (2, 0)}  # O, C, I\n    state_names = {0: 'Open (O)', 1: 'Closed (C)', 2: 'Inhibited (I)'}\n    colors = {0: '#FF6B6B', 1: '#4ECDC4', 2: '#45B7D1'}\n\n    # Draw state nodes (larger circles)\n    for state, pos in positions.items():\n        circle = plt.Circle(pos, 0.5, color=colors[state], alpha=0.8)  # Increased radius from 0.3 to 0.5\n        ax.add_patch(circle)\n        ax.text(pos[0], pos[1], state_names[state], ha='center', va='center', \n                fontsize=10, fontweight='bold', color='white')\n\n    # Draw transition arrows\n    k_oc = rates.get('k_oc', 0)\n    k_co = rates.get('k_co', 0)\n    k_ci = rates.get('k_ci', 0)\n\n    # O &lt;-&gt; C\n    if k_oc &gt; 0:\n        arrow1 = mpatches.FancyArrowPatch((2, 3.5), (2, 2.5), \n                                          arrowstyle='-&gt;', mutation_scale=20, \n                                          color='gray', alpha=0.7, \n                                          connectionstyle=\"arc3,rad=-0.3\")\n        ax.add_patch(arrow1)\n        ax.text(2.5, 3, f'k_OC = {k_oc}', fontsize=9, rotation=-90, ha='center')\n\n    if k_co &gt; 0:\n        arrow2 = mpatches.FancyArrowPatch((2, 2.5), (2, 3.5), \n                                          arrowstyle='-&gt;', mutation_scale=20, \n                                          color='gray', alpha=0.7,\n                                          connectionstyle=\"arc3,rad=-0.3\")\n        ax.add_patch(arrow2)\n        ax.text(1.5, 3, f'k_CO = {k_co}', fontsize=9, rotation=90, ha='center')\n\n    # C -&gt; I\n    if k_ci &gt; 0:\n        arrow3 = mpatches.FancyArrowPatch((2, 1.5), (2, 0.5), \n                                          arrowstyle='-&gt;', mutation_scale=20, \n                                          color='gray', alpha=0.7)\n        ax.add_patch(arrow3)\n        ax.text(2.5, 1, f'k_CI = {k_ci}', fontsize=9, rotation=-90, ha='center')\n\n    ax.set_xlim(0, 4)\n    ax.set_ylim(-0.5, 5)\n    ax.set_aspect('equal')\n    ax.axis('off')\n    ax.set_title('State Transition Diagram', fontsize=14, fontweight='bold')\n\n    return fig\n\ndef plot_multiple_trajectories(initial_state, rates, t_max, num_trajectories=5):\n    \"\"\"\n    Plot multiple trajectories to show randomness\n    \"\"\"\n    fig, ax = plt.subplots(1, 1, figsize=(12, 6))\n\n    colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FECA57']\n    state_labels = ['Open (O)', 'Closed (C)', 'Inhibited (I)']\n\n    for i in range(num_trajectories):\n        times, states = simulate_markov_process(initial_state, rates, t_max)\n        # Add small offset to each trajectory for better visualization\n        offset_states = [s + (i*0.05) for s in states]\n        ax.step(times, offset_states, where='post', alpha=0.7, \n                color=colors[i % len(colors)], linewidth=1.5)\n\n    ax.set_yticks([0, 1, 2])\n    ax.set_yticklabels(state_labels)\n    ax.set_xlabel('Time')\n    ax.set_ylabel('State')\n    ax.set_title(f'Multiple Stochastic Trajectories (N={num_trajectories})')\n    ax.grid(True, alpha=0.3)\n\n    return fig\n\ndef plot_state_probability_distribution(initial_state, rates, t_max, num_samples=1000):\n    \"\"\"\n    Plot state probability distribution\n    \"\"\"\n    # Run multiple simulations to get statistics\n    final_states = []\n    all_times = []\n    all_states = []\n\n    for _ in range(num_samples):\n        times, states = simulate_markov_process(initial_state, rates, t_max)\n        if times:\n            final_states.append(states[-1])\n            all_times.extend(times)\n            all_states.extend(states)\n\n    # Count final state distribution\n    state_counts = Counter(final_states)\n    total = sum(state_counts.values())\n    state_probs = {state: count/total for state, count in state_counts.items()}\n\n    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 6))\n\n    # Final state distribution\n    state_labels = ['Open (O)', 'Closed (C)', 'Inhibited (I)']\n    state_colors = ['#FF6B6B', '#4ECDC4', '#45B7D1']\n    probs = [state_probs.get(i, 0) for i in range(3)]\n\n    bars = ax1.bar(state_labels, probs, color=state_colors, alpha=0.7)\n    ax1.set_ylabel('Probability')\n    ax1.set_title(f'Steady-State Distribution (t={t_max}, N={num_samples})')\n    ax1.set_ylim(0, 1)\n\n    # Add value labels on bars\n    for bar, prob in zip(bars, probs):\n        height = bar.get_height()\n        ax1.text(bar.get_x() + bar.get_width()/2., height + 0.01,\n                f'{prob:.2f}', ha='center', va='bottom')\n\n    # State occupancy over time (simplified)\n    time_points = np.linspace(0, t_max, 50)\n    state_occupancy = {0: [], 1: [], 2: []}\n\n    for t in time_points:\n        count = {0: 0, 1: 0, 2: 0}\n        total_count = 0\n        for _ in range(100):  # Sample 100 trajectories at each time point\n            times, states = simulate_markov_process(initial_state, rates, t_max)\n            # Find state at time t\n            state_at_t = states[0]  # Default to initial state\n            for i in range(len(times)-1):\n                if times[i] &lt;= t &lt; times[i+1]:\n                    state_at_t = states[i]\n                    break\n                elif t &gt;= times[-1]:\n                    state_at_t = states[-1]\n                    break\n            count[state_at_t] += 1\n            total_count += 1\n\n        for state in [0, 1, 2]:\n            state_occupancy[state].append(count[state] / total_count if total_count &gt; 0 else 0)\n\n    # Plot state occupancy over time\n    for state in [0, 1, 2]:\n        ax2.plot(time_points, state_occupancy[state], \n                label=state_labels[state], color=state_colors[state], linewidth=2)\n\n    ax2.set_xlabel('Time')\n    ax2.set_ylabel('Probability')\n    ax2.set_title('State Probability Evolution')\n    ax2.legend()\n    ax2.grid(True, alpha=0.3)\n\n    return fig\n\n# --- Simulation parameters ---\nparams = {\n    'k_oc': 0.5,  # Rate O -&gt; C\n    'k_co': 0.2,  # Rate C -&gt; O\n    'k_ci': 0.1   # Rate C -&gt; I\n}\ninitial_state = 0  # Start from state O\nsimulation_time = 100.0\n\n# --- Create enhanced visualizations ---\n# 1. State transition diagram\nfig1 = plot_state_diagram(params)\nplt.show()\n\n# 2. Multiple trajectories\nfig2 = plot_multiple_trajectories(initial_state, params, simulation_time, num_trajectories=10)\nplt.show()\n\n# 3. State probability distribution\nfig3 = plot_state_probability_distribution(initial_state, params, simulation_time, num_samples=500)\nplt.show()\n</code></pre> <p>Dynamics of the protein system: the transition from Closed to Inhibited is irreversible, while Open and Closed interconvert. </p> <p>Stochasticity: Different trajectories occupy different states at the same time, reflecting randomness.</p> <p>State jumps: The system switches instantaneously between states, consistent with Markov dynamics.</p> <p>Absorbing state: All trajectories eventually end in the Inhibited state because it is absorbing.</p> <p>Dwell time: The residence time in each state is random and exponentially distributed.</p> <p></p> <p>This shows the final\u2011state distribution after long evolution (\\(t=100\\)). All samples end in the Inhibited state with probability near 1.0; probabilities of Open and Closed are near 0, indicating eventual capture by the absorbing state.</p>"},{"location":"notes/6.%20Fundamental%20Equations%20of%20Markov%20Processes%20%E2%80%94%20Chapman%E2%80%93Kolmogorov%20Equation/#summary","title":"Summary","text":"<p>This lecture built a logical path from a universal description to concrete dynamical equations:</p> <ol> <li>Start from the most complete yet most complex description: the joint probability density.</li> <li>Introduce the key physical simplification\u2014the Markov property (memorylessness).</li> <li>Based on the Markov property, derive the first fundamental equation\u2014the Chapman\u2013Kolmogorov equation. It is a sum/integral equation for finite time steps, with the core idea \u201csum over all intermediate paths.\u201d</li> <li>Take the infinitesimal\u2011time limit of CK to obtain the Master Equation. It is a differential equation in terms of transition rates, expressing instantaneous change as a gain\u2013loss balance among states.</li> </ol> <p>To contrast the two equations:</p> Feature Chapman\u2013Kolmogorov equation Master Equation Time scale Finite step (\\(t \\to t+\\Delta t\\)) Infinitesimal step (\\(dt\\)) Object Transition probability \\(P(n, t+\\Delta t \\mid m, t)\\) Transition rate \\(w_{m\\to n}\\) Math form Sum/integral equation Differential equation Core idea Sum over intermediate paths Balance of probability flux <p>The Master Equation is not the end of theory but the start of applications. With it we can:</p> <ul> <li>Solve for steady\u2011state distributions: probabilities as \\(t\\to\\infty\\) (often the zero\u2011mode of the equation).</li> <li>Compute relaxation times: how long after a perturbation to return to steady state (linked to eigenvalues of the rate matrix).</li> <li>Analyze first\u2011passage times: average time to reach a target state for the first time.</li> </ul> <p>These questions are central across physics, chemistry, biology, and finance.</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/","title":"Introduction: From Global Jumps to Instantaneous Rates","text":"<p>In the previous lecture we studied the Chapman\u2013Kolmogorov (CK) equation, a cornerstone for describing the evolution of Markov processes. CK provides a global view: over a finite time interval, the probability to go from one state to another is linked through all possible intermediate states. In many physical and chemical applications, however, we care about how the state probabilities change instantaneously in time. We want an equation akin to \\(F=ma\\) in Newtonian mechanics: not one that summarizes an entire trajectory, but one that gives the \"driving force\" or rate of change at any given moment.</p> <p>This lecture, led by Professor Erwin Frey, derives that more powerful tool: a differential equation for the instantaneous rate of change of a probability distribution (the master equation). By pushing the finite time step in CK to an infinitesimal limit, we pass from an integral equation about finite-time jumps to a differential equation about instantaneous probability flow. This shift from global to local is both mathematically convenient and physically intuitive.</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#1-deriving-the-master-equation","title":"1. Deriving the Master Equation","text":""},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#11-review-ck-equation-as-the-starting-point","title":"1.1 Review: CK Equation as the Starting Point","text":"<p>For a Markov process on a discrete state space, CK governs the time evolution of conditional probabilities. Given three times \\(t_0&lt;t'&lt;t\\), the probability to evolve from initial state \\(n_0\\) to final state \\(n\\) is obtained by summing over all intermediate states \\(m\\) at time \\(t'\\):</p> \\[ P(n,t\\mid n_0,t_0)=\\sum_m P(n,t\\mid m,t')\\,P(m,t'\\mid n_0,t_0). \\] <p>This reflects memorylessness: once the system is at state \\(m\\) at time \\(t'\\), its future evolution depends only on \\(m\\), not on how it got there.</p> <p>As reviewed in class, CK supports two complementary viewpoints:</p> <ul> <li>Forward equation: fix \\((n_0,t_0)\\) and an intermediate time \\(t'\\), and study how \\(P(n,t\\mid\\cdot)\\) evolves forward in \\(t\\).</li> <li>Backward equation: fix \\((n,t)\\) and \\(t'\\), and study how \\(P(\\cdot\\mid n_0,t_0)\\) evolves backward in \\(t_0\\).</li> </ul> <p>Here we focus on the forward master equation because it answers the common physical question: given a specified initial condition, how does the probability distribution evolve as time passes?</p> <p>This seemingly simple mathematical assumption contains profound physical insights. A physical system can be approximated as a Markov process typically because there exists separation of time scales. For example, consider a large particle moving in a liquid (Brownian motion). Its position \\(X(t)\\) is the random variable we care about. Strictly speaking, its motion has memory because its velocity will persist for a short time. A complete description would need to consider the state \\((X(t), V(t))\\). However, collisions between the particle and numerous tiny liquid molecules cause the correlation time (memory time) of its velocity to be very short. If we observe the particle position on a time scale much larger than this velocity correlation time, then on our observation scale, the particle's next displacement depends almost only on its current position, not on its previous velocity history. Therefore, the Markov property is not an absolute physical law, but an extremely effective approximation, applicable to systems where all unobserved, memory-carrying \"fast variables\" can rapidly reach equilibrium on their relaxation time scale, thus not affecting the evolution of the \"slow variables\" we care about.</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#12-from-finite-time-steps-to-an-instantaneous-view","title":"1.2 From Finite Time Steps to an Instantaneous View","text":"<p>To obtain a differential equation for the instantaneous change, consider an infinitesimal interval \\(d\\tau\\). Start from the definition</p> \\[ \\partial_\\tau P(n,\\tau\\mid n_0,t_0)=\\lim_{d\\tau\\to 0}\\frac{1}{d\\tau}\\big[P(n,\\tau+d\\tau\\mid n_0,t_0)-P(n,\\tau\\mid n_0,t_0)\\big]. \\] <p>Use CK with \\(t=\\tau+d\\tau\\) and \\(t'=\\tau\\):</p> \\[ P(n,\\tau+d\\tau\\mid n_0,t_0)=\\sum_m P(n,\\tau+d\\tau\\mid m,\\tau)\\,P(m,\\tau\\mid n_0,t_0). \\] <p>Substitute into the derivative and introduce the Kronecker delta via \\(\\sum_m\\delta_{nm}P(m,\\tau\\mid\\cdot)=P(n,\\tau\\mid\\cdot)\\) to write</p> \\[ \\partial_\\tau P(n,\\tau\\mid\\cdot)=\\lim_{d\\tau\\to 0}\\frac{1}{d\\tau}\\sum_m\\Big[P(n,\\tau+d\\tau\\mid m,\\tau)P(m,\\tau\\mid\\cdot)-\\delta_{nm}P(m,\\tau\\mid\\cdot)\\Big]. \\] <p>Rearranging,</p> \\[ \\partial_\\tau P(n,\\tau\\mid\\cdot)=\\sum_m\\left(\\lim_{d\\tau\\to 0}\\frac{P(n,\\tau+d\\tau\\mid m,\\tau)-\\delta_{nm}}{d\\tau}\\right)P(m,\\tau\\mid\\cdot). \\] <p>This is the embryo of the forward master equation: the instantaneous change of \\(P(n,\\tau)\\) is determined by the current probabilities \\(P(m,\\tau)\\) and the infinitesimal transition rates from \\(m\\) to \\(n\\).</p> <p>This marks a fundamental shift in viewpoint. CK answers a global question (\u201cHow does the system go from A to C via B?\u201d). The master equation, via \\(d\\tau\\to 0\\), answers a local one: \u201cAt this moment, how does probability flow into and out of the current state?\u201d Like going from average speed over a trip to instantaneous velocity, the local differential form is the foundation of most dynamical theories in physics.</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#2-the-q-matrix-engine-of-time-evolution","title":"2. The Q Matrix: Engine of Time Evolution","text":"<p>The derivation above naturally introduces a core mathematical object: the matrix that encodes all infinitesimal transition information. We define the Q matrix (also called the infinitesimal generator or transition rate matrix).</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#21-formal-definition","title":"2.1 Formal Definition","text":"<p>Define</p> \\[ Q_{\\tau}(n,m):=\\lim_{d\\tau\\to 0}\\frac{1}{d\\tau}\\big[P(n,\\tau+d\\tau\\mid m,\\tau)-\\delta_{nm}\\big]. \\] <p>With this, the forward master equation becomes</p> \\[ \\partial_\\tau P(n,\\tau\\mid\\cdot)=\\sum_m Q_{\\tau}(n,m)\\,P(m,\\tau\\mid\\cdot). \\] <p>In vector form, with \\(\\vec P(\\tau)\\) collecting the components \\(P(n,\\tau)\\),</p> \\[ \\partial_\\tau\\,\\vec P(\\tau\\mid t_0)=Q_{\\tau}\\,\\vec P(\\tau\\mid t_0). \\] <p>Given \\(\\vec P(t_0)\\), solving this linear ODE yields the probability distribution at any later time. Q acts as the engine driving probability evolution.</p> <p>Convention: To avoid notational confusion, we adopt the following convention: \\(Q_{\\text{row},\\,\\text{col}}\\) represents the rate from the \"column\" state to the \"row\" state (i.e., col\u2192row rate), hence columns of \\(Q\\) sum to zero.</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#22-deconstructing-q","title":"2.2 Deconstructing Q","text":"<ul> <li>Off-diagonal elements (\\(n\\ne m\\)): transition rates</li> </ul> \\[ Q_{nm}=w(n,m)=\\lim_{d\\tau\\to 0}\\frac{P(n,\\tau+d\\tau\\mid m,\\tau)}{d\\tau} \\;\\ge 0. \\] <p>This means: when the system is in state \\(m\\), the probability to jump to \\(n\\) in an infinitesimal interval \\(d\\tau\\) is \\(P(n,\\tau+d\\tau\\mid m,\\tau)\\), so the instantaneous jump rate is that probability divided by the interval length. Because probabilities are nonnegative, all off-diagonal entries satisfy \\(Q_{nm}\\ge 0\\).</p> <ul> <li>Diagonal elements (\\(n=m\\)): negative exit rate</li> </ul> \\[ Q_{mm}=\\lim_{d\\tau\\to 0}\\frac{P(m,\\tau+d\\tau\\mid m,\\tau)-1}{d\\tau},\\qquad w(m):=-Q_{mm}\\ge 0. \\] <p>Here \\(P(m,\\tau+d\\tau\\mid m,\\tau)\\) is the probability to remain in \\(m\\) over \\(d\\tau\\). Then \\(1-P(m,\\tau+d\\tau\\mid m,\\tau)\\) is the total probability to leave \\(m\\) during \\(d\\tau\\). Dividing by \\(d\\tau\\) and taking \\(d\\tau\\to 0\\) yields the total exit rate. Since the stay-probability is at most 1, it follows that \\(Q_{mm}\\le 0\\). We define \\(w(m)=-Q_{mm}\\) as the total exit rate from \\(m\\).</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#23-fundamental-constraint-probability-conservation","title":"2.3 Fundamental Constraint: Probability Conservation","text":"<p>From \\(\\sum_n P(n,\\tau+d\\tau\\mid m,\\tau)=1\\) (starting from \\(m\\) you must be in some state after \\(d\\tau\\), including \\(m\\) itself), subtract 1 on both sides, divide by \\(d\\tau\\), and take the limit:</p> \\[ \\lim_{d\\tau\\to 0}\\frac{1}{d\\tau}\\left(\\sum_n P(n,\\tau+d\\tau\\mid m,\\tau)-\\sum_n\\delta_{nm}\\right)=0. \\] <p>Exchanging sum and limit (finite state space),</p> \\[ \\sum_n Q_{nm}=0. \\] <p>Thus the diagonal loss equals the sum of all off-diagonal gains in that column:</p> \\[ w(m)=-Q_{mm}=\\sum_{n\\ne m}Q_{nm}=\\sum_{n\\ne m}w(n,m). \\] <p>This property encodes probability conservation: the negative diagonal (loss) must exactly balance the sum of off-diagonal inflows (gains) out of the same source column. In words, the total rate to leave a state equals the sum of rates to all other possible destinations. The linear-algebraic constraint on \\(Q\\) is nothing but the algebraic imprint of probability conservation.</p> <p>Summary (Q at a glance):</p> Entry Definition Physical meaning Constraint Off\u2011diagonal \\(Q_{nm}\\) (\\(n\\ne m\\)) \\(w(n,m)=\\lim_{d\\tau\\to 0}\\tfrac{P(n,\\tau+d\\tau\\mid m,\\tau)}{d\\tau}\\) Rate from \\(m\\) to \\(n\\) \\(Q_{nm}\\ge 0\\) Diagonal \\(Q_{mm}\\) \\(-w(m)=\\lim_{d\\tau\\to 0}\\tfrac{P(m,\\tau+d\\tau\\mid m,\\tau)-1}{d\\tau}\\) Negative total exit rate from \\(m\\) \\(Q_{mm}\\le 0\\) Column sum \\(\\sum_n Q_{nm}=0\\) Probability conservation Holds for all \\(m\\)"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#3-physical-intuition-gainloss-balance","title":"3. Physical Intuition: Gain\u2013Loss Balance","text":"<p>While \\(\\partial_\\tau P=QP\\) is compact, the equivalent gain-loss form offers clearer intuition. Split the sum into diagonal and off-diagonal parts,</p> \\[ \\partial_\\tau P(n,\\tau)=Q_{nn}P(n,\\tau)+\\sum_{m\\ne n}Q_{nm}P(m,\\tau). \\] <p>Using \\(Q_{nm}=w(n,m)\\) and \\(Q_{nn}=-\\sum_{m\\ne n}w(m,n)\\),</p> \\[ \\partial_\\tau P(n,\\tau)=\\sum_{m\\ne n}w(n,m)P(m,\\tau)-\\Big(\\sum_{m\\ne n}w(m,n)\\Big)P(n,\\tau), \\] <p>or symmetrically</p> \\[ \\partial_\\tau P(n,\\tau)=\\sum_{m\\ne n}\\big[w(n,m)P(m,\\tau)-w(m,n)P(n,\\tau)\\big]. \\] <p></p> <ul> <li>Gain term \\(w(n,m)P(m,\\tau)\\)</li> <li>Represents probability flux flowing into \\(n\\) from state \\(m\\).</li> <li>\\(P(m,\\tau)\\) is the probability to be in \\(m\\) at time \\(\\tau\\).</li> <li>\\(w(n,m)\\) is the transition rate from \\(m\\) to \\(n\\).</li> <li>Their product is the increase per unit time in the probability of \\(n\\) due to jumps from \\(m\\).</li> <li> <p>Total gain sums contributions over all \\(m\\ne n\\): \\(\\sum_{m\\ne n}w(n,m)P(m,\\tau)\\).</p> </li> <li> <p>Loss term \\(-w(m,n)P(n,\\tau)\\)</p> </li> <li>Represents probability flux flowing out of \\(n\\) into states \\(m\\).</li> <li>\\(P(n,\\tau)\\) is the probability to be in \\(n\\) at time \\(\\tau\\).</li> <li>\\(w(m,n)\\) is the transition rate from \\(n\\) to \\(m\\).</li> <li>Their product is the decrease per unit time in the probability of \\(n\\) due to jumps to \\(m\\).</li> <li>Total loss sums over all possible destinations \\(m\\ne n\\): \\(\\sum_{m\\ne n}w(m,n)P(n,\\tau)\\).</li> </ul> <p>Net change = total inflow minus total outflow. This is a continuity equation for probability on a discrete state space: \\(P(n,\\tau)\\) plays the role of a density, \\(\\partial_\\tau P(n,\\tau)\\) its time change, and the bracketed sum the net incoming probability flux. Equivalently, denote the probability flux from \\(m\\) into \\(n\\) by \\(J_{n\\leftarrow m}:=w(n,m)P(m,\\tau)\\). Then</p> \\[ \\partial_\\tau P(n,\\tau) = \\sum_{m\\ne n} \\big[ J_{n\\leftarrow m} - J_{m\\leftarrow n} \\big]. \\]"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#4-case-study-linear-birthdeath-process","title":"4. Case Study: Linear Birth\u2013Death Process","text":""},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#41-model-definition","title":"4.1 Model Definition","text":"<p>Consider a population of identical individuals with size \\(n\\). Two events occur:</p> <ul> <li>Birth: each individual replicates with rate \\(\\mu\\), \\(A\\xrightarrow{\\mu}2A\\). Total birth rate \\(\\propto n\\), so \\(w(n+1,n)=\\mu n\\).</li> <li>Death: each individual disappears with rate \\(\\lambda\\), \\(A\\xrightarrow{\\lambda}\\emptyset\\). Total death rate \\(\\propto n\\), so \\(w(n-1,n)=\\lambda n\\).</li> </ul> <p>State \\(n=0\\) is absorbing: with no individuals, both total birth and death rates vanish, so once at \\(n=0\\) the system stays there.</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#42-building-the-q-matrix-for-the-birth-death-process","title":"4.2 Building the Q Matrix for the Birth-Death Process","text":"<p>Now, we will construct the Q matrix for this process step by step according to the above rules. The matrix rows and columns are indexed by population size \\(n=0,1,2,\\ldots\\).</p> <p>Non-diagonal elements:</p> <ul> <li>For transitions from \\(n\\) to \\(n+1\\) (birth), we have \\(Q_{n+1,n} = w(n+1,n) = \\mu n\\). These elements are located above the main diagonal (super-diagonal).</li> <li>For transitions from \\(n\\) to \\(n-1\\) (death), we have \\(Q_{n-1,n} = w(n-1,n) = \\lambda n\\). These elements are located below the main diagonal (sub-diagonal).</li> <li>Since only one individual can be born or die at a time, there are no transitions with jumps larger than one unit, such as from \\(n\\) to \\(n+2\\). Therefore, all other non-diagonal elements are zero.</li> </ul> <p>Diagonal elements:</p> <ul> <li>The diagonal element \\(Q_{n,n}\\) is the negative total exit rate. From state \\(n\\), the system can only transition to \\(n+1\\) or \\(n-1\\). Therefore, the total exit rate is the sum of the rates of these two processes: \\(w(n) = w(n+1,n) + w(n-1,n) = \\mu n + \\lambda n = (\\mu + \\lambda)n\\).</li> <li>So, the diagonal element is \\(Q_{n,n} = -(\\mu + \\lambda)n\\).</li> <li>For the absorbing state \\(n=0\\), the exit rate is zero, so \\(Q_{0,0} = 0\\).</li> </ul> <p></p> <p>In summary, the Q matrix for the linear birth-death process has a very clear tridiagonal structure:</p> \\[ Q = \\begin{pmatrix} 0 &amp; 0 &amp; 0 &amp; 0 &amp; \\cdots \\\\ \\lambda &amp; -(\\mu+\\lambda) &amp; \\mu &amp; 0 &amp; \\cdots \\\\ 0 &amp; 2\\lambda &amp; -2(\\mu+\\lambda) &amp; 2\\mu &amp; \\cdots \\\\ 0 &amp; 0 &amp; 3\\lambda &amp; -3(\\mu+\\lambda) &amp; \\cdots \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots \\end{pmatrix} \\] <p>This example demonstrates a profound principle: the structure of the Q matrix is the direct \"fingerprint\" of the system's microscopic dynamical rules. The birth-death process only allows population size changes of \\(\\pm 1\\), which constitutes \"nearest-neighbor\" jumps in the state space. When we translate these rules into a Q matrix, we naturally obtain a sparse matrix with only the main diagonal and the immediately adjacent upper and lower diagonals being non-zero. This is a universal law: the sparsity pattern of the Q matrix directly reflects the connectivity of the state-space graph. A tridiagonal matrix means the states form a one-dimensional chain. Conversely, if a Q matrix is dense, it means any state can directly transition to any other state.</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#43-python-visualization-from-static-structure-to-dynamics","title":"4.3 Python Visualization: From Static Structure to Dynamics","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndef create_birth_death_q_matrix(N, mu, lam):\n    \"\"\"\n    Construct the Q matrix for a linear birth-death process.\n\n    Parameters:\n    N (int): Size of the state space (from 0 to N-1). This is a truncation, as theoretically the state space is infinite.\n    mu (float): Birth rate per individual.\n    lam (float): Death rate per individual (lambda is a keyword in python, so we use lam).\n\n    Returns:\n    numpy.ndarray: Q matrix of size (N, N).\n    \"\"\"\n    # Initialize an N x N zero matrix\n    Q = np.zeros((N, N))\n\n    # Fill non-diagonal elements\n    for n in range(1, N):\n        # Death process: n -&gt; n-1\n        # Q_{n-1, n} = w(n-1, n) = lambda * n\n        Q[n-1, n] = lam * n\n        # Birth process: n-1 -&gt; n\n        # Q_{n, n-1} = w(n, n-1) = mu * (n-1)\n        Q[n, n-1] = mu * (n-1)\n\n    # Fill diagonal elements\n    # Q_{n,n} = - (exit rate) = - (birth rate + death rate)\n    for n in range(N):\n        # Exit rate is the negative sum of all non-diagonal elements in this column\n        # This is also equivalent to - (mu * n + lam * n)\n        # Note: The row sum of Q matrix is 0, but here we follow the professor's board notation,\n        # where transition rates are placed in Q_{destination, source}, so the column sum is 0.\n        # If it's the standard mathematical notation Q_{i,j} representing transition from j-&gt;i, then the column sum is 0.\n        # If it's the common notation in probability theory Q_{i,j} representing transition from i-&gt;j, then the row sum is 0.\n        # The implementation here follows Q[row, col] = Q_{row, col}, i.e., transition from col to row, so the column sum is 0.\n        # Q_{n,n} = - sum_{m!=n} Q_{m,n}\n        Q[n, n] = -np.sum(Q[:, n])\n\n    return Q\n\n# --- Parameter settings ---\nN_states = 15  # State space size (0, 1,..., 14)\nmu = 1.0       # Birth rate\nlambda_rate = 1.2 # Death rate\n\n# Create Q matrix\nQ_matrix = create_birth_death_q_matrix(N_states, mu, lambda_rate)\n\n# --- Visualization ---\nplt.figure(figsize=(10, 8))\nsns.heatmap(Q_matrix, annot=True, fmt=\".1f\", cmap=\"vlag\", linewidths=.5, cbar=True)\nplt.title(f'Q-Matrix for Linear Birth-Death Process (N={N_states}, \u03bc={mu}, \u03bb={lambda_rate})', fontsize=16)\nplt.xlabel('Source State (m)', fontsize=12)\nplt.ylabel('Destination State (n)', fontsize=12)\nplt.gca().xaxis.tick_top()\nplt.gca().xaxis.set_label_position('top')\nplt.show()\n\nprint(\"Q Matrix (truncated):\")\nprint(np.round(Q_matrix, 2))\n</code></pre> <p>Main diagonal (blue): These are the negative exit rates \\(Q_{n,n} = -(\\mu + \\lambda)n\\), whose absolute values increase linearly with \\(n\\). Super-diagonal (red): These are the birth rates \\(Q_{n+1,n} = \\mu n\\), which also increase linearly with \\(n\\). Sub-diagonal (red): These are the death rates \\(Q_{n-1,n} = \\lambda n\\), which also increase linearly with \\(n\\). Other regions: All zero, indicating no \"long-range\" jumps exist.</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#44-probability-and-phasespace-evolution","title":"4.4 Probability and Phase\u2011Space Evolution","text":"<p>With the Q matrix as our \"engine,\" we can now numerically solve the master equation \\(\\partial_\\tau \\vec{P} = Q\\vec{P}\\) to observe how the probability distribution evolves from a sharp initial condition to the steady-state distribution. Theory tells us what the steady state is, but it doesn't explain how the system reaches the steady state. The transient behavior during the evolution process is equally important, as it reflects the system's relaxation dynamics and makes the abstract concept of \"probability flow\" concrete through animation.</p> <p>Now we solve the master equation to observe how the probability distribution dynamically evolves over time:</p> <pre><code>\"\"\"\nProbability Evolution and Phase Space Animation Demonstration\n\"\"\"\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\nfrom scipy.integrate import odeint\n\nclass BirthDeathAnimator:\n    def __init__(self, N=15, mu=1.0, lam=1.2):\n        self.N = N; self.mu = mu; self.lam = lam\n        self.Q = self._create_q_matrix()\n        self.t_max = 10\n        self.n_frames = 150\n        self.t_points = np.linspace(0, self.t_max, self.n_frames)\n    def _create_q_matrix(self):\n        Q = np.zeros((self.N, self.N))\n        for n in range(1, self.N):\n            if n &lt; self.N - 1:\n                Q[n+1, n] = self.mu * n\n            Q[n-1, n] = self.lam * n\n        for n in range(self.N):\n            Q[n, n] = -np.sum(Q[:, n])\n        return Q\n    def solve_master_equation(self, initial_state):\n        def master_eq(P, t): return self.Q @ P\n        P0 = np.zeros(self.N); P0[initial_state] = 1.0\n        return odeint(master_eq, P0, self.t_points)\n    def create_probability_evolution_animation(self, initial_state=5, save_path=None):\n        P_t = self.solve_master_equation(initial_state)\n        fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(10, 8))\n        fig.suptitle(f'Probability Distribution Evolution\\n\u03bc={self.mu}, \u03bb={self.lam}, Initial={initial_state}', fontsize=14, fontweight='bold')\n        states = np.arange(self.N)\n        bars = ax1.bar(states, P_t[0], alpha=0.8, color='skyblue', edgecolor='navy')\n        ax1.set_xlim(-0.5, self.N-0.5); ax1.set_ylim(0, 1.0)\n        ax1.set_xlabel('State n'); ax1.set_ylabel('Probability P(n,t)')\n        ax1.set_title('Instantaneous Probability Distribution'); ax1.grid(True, alpha=0.3)\n        stats_text = ax1.text(0.7, 0.95, '', transform=ax1.transAxes, va='top', fontsize=10,\n                              bbox=dict(boxstyle='round,pad=0.3', facecolor='lightblue', alpha=0.8))\n        key_states = [0, max(1, initial_state-2), initial_state, min(initial_state+2, self.N-1), min(initial_state+4, self.N-1)]\n        colors = ['red','orange','blue','green','purple']; lines=[]\n        for state,color in zip(key_states,colors):\n            line,=ax2.plot([],[],color=color,linewidth=2,label=f'State {state}',marker='o',markersize=2)\n            lines.append((line,state))\n        ax2.set_xlim(0,self.t_max); ax2.set_ylim(0,1.0)\n        ax2.set_xlabel('Time t'); ax2.set_ylabel('Probability P(n,t)')\n        ax2.set_title('Key State Probabilities Over Time'); ax2.legend(loc='upper right',fontsize=10)\n        ax2.grid(True, alpha=0.3)\n        time_line=ax2.axvline(x=0,color='black',linestyle='--',alpha=0.7)\n        def animate(frame):\n            current_time=self.t_points[frame]; current_prob=P_t[frame]\n            for bar,prob in zip(bars,current_prob):\n                bar.set_height(prob)\n                intensity = prob/np.max(current_prob) if np.max(current_prob)&gt;0 else 0\n                bar.set_color(plt.cm.viridis(intensity))\n            mean_state=np.sum(states*current_prob); max_prob_state=states[np.argmax(current_prob)]\n            stats_text.set_text(f'Time: {current_time:.2f}\\nMean State: {mean_state:.2f}\\nMost Probable State: {max_prob_state}')\n            for line,state in lines:\n                if frame&gt;0:\n                    x=self.t_points[:frame+1]; y=P_t[:frame+1,state]\n                    line.set_data(x,y)\n            time_line.set_xdata([current_time,current_time])\n            return [*bars,stats_text,*[line for line,_ in lines],time_line]\n        anim=animation.FuncAnimation(fig,animate,frames=self.n_frames,interval=80,blit=False,repeat=True)\n        if save_path:\n            anim.save(save_path, writer='pillow', fps=12, dpi=100)\n        plt.tight_layout(); plt.show(); return anim\n</code></pre> <p></p> <p>The top panel shows the probability \\(P(n,t)\\) at each time point, with color depth dynamically reflecting the probability magnitude (darker = higher probability), demonstrating how probability spreads from the initial \"spike.\" The bottom panel tracks the probability evolution of 5 representative states over time: State 0 is the absorbing state, with probability monotonically increasing; State 3 is below the initial state, showing probability flow toward lower states; State 5 is the initial state, with probability first decreasing then approaching the steady-state value; State 7 is above the initial state, showing the probability diffusion effect; and State 9 is a higher state, demonstrating the behavior in the high-state region.</p> <pre><code>    def create_phase_space_animation(self, initial_state=5, save_path=None):\n        \"\"\"\n        Create phase space evolution animation\n        Display comparison of statistical moment evolution trajectories for multiple initial states\n        \"\"\"\n        # Calculate evolution for multiple different initial states\n        initial_states = [1, max(2, initial_state-2), initial_state,\n                         min(initial_state+2, self.N-2), min(initial_state+4, self.N-2)]\n        colors = ['red', 'orange', 'blue', 'green', 'purple']\n        all_moments = []\n\n        for init_state in initial_states:\n            P_t = self.solve_master_equation(init_state)\n\n            # Calculate statistical moments\n            states = np.arange(self.N)\n            moments = np.zeros((len(self.t_points), 3))\n\n            for i, prob in enumerate(P_t):\n                # First moment: mean\n                moments[i, 0] = np.sum(states * prob)\n                # Second central moment: variance\n                moments[i, 1] = np.sum((states - moments[i, 0])**2 * prob)\n                # Third normalized moment: skewness (simplified calculation)\n                if moments[i, 1] &gt; 1e-6:  # Avoid division by zero\n                    moments[i, 2] = np.sum((states - moments[i, 0])**3 * prob) / (moments[i, 1]**(1.5))\n                else:\n                    moments[i, 2] = 0\n\n            all_moments.append(moments)\n\n        # Create 3D figure\n        fig = plt.figure(figsize=(12, 8))\n        ax = fig.add_subplot(111, projection='3d')\n\n        # Initialize multiple trajectory lines and current points\n        lines = []\n        points = []\n        for i, (color, init_state) in enumerate(zip(colors, initial_states)):\n            line, = ax.plot([], [], [], color=color, linewidth=2, alpha=0.8,\n                           label=f'Initial State {init_state}')\n            point, = ax.plot([], [], [], 'o', color=color, markersize=6)\n            lines.append(line)\n            points.append(point)\n\n        # Set axes\n        ax.set_xlabel('Mean &lt;n&gt;')\n        ax.set_ylabel('Variance Var(n)')\n        ax.set_zlabel('Skewness Skew(n)')\n        ax.set_title(f'Statistical Moment Evolution Comparison for Multiple Initial States\\n\u03bc={self.mu}, \u03bb={self.lam}')\n        ax.legend()\n\n        # Dynamically set axis ranges (based on all trajectories)\n        all_moments_combined = np.concatenate(all_moments, axis=0)\n        margin = 0.1\n        ax.set_xlim(np.min(all_moments_combined[:, 0])*(1-margin),\n                   np.max(all_moments_combined[:, 0])*(1+margin))\n        ax.set_ylim(np.min(all_moments_combined[:, 1])*(1-margin),\n                   np.max(all_moments_combined[:, 1])*(1+margin))\n        z_range = np.max(all_moments_combined[:, 2]) - np.min(all_moments_combined[:, 2])\n        ax.set_zlim(np.min(all_moments_combined[:, 2])-z_range*margin,\n                   np.max(all_moments_combined[:, 2])+z_range*margin)\n\n        # Information text (avoid obstruction)\n        time_text = ax.text2D(0.02, 0.98, '', transform=ax.transAxes, fontsize=11,\n                             verticalalignment='top',\n                             bbox=dict(boxstyle=\"round,pad=0.3\", facecolor=\"lightgreen\", alpha=0.8))\n\n        def animate_phase(frame):\n            \"\"\"Phase space animation update function\"\"\"\n            current_time = self.t_points[frame]\n\n            # Update all trajectory lines and current points\n            for i, (line, point, moments) in enumerate(zip(lines, points, all_moments)):\n                if frame &gt; 0:\n                    line.set_data_3d(moments[:frame+1, 0], moments[:frame+1, 1], moments[:frame+1, 2])\n                    point.set_data_3d([moments[frame, 0]], [moments[frame, 1]], [moments[frame, 2]])\n\n            # Update time information (display information from main trajectory)\n            main_moments = all_moments[2]  # Use middle initial state (index 2) as main display\n            time_text.set_text(\n                f'Time: {current_time:.2f}\\n'\n                f'Main Trajectory (Initial={initial_state}):\\n'\n                f'  Mean: {main_moments[frame, 0]:.2f}\\n'\n                f'  Variance: {main_moments[frame, 1]:.2f}\\n'\n                f'  Skewness: {main_moments[frame, 2]:.2f}'\n            )\n\n            return [*lines, *points, time_text]\n\n        # Create animation\n        anim = animation.FuncAnimation(fig, animate_phase, frames=self.n_frames,\n                                     interval=80, blit=False, repeat=True)\n\n        # Save animation\n        if save_path:\n            anim.save(save_path, writer='pillow', fps=12, dpi=100)\n\n        plt.show()\n        return anim\n</code></pre> <pre><code># Demonstration usage\nif __name__ == \"__main__\":\n    # Create animation demonstrator\n    animator = BirthDeathAnimator(N=15, mu=1.0, lam=1.2)\n\n    # 1) Probability evolution animation\n    anim1 = animator.create_probability_evolution_animation(\n        initial_state=5,\n        save_path=\"probability_evolution.gif\"\n    )\n\n    # 2) Phase space evolution animation\n    anim2 = animator.create_phase_space_animation(\n        initial_state=5,\n        save_path=\"phase_space_evolution.gif\"\n    )\n</code></pre> <p></p> <p>One can clearly see the net flow of probability from high states to low states, and the evolution paths of the system in (mean, variance, skewness) space. The trajectories ultimately converge to a fixed point corresponding to the steady state, reflecting the system's relaxation dynamics.</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#5-longtime-dynamics-and-general-properties","title":"5. Long\u2011Time Dynamics and General Properties","text":""},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#51-reaching-equilibrium-steady-state","title":"5.1 Reaching Equilibrium: Steady State","text":"<p>At a steady state (stationary distribution) \\(\\vec\\pi\\), the time derivative vanishes:</p> \\[ \\partial_\\tau\\vec P(\\tau)=0. \\] <p>Thus</p> \\[ Q\\,\\vec\\pi=0, \\] <p>so \\(\\vec\\pi\\) is a right eigenvector of \\(Q\\) with eigenvalue 0. This links a dynamical question to linear algebra (the null space of \\(Q\\)). Probability conservation also implies a left eigenvector of ones: \\((1,1,\\ldots,1)Q=0\\).</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#52-structure-of-the-state-space","title":"5.2 Structure of the State Space","text":"<ul> <li>Absorbing states: once entered, the system cannot leave. In the column-sum convention used here (transitions from column to row), an absorbing state has \\(Q_{ii}=0\\) and all \\(Q_{ji}=0\\) for \\(j\\ne i\\).</li> </ul> <ul> <li> <p>Transient states: states that can be left and that may never be revisited (nonzero probability). In systems with absorbing states, all nonabsorbing states are transient.</p> </li> <li> <p>Irreducibility: a system (or subset) is irreducible if every state can reach every other in finitely many steps; otherwise it is reducible. A block-diagonal \\(Q\\) indicates a reducible system, corresponding to two independent subsystems \\(A\\) and \\(B\\) that do not communicate with each other,</p> </li> </ul> \\[ Q=\\begin{pmatrix}A&amp;0\\\\0&amp;B\\end{pmatrix}. \\]"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#53-perronfrobenius-guaranteeing-a-unique-physical-steady-state","title":"5.3 Perron\u2013Frobenius: Guaranteeing a Unique Physical Steady State","text":"<p>For an irreducible system, we ask whether a physically meaningful (all components positive) steady state exists and is unique. The Perron-Frobenius theorem gives affirmative answers.</p> <ul> <li>Uniqueness: eigenvalue 0 is simple (algebraic multiplicity 1), so the solution of \\(Q\\vec\\pi=0\\), normalized by \\(\\sum_n\\pi_n=1\\), is unique.</li> <li>Positivity: the unique steady eigenvector \\(\\vec\\pi\\) can be chosen strictly positive (\\(\\pi_n&gt;0\\) for all \\(n\\)), giving a bona fide probability distribution.</li> </ul> <p>Thus, under the intuitive condition of irreducibility (\"sufficient mixing\"), the system relaxes to a unique, physically sensible steady state. In reducible systems (e.g., with absorbing states), the long-time outcome can depend on the initial state. The theorem links a graph property (strong connectivity of the state space) to a spectral property (a simple zero eigenvalue), which in turn guarantees a key physical property (existence and uniqueness of a steady-state probability distribution with strictly positive components).</p>"},{"location":"notes/7.%20Forward%20Master%20Equation%20and%20the%20Q%20Matrix/#summary","title":"Summary","text":"<p>We built a theory from global to local and back to global:</p> <ol> <li>Start from the CK equation for finite\u2011time evolution.</li> <li>Take the infinitesimal limit to derive the forward master equation, a differential equation for instantaneous change.</li> <li>Encapsulate transition information in the Q matrix\u2014the engine of probability evolution.</li> <li>Interpret the master equation as a gain\u2013loss balance, i.e., a continuity equation for probability.</li> <li>Apply the framework to the linear birth\u2013death process: construct \\(Q\\) from microscopic rules and relate its structure to dynamics.</li> <li>Analyze long\u2011time behavior and invoke Perron\u2013Frobenius: irreducibility guarantees a unique, physically meaningful steady state.</li> </ol>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/","title":"Introduction: Seeking a Unique and Physical Steady State","text":"<p>In the previous lecture, Prof. Erwin Frey developed the core tools for Markov processes\u2014the forward master equation and the Q matrix. The time evolution of a probability distribution is governed by</p> \\[\\frac{dP}{dt}(t) = Q\\,P(t),\\] <p>where \\(P(t)\\) is a column vector with component \\(P_n(t)\\) the probability to be in state \\(n\\) at time \\(t\\). The Q matrix (transition\u2011rate matrix) has</p> <ul> <li>Off\u2011diagonals \\(Q_{n m}=w_{m\\to n}\\ge 0\\) for \\(n\\ne m\\) (rate from \\(m\\) to \\(n\\)).</li> <li>Diagonals \\(Q_{n n} = -\\sum_{m\\ne n} w_{n\\to m}\\) (total exit rate from \\(n\\)).</li> </ul> <p>Crucially, Q has column sums equal to zero:</p> \\[\\sum_n Q_{n m}=0.\\] <p></p> <p>In many fields\u2014physics, chemistry, biology\u2014we care most about long\u2011time behavior: what state does the system approach? A time\u2011independent distribution is a steady state (or equilibrium). The column\u2011sum property implies that steady states exist. A steady distribution \\(\\pi\\) satisfies \\(\\frac{d\\pi}{dt}=0\\), and thus</p> \\[Q\\,\\pi=0.\\] <p>In linear\u2011algebra terms, steady states are right eigenvectors of Q with eigenvalue 0. Column sums equal to zero guarantee that \\(0\\) is an eigenvalue of Q.</p> <p>This raises key questions:</p> <p>1) Uniqueness: Is \\(\\pi\\) the unique long\u2011time fate, or can multiple steady states exist, depending on initial conditions? 2) Physicality: As a probability distribution, all components \\(\\pi_n\\ge 0\\); can we guarantee this, or even strict positivity \\(\\pi_n&gt;0\\)? 3) Reachability: Under what physical conditions do uniqueness and positivity hold?</p> <p>To answer these, we use a powerful mathematical tool about nonnegative matrices: the Perron\u2013Frobenius theorem. Our goal is to use it to establish that, under suitable conditions, the process relaxes to a unique, physically meaningful steady state.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#1-perronfrobenius-a-powerful-guarantee-for-positive-matrices","title":"1. Perron\u2013Frobenius: A Powerful Guarantee for Positive Matrices","text":"<p>The Perron\u2013Frobenius (PF) theorem is a deep result in linear algebra about eigenvalues and eigenvectors of nonnegative (and positive) matrices.</p> <p>Originating with Oskar Perron (1907) and Ferdinand Frobenius (1912), the theorem studies nonnegative matrices (\\(\\ge 0\\)) and positive matrices (\\(&gt;0\\)). For irreducible nonnegative matrices, there exists a unique largest real eigenvalue (the Perron root) with a corresponding eigenvector having strictly positive components.</p> <p>Applications span Markov chains (uniqueness and physicality of steady states), population dynamics, economic input\u2013output models, network science (PageRank and influence), ecology (stability), and open quantum systems.</p> <p></p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#11-statement-of-the-theorem","title":"1.1 Statement of the Theorem","text":"<p>The theorem can be stated in simple terms as follows:</p> <p>For a real square matrix \\(M\\) with all elements being nonnegative (\\(M_{nm} \\geq 0\\)) and indecomposable (also called irreducible), the following conclusions hold:</p> <p>1) There exists a unique, real positive eigenvalue \\(\\lambda\\) that has the largest absolute value among all eigenvalues. That is, for any other eigenvalue \\(\\mu\\) of \\(M\\) (which may be complex), we have \\(|\\mu| &lt; \\lambda\\). This special eigenvalue \\(\\lambda\\) is called the Perron root or dominant eigenvalue.</p> <p>2) The eigenvector \\(p^{(\\lambda)}\\) corresponding to the Perron root \\(\\lambda\\) is unique (up to multiplication by a positive constant factor) and can be chosen such that all its components are strictly positive (\\(p_n^{(\\lambda)} &gt; 0\\) for all \\(n\\)).</p> <p></p> <p>Spectrally, all eigenvalues lie inside a disk of radius \\(\\lambda\\) centered at the origin in the complex plane; the Perron root sits on the positive real axis, strictly outside all others.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#12-physical-meaning-of-the-assumptions","title":"1.2 Physical Meaning of the Assumptions","text":"<p>To understand the power of the PF theorem, we must deeply analyze its two core prerequisite conditions.</p> <p>Terminology note: In this chapter, \"indecomposable\" and \"irreducible\" are synonymous. To match standard Markov process and PF theorem usage, we will use \"irreducible\" henceforth.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#nonnegativity-m_nm-geq-0","title":"Nonnegativity (\\(M_{nm} \\geq 0\\))","text":"<p>This condition is very natural in physical and biological models. Matrix elements often represent quantities that are inherently non-negative, such as species counts, chemical concentrations, or in Markov chains, transition probabilities. This condition is the foundation of the entire theorem.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#indecomposability-irreducibility","title":"Indecomposability (Irreducibility)","text":"<p>This is the most crucial physical condition when applying the PF theorem. A matrix is indecomposable, meaning the system it describes is a whole, rather than composed of several isolated, non-communicating subsystems. This concept can be understood through several approaches to build the strongest physical intuition:</p> <ul> <li> <p>Graph theory perspective: We can imagine each state \\(n\\) of the system as a node in a graph. If matrix element \\(M_{nm} &gt; 0\\), we draw a directed edge from node \\(m\\) to node \\(n\\), indicating the system can transition from state \\(m\\) to state \\(n\\). Then, the indecomposability of the matrix is equivalent to this directed graph being strongly connected. Strong connectivity means that from any node, there exists a path of directed edges that can reach any other node in the graph.</p> </li> <li> <p>Physical perspective: An indecomposable (or irreducible) system, physically means the system can explore all possible state spaces over time. There are no so-called \"traps\" or \"islands\" in the system\u2014that is, certain sets of states that, once entered, the system can never leave, or certain states that can never be reached from other parts of the system. As the professor mentioned in class, this is equivalent to \"all states are reachable.\"</p> </li> <li> <p>Formal definition: Mathematically, indecomposability is defined as the matrix having no non-trivial invariant subspaces. A subspace \\(V\\) is invariant if for any vector \\(v \\in V\\) belonging to that subspace, after transformation by matrix \\(M\\), the result \\(Mv\\) still lies within that subspace.</p> </li> </ul> <p>Indecomposability is the mathematical language that guarantees the consistency of the system's global behavior. If a system is decomposable, it's as if it's divided into several parts by an invisible wall. Physically, this means the system's long-term behavior will depend entirely on its initial state. If it starts from \"region A,\" it will be forever trapped in the steady state of \"region A\"; if it starts from \"region B,\" it will reach the steady state of \"region B.\" This leads to multiple possible steady states, destroying uniqueness.</p> <p>Therefore, the indecomposability condition, by excluding this possibility of \"imprisonment,\" forces the system, regardless of where it starts, to eventually explore all states and tend toward a globally unified steady state. This deeply connects an abstract mathematical condition with a key physical property\u2014the uniqueness of steady states.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#2-applying-pf-to-q-proof-of-a-unique-steady-state","title":"2. Applying PF to Q: Proof of a Unique Steady State","text":"<p>Q is not nonnegative (diagonals are negative). We therefore construct an auxiliary matrix that is nonnegative.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#21-constructing-a-nonnegative-matrix-m","title":"2.1 Constructing a Nonnegative Matrix \\(M\\)","text":"<p>Define</p> \\[ M_{n m}:=Q_{n m}+\\alpha\\,\\delta_{n m}, \\] <p>where \\(\\delta_{n m}\\) is the Kronecker delta and</p> \\[ \\alpha=\\max_n |Q_{n n}|=\\max_n \\sum_{m\\ne n} w_{n\\to m} \\] <p>is the maximal exit rate. This \u201clifts\u201d the diagonal to make \\(M\\ge 0\\).</p> <p>Note: \u201c:=\u201d reads \u201cis defined as\u201d.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#22-stepbystep-derivation","title":"2.2 Step\u2011by\u2011Step Derivation","text":"<p>1.\\(M\\ge 0\\): Off\u2011diagonals \\(M_{n m}=Q_{n m}=w_{m\\to n}\\ge 0\\) for \\(n\\ne m\\). Diagonals \\(M_{n n}=Q_{n n}+\\alpha=-\\sum_{m\\ne n} w_{n\\to m}+\\alpha\\ge 0\\) by definition of \\(\\alpha\\).</p> <p>2.Link eigenproblems: For \\(Mp=\\lambda p\\), \\((Q+\\alpha I)p=\\lambda p\\), so</p> \\[Qp=(\\lambda-\\alpha)p.\\] <p>Thus Q and M share eigenvectors; Q's eigenvalues equal M's eigenvalues minus \\(\\alpha\\).</p> <p>3.Apply PF to \\(M\\): For an irreducible Markov process, the state space is strongly connected. Hence \\(M\\) is irreducible. PF yields a unique dominant eigenvalue \\(\\lambda_{\\mathrm{PF}}\\) with a strictly positive eigenvector \\(p^{(\\lambda_{\\mathrm{PF}})}\\).</p> <p>4.Determine \\(\\lambda_{\\mathrm{PF}}\\): This is the core step of the proof, completely reproducing the professor's blackboard derivation.</p> <p></p> <p>We sum the eigenvalue equation of \\(M\\) over all components \\(n\\):</p> \\[ \\sum_n (Mp^{(\\lambda_{\\mathrm{PF}})})_n = \\sum_n \\sum_m M_{nm} p_m^{(\\lambda_{\\mathrm{PF}})} = \\sum_n \\lambda_{\\mathrm{PF}} p_n^{(\\lambda_{\\mathrm{PF}})} \\] <p>On the left side, we swap the order of summation and substitute the definition of \\(M\\):</p> \\[ \\sum_m \\left(\\sum_n M_{nm}\\right) p_m^{(\\lambda_{\\mathrm{PF}})} = \\sum_m \\left(\\sum_n (Q_{nm} + \\alpha \\delta_{nm})\\right) p_m^{(\\lambda_{\\mathrm{PF}})} = \\lambda_{\\mathrm{PF}} \\sum_n p_n^{(\\lambda_{\\mathrm{PF}})} \\] <p>The summation inside the brackets can be calculated. We know that the column sums of the \\(Q\\) matrix are zero, i.e., \\(\\sum_n Q_{nm} = 0\\). And \\(\\sum_n \\alpha \\delta_{nm}\\) is non-zero only when \\(n = m\\), with value \\(\\alpha\\). Therefore, the value inside the brackets is \\(\\alpha\\). The equation becomes:</p> \\[ \\sum_m \\alpha p_m^{(\\lambda_{\\mathrm{PF}})} = \\lambda_{\\mathrm{PF}} \\sum_n p_n^{(\\lambda_{\\mathrm{PF}})} \\] <p>Since \\(\\sum_m p_m^{(\\lambda_{\\mathrm{PF}})}\\) and \\(\\sum_n p_n^{(\\lambda_{\\mathrm{PF}})}\\) are the same sum, and according to the PF theorem, all components of \\(p^{(\\lambda_{\\mathrm{PF}})}\\) are positive, this sum is also positive and can be canceled from both sides. We finally obtain an amazingly simple result:</p> \\[ \\lambda_{\\mathrm{PF}} = \\alpha \\] <p>5.Return to Q: From \\(Qp=(\\lambda-\\alpha)p\\), Q's eigenvalue associated with \\(p^{(\\lambda_{\\mathrm{PF}})}\\) is</p> \\[\\lambda_Q=\\lambda_{\\mathrm{PF}}-\\alpha=0.\\]"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#23-summary-and-physical-meaning","title":"2.3 Summary and Physical Meaning","text":"<p>This proof has answered our initial questions. It tells us:</p> <p>For any continuous-time Markov process with an irreducible state space (i.e., all states are mutually accessible), its transition rate matrix \\(Q\\) has a unique eigenvector with eigenvalue 0. According to the Perron-Frobenius theorem, this eigenvector can be chosen to have all components strictly positive.</p> <p>This vector is precisely the unique, physically meaningful steady-state distribution \\(\\pi\\) that we've been seeking. Its uniqueness guarantees that the system's long-term behavior is deterministic, independent of the initial state. Its positivity (\\(\\pi_n &gt; 0\\)) ensures that in the steady state, every state in the system has a non-zero probability of being visited, which aligns with our physical intuition about an \"active,\" irreducible system.</p> <p>Furthermore, since \\(\\lambda_{\\mathrm{PF}} = \\alpha\\) is the dominant eigenvalue of \\(M\\), all other eigenvalues \\(\\mu\\) satisfy \\(|\\mu| &lt; \\alpha\\). Consequently, all other eigenvalues of \\(Q\\), given by \\(\\lambda_Q' = \\mu - \\alpha\\), will satisfy \\(\\mathrm{Re}(\\lambda_Q') &lt; 0\\). These eigenvalues with negative real parts represent all the \"transient modes\" in the system that decay exponentially with time. As time approaches infinity, these modes will all disappear, leaving only the steady-state mode corresponding to the eigenvalue 0.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#3-characterizing-balance-stationary-and-reversible-processes","title":"3. Characterizing Balance: Stationary and Reversible Processes","text":"<p>With uniqueness established for irreducible systems, we now characterize steady behavior.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#31-stationary-process","title":"3.1 Stationary Process","text":"<p>In a stationary process, statistics are invariant under time shifts:</p> <ul> <li>For any \\(t\\), \\(\\mathrm{Prob}\\{X(t)=n\\}=\\pi_n\\).</li> <li>Joint probabilities depend only on time differences, e.g., \\(\\mathrm{Prob}\\{X(t_1)=n_1, X(t_2)=n_2\\}\\) depends only on \\(t_2-t_1\\).</li> </ul>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#32-reversible-process","title":"3.2 Reversible Process","text":"<p>A stationary process is reversible if its statistics are invariant under time reversal. Intuitively, a time\u2011reversed movie is statistically indistinguishable from a forward one. Formally,</p> \\[ \\mathrm{Prob}\\{X(t_1)=n_1,\\ldots,X(t_k)=n_k\\}=\\mathrm{Prob}\\{X(t_1)=n_k,\\ldots,X(t_k)=n_1\\}. \\] <p>Reversibility implies stationarity: if statistics evolve in time, forward and backward movies differ.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#4-detailed-balance-microscopic-signature-of-thermodynamic-equilibrium","title":"4. Detailed Balance: Microscopic Signature of Thermodynamic Equilibrium","text":"<p>Reversibility can be expressed via detailed balance. Any steady state must satisfy overall (global) balance: for each state, total inflow equals total outflow; otherwise its probability changes in time. Overall balance, however, allows persistent net cycles (currents) in the network: like a ring of pipes with steady water level but circulating flow.</p> <p>Detailed balance is stricter: for every pair of directly connected states, the bidirectional probability fluxes are exactly equal.</p> <p></p> <p>Left: overall balance\u2014split the state space by an arbitrary cut into \\(S_+\\) and \\(S_-\\). In steady state, the total flux across the cut from \\(S_-\\) to \\(S_+\\) equals that from \\(S_+\\) back to \\(S_-\\). Otherwise probability would accumulate on one side and stationarity would be violated. Overall balance is universal, but it permits net cycles (e.g., \\(A\\to B\\to C\\to A\\)), provided each state\u2019s (or subset\u2019s) total in/out flux matches.</p> <p>Right: detailed balance\u2014consider a single edge between adjacent states \\(j\\) and \\(k\\). In steady state, flux \\(j\\to k\\) equals flux \\(k\\to j\\). With every edge locally balanced, no net cycles can exist.</p> <p>Summary:</p> Property Overall balance Detailed balance Scope Macroscopic cut between subsets Each microscopic edge between neighbors Applicability Required by all steady states Only specific (reversible) steady states Cycles Net cycles allowed No net cycles Strength Weaker condition Strong constraint"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#41-detailed-balance-condition","title":"4.1 Detailed Balance Condition","text":"\\[\\pi_j\\,w_{j\\to k}=\\pi_k\\,w_{k\\to j}.\\] <p>This relation holds in steady state \\(\\pi\\) for any two directly connected states \\(j\\) and \\(k\\).</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#42-physical-interpretation-no-net-probability-flux","title":"4.2 Physical Interpretation: No Net Probability Flux","text":"<p>\\(\\pi_j\\,w_{j\\to k}\\) is the probability flux (current density) from \\(j\\) to \\(k\\) per unit time in steady state. Detailed balance enforces pairwise equality of opposing fluxes on every edge\u2014no net local current anywhere.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#43-derivation-reversibility-leftrightarrow-detailed-balance","title":"4.3 Derivation: Reversibility \\(\\Leftrightarrow\\) Detailed Balance","text":"<p>From reversibility, for any \\(j,k\\) and \\(t,t+\\tau\\),</p> \\[\\mathrm{Prob}\\{X(t)=j, X(t+\\tau)=k\\}=\\mathrm{Prob}\\{X(t)=k, X(t+\\tau)=j\\}.\\] <p>Using conditional probabilities in steady state,</p> \\[P(k,t+\\tau\\mid j,t)\\,\\pi_j=P(j,t+\\tau\\mid k,t)\\,\\pi_k.\\] <p>For infinitesimal \\(\\tau=\\Delta t\\) and \\(j\\ne k\\), \\(P(k,t+\\Delta t\\mid j,t)\\approx w_{j\\to k}\\,\\Delta t\\). Dividing by \\(\\Delta t\\) gives detailed balance:</p> \\[w_{j\\to k}\\,\\pi_j=w_{k\\to j}\\,\\pi_k.\\] <p>Thus a stationary Markov process is reversible iff it satisfies detailed balance.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#key-distinction-global-vs-detailed-balance","title":"Key Distinction: Global vs. Detailed Balance","text":"<p>This is a crucial conceptual distinction that relates to how we understand different types of steady states.</p> <p>The steady-state condition we derived from \\(Q\\pi = 0\\) is actually a global balance condition. It requires that the total inflow probability to each state equals the total outflow probability:</p> \\[\\text{Total inflow to } j \\text{ probability flux} = \\sum_{k \\neq j} \\pi_k w_{k \\to j} = \\text{Total outflow from } j \\text{ probability flux} = \\sum_{k \\neq j} \\pi_j w_{j \\to k}\\] <p>Detailed balance is a much stronger condition than global balance. If detailed balance holds, i.e., \\(\\pi_k w_{k \\to j} = \\pi_j w_{j \\to k}\\) for all \\(k\\), then summing this equality over all \\(k \\neq j\\) naturally gives global balance. The converse is not true.</p> <p>We can understand the distinction between the two through a physical analogy. Imagine a lake and a river.</p> <ul> <li> <p>Lake (thermodynamic equilibrium): The lake water is in equilibrium, with a constant macroscopic water level. At the microscopic level, water molecules are constantly moving, but the flux of water molecules from any point A to point B is exactly canceled by the flux from point B to point A. This is detailed balance, with no macroscopic net water flow.</p> </li> <li> <p>River (nonequilibrium steady state): A river can also have a stable water level (steady state), but the river water has a clear downstream direction overall. At any cross-section, the water inflow from upstream equals the outflow downstream, maintaining water level stability. This is global balance. However, if you examine two points A and B in the river (A upstream), the net water flux from A to B far exceeds the reverse flux from B to A. Here there exists a net probability flux (water flow).</p> </li> </ul> <p>This analogy reveals a profound physical principle: the distinction between detailed balance and global balance is precisely the distinction between thermodynamic equilibrium and nonequilibrium steady states (NESS) in stochastic processes.</p> <p>A system satisfying detailed balance is in true thermodynamic equilibrium, with no net flow of energy or matter. A system satisfying only global balance is in a nonequilibrium steady state maintained by continuous external driving (such as energy input), like a living cell. This distinction connects the abstract mathematical concepts of this lecture with the profound principles of physics and biology.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#5-examples-simulation-and-physical-intuition","title":"5. Examples: Simulation and Physical Intuition","text":""},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#51-linear-birthdeath-a-system-with-detailed-balance","title":"5.1 Linear Birth\u2013Death: A System with Detailed Balance","text":""},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#model","title":"Model","text":"<p>Population size \\(n\\); two events:</p> <ul> <li>Birth: each particle creates a new one at rate \\(\\lambda\\), so \\(n\\to n+1\\) has total rate \\(\\lambda_n=\\lambda n\\).</li> <li>Death: each particle disappears at rate \\(\\mu\\), so \\(n\\to n-1\\) has total rate \\(\\mu_n=\\mu n\\).</li> </ul> <p>This is a 1D chain with nearest\u2011neighbor transitions. Whenever a steady state exists, it must satisfy detailed balance since no loops exist to support cycles.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#steady-state-via-detailed-balance","title":"Steady State via Detailed Balance","text":"<p>For adjacent \\(n\\) and \\(n-1\\):</p> \\[\\pi_{n-1}\\,w_{n-1\\to n}=\\pi_n\\,w_{n\\to n-1}.\\] <p>With rates,</p> \\[\\pi_{n-1}\\,\\lambda(n-1)=\\pi_n\\,\\mu n,\\] <p>giving</p> \\[\\pi_n=\\pi_{n-1}\\,\\frac{\\lambda(n-1)}{\\mu n}.\\] <p>Starting from \\(\\pi_1=\\pi_0\\,\\frac{\\lambda\\cdot 0}{\\mu\\cdot 1}=0\\), all \\(\\pi_{n&gt;0}=0\\). Thus the unique steady state is extinction: \\(\\pi_0=1\\).</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#python-gillespie","title":"Python (Gillespie)","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef linear_birth_death_gillespie(n0, lamb, mu, t_max):\n    \"\"\"\n    Simulate linear birth-death process using Gillespie algorithm.\n    \"\"\"\n    t = 0.0; n = n0\n    times = [t]; populations = [n]\n    while t &lt; t_max:\n        if n == 0: break\n        birth_rate = lamb * n; death_rate = mu * n\n        total_rate = birth_rate + death_rate\n        dt = np.random.exponential(1.0 / total_rate)\n        t += dt\n        if np.random.rand() &lt; birth_rate / total_rate:\n            n += 1\n        else:\n            n -= 1\n        times.append(t); populations.append(n)\n    return np.array(times), np.array(populations)\n\n# --- Simulation parameters ---\ninitial_population = 10\nlambda_rate = 1.0\nmu_rate = 1.1\nsimulation_time = 50.0\nnum_simulations = 500\n\n# --- Run multiple simulations ---\nfinal_populations = []\nplt.figure(figsize=(12, 8))\n\n# Example trajectories\nplt.subplot(2, 1, 1)\nfor i in range(5):\n    times, populations = linear_birth_death_gillespie(initial_population, lambda_rate, mu_rate, simulation_time)\n    plt.step(times, populations, where='post', alpha=0.7)\n\nplt.title(f'Example Trajectories of Linear Birth-Death Process ($n_0={initial_population}, \\\\lambda={lambda_rate}, \\\\mu={mu_rate}$)')\nplt.xlabel('Time'); plt.ylabel('Population Size'); plt.grid(True)\n\n# Final population histogram\nfor _ in range(num_simulations):\n    _, populations = linear_birth_death_gillespie(initial_population, lambda_rate, mu_rate, simulation_time)\n    final_populations.append(populations[-1])\n\nplt.subplot(2, 1, 2)\nplt.hist(final_populations, bins=np.arange(-0.5, max(final_populations) + 1.5, 1), density=True, rwidth=0.8)\nplt.title(f'Distribution of Final Population Size after {num_simulations} Simulations (Steady State)')\nplt.xlabel('Final Population Size'); plt.ylabel('Probability Density'); plt.grid(True)\nplt.xticks(np.arange(0, max(final_populations) + 1, 1))\nplt.tight_layout(); plt.show()\n</code></pre> <p>Trajectories fluctuate but ultimately reach \\(0\\); the histogram concentrates at \\(0\\) for long times, matching \\(\\pi_0=1, \\pi_{n&gt;0}=0\\).</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#52-1d-random-walk-with-absorbing-boundaries-no-nontrivial-steady-state","title":"5.2 1D Random Walk with Absorbing Boundaries: No Nontrivial Steady State","text":""},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#model_1","title":"Model","text":"<p>1D random walk with two absorbing boundaries.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#why-pf-fails-here","title":"Why PF Fails Here","text":"<p>The presence of absorbing classes makes the chain reducible; irreducibility fails, so PF\u2019s uniqueness/positivity conclusion does not apply.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#trivial-steady-state","title":"Trivial \u201cSteady State\u201d","text":"<p>Probability leaks from \\(n&gt;0\\) and accumulates at absorbing states; only trivial absorbing distributions remain.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#python","title":"Python","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef random_walk_1d_two_boundaries(start_pos, n_steps, boundary_left=0, boundary_right=10):\n    \"\"\"\n    Simulate a one-dimensional random walk with two absorbing boundaries.\n    \"\"\"\n    position = start_pos\n    path = [position]\n    for _ in range(n_steps):\n        if position == boundary_left or position == boundary_right:\n            path.append(position)\n            continue\n        step = np.random.choice([-1, 1])\n        position += step\n        path.append(position)\n    return path\n\n# --- Simulation parameters ---\ninitial_position = 5\nmax_steps = 500\nnum_trajectories = 20\nboundary_left_pos = 0\nboundary_right_pos = 20\n\n# --- Run and plot multiple trajectories ---\nplt.figure(figsize=(12, 7))\nfor i in range(num_trajectories):\n    path = random_walk_1d_two_boundaries(initial_position, max_steps, boundary_left_pos, boundary_right_pos)\n    plt.plot(path, alpha=0.7, color=plt.cm.cool(i / num_trajectories))\n\n# Absorbing boundaries\nplt.axhline(y=boundary_left_pos, color='r', linestyle='--', linewidth=2, label=f'Left Absorbing Boundary (Position {boundary_left_pos})')\nplt.axhline(y=boundary_right_pos, color='r', linestyle='--', linewidth=2, label=f'Right Absorbing Boundary (Position {boundary_right_pos})')\n\nplt.title(f'{num_trajectories} Random Walk Trajectories in [{boundary_left_pos}, {boundary_right_pos}] Interval')\nplt.xlabel('Steps'); plt.ylabel('Position'); plt.legend(); plt.grid(True)\nplt.ylim(bottom=boundary_left_pos - 1, top=boundary_right_pos + 1)\nplt.show(); plt.close()\n</code></pre> <p>As expected with two absorbing boundaries, trajectories eventually hit one of the absorbing states (left or right boundary). Probability leaks out of interior states and accumulates at the absorbing boundaries; a nontrivial steady state does not exist.</p>"},{"location":"notes/8.%20Perron%E2%80%93Frobenius%20Theorem%2C%20Steady%20States%2C%20and%20Detailed%20Balance/#conclusion","title":"Conclusion","text":"<p>We have successfully addressed the fundamental questions about whether the long-term behavior governed by Q is predictable and unique:</p> <p>1.Perron-Frobenius provides the key mathematical tool. For irreducible systems where all states communicate, the process converges to a unique steady state with strictly positive components. This mathematical guarantee underpins the stability observed in many physical, chemical, and biological systems.</p> <p>2.We distinguished between different types of steady states: detailed balance (reversible, thermodynamic equilibrium, no currents) versus global balance (nonequilibrium steady states maintained by external driving, allowing net cycles). This distinction is crucial for understanding the difference between true thermodynamic equilibrium and nonequilibrium steady states.</p> <p>3.Through concrete examples, we demonstrated these principles in action. The linear birth-death process illustrates how a system reaches a (trivial) equilibrium under detailed balance conditions. The random walk with absorbing boundaries clearly warns us that when the crucial condition of irreducibility is violated, the system cannot maintain dynamic balance and instead decays to one or more absorbing states.</p> <p>In summary, this lecture has provided us with a complete set of analytical tools that enable us to understand and predict the ultimate fate of a large class of stochastic systems after long-term evolution. The Perron-Frobenius theorem serves as the mathematical foundation that connects abstract linear algebra with the physical reality of complex systems, ensuring that under appropriate conditions, nature itself guarantees the emergence of unique, physically meaningful steady states.</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/","title":"Introduction","text":"<p>This lecture marks a key step in our study of stochastic processes. In previous lectures we established the master equation framework that describes how probabilities evolve among states. Now we move from describing \u201chow\u201d evolution happens to understanding \u201cwhy\u201d \u2014 the thermodynamic meaning behind these evolutions.</p> <p>We leave the ideal world of equilibrium and step into the broader, real realm of nonequilibrium physics. When detailed balance is broken, the system supports persistent probability currents, like steady water flow in a river. Such one\u2011way, irreversible flow is a hallmark of living processes, chemical reactions, and all systems driven by external energy. We will start from a single stochastic trajectory, quantify irreversibility, and arrive at entropy production \u2014 the direct microscopic manifestation of the second law of thermodynamics.</p> <p>This lecture is the bridge between microscopic randomness and the macroscopic \u201carrow of time.\u201d</p> <p>We first contrast two fundamentally different classes of stochastic processes.</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#reversible-process","title":"Reversible Process","text":"<p>Reversible processes microscopically realize thermodynamic equilibrium and satisfy detailed balance. Time has no preferred direction; past and future are statistically indistinguishable.</p> <p>1) Time symmetry: film a reversible process and play it backward; the backward movie is statistically indistinguishable from the forward one. A Brownian pollen grain in equilibrium water looks equally random in either direction.</p> <p>2) Microscopic balance (detailed balance):</p> \\[ \\pi_j w_{j\\to k} = \\pi_k w_{k\\to j}. \\] <p>In steady state, every directly connected pair \\(j,k\\) has exactly equal opposing fluxes. This is more than global balance; it is pairwise balance on every edge.</p> <p>3) No net cycles: with every microscopic path balanced by its reverse, there are no persistent probability cycles. Like a lake: the water level is steady and every microscopic flow A\u2192B is canceled by B\u2192A; macroscopically there is no current.</p> <p>4) Simple relaxation: dynamics are \u201cpure\u201d \u2014 monotone, non\u2011oscillatory exponential relaxation to equilibrium.</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#irreversible-process","title":"Irreversible Process","text":"<p>Irreversible processes break detailed balance and characterize active, energy\u2011consuming nonequilibrium systems. They endow time with a direction.</p> <p>1) Time asymmetry: backward movies are statistically different. A molecular motor consumes ATP and walks directionally; the reversed movie would synthesize ATP while walking backward \u2014 not spontaneous.</p> <p>2) Persistent microscopic currents: breaking detailed balance, \\(\\pi_j w_{j\\to k} \\ne \\pi_k w_{k\\to j}\\), yields net probability currents. When these currents form cycles (violating Kolmogorov\u2019s loop criterion), the system is in a nonequilibrium steady state (NESS).</p> <p>3) Driven \u201cdynamic\u201d balance: like a river with steady level maintained by continuous inflow (energy input). At any cross\u2011section, inflow equals outflow (steady level), yet there is a net downstream current \u2014 the \u201carrow of time.\u201d</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#1-detailed-balance","title":"1. Detailed Balance","text":""},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#11-revisiting-the-master-equation-rules-of-the-game","title":"1.1 Revisiting the Master Equation: Rules of the Game","text":"<p>The master equation is the cornerstone:</p> \\[ \\frac{d\\mathbf{p}(t)}{dt} = Q\\,\\mathbf{p}(t). \\] <p>In components,</p> \\[ \\frac{dp_n(t)}{dt} = \\sum_{m\\ne n}\\big(p_m(t)\\,w_{m\\to n} - p_n(t)\\,w_{n\\to m}\\big). \\] <ul> <li>Gain: \\(\\sum_{m\\ne n} p_m(t)\\,w_{m\\to n}\\) \u2014 total inflow from other states into \\(n\\).</li> <li>Loss: \\(\\sum_{m\\ne n} p_n(t)\\,w_{n\\to m}=p_n(t)\\sum_{m\\ne n} w_{n\\to m}\\) \u2014 total outflow from \\(n\\).</li> </ul> <p>Q has column sums zero (probability conservation): \\(\\sum_n Q_{n m}=0\\). With \\(Q_{m m}=-\\sum_{n\\ne m}w_{m\\to n}\\) and \\(\\sum_{n\\ne m}Q_{n m}=\\sum_{n\\ne m}w_{m\\to n}\\), their sum vanishes, ensuring total probability remains 1.</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#12-detailed-balance-hallmark-of-equilibrium","title":"1.2 Detailed Balance: Hallmark of Equilibrium","text":"<p>For reversible processes, the steady state is defined by detailed balance (DB):</p> \\[ \\pi_i\\,w_{i\\to j}=\\pi_j\\,w_{j\\to i}. \\] <p>Here \\(\\pi_i\\) are steady\u2011state probabilities; \\(\\pi_i w_{i\\to j}\\) is the probability flux from \\(i\\) to \\(j\\) per unit time. DB expresses microscopic reversibility: for all pairs \\((i,j)\\), the net flux \\(J_{ij}=\\pi_i w_{i\\to j}-\\pi_j w_{j\\to i}\\) vanishes.</p> <p>Important: DB is sufficient but not necessary for a steady state. A steady state satisfies \\(Q\\,\\boldsymbol\\pi=0\\); if DB holds, steadiness follows, but the converse need not hold. Systems can have constant \\(\\boldsymbol\\pi\\) yet nonzero currents (NESS). Thus DB defines the special subclass \u201cequilibrium states.\u201d</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#13-power-of-symmetry-simplifying-dynamics","title":"1.3 Power of Symmetry: Simplifying Dynamics","text":"<p>When DB holds, Q can be symmetrized by a similarity transform. Define</p> \\[ \\tilde Q_{m n}:=\\pi_m^{-1/2}\\,Q_{m n}\\,\\pi_n^{1/2}. \\] <p>Using \\(Q_{m n}=w_{n\\to m}\\) and DB,</p> \\[ \\tilde Q_{m n}=\\pi_m^{-1/2}w_{n\\to m}\\,\\pi_n^{1/2}  = \\pi_m^{-1/2}\\Big(w_{m\\to n}\\,\\frac{\\pi_n}{\\pi_m}\\Big)\\pi_n^{1/2}  = \\pi_m^{1/2} w_{m\\to n}\\,\\pi_n^{-1/2} = \\tilde Q_{n m}, \\] <p>so \\(\\tilde Q\\) is symmetric. Consequences:</p> <p>1) Real eigenvalues: Q\u2019s nonsteady eigenvalues \\(-\\lambda\\) are real (\\(\\lambda&gt;0\\) for decaying modes).</p> <p>2) Non\u2011oscillatory relaxation: the general solution is a sum of pure exponentials \\(p(t)=\\sum_\\lambda c_\\lambda\\,\\Phi(\\lambda)\\,e^{-\\lambda t}\\); relaxation to \\(\\boldsymbol\\pi\\) (the \\(\\lambda=0\\) mode) is smooth and non\u2011oscillatory.</p> <p>3) Orthogonal eigenbasis: symmetric matrices have orthogonal eigenvectors; any initial distribution decomposes uniquely into relaxation modes.</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#14-kolmogorovs-loop-criterion-an-intuitive-equilibrium-test","title":"1.4 Kolmogorov\u2019s Loop Criterion: An Intuitive Equilibrium Test","text":"<p>For a three\u2011state loop \\(\\{1,2,3\\}\\), reversibility requires</p> \\[ w_{1\\to2}\\,w_{2\\to3}\\,w_{3\\to1}=w_{2\\to1}\\,w_{3\\to2}\\,w_{1\\to3}. \\] <p>If this fails (e.g., clockwise product &gt; counter\u2011clockwise), there is a persistent net probability circulation \u2014 a hallmark of irreversibility. A single violating loop implies a nonequilibrium state requiring external energy input to maintain.</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#2-beyond-equilibrium-irreversibility-and-the-arrow-of-time","title":"2. Beyond Equilibrium \u2014 Irreversibility and the Arrow of Time","text":"<p>We now quantify directional behavior in nonequilibrium.</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#21-when-equilibrium-is-broken-ness","title":"2.1 When Equilibrium Is Broken: NESS","text":"<p>When detailed balance fails, the system can still reach a steady distribution \\(\\frac{d\\mathbf{p}}{dt}=0\\), but with nonzero net currents</p> \\[ J_{ij}=\\pi_i w_{i\\to j}-\\pi_j w_{j\\to i} \\ne 0. \\] <p>Think of a fountain: the water level (probability) is constant but a pump continuously lifts water and it flows back \u2014 steady only by constant energy input. Living systems, circuits, and molecular machines operate as NESS.</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#22-forward-and-backward-trajectories","title":"2.2 Forward and Backward Trajectories","text":"<p>Define a forward trajectory \\(\\gamma\\) by a sequence of states and dwell times:</p> \\[ \\gamma: 0 \\xrightarrow{\\tau_1} 1 \\xrightarrow{\\tau_2} \\cdots \\xrightarrow{\\tau_n} n. \\] <p>Its probability density \\(P[\\gamma]\\) factors into events:</p> <p>1) Initial probability \\(\\pi_0\\) at \\(t=0\\). 2) Waiting in state \\(k\\) for time \\(\\tau_k\\) without jumping: \\(e^{-\\alpha_k\\tau_k}\\), with exit rate \\(\\alpha_k=\\sum_{\\ell\\ne k} w_{k\\to\\ell}\\). 3) Jump probability \\(\\propto w_{k\\to k+1}\\).</p> <p>Altogether,</p> \\[ P[\\gamma]=\\pi_0\\,e^{-\\alpha_0\\tau_0}\\,w_{0\\to1}\\,e^{-\\alpha_1\\tau_1}\\,w_{1\\to2}\\cdots w_{n-1\\to n}\\,e^{-\\alpha_n\\tau_n}. \\] <p>The time\u2011reversed path \\(\\bar\\gamma\\) starts at \\(n\\) and traverses the same states in reverse order back to 0:</p> \\[ P[\\bar\\gamma]=\\pi_n\\,e^{-\\alpha_n\\tau_n}\\,w_{n\\to n-1}\\cdots w_{1\\to0}\\,e^{-\\alpha_0\\tau_0}. \\]"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#23-quantifying-irreversibility-entropy-produced-along-a-path","title":"2.3 Quantifying Irreversibility: Entropy Produced Along a Path","text":"<p>The core asymmetry is \\(P[\\gamma]\\ne P[\\bar\\gamma]\\). Consider the ratio</p> \\[ \\frac{P[\\bar\\gamma]}{P[\\gamma]}=\\frac{\\pi_n e^{-\\alpha_n\\tau_n} w_{n\\to n-1}\\cdots w_{1\\to0} e^{-\\alpha_0\\tau_0}}{\\pi_0 e^{-\\alpha_0\\tau_0} w_{0\\to1}\\cdots w_{n-1\\to n} e^{-\\alpha_n\\tau_n}}. \\] <p>All exponential waiting factors cancel \u2014 irreversibility (and entropy production) arises from jumps, not waiting. Thus</p> \\[ \\frac{P[\\bar\\gamma]}{P[\\gamma]}=\\frac{\\pi_n}{\\pi_0}\\,\\frac{w_{n\\to n-1}\\,w_{n-1\\to n-2}\\cdots w_{1\\to0}}{w_{0\\to1}\\,w_{1\\to2}\\cdots w_{n-1\\to n}}. \\] <p>Define the total entropy production along \\(\\gamma\\) by</p> \\[ \\Delta s[\\gamma]=\\ln\\frac{P[\\bar\\gamma]}{P[\\gamma]}. \\] <p>This log\u2011ratio mirrors the Kullback\u2013Leibler divergence in information theory. Physically, \\(\\Delta s[\\gamma]\\) measures our ability to tell forward from backward: large positive values indicate a clear arrow of time. Under detailed balance, \\(\\Delta s[\\gamma]\\) fluctuates around 0.</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#24-decomposing-entropy-system-and-environment","title":"2.4 Decomposing Entropy: System and Environment","text":"<p>The total entropy production splits into two parts with clear meaning:</p> \\[ \\Delta s[\\gamma]=\\ln\\Big(\\frac{\\pi_n}{\\pi_0}\\Big) + \\sum_{k=1}^n \\ln\\Big(\\frac{w_{k\\to k-1}}{w_{k-1\\to k}}\\Big). \\] <p>1) System entropy change:</p> \\[ (\\Delta s)_\\mathrm{system}=\\ln\\Big(\\frac{\\pi_n}{\\pi_0}\\Big)=-\\ln\\pi_n-(-\\ln\\pi_0). \\] <p>State function \u2014 depends only on endpoints, analogous to Boltzmann entropy \\(S=-k_B\\ln p\\).</p> <p>2) Environment entropy change:</p> \\[ (\\Delta s)_\\mathrm{env}=\\sum_{k=1}^n \\ln\\Big(\\frac{w_{k\\to k-1}}{w_{k-1\\to k}}\\Big). \\] <p>Path function \u2014 sum over jumps, analogous to heat/work exchanges.</p> <p>Altogether \\(\\Delta s_\\mathrm{total}=\\Delta s_\\mathrm{sys}+\\Delta s_\\mathrm{env}\\).</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#25-mean-entropy-production-rate-sigma","title":"2.5 Mean Entropy Production Rate \\(\\sigma\\)","text":"<p>For NESS we care about sustained production:</p> \\[ \\sigma=\\lim_{T\\to\\infty}\\frac{1}{T}\\,\\langle\\Delta s[\\gamma]\\rangle. \\] <p>In the long\u2011time limit the system term averages out (endpoint\u2011only); the environment term dominates. One obtains</p> \\[ \\sigma=\\frac{1}{2}\\sum_{i,j}\\Big(\\pi_i w_{i\\to j}-\\pi_j w_{j\\to i}\\Big)\\,\\ln\\Big(\\frac{\\pi_j w_{j\\to i}}{\\pi_i w_{i\\to j}}\\Big)  = \\sum_{i&lt;j} J_{ij}\\,\\ln\\Big(\\frac{w_{i\\to j}}{w_{j\\to i}}\\Big). \\] <p>Structure: (flux)\\(\\times\\)(thermodynamic force). Here \\(J_{ij}=\\pi_i w_{i\\to j}-\\pi_j w_{j\\to i}\\) is the net probability current and \\(A_{ij}=\\ln(\\frac{w_{j\\to i}}{w_{i\\to j}})\\) the thermodynamic force (affinity). Using \\((x-y)\\ln(x/y)\\ge 0\\) shows \\(\\sigma\\ge 0\\), with equality iff all \\(J_{ij}=0\\) (detailed balance). Any NESS must have \\(\\sigma&gt;0\\).</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#3-python-simulation","title":"3. Python Simulation","text":""},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#31-reversible-system-thermal-motion-in-a-triplewell","title":"3.1 Reversible System: Thermal Motion in a Triple\u2011Well","text":"<p>We model a particle thermally hopping among three potential wells (A,B,C) in contact with a single\u2011temperature bath (detailed balance holds).</p> <ul> <li>Energy landscape: well depths \\((E_A,E_B,E_C)\\) and barriers.</li> <li>Rates: Arrhenius law \\(w_{i\\to j}\\propto\\exp[-(E_\\mathrm{barrier}-E_i)/(k_BT)]\\).</li> <li>Theoretical steady state: Boltzmann \\(\\pi_i\\propto e^{-E_i/(k_BT)}\\).</li> <li>Verify no net loop current and convergence to Boltzmann.</li> </ul> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n\ndef gillespie_simulation(Q, initial_state, T_max):\n    \"\"\"\n    Simulates a continuous-time Markov process using the Gillespie algorithm.\n    Args:\n        Q (np.array): Transition rate matrix (Q_ij = w_j-&gt;i).\n        initial_state (int): Starting state.\n        T_max (float): Maximum simulation time.\n    Returns:\n        tuple: (times, states, transitions)\n    \"\"\"\n    num_states = Q.shape[0]\n    states = np.arange(num_states)\n    current_state = initial_state; t = 0.0\n    time_points = [t]; state_trajectory = [current_state]; transitions = []\n    while t &lt; T_max:\n        rates_out = np.array([Q[j, current_state] for j in states if j != current_state])\n        total_rate_out = np.sum(rates_out)\n        if total_rate_out == 0: break\n        dt = np.random.exponential(1.0 / total_rate_out)\n        t += dt\n        if t &gt;= T_max: break\n        possible_next = [j for j in states if j != current_state]\n        next_state = np.random.choice(possible_next, p=rates_out/total_rate_out)\n        transitions.append((current_state, next_state))\n        current_state = next_state\n        time_points.append(t); state_trajectory.append(current_state)\n    return time_points, state_trajectory, transitions\n\nprint(\"--- Simulating Reversible System (Thermal Equilibrium) ---\")\nE = np.array([-1.5, -2.0, -0.5])\nE_barrier_base = 0.5; prefactor = 1.0\nZ = np.sum(np.exp(-E)); pi_theory = np.exp(-E) / Z\n\nrates = {}\nrates[(0,1)] = prefactor * np.exp(-(E_barrier_base + max(E[0], E[1]) - E[0]))\nrates[(1,0)] = prefactor * np.exp(-(E_barrier_base + max(E[0], E[1]) - E[1]))\nrates[(1,2)] = prefactor * np.exp(-(E_barrier_base + max(E[1], E[2]) - E[1]))\nrates[(2,1)] = prefactor * np.exp(-(E_barrier_base + max(E[1], E[2]) - E[2]))\nrates[(2,0)] = prefactor * np.exp(-(E_barrier_base + max(E[2], E[0]) - E[2]))\nrates[(0,2)] = prefactor * np.exp(-(E_barrier_base + max(E[2], E[0]) - E[0]))\n\nQ_rev = np.zeros((3,3))\nfor (i,j), rate in rates.items(): Q_rev[j,i] = rate\nfor i in range(3): Q_rev[i,i] = -np.sum(Q_rev[:,i])\n\nprod_cw  = rates[(0,1)]*rates[(1,2)]*rates[(2,0)]\nprod_ccw = rates[(0,2)]*rates[(2,1)]*rates[(1,0)]\nprint(\"Kolmogorov's Loop Criterion Check:\")\nprint(f\"  Clockwise rate product = {prod_cw:.4f}\")\nprint(f\"  Counter-clockwise rate product = {prod_ccw:.4f}\")\nprint(f\"  Ratio (should be 1.0): {prod_cw/prod_ccw:.4f}\\n\")\n\nT_max_rev = 200000\ntimes, states, transitions = gillespie_simulation(Q_rev, 0, T_max_rev)\n\nfrom collections import Counter\ncnt = Counter(transitions)\ncw  = cnt.get((0,1),0)+cnt.get((1,2),0)+cnt.get((2,0),0)\nccw = cnt.get((0,2),0)+cnt.get((2,1),0)+cnt.get((1,0),0)\nprint(f\"In a simulation of T={T_max_rev}:\")\nprint(f\"  Total clockwise jumps: {cw}\")\nprint(f\"  Total counter-clockwise jumps: {ccw}\")\nprint(\"The counts are very close, indicating no net probability flux.\\n\")\n\noccupancy = np.zeros(3)\nfor i in range(len(times)-1): occupancy[states[i]] += times[i+1]-times[i]\noccupancy[states[-1]] += T_max_rev - times[-1]\npi_sim = occupancy / T_max_rev\nprint(\"Steady-State Distribution (Boltzmann) Comparison:\")\nprint(f\"  Theoretical pi = {np.round(pi_theory,4)}\")\nprint(f\"  Simulated pi   = {np.round(pi_sim,4)}\")\n\nplt.style.use('seaborn-v0_8-whitegrid')\nfig = plt.figure(figsize=(12,9)); gs = fig.add_gridspec(2,2)\nax1 = fig.add_subplot(gs[0,:])\nx = np.linspace(-1,5,500)\nU = 0.1*(x**6 - 12*x**5 + 47*x**4 - 60*x**3 + 16*x**2 + 10*x)\nU -= np.min(U)\nU[x&lt;1.5] += E[0]-np.min(U[x&lt;1.5])+2.5\nU[(x&gt;=1.5)&amp;(x&lt;=3.5)] += E[1]-np.min(U[(x&gt;=1.5)&amp;(x&lt;=3.5)])+2.5\nU[x&gt;3.5] += E[2]-np.min(U[x&gt;3.5])+2.5\nax1.plot(x,U,color='black',linewidth=2.5)\nax1.set_title('Physical Model: Particle in a Triple-Well Potential')\nax1.set_xlabel('Position (arbitrary units)'); ax1.set_ylabel(r'Potential Energy $U(x)$')\nax1.text(0.5, E[0]+2.8, 'Well A (State 0)', ha='center')\nax1.text(2.5, E[1]+2.8, 'Well B (State 1)', ha='center')\nax1.text(4.5, E[2]+2.8, 'Well C (State 2)', ha='center')\nax1.set_yticks([])\n\nax2 = fig.add_subplot(gs[1,0])\nlabels = ['Well A (0)','Well B (1)','Well C (2)']\nlimit = min(500, T_max_rev); idx = np.where(np.array(times) &lt;= limit)\nax2.step(np.array(times)[idx], np.array(states)[idx], where='post')\nax2.set_title(f'Sample Trajectory (First {limit} time units)')\nax2.set_xlabel('Time'); ax2.set_ylabel('State')\nax2.set_yticks([0,1,2]); ax2.set_yticklabels(labels); ax2.set_ylim(-0.5,2.5)\n\nax3 = fig.add_subplot(gs[1,1])\nax3.bar(labels, pi_sim, color='cornflowerblue', edgecolor='black', label='Simulation Result')\nax3.plot(labels, pi_theory, 'ro', markersize=10, label=r'Theory (Boltzmann $\\pi$)')\nax3.set_title('Steady-State Probability Distribution')\nax3.set_ylabel('Probability'); ax3.legend()\nplt.tight_layout(); plt.show()\n</code></pre> <p>Code execution output:</p> <pre><code>--- Simulating Reversible System (Thermal Equilibrium) ---\nKolmogorov's Loop Criterion Check:\n  Clockwise rate product = 0.0498\n  Counter-clockwise rate product = 0.0498\n  Ratio (should be 1.0): 1.0000\n\nIn a simulation of T=200000:\n  Total clockwise jumps: 69792\n  Total counter-clockwise jumps: 69734\nThe counts are very close, indicating no net probability flux.\n\nSteady-State Distribution (Boltzmann) Comparison:\n  Theoretical pi = [0.3315 0.5465 0.122 ]\n  Simulated pi   = [0.3318 0.5461 0.122 ]\n</code></pre> <p></p> <p>Top: the energy landscape with three wells (B deepest, C shallowest). Bottom\u2011left: a sample trajectory (thermal hopping). Bottom\u2011right: simulated steady distribution (bars) matches the Boltzmann prediction (red dots).</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#32-irreversible-system-driven-ring","title":"3.2 Irreversible System: Driven Ring","text":"<p>We model a charged particle on three discrete sites (A,B,C) arranged in a ring and subject to a constant circulating field (nonconservative force). The field biases clockwise jumps; thermal fluctuations allow occasional counter\u2011clockwise jumps, but there is a persistent net current. Energy input is continuously dissipated as heat: a prototypical NESS.</p> <p>Implementation:</p> <p>1) Set clockwise rates \\(w_{\\mathrm{cw}}\\) \u226b counter\u2011clockwise \\(w_{\\mathrm{ccw}}\\). 2) Verify violation of Kolmogorov\u2019s criterion and simulate. 3) Analyze net clockwise vs counter\u2011clockwise jumps; compute cumulative entropy production and its slope \\(\\sigma\\).</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom collections import Counter\nimport matplotlib.patches as patches\n\ndef gillespie_simulation(Q, initial_state, T_max):\n    \"\"\"Simulates a continuous-time Markov process using the Gillespie algorithm.\"\"\"\n    num_states = Q.shape[0]; states = np.arange(num_states)\n    current_state = initial_state; t = 0.0\n    time_points=[t]; state_traj=[current_state]; transitions=[]\n    while t &lt; T_max:\n        rates_out = np.array([Q[j, current_state] for j in states if j != current_state])\n        tot = np.sum(rates_out)\n        if tot == 0: break\n        dt = np.random.exponential(1.0/tot); t += dt\n        if t &gt;= T_max: break\n        next_state = np.random.choice([j for j in states if j != current_state], p=rates_out/tot)\n        transitions.append((current_state,next_state)); current_state=next_state\n        time_points.append(t); state_traj.append(current_state)\n    return time_points, state_traj, transitions\n\nprint(\"--- Simulating Irreversible System (Non-Equilibrium Steady State) ---\")\nQ_irrev = np.zeros((3,3))\nw_cw, w_ccw = 10.0, 0.5\nw01_i, w12_i, w20_i = w_cw, w_cw, w_cw\nw10_i, w21_i, w02_i = w_ccw, w_ccw, w_ccw\nQ_irrev[1,0]=w01_i; Q_irrev[0,1]=w10_i\nQ_irrev[2,1]=w12_i; Q_irrev[1,2]=w21_i\nQ_irrev[0,2]=w20_i; Q_irrev[2,0]=w02_i\nfor i in range(3): Q_irrev[i,i] = -np.sum(Q_irrev[:,i])\nprod_cw  = w01_i*w12_i*w20_i\nprod_ccw = w02_i*w21_i*w10_i\nprint(\"Kolmogorov's Loop Criterion Check:\")\nprint(f\"  Clockwise rate product = {prod_cw:.4f}\")\nprint(f\"  Counter-clockwise rate product = {prod_ccw:.4f}\")\nprint(\"The products are unequal, confirming the system is irreversible.\\n\")\n\nT=5000\ntimes, states, transitions = gillespie_simulation(Q_irrev, 0, T)\ncnt = Counter(transitions)\ncw  = cnt.get((0,1),0)+cnt.get((1,2),0)+cnt.get((2,0),0)\nccw = cnt.get((0,2),0)+cnt.get((2,1),0)+cnt.get((1,0),0)\nprint(f\"In a simulation of T={T}:\")\nprint(f\"  Total clockwise jumps: {cw}\")\nprint(f\"  Total counter-clockwise jumps: {ccw}\")\nprint(\"A strong net clockwise probability current is observed.\\n\")\n\n# Cumulative entropy production\nentropy_times = [0.0]; cumulative_entropy = [0.0]\navg_sigma = 0.0\nfor (i,j) in transitions:\n    # local increment: ln(w_{i-&gt;j}/w_{j-&gt;i})\n    inc = np.log(Q_irrev[j,i]/Q_irrev[i,j]) if Q_irrev[i,j] &gt; 0 else 0.0\n    cumulative_entropy.append(cumulative_entropy[-1] + inc)\nentropy_times.extend(times[1:])\navg_sigma = cumulative_entropy[-1]/entropy_times[-1] if entropy_times[-1] &gt; 0 else 0.0\n\nfig = plt.figure(figsize=(12,6)); gs = fig.add_gridspec(1,2)\nax1 = fig.add_subplot(gs[0])\npos = {0:(0,0),1:(1,0),2:(0.5,0.866)}\nfor s,(x,y) in pos.items(): ax1.plot(x,y,'ko'); ax1.text(x,y+0.08,f'State {s}',ha='center')\n# Clockwise (strong)\nax1.add_patch(patches.FancyArrowPatch(pos[0], pos[1], connectionstyle=\"arc3,rad=.3\", color=\"black\", arrowstyle='-&gt;,head_length=10,head_width=8', linewidth=2.5))\nax1.add_patch(patches.FancyArrowPatch(pos[1], pos[2], connectionstyle=\"arc3,rad=.3\", color=\"black\", arrowstyle='-&gt;,head_length=10,head_width=8', linewidth=2.5))\nax1.add_patch(patches.FancyArrowPatch(pos[2], pos[0], connectionstyle=\"arc3,rad=.3\", color=\"black\", arrowstyle='-&gt;,head_length=10,head_width=8', linewidth=2.5))\n# Counter-clockwise (weak)\nax1.add_patch(patches.FancyArrowPatch(pos[1], pos[0], connectionstyle=\"arc3,rad=.3\", color=\"gray\", arrowstyle='-&gt;,head_length=5,head_width=4', linewidth=1, linestyle='--'))\nax1.add_patch(patches.FancyArrowPatch(pos[2], pos[1], connectionstyle=\"arc3,rad=.3\", color=\"gray\", arrowstyle='-&gt;,head_length=5,head_width=4', linewidth=1, linestyle='--'))\nax1.add_patch(patches.FancyArrowPatch(pos[0], pos[2], connectionstyle=\"arc3,rad=.3\", color=\"gray\", arrowstyle='-&gt;,head_length=5,head_width=4', linewidth=1, linestyle='--'))\nax1.text(0, 1.5, 'Driving Force', ha='center', fontsize=12, style='italic', color='darkred')\nax1.set_xlim(-1.5,1.5); ax1.set_ylim(-1.5,2.0); ax1.set_aspect('equal'); ax1.axis('off')\nax1.set_title('Physical Model: Driven Particle on a Ring')\n\nax2 = fig.add_subplot(gs[1])\nax2.plot(entropy_times, cumulative_entropy, '-', label=r'Cumulative Entropy Production $\\Delta s(t)$')\nax2.plot(entropy_times, avg_sigma*np.array(entropy_times), 'k--', linewidth=2, label=fr'Average Rate $\\sigma \\approx {avg_sigma:.3f}$')\nax2.set_title('Entropy Production in the Driven System')\nax2.set_xlabel('Time'); ax2.set_ylabel(r'Total Entropy Production, $\\Delta s(t)$')\nax2.legend(); ax2.grid(True, linestyle='--', alpha=0.7)\nplt.tight_layout(); plt.show()\n</code></pre> <p>Code execution output</p> <pre><code>--- Simulating Irreversible System (Non-Equilibrium Steady State) ---\nKolmogorov's Loop Criterion Check:\n  Clockwise rate product = 1000.0000\n  Counter-clockwise rate product = 0.1250\nThe products are unequal, confirming the system is irreversible.\n\nIn a simulation of T=5000:\n  Total clockwise jumps: 50008\n  Total counter-clockwise jumps: 2508\nA strong net clockwise probability current is observed.\n\nSimulated average entropy production rate (sigma) ~ 28.4600\n</code></pre> <p></p> <p>Left: the driven ring (strong clockwise arrows, weak counter\u2011clockwise dashed arrows). Right: cumulative entropy production grows roughly linearly; the slope is the average production rate \\(\\sigma\\).</p>"},{"location":"notes/9.%20Nonequilibrium%20States%20%E2%80%94%20Irreversibility%20and%20Entropy%20Production/#conclusion","title":"Conclusion","text":"<p>We moved from equilibrium to nonequilibrium physics.</p> <ul> <li>Equilibrium: detailed balance, no net currents (\\(J_{ij}=0\\)), zero average entropy production (\\(\\sigma=0\\)), time\u2011reversal symmetry; Q can be symmetrized.</li> <li>Nonequilibrium: detailed balance broken, sustained currents (\\(J_{ij}\\ne 0\\)), strictly positive entropy production rate (\\(\\sigma&gt;0\\)), a clear arrow of time.</li> <li>Trajectory\u2011level thermodynamics: define system, environment, and total entropy along single trajectories; obtain the mean rate \\(\\sigma=\\sum J\\cdot A\\) (flux times force), the universal dissipative structure.</li> </ul> <p>Entropy production is the necessary cost to maintain function and directionality \u2014 from molecular motors and ion pumps to information processing, electric circuits, combustion, and weather systems. To stay far from heat death, complex systems must draw energy and dissipate entropy. In nonequilibrium, entropy production is not merely decay; it is the prerequisite for complexity, function, and life.</p>"},{"location":"zh/","title":"\u975e\u5e73\u8861\u573a\u8bba\u4e0e\u968f\u673a\u52a8\u529b\u5b66","text":"<p>\u8bfe\u7a0b: Nonequilibrium Field Theories and Stochastic Dynamics \u6388\u8bfe\u6559\u5e08: Prof. Erwin Frey \u5b66\u6821: Ludwig-Maximilians-Universit\u00e4t M\u00fcnchen (LMU Munich) \u5b66\u671f: 2025\u5e74\u590f\u5b63\u5b66\u671f</p>"},{"location":"zh/#_2","title":"\u8bfe\u7a0b\u89c6\u9891","text":"<p>YouTube\u64ad\u653e\u5217\u8868: \u5b8c\u6574\u8bfe\u7a0b\u89c6\u9891</p>"},{"location":"zh/#_3","title":"\u5173\u4e8e\u672c\u7f51\u7ad9","text":"<p>\u672c\u7f51\u7ad9\u5305\u542b\u975e\u5e73\u8861\u573a\u8bba\u4e0e\u968f\u673a\u52a8\u529b\u5b66\u8bfe\u7a0b\u7684\u5b8c\u6574\u5b66\u4e60\u8d44\u6599\uff0c\u6db5\u76d640\u8bb2\u8be6\u7ec6\u7684\u4e2d\u6587\u5b66\u4e60\u7b14\u8bb0\u548c\u5bf9\u5e94\u7684Python\u4ee3\u7801\u5b9e\u73b0\u3002</p>"},{"location":"zh/#_4","title":"\u8bfe\u7a0b\u5185\u5bb9","text":"<p>\u672c\u8bfe\u7a0b\u63a2\u7d22\u975e\u5e73\u8861\u573a\u8bba\u548c\u968f\u673a\u52a8\u529b\u5b66\u7684\u57fa\u672c\u539f\u7406\u548c\u9ad8\u7ea7\u6982\u5ff5\uff0c\u91cd\u70b9\u5173\u6ce8\u7c92\u5b50\u548c\u573a\u7cfb\u7edf\u4e2d\u7684\u968f\u673a\u8fc7\u7a0b\uff0c\u5f3a\u8c03\u6570\u5b66\u5f62\u5f0f\u4e3b\u4e49\uff0c\u5982\u6717\u4e4b\u4e07\u65b9\u7a0b\u3001\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u548c\u8def\u5f84\u79ef\u5206\u3002\u6b64\u5916\uff0c\u8bb2\u5ea7\u8fd8\u6db5\u76d6\u4e86\u8f6f\u7269\u8d28\u7269\u7406\u3001\u6d3b\u6027\u7269\u8d28\u548c\u975e\u5e73\u8861\u7edf\u8ba1\u529b\u5b66\u7684\u5e94\u7528\u3002</p>"},{"location":"zh/#_5","title":"\u5b66\u4e60\u8d44\u6599","text":"<ul> <li>40\u7ae0\u4e2d\u6587\u5b66\u4e60\u7b14\u8bb0: \u8be6\u7ec6\u7684\u7406\u8bba\u63a8\u5bfc\u3001\u7269\u7406\u89e3\u91ca\u548c\u6570\u5b66\u8bc1\u660e</li> <li>65\u4e2aPython\u4ee3\u7801\u5b9e\u73b0: \u4e0e\u6bcf\u8bb2\u5bf9\u5e94\u7684\u8ba1\u7b97\u5b9e\u9a8c\u548c\u53ef\u89c6\u5316</li> <li>\u5b8c\u6574\u56fe\u7247\u8d44\u6e90: \u8bfe\u7a0b\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u56fe\u8868\u548c\u793a\u610f\u56fe</li> <li>\u672f\u8bed\u8868: \u4e2d\u82f1\u6587\u5bf9\u7167\u7684\u4e13\u4e1a\u672f\u8bed</li> </ul>"},{"location":"zh/#_6","title":"\u8bfe\u7a0b\u7ed3\u6784","text":""},{"location":"zh/#1-10","title":"\u7b2c\u4e00\u90e8\u5206\uff1a\u968f\u673a\u8fc7\u7a0b\u57fa\u7840 (\u7b2c1-10\u8bb2)","text":"<ul> <li>\u968f\u673a\u6e38\u8d70\u4e0e\u5e03\u6717\u8fd0\u52a8</li> <li>\u57fa\u7840\u968f\u673a\u6a21\u578b  </li> <li>\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u4e0e\u4e3b\u65b9\u7a0b</li> </ul>"},{"location":"zh/#11-25","title":"\u7b2c\u4e8c\u90e8\u5206\uff1a\u7c92\u5b50\u7684\u968f\u673a\u52a8\u529b\u5b66 (\u7b2c11-25\u8bb2)","text":"<ul> <li>\u6717\u4e4b\u4e07\u4e0e\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b</li> <li>\u968f\u673a\u6a21\u62df\u6280\u672f</li> <li>\u968f\u673a\u70ed\u529b\u5b66</li> </ul>"},{"location":"zh/#26-35","title":"\u7b2c\u4e09\u90e8\u5206\uff1a\u4ece\u79bb\u6563\u6001\u5230\u573a (\u7b2c26-35\u8bb2)","text":"<ul> <li>\u53cd\u5e94\u7f51\u7edc\u4e0e\u573a\u8bba</li> <li>\u573a\u7684\u7c97\u7c92\u5316\u52a8\u529b\u5b66</li> </ul>"},{"location":"zh/#36-40","title":"\u7b2c\u56db\u90e8\u5206\uff1a\u975e\u5e73\u8861\u7cfb\u7edf\u7684\u573a\u8bba (\u7b2c36-40\u8bb2)","text":"<ul> <li>\u52a8\u6001\u6cdb\u51fd\u4e0eMSR\u5f62\u5f0f</li> <li>\u6d41\u4f53\u52a8\u529b\u5b66\u4e0e\u6da8\u843d\u6d41\u4f53</li> <li>\u975e\u5e73\u8861\u6a21\u5f0f\u5f62\u6210</li> <li>\u6d3b\u6027\u7269\u8d28\u573a\u8bba</li> </ul>"},{"location":"zh/#_7","title":"\u8bfe\u7a0b\u89c6\u9891\u6807\u9898","text":"<p>\u57fa\u4e8e\u8bfe\u7a0b\u7ed3\u6784\u548c\u4ed3\u5e93\u5185\u5bb9\uff0c\u8bb2\u5ea7\u7cfb\u5217\u5305\u62ec\u4ee5\u4e0b\u4e3b\u9898\uff1a</p>"},{"location":"zh/#i-1-10","title":"I. \u968f\u673a\u8fc7\u7a0b\u57fa\u7840 (\u7b2c1-10\u8bb2)","text":"<ol> <li>\u70ed\u529b\u5b66\u3001\u7edf\u8ba1\u529b\u5b66\u3001\u975e\u5e73\u8861\u7269\u7406\u5b66\u4e0e\u6559\u5b66\u7406\u5ff5 (43\u5206\u949f)</li> <li>\u7b80\u5355\u968f\u673a\u6e38\u8d70 (41\u5206\u949f)</li> <li>\u9ad8\u65af\u968f\u673a\u6e38\u8d70\u3001\u6cca\u677e\u8fc7\u7a0b\u3001Gillespie\u7b97\u6cd5 (45\u5206\u949f)</li> <li>Gillespie\u7b97\u6cd5\u3001\u4e3b\u65b9\u7a0b\u3001\u751f\u6210\u51fd\u6570\u3001\u79cd\u7fa4\u52a8\u529b\u5b66 (45\u5206\u949f)</li> <li>\u79cd\u7fa4\u52a8\u529b\u5b66\uff1a\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u3001Lotka-Volterra\u8fc7\u7a0b (58\u5206\u949f)</li> <li>\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u57fa\u672c\u65b9\u7a0b\uff1a\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b (36\u5206\u949f)</li> <li>\u524d\u5411\u4e3b\u65b9\u7a0b\u3001\u7ebf\u6027\u751f\u706d\u8fc7\u7a0b\u7684Q\u77e9\u9635\u3001\u4e3b\u65b9\u7a0b\u7684\u4e00\u822c\u6027\u8d28 (41\u5206\u949f)</li> <li>\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\u3001\u4e0d\u53ef\u5206\u89e3Q\u77e9\u9635\u3001\u53ef\u9006\u4e0e\u5e73\u7a33\u8fc7\u7a0b\u3001\u7ec6\u81f4\u5e73\u8861 (48\u5206\u949f)</li> <li>\u7ec6\u81f4\u5e73\u8861\u7684\u63a8\u8bba\u3001\u4e0d\u53ef\u9006\u6027\u4e0e\u71b5\u4ea7\u751f (42\u5206\u949f)</li> <li>\u57c3\u4f26\u8d39\u65af\u7279\u6a21\u578b\u3001\u71b5\u4e0eKullback-Leibler\u6563\u5ea6 (37\u5206\u949f)</li> </ol>"},{"location":"zh/#ii-11-25","title":"II. \u7c92\u5b50\u7684\u968f\u673a\u52a8\u529b\u5b66 (\u7b2c11-25\u8bb2)","text":"<ol> <li>\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u6d1b\u3001\u8df3\u8dc3\u8fc7\u7a0b\u3001\u6269\u6563\u8fc7\u7a0b\u3001\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b (54\u5206\u949f)</li> <li>\u5e03\u6717\u8fd0\u52a8\uff08\u7ef4\u7eb3\u8fc7\u7a0b\uff09\u3001\u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b\u8fc7\u7a0b\u3001\u7231\u56e0\u65af\u5766-\u65af\u6258\u514b\u65af\u5173\u7cfb (35\u5206\u949f)</li> <li>\u4f5c\u4e3a\u968f\u673a\u8fc7\u7a0b\u7684\u8499\u7279\u5361\u6d1b\u91c7\u6837 (44\u5206\u949f)</li> <li>\u54c8\u5bc6\u5c14\u987f\u8499\u7279\u5361\u6d1b\u91c7\u6837 (49\u5206\u949f)</li> <li>\u8d8b\u5316\u6027\u3001\u8dd1\u52a8-\u7ffb\u6eda\u8fd0\u52a8\u4f5c\u4e3a\u53cc\u6001\u8fc7\u7a0b\u3001Keller-Segel\u6a21\u578b (47\u5206\u949f)</li> <li>Schnitzer\u6a21\u578b\u3001\u53cd\u5e38\u6269\u6563\u3001\u8fd0\u52a8\u8bf1\u5bfc\u76f8\u5206\u79bb (33\u5206\u949f)</li> <li>\u6717\u4e4b\u4e07\u65b9\u7a0b\u3001\u5e03\u6717\u7c92\u5b50\u3001\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (43\u5206\u949f)</li> <li>\u5e03\u6717\u7c92\u5b50\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u3001\u8fc7\u963b\u5c3c\u6717\u4e4b\u4e07\u65b9\u7a0b\u3001\u65af\u6469\u68f1\u970d\u592b\u65af\u57fa\u65b9\u7a0b (39\u5206\u949f)</li> <li>\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u8def\u5f84\u79ef\u5206\u8868\u8ff0 (45\u5206\u949f)</li> <li>\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u3001\u4f0a\u85e4\u5f15\u7406\u3001\u968f\u673a\u79ef\u5206\u3001\u4f0a\u85e4\u4e0e\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947 (42\u5206\u949f)</li> <li>\u4f0a\u85e4\u516c\u5f0f\u3001\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u4e0e\u4f0a\u85e4\u8868\u8ff0\u4e4b\u95f4\u7684\u53d8\u6362 (47\u5206\u949f)</li> <li>\u542b\u4e58\u6027\u566a\u58f0\u7cfb\u7edf\u7684\u8def\u5f84\u79ef\u5206 (27\u5206\u949f)</li> <li>\u76f8\u4e92\u4f5c\u7528\u7684\u5e03\u6717\u7c92\u5b50\u3001\u5e73\u8861\u9644\u8fd1\u7684\u6da8\u843d\u3001\u6da8\u843d\u7684\u65f6\u95f4\u5173\u8054 (47\u5206\u949f)</li> <li>\u6602\u8428\u683c\u7cfb\u6570\u4e0e\u5bf9\u79f0\u5173\u7cfb\u3001\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7684\u52a8\u6001\u5f62\u5f0f (45\u5206\u949f)</li> <li>\u68af\u5ea6\u52a8\u529b\u5b66\u3001\u6a21\u578bA\u3001\u7ecf\u5178\u4f0a\u8f9b\u6a21\u578b\u3001\u91d1\u5179\u5821-\u6717\u9053\u65b9\u7a0b\u3001Allen-Cahn\u65b9\u7a0b (54\u5206\u949f)</li> </ol>"},{"location":"zh/#iii-26-35","title":"III. \u4ece\u79bb\u6563\u6001\u5230\u573a (\u7b2c26-35\u8bb2)","text":"<ol> <li>\u4e34\u754c\u6162\u5316\u3001\u54cd\u5e94\u51fd\u6570\u3001\u52a8\u6001\u78c1\u5316\u7387\u3001\u6a21\u578bB (39\u5206\u949f)</li> <li>\u7b80\u5355\u6d41\u4f53\u7684\u6d41\u4f53\u52a8\u529b\u5b66\u3001\u65e0\u6469\u64e6\u6d41\u4f53\u3001\u6b27\u62c9\u65b9\u7a0b (51\u5206\u949f)</li> <li>\u7c98\u6027\u6d41\u4f53\u3001\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u3001\u71b5\u5e73\u8861\u4e0e\u70ed\u4f20\u5bfc (41\u5206\u949f)</li> <li>\u4e0d\u53ef\u9006\u7ebf\u6027\u70ed\u529b\u5b66\u3001\u5e72\u6027\u6269\u6563\u7c92\u5b50\u7cfb\u7edf (46\u5206\u949f)</li> <li>\u60ac\u6d6e\u5728\u6d41\u4f53\u4e2d\u7684\u5e03\u6717\u7c92\u5b50\u3001\u6a21\u578bH (30\u5206\u949f)</li> <li>\u52a0\u6027\u566a\u58f0\u573a\u8bba\u7684\u52a8\u6001\u6cdb\u51fd\u3001Onsager-Machlup\u6cdb\u51fd (1\u5c0f\u65f63\u5206\u949f)</li> <li>Janssen-De Dominicis\u54cd\u5e94\u6cdb\u51fd\u3001\u6da8\u843d-\u8017\u6563\u5173\u7cfb (25\u5206\u949f)</li> <li>\u975e\u5e73\u8861\u529f\u4e0e\u6da8\u843d\u5b9a\u7406\u3001Jarzynski\u529f\u5173\u7cfb\u3001Crooks\u6da8\u843d\u5b9a\u7406 (1\u5c0f\u65f619\u5206\u949f)</li> <li>\u6709\u5411\u6e17\u6d41\u3001\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u7684\u8c31\u65b9\u6cd5 (1\u5c0f\u65f66\u5206\u949f)</li> <li>\u4e3b\u65b9\u7a0b\u7684\u8def\u5f84\u79ef\u5206\u8868\u793a (31\u5206\u949f)</li> </ol>"},{"location":"zh/#iv-36-40","title":"IV. \u975e\u5e73\u8861\u7cfb\u7edf\u7684\u573a\u8bba (\u7b2c36-40\u8bb2)","text":"<ol> <li>\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\u3001\u7b97\u7b26\u4ee3\u6570\u4e0e\u865a\u566a\u58f0 (40\u5206\u949f)</li> <li>Kramers-Moyal\u5c55\u5f00\u4e0e\u8def\u5f84\u79ef\u5206\u7684\u4f4e\u566a\u58f0\u6781\u9650 (41\u5206\u949f)</li> <li>\u591a\u7269\u79cd\u8def\u5f84\u79ef\u5206\u3001\u77f3\u5934-\u526a\u5200-\u5e03 (49\u5206\u949f)</li> <li>\u683c\u70b9\u4e0a\u7684\u8def\u5f84\u79ef\u5206\uff1a\u4ece\u8df3\u8dc3\u5230\u8fde\u7eed\u573a\u8bba (43\u5206\u949f)</li> <li>Kramers-Moyal\u8def\u5f84\u79ef\u5206\u65b9\u6cd5\u3001\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u7684\u573a\u8bba (32\u5206\u949f)</li> </ol>"},{"location":"zh/#_8","title":"\u6280\u672f\u7279\u6027","text":"<ul> <li>\u54cd\u5e94\u5f0f\u8bbe\u8ba1: \u652f\u6301\u684c\u9762\u548c\u79fb\u52a8\u8bbe\u5907</li> <li>\u6df1\u8272/\u6d45\u8272\u4e3b\u9898: \u53ef\u5207\u6362\u7684\u754c\u9762\u4e3b\u9898</li> <li>\u6570\u5b66\u516c\u5f0f\u6e32\u67d3: \u57fa\u4e8eMathJax\u7684\u9ad8\u8d28\u91cf\u6570\u5b66\u663e\u793a</li> <li>\u4ee3\u7801\u9ad8\u4eae: \u8bed\u6cd5\u9ad8\u4eae\u7684Python\u4ee3\u7801</li> <li>\u4e00\u952e\u590d\u5236: \u4ee3\u7801\u7247\u6bb5\u53ef\u5feb\u901f\u590d\u5236</li> <li>\u591a\u8bed\u8a00\u652f\u6301: \u4e2d\u82f1\u6587\u53cc\u8bed\u754c\u9762</li> </ul>"},{"location":"zh/#_9","title":"\u4f7f\u7528\u8bf4\u660e","text":"<ol> <li>\u5bfc\u822a: \u4f7f\u7528\u5de6\u4fa7\u76ee\u5f55\u6309\u8bb2\u6b21\u6d4f\u89c8\u5185\u5bb9</li> <li>\u641c\u7d22: \u70b9\u51fb\u9876\u90e8\u641c\u7d22\u56fe\u6807\u67e5\u627e\u7279\u5b9a\u5185\u5bb9</li> <li>\u4e3b\u9898\u5207\u6362: \u4f7f\u7528\u53f3\u4e0a\u89d2\u6309\u94ae\u5207\u6362\u6df1\u8272/\u6d45\u8272\u4e3b\u9898</li> <li>\u4ee3\u7801\u8fd0\u884c: \u590d\u5236\u4ee3\u7801\u5230Python\u73af\u5883\u4e2d\u8fd0\u884c</li> <li>\u6570\u5b66\u516c\u5f0f: \u516c\u5f0f\u652f\u6301\u7f29\u653e\u548c\u4ea4\u4e92\u5f0f\u67e5\u770b</li> </ol>"},{"location":"zh/#_10","title":"\u81f4\u8c22\u4e0e\u5f15\u7528","text":""},{"location":"zh/#_11","title":"\u8bfe\u7a0b\u6765\u6e90","text":"<p>\u672c\u5b66\u4e60\u8d44\u6599\u57fa\u4e8eErwin Frey\u6559\u6388\u5728LMU Munich\u7684\u8bfe\u7a0b\u5236\u4f5c\uff0c\u6240\u6709\u7406\u8bba\u5185\u5bb9\u5f52\u529f\u4e8e\u539f\u8bfe\u7a0b\u3002</p>"},{"location":"zh/#_12","title":"\u98ce\u683c\u53c2\u8003","text":"<p>\u7f51\u7ad9\u8bbe\u8ba1\u98ce\u683c\u53c2\u8003\u4e86Physics-based Deep Learning\u9879\u76ee\u3002</p>"},{"location":"zh/#_13","title":"\u5f00\u6e90\u534f\u8bae","text":"<p>\u672c\u9879\u76ee\u91c7\u7528Creative Commons Attribution-NonCommercial 4.0 International License\u5f00\u6e90\u534f\u8bae\u3002</p> <p>\u6ce8\uff1a\u672c\u7f51\u7ad9\u4e3a\u6559\u80b2\u76ee\u7684\uff0c\u5305\u542bErwin Frey\u6559\u6388\u5728LMU Munich\u7684\"\u975e\u5e73\u8861\u573a\u8bba\u4e0e\u968f\u673a\u52a8\u529b\u5b66\"\u8bfe\u7a0b\u7684\u5b66\u4e60\u6750\u6599\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/","title":"1. \u8bfe\u7a0b\u5bfc\u8bba","text":"<p>\u8fd9\u662f\u8bfe\u7a0b \u975e\u5e73\u8861\u573a\u8bba\u4e0e\u968f\u673a\u52a8\u529b\u5b66 Nonequilibrium Field Theories and Stochastic Dynamics, Prof. Erwin Frey, LMU Munich, Summer Semester 2025\u7684\u81ea\u5b66\u7b14\u8bb0\u3002Erwin Frey \u6559\u6388\u559c\u6b22\u5728\u9ed1\u677f\u4e0a\u5199\u677f\u4e66\uff0c\u4e3a\u8bb0\u5f55\u5b66\u4e60\u8fc7\u7a0b\uff0c\u5c06\u6240\u5b66\u7b14\u8bb0\u6574\u7406\u4e3a\u6587\uff0c\u5e76\u64b0\u5199python\u4ee3\u7801\u52a0\u6df1\u7406\u89e3\u3002\u5171\u8ba140\u7ae0\u5b66\u4e60\u7b14\u8bb0\uff0c\u672c\u7ae0\u662f\u8bfe\u7a0b\u7684\u5bfc\u8bba\u3002</p> <p></p> <p>\u6ce8\uff1a\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u672c\u4eba\u53ea\u5728Youtube\u4e0a\u5b66\u4e60\u8be5\u8bfe\u7a0b\uff0c\u5e76\u6ca1\u6709\u8bb2\u4e49\uff0c\u90fd\u662f\u5148\u542c\u8bfe\u505a\u7b14\u8bb0\uff0c\u518d\u64b0\u6587\u7ae0\uff0c\u539f\u59cb\u7b14\u8bb0\u793a\u4f8b\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_1","title":"\u8bfe\u7a0b\u7b80\u4ecb","text":"<p>\u8fd9\u95e8\u8bfe\u4ecb\u7ecd\u975e\u5e73\u8861\u573a\u8bba\u548c\u968f\u673a\u52a8\u529b\u5b66\u7684\u57fa\u672c\u539f\u7406\u548c\u9ad8\u7ea7\u6982\u5ff5\uff0c\u91cd\u70b9\u5173\u6ce8\u7c92\u5b50\u548c\u573a\u7cfb\u7edf\u4e2d\u7684\u968f\u673a\u8fc7\u7a0b\uff0c\u7279\u522b\u662f\u6717\u4e4b\u4e07\u65b9\u7a0b\u3001\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u548c\u8def\u5f84\u79ef\u5206\u7b49\u6570\u5b66\u5f62\u5f0f\u3002</p> <p>\u5185\u5bb9\u6db5\u76d6\u4ece\u57fa\u7840\u968f\u673a\u8fc7\u7a0b\u7406\u8bba\u5230\u73b0\u4ee3\u975e\u5e73\u8861\u573a\u8bba\u65b9\u6cd5\u7684\u5b8c\u6574\u77e5\u8bc6\u4f53\u7cfb\uff0c\u5305\u62ec\u52a8\u6001\u6cdb\u51fd\u548c\u6da8\u843d\u5b9a\u7406\u7b49\u9ad8\u7ea7\u7406\u8bba\u65b9\u6cd5\u3002\u7279\u522b\u5173\u6ce8Kardar-Parisi-Zhang\u65b9\u7a0b\uff0c\u8be5\u65b9\u7a0b\u63cf\u8ff0\u4e86\u975e\u5e73\u8861\u751f\u957f\u8fc7\u7a0b\u7684\u666e\u9002\u6027\u7279\u5f81\u3002\u6b64\u5916\uff0c\u8fd8\u5c06\u63a2\u8ba8\u6d3b\u6027\u7269\u8d28\u7cfb\u7edf\uff0c\u5176\u4e2d\u96c6\u4f53\u884c\u4e3a\u4ece\u975e\u5e73\u8861\u76f8\u4e92\u4f5c\u7528\u4e2d\u6d8c\u73b0\u3002</p> <p>\u5e94\u7528\u9886\u57df\u5305\u62ec\u8f6f\u7269\u8d28\u7269\u7406\u3001\u6d3b\u6027\u7269\u8d28\u548c\u975e\u5e73\u8861\u7edf\u8ba1\u529b\u5b66\uff0c\u4e3a\u7406\u89e3\u4ece\u751f\u7269\u8fc7\u7a0b\u5230\u6e4d\u6d41\u6d41\u4f53\u7b49\u590d\u6742\u7cfb\u7edf\u63d0\u4f9b\u7406\u8bba\u57fa\u7840\u3002\u5b66\u4e60\u8def\u5f84\u4ece\u57fa\u7840\u968f\u673a\u6a21\u578b\u5f00\u59cb\uff0c\u9010\u6b65\u6df1\u5165\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u57fa\u672c\u65b9\u7a0b\uff0c\u6700\u7ec8\u63a2\u7d22\u5305\u62ec\u52a8\u6001\u6cdb\u51fd\u548c\u6da8\u843d\u5b9a\u7406\u5728\u5185\u7684\u9ad8\u7ea7\u573a\u8bba\u65b9\u6cd5\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_2","title":"\u6559\u5b66\u7406\u5ff5","text":"<p>Erwin Frey \u6559\u6388\u5728\u6559\u5b66\u8fd9\u95e8\u8bfe\u4e2d\u5c06\u9075\u5faa\u4ee5\u4e0b\u56db\u4e2a\u6559\u5b66\u7406\u5ff5\uff1a</p> <p></p> <ul> <li> <p>\u7269\u7406\u4f18\u5148\uff0c\u6982\u5ff5\u4e30\u5bcc (Physics-first and conceptually rich): \u8bfe\u7a0b\u5f3a\u8c03\u5728\u5f15\u5165\u6570\u5b66\u5f62\u5f0f\u4e4b\u524d\u5efa\u7acb\u7269\u7406\u76f4\u89c9\uff0c\u6ce8\u91cd\u7406\u89e3\u73b0\u8c61\u80cc\u540e\u7684\u7269\u7406\u673a\u5236\u800c\u975e\u5355\u7eaf\u7684\u6570\u5b66\u64cd\u4f5c\u3002\u6559\u5b66\u5185\u5bb9\u4ece\u5177\u4f53\u7269\u7406\u95ee\u9898\u51fa\u53d1\uff0c\u9010\u6b65\u5f15\u5bfc\u81f3\u76f8\u5e94\u7684\u7406\u8bba\u6846\u67b6\u3002</p> </li> <li> <p>\u690d\u6839\u4e8e\u771f\u5b9e\u7269\u7406\u73b0\u8c61 (Grounded in real phenomena): \u8bfe\u7a0b\u5185\u5bb9\u4e0e\u53ef\u89c2\u6d4b\u7684\u7269\u7406\u73b0\u8c61\u7d27\u5bc6\u8054\u7cfb\uff0c\u5305\u62ec\u751f\u7269\u7cfb\u7edf\u4e2d\u7684\u6a21\u5f0f\u5f62\u6210\u548c\u8f6f\u7269\u8d28\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u884c\u4e3a\u7b49\u3002\u7406\u8bba\u65b9\u6cd5\u4e0e\u5b9e\u9645\u5e94\u7528\u76f8\u7ed3\u5408\uff0c\u4f53\u73b0\u7269\u7406\u5b66\u4f5c\u4e3a\u63cf\u8ff0\u81ea\u7136\u4e16\u754c\u79d1\u5b66\u7684\u4ef7\u503c\u3002</p> </li> <li> <p>\u4e60\u9898\u662f\u6838\u5fc3\u7ec4\u6210\u90e8\u5206 (Problem sets as a core component): \u4e60\u9898\u8bbe\u8ba1\u662f\u8bfe\u7a0b\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u65e8\u5728\u6df1\u5316\u6982\u5ff5\u7406\u89e3\u3001\u57f9\u517b\u95ee\u9898\u89e3\u51b3\u80fd\u529b\u5e76\u6269\u5c55\u8bfe\u7a0b\u5185\u5bb9\u3002\u901a\u8fc7\u7cfb\u7edf\u6027\u7684\u7ec3\u4e60\u5de9\u56fa\u548c\u62d3\u5c55\u6240\u5b66\u77e5\u8bc6\u3002</p> </li> <li> <p>\u4e0e\u524d\u6cbf\u7814\u7a76\u76f8\u7ed3\u5408 (Connected to current research): \u8bfe\u7a0b\u5f15\u5165\u5f53\u4ee3\u7269\u7406\u5b66\u7814\u7a76\u4e2d\u7684\u4e3b\u9898\u548c\u6848\u4f8b\uff0c\u5c06\u57fa\u7840\u7406\u8bba\u4e0e\u524d\u6cbf\u53d1\u5c55\u76f8\u7ed3\u5408\uff0c\u4e3a\u5b66\u751f\u7684\u8fdb\u4e00\u6b65\u7814\u7a76\u63d0\u4f9b\u57fa\u7840\u3002</p> </li> </ul>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#1","title":"1. \u7269\u7406\u5b66\u7406\u8bba\u7684\u5168\u666f\u56fe","text":"<p>\u4e3a\u4e86\u51c6\u786e\u5730\u5b9a\u4f4d\u975e\u5e73\u8861\u7269\u7406\u5b66\u5728\u6574\u4e2a\u7269\u7406\u5b66\u77e5\u8bc6\u4f53\u7cfb\u4e2d\u7684\u4f4d\u7f6e\uff0cErwin Frey \u6559\u6388\u9996\u5148\u56de\u987e\u4e86\u4e09\u4e2a\u76f8\u4e92\u5173\u8054\u4f46\u53c8\u5404\u6709\u4fa7\u91cd\u7684\u7406\u8bba\u6846\u67b6\uff1a\u70ed\u529b\u5b66\u3001\u7edf\u8ba1\u7269\u7406\u5b66\u548c\u975e\u5e73\u8861\u7269\u7406\u5b66\u3002\u7406\u89e3\u5b83\u4eec\u7684\u533a\u522b\u4e0e\u8054\u7cfb\uff0c\u662f\u5f00\u542f\u672c\u8bfe\u7a0b\u5b66\u4e60\u7684\u5fc5\u8981\u524d\u63d0\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#11","title":"1.1 \u70ed\u529b\u5b66\uff1a\u5b8f\u89c2\u4e16\u754c\u7684\u666e\u9002\u6cd5\u5219","text":"<p>\u70ed\u529b\u5b66\u662f\u7814\u7a76\u80fd\u91cf\u3001\u70ed\u91cf\u548c\u529f\u5982\u4f55\u652f\u914d\u7269\u8d28\u5b8f\u89c2\u884c\u4e3a\u7684\u5b66\u79d1\u3002\u5b83\u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5176\u5b9a\u5f8b\u7684\u666e\u9002\u6027\u2014\u2014\u8fd9\u4e9b\u5b9a\u5f8b\uff08\u5982\u80fd\u91cf\u5b88\u6052\u3001\u71b5\u589e\u539f\u7406\uff09\u9002\u7528\u4e8e\u6240\u6709\u5b8f\u89c2\u7cfb\u7edf\uff0c\u800c\u65e0\u9700\u5173\u5fc3\u6784\u6210\u8fd9\u4e9b\u7cfb\u7edf\u7684\u5fae\u89c2\u7c92\u5b50\uff08\u539f\u5b50\u3001\u5206\u5b50\uff09\u7684\u5177\u4f53\u7ec6\u8282\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_3","title":"\u57fa\u672c\u6982\u5ff5\u4e0e\u53d8\u91cf","text":"<p>\u8981\u6784\u5efa\u70ed\u529b\u5b66\u7406\u8bba\uff0c\u9996\u5148\u9700\u8981\u5efa\u7acb\u63cf\u8ff0\u7cfb\u7edf\u72b6\u6001\u7684\u8bed\u8a00\u3002\u70ed\u529b\u5b66\u5f15\u5165\u4e86\u4e24\u7c7b\u6839\u672c\u4e0d\u540c\u7684\u7269\u7406\u91cf\u6765\u523b\u753b\u5b8f\u89c2\u7cfb\u7edf\uff1a</p> <p>\u5f3a\u5ea6\u91cf\u4e0e\u5e7f\u5ef6\u91cf (Intensive and Extensive Variables) \u7684\u533a\u5206\u662f\u7406\u89e3\u70ed\u529b\u5b66\u7684\u7b2c\u4e00\u6b65\u3002\u5f3a\u5ea6\u91cf\u5982\u6e29\u5ea6(\\(T\\))\u3001\u538b\u5f3a(\\(P\\))\u3001\u5316\u5b66\u52bf(\\(\\mu\\))\uff0c\u5b83\u4eec\u4e0d\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u7684\u5927\u5c0f\u2014\u2014\u65e0\u8bba\u4e00\u676f\u6c34\u8fd8\u662f\u4e00\u6e56\u6c34\uff0c\u5176\u6e29\u5ea6\u90fd\u53ef\u4ee5\u662f\u76f8\u540c\u7684\u3002\u76f8\u53cd\uff0c\u5e7f\u5ef6\u91cf\u5982\u4f53\u79ef(\\(V\\))\u3001\u5185\u80fd(\\(E\\))\u3001\u71b5(\\(S\\))\u4e0e\u7cfb\u7edf\u7684\u5927\u5c0f\u6210\u6b63\u6bd4\uff0c\u5177\u6709\u53ef\u52a0\u6027\u3002\u8fd9\u79cd\u533a\u5206\u4e0d\u4ec5\u662f\u6570\u5b66\u4e0a\u7684\u4fbf\u5229\uff0c\u66f4\u53cd\u6620\u4e86\u7269\u7406\u4e16\u754c\u7684\u6df1\u5c42\u7ed3\u6784\uff1a\u5f3a\u5ea6\u91cf\u63cf\u8ff0\u7cfb\u7edf\u7684\"\u54c1\u8d28\"\uff0c\u5e7f\u5ef6\u91cf\u63cf\u8ff0\u7cfb\u7edf\u7684\"\u6570\u91cf\"\u3002</p> <p>\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u70ed\u529b\u5b66\u52bf (Thermodynamic Potentials) \u7684\u6982\u5ff5\u5e94\u8fd0\u800c\u751f\u3002\u5185\u80fd\\(U\\)\u3001\u4ea5\u59c6\u970d\u5179\u81ea\u7531\u80fd\\(F=U-TS\\)\u3001\u5409\u5e03\u65af\u81ea\u7531\u80fd\\(G=U-TS+PV\\)\u7b49\uff0c\u5b83\u4eec\u662f\u4e0d\u540c\u7ea6\u675f\u6761\u4ef6\u4e0b\u7684\u7279\u5f81\u51fd\u6570\u3002\u6bcf\u4e2a\u52bf\u51fd\u6570\u90fd\u9009\u62e9\u4e86\u4e00\u7ec4\"\u81ea\u7136\u53d8\u91cf\"\u2014\u2014\u4f8b\u5982\uff0c\u5409\u5e03\u65af\u81ea\u7531\u80fd\\(G(T,P)\\)\u4ee5\u6e29\u5ea6\u548c\u538b\u5f3a\u4e3a\u81ea\u7136\u53d8\u91cf\uff0c\u8fd9\u6b63\u662f\u5b9e\u9a8c\u4e2d\u6700\u5bb9\u6613\u63a7\u5236\u7684\u6761\u4ef6\u3002\u52bf\u51fd\u6570\u7684\u91cd\u8981\u6027\u5728\u4e8e\uff0c\u5b83\u4eec\u5728\u76f8\u5e94\u7ea6\u675f\u4e0b\u8fbe\u5230\u6781\u503c\u65f6\u5bf9\u5e94\u7740\u5e73\u8861\u6001\uff0c\u5176\u5bfc\u6570\u7ed9\u51fa\u6240\u6709\u5176\u4ed6\u70ed\u529b\u5b66\u91cf\u3002</p> <p>\u70ed\u4e0e\u529f (Heat &amp; Work) \u7684\u6982\u5ff5\u5219\u89c4\u5b9a\u4e86\u80fd\u91cf\u4ea4\u6362\u7684\u8bb0\u8d26\u65b9\u5f0f\u3002\u529f\u662f\u6709\u5e8f\u7684\u80fd\u91cf\u4f20\u9012\uff08\u5982\u6d3b\u585e\u538b\u7f29\u6c14\u4f53\uff09\uff0c\u800c\u70ed\u662f\u65e0\u5e8f\u7684\u80fd\u91cf\u4f20\u9012\uff08\u5982\u5206\u5b50\u78b0\u649e\uff09\u3002\u8fd9\u4e00\u533a\u5206\u770b\u4f3c\u7b80\u5355\uff0c\u5b9e\u5219\u6df1\u523b\uff1a\u5b83\u6697\u793a\u4e86\u80fd\u91cf\u54c1\u8d28\u7684\u5dee\u5f02\uff0c\u4e3a\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u8868\u8ff0\u5960\u5b9a\u4e86\u57fa\u7840\u3002</p> <p>\u5e73\u8861\u6001\u4e0e\u72b6\u6001\u51fd\u6570 (Equilibrium &amp; State Functions) \u662f\u70ed\u529b\u5b66\u7684\u6838\u5fc3\u6982\u5ff5\u3002\u5e73\u8861\u6001\u662f\u7cfb\u7edf\u5b8f\u89c2\u6027\u8d28\u4e0d\u968f\u65f6\u95f4\u53d8\u5316\u7684\u72b6\u6001\uff0c\u5b83\u662f\u70ed\u529b\u5b66\u5206\u6790\u7684\u8d77\u70b9\u3002\u72b6\u6001\u51fd\u6570\u5982\u5185\u80fd\\(U\\)\u3001\u71b5\\(S\\)\u3001\u7113\\(H\\)\u7b49\uff0c\u53ea\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001\uff0c\u800c\u4e0d\u4f9d\u8d56\u4e8e\u8fbe\u5230\u8be5\u72b6\u6001\u7684\u8def\u5f84\u3002\u8fd9\u79cd\u8def\u5f84\u65e0\u5173\u6027\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4efb\u610f\u53ef\u9006\u8def\u5f84\u6765\u8ba1\u7b97\u72b6\u6001\u51fd\u6570\u7684\u53d8\u5316\uff0c\u6781\u5927\u5730\u7b80\u5316\u4e86\u70ed\u529b\u5b66\u8ba1\u7b97\u3002\u72b6\u6001\u51fd\u6570\u7684\u5168\u5fae\u5206\u6027\u8d28\u4fdd\u8bc1\u4e86\u70ed\u529b\u5b66\u5173\u7cfb\u5f0f\u7684\u4e00\u81f4\u6027\uff0c\u5982\u9ea6\u514b\u65af\u97e6\u5173\u7cfb\u7b49\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_4","title":"\u70ed\u529b\u5b66\u5b9a\u5f8b\u7684\u7edf\u9886\u4f5c\u7528","text":"<p>\u70ed\u529b\u5b66\u56db\u5b9a\u5f8b (Laws of Thermodynamics) \u6784\u6210\u4e86\u6574\u4e2a\u7406\u8bba\u7684\u516c\u7406\u57fa\u7840\u3002\u7b2c\u96f6\u5b9a\u5f8b\u786e\u7acb\u4e86\u6e29\u5ea6\u6982\u5ff5\u7684\u4e00\u81f4\u6027\uff1b\u7b2c\u4e00\u5b9a\u5f8b\u8868\u8ff0\u80fd\u91cf\u5b88\u6052\\(dU = \\delta Q - \\delta W\\)\uff1b\u7b2c\u4e8c\u5b9a\u5f8b\u5f15\u5165\u71b5\u7684\u6982\u5ff5\uff0c\u6307\u51fa\u5b64\u7acb\u7cfb\u7edf\u7684\u71b5\u6c38\u4e0d\u51cf\u5c11\\(dS \\geq 0\\)\uff1b\u7b2c\u4e09\u5b9a\u5f8b\u5219\u89c4\u5b9a\u4e86\u71b5\u7684\u7edd\u5bf9\u6807\u5ea6\u3002</p> <p>\u5176\u4e2d\uff0c\u7b2c\u4e8c\u5b9a\u5f8b\u4e0e\u4e0d\u53ef\u9006\u6027 (Entropy &amp; Irreversibility) \u7684\u5173\u7cfb\u6700\u4e3a\u6df1\u523b\u3002\u71b5\u589e\u539f\u7406\u4e0d\u4ec5\u7ed9\u51fa\u4e86\u8fc7\u7a0b\u8fdb\u884c\u7684\u65b9\u5411\uff0c\u66f4\u4e3a\u5b8f\u89c2\u4e16\u754c\u5f15\u5165\u4e86\"\u65f6\u95f4\u4e4b\u7bad\"\u3002\u4e3a\u4ec0\u4e48\u70ed\u91cf\u603b\u662f\u4ece\u9ad8\u6e29\u7269\u4f53\u6d41\u5411\u4f4e\u6e29\u7269\u4f53\uff1f\u4e3a\u4ec0\u4e48\u6c14\u4f53\u603b\u662f\u4ece\u9ad8\u538b\u533a\u6269\u6563\u5230\u4f4e\u538b\u533a\uff1f\u7b54\u6848\u90fd\u8574\u542b\u5728\u71b5\u589e\u539f\u7406\u4e2d\u2014\u2014\u81ea\u7136\u8fc7\u7a0b\u603b\u662f\u671d\u7740\u589e\u52a0\u7cfb\u7edf\u603b\u71b5\u7684\u65b9\u5411\u8fdb\u884c\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_5","title":"\u4ece\u57fa\u7840\u5230\u5e94\u7528\u7684\u7406\u8bba\u4f53\u7cfb","text":"<p>\u6709\u4e86\u8fd9\u4e9b\u57fa\u672c\u6982\u5ff5\uff0c\u70ed\u529b\u5b66\u4fbf\u80fd\u6784\u5efa\u51fa\u4e30\u5bcc\u7684\u7406\u8bba\u4f53\u7cfb\uff1a</p> <p>\u72b6\u6001\u65b9\u7a0b (Equations of State) \u5982\u7406\u60f3\u6c14\u4f53\u5b9a\u5f8b\\(PV=nRT\\)\uff0c\u8fde\u63a5\u4e86\u53ef\u76f4\u63a5\u6d4b\u91cf\u7684\u5b8f\u89c2\u91cf\uff0c\u4f7f\u7406\u8bba\u4e0e\u5b9e\u9a8c\u76f8\u7ed3\u5408\u3002\u66f4\u590d\u6742\u7684\u7cfb\u7edf\u9700\u8981\u66f4\u7cbe\u7ec6\u7684\u72b6\u6001\u65b9\u7a0b\uff0c\u5982\u8303\u5fb7\u74e6\u5c14\u65af\u65b9\u7a0b\u7b49\u3002</p> <p>Gibbs-Thomson\u5173\u7cfb (Gibbs-Thomson Relation) \u7b49\u70ed\u529b\u5b66\u5173\u7cfb\u5f0f\u63ed\u793a\u4e86\u8868\u9762\u6548\u5e94\u5bf9\u76f8\u5e73\u8861\u7684\u5f71\u54cd\u3002\u8be5\u5173\u7cfb\u63cf\u8ff0\u4e86\u5c0f\u6db2\u6ef4\u6216\u6676\u4f53\u7684\u5e73\u8861\u84b8\u6c14\u538b\u5982\u4f55\u968f\u66f2\u7387\u534a\u5f84\u53d8\u5316\uff1a\\(\\ln(p/p_0) = \\frac{2\\gamma V_m}{rRT}\\)\uff0c\u5176\u4e2d\\(\\gamma\\)\u662f\u8868\u9762\u5f20\u529b\uff0c\\(V_m\\)\u662f\u6469\u5c14\u4f53\u79ef\uff0c\\(r\\)\u662f\u66f2\u7387\u534a\u5f84\u3002\u8fd9\u79cd\u5173\u7cfb\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u5c0f\u6db2\u6ef4\u66f4\u5bb9\u6613\u84b8\u53d1\uff0c\u5c0f\u6676\u4f53\u66f4\u5bb9\u6613\u6eb6\u89e3\uff0c\u662f\u7406\u89e3\u6210\u6838\u3001\u751f\u957f\u548c\u5965\u65af\u7279\u74e6\u5c14\u5fb7\u719f\u5316\u7b49\u73b0\u8c61\u7684\u5173\u952e\u3002</p> <p>\u70ed\u529b\u5b66\u54cd\u5e94\u51fd\u6570 (Thermodynamic Response Functions) \u2014\u2014\u6bd4\u70ed\u3001\u7b49\u6e29\u53ef\u538b\u7f29\u6027\u3001\u70ed\u81a8\u80c0\u7cfb\u6570\u7b49\u2014\u2014\u63cf\u8ff0\u7cfb\u7edf\u5bf9\u5916\u754c\u5fae\u5c0f\u6270\u52a8\u7684\u54cd\u5e94\u3002\u5b83\u4eec\u4e0d\u4ec5\u662f\u6750\u6599\u7684\u7279\u5f81\u53c2\u6570\uff0c\u66f4\u662f\u70ed\u529b\u5b66\u7a33\u5b9a\u6027\u7684\u5224\u636e\uff1a\u8d1f\u6bd4\u70ed\u6216\u8d1f\u53ef\u538b\u7f29\u6027\u610f\u5473\u7740\u7cfb\u7edf\u7684\u4e0d\u7a33\u5b9a\u3002</p> <p>\u5f53\u7cfb\u7edf\u53c2\u6570\u53d8\u5316\u65f6\uff0c\u53ef\u80fd\u53d1\u751f\u76f8\u53d8\u4e0e\u6d8c\u73b0\u73b0\u8c61 (Phase Transitions &amp; Emergence)\u3002\u6c34\u7684\u6cb8\u817e\u3001\u78c1\u4f53\u7684\u5c45\u91cc\u8f6c\u53d8\u3001\u8d85\u5bfc\u4f53\u7684\u8f6c\u53d8\u7b49\uff0c\u90fd\u662f\u5b8f\u89c2\u6709\u5e8f\u4ece\u5fae\u89c2\u65e0\u5e8f\u4e2d\u6d8c\u73b0\u7684\u4f8b\u5b50\u3002\u5728\u76f8\u53d8\u4e34\u754c\u70b9\u9644\u8fd1\uff0c\u7cfb\u7edf\u8868\u73b0\u51fa\u6807\u5ea6\u4e0d\u53d8\u6027\u548c\u666e\u9002\u884c\u4e3a\uff0c\u8fd9\u4e3a\u7406\u89e3\u590d\u6742\u7cfb\u7edf\u63d0\u4f9b\u4e86\u91cd\u8981\u7ebf\u7d22\u3002</p> <p>Ginzburg-Landau\u81ea\u7531\u80fd (Ginzburg-Landau Free Energy) \u7406\u8bba\u5219\u63d0\u4f9b\u4e86\u63cf\u8ff0\u76f8\u53d8\u7684\u7edf\u4e00\u6846\u67b6\u3002\u901a\u8fc7\u5f15\u5165\u5e8f\u53c2\u91cf\u2014\u2014\u63cf\u8ff0\u6709\u5e8f\u7a0b\u5ea6\u7684\u5b8f\u89c2\u53d8\u91cf\u2014\u2014\u5e76\u6784\u9020\u5176\u6709\u6548\u81ea\u7531\u80fd\uff0c\u53ef\u4ee5\u7cfb\u7edf\u5730\u5206\u6790\u5404\u79cd\u76f8\u53d8\u73b0\u8c61\u3002</p> <p>\u5f53\u7cfb\u7edf\u504f\u79bb\u5e73\u8861\u65f6\uff0c\u8f93\u8fd0\u5b9a\u5f8b (Transport Laws) \u5f00\u59cb\u53d1\u6325\u4f5c\u7528\u3002\u5085\u91cc\u53f6\u5bfc\u70ed\u5b9a\u5f8b\u3001\u9ecf\u6027\u6d41\u4f53\u7684\u672c\u6784\u5173\u7cfb\u7b49\uff0c\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5982\u4f55\u901a\u8fc7\u8f93\u8fd0\u8fc7\u7a0b\u56de\u5230\u5e73\u8861\u3002\u8fd9\u4e9b\u770b\u4f3c\u72ec\u7acb\u7684\u5b9a\u5f8b\uff0c\u5b9e\u9645\u4e0a\u90fd\u53ef\u4ee5\u4ece\u7ebf\u6027\u975e\u5e73\u8861\u70ed\u529b\u5b66\u7684\u6846\u67b6\u4e2d\u7edf\u4e00\u5bfc\u51fa\u3002</p> <p>\u6602\u8428\u683c\u5012\u6613\u5173\u7cfb (Onsager Relations) \\(L_{ij}=L_{ji}\\)\u5219\u63ed\u793a\u4e86\u4e0d\u540c\u8f93\u8fd0\u8fc7\u7a0b\u4e4b\u95f4\u7684\u6df1\u523b\u8054\u7cfb\u3002\u4f8b\u5982\uff0c\u6e29\u5ea6\u68af\u5ea6\u4e0d\u4ec5\u5f15\u8d77\u70ed\u6d41\uff0c\u8fd8\u53ef\u80fd\u5f15\u8d77\u7535\u6d41\uff08\u585e\u8d1d\u514b\u6548\u5e94\uff09\uff1b\u53cd\u4e4b\uff0c\u7535\u6d41\u4e5f\u53ef\u80fd\u5f15\u8d77\u70ed\u6d41\uff08\u5e15\u5c14\u5e16\u6548\u5e94\uff09\u3002\u6602\u8428\u683c\u8bc1\u660e\uff0c\u8fd9\u4e9b\u4ea4\u53c9\u6548\u5e94\u7684\u7cfb\u6570\u5fc5\u987b\u6ee1\u8db3\u5bf9\u79f0\u5173\u7cfb\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u5fae\u89c2\u52a8\u529b\u5b66\u7684\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u3002</p> <p>\u8fd9\u6837\uff0c\u4ece\u57fa\u672c\u6982\u5ff5\u51fa\u53d1\uff0c\u70ed\u529b\u5b66\u6784\u5efa\u4e86\u4e00\u4e2a\u903b\u8f91\u4e25\u5bc6\u3001\u5e94\u7528\u5e7f\u6cdb\u7684\u7406\u8bba\u4f53\u7cfb\uff0c\u4e3a\u7406\u89e3\u5b8f\u89c2\u7269\u7406\u4e16\u754c\u63d0\u4f9b\u4e86\u5f3a\u6709\u529b\u7684\u5de5\u5177\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#12","title":"1.2 \u7edf\u8ba1\u7269\u7406\uff1a\u8fde\u63a5\u5fae\u89c2\u4e0e\u5b8f\u89c2\u7684\u6865\u6881","text":"<p>\u5982\u679c\u8bf4\u70ed\u529b\u5b66\u6210\u529f\u5730\u63cf\u8ff0\u4e86\u5b8f\u89c2\u4e16\u754c\"\u662f\u4ec0\u4e48\"\u6837\uff0c\u90a3\u4e48\u7edf\u8ba1\u7269\u7406\u5219\u6df1\u523b\u5730\u89e3\u91ca\u4e86\"\u4e3a\u4ec0\u4e48\"\u662f\u8fd9\u6837\u3002\u7edf\u8ba1\u7269\u7406\u5b66\u662f\u89e3\u91ca\u70ed\u529b\u5b66\u5b8f\u89c2\u5b9a\u5f8b\u548c\u6d8c\u73b0\u96c6\u4f53\u884c\u4e3a\u5982\u4f55\u4ece\u5fae\u89c2\u81ea\u7531\u5ea6\u7684\u6982\u7387\u52a8\u529b\u5b66\u4e2d\u4ea7\u751f\u7684\u7406\u8bba\u6846\u67b6\uff0c\u5b83\u4f7f\u7528\u7cfb\u7efc\u3001\u6da8\u843d\u548c\u7c97\u7c92\u5316\u7b49\u6982\u5ff5\u5c06\u5fae\u89c2\u6001\u8fde\u63a5\u5230\u53ef\u89c2\u6d4b\u73b0\u8c61\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_6","title":"\u5fae\u89c2\u57fa\u7840\u4e0e\u6982\u7387\u63cf\u8ff0","text":"<p>\u7edf\u8ba1\u7269\u7406\u7684\u51fa\u53d1\u70b9\u662f\u627f\u8ba4\u4e00\u4e2a\u6839\u672c\u4e8b\u5b9e\uff1a\u6211\u4eec\u65e0\u6cd5\u4e5f\u65e0\u9700\u8ffd\u8e2a\u6bcf\u4e2a\u5fae\u89c2\u7c92\u5b50\u7684\u7cbe\u786e\u8fd0\u52a8\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u91c7\u7528\u6982\u7387\u7684\u8bed\u8a00\u6765\u63cf\u8ff0\u7cfb\u7edf\u3002</p> <p>\u5fae\u89c2\u6001 (Microstate) \u662f\u7cfb\u7edf\u6700\u7cbe\u7ec6\u7684\u63cf\u8ff0\u2014\u2014\u6307\u5b9a\u6bcf\u4e2a\u7c92\u5b50\u7684\u4f4d\u7f6e\u548c\u52a8\u91cf\u3002\u60f3\u8c61\u4e00\u4e2a\u5305\u542b\\(10^{23}\\)\u4e2a\u5206\u5b50\u7684\u6c14\u4f53\uff0c\u5176\u5fae\u89c2\u6001\u5c31\u662f\u8fd9\u5929\u6587\u6570\u5b57\u4e2a\u7c92\u5b50\u7684\u5b8c\u6574\"\u5feb\u7167\"\u3002\u7136\u800c\uff0c\u5b8f\u89c2\u6d4b\u91cf\uff08\u5982\u6e29\u5ea6\u3001\u538b\u5f3a\uff09\u5bf9\u5e94\u7684\u4e0d\u662f\u5355\u4e00\u5fae\u89c2\u6001\uff0c\u800c\u662f\u65e0\u6570\u4e2a\u5fae\u89c2\u6001\u7684\u96c6\u5408\u3002\u8fd9\u5c31\u5f15\u51fa\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u8ba4\u8bc6\uff1a\u5b8f\u89c2\u6027\u8d28\u662f\u5fae\u89c2\u6001\u7684\u7edf\u8ba1\u5e73\u5747\u3002</p> <p>\u4e3a\u4e86\u5904\u7406\u8fd9\u79cd\u7edf\u8ba1\u6027\u8d28\uff0c\u7edf\u8ba1\u7269\u7406\u5f15\u5165\u4e86\u6982\u7387\u5206\u5e03 (Probability Distribution) \u7684\u6982\u5ff5\u3002\u4e0d\u540c\u5fae\u89c2\u6001\u51fa\u73b0\u7684\u6982\u7387\u4e0d\u540c\uff0c\u8fd9\u4e2a\u6982\u7387\u5206\u5e03\u5305\u542b\u4e86\u7cfb\u7edf\u7684\u5168\u90e8\u7edf\u8ba1\u4fe1\u606f\u3002\u5173\u952e\u95ee\u9898\u662f\uff1a\u4ec0\u4e48\u51b3\u5b9a\u4e86\u8fd9\u4e2a\u6982\u7387\u5206\u5e03\uff1f</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_7","title":"\u7cfb\u7efc\u7406\u8bba\u4e0e\u914d\u5206\u51fd\u6570","text":"<p>\u7cfb\u7efc (Ensemble) \u662f\u7edf\u8ba1\u7269\u7406\u7684\u6838\u5fc3\u6982\u5ff5\u2014\u2014\u5b83\u662f\u5927\u91cf\u5904\u4e8e\u76f8\u540c\u5b8f\u89c2\u7ea6\u675f\u4e0b\u7684\u7cfb\u7edf\u590d\u5236\u54c1\u7684\u96c6\u5408\u3002\u4e0d\u540c\u7684\u7ea6\u675f\u6761\u4ef6\u5bf9\u5e94\u4e0d\u540c\u7684\u7cfb\u7efc\uff1a\u6b63\u5219\u7cfb\u7efc\u56fa\u5b9a\u6e29\u5ea6\uff0c\u5de8\u6b63\u5219\u7cfb\u7efc\u56fa\u5b9a\u6e29\u5ea6\u548c\u5316\u5b66\u52bf\u7b49\u3002</p> <p>\u914d\u5206\u51fd\u6570 (Partition Function) \\(Z = \\sum_i e^{-E_i/k_B T}\\)\u662f\u7cfb\u7efc\u7406\u8bba\u7684\u6570\u5b66\u6838\u5fc3\u3002\u5b83\u770b\u4f3c\u7b80\u5355\uff0c\u5b9e\u5219\u5305\u542b\u4e86\u7cfb\u7edf\u7684\u5168\u90e8\u70ed\u529b\u5b66\u4fe1\u606f\u3002\u914d\u5206\u51fd\u6570\u7684\u7269\u7406\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\u5b83\u662f\u6240\u6709\u53ef\u80fd\u5fae\u89c2\u6001\u7684\"\u6743\u91cd\"\u4e4b\u548c\uff0c\u5176\u4e2d\u6bcf\u4e2a\u6001\u7684\u6743\u91cd\u7531\u73bb\u5c14\u5179\u66fc\u56e0\u5b50\\(e^{-E_i/k_B T}\\)\u7ed9\u51fa\u2014\u2014\u80fd\u91cf\u8d8a\u9ad8\u7684\u6001\uff0c\u51fa\u73b0\u6982\u7387\u8d8a\u5c0f\u3002</p> <p>\u4e00\u65e6\u6c42\u5f97\u914d\u5206\u51fd\u6570\uff0c\u70ed\u529b\u5b66\u4fbf\u4ece\u7edf\u8ba1\u7269\u7406\u4e2d\u81ea\u7136\u6d8c\u73b0\uff1a\u81ea\u7531\u80fd\\(F = -k_B T \\ln Z\\)\uff0c\u71b5\\(S = -\\partial F/\\partial T\\)\uff0c\u5185\u80fd\\(U = \\langle E \\rangle\\)\u7b49\u3002\u8fd9\u79cd\u4ece\u5fae\u89c2\u5230\u5b8f\u89c2\u7684\u63a8\u5bfc\uff0c\u5c55\u793a\u4e86\u7edf\u8ba1\u7269\u7406\u7684\u89e3\u91ca\u529b\u91cf\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_8","title":"\u7edf\u8ba1\u71b5\u7684\u6df1\u523b\u5185\u6db5","text":"<p>\u7edf\u8ba1\u71b5 (Statistical Entropy) \u7684\u6982\u5ff5\u5c06\u70ed\u529b\u5b66\u7684\u62bd\u8c61\u91cf\u8d4b\u4e88\u4e86\u5fae\u89c2\u610f\u4e49\u3002\u73bb\u5c14\u5179\u66fc\u7684\u516c\u5f0f\\(S = k_B \\ln \\Omega\\)\u544a\u8bc9\u6211\u4eec\uff0c\u71b5\u8861\u91cf\u7684\u662f\u7cfb\u7edf\u5fae\u89c2\u6001\u7684\"\u591a\u6837\u6027\"\u2014\u2014\u53ef\u80fd\u7684\u5fae\u89c2\u6001\u8d8a\u591a\uff0c\u71b5\u8d8a\u5927\u3002\u5409\u5e03\u65af\u7684\u66f4\u4e00\u822c\u8868\u8ff0\\(S = -k_B \\sum_i p_i \\ln p_i\\)\u5219\u5c06\u71b5\u7406\u89e3\u4e3a\u6982\u7387\u5206\u5e03\u7684\"\u4fe1\u606f\u91cf\"\u6216\"\u4e0d\u786e\u5b9a\u6027\"\u3002</p> <p>\u8fd9\u79cd\u7406\u89e3\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u71b5\u603b\u662f\u589e\u52a0\uff1a\u5b64\u7acb\u7cfb\u7edf\u603b\u662f\u4ece\u5c11\u6570\u7279\u6b8a\u7684\u5fae\u89c2\u6001\uff08\u4f4e\u71b5\uff09\u6f14\u5316\u5230\u5927\u91cf\u666e\u901a\u7684\u5fae\u89c2\u6001\uff08\u9ad8\u71b5\uff09\uff0c\u8fd9\u7eaf\u7cb9\u662f\u6982\u7387\u7684\u7ed3\u679c\u2014\u2014\"\u666e\u901a\"\u7684\u60c5\u51b5\u6bd4\"\u7279\u6b8a\"\u7684\u60c5\u51b5\u66f4\u53ef\u80fd\u51fa\u73b0\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_9","title":"\u6da8\u843d\u73b0\u8c61\u4e0e\u5173\u8054\u51fd\u6570","text":"<p>\u7edf\u8ba1\u7269\u7406\u4e0d\u4ec5\u9884\u6d4b\u5e73\u5747\u884c\u4e3a\uff0c\u66f4\u63ed\u793a\u4e86\u6da8\u843d (Fluctuations) \u7684\u666e\u904d\u6027\u3002\u7531\u4e8e\u5fae\u89c2\u7c92\u5b50\u7684\u968f\u673a\u8fd0\u52a8\uff0c\u4efb\u4f55\u5b8f\u89c2\u91cf\u90fd\u4f1a\u5728\u5176\u5e73\u5747\u503c\u9644\u8fd1\u6da8\u843d\u3002\u8fd9\u4e9b\u6da8\u843d\u4e0d\u662f\"\u566a\u97f3\"\uff0c\u800c\u662f\u643a\u5e26\u91cd\u8981\u4fe1\u606f\u7684\u7269\u7406\u73b0\u8c61\u3002</p> <p>\u5173\u8054\u51fd\u6570 (Correlation Functions) \u63cf\u8ff0\u4e0d\u540c\u65f6\u7a7a\u70b9\u7684\u6da8\u843d\u5982\u4f55\u76f8\u4e92\u5173\u8054\uff0c\u5b83\u4eec\u662f\u7406\u89e3\u96c6\u4f53\u884c\u4e3a\u7684\u5173\u952e\u3002\u5728\u76f8\u53d8\u4e34\u754c\u70b9\u9644\u8fd1\uff0c\u5173\u8054\u957f\u5ea6\u53d1\u6563\uff0c\u7cfb\u7edf\u8868\u73b0\u51fa\u957f\u7a0b\u5173\u8054\u2014\u2014\u8fd9\u6b63\u662f\u5b8f\u89c2\u6709\u5e8f\u4ece\u5fae\u89c2\u65e0\u5e8f\u4e2d\u6d8c\u73b0\u7684\u673a\u5236\u3002</p> <p>\u5e8f\u53c2\u91cf (Order Parameter) \u662f\u63cf\u8ff0\u7cfb\u7edf\u6709\u5e8f\u7a0b\u5ea6\u7684\u5b8f\u89c2\u53d8\u91cf\uff0c\u5b83\u5728\u76f8\u53d8\u7406\u8bba\u4e2d\u5360\u636e\u6838\u5fc3\u5730\u4f4d\u3002\u5728\u6709\u5e8f\u76f8\u4e2d\u5e8f\u53c2\u91cf\u975e\u96f6\uff0c\u5728\u65e0\u5e8f\u76f8\u4e2d\u4e3a\u96f6\u3002\u4f8b\u5982\uff0c\u5728\u94c1\u78c1\u4f53\u4e2d\uff0c\u78c1\u5316\u5f3a\u5ea6\u662f\u5e8f\u53c2\u91cf\uff1b\u5728\u6db2-\u6c14\u76f8\u53d8\u4e2d\uff0c\u5bc6\u5ea6\u5dee\u662f\u5e8f\u53c2\u91cf\u3002\u5e8f\u53c2\u91cf\u7684\u6982\u5ff5\u4f7f\u6211\u4eec\u80fd\u591f\u7528\u7edf\u4e00\u7684\u6570\u5b66\u8bed\u8a00\u63cf\u8ff0\u5404\u79cd\u770b\u4f3c\u4e0d\u540c\u7684\u76f8\u53d8\u73b0\u8c61\uff0c\u63ed\u793a\u5b83\u4eec\u7684\u5171\u540c\u672c\u8d28\u3002</p> <p>\u91cd\u6574\u5316\u7fa4 (Renormalization Group) \u662f\u5904\u7406\u591a\u5c3a\u5ea6\u7269\u7406\u95ee\u9898\u7684\u5f3a\u5927\u7406\u8bba\u5de5\u5177\u3002\u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\u7814\u7a76\u7269\u7406\u7cfb\u7edf\u5728\u4e0d\u540c\u89c2\u5bdf\u5c3a\u5ea6\u4e0b\u7684\u884c\u4e3a\u53d8\u5316\u3002\u901a\u8fc7\u7cfb\u7edf\u5730\"\u7c97\u7c92\u5316\"\u2014\u2014\u5373\u5ffd\u7565\u77ed\u7a0b\u7ec6\u8282\u800c\u4fdd\u7559\u957f\u7a0b\u884c\u4e3a\u2014\u2014\u91cd\u6574\u5316\u7fa4\u63ed\u793a\u4e86\u4e34\u754c\u73b0\u8c61\u7684\u666e\u9002\u6027\uff1a\u4e0d\u540c\u7684\u5fae\u89c2\u7cfb\u7edf\u5728\u4e34\u754c\u70b9\u9644\u8fd1\u53ef\u80fd\u8868\u73b0\u51fa\u76f8\u540c\u7684\u5b8f\u89c2\u884c\u4e3a\uff0c\u56e0\u4e3a\u5b83\u4eec\u5c5e\u4e8e\u540c\u4e00\u4e2a\"\u666e\u9002\u7c7b\"\u3002\u8fd9\u4e00\u7406\u8bba\u4e0d\u4ec5\u89e3\u91ca\u4e86\u76f8\u53d8\u7684\u666e\u9002\u6027\uff0c\u66f4\u4e3a\u7406\u89e3\u590d\u6742\u7cfb\u7edf\u4e2d\u7684\u6807\u5ea6\u884c\u4e3a\u63d0\u4f9b\u4e86\u6df1\u523b\u6d1e\u5bdf\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_10","title":"\u4ece\u5fae\u89c2\u5230\u5b8f\u89c2\u7684\u7406\u8bba\u5de5\u5177","text":"<p>\u7edf\u8ba1\u7269\u7406\u53d1\u5c55\u51fa\u4e86\u4e00\u7cfb\u5217\u5f3a\u5927\u7684\u7406\u8bba\u5de5\u5177\u6765\u5904\u7406\u590d\u6742\u7cfb\u7edf\uff1a</p> <p>\u5927\u6570\u5b9a\u5f8b (Law of Large Numbers) \u4fdd\u8bc1\u4e86\u5b8f\u89c2\u91cf\u7684\u786e\u5b9a\u6027\uff1a\u867d\u7136\u5355\u4e2a\u7c92\u5b50\u7684\u884c\u4e3a\u662f\u968f\u673a\u7684\uff0c\u4f46\u5927\u91cf\u7c92\u5b50\u7684\u5e73\u5747\u884c\u4e3a\u662f\u786e\u5b9a\u7684\u3002\u8fd9\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u5b8f\u89c2\u4e16\u754c\u770b\u8d77\u6765\u662f\u786e\u5b9a\u6027\u7684\uff0c\u5c3d\u7ba1\u5176\u5fae\u89c2\u57fa\u7840\u662f\u968f\u673a\u7684\u3002</p> <p>\u73bb\u5c14\u5179\u66fc\u5206\u5e03 (Boltzmann Distribution) \\(p_i \\propto e^{-E_i/k_B T}\\)\u662f\u5e73\u8861\u6001\u7684\u666e\u9002\u6982\u7387\u5206\u5e03\uff0c\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u7684\u5177\u4f53\u7ec6\u8282\uff0c\u53ea\u53d6\u51b3\u4e8e\u80fd\u91cf\u548c\u6e29\u5ea6\u3002\u8fd9\u79cd\u666e\u9002\u6027\u662f\u7edf\u8ba1\u7269\u7406\u9884\u6d4b\u529b\u7684\u6e90\u6cc9\u3002</p> <p>\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Fluctuation-Dissipation Theorems) \u5efa\u7acb\u4e86\u5e73\u8861\u6da8\u843d\u4e0e\u975e\u5e73\u8861\u54cd\u5e94\u4e4b\u95f4\u7684\u5b9a\u91cf\u5173\u7cfb\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u7cfb\u7edf\u7684\u81ea\u53d1\u6da8\u843d\u6765\u9884\u6d4b\u5176\u5bf9\u5916\u754c\u6270\u52a8\u7684\u54cd\u5e94\u3002</p> <p>\u5f53\u7cfb\u7edf\u63a5\u8fd1\u76f8\u53d8\u65f6\uff0c\u4e34\u754c\u73b0\u8c61 (Critical Phenomena) \u5c55\u73b0\u4e86\u7edf\u8ba1\u7269\u7406\u7684\u53e6\u4e00\u9762\uff1a\u7cfb\u7edf\u5728\u4e34\u754c\u70b9\u9644\u8fd1\u8868\u73b0\u51fa\u666e\u9002\u6027\u548c\u6807\u5ea6\u5f8b (Universality &amp; Scaling Laws)\uff0c\u4e0d\u540c\u7684\u5fae\u89c2\u7cfb\u7edf\u53ef\u80fd\u8868\u73b0\u51fa\u76f8\u540c\u7684\u5b8f\u89c2\u884c\u4e3a\u3002\u8fd9\u79cd\u666e\u9002\u6027\u6697\u793a\u5b58\u5728\u66f4\u6df1\u5c42\u7684\u5bf9\u79f0\u6027\u548c\u4e0d\u53d8\u6027\u3002</p> <p>\u5e8f\u53c2\u91cf (Order Parameter) \u6982\u5ff5\u4e3a\u63cf\u8ff0\u6709\u5e8f-\u65e0\u5e8f\u8f6c\u53d8\u63d0\u4f9b\u4e86\u7edf\u4e00\u8bed\u8a00\uff0c\u800c\u91cd\u6574\u5316\u7fa4 (Renormalization Group) \u7406\u8bba\u5219\u63ed\u793a\u4e86\u4e0d\u540c\u5c3a\u5ea6\u4e0a\u7269\u7406\u89c4\u5f8b\u7684\u5173\u8054\uff0c\u6210\u4e3a\u7406\u89e3\u4e34\u754c\u73b0\u8c61\u548c\u591a\u5c3a\u5ea6\u7269\u7406\u7684\u5f3a\u5927\u5de5\u5177\u3002</p> <p>\u7ebf\u6027\u54cd\u5e94\u7406\u8bba (Linear Response Theory) \u5904\u7406\u7cfb\u7edf\u5bf9\u5fae\u5c0f\u5916\u754c\u6270\u52a8\u7684\u54cd\u5e94\uff0c\u5b83\u5c06\u975e\u5e73\u8861\u95ee\u9898\u8f6c\u5316\u4e3a\u5e73\u8861\u6001\u6027\u8d28\u7684\u8ba1\u7b97\uff0c\u4e3a\u7406\u89e3\u8f93\u8fd0\u73b0\u8c61\u5960\u5b9a\u4e86\u57fa\u7840\u3002</p> <p>\u6700\u7ec8\uff0c\u7edf\u8ba1\u7269\u7406\u8fd8\u5fc5\u987b\u9762\u5bf9\u4e00\u4e2a\u6df1\u523b\u95ee\u9898\uff1a\u4e0d\u53ef\u9006\u6027\u7684\u6d8c\u73b0 (Emergence of Irreversibility)\u3002\u5fae\u89c2\u52a8\u529b\u5b66\u662f\u65f6\u95f4\u53ef\u9006\u7684\uff0c\u4f46\u5b8f\u89c2\u73b0\u8c61\u5374\u8868\u73b0\u51fa\u660e\u663e\u7684\u65b9\u5411\u6027\u3002\u7edf\u8ba1\u7269\u7406\u901a\u8fc7\u6982\u7387\u8bba\u548c\u5927\u6570\u5b9a\u5f8b\u89e3\u91ca\u4e86\u8fd9\u79cd\u8868\u89c2\u77db\u76fe\uff1a\u4e0d\u53ef\u9006\u6027\u4e0d\u662f\u7edd\u5bf9\u7684\uff0c\u800c\u662f\u538b\u5012\u6027\u6982\u7387\u7684\u7ed3\u679c\u3002</p> <p>\u901a\u8fc7\u8fd9\u4e9b\u6982\u5ff5\u548c\u5de5\u5177\uff0c\u7edf\u8ba1\u7269\u7406\u6210\u529f\u5730\u67b6\u8d77\u4e86\u5fae\u89c2\u4e0e\u5b8f\u89c2\u4e4b\u95f4\u7684\u6865\u6881\uff0c\u4e0d\u4ec5\u89e3\u91ca\u4e86\u70ed\u529b\u5b66\u5b9a\u5f8b\u7684\u8d77\u6e90\uff0c\u66f4\u4e3a\u7406\u89e3\u590d\u6742\u7cfb\u7edf\u7684\u6d8c\u73b0\u884c\u4e3a\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u7406\u8bba\u57fa\u7840\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#13","title":"1.3 \u975e\u5e73\u8861\u7269\u7406\u5b66\uff1a\u8d85\u8d8a\u5e73\u8861\u7684\u5e7f\u9614\u9886\u57df","text":"<p> \u975e\u5e73\u8861\u7269\u7406\u5b66\u662f\u7814\u7a76\u8fdc\u79bb\u70ed\u529b\u5b66\u5e73\u8861\u7cfb\u7edf\u7684\u9886\u57df\uff0c\u5b83\u6574\u5408\u5b8f\u89c2\u70ed\u529b\u5b66\u5b9a\u5f8b\u4e0e\u5fae\u89c2\u7edf\u8ba1\u63cf\u8ff0\uff0c\u4ee5\u7406\u89e3\u8f93\u8fd0\u3001\u8017\u6563\u3001\u6da8\u843d\u4ee5\u53ca\u8de8\u5c3a\u5ea6\u6d8c\u73b0\u884c\u4e3a\u3002\u70ed\u529b\u5b66\u548c\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u867d\u7136\u6210\u5c31\u8f89\u714c\uff0c\u4f46\u5176\u9002\u7528\u8303\u56f4\u4e3b\u8981\u5c40\u9650\u4e8e\u5e73\u8861\u6001\u6216\u8fd1\u5e73\u8861\u6001\u7cfb\u7edf\u3002\u7136\u800c\uff0c\u5b87\u5b99\u4e2d\u7edd\u5927\u591a\u6570\u5f15\u4eba\u5165\u80dc\u7684\u73b0\u8c61\u2014\u2014\u4ece\u7ec6\u80de\u7684\u751f\u547d\u6d3b\u52a8\u5230\u6c14\u8c61\u7684\u6f14\u53d8\u2014\u2014\u90fd\u53d1\u751f\u5728\u8fdc\u79bb\u5e73\u8861\u7684\u72b6\u6001\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_11","title":"\u975e\u5e73\u8861\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u5f81","text":"<p>\u8981\u7406\u89e3\u975e\u5e73\u8861\u7269\u7406\u5b66\uff0c\u9996\u5148\u9700\u8981\u8ba4\u8bc6\u975e\u5e73\u8861\u7cfb\u7edf\u4e0e\u5e73\u8861\u7cfb\u7edf\u7684\u6839\u672c\u5dee\u5f02\u3002</p> <p>\u9a71\u52a8\u4e0e\u8017\u6563\u7684\u5e73\u8861\u662f\u975e\u5e73\u8861\u7cfb\u7edf\u7684\u6838\u5fc3\u7279\u5f81\u3002\u4e0e\u5e73\u8861\u7cfb\u7edf\u4e0d\u540c\uff0c\u975e\u5e73\u8861\u7cfb\u7edf\u9700\u8981\u6301\u7eed\u7684\u80fd\u91cf\u6216\u7269\u8d28\u8f93\u5165\u6765\u7ef4\u6301\u5176\u72b6\u6001\u3002\u8fd9\u79cd\u5916\u90e8\u9a71\u52a8\u4e0e\u7cfb\u7edf\u5185\u90e8\u7684\u8017\u6563\u8fc7\u7a0b\u8fbe\u6210\u52a8\u6001\u5e73\u8861\uff0c\u4f7f\u7cfb\u7edf\u80fd\u591f\u7ef4\u6301\u5728\u8fdc\u79bb\u70ed\u529b\u5b66\u5e73\u8861\u7684\u72b6\u6001\u3002</p> <p>\u6d41\u4e0e\u4ea7\u751f\u7387 (Fluxes and Production Rates) \u7684\u6982\u5ff5\u5728\u975e\u5e73\u8861\u7269\u7406\u4e2d\u5360\u636e\u4e2d\u5fc3\u5730\u4f4d\u3002\u5728\u8fd9\u4e9b\u7cfb\u7edf\u4e2d\uff0c\u80fd\u91cf\u3001\u7269\u8d28\u3001\u7535\u8377\u7b49\u4f1a\u6301\u7eed\u6d41\u52a8\uff0c\u5f62\u6210\u5404\u79cd\"\u6d41\"\u2014\u2014\u70ed\u6d41\u3001\u7c92\u5b50\u6d41\u3001\u7535\u6d41\u7b49\u3002\u540c\u65f6\uff0c\u7cfb\u7edf\u4f1a\u6301\u7eed\u4ea7\u751f\u71b5\uff0c\u8fd9\u662f\u4e0d\u53ef\u9006\u8fc7\u7a0b\u7684\u76f4\u63a5\u4f53\u73b0\u3002\u8fd9\u4e9b\u6d41\u4e0d\u662f\u77ac\u65f6\u7684\u6270\u52a8\uff0c\u800c\u662f\u7cfb\u7edf\u7a33\u5b9a\u5b58\u5728\u7684\u7279\u5f81\u3002</p> <p>\u975e\u5e73\u8861\u7a33\u6001 (Nonequilibrium Steady State, NESS) \u662f\u975e\u5e73\u8861\u7269\u7406\u5b66\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u6982\u5ff5\u3002\u8bb8\u591a\u975e\u5e73\u8861\u7cfb\u7edf\u5728\u6301\u7eed\u7684\u9a71\u52a8\u4e0b\uff0c\u4f1a\u8fbe\u5230\u4e00\u79cd\u8868\u9762\u4e0a\"\u7a33\u5b9a\"\u7684\u72b6\u6001\uff1a\u5b8f\u89c2\u6027\u8d28\u4e0d\u968f\u65f6\u95f4\u6539\u53d8\uff0c\u4f46\u5185\u90e8\u5b58\u5728\u6301\u7eed\u7684\u51c0\u6d41\u548c\u71b5\u4ea7\u751f\u3002\u751f\u547d\u7cfb\u7edf\u662fNESS\u7684\u5178\u578b\u4f8b\u5b50\u2014\u2014\u6d3b\u7ec6\u80de\u901a\u8fc7\u6301\u7eed\u7684\u65b0\u9648\u4ee3\u8c22\u7ef4\u6301\u5176\u9ad8\u5ea6\u6709\u5e8f\u7684\u72b6\u6001\uff0c\u770b\u4f3c\u9759\u6b62\uff0c\u5b9e\u5219\u5145\u6ee1\u52a8\u6001\u8fc7\u7a0b\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_12","title":"\u7ec6\u8282\u5e73\u8861\u7684\u7834\u7f3a\u4e0e\u5faa\u73af\u6d41","text":"<p>\u7ec6\u8282\u5e73\u8861\u7834\u7f3a (Breaking of Detailed Balance) \u662f\u533a\u5206\u5e73\u8861\u4e0e\u975e\u5e73\u8861\u7cfb\u7edf\u7684\u6839\u672c\u6807\u5fd7\u3002\u5728\u5e73\u8861\u6001\uff0c\u5fae\u89c2\u53ef\u9006\u6027\u8981\u6c42\u4efb\u4f55\u57fa\u5143\u8fc7\u7a0b\u4e0e\u5176\u9006\u8fc7\u7a0b\u7684\u901f\u7387\u5fc5\u987b\u76f8\u7b49\uff0c\u8fd9\u5c31\u662f\u7ec6\u8282\u5e73\u8861\u539f\u7406\u3002\u6570\u5b66\u4e0a\u8868\u8fbe\u4e3a\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u72b6\u6001\\(i\\)\u548c\\(j\\)\uff0c\u5fc5\u987b\u6ee1\u8db3\\(\\pi_i W_{i \\to j} = \\pi_j W_{j \\to i}\\)\uff0c\u5176\u4e2d\\(\\pi_i\\)\u662f\u5e73\u8861\u6982\u7387\uff0c\\(W_{i \\to j}\\)\u662f\u8f6c\u79fb\u901f\u7387\u3002</p> <p>\u5728\u975e\u5e73\u8861\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u4e00\u539f\u7406\u88ab\u7cfb\u7edf\u6027\u5730\u8fdd\u80cc\u3002\u5916\u90e8\u9a71\u52a8\u6253\u7834\u4e86\u5fae\u89c2\u8fc7\u7a0b\u7684\u5bf9\u79f0\u6027\uff0c\u5bfc\u81f4\u51c0\u7684\u5faa\u73af\u6d41\u548c\u5b9a\u5411\u8fd0\u52a8\u3002\u8fd9\u79cd\u7834\u7f3a\u4e0d\u662f\u5076\u7136\u7684\u6270\u52a8\uff0c\u800c\u662f\u7cfb\u7edf\u529f\u80fd\u7684\u57fa\u7840\u2014\u2014\u6b63\u662f\u8fd9\u79cd\u4e0d\u5bf9\u79f0\u6027\u4f7f\u5f97\u5206\u5b50\u9a6c\u8fbe\u80fd\u591f\u5b9a\u5411\u8fd0\u52a8\uff0c\u4f7f\u5f97\u7ec6\u80de\u80fd\u591f\u4e3b\u52a8\u8f93\u8fd0\u7269\u8d28\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_13","title":"\u4ece\u968f\u673a\u8fc7\u7a0b\u5230\u573a\u8bba\u7684\u7406\u8bba\u4f53\u7cfb","text":"<p>\u6839\u636ePPT\u663e\u793a\u7684\u8bfe\u7a0b\u7ed3\u6784\uff0c\u975e\u5e73\u8861\u7269\u7406\u5b66\u7684\u7406\u8bba\u4f53\u7cfb\u53ef\u4ee5\u5206\u4e3a\u56db\u4e2a\u9012\u8fdb\u7684\u5c42\u6b21\uff1a</p> <p>\u7b2c\u4e00\u90e8\u5206\uff1a\u968f\u673a\u8fc7\u7a0b\u57fa\u7840 (Foundations of Stochastic Processes) \u5efa\u7acb\u4e86\u63cf\u8ff0\u968f\u673a\u6027\u7684\u6570\u5b66\u8bed\u8a00\u3002\u4ece\u968f\u673a\u6e38\u8d70\u4e0e\u5e03\u6717\u8fd0\u52a8 (Random Walks and Brownian Motion) \u5f00\u59cb\uff0c\u6211\u4eec\u5b66\u4e60\u4f2f\u52aa\u5229/\u9ad8\u65af\u6e38\u8d70\u548c\u6269\u6563\u65b9\u7a0b\u7b49\u57fa\u672c\u6a21\u578b\u3002\u57fa\u7840\u968f\u673a\u6a21\u578b (Elementary Stochastic Models) \u5f15\u5165\u6cca\u677e\u8fc7\u7a0b\u3001\u751f\u706d\u52a8\u529b\u5b66\u548c\u5206\u5b50\u9a6c\u8fbe\u7b49\u5177\u4f53\u4f8b\u5b50\u3002\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u4e0e\u4e3b\u65b9\u7a0b (Markov Processes and Master Equations) \u5219\u5efa\u7acb\u4e86Chapman-Kolmogorov\u65b9\u7a0b\u548c\u79bb\u6563/\u8fde\u7eed\u72b6\u6001\u7a7a\u95f4\u7684\u7edf\u4e00\u6846\u67b6\u3002</p> <ul> <li>2. \u7b80\u5355\u968f\u673a\u6e38\u8d70</li> <li>3. \u9ad8\u65af\u968f\u673a\u6e38\u8d70\u4e0e\u6cca\u677e\u8fc7\u7a0b</li> <li>4. Gillespie \u7b97\u6cd5\u3001\u4e3b\u65b9\u7a0b\u3001\u751f\u6210\u51fd\u6570\u4e0e\u79cd\u7fa4\u52a8\u529b\u5b66</li> <li>5. \u79cd\u7fa4\u52a8\u6001\u5b66\uff1a\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u4e0eLotka-Volterra \u7cfb\u7edf</li> <li>6. \u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u57fa\u672c\u65b9\u7a0b\uff1a\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b</li> <li>7. \u524d\u5411\u4e3b\u65b9\u7a0b\u4e0eQ\u77e9\u9635</li> <li>8. \u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\u3001\u7a33\u6001\u4e0e\u7ec6\u81f4\u5e73\u8861</li> <li>9. \u975e\u5e73\u8861\u6001\uff1a\u4e0d\u53ef\u9006\u6027\u4e0e\u71b5\u4ea7\u751f\u7684\u63a8\u8bba</li> <li>10. \u57c3\u4f26\u8d39\u65af\u7279\u6a21\u578b\u3001\u71b5\u4e0eKL\u6563\u5ea6</li> </ul> <p>\u7b2c\u4e8c\u90e8\u5206\uff1a\u7c92\u5b50\u7684\u968f\u673a\u52a8\u529b\u5b66 (Stochastic Dynamics of Particles) \u5c06\u62bd\u8c61\u7684\u6570\u5b66\u5de5\u5177\u5e94\u7528\u4e8e\u5177\u4f53\u7684\u7269\u7406\u5bf9\u8c61\u3002\u6717\u4e4b\u4e07\u4e0e\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b (Langevin and Fokker-Planck Equations) \u5904\u7406\u8def\u5f84\u79ef\u5206\u548c\u4e58\u6027\u566a\u58f0\u95ee\u9898\u3002\u968f\u673a\u6a21\u62df\u6280\u672f (Stochastic Simulation Techniques) \u4ecb\u7ecdGillespie\u7b97\u6cd5\u548c\u968f\u673a\u79ef\u5206\u65b9\u6cd5\u3002\u968f\u673a\u70ed\u529b\u5b66 (Stochastic Thermodynamics) \u5219\u5728\u8f68\u8ff9\u5c42\u9762\u8ba8\u8bba\u71b5\u4ea7\u751f\u3001\u7ec6\u8282\u5e73\u8861\u548c\u6da8\u843d\u5b9a\u7406\u3002</p> <ul> <li>11. \u8fde\u7eed\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u4e0e\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b</li> <li>12. \u5e03\u6717\u8fd0\u52a8\u4e0e\u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b\u8fc7\u7a0b</li> <li>13. \u4f5c\u4e3a\u968f\u673a\u8fc7\u7a0b\u7684\u8499\u7279\u5361\u6d1b\u91c7\u6837</li> <li>14. \u54c8\u5bc6\u5c14\u987f\u8499\u7279\u5361\u6d1b\u91c7\u6837</li> <li>15. \u8d8b\u5316\u6027\u3001\u8dd1\u52a8-\u7ffb\u6eda\u8fd0\u52a8\u4e0eKeller-Segel\u6a21\u578b</li> <li>16. Schnitzer\u6a21\u578b\u3001\u53cd\u5e38\u6269\u6563\u4e0e\u8fd0\u52a8\u8bf1\u5bfc\u76f8\u5206\u79bb</li> <li>17. \u6717\u4e4b\u4e07\u65b9\u7a0b\u3001\u5e03\u6717\u7c92\u5b50\u4e0e\u6da8\u843d-\u8017\u6563\u5b9a\u7406</li> <li>18. \u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u4e0e\u65af\u6469\u68f1\u970d\u592b\u65af\u57fa\u65b9\u7a0b\uff1a\u4ece\u968f\u673a\u8f68\u8ff9\u5230\u6982\u7387\u52a8\u529b\u5b66</li> <li>19. \u968f\u673a\u8fc7\u7a0b\u7684\u8def\u5f84\u79ef\u5206\u8868\u8ff0</li> <li>20. \u968f\u673a\u5fae\u5206\u65b9\u7a0b</li> <li>21. \u4f0a\u85e4\u79ef\u5206\u4e0e\u7edf\u4e00\u7684\u968f\u673a\u8fc7\u7a0b\u6846\u67b6</li> <li>22. \u542b\u4e58\u6027\u566a\u58f0\u7cfb\u7edf\u7684\u8def\u5f84\u79ef\u5206</li> </ul> <p>\u7b2c\u4e09\u90e8\u5206\uff1a\u4ece\u79bb\u6563\u6001\u5230\u573a (From Discrete States to Fields) \u5b9e\u73b0\u4e86\u5173\u952e\u7684\u62bd\u8c61\u8dc3\u8fc1\u3002\u53cd\u5e94\u7f51\u7edc\u4e0e\u573a\u8bba (Reaction Networks and Field Theories) \u901a\u8fc7\u4e3b\u65b9\u7a0b\u548cKramers-Moyal\u5c55\u5f00\u5c06\u79bb\u6563\u8fc7\u7a0b\u8fde\u7eed\u5316\u3002\u573a\u7684\u7c97\u7c92\u5316\u52a8\u529b\u5b66 (Coarse-Grained Dynamics of Fields) \u7814\u7a76\u5f1b\u8c6b\u52a8\u529b\u5b66\u4ee5\u53ca\u5b88\u6052\u573a\u4e0e\u975e\u5b88\u6052\u573a\u7684\u533a\u522b\u3002</p> <ul> <li>23. \u4ece\u7c97\u7c92\u5316\u5230\u8fde\u7eed\u573a\u8bba\u6da8\u843d\u52a8\u529b\u5b66</li> <li>24. \u6602\u8428\u683c\u7cfb\u6570\u3001\u5012\u6613\u5173\u7cfb\u4e0e\u52a8\u6001\u6da8\u843d-\u8017\u6563\u5b9a\u7406</li> <li>25. \u68af\u5ea6\u52a8\u529b\u5b66\u3001\u76f8\u53d8\u4e0e\u5f1b\u8c6b</li> <li>26. \u4e34\u754c\u6162\u5316\u3001\u52a8\u6001\u54cd\u5e94\u4e0e\u5b88\u6052\u5f8b</li> <li>27. \u7b80\u5355\u6d41\u4f53\u3001\u65e0\u6469\u64e6\u6d41\u4f53\u4e0e\u6b27\u62c9\u65b9\u7a0b\u7684\u6d41\u4f53\u52a8\u529b\u5b66</li> <li>28. \u7c98\u6027\u6d41\u4f53\u3001\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u3001\u71b5\u5e73\u8861\u4e0e\u70ed\u4f20\u5bfc</li> <li>29. \u4e0d\u53ef\u9006\u7ebf\u6027\u70ed\u529b\u5b66\u4e0e\u5e72\u6027\u6269\u6563\u7c92\u5b50\u7cfb\u7edf</li> <li>30. \u60ac\u6d6e\u5728\u6d41\u4f53\u4e2d\u7684\u5e03\u6717\u7c92\u5b50 \u2014 H\u6a21\u578b</li> </ul> <p>\u7b2c\u56db\u90e8\u5206\uff1a\u975e\u5e73\u8861\u7cfb\u7edf\u7684\u573a\u8bba (Field Theories of Nonequilibrium Systems) \u8fd0\u7528\u6700\u5148\u8fdb\u7684\u7406\u8bba\u5de5\u5177\u3002\u52a8\u6001\u6cdb\u51fd\u4e0eMSR\u5f62\u5f0f (Dynamical Functionals and MSR Formalism) \u53d1\u5c55Onsager-Machlup\u548cJanssen-de Dominicis\u8def\u5f84\u79ef\u5206\u65b9\u6cd5\u3002\u6d41\u4f53\u52a8\u529b\u5b66\u4e0e\u6da8\u843d\u6d41\u4f53 (Hydrodynamics and Fluctuating Fluids) \u5e94\u7528\u6a21\u578bH\u3001\u52a8\u91cf\u5b88\u6052\u548c\u60ac\u6d6e\u52a8\u529b\u5b66\u3002\u975e\u5e73\u8861\u6a21\u5f0f\u5f62\u6210 (Nonequilibrium Pattern Formation) \u7814\u7a76\u5931\u7a33\u548c\u975e\u5e73\u8861\u7a33\u6001\u3002\u6d3b\u6027\u7269\u8d28\u573a\u8bba (Field Theory of Active Matter) \u5219\u63a2\u8ba8\u81ea\u63a8\u8fdb\u548c\u81ea\u7ec4\u7ec7\u73b0\u8c61\u3002</p> <ul> <li>31. \u52a8\u6001\u6cdb\u51fd\u3001\u52a0\u6027\u566a\u58f0\u573a\u8bba\u4e0eOnsager-Machlup\u6cdb\u51fd</li> <li>32. Janssen-De Dominicis \u54cd\u5e94\u6cdb\u51fd\u4e0e\u6da8\u843d-\u8017\u6563\u5173\u7cfb</li> <li>33. \u975e\u5e73\u8861\u529f\u4e0e\u6da8\u843d\u5b9a\u7406</li> <li>34. \u6709\u5411\u6e17\u6d41\u3001\u5438\u6536\u6001\u4e0e\u8c31\u65b9\u6cd5</li> <li>35. \u4e3b\u65b9\u7a0b\u7684\u8def\u5f84\u79ef\u5206\u8868\u793a</li> <li>36. \u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\u3001\u7b97\u7b26\u4ee3\u6570\u4e0e\u865a\u566a\u58f0</li> <li>37. Kramers-Moyal \u5c55\u5f00\u4e0e\u8def\u5f84\u79ef\u5206\u7684\u4f4e\u566a\u58f0\u6781\u9650</li> <li>38. \u591a\u7269\u79cd\u8def\u5f84\u79ef\u5206\u4e0e\u5faa\u73af\u7ade\u4e89\u52a8\u529b\u5b66</li> <li>39. \u4ece\u7c92\u5b50\u8df3\u8dc3\u5230\u8fde\u7eed\u573a\u8bba</li> <li>40. \u7edf\u4e00\u7684\u573a\u8bba\u6846\u67b6</li> </ul>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#_14","title":"\u7406\u8bba\u65b9\u6cd5\u7684\u5c42\u6b21\u9012\u8fdb","text":"<p>\u8fd9\u79cd\u8bfe\u7a0b\u7ed3\u6784\u4f53\u73b0\u4e86\u975e\u5e73\u8861\u7269\u7406\u5b66\u7406\u8bba\u65b9\u6cd5\u7684\u5c42\u6b21\u6027\uff1a\u4ece\u63cf\u8ff0\u5355\u4e2a\u7c92\u5b50\u7684\u968f\u673a\u8f68\u8ff9\uff0c\u5230\u63cf\u8ff0\u7c92\u5b50\u7cfb\u7efc\u7684\u6982\u7387\u6f14\u5316\uff1b\u4ece\u5904\u7406\u79bb\u6563\u7684\u8df3\u8dc3\u8fc7\u7a0b\uff0c\u5230\u6784\u5efa\u8fde\u7eed\u7684\u573a\u8bba\uff1b\u4ece\u5206\u6790\u8fd1\u5e73\u8861\u7684\u7ebf\u6027\u54cd\u5e94\uff0c\u5230\u63a2\u7d22\u8fdc\u79bb\u5e73\u8861\u7684\u590d\u6742\u884c\u4e3a\u3002</p> <p>\u6bcf\u4e00\u5c42\u6b21\u90fd\u6709\u5176\u72ec\u7279\u7684\u6570\u5b66\u5de5\u5177\u548c\u7269\u7406\u6d1e\u5bdf\u3002\u968f\u673a\u8fc7\u7a0b\u7406\u8bba\u63d0\u4f9b\u4e86\u5904\u7406\u4e0d\u786e\u5b9a\u6027\u7684\u8bed\u8a00\uff1b\u6717\u4e4b\u4e07\u548c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u8fde\u63a5\u4e86\u5fae\u89c2\u968f\u673a\u6027\u4e0e\u5b8f\u89c2\u786e\u5b9a\u6027\uff1b\u4e3b\u65b9\u7a0b\u5230\u573a\u8bba\u7684\u8f6c\u6362\u5b9e\u73b0\u4e86\u4ece\u79bb\u6563\u5230\u8fde\u7eed\u7684\u62bd\u8c61\uff1b\u800c\u52a8\u6001\u6cdb\u51fd\u65b9\u6cd5\u5219\u4e3a\u5904\u7406\u590d\u6742\u7684\u591a\u4f53\u76f8\u4e92\u4f5c\u7528\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u5de5\u5177\u3002</p> <p>\u901a\u8fc7\u8fd9\u6837\u7684\u7406\u8bba\u4f53\u7cfb\uff0c\u975e\u5e73\u8861\u7269\u7406\u5b66\u4e0d\u4ec5\u80fd\u591f\u63cf\u8ff0\u548c\u9884\u6d4b\u8fdc\u79bb\u5e73\u8861\u7cfb\u7edf\u7684\u884c\u4e3a\uff0c\u66f4\u80fd\u63ed\u793a\u8fd9\u4e9b\u7cfb\u7edf\u4e2d\u6d8c\u73b0\u7684\u65b0\u5947\u73b0\u8c61\u2014\u2014\u4ece\u7b80\u5355\u7684\u6269\u6563\u8fc7\u7a0b\u5230\u590d\u6742\u7684\u751f\u547d\u6d3b\u52a8\uff0c\u4ece\u4e2a\u4f53\u7684\u968f\u673a\u8fd0\u52a8\u5230\u96c6\u4f53\u7684\u6709\u5e8f\u884c\u4e3a\u3002</p> <p>\u4e3a\u4e86\u66f4\u6e05\u6670\u5730\u7406\u89e3\u8fd9\u4e09\u4e2a\u7406\u8bba\u6846\u67b6\u7684\u5b9a\u4f4d\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0b\u8868\uff1a</p> \u7279\u6027 (Property) \u70ed\u529b\u5b66 (Thermodynamics) \u7edf\u8ba1\u7269\u7406 (Statistical Physics) \u975e\u5e73\u8861\u7269\u7406 (Nonequilibrium Physics) \u7814\u7a76\u8303\u7574 (Scope) \u5b8f\u89c2\u7cfb\u7edf (Macroscopic systems) \u4ece\u5fae\u89c2\u5230\u5b8f\u89c2 (Microscopic to Macroscopic) \u52a8\u6001\u3001\u6f14\u5316\u4e2d\u7684\u7cfb\u7edf (Dynamic, evolving systems) \u6838\u5fc3\u72b6\u6001 (Core State) \u5e73\u8861\u6001 (Equilibrium) \u5e73\u8861\u7cfb\u7efc (Equilibrium Ensemble) \u975e\u5e73\u8861\u7a33\u6001 (NESS), \u77ac\u6001 (Transient states) \u5173\u952e\u53d8\u91cf (Key Variables) $ T, P, V, E, S $ (\u5b8f\u89c2\u91cf) \u5fae\u89c2\u6001, \u6982\u7387\u5206\u5e03, \u914d\u5206\u51fd\u6570 \u6d41 (Fluxes), \u4ea7\u751f\u7387 (Production rates), \u6da8\u843d \u57fa\u672c\u539f\u7406 (Principles) \u70ed\u529b\u5b66\u5b9a\u5f8b (Laws of Thermodynamics) \u7edf\u8ba1\u7cfb\u7efc, \u73bb\u5c14\u5179\u66fc\u5206\u5e03 \u6da8\u843d\u5b9a\u7406, \u71b5\u4ea7\u751f, \u7ec6\u8282\u5e73\u8861\u7834\u7f3a"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#2","title":"2. \u968f\u673a\u8fc7\u7a0b\u7684\u8303\u4f8b\u2014\u2014\u5e03\u6717\u8fd0\u52a8","text":"<p>\u5386\u53f2\u5e38\u5e38\u4e3a\u6211\u4eec\u63d0\u4f9b\u8fdb\u5165\u4e00\u4e2a\u590d\u6742\u9886\u57df\u7684\u5165\u53e3\u3002\u5e03\u6717\u8fd0\u52a8\u4e0d\u4ec5\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u5386\u53f2\u6545\u4e8b\uff0c\u66f4\u662f\u7406\u89e3\u968f\u673a\u8fc7\u7a0b\u548c\u975e\u5e73\u8861\u7269\u7406\u6838\u5fc3\u601d\u60f3\u7684\u8303\u4f8b\u3002\u5b83\u5c55\u793a\u4e86\u5fae\u89c2\u4e16\u754c\u7684\u968f\u673a\u6da8\u843d\u5982\u4f55\u4e3b\u5bb0\u4ecb\u89c2\u5c3a\u5ea6\u4e0a\u7684\u7269\u4f53\u8fd0\u52a8\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#21","title":"2.1 \u5e03\u6717\u7684\u201c\u5c0f\u79d8\u5bc6\u201d\uff1a\u5386\u53f2\u7684\u5f00\u7aef","text":"<p>1827\u5e74\uff0c\u82cf\u683c\u5170\u690d\u7269\u5b66\u5bb6\u7f57\u4f2f\u7279\u00b7\u5e03\u6717 (Robert Brown) \u5728\u663e\u5fae\u955c\u4e0b\u89c2\u5bdf\u60ac\u6d6e\u5728\u6c34\u4e2d\u7684\u82b1\u7c89\u9897\u7c92\u65f6\uff0c\u53d1\u73b0\u8fd9\u4e9b\u5fae\u5c0f\u7684\u9897\u7c92\u6c38\u4e0d\u505c\u6b47\u5730\u8fdb\u884c\u7740\u5feb\u901f\u3001\u65e0\u89c4\u5219\u7684\u8fd0\u52a8\u3002\u8fd9\u79cd\u73b0\u8c61\u540e\u6765\u88ab\u79f0\u4e3a\u201c\u5e03\u6717\u8fd0\u52a8\u201d\u3002\u5728\u8fbe\u5c14\u6587\u7684\u56de\u5fc6\u4e2d\uff0c\u5e03\u6717\u66fe\u5411\u4ed6\u5c55\u793a\u4e86\u8fd9\u4e00\u73b0\u8c61\uff0c\u4f46\u5f53\u88ab\u95ee\u53ca\u5176\u539f\u56e0\u65f6\uff0c\u5e03\u6717\u53ea\u662f\u795e\u79d8\u5730\u56de\u7b54\uff1a\u201c\u90a3\u662f\u6211\u7684\u4e00\u70b9\u5c0f\u79d8\u5bc6\u201d\u3002\u5728\u5f53\u65f6\uff0c\u4eba\u4eec\u65e0\u6cd5\u89e3\u91ca\u8fd9\u79cd\u8fd0\u52a8\u7684\u6765\u6e90\uff0c\u6709\u4eba\u751a\u81f3\u731c\u6d4b\u8fd9\u6e90\u4e8e\u82b1\u7c89\u81ea\u8eab\u7684\u201c\u751f\u547d\u529b\u201d\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#22","title":"2.2 \u7231\u56e0\u65af\u5766\u7684\u89e3\u91ca\u4e0e\u4f69\u5170\u7684\u9a8c\u8bc1","text":"<p>\u8fd9\u4e2a\u201c\u79d8\u5bc6\u201d\u76f4\u5230\u8fd180\u5e74\u540e\u624d\u88ab\u963f\u5c14\u4f2f\u7279\u00b7\u7231\u56e0\u65af\u5766 (Albert Einstein) \u5728\u51761905\u5e74\u7684\u201c\u5947\u8ff9\u5e74\u201d\u4e2d\u5f7b\u5e95\u63ed\u5f00\u3002\u7231\u56e0\u65af\u5766\u6307\u51fa\uff0c\u5e03\u6717\u8fd0\u52a8\u5e76\u975e\u6e90\u4e8e\u7c92\u5b50\u5185\u90e8\uff0c\u800c\u662f\u5916\u90e8\u73af\u5883\u4f5c\u7528\u7684\u7ed3\u679c\u3002\u4ed6\u5728\u8bba\u6587\u4e2d\u5199\u9053\uff1a\u201c\u6839\u636e\u70ed\u7684\u5206\u5b50\u52a8\u7406\u8bba\uff0c\u60ac\u6d6e\u5728\u6db2\u4f53\u4e2d\u7684\u5fae\u89c2\u53ef\u89c1\u5927\u5c0f\u7684\u7269\u4f53\uff0c\u5fc5\u987b\u8fdb\u884c\u4e00\u5b9a\u7a0b\u5ea6\u7684\u8fd0\u52a8\uff0c\u8fd9\u79cd\u8fd0\u52a8\u7684\u5e45\u5ea6\u53ef\u4ee5\u901a\u8fc7\u663e\u5fae\u955c\u8f7b\u6613\u89c2\u5bdf\u5230\u3002\u201d</p> <p>\u7231\u56e0\u65af\u5766\u7684\u6d1e\u89c1\u5728\u4e8e\uff0c\u4ed6\u8ba4\u8bc6\u5230\u60ac\u6d6e\u9897\u7c92\u65f6\u523b\u53d7\u5230\u6765\u81ea\u5468\u56f4\u5927\u91cf\u6db2\u4f53\u5206\u5b50\u7684\u78b0\u649e\u3002\u8fd9\u4e9b\u5206\u5b50\u5728\u8fdb\u884c\u7740\u6c38\u4e0d\u505c\u606f\u7684\u70ed\u8fd0\u52a8\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5b8f\u89c2\u7269\u4f53\uff0c\u6765\u81ea\u56db\u9762\u516b\u65b9\u7684\u78b0\u649e\u5728\u7edf\u8ba1\u4e0a\u662f\u5747\u5300\u7684\uff0c\u5176\u5408\u529b\u4e3a\u96f6\u3002\u4f46\u5bf9\u4e8e\u4e00\u4e2a\u5fae\u5c0f\u9897\u7c92\uff0c\u7531\u4e8e\u5206\u5b50\u6570\u91cf\u6709\u9650\uff0c\u5728\u4efb\u4f55\u4e00\u4e2a\u77ac\u95f4\uff0c\u6765\u81ea\u4e0d\u540c\u65b9\u5411\u7684\u78b0\u649e\u662f\u4e0d\u5b8c\u5168\u5e73\u8861\u7684\u3002\u8fd9\u79cd\u4e0d\u5e73\u8861\u7684\u3001\u968f\u673a\u7684\u78b0\u649e\u529b\u5bfc\u81f4\u4e86\u9897\u7c92\u7684\u65e0\u89c4\u5219\u8fd0\u52a8\u3002</p> <p>\u8fd9\u4e00\u89e3\u91ca\u5177\u6709\u5212\u65f6\u4ee3\u7684\u610f\u4e49\uff1a</p> <ol> <li> <p>\u5b83\u4e3a\u539f\u5b50\u548c\u5206\u5b50\u7684\u5b58\u5728\u63d0\u4f9b\u4e86\u76f4\u63a5\u3001\u53ef\u89c1\u7684\u8bc1\u636e\u3002 \u5e03\u6717\u8fd0\u52a8\u6210\u4e3a\u4e86\u8fde\u63a5\u4e0d\u53ef\u89c1\u7684\u5fae\u89c2\u4e16\u754c\uff08\u5206\u5b50\u78b0\u649e\uff09\u548c\u53ef\u89c1\u7684\u4ecb\u89c2\u4e16\u754c\uff08\u9897\u7c92\u8fd0\u52a8\uff09\u7684\u6865\u6881\u3002</p> </li> <li> <p>\u5b83\u5f15\u5165\u4e86\u201c\u968f\u673a\u529b\u201d (random force) \u7684\u6982\u5ff5\uff0c\u8fd9\u662f\u73b0\u4ee3\u968f\u673a\u52a8\u529b\u5b66\u7406\u8bba\u7684\u57fa\u77f3\u3002</p> </li> <li> <p>\u5b83\u63ed\u793a\u4e86\u6da8\u843d\u4e0e\u8017\u6563\u7684\u5185\u5728\u8054\u7cfb\u3002 \u5bfc\u81f4\u9897\u7c92\u968f\u673a\u8fd0\u52a8\u7684\u5206\u5b50\u78b0\u649e\uff0c\u540c\u6837\u4e5f\u662f\u5f53\u9897\u7c92\u5728\u5916\u529b\u4e0b\u8fd0\u52a8\u65f6\u4ea7\u751f\u7c98\u6027\u963b\u529b\uff08\u6469\u64e6\u529b\uff09\u7684\u539f\u56e0\u3002\u8fd9\u4e00\u601d\u60f3\u7684\u840c\u82bd\uff0c\u6700\u7ec8\u5c06\u53d1\u5c55\u4e3a\u6df1\u523b\u7684\u6da8\u843d\u8017\u6563\u5b9a\u7406\u3002</p> </li> </ol> <p>\u6cd5\u56fd\u7269\u7406\u5b66\u5bb6\u8ba9\u00b7\u5df4\u8482\u65af\u7279\u00b7\u4f69\u5170 (Jean Baptiste Perrin) \u901a\u8fc7\u5bf9\u5e03\u6717\u8fd0\u52a8\u7684\u7cbe\u7ec6\u5b9a\u91cf\u5b9e\u9a8c\u7814\u7a76\uff0c\u6d4b\u91cf\u4e86\u9897\u7c92\u7684\u5747\u65b9\u4f4d\u79fb\uff0c\u5e76\u636e\u6b64\u7cbe\u786e\u5730\u8ba1\u7b97\u51fa\u963f\u4f0f\u4f3d\u5fb7\u7f57\u5e38\u6570\uff0c\u5176\u5b9e\u9a8c\u7ed3\u679c\u4e0e\u7406\u8bba\u9884\u6d4b\u9ad8\u5ea6\u543b\u5408\u3002\u8fd9\u9879\u5de5\u4f5c\u4e3a\u7231\u56e0\u65af\u5766\u7684\u7406\u8bba\u63d0\u4f9b\u4e86\u51b3\u5b9a\u6027\u7684\u5b9e\u9a8c\u9a8c\u8bc1\uff0c\u4e5f\u4e3a\u7269\u8d28\u7684\u539f\u5b50-\u5206\u5b50\u7ed3\u6784\u5b66\u8bf4\u753b\u4e0a\u4e86\u5706\u6ee1\u7684\u53e5\u53f7\u3002\u4f69\u5170\u56e0\u6b64\u8363\u83b71926\u5e74\u7684\u8bfa\u8d1d\u5c14\u7269\u7406\u5b66\u5956\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#3","title":"3. \u975e\u5e73\u8861\u7269\u7406\u5b66\u7684\u53d1\u5c55\u8109\u7edc","text":"<p>\u5e03\u6717\u8fd0\u52a8\u7684\u6210\u529f\u89e3\u91ca\u5f00\u542f\u4e86\u975e\u5e73\u8861\u7269\u7406\u5b66\u53d1\u5c55\u7684\u5927\u95e8\u3002\u5728\u6574\u4e2a20\u4e16\u7eaa\uff0c\u7269\u7406\u5b66\u5bb6\u4eec\u9010\u6b65\u5efa\u7acb\u8d77\u4e00\u5957\u63cf\u8ff0\u548c\u7406\u89e3\u975e\u5e73\u8861\u73b0\u8c61\u7684\u7406\u8bba\u5de5\u5177\u7bb1\u3002\u8fd9\u4e2a\u53d1\u5c55\u8fc7\u7a0b\u5e76\u975e\u4e00\u8e74\u800c\u5c31\uff0c\u800c\u662f\u4e00\u4e2a\u6982\u5ff5\u4e0d\u65ad\u6df1\u5316\u3001\u62bd\u8c61\u5c42\u6b21\u4e0d\u65ad\u63d0\u5347\u7684\u201c\u9636\u68af\u201d\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#31-1900s-1940s","title":"3.1 \u968f\u673a\u52a8\u529b\u5b66 (1900s-1940s): \u63cf\u8ff0\u4ecb\u89c2\u5c3a\u5ea6\u4e0a\u7684\u542b\u566a\u52a8\u529b\u5b66","text":"<p>\u8fd9\u4e00\u65f6\u671f\u7684\u6838\u5fc3\u76ee\u6807\u662f\u4e3a\u5e03\u6717\u8fd0\u52a8\u8fd9\u6837\u7684\u968f\u673a\u73b0\u8c61\u5efa\u7acb\u6570\u5b66\u5316\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u3002</p> <ul> <li>\u6717\u4e4b\u4e07\u65b9\u7a0b (Langevin Equation)</li> </ul> <p>\u8fd9\u662f\u5bf9\u5355\u4e2a\u5e03\u6717\u7c92\u5b50\u8fd0\u52a8\u8f68\u8ff9\u7684\u63cf\u8ff0\u3002\u4fdd\u7f57\u00b7\u6717\u4e4b\u4e07 (Paul Langevin) \u5728\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b (\\(m\\ddot{x} = F\\)) \u7684\u57fa\u7840\u4e0a\uff0c\u5929\u624d\u5730\u5c06\u4f5c\u7528\u529b\u5206\u89e3\u4e3a\u4e24\u90e8\u5206\uff1a</p> <ol> <li> <p>\u4e00\u4e2a\u7cfb\u7edf\u7684\u3001\u53ef\u9884\u6d4b\u7684\u8017\u6563\u529b (dissipative force)\uff0c\u5373\u4e0e\u7c92\u5b50\u901f\u5ea6\u6210\u6b63\u6bd4\u7684\u7c98\u6027\u963b\u529b\uff0c\\(-\\gamma \\dot{x}\\)\u3002</p> </li> <li> <p>\u4e00\u4e2a\u5feb\u901f\u6da8\u843d\u7684\u3001\u4e0d\u53ef\u9884\u6d4b\u7684\u968f\u673a\u529b (random force)\uff0c\\(\\eta(t)\\)\uff0c\u4ee3\u8868\u4e86\u6765\u81ea\u6d41\u4f53\u5206\u5b50\u7684\u968f\u673a\u78b0\u649e\u3002</p> </li> <li> <p>\u4e8e\u662f\uff0c\u6717\u4e4b\u4e07\u65b9\u7a0b\u53ef\u4ee5\u6982\u5ff5\u6027\u5730\u5199\u4e3a\uff1a</p> <p>$$  m \\ddot{x} = -\\gamma \\dot{x} + \\eta(t)  $$</p> </li> </ol> <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7269\u7406\u610f\u4e49\u6781\u4e3a\u6df1\u523b\uff1a\u5b83\u9996\u6b21\u5c06\u5b8f\u89c2\u7684\u8017\u6563\uff08\u7531\u6469\u64e6\u7cfb\u6570 \\(\\gamma\\) \u8868\u5f81\uff09\u548c\u5fae\u89c2\u7684\u6da8\u843d\uff08\u7531\u968f\u673a\u529b \\(\\eta(t)\\) \u8868\u5f81\uff09\u653e\u5728\u4e86\u540c\u4e00\u4e2a\u52a8\u529b\u5b66\u65b9\u7a0b\u4e2d\u3002\u5b83\u63cf\u8ff0\u7684\u662f\u4e00\u6761\u968f\u673a\u7684\u8f68\u8ff9\uff0c\u662f\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u7684\u6ee5\u89de\u3002</p> <ul> <li>\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b (Fokker-Planck Equation)</li> </ul> <p>\u6717\u4e4b\u4e07\u65b9\u7a0b\u63cf\u8ff0\u7684\u662f\u5355\u4e2a\u7c92\u5b50\u7684\u547d\u8fd0\uff0c\u4f46\u901a\u5e38\u6211\u4eec\u66f4\u5173\u5fc3\u5927\u91cf\u7c92\u5b50\u7ec4\u6210\u7684\u7cfb\u7edf\u7684\u96c6\u4f53\u884c\u4e3a\u3002\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u6b63\u662f\u4e3a\u6b64\u800c\u751f\u3002\u5b83\u4e0d\u8ffd\u8e2a\u5355\u4e2a\u8f68\u8ff9\uff0c\u800c\u662f\u63cf\u8ff0\u7c92\u5b50\u7cfb\u7efc\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \\(P(x,t)\\) \u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u3002</p> <p>\u5176\u4e00\u822c\u5f62\u5f0f\u53ef\u4ee5\u5199\u4e3a\uff1a</p> <p>$$   \\frac{\\partial P}{\\partial t} = -\\nabla \\cdot (\\mathbf{A} P) + \\frac{1}{2} \\nabla^2 (\\mathbf{B} P)   $$</p> <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7269\u7406\u610f\u4e49\u662f\u6982\u7387\u7684\u6d41\u4f53\u52a8\u529b\u5b66\u65b9\u7a0b\uff1a</p> <ol> <li> <p>\u6f02\u79fb\u9879 (Drift Term): \u7b2c\u4e00\u9879\uff0c\u4e0e\u6f02\u79fb\u77e2\u91cf \\(\\mathbf{A}\\) \u76f8\u5173\uff0c\u63cf\u8ff0\u4e86\u7531\u7cfb\u7edf\u6027\u4f5c\u7528\uff08\u5982\u5916\u529b\u573a\uff09\u5f15\u8d77\u7684\u6982\u7387\u5bc6\u5ea6\u7684\u786e\u5b9a\u6027\u6f02\u79fb\u3002</p> </li> <li> <p>\u6269\u6563\u9879 (Diffusion Term): \u7b2c\u4e8c\u9879\uff0c\u4e0e\u6269\u6563\u5f20\u91cf \\(\\mathbf{B}\\) \u76f8\u5173\uff0c\u63cf\u8ff0\u4e86\u7531\u968f\u673a\u529b\u5f15\u8d77\u7684\u6982\u7387\u5bc6\u5ea6\u7684\u6269\u6563\u548c\u5c55\u5bbd\u3002</p> </li> <li> <p>\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u548c\u6717\u4e4b\u4e07\u65b9\u7a0b\u662f\u63cf\u8ff0\u540c\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b\u7684\u4e24\u79cd\u7b49\u4ef7\u89c6\u89d2\uff1a\u524d\u8005\u662f\u57fa\u4e8e\u6982\u7387\u5206\u5e03\u7684\u201c\u6b27\u62c9\u63cf\u8ff0\u201d\uff0c\u540e\u8005\u662f\u57fa\u4e8e\u7c92\u5b50\u8f68\u8ff9\u7684\u201c\u62c9\u683c\u6717\u65e5\u63cf\u8ff0\u201d\u3002</p> </li> </ol>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#32-1930s-1960s","title":"3.2 \u7ebf\u6027\u975e\u5e73\u8861\u70ed\u529b\u5b66 (1930s-1960s): \u8fd1\u5e73\u8861\u533a\u7684\u8f93\u8fd0\u7406\u8bba","text":"<p>\u5f53\u7cfb\u7edf\u53ea\u662f\u7565\u5fae\u504f\u79bb\u5e73\u8861\u6001\u65f6\uff0c\u5404\u79cd\u70ed\u529b\u5b66\u201c\u6d41\u201d (\\(J_i\\))\uff0c\u5982\u70ed\u6d41\u3001\u7535\u6d41\u3001\u7c92\u5b50\u6d41\uff0c\u53ef\u4ee5\u8fd1\u4f3c\u5730\u770b\u4f5c\u662f\u4e0e\u5f15\u8d77\u5b83\u4eec\u7684\u70ed\u529b\u5b66\u201c\u529b\u201d (\\(X_j\\))\uff0c\u5982\u6e29\u5ea6\u68af\u5ea6\u3001\u7535\u52bf\u68af\u5ea6\u3001\u5316\u5b66\u52bf\u68af\u5ea6\uff0c\u6210\u7ebf\u6027\u5173\u7cfb\uff1a</p> \\[ J_i = \\sum_j L_{ij} X_j \\] <p>\u5176\u4e2d \\(L_{ij}\\) \u88ab\u79f0\u4e3a\u52a8\u529b\u5b66\u7cfb\u6570\u6216\u8f93\u8fd0\u7cfb\u6570\u3002\u5bf9\u89d2\u9879 \\(L_{ii}\\) \u63cf\u8ff0\u4e86\u76f4\u63a5\u6548\u5e94\uff0c\u5982\u5085\u91cc\u53f6\u5b9a\u5f8b\uff08\u70ed\u6d41\u6b63\u6bd4\u4e8e\u6e29\u5ea6\u68af\u5ea6\uff09\u6216\u6b27\u59c6\u5b9a\u5f8b\uff08\u7535\u6d41\u6b63\u6bd4\u4e8e\u7535\u52bf\u68af\u5ea6\uff09\u3002</p> <ul> <li>\u6602\u8428\u683c\u5012\u6613\u5173\u7cfb (Onsager Reciprocal Relations)</li> </ul> <p>\u62c9\u65af\u00b7\u6602\u8428\u683c (Lars Onsager) \u7684\u6770\u51fa\u8d21\u732e\u5728\u4e8e\u63ed\u793a\u4e86\u975e\u5bf9\u89d2\u9879\uff08\u4ea4\u53c9\u6548\u5e94\uff09\u7684\u6df1\u523b\u6027\u8d28\u3002\u4f8b\u5982\uff0c\u6e29\u5ea6\u68af\u5ea6\u4e0d\u4ec5\u80fd\u5f15\u8d77\u70ed\u6d41\uff0c\u8fd8\u80fd\u5f15\u8d77\u7535\u6d41\uff08\u585e\u8d1d\u514b\u6548\u5e94\uff09\uff0c\u8fd9\u7531\u7cfb\u6570 \\(L_{\\text{\u7535},\\text{\u6e29}}\\) \u63cf\u8ff0\uff1b\u53cd\u4e4b\uff0c\u7535\u52bf\u68af\u5ea6\u4e5f\u80fd\u5f15\u8d77\u70ed\u6d41\uff08\u5e15\u5c14\u5e16\u6548\u5e94\uff09\uff0c\u8fd9\u7531\u7cfb\u6570 \\(L_{\\text{\u70ed},\\text{\u7535}}\\) \u63cf\u8ff0\u3002\u6602\u8428\u683c\u8bc1\u660e\uff0c\u5728\u6ca1\u6709\u78c1\u573a\u7b49\u7834\u574f\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u7684\u56e0\u7d20\u5b58\u5728\u65f6\uff0c\u52a8\u529b\u5b66\u7cfb\u6570\u77e9\u9635\u662f\u5bf9\u79f0\u7684\uff1a</p> <p>$$   L_{ij} = L_{ji}   $$</p> <p>\u8fd9\u4e2a\u5b8f\u89c2\u7684\u5bf9\u79f0\u6027\u5173\u7cfb\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u5fae\u89c2\u52a8\u529b\u5b66\u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u7684\u4e0d\u53d8\u6027\uff08\u5373\u5fae\u89c2\u53ef\u9006\u6027\u539f\u7406\uff09\u3002\u8fd9\u662f\u975e\u5e73\u8861\u7269\u7406\u5b66\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6df1\u523b\u7684\u3001\u5177\u6709\u666e\u9002\u6027\u7684\u5bf9\u79f0\u6027\u539f\u7406\uff0c\u6602\u8428\u683c\u4e5f\u56e0\u6b64\u83b7\u5f97\u4e861968\u5e74\u7684\u8bfa\u8d1d\u5c14\u5316\u5b66\u5956\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#33-1950s-1970s","title":"3.3 \u6da8\u843d\u8017\u6563\u5b9a\u7406 (1950s-1970s): \u8fde\u63a5\u54cd\u5e94\u4e0e\u6da8\u843d","text":"<p>\u6da8\u843d\u8017\u6563\u5b9a\u7406 (Fluctuation-Dissipation Theorem, FDT) \u662f\u5bf9\u6717\u4e4b\u4e07\u548c\u6602\u8428\u683c\u601d\u60f3\u7684\u96c6\u5927\u6210\u4e0e\u5347\u534e\uff0c\u662f\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u7684\u57fa\u77f3\u4e4b\u4e00\u3002</p> <p>\u8be5\u5b9a\u7406\u7684\u7269\u7406\u601d\u60f3\u53ef\u4ee5\u76f4\u89c2\u5730\u7406\u89e3\u4e3a\uff1a\u4e00\u4e2a\u7cfb\u7edf\u5bf9\u5916\u90e8\u5fae\u5c0f\u6270\u52a8\u7684\u54cd\u5e94\uff08\u8017\u6563\uff09\uff0c\u4e0e\u5176\u5728\u5e73\u8861\u6001\u4e0b\u7684\u81ea\u53d1\u6da8\u843d\u4e4b\u95f4\u5b58\u5728\u7740\u5b9a\u91cf\u7684\u3001\u6df1\u523b\u7684\u8054\u7cfb\u3002</p> <ul> <li> <p>\u76f4\u89c2\u4f8b\u5b50:</p> </li> <li> <p>\u5e03\u6717\u8fd0\u52a8: \u63a8\u52a8\u5e03\u6717\u7c92\u5b50\u8fd0\u52a8\u7684\u968f\u673a\u529b\uff08\u6da8\u843d\uff09\u548c\u963b\u788d\u5176\u8fd0\u52a8\u7684\u7c98\u6ede\u529b\uff08\u8017\u6563\uff09\u6e90\u4e8e\u540c\u4e00\u4e2a\u7269\u7406\u8fc7\u7a0b\u2014\u2014\u4e0e\u5468\u56f4\u6d41\u4f53\u5206\u5b50\u7684\u78b0\u649e\u3002FDT\u5b9a\u91cf\u5730\u5c06\u6269\u6563\u7cfb\u6570\uff08\u63cf\u8ff0\u6da8\u843d\u5927\u5c0f\uff09\u548c\u8fc1\u79fb\u7387\uff08\u63cf\u8ff0\u5bf9\u529b\u7684\u54cd\u5e94\uff09\u8054\u7cfb\u8d77\u6765\u3002</p> </li> <li> <p>\u7ea6\u7ff0\u900a\u566a\u58f0: \u7535\u963b\u5668\u4e2d\u7684\u7535\u963b\uff08\u8017\u6563\u7535\u80fd\uff09\u548c\u5176\u4e2d\u81ea\u53d1\u4ea7\u751f\u7684\u70ed\u566a\u58f0\u7535\u6d41\uff08\u6da8\u843d\uff09\u90fd\u6e90\u4e8e\u7535\u5b50\u4e0e\u6676\u683c\u7684\u6563\u5c04\u3002FDT\u5b9a\u91cf\u5730\u5c06\u7535\u963b\u503c\u4e0e\u566a\u58f0\u7535\u538b\u7684\u8c31\u5bc6\u5ea6\u8054\u7cfb\u8d77\u6765\u3002</p> </li> </ul> <p>FDT\u7684\u6df1\u523b\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u65ad\u8a00\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ec5\u4ec5\u89c2\u5bdf\u4e00\u4e2a\u7cfb\u7edf\u5728\u5e73\u8861\u6001\u4e0b\u201c\u5982\u4f55\u81ea\u53d1\u5730\u6296\u52a8\u201d\uff08\u6d4b\u91cf\u5176\u5e73\u8861\u6da8\u843d\u7684\u5173\u8054\u51fd\u6570\uff09\uff0c\u5c31\u80fd\u5b8c\u5168\u9884\u6d4b\u51fa\u5f53\u6211\u4eec\u201c\u8f7b\u8f7b\u63a8\u5b83\u4e00\u4e0b\u201d\u65f6\u5b83\u4f1a\u5982\u4f55\u53cd\u5e94\uff08\u8ba1\u7b97\u5176\u5bf9\u5fae\u5f31\u5916\u573a\u7684\u7ebf\u6027\u54cd\u5e94\u51fd\u6570\uff09\u3002\u8fd9\u4e2a\u5b9a\u7406\u7684\u6210\u7acb\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u63a5\u8fd1\u5e73\u8861\u6001\u3002\u56e0\u6b64\uff0c\u6da8\u843d\u8017\u6563\u5b9a\u7406\u7684\u5931\u6548\uff0c\u6210\u4e3a\u4e86\u5224\u65ad\u4e00\u4e2a\u7cfb\u7edf\u662f\u5426\u5904\u4e8e\u8fdc\u79bb\u5e73\u8861\u72b6\u6001\u7684\u91cd\u8981\u6807\u5fd7\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#34","title":"3.4 \u4ece\u7ecf\u5178\u5230\u73b0\u4ee3\uff1a\u4ece\u6a21\u5f0f\u5f62\u6210\u5230\u6d3b\u6027\u7269\u8d28","text":"<p>\u968f\u7740\u7406\u8bba\u5de5\u5177\u7684\u4e0d\u65ad\u53d1\u5c55\uff0c\u975e\u5e73\u8861\u7269\u7406\u5b66\u7684\u7814\u7a76\u5bf9\u8c61\u4e5f\u4ece\u7b80\u5355\u7684\u7c92\u5b50\u7cfb\u7edf\u6269\u5c55\u5230\u5177\u6709\u590d\u6742\u65f6\u7a7a\u7ed3\u6784\u7684\u3001\u8fdc\u79bb\u5e73\u8861\u7684\u7cfb\u7edf\u3002</p> <ul> <li> <p>\u7ecf\u5178\u6a21\u5f0f\u5f62\u6210 (Classical Pattern Formation, 1960s-1980s): \u8fd9\u4e00\u65f6\u671f\uff0c\u4eba\u4eec\u5f00\u59cb\u5173\u6ce8\u53cd\u5e94-\u6269\u6563\u7cfb\u7edf\u3002\u6700\u8457\u540d\u7684\u4f8b\u5b50\u662f\u56fe\u7075\u6591\u56fe (Turing pattern)\uff0c\u5b83\u89e3\u91ca\u4e86\u5728\u8fdc\u79bb\u5e73\u8861\u7684\u5316\u5b66\u53cd\u5e94\u7cfb\u7edf\u4e2d\uff0c\u4e24\u79cd\u6269\u6563\u901f\u7387\u4e0d\u540c\u7684\u5316\u5b66\u7269\u8d28\u5982\u4f55\u901a\u8fc7\u76f8\u4e92\u4f5c\u7528\uff0c\u81ea\u53d1\u5730\u4ece\u4e00\u4e2a\u5747\u5300\u7684\u72b6\u6001\u6f14\u5316\u51fa\u7a33\u5b9a\u7684\u7a7a\u95f4\u6591\u56fe\uff08\u5982\u6591\u70b9\u3001\u6761\u7eb9\uff09\uff0c\u4e3a\u751f\u7269\u5f62\u6001\u53d1\u751f\u63d0\u4f9b\u4e86\u7406\u8bba\u6a21\u578b\u3002</p> </li> <li> <p>\u573a\u8bba\u65b9\u6cd5 (Field-Theoretic Approaches, 1970s-present): \u4e3a\u4e86\u5904\u7406\u5305\u542b\u5927\u91cf\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u7684\u590d\u6742\u968f\u673a\u8fc7\u7a0b\uff0c\u7269\u7406\u5b66\u5bb6\u53d1\u5c55\u4e86\u5f3a\u5927\u7684\u573a\u8bba\u65b9\u6cd5\u3002\u4f8b\u5982\uff0cDoi-Peliti \u5f62\u5f0f \u548c Martin-Siggia-Rose-Janssen-de Dominicis (MSRJD) \u5f62\u5f0f\uff0c\u80fd\u591f\u5c06\u63cf\u8ff0\u7c92\u5b50\u6570\u751f\u706d\u3001\u53cd\u5e94\u548c\u6269\u6563\u7684\u79bb\u6563\u4e3b\u65b9\u7a0b (Master Equation)\uff0c\u4e25\u683c\u5730\u8f6c\u5316\u4e3a\u4e00\u4e2a\u7b49\u4ef7\u7684\u3001\u63cf\u8ff0\u8fde\u7eed\u573a\u7684\u8def\u5f84\u79ef\u5206\uff08\u6216\u573a\u8bba\uff09\u3002\u8fd9\u79cd\"\u7c97\u7c92\u5316\" (Coarse-graining) \u7684\u601d\u60f3\uff0c\u4f7f\u5f97\u4eba\u4eec\u53ef\u4ee5\u8fd0\u7528\u91cf\u5b50\u573a\u8bba\u4e2d\u5f3a\u5927\u7684\u91cd\u6574\u5316\u7fa4\u7b49\u6280\u672f\u6765\u5206\u6790\u975e\u5e73\u8861\u7cfb\u7edf\u4e2d\u7684\u4e34\u754c\u73b0\u8c61\u548c\u6807\u5ea6\u884c\u4e3a\u3002</p> </li> <li> <p>\u91cd\u6574\u5316\u7fa4\u7406\u8bba (Renormalization Group Theory, 1970s-present): \u91cd\u6574\u5316\u7fa4\u65b9\u6cd5\u5728\u975e\u5e73\u8861\u7269\u7406\u5b66\u4e2d\u7684\u5e94\u7528\u6807\u5fd7\u7740\u7406\u8bba\u7684\u91cd\u5927\u7a81\u7834\u3002\u5b83\u4e0d\u4ec5\u80fd\u591f\u5904\u7406\u5e73\u8861\u6001\u7684\u4e34\u754c\u73b0\u8c61\uff0c\u66f4\u80fd\u63ed\u793a\u975e\u5e73\u8861\u6da8\u843d\u4e2d\u7684\u6807\u5ea6\u4f9d\u8d56\u884c\u4e3a\u548c\u666e\u9002\u6027\u3002\u5728\u8f6f\u7269\u8d28\u7cfb\u7edf\u4e2d\uff0c\u91cd\u6574\u5316\u7fa4\u7406\u8bba\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u4e3a\u4ec0\u4e48\u4e0d\u540c\u7684\u5fae\u89c2\u7cfb\u7edf\u5728\u957f\u7a0b\u3001\u4f4e\u9891\u7684\u884c\u4e3a\u4e0a\u8868\u73b0\u51fa\u76f8\u540c\u7684\u666e\u9002\u7279\u5f81\u3002\u4f8b\u5982\uff0c\u5728\u4e34\u754c\u70b9\u9644\u8fd1\uff0c\u7cfb\u7edf\u7684\u5173\u8054\u957f\u5ea6\u548c\u5f1b\u8c6b\u65f6\u95f4\u90fd\u8868\u73b0\u51fa\u5e42\u5f8b\u6807\u5ea6\u884c\u4e3a\uff0c\u800c\u8fd9\u4e9b\u6807\u5ea6\u6307\u6570\u5177\u6709\u666e\u9002\u6027\u2014\u2014\u5b83\u4eec\u53ea\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u7684\u5bf9\u79f0\u6027\u548c\u7ef4\u5ea6\uff0c\u800c\u4e0d\u4f9d\u8d56\u4e8e\u5fae\u89c2\u7ec6\u8282\u3002</p> </li> <li> <p>\u5927\u504f\u5dee\u7406\u8bba (Large Deviation Theory, 1980s-present): \u8fd9\u4e00\u7406\u8bba\u6846\u67b6\u4e3a\u7814\u7a76\u7a00\u6709\u4e8b\u4ef6\u548c\u6da8\u843d\u8bf1\u5bfc\u7684\u8f6c\u53d8\u63d0\u4f9b\u4e86\u5f3a\u6709\u529b\u7684\u5de5\u5177\u3002\u5927\u504f\u5dee\u7406\u8bba\u91c7\u7528\u57fa\u4e8e\u8def\u5f84\u7684\u7edf\u8ba1\u529b\u5b66\u65b9\u6cd5\uff0c\u80fd\u591f\u7cbe\u786e\u8ba1\u7b97\u90a3\u4e9b\u5728\u5178\u578b\u6da8\u843d\u7406\u8bba\u4e2d\u88ab\u5ffd\u7565\u7684\u6781\u7aef\u4e8b\u4ef6\u7684\u6982\u7387\u3002\u5728\u975e\u5e73\u8861\u7cfb\u7edf\u4e2d\uff0c\u5927\u504f\u5dee\u7406\u8bba\u7279\u522b\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u80fd\u591f\u91cf\u5316\u71b5\u4ea7\u751f\u7684\u6da8\u843d\uff0c\u5e76\u9884\u6d4b\u7cfb\u7edf\u4f55\u65f6\u4f1a\u53d1\u751f\u53cd\u5e38\u7684\u3001\u770b\u4f3c\u8fdd\u53cd\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u6da8\u843d\u3002\u8fd9\u79cd\u7406\u8bba\u4e0d\u4ec5\u52a0\u6df1\u4e86\u6211\u4eec\u5bf9\u6da8\u843d\u5b9a\u7406\u7684\u7406\u89e3\uff0c\u66f4\u4e3a\u7406\u89e3\u751f\u7269\u7cfb\u7edf\u4e2d\u7684\u7a00\u6709\u4f46\u5173\u952e\u7684\u4e8b\u4ef6\uff08\u5982\u86cb\u767d\u8d28\u6298\u53e0\u3001\u57fa\u56e0\u8868\u8fbe\u7684\u7a81\u53d1\u7b49\uff09\u63d0\u4f9b\u4e86\u7406\u8bba\u57fa\u7840\u3002</p> </li> <li> <p>\u975e\u5e73\u8861\u6a21\u5f0f\u5f62\u6210 (Nonequilibrium Pattern Formation, 2000s-present): \u8fdb\u516521\u4e16\u7eaa\uff0c\u975e\u5e73\u8861\u6a21\u5f0f\u5f62\u6210\u7814\u7a76\u8fdb\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u9636\u6bb5\u3002\u4e0e\u7ecf\u5178\u7684\u53cd\u5e94-\u6269\u6563\u7cfb\u7edf\u4e0d\u540c\uff0c\u73b0\u4ee3\u7814\u7a76\u66f4\u5173\u6ce8\u5728\u968f\u673a\u3001\u6d3b\u6027\u6216\u5916\u90e8\u9a71\u52a8\u7684\u7cfb\u7edf\u4e2d\u8fdc\u79bb\u5e73\u8861\u7684\u65f6\u7a7a\u7ec4\u7ec7\u3002\u8fd9\u4e9b\u7cfb\u7edf\u80fd\u591f\u5728\u566a\u58f0\u73af\u5883\u4e2d\u7ef4\u6301\u590d\u6742\u7684\u7a7a\u95f4\u7ed3\u6784\uff0c\u751a\u81f3\u5229\u7528\u566a\u58f0\u6765\u589e\u5f3a\u6a21\u5f0f\u7684\u7a33\u5b9a\u6027\u3002\u4f8b\u5982\uff0c\u5728\u968f\u673a\u6fc0\u53d1\u7684\u4ecb\u8d28\u4e2d\uff0c\u566a\u58f0\u53ef\u4ee5\u8bf1\u5bfc\u76f8\u5e72\u7ed3\u6784\u7684\u5f62\u6210\uff1b\u5728\u6d3b\u6027\u7cfb\u7edf\u4e2d\uff0c\u5c40\u90e8\u7684\u975e\u5e73\u8861\u6d3b\u52a8\u53ef\u4ee5\u9a71\u52a8\u5168\u5c40\u6a21\u5f0f\u7684\u6d8c\u73b0\u3002\u8fd9\u4e00\u9886\u57df\u7684\u7814\u7a76\u63ed\u793a\u4e86\u566a\u58f0\u4e0d\u4ec5\u4ec5\u662f\u7834\u574f\u6709\u5e8f\u7684\u56e0\u7d20\uff0c\u5728\u67d0\u4e9b\u6761\u4ef6\u4e0b\u53cd\u800c\u662f\u521b\u9020\u548c\u7ef4\u6301\u590d\u6742\u7ed3\u6784\u7684\u5173\u952e\u673a\u5236\u3002</p> </li> <li> <p>\u6d3b\u6027\u7269\u8d28 (Active Matter, 2000s-present): \u8fd9\u662f\u975e\u5e73\u8861\u7269\u7406\u5b66\u572821\u4e16\u7eaa\u6700\u6fc0\u52a8\u4eba\u5fc3\u7684\u524d\u6cbf\u4e4b\u4e00\u3002\u6d3b\u6027\u7269\u8d28\u7531\u80fd\u591f\u5c06\u5b58\u50a8\u7684\u6216\u73af\u5883\u4e2d\u7684\u80fd\u91cf\u6301\u7eed\u8f6c\u5316\u4e3a\u673a\u68b0\u8fd0\u52a8\u6216\u529b\u7684\"\u6d3b\u6027\u7c92\u5b50\"\u7ec4\u6210\u3002\u4f8b\u5b50\u5305\u62ec\u7ec6\u83cc\u7fa4\u3001\u7ec6\u80de\u9aa8\u67b6\u86cb\u767d\u3001\u9e1f\u7fa4\u548c\u9c7c\u7fa4\u7b49\u3002\u5176\u6838\u5fc3\u7269\u7406\u7279\u5f81\u662f\u5728\u5355\u4e2a\u7c92\u5b50\u5c3a\u5ea6\u4e0a\u6301\u7eed\u5730\u6253\u7834\u7ec6\u8282\u5e73\u8861\u3002\u8fd9\u610f\u5473\u7740\u7cfb\u7edf\u5185\u90e8\u5b58\u5728\u6301\u7eed\u7684\u80fd\u91cf\u901a\u91cf\u548c\u71b5\u4ea7\u751f\uff0c\u4ece\u800c\u80fd\u591f\u6d8c\u73b0\u51fa\u7cfb\u7edf\u4e2d\u524d\u6240\u672a\u89c1\u7684\u96c6\u4f53\u884c\u4e3a\uff0c\u4f8b\u5982\u690b\u9e1f\u7fa4\uff08starlings\uff09\u5c55\u73b0\u51fa\u7684\u58ee\u89c2\u7684\u3001\u957f\u7a0b\u6709\u5e8f\u7684\u96c6\u4f53\u98de\u884c\u6a21\u5f0f\u3002</p> </li> <li> <p>\u751f\u547d\u7cfb\u7edf\u7269\u7406\u5b66 (Physics of Living Systems, 2000s-present): \u8fd9\u4e00\u65b0\u5174\u9886\u57df\u5c06\u975e\u5e73\u8861\u7269\u7406\u5b66\u7684\u7406\u8bba\u5de5\u5177\u5e94\u7528\u4e8e\u7406\u89e3\u751f\u7269\u7ec4\u7ec7\u7684\u5b9a\u91cf\u89c4\u5f8b\u3002\u751f\u547d\u7cfb\u7edf\u672c\u8d28\u4e0a\u662f\u590d\u6742\u7684\u975e\u5e73\u8861\u7cfb\u7edf\uff0c\u5b83\u4eec\u901a\u8fc7\u6301\u7eed\u7684\u80fd\u91cf\u6d88\u8017\u7ef4\u6301\u9ad8\u5ea6\u7684\u7ec4\u7ec7\u6027\u548c\u529f\u80fd\u6027\u3002\u8be5\u9886\u57df\u7684\u7814\u7a76\u5305\u62ec\u673a\u68b0\u5316\u5b66\u53cd\u9988\u673a\u5236\uff08\u5982\u7ec6\u80de\u9aa8\u67b6\u7684\u52a8\u6001\u91cd\u7ec4\uff09\u3001\u6d8c\u73b0\u7684\u96c6\u4f53\u884c\u4e3a\uff08\u5982\u7ec6\u80de\u8fc1\u79fb\u4e2d\u7684\u7fa4\u4f53\u6548\u5e94\uff09\u3001\u4ee5\u53ca\u751f\u7269\u7f51\u7edc\u4e2d\u7684\u968f\u673a\u52a8\u529b\u5b66\u3002\u4f8b\u5982\uff0c\u7ec6\u80de\u5206\u88c2\u8fc7\u7a0b\u4e2d\u7eba\u9524\u4f53\u7684\u81ea\u7ec4\u88c5\u3001\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u540c\u6b65\u632f\u8361\u3001\u4ee5\u53ca\u7ec4\u7ec7\u53d1\u80b2\u4e2d\u7684\u5f62\u6001\u53d1\u751f\uff0c\u90fd\u53ef\u4ee5\u7528\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u7684\u8bed\u8a00\u6765\u7406\u89e3\u3002\u8fd9\u79cd\u5b9a\u91cf\u65b9\u6cd5\u4e0d\u4ec5\u52a0\u6df1\u4e86\u6211\u4eec\u5bf9\u751f\u547d\u73b0\u8c61\u7684\u7406\u89e3\uff0c\u66f4\u4e3a\u751f\u7269\u533b\u5b66\u548c\u5408\u6210\u751f\u7269\u5b66\u63d0\u4f9b\u4e86\u7406\u8bba\u6307\u5bfc\u3002</p> </li> </ul> <p>\u8fd9\u4e2a\u53d1\u5c55\u5386\u7a0b\u6e05\u6670\u5730\u5c55\u793a\u4e86\u975e\u5e73\u8861\u7269\u7406\u5b66\u7684\u4e00\u6761\u4e3b\u7ebf\uff1a\u4ece\u63cf\u8ff0\u5355\u4e2a\u7c92\u5b50\u7684\u968f\u673a\u8f68\u8ff9\uff0c\u5230\u63cf\u8ff0\u7c92\u5b50\u7cfb\u7efc\u7684\u6982\u7387\u5206\u5e03\uff1b\u4ece\u7814\u7a76\u8fd1\u5e73\u8861\u7684\u7ebf\u6027\u54cd\u5e94\uff0c\u5230\u63ed\u793a\u6da8\u843d\u4e0e\u8017\u6563\u7684\u666e\u9002\u8054\u7cfb\uff1b\u6700\u7ec8\u53d1\u5c55\u51fa\u5f3a\u5927\u7684\u573a\u8bba\u5de5\u5177\uff0c\u7528\u4ee5\u63a2\u7d22\u8fdc\u79bb\u5e73\u8861\u7684\u590d\u6742\u7cfb\u7edf\u4e2d\u6d8c\u73b0\u51fa\u7684\u81ea\u7ec4\u7ec7\u548c\u96c6\u4f53\u884c\u4e3a\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#4","title":"4. \u524d\u6cbf\u4ea4\u53c9\uff1a\u751f\u547d\u7cfb\u7edf\u4e2d\u7684\u975e\u5e73\u8861\u7269\u7406","text":"<p>\u751f\u547d\u672c\u8eab\u5c31\u662f\u6700\u6781\u81f4\u7684\u975e\u5e73\u8861\u73b0\u8c61\u3002\u4e00\u4e2a\u751f\u547d\u4f53\u901a\u8fc7\u4e0d\u65ad\u5730\u4ece\u73af\u5883\u4e2d\u6444\u53d6\u80fd\u91cf\u548c\u7269\u8d28\uff0c\u7ef4\u6301\u5176\u5185\u90e8\u9ad8\u5ea6\u6709\u5e8f\u7684\u3001\u8fdc\u79bb\u5e73\u8861\u7684\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u751f\u547d\u7cfb\u7edf\u4e3a\u975e\u5e73\u8861\u7269\u7406\u5b66\u63d0\u4f9b\u4e86\u6700\u4e30\u5bcc\u7684\u7814\u7a76\u5bf9\u8c61\u548c\u6700\u4e25\u5cfb\u7684\u6311\u6218\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#41","title":"4.1 \u859b\u5b9a\u8c14\uff1a\u201c\u751f\u547d\u662f\u4ec0\u4e48\uff1f\u201d","text":"<p>1944\u5e74\uff0c\u7269\u7406\u5b66\u5bb6\u57c3\u5c14\u6e29\u00b7\u859b\u5b9a\u8c14 (Erwin Schr\u00f6dinger) \u5728\u5176\u8457\u4f5c\u300a\u751f\u547d\u662f\u4ec0\u4e48\uff1f\u300b\u4e2d\u63d0\u51fa\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u9884\u8a00\uff1a\u201c\u751f\u547d\u7269\u8d28\uff0c\u867d\u7136\u6ca1\u6709\u9003\u8131\u2018\u7269\u7406\u5b66\u5b9a\u5f8b\u2019\u2026\u2026\u4f46\u5f88\u53ef\u80fd\u5305\u542b\u7740\u2018\u8fc4\u4eca\u672a\u77e5\u7684\u5176\u4ed6\u7269\u7406\u5b66\u5b9a\u5f8b\u2019\uff0c\u7136\u800c\uff0c\u4e00\u65e6\u8fd9\u4e9b\u5b9a\u5f8b\u88ab\u63ed\u793a\uff0c\u5b83\u4eec\u5c06\u50cf\u524d\u8005\u4e00\u6837\uff0c\u6784\u6210\u8fd9\u95e8\u79d1\u5b66\u4e0d\u53ef\u5206\u5272\u7684\u4e00\u90e8\u5206\u3002\u201d\u8fd9\u53e5\u8bdd\u6fc0\u52b1\u4e86\u51e0\u4ee3\u7269\u7406\u5b66\u5bb6\u6295\u8eab\u4e8e\u751f\u547d\u73b0\u8c61\u7684\u7814\u7a76\u3002\u4eca\u5929\u6211\u4eec\u77e5\u9053\uff0c\u8fd9\u4e9b\u201c\u5176\u4ed6\u5b9a\u5f8b\u201d\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5c31\u662f\u975e\u5e73\u8861\u7269\u7406\u5b66\u7684\u5b9a\u5f8b\uff0c\u5b83\u4eec\u63cf\u8ff0\u4e86\u5f00\u653e\u3001\u8017\u80fd\u7cfb\u7edf\u5982\u4f55\u81ea\u53d1\u5730\u5f62\u6210\u6709\u5e8f\u7ed3\u6784\u548c\u5b9e\u73b0\u590d\u6742\u529f\u80fd\u3002</p>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#42-frey","title":"4.2 Frey\u6559\u6388\u7814\u7a76\u7ec4\u7684\u5b9e\u4f8b","text":"<p>Frey\u6559\u6388\u7684\u8bb2\u5ea7\u901a\u8fc7\u4ecb\u7ecd\u5176\u7814\u7a76\u7ec4\u7684\u5de5\u4f5c\uff0c\u5177\u4f53\u5c55\u793a\u4e86\u975e\u5e73\u8861\u7269\u7406\u5b66\u7684\u601d\u60f3\u548c\u65b9\u6cd5\u5982\u4f55\u88ab\u7528\u6765\u89e3\u51b3\u771f\u5b9e\u7684\u751f\u7269\u5b66\u95ee\u9898\u3002</p> <ul> <li>\u9175\u6bcd\u83cc\u7684\u7ec6\u80de\u6781\u6027 (Cell polarity of yeast)</li> <li> <p>\u751f\u7269\u5b66\u95ee\u9898: \u5355\u7ec6\u80de\u7684\u82bd\u6b96\u9175\u6bcd\u5728\u51fa\u82bd\u751f\u6b96\u524d\uff0c\u5fc5\u987b\u4ece\u4e00\u4e2a\u539f\u672c\u8fd1\u4e4e\u7403\u5bf9\u79f0\u7684\u7ec6\u80de\u8868\u9762\u9009\u62e9\u4e00\u4e2a\u7279\u5b9a\u7684\u70b9\uff0c\u5e76\u5c06\u7ec6\u80de\u751f\u957f\u7684\u6240\u6709\u8d44\u6e90\u90fd\u96c6\u4e2d\u5230\u8be5\u70b9\uff0c\u5f62\u6210\u4e00\u4e2a\u201c\u82bd\u201d\u3002\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u5bf9\u79f0\u6027\u7834\u7f3a (symmetry breaking) \u95ee\u9898\u3002</p> </li> <li> <p>\u7269\u7406\u673a\u5236: \u8fd9\u4e2a\u8fc7\u7a0b\u7684\u6838\u5fc3\u662f\u540d\u4e3a Cdc42 \u7684GTP\u9176\u3002\u5728\u7ec6\u80de\u819c\u4e0a\uff0c\u6d3b\u5316\u7684Cdc42\u5206\u5b50\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u6b63\u53cd\u9988\u5faa\u73af\uff0c\u62db\u52df\u5e76\u6fc0\u6d3b\u66f4\u591a\u7684Cdc42\u5206\u5b50\u3002\u8fd9\u4e2a\u201c\u5bcc\u8005\u6108\u5bcc\u201d\u7684\u673a\u5236\uff0c\u7ed3\u5408\u5206\u5b50\u5728\u7ec6\u80de\u819c\u4e0a\u7684\u6162\u6269\u6563\u548c\u5728\u7ec6\u80de\u8d28\u4e2d\u7684\u5feb\u6269\u6563\uff0c\u80fd\u591f\u5c06\u539f\u672c\u5747\u5300\u5206\u5e03\u7684Cdc42\u5206\u5b50\u81ea\u53d1\u5730\u6c47\u805a\u6210\u4e00\u4e2a\u5355\u4e00\u7684\u3001\u7a33\u5b9a\u7684\u201c\u6781\u5316\u5e3d\u201d\uff0c\u4ece\u800c\u6807\u8bb0\u51fa\u672a\u6765\u7684\u751f\u957f\u70b9\u3002\u8fd9\u662f\u4e00\u4e2a\u7531\u53cd\u5e94-\u6269\u6563 (reaction-diffusion) \u673a\u5236\u9a71\u52a8\u7684\u81ea\u7ec4\u7ec7\u8fc7\u7a0b\u3002Frey\u6559\u6388\u53ca\u5176\u5408\u4f5c\u8005\u7684\u7814\u7a76\u8fdb\u4e00\u6b65\u63ed\u793a\uff0c\u8fd9\u4e2a\u770b\u4f3c\u5355\u4e00\u7684\u8fc7\u7a0b\u4e2d\u5b9e\u9645\u5305\u542b\u4e86\u591a\u4e2a\u3001\u529f\u80fd\u5197\u4f59\u7684\u81ea\u7ec4\u7ec7\u673a\u5236\uff0c\u8fd9\u4f7f\u5f97\u9175\u6bcd\u7684\u6781\u5316\u8fc7\u7a0b\u5bf9\u57fa\u56e0\u7a81\u53d8\u6216\u73af\u5883\u6270\u52a8\u8868\u73b0\u51fa\u6781\u5f3a\u7684\u7a33\u5065\u6027 (robustness)\uff0c\u5e76\u89e3\u91ca\u4e86\u5176\u9ad8\u5ea6\u7684\u53ef\u6f14\u5316\u6027\u3002</p> </li> <li> <p>\u5927\u80a0\u6746\u83cc\u4e2d\u7684Min\u86cb\u767d\u632f\u8361 (Min oscillations in E. coli)</p> </li> <li> <p>\u751f\u7269\u5b66\u95ee\u9898: \u6746\u72b6\u7684\u5927\u80a0\u6746\u83cc\u9700\u8981\u7cbe\u786e\u5730\u5728\u7ec6\u80de\u7684\u51e0\u4f55\u4e2d\u5fc3\u8fdb\u884c\u5206\u88c2\uff0c\u4ee5\u786e\u4fdd\u4e24\u4e2a\u5b50\u4ee3\u7ec6\u80de\u5927\u5c0f\u5747\u7b49\u3002\u7ec6\u80de\u5982\u4f55\u201c\u627e\u5230\u201d\u5b83\u7684\u4e2d\u70b9\uff1f</p> </li> <li> <p>\u7269\u7406\u673a\u5236: \u5927\u80a0\u6746\u83cc\u5229\u7528\u4e86\u4e00\u4e2a\u7cbe\u5999\u7684\u52a8\u6001\u5b9a\u4f4d\u7cfb\u7edf\u2014\u2014Min\u86cb\u767d\u7cfb\u7edf\u3002\u8be5\u7cfb\u7edf\u7531MinC\u3001MinD\u3001MinE\u4e09\u79cd\u86cb\u767d\u7ec4\u6210\u3002\u5176\u4e2d\uff0cMinD\u662f\u4e00\u79cd\u6d88\u8017ATP\u7684\u9a6c\u8fbe\u86cb\u767d\uff0c\u5b83\u53ef\u4ee5\u5728ATP\u9a71\u52a8\u4e0b\u7ed3\u5408\u5230\u7ec6\u80de\u819c\u4e0a\uff1bMinE\u5219\u53ef\u4ee5\u4fc3\u8fdbMinD\u6c34\u89e3ATP\uff0c\u4f7f\u5176\u4ece\u819c\u4e0a\u8131\u843d\u3002\u8fd9\u4e24\u79cd\u86cb\u767d\u7684\u76f8\u4e92\u4f5c\u7528\u548c\u5728\u7ec6\u80de\u5185\u7684\u6269\u6563\uff0c\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u53cd\u5e94-\u6269\u6563\u632f\u8361\u5668\u3002\u5728\u7ec6\u80de\u4e2d\uff0cMinD\u548cMinE\u4f1a\u5f62\u6210\u4e00\u4e2a\u4ece\u4e00\u6781\u5230\u53e6\u4e00\u6781\u6765\u56de\u7a7f\u68ad\u7684\u9a7b\u6ce2\uff0c\u5468\u671f\u7ea6\u4e3a1\u5206\u949f\u3002\u4f5c\u4e3a\u5206\u88c2\u7684\u6291\u5236\u5242\uff0cMinC\u86cb\u767d\u4f1a\u8ddf\u968f\u7740MinD\u4e00\u8d77\u8fd0\u52a8\u3002\u7531\u4e8e\u8fd9\u79cd\u6765\u56de\u632f\u8361\uff0cMinC\u86cb\u767d\u5728\u4e24\u6781\u7684\u65f6\u95f4\u5e73\u5747\u6d53\u5ea6\u6700\u9ad8\uff0c\u800c\u5728\u7ec6\u80de\u7684\u51e0\u4f55\u4e2d\u5fc3\uff0c\u5176\u65f6\u95f4\u5e73\u5747\u6d53\u5ea6\u6700\u4f4e\u3002\u8fd9\u6837\uff0c\u7ec6\u80de\u4e2d\u5fc3\u5c31\u6210\u4e3a\u4e86\u552f\u4e00\"\u5141\u8bb8\"\u5206\u88c2\u673a\u5668\uff08FtsZ\u73af\uff09\u7ec4\u88c5\u7684\u4f4d\u7f6e\uff0c\u4ece\u800c\u786e\u4fdd\u4e86\u5206\u88c2\u7684\u7cbe\u786e\u5c45\u4e2d\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u4e00\u4e2a\u5178\u578b\u7684\u975e\u5e73\u8861\u7a33\u6001 (NESS)\uff0c\u5b83\u6301\u7eed\u6d88\u8017\u80fd\u91cf\uff08ATP\u6c34\u89e3\uff09\u6765\u7ef4\u6301\u4e00\u4e2a\u52a8\u6001\u7684\u3001\u5177\u6709\u751f\u7269\u5b66\u529f\u80fd\u7684\u7a7a\u95f4\u6a21\u5f0f\u3002</p> </li> <li> <p>\u6d77\u661f\u5375\u6bcd\u7ec6\u80de\u4e2d\u7684\u86cb\u767d\u6a21\u5f0f\u4e0e\u7ec6\u80de\u5f62\u72b6\u89e3\u7801 (Starfish oocytes)</p> </li> <li> <p>\u751f\u7269\u5b66\u95ee\u9898: \u5728\u7ec6\u80de\u5206\u88c2\u7b49\u751f\u547d\u6d3b\u52a8\u4e2d\uff0c\u7ec6\u80de\u5185\u90e8\u7684\u4fe1\u53f7\uff08\u4f8b\u5982\u86cb\u767d\u6d53\u5ea6\u6ce2\uff09\u9700\u8981\u5728\u590d\u6742\u7684\u3001\u52a8\u6001\u53d8\u5316\u7684\u7ec6\u80de\u51e0\u4f55\u5f62\u72b6\u4e2d\u7cbe\u786e\u4f20\u64ad\uff0c\u5e76\u5230\u8fbe\u7279\u5b9a\u7684\u9776\u70b9\u3002\u7ec6\u80de\u662f\u5982\u4f55\u5728\u4e0d\u540c\u5f62\u72b6\u4e0b\uff0c\u4f9d\u7136\u80fd\u591f\u51c6\u786e\u5730\"\u89e3\u7801\"\u81ea\u8eab\u7684\u51e0\u4f55\u4fe1\u606f\uff0c\u4ece\u800c\u786e\u4fdd\u751f\u7269\u5b66\u529f\u80fd\u7684\u7cbe\u51c6\u6267\u884c\uff1f\u4f8b\u5982\uff0c\u5728\u5de8\u5927\u7684\u6d77\u661f\u5375\u6bcd\u7ec6\u80de\u4e2d\uff0c\u4e00\u4e2a\u5173\u952e\u7684RhoA\u86cb\u767d\u6d3b\u6027\u6ce2\u603b\u662f\u80fd\u4ece\u7ec6\u80de\u8868\u9762\u7cbe\u786e\u5730\u4f20\u64ad\u5230\u7ec6\u80de\u6838\u7684\u6240\u5728\u4f4d\u7f6e\uff0c\u65e0\u8bba\u7ec6\u80de\u662f\u88ab\u62c9\u4f38\u6210\u692d\u7403\u8fd8\u662f\u6324\u538b\u6210\u661f\u5f62\u3002</p> </li> <li> <p>\u7269\u7406\u673a\u5236: \u8fd9\u9879\u7814\u7a76\u63ed\u793a\u4e86\u4e00\u79cd\u7cbe\u5999\u7684\u3001\u5206\u5c42\u7ea7\u7684\u6a21\u5f0f\u5f62\u6210\u673a\u5236\uff08\"patterns forming patterns\"\uff09\u3002\u7ec6\u80de\u7684\u51e0\u4f55\u5f62\u72b6\u4fe1\u606f\u9996\u5148\u88ab\u7f16\u7801\u6210\u4e00\u79cd\u957f\u7a0b\u7684\u3001\u7a33\u5b9a\u7684\u7ec6\u80de\u5468\u671f\u86cb\u767d\uff08Cdk1\uff09\u7684\u6d53\u5ea6\u68af\u5ea6\u3002\u8fd9\u4e2a\u68af\u5ea6\u672c\u8eab\u662f\u4e00\u4e2a\u53cd\u5e94-\u6269\u6563\u7cfb\u7edf\u5f62\u6210\u7684\"\u80cc\u666f\u6a21\u5f0f\"\u3002\u63a5\u7740\uff0c\u7b2c\u4e8c\u4e2a\u53cd\u5e94-\u6269\u6563\u7cfb\u7edf\u2014\u2014RhoA\u86cb\u767d\u5faa\u73af\u2014\u2014\u4f1a\"\u8bfb\u53d6\"\u8fd9\u4e2a\u80cc\u666f\u68af\u5ea6\u3002\u8fd9\u4e2a\u7cfb\u7edf\u50cf\u4e00\u4e2a\u53cc\u7a33\u6001\u5f00\u5173\uff0c\u53ea\u6709\u5728Cdk1\u6d53\u5ea6\u8d85\u8fc7\u67d0\u4e2a\u9608\u503c\u65f6\u624d\u4f1a\u88ab\u6fc0\u6d3b\uff0c\u4ece\u800c\u5f62\u6210\u4e00\u4e2a\u5728\u7ec6\u80de\u76ae\u5c42\u4e0a\u4f20\u64ad\u7684\u3001\u88ab\u6fc0\u53d1\u7684\u884c\u6ce2\u3002\u8fd9\u4e2a\u6ce2\u7684\u4f20\u64ad\u8def\u5f84\u548c\u6700\u7ec8\u4f4d\u7f6e\uff0c\u6b63\u662f\u7531\u7b2c\u4e00\u4e2a\u6a21\u5f0f\uff08Cdk1\u68af\u5ea6\uff09\u6240\u5f15\u5bfc\u548c\u51b3\u5b9a\u7684\u3002\u901a\u8fc7\u8fd9\u79cd\"\u6a21\u5f0f\u5f15\u5bfc\u6a21\u5f0f\"\u7684\u7ea7\u8054\u65b9\u5f0f\uff0c\u7ec6\u80de\u5de7\u5999\u5730\u5c06\u590d\u6742\u7684\u51e0\u4f55\u4fe1\u606f\u8f6c\u5316\u4e3a\u9c81\u68d2\u7684\u751f\u5316\u4fe1\u53f7\uff0c\u786e\u4fdd\u4e86\u5373\u4fbf\u5728\u5267\u70c8\u7684\u5f62\u72b6\u6270\u52a8\u4e0b\uff0c\u5173\u952e\u4fe1\u53f7\u4f9d\u7136\u80fd\u591f\u7cbe\u786e\u5f52\u4f4d\u3002</p> </li> <li> <p>\u4eba\u9020\u7ec6\u80de\u7684\u81ea\u9a71\u52a8\u8fd0\u52a8 (Synthetic cell motility)</p> </li> <li> <p>\u751f\u7269\u5b66\u95ee\u9898/\u76ee\u6807: \u7ec6\u80de\u7684\u81ea\u4e3b\u8fd0\u52a8\u662f\u751f\u547d\u6700\u57fa\u672c\u7684\u7279\u5f81\u4e4b\u4e00\uff0c\u5b83\u4f9d\u8d56\u4e8e\u590d\u6742\u7684\u7ec6\u80de\u9aa8\u67b6\u548c\u9a6c\u8fbe\u86cb\u767d\u7cfb\u7edf\u3002\u80fd\u5426\u5728\u6ca1\u6709\u8fd9\u4e9b\u590d\u6742\"\u808c\u8089\u9aa8\u9abc\"\u7684\u60c5\u51b5\u4e0b\uff0c\u4ec5\u7528\u6700\u5c11\u7684\u7ec4\u5206\u6784\u5efa\u51fa\u4e00\u4e2a\u53ef\u4ee5\u81ea\u4e3b\u8fd0\u52a8\u7684\"\u4eba\u9020\u7ec6\u80de\"\uff1f\u8fd9\u662f\"\u81ea\u4e0b\u800c\u4e0a\"\u5408\u6210\u751f\u7269\u5b66\u9886\u57df\u7684\u4e00\u4e2a\u6838\u5fc3\u6311\u6218\uff0c\u65e8\u5728\u63a2\u7d22\u9a71\u52a8\u751f\u547d\u73b0\u8c61\u7684\u6700\u5c0f\u7269\u7406\u5316\u5b66\u539f\u7406\u3002</p> </li> <li> <p>\u7269\u7406\u673a\u5236: \u8be5\u7814\u7a76\u6210\u529f\u5730\u5229\u7528\u5927\u80a0\u6746\u83cc\u7684Min\u86cb\u767d\u7cfb\u7edf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u8102\u8d28\u4f53\uff08\u4eba\u9020\u7ec6\u80de\u6a21\u578b\uff09\u5728\u5e73\u9762\u4e0a\u7684\u6301\u7eed\u5b9a\u5411\u8fd0\u52a8\u3002\u5176\u6838\u5fc3\u662f\u4e00\u4e2a\u529b\u5316\u5b66\u53cd\u9988\u5faa\u73af\u3002\u9996\u5148\uff0cMinD\u548cMinE\u86cb\u767d\u5728ATP\u7684\u9a71\u52a8\u4e0b\uff0c\u5728\u8102\u8d28\u4f53\u819c\u7684\u5185\u5916\u8868\u9762\u4ee5\u53ca\u652f\u6491\u5e73\u9762\u4e0a\u81ea\u7ec4\u7ec7\u5f62\u6210\u975e\u5bf9\u79f0\u7684\u86cb\u767d\u8d28\u6d53\u5ea6\u5206\u5e03\uff08\u5316\u5b66\u90e8\u5206\uff09\u3002\u8fd9\u79cd\u4e0d\u5747\u5300\u7684\u86cb\u767d\u5206\u5e03\uff0c\u901a\u8fc7\u4e24\u79cd\u53ef\u80fd\u7684\u673a\u5236\uff0c\u5bfc\u81f4\u4e86\u8102\u8d28\u4f53\u5f62\u72b6\u7684\u5bf9\u79f0\u6027\u7834\u7f3a\u5e76\u4ea7\u751f\u4e86\u9a71\u52a8\u529b\uff08\u529b\u5b66\u90e8\u5206\uff09\uff1a1) \u86cb\u767d\u50cf\"\u62c9\u94fe\"\u4e00\u6837\u5728\u8102\u8d28\u4f53\u4e0e\u652f\u6491\u5e73\u9762\u95f4\u5f62\u6210\u548c\u65ad\u5f00\u4e0d\u5747\u8861\u7684\u8fde\u63a5\uff1b2) \u86cb\u767d\u7684\u805a\u96c6\u76f4\u63a5\u6539\u53d8\u4e86\u819c\u7684\u5c40\u90e8\u66f2\u7387\u548c\u5f20\u529b\u3002\u8fd9\u79cd\u7531\u5316\u5b66\u6a21\u5f0f\u9a71\u52a8\u7684\u5f62\u53d8\u548c\u8fd0\u52a8\uff0c\u53cd\u8fc7\u6765\u53c8\u4f1a\u5f71\u54cdMin\u86cb\u767d\u81ea\u8eab\u7684\u53cd\u5e94-\u6269\u6563\u52a8\u529b\u5b66\uff0c\u56e0\u4e3aMin\u7cfb\u7edf\u5bf9\u51e0\u4f55\u5f62\u72b6\u975e\u5e38\u654f\u611f\u3002\u8fd9\u79cd\"\u5316\u5b66\u6a21\u5f0f\u5f71\u54cd\u5f62\u72b6\uff0c\u5f62\u72b6\u53d8\u5316\u53cd\u9988\u4e8e\u5316\u5b66\u6a21\u5f0f\"\u7684\u5faa\u73af\uff0c\u6700\u7ec8\u9a71\u52a8\u7740\u8fd9\u4e2a\u6781\u7b80\u7684\u4eba\u9020\u7ec6\u80de\u5b9e\u73b0\u4e86\u524d\u6240\u672a\u6709\u7684\u3001\u65e0\u9700\u7ec6\u80de\u9aa8\u67b6\u7684\u6301\u7eed\u722c\u884c\u8fd0\u52a8\u3002</p> </li> </ul>"},{"location":"zh/notes/1.%20%E8%AF%BE%E7%A8%8B%E5%AF%BC%E8%AE%BA/#43","title":"4.3 \u590d\u6742\u6027\u79d1\u5b66\uff1a\u8bfa\u8d1d\u5c14\u5956\u4e0e\u5176\u4ed6\u8363\u8a89","text":"<p>\u975e\u5e73\u8861\u7269\u7406\u5b66\u548c\u590d\u6742\u6027\u79d1\u5b66\u7684\u601d\u60f3\u4e0d\u4ec5\u5728\u751f\u7269\u5b66\u4e2d\u53d6\u5f97\u4e86\u5de8\u5927\u6210\u529f\uff0c\u5176\u6df1\u8fdc\u5f71\u54cd\u4e5f\u5f97\u5230\u4e86\u79d1\u5b66\u754c\u7684\u6700\u9ad8\u8ba4\u53ef\u3002</p> <p></p> <ul> <li> <p>2021\u5e74\u8bfa\u8d1d\u5c14\u7269\u7406\u5b66\u5956: \u6388\u4e88\u4e86Syukuro Manabe, Klaus Hasselmann \u548c Giorgio Parisi\uff0c\u4ee5\u8868\u5f70\u4ed6\u4eec\u201c\u5bf9\u6211\u4eec\u7406\u89e3\u590d\u6742\u7269\u7406\u7cfb\u7edf\u7684\u5f00\u521b\u6027\u8d21\u732e\u201d\u3002\u7279\u522b\u662fParisi\u7684\u5de5\u4f5c\uff0c\u4ed6\u63ed\u793a\u4e86\u50cf\u81ea\u65cb\u73bb\u7483\u8fd9\u6837\u7684\u65e0\u5e8f\u7cfb\u7edf\u4e2d\u9690\u85cf\u7684\u6df1\u523b\u7ed3\u6784\u548c\u6da8\u843d\u89c4\u5f8b\u3002Parisi\u53d1\u5c55\u7684\u7406\u8bba\u5de5\u5177\uff0c\u4e3a\u7406\u89e3\u5404\u79cd\u5145\u6ee1\u968f\u673a\u6027\u548c\u201c\u904d\u5386\u6027\u7834\u7f3a\u201d\u7684\u590d\u6742\u7cfb\u7edf\u63d0\u4f9b\u4e86\u666e\u9002\u7684\u6846\u67b6\uff0c\u8fd9\u4e0e\u672c\u8bfe\u7a0b\u5c06\u8981\u5b66\u4e60\u7684\u968f\u673a\u8fc7\u7a0b\u548c\u7edf\u8ba1\u573a\u8bba\u601d\u60f3\u606f\u606f\u76f8\u5173\u3002</p> </li> <li> <p>2024\u5e74\u8bfa\u8d1d\u5c14\u7269\u7406\u5b66\u5956: \u6388\u4e88\u4e86John J. Hopfield \u548c Geoffrey E. Hinton\uff0c\u4ee5\u8868\u5f70\u4ed6\u4eec\u201c\u4f7f\u5f97\u5229\u7528\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u673a\u5668\u5b66\u4e60\u6210\u4e3a\u53ef\u80fd\u7684\u5960\u57fa\u6027\u53d1\u73b0\u548c\u53d1\u660e\u201d\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cHopfield\u63d0\u51fa\u7684\u8054\u60f3\u8bb0\u5fc6\u7f51\u7edc\uff08Hopfield\u7f51\u7edc\uff09\u7684\u6570\u5b66\u6a21\u578b\uff0c\u5176\u601d\u60f3\u6b63\u662f\u6e90\u4e8e\u7edf\u8ba1\u7269\u7406\u4e2d\u7684\u81ea\u65cb\u73bb\u7483\u6a21\u578b\u3002\u8fd9\u96c4\u8fa9\u5730\u8bc1\u660e\u4e86\u7edf\u8ba1\u7269\u7406\uff0c\u7279\u522b\u662f\u5904\u7406\u591a\u4f53\u76f8\u4e92\u4f5c\u7528\u548c\u96c6\u4f53\u884c\u4e3a\u7684\u601d\u60f3\uff0c\u5df2\u7ecf\u6210\u4e3a\u4eba\u5de5\u667a\u80fd\u548c\u4fe1\u606f\u79d1\u5b66\u7b49\u9886\u57df\u7684\u7406\u8bba\u57fa\u77f3\u3002</p> </li> </ul> <p></p> <ul> <li>2025\u5e74\u73bb\u5c14\u5179\u66fc\u5956\u7ae0: \u6388\u4e88\u4e86Mehran Kardar \u548c Yoshiki Kuramoto\u3002Kardar\u5728\u7edf\u4e00\u7406\u89e3\u5e73\u8861\u4e0e\u975e\u5e73\u8861\u7cfb\u7edf\u4e2d\u7684\u6da8\u843d\u3001\u754c\u9762\u751f\u957f\u7b49\u73b0\u8c61\u65b9\u9762\u505a\u51fa\u4e86\u91cd\u8981\u5de5\u4f5c\uff08\u5982\u8457\u540d\u7684KPZ\u65b9\u7a0b\uff09\u3002Kuramoto\u5219\u5f00\u521b\u4e86\u590d\u6742\u7cfb\u7edf\u4e2d\u540c\u6b65\u73b0\u8c61\u7684\u7406\u8bba\uff08\u5982Kuramoto\u6a21\u578b\uff09\uff0c\u63ed\u793a\u4e86\u4ece\u795e\u7ecf\u5143\u7f51\u7edc\u5230\u8424\u706b\u866b\u95ea\u70c1\u7b49\u5404\u79cd\u96c6\u4f53\u52a8\u529b\u5b66\u884c\u4e3a\u7684\u666e\u9002\u539f\u7406\u3002\u8fd9\u4e24\u4f4d\u5b66\u8005\u7684\u5de5\u4f5c\u4ee3\u8868\u4e86\u975e\u5e73\u8861\u7269\u7406\u5b66\u7684\u6838\u5fc3\u524d\u6cbf\uff0c\u4e5f\u6b63\u662f\u672c\u8bfe\u7a0b\u540e\u7eed\u5c06\u8981\u6df1\u5165\u63a2\u8ba8\u7684\u4e3b\u9898\u3002</li> </ul> <p></p> <p>\u8fd9\u4e9b\u4f8b\u5b50\u6e05\u6670\u5730\u8868\u660e\uff0c\u8fd9\u95e8\u8bfe\u6240\u4ecb\u7ecd\u7684\u6982\u5ff5\u548c\u65b9\u6cd5\uff0c\u5e76\u975e\u8c61\u7259\u5854\u4e2d\u7684\u5c60\u9f99\u4e4b\u6280\uff0c\u800c\u662f\u7406\u89e3\u4ece\u751f\u547d\u5230\u667a\u80fd\u7b49\u4e00\u7cfb\u5217\u590d\u6742\u73b0\u8c61\u7684\u94a5\u5319\uff0c\u662f\u5f53\u4ee3\u79d1\u5b66\u7814\u7a76\u4e2d\u6700\u5177\u6d3b\u529b\u548c\u5f71\u54cd\u529b\u7684\u601d\u60f3\u5b9d\u5e93\u4e4b\u4e00\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/","title":"\u5e8f\u8a00:\u56de\u987e\u71b5\u4ea7\u751f\u4e0e\u4e0d\u53ef\u9006\u6027\u7684\u6807\u5fd7","text":"<p>\u5728\u4e4b\u524d\u7684\u8bb2\u5ea7\u4e2d(\u7279\u522b\u662f\u7b2c8\u8bb2\u548c\u7b2c9\u8bb2),\u6211\u4eec\u63a2\u8ba8\u4e86\u63cf\u8ff0\u7cfb\u7edf\u72b6\u6001\u968f\u65f6\u95f4\u6f14\u5316\u7684\u4e3b\u65b9\u7a0b,\u5e76\u533a\u5206\u4e86\u4e24\u79cd\u91cd\u8981\u7684\u72b6\u6001:\u5168\u5c40\u5e73\u8861(Global Balance)\u548c\u7ec6\u81f4\u5e73\u8861(Detailed Balance)\u3002\u6211\u4eec\u77e5\u9053,\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u7684\u7cfb\u7edf\u5fc5\u7136\u5904\u4e8e\u7a33\u6001,\u4f46\u5e76\u975e\u6240\u6709\u7a33\u6001\u7cfb\u7edf\u90fd\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u3002\u8fd9\u4e00\u533a\u522b\u662f\u7406\u89e3\u975e\u5e73\u8861\u7269\u7406\u5b66\u7684\u5173\u952e,\u5b83\u5c06\u6211\u4eec\u5f15\u5411\u4e86\"\u4e0d\u53ef\u9006\u6027\"\u8fd9\u4e00\u6838\u5fc3\u6982\u5ff5\u3002</p> <p>\u5f53\u4e00\u4e2a\u7cfb\u7edf\u5904\u4e8e\u975e\u5e73\u8861\u7a33\u6001(Non-Equilibrium Steady State, NESS)\u65f6,\u5c3d\u7ba1\u5176\u5b8f\u89c2\u6027\u8d28(\u5982\u6982\u7387\u5206\u5e03)\u4e0d\u968f\u65f6\u95f4\u6539\u53d8,\u4f46\u7cfb\u7edf\u5185\u90e8\u5b58\u5728\u7740\u6301\u7eed\u4e0d\u65ad\u7684\u6982\u7387\u6d41(probability current)\u3002\u8fd9\u4e9b\u51c0\u6982\u7387\u6d41\u7684\u5b58\u5728,\u6b63\u662f\u7cfb\u7edf\u4e0d\u53ef\u9006\u6027\u7684\u4f53\u73b0\u3002\u4e3a\u4e86\u91cf\u5316\u8fd9\u79cd\u4e0d\u53ef\u9006\u6027,\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7269\u7406\u91cf,\u8fd9\u5c31\u662f\u71b5\u4ea7\u751f\u7387\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#sigma","title":"\u91cf\u5316\u4e0d\u53ef\u9006\u6027:\u71b5\u4ea7\u751f\u7387 \\(\\sigma\\)","text":"<p>\u6559\u6388\u5728\u56de\u987e\u4e0a\u4e00\u8bb2\u5185\u5bb9\u65f6,\u9996\u5148\u7ed9\u51fa\u4e86\u71b5\u4ea7\u751f\u7387 \\(\\sigma\\) \u7684\u8868\u8fbe\u5f0f:</p> \\[ \\sigma = \\sum_{ij} \\pi_j w_{ij} \\ln\\left(\\frac{w_{ji}}{w_{ij}}\\right) \\] <p>\u8ba9\u6211\u4eec\u6765\u89e3\u6790\u8fd9\u4e2a\u516c\u5f0f:</p> <ul> <li> <p>\\(\\pi_j\\) \u662f\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001 \\(j\\) \u7684\u7a33\u6001\u6982\u7387\u3002</p> </li> <li> <p>\\(w_{ij}\\) \u662f\u4ece\u72b6\u6001 \\(j\\) \u5230\u72b6\u6001 \\(i\\) \u7684\u8f6c\u79fb\u901f\u7387\u3002</p> </li> <li> <p>\u56e0\u6b64,\\(\\pi_j w_{ij}\\) \u4ee3\u8868\u5728\u7a33\u6001\u4e0b,\u4ece\u72b6\u6001 \\(j\\) \u8f6c\u79fb\u5230\u72b6\u6001 \\(i\\) \u7684\u6982\u7387\u6d41(probability flux)\u3002</p> </li> <li> <p>\u5bf9\u6570\u9879 \\(\\ln\\left(\\frac{w_{ji}}{w_{ij}}\\right)\\) \u8861\u91cf\u4e86\u6b63\u5411\u8fc7\u7a0b (\\(j \\to i\\)) \u548c\u9006\u5411\u8fc7\u7a0b (\\(i \\to j\\)) \u901f\u7387\u7684\u4e0d\u5bf9\u79f0\u6027\u3002\u5982\u679c \\(w_{ij} = w_{ji}\\),\u8be5\u9879\u4e3a\u96f6,\u8868\u793a\u8fd9\u5bf9\u8f6c\u79fb\u662f\u53ef\u9006\u7684\u3002</p> </li> </ul> <p>\u6574\u4e2a\u8868\u8fbe\u5f0f \\(\\sigma\\) \u662f\u5bf9\u7cfb\u7edf\u4e2d\u6240\u6709\u53ef\u80fd\u8f6c\u79fb\u7684\u6982\u7387\u6d41\u52a0\u6743\u7684\u901f\u7387\u4e0d\u5bf9\u79f0\u6027\u7684\u603b\u548c\u3002\u56e0\u6b64,\\(\\sigma\\) \u7cbe\u786e\u5730\u91cf\u5316\u4e86\u6574\u4e2a\u7cfb\u7edf\u5728\u5b8f\u89c2\u5c42\u9762\u4e0a\u7684\u65f6\u95f4\u4e0d\u5bf9\u79f0\u6027\u6216\u4e0d\u53ef\u9006\u6027\u3002</p> <p>\u63a5\u7740,\u6559\u6388\u901a\u8fc7\u4e00\u4e2a\u5de7\u5999\u7684\u6570\u5b66\u53d8\u6362,\u7ed9\u51fa\u4e86 \\(\\sigma\\) \u7684\u53e6\u4e00\u4e2a\u7b49\u4ef7\u5f62\u5f0f:</p> \\[ \\sigma = \\sum_{ij} \\pi_j w_{ij} \\ln\\left(\\frac{\\pi_i w_{ji}}{\\pi_j w_{ij}}\\right) \\] <p>\u8fd9\u4e2a\u53d8\u6362\u5e76\u975e\u8fd1\u4f3c,\u800c\u662f\u4e25\u683c\u7684\u3002\u5176\u63a8\u5bfc\u5229\u7528\u4e86\u7a33\u6001\u7684\u5168\u5c40\u5e73\u8861\u6761\u4ef6 \\(\\sum_j [\\pi_j w_{ji} - \\pi_i w_{ij}] = 0\\)\u3002\u901a\u8fc7\u8fd9\u4e2a\u6761\u4ef6\u53ef\u4ee5\u8bc1\u660e\u4e00\u4e2a\u6052\u7b49\u5f0f \\(\\sum_{ij} \\pi_j w_{ij} \\ln(\\pi_j / \\pi_i) = 0\\)\u3002\u5c06\u8fd9\u4e2a\u4e3a\u96f6\u7684\u9879\u52a0\u5230\u539f\u59cb\u7684 \\(\\sigma\\) \u8868\u8fbe\u5f0f\u7684\u5bf9\u6570\u5185\u90e8,\u5c31\u5f97\u5230\u4e86\u65b0\u7684\u5f62\u5f0f\u3002</p> <p>\u8fd9\u4e2a\u65b0\u5f62\u5f0f\u5728\u6982\u5ff5\u4e0a\u66f4\u4e3a\u6df1\u523b\u3002\u5bf9\u6570\u5185\u90e8\u7684\u9879\u53d8\u6210\u4e86\u6b63\u5411\u901a\u91cf \\(\\pi_j w_{ij}\\) \u4e0e\u9006\u5411\u901a\u91cf \\(\\pi_i w_{ji}\\) \u7684\u6bd4\u503c\u3002\u8fd9\u76f4\u63a5\u4f53\u73b0\u4e86\u71b5\u4ea7\u751f\u6765\u6e90\u4e8e\u7cfb\u7edf\u5185\u90e8\u6982\u7387\u6d41\u52a8\u7684\u51c0\u5faa\u73af\u3002</p> <p>\u71b5\u4ea7\u751f\u7387\u5177\u6709\u4e24\u4e2a\u57fa\u672c\u6027\u8d28:</p> <ol> <li> <p>\u975e\u8d1f\u6027: \\(\\sigma \\geq 0\\)\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e\u8a79\u68ee\u4e0d\u7b49\u5f0f\uff08Jensen's inequality\uff09\u7684\u6570\u5b66\u7ed3\u8bba\u3002\u5176\u7269\u7406\u610f\u4e49\u6781\u4e3a\u6df1\u8fdc:\u4efb\u4f55\u7cfb\u7edf\u7684\u7a33\u6001\u71b5\u4ea7\u751f\u7387\u53ea\u80fd\u4e3a\u6b63\u6216\u4e3a\u96f6,\u7edd\u4e0d\u4f1a\u4e3a\u8d1f\u3002\u8fd9\u662f\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u5728\u968f\u673a\u8fc7\u7a0b\u4e2d\u7684\u4f53\u73b0\u3002</p> </li> <li> <p>\u4e0e\u7ec6\u81f4\u5e73\u8861\u7684\u8054\u7cfb:</p> </li> <li> <p>\u5f53\u4e14\u4ec5\u5f53\u7cfb\u7edf\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861(Detailed Balance, DB)\u65f6,\\(\\sigma = 0\\)\u3002\u5728\u7ec6\u81f4\u5e73\u8861\u4e0b,\u6bcf\u4e00\u5bf9\u72b6\u6001\u4e4b\u95f4\u7684\u6b63\u5411\u901a\u91cf\u548c\u9006\u5411\u901a\u91cf\u90fd\u76f8\u7b49,\u5373 \\(\\pi_j w_{ij} = \\pi_i w_{ji}\\),\u56e0\u6b64\u5bf9\u6570\u9879\u5904\u5904\u4e3a\u96f6\u3002\u8fd9\u5bf9\u5e94\u4e8e\u771f\u6b63\u7684\u70ed\u529b\u5b66\u5e73\u8861\u6001\u3002</p> </li> <li> <p>\u5f53\u7cfb\u7edf\u5904\u4e8e\u975e\u5e73\u8861\u7a33\u6001(NESS)\u65f6,\\(\\sigma &gt; 0\\)\u3002\u6b64\u65f6,\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u51c0\u7684\u6982\u7387\u6d41 \\(J_{ij} = \\pi_j w_{ij} - \\pi_i w_{ji} \\neq 0\\)\u3002</p> </li> </ol> <p>\u56e0\u6b64,\\(\\sigma\\) \u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5224\u65ad\u7cfb\u7edf\u662f\u5426\u5904\u4e8e\u5e73\u8861\u6001\u7684\"\u5f00\u5173\",\u5b83\u7684\u6570\u503c\u5927\u5c0f\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5ea6\u91cf,\u5b83\u5b9a\u91cf\u5730\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7cfb\u7edf\u504f\u79bb\u7ec6\u81f4\u5e73\u8861(\u5373\u53ef\u9006\u7684\u5e73\u8861\u6001)\u7684\u7a0b\u5ea6\u3002\\(\\sigma\\) \u8d8a\u5927,\u610f\u5473\u7740\u7cfb\u7edf\u5185\u90e8\u7684\u6982\u7387\u6d41\u5faa\u73af\u8d8a\u5f3a,\u7cfb\u7edf\u88ab\u9a71\u52a8\u5f97\u79bb\u5e73\u8861\u6001\u8d8a\u8fdc,\u5176\u4e0d\u53ef\u9006\u6027\u4e5f\u8d8a\u5f3a\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#1","title":"1. \u57c3\u4f26\u8d39\u65af\u7279\u6a21\u578b:\u4e00\u4e2a\u63a2\u7d22\u590d\u6742\u601d\u60f3\u7684\u7b80\u5355\u7cfb\u7edf","text":""},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#11","title":"1.1 \u7ecf\u5178\u6a21\u578b\u7684\u5f15\u5165","text":"<p>\u4e3a\u4e86\u66f4\u5177\u4f53\u5730\u7406\u89e3\u4e0d\u53ef\u9006\u6027\u3001\u71b5\u548c\u5e73\u8861\u7684\u672c\u8d28,\u6559\u6388\u5f15\u5165\u4e86\u4e00\u4e2a\u7269\u7406\u5b66\u4e2d\u7684\u7ecf\u5178\u6559\u5b66\u6a21\u578b\u2014\u2014\u57c3\u4f26\u8d39\u65af\u7279\u6a21\u578b(Ehrenfest Model)\u3002\u8fd9\u4e2a\u6a21\u578b\u7531\u4fdd\u7f57\u00b7\u57c3\u4f26\u8d39\u65af\u7279\u548c\u5854\u5b63\u626c\u5a1c\u00b7\u57c3\u4f26\u8d39\u65af\u7279\u592b\u5987\u572820\u4e16\u7eaa\u521d\u63d0\u51fa,\u65e8\u5728\u6f84\u6e05\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u7edf\u8ba1\u5b66\u672c\u8d28,\u800c\u975e\u7edd\u5bf9\u5b9a\u5f8b\u3002</p> <p>Ehrenfest Model \u7684\u51fa\u73b0,\u662f\u4e3a\u4e86\u89e3\u51b3\u7edf\u8ba1\u529b\u5b66\u4e2d\u4e00\u4e2a\u6838\u5fc3\u7684\u6096\u8bba:\u5b8f\u89c2\u4e16\u754c\u4e2d\u6211\u4eec\u89c2\u5bdf\u5230\u7684\u4e0d\u53ef\u9006\u8fc7\u7a0b(\u5982\u6c14\u4f53\u603b\u662f\u4ece\u9ad8\u538b\u533a\u6269\u6563\u5230\u4f4e\u538b\u533a,\u7b26\u5408\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b)\u662f\u5982\u4f55\u4ece\u5fae\u89c2\u5c42\u9762\u5b8c\u5168\u53ef\u9006\u7684\u7269\u7406\u5b9a\u5f8b\u4e2d\u6d8c\u73b0\u51fa\u6765\u7684\u3002</p> <p>\u4e3a\u6b64,\u7269\u7406\u5b66\u5bb6\u57c3\u4f26\u8d39\u65af\u7279\u592b\u5987\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u6781\u5176\u7b80\u6d01\u7684\"\u74ee\u6a21\u578b\"(\u6216\u79f0\"\u72d7\u86a4\u6a21\u578b\"):\u60f3\u8c61\u6709\u4e24\u4e2a\u7bb1\u5b50\u548cN\u4e2a\u53ef\u533a\u5206\u7684\u7c92\u5b50,\u6bcf\u6b21\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u7c92\u5b50\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u7bb1\u5b50\u3002\u5c3d\u7ba1\u5fae\u89c2\u4e0a\u6bcf\u4e00\u6b21\u79fb\u52a8\u90fd\u662f\u53ef\u9006\u7684,\u4f46\u8be5\u6a21\u578b\u6e05\u6670\u5730\u5c55\u793a\u4e86,\u7cfb\u7edf\u4f1a\u4ee5\u538b\u5012\u6027\u7684\u6982\u7387\u4ece\u4efb\u4f55\u4e0d\u5747\u8861\u7684\u521d\u59cb\u72b6\u6001(\u5982\u6240\u6709\u7c92\u5b50\u90fd\u5728\u4e00\u4e2a\u7bb1\u5b50\u91cc)\u6f14\u5316\u5230\u4e00\u4e2a\u6700\u53ef\u80fd\u7684\u5b8f\u89c2\u5e73\u8861\u6001(\u7c92\u5b50\u5728\u4e24\u4e2a\u7bb1\u5b50\u4e2d\u5927\u81f4\u5747\u7b49\u5206\u5e03)\u3002</p> <p>\u56e0\u6b64,\u5b83\u5e76\u975e\u7528\u4e8e\u6a21\u62df\u67d0\u4e00\u5177\u4f53\u7684\u7269\u7406\u7cfb\u7edf,\u800c\u662f\u4f5c\u4e3a\u4e00\u4e2a\u7ecf\u5178\u7684\u601d\u60f3\u5b9e\u9a8c\u548c\u6559\u5b66\u5de5\u5177,\u6df1\u523b\u5730\u63ed\u793a\u4e86\u5b8f\u89c2\u4e0d\u53ef\u9006\u6027\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u7edf\u8ba1\u73b0\u8c61,\u5e76\u4e3a\u7406\u89e3\u5e73\u8861\u6001\u3001\u7ec6\u81f4\u5e73\u8861\u4ee5\u53ca\u71b5\u5982\u4f55\u4f5c\u4e3a\u7cfb\u7edf\u8d8b\u5411\u5e73\u8861\u7684\u9a71\u52a8\u529b\u63d0\u4f9b\u4e86\u6700\u76f4\u89c2\u3001\u6700\u7b80\u5355\u7684\u6570\u5b66\u8303\u4f8b\u3002</p> <p>\u8fd9\u4e2a\u770b\u4f3c\u7b80\u5355\u7684\u6a21\u578b,\u901a\u8fc7\u6a21\u62df\u7c92\u5b50\u5728\u4e24\u4e2a\u5bb9\u5668\u95f4\u7684\u968f\u673a\u8df3\u8dc3,\u8db3\u4ee5\u5e2e\u52a9\u6211\u4eec\u56de\u7b54\u4e09\u4e2a\u6839\u672c\u6027\u95ee\u9898:</p> <ol> <li> <p>\u7cfb\u7edf\u7684\u5e73\u8861\u6001\u662f\u4ec0\u4e48\u6837\u7684?</p> </li> <li> <p>\u7cfb\u7edf\u662f\u5982\u4f55\u8d8b\u8fd1\u4e8e\u5e73\u8861\u6001\u7684?</p> </li> <li> <p>\u5e73\u8861\u6001\u7684\u672c\u8d28\u662f\u4ec0\u4e48?</p> </li> </ol>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#12-","title":"1.2. \"\u72d7-\u8df3\u86a4\"\u6a21\u578b\u7684\u5f62\u5f0f\u5316\u63cf\u8ff0","text":"<p>\u8be5\u6a21\u578b\u6709\u4e00\u4e2a\u751f\u52a8\u7684\u6bd4\u55bb:\u60f3\u8c61\u6709\u4e24\u6761\u72d7(A\u548cB)\u548c \\(N\\) \u53ea\u8df3\u86a4\u3002\u8df3\u86a4\u4f1a\u4ee5\u4e00\u5b9a\u7684\u901f\u7387\u5728\u4e24\u6761\u72d7\u4e4b\u95f4\u968f\u673a\u8df3\u6765\u8df3\u53bb\u3002\u6211\u4eec\u5173\u5fc3\u7684\u662f\u72d7A\u8eab\u4e0a\u8df3\u86a4\u7684\u6570\u91cf\u3002</p> <p>\u6a21\u578b\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b:</p> <p>\u72b6\u6001: \u7cfb\u7edf\u7684\u5b8f\u89c2\u72b6\u6001\u7531\u72d7A\u8eab\u4e0a\u7684\u8df3\u86a4\u6570\u91cf \\(n\\) \u6765\u5b9a\u4e49,\u5176\u4e2d \\(n\\) \u53ef\u4ee5\u53d6\u6574\u6570\u503c \\(0, 1, \\ldots, N\\)\u3002</p> <p>\u8f6c\u79fb\u901f\u7387:</p> <p>\u5931\u53bb\u4e00\u53ea\u8df3\u86a4(\u4eceA\u5230B):\u4ece\u72b6\u6001 \\(n\\) \u8f6c\u79fb\u5230 \\(n-1\\) \u7684\u901f\u7387\u4e3a \\(\\omega_{n \\to n-1} = \\lambda n\\)\u3002</p> <p>\u5f97\u5230\u4e00\u53ea\u8df3\u86a4(\u4eceB\u5230A):\u4ece\u72b6\u6001 \\(n\\) \u8f6c\u79fb\u5230 \\(n+1\\) \u7684\u901f\u7387\u4e3a \\(\\omega_{n \\to n+1} = \\lambda (N-n)\\)\u3002</p> <p>\u8fd9\u4e9b\u901f\u7387\u7684\u8bbe\u5b9a\u975e\u5e38\u76f4\u89c2:</p> <p>\u72d7A\u5931\u53bb\u8df3\u86a4\u7684\u901f\u7387,\u5e94\u8be5\u6b63\u6bd4\u4e8e\u5b83\u8eab\u4e0a\u5df2\u6709\u7684\u8df3\u86a4\u6570 \\(n\\),\u56e0\u4e3a\u6bcf\u53ea\u8df3\u86a4\u90fd\u6709\u53ef\u80fd\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u4ee5\u901f\u7387 \\(\\lambda\\) \u8df3\u8d70\u3002</p> <p>\u72d7A\u5f97\u5230\u8df3\u86a4\u7684\u901f\u7387,\u5e94\u8be5\u6b63\u6bd4\u4e8e\u53e6\u4e00\u6761\u72d7B\u8eab\u4e0a\u7684\u8df3\u86a4\u6570,\u5373 \\((N-n)\\)\u3002</p> <p>\u8fd9\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u4f9d\u8d56\u5173\u7cfb\u662f\u8be5\u6a21\u578b\u7684\u6838\u5fc3\u7279\u5f81\u3002\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3,\u6211\u4eec\u5c06\u6a21\u578b\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\u603b\u7ed3\u5728\u4e0b\u8868\u4e2d\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#2","title":"2. \u5e73\u8861\u7684\u672c\u8d28:\u7ec6\u81f4\u5e73\u8861\u4e0e\u4e8c\u9879\u5206\u5e03","text":""},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#21","title":"2.1 \u5bfb\u627e\u7a33\u6001","text":"<p>\u73b0\u5728\u6211\u4eec\u6765\u56de\u7b54\u7b2c\u4e00\u4e2a\u95ee\u9898:\u8fd9\u4e2a\u7cfb\u7edf\u7684\u5e73\u8861\u6001(\u5373\u7a33\u6001\u6982\u7387\u5206\u5e03 \\(\\pi_n\\))\u662f\u4ec0\u4e48?</p> <p>\u7531\u4e8e\u8fd9\u4e2a\u7cfb\u7edf\u4e2d\u6ca1\u6709\u5916\u90e8\u9a71\u52a8\u529b(\u6bd4\u5982\u4e00\u4e2a\"\u8df3\u86a4\u6cf5\")\u6765\u5236\u9020\u6301\u7eed\u7684\u5faa\u73af\u6d41,\u6211\u4eec\u53ef\u4ee5\u9884\u671f\u7cfb\u7edf\u6700\u7ec8\u4f1a\u5f1b\u8c6b\u5230\u4e00\u4e2a\u771f\u6b63\u7684\u70ed\u529b\u5b66\u5e73\u8861\u6001\u3002\u8fd9\u6837\u7684\u5e73\u8861\u6001\u5fc5\u987b\u6ee1\u8db3\u66f4\u5f3a\u7684\u7ec6\u81f4\u5e73\u8861(Detailed Balance)\u6761\u4ef6\u3002</p> <p>\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u8981\u6c42,\u5728\u7a33\u6001\u4e0b,\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u72b6\u6001\u4e4b\u95f4\u7684\u6b63\u5411\u6982\u7387\u6d41\u548c\u9006\u5411\u6982\u7387\u6d41\u5fc5\u987b\u76f8\u7b49:</p> \\[ \\pi_n \\cdot \\omega_{n \\to n-1} = \\pi_{n-1} \\cdot \\omega_{n-1 \\to n} \\] <p>\u5c06\u6211\u4eec\u6a21\u578b\u7684\u5177\u4f53\u901f\u7387\u4ee3\u5165:</p> \\[ \\pi_n \\cdot (\\lambda n) = \\pi_{n-1} \\cdot (\\lambda (N-(n-1))) \\]"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#22","title":"2.2 \u6c42\u89e3\u9012\u63a8\u5173\u7cfb","text":"<p>\u901a\u8fc7\u6c42\u89e3\u4e0a\u8ff0\u65b9\u7a0b,\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7a33\u6001\u5206\u5e03 \\(\\pi_n\\)\u3002</p> <p>\u9996\u5148,\u6d88\u53bb\u901f\u7387\u5e38\u6570 \\(\\lambda\\),\u5f97\u5230\u4e00\u4e2a\u5173\u4e8e \\(\\pi_n\\) \u7684\u9012\u63a8\u5173\u7cfb:</p> \\[ \\pi_n = \\frac{n}{N-n+1} \\pi_{n-1} \\] <p>\u6211\u4eec\u53ef\u4ee5\"\u5c55\u5f00\"\u8fd9\u4e2a\u5173\u7cfb,\u5c06 \\(\\pi_n\\) \u7528 \\(\\pi_0\\) \u6765\u8868\u793a:</p> \\[ \\pi_n = \\frac{n}{N-n+1} \\cdot \\frac{n-1}{N-n+2} \\pi_{n-2} = \\ldots = \\frac{n! N (N-1) \\ldots (N-n+1)}{1} \\pi_0 \\] <p>\u6211\u4eec\u8ba4\u51fa\u53f3\u8fb9\u7684\u5206\u6570\u90e8\u5206\u6b63\u662f\u4e8c\u9879\u5f0f\u7cfb\u6570\u7684\u5b9a\u4e49,\u5373 \\(\\binom{N}{n} = \\frac{N!}{n!(N-n)!}\\)\u3002\u6240\u4ee5:</p> \\[ \\pi_n = \\binom{N}{n} \\pi_0 \\] <p>\u6700\u540e,\u6211\u4eec\u5229\u7528\u6982\u7387\u7684\u5f52\u4e00\u5316\u6761\u4ef6 \\(\\sum_{n=0}^{N} \\pi_n = 1\\) \u6765\u786e\u5b9a\u5e38\u6570 \\(\\pi_0\\):</p> \\[ \\sum_{n=0}^{N} \\binom{N}{n} \\pi_0 = \\pi_0 \\sum_{n=0}^{N} \\binom{N}{n} = 1 \\] <p>\u6839\u636e\u4e8c\u9879\u5f0f\u5b9a\u7406,\u6211\u4eec\u77e5\u9053 \\(\\sum_{n=0}^{N} \\binom{N}{n} = 2^N\\)\u3002\u56e0\u6b64,\\(\\pi_0 = 1/2^N\\)\u3002</p> <p>\u5c06 \\(\\pi_0\\) \u4ee3\u56de,\u6211\u4eec\u5f97\u5230\u4e86\u6700\u7ec8\u7684\u7a33\u6001\u5206\u5e03:</p> \\[ \\pi_n = \\frac{1}{2^N} \\binom{N}{n} \\] <p>\u8fd9\u662f\u4e00\u4e2a\u4e8c\u9879\u5206\u5e03\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#23","title":"2.3 \u7ed3\u679c\u7684\u7269\u7406\u89e3\u91ca","text":"<p>\u8fd9\u4e2a\u7ed3\u679c\u975e\u5e38\u7b26\u5408\u76f4\u89c9\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u4e00\u4e2a\u66f4\u57fa\u672c\u7684\u5c42\u9762\u2014\u2014\u5fae\u89c2\u6001(microstate)\u2014\u2014\u6765\u7406\u89e3\u5b83\u3002\u4e00\u4e2a\u5fae\u89c2\u6001\u7cbe\u786e\u5730\u6307\u5b9a\u4e86\u6bcf\u4e00\u53ea\u8df3\u86a4\u5728\u54ea\u6761\u72d7\u8eab\u4e0a\u3002\u5047\u8bbe\u6bcf\u53ea\u8df3\u86a4\u6709 \\(\\{+1, -1\\}\\) \u4e24\u79cd\u53ef\u80fd(\u5206\u522b\u4ee3\u8868\u72d7A\u548c\u72d7B),\u90a3\u4e48\u603b\u5171\u6709 \\(2^N\\) \u4e2a\u4e0d\u540c\u7684\u5fae\u89c2\u6001\u3002</p> <p>\u5982\u679c\u6211\u4eec\u5047\u8bbe\u7cfb\u7edf\u8fbe\u5230\u5e73\u8861\u65f6,\u6240\u6709 \\(2^N\\) \u4e2a\u5fae\u89c2\u6001\u90fd\u662f\u7b49\u53ef\u80fd\u7684,\u90a3\u4e48\u6bcf\u4e2a\u5fae\u89c2\u6001\u51fa\u73b0\u7684\u6982\u7387\u5c31\u662f \\(1/2^N\\)\u3002\u800c\u5b8f\u89c2\u6001 \\(n\\)(\u5373\u72d7A\u4e0a\u6709 \\(n\\) \u53ea\u8df3\u86a4)\u5bf9\u5e94\u7684\u5fae\u89c2\u6001\u6709\u591a\u5c11\u4e2a\u5462?\u8fd9\u7b49\u4ef7\u4e8e\u4ece \\(N\\) \u53ea\u8df3\u86a4\u4e2d\u9009\u51fa \\(n\\) \u53ea\u653e\u5728\u72d7A\u8eab\u4e0a\u7684\u7ec4\u5408\u6570,\u5373 \\(\\binom{N}{n}\\)\u3002</p> <p>\u56e0\u6b64,\u5b8f\u89c2\u6001 \\(n\\) \u7684\u6982\u7387\u5c31\u662f:</p> \\[ P_n = (\\text{\u5bf9\u5e94\u4e8e\u5b8f\u89c2\u6001}n\\text{\u7684\u5fae\u89c2\u6001\u6570\u76ee}) \\times (\\text{\u6bcf\u4e2a\u5fae\u89c2\u6001\u7684\u6982\u7387}) = \\binom{N}{n} \\cdot \\frac{1}{2^N} \\] <p>\u8fd9\u4e0e\u6211\u4eec\u901a\u8fc7\u52a8\u529b\u5b66(\u7ec6\u81f4\u5e73\u8861)\u63a8\u5bfc\u51fa\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\u3002\u8fd9\u8868\u660e,\u57c3\u4f26\u8d39\u65af\u7279\u6a21\u578b\u7684\u52a8\u529b\u5b66\u8fc7\u7a0b,\u5176\u6700\u7ec8\u7ed3\u679c\u6070\u597d\u662f\u8ba9\u7cfb\u7edf\u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u5fae\u89c2\u6001,\u5e76\u4ee5\u7b49\u6982\u7387\u505c\u7559\u5728\u5176\u4e2d\u3002</p> <p>\u8fd9\u4e2a\u4e8c\u9879\u5206\u5e03\u7684\u5747\u503c\u4e3a \\(\\langle n \\rangle = N/2\\),\u6807\u51c6\u5dee\u4e3a \\(\\sigma_n = \\frac{1}{2}\\sqrt{N}\\)\u3002\u8fd9\u610f\u5473\u7740\u5728\u5e73\u8861\u65f6,\u6211\u4eec\u6700\u6709\u53ef\u80fd\u53d1\u73b0\u8df3\u86a4\u5728\u4e24\u6761\u72d7\u8eab\u4e0a\u662f\u5747\u5206\u7684,\u5e76\u4e14\u5b58\u5728\u56f4\u7ed5\u5747\u503c\u7684\u6da8\u843d\u3002</p> <p>\u5f53\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5927\u7cfb\u7edf,\u5373 \\(N\\) \u53d8\u5f97\u975e\u5e38\u5927\u65f6(\u70ed\u529b\u5b66\u6781\u9650),\u4e00\u4e2a\u6df1\u523b\u7684\u73b0\u8c61\u51fa\u73b0\u4e86\u3002\u6da8\u843d\u7684\u76f8\u5bf9\u5927\u5c0f\u4e3a:</p> \\[ \\frac{\\sigma_n}{\\langle n \\rangle} = \\frac{\\frac{1}{2}\\sqrt{N}}{N/2} = \\frac{1}{\\sqrt{N}} \\] <p>\u5f53 \\(N \\to \\infty\\) \u65f6,\u8fd9\u4e2a\u6bd4\u503c\u8d8b\u5411\u4e8e\u96f6\u3002\u8fd9\u610f\u5473\u7740,\u5c3d\u7ba1\u7edd\u5bf9\u6da8\u843d\u7684\u5927\u5c0f(\\(\\propto \\sqrt{N}\\))\u5728\u589e\u52a0,\u4f46\u76f8\u5bf9\u4e8e\u5e73\u5747\u503c\u800c\u8a00,\u5b83\u53d8\u5f97\u5fae\u4e0d\u8db3\u9053\u3002\u8fd9\u5c31\u662f\u4e00\u4e2a\u5b8f\u89c2\u4e0a\"\u5c16\u9510\"\u7684\u3001\u53ef\u9884\u6d4b\u7684\u5e73\u8861\u6001(\u5982\u5bb9\u5668\u4e2d\u6c14\u4f53\u7684\u6e29\u5ea6\u6216\u538b\u5f3a)\u5982\u4f55\u4ece\u4e00\u4e2a\u5fae\u89c2\u4e0a\u6df7\u4e71\u3001\u6da8\u843d\u7684\u4e16\u754c\u4e2d\u6d8c\u73b0\u51fa\u6765\u7684\u3002\u57c3\u4f26\u8d39\u65af\u7279\u6a21\u578b\u5b8c\u7f8e\u5730\u5c55\u793a\u4e86\u7269\u7406\u80cc\u666f\u4e0b\u7684\u5927\u6570\u5b9a\u5f8b\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#3","title":"3. \u7edf\u8ba1\u5b66\u7684\u65f6\u95f4\u4e4b\u7bad:\u8c03\u548c\u5fae\u89c2\u53ef\u9006\u6027\u4e0e\u5b8f\u89c2\u4e0d\u53ef\u9006\u6027","text":""},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#31","title":"3.1 \u6838\u5fc3\u6096\u8bba","text":"<p>\u73b0\u5728\u6211\u4eec\u6765\u5904\u7406\u6700\u6838\u5fc3\u7684\u95ee\u9898\u3002\u6a21\u578b\u7684\u5fae\u89c2\u52a8\u529b\u5b66\u662f\u65f6\u95f4\u53ef\u9006\u7684:\u4e00\u53ea\u8df3\u86a4\u4eceA\u8df3\u5230B,\u548c\u4eceB\u8df3\u5230A,\u5728\u7269\u7406\u4e0a\u662f\u540c\u6837\u5408\u7406\u7684\u8fc7\u7a0b\u3002\u90a3\u4e48,\u4e3a\u4ec0\u4e48\u6211\u4eec\u603b\u662f\u89c2\u5bdf\u5230\u5b8f\u89c2\u4e0a\u7684\u4e0d\u53ef\u9006\u884c\u4e3a?\u4f8b\u5982,\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\u4e3a\u6240\u6709\u8df3\u86a4\u90fd\u5728\u72d7A\u4e0a(\\(n=N\\))\u7684\u7cfb\u7edf,\u603b\u662f\u4f1a\u6f14\u5316\u5230\u63a5\u8fd1\u5747\u5206\u7684\u72b6\u6001(\\(n \\approx N/2\\)),\u800c\u6211\u4eec\u51e0\u4e4e\u6c38\u8fdc\u770b\u4e0d\u5230\u53cd\u5411\u7684\u8fc7\u7a0b\u2014\u2014\u4e00\u4e2a\u5904\u4e8e\u5747\u5206\u72b6\u6001\u7684\u7cfb\u7edf\u81ea\u53d1\u5730\u6f14\u5316\u5230\u6240\u6709\u8df3\u86a4\u90fd\u805a\u96c6\u5728\u4e00\u8fb9\u7684\u72b6\u6001\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#32","title":"3.2 \u4e24\u79cd\u8f68\u8ff9\u7684\u6545\u4e8b","text":"<p>\u6559\u6388\u901a\u8fc7\u6bd4\u8f83\u4e24\u6761\u8f68\u8ff9\u7684\u6982\u7387\u6765\u63ed\u793a\u8fd9\u4e2a\u6096\u8bba\u7684\u7b54\u6848\u3002</p> <ul> <li> <p>\u8f68\u8ff91(\u6b63\u5411): \u7cfb\u7edf\u5728\u65f6\u95f4 \\(t\\) \u5904\u4e8e\u4e00\u4e2a\u6781\u4e0d\u53ef\u80fd\u7684\u72b6\u6001 \\(n=N\\),\u5728 \\(t+\\tau\\) \u65f6\u6f14\u5316\u5230\u4e86\u6700\u53ef\u80fd\u7684\u72b6\u6001 \\(n=N/2\\)\u3002</p> </li> <li> <p>\u8f68\u8ff92(\u9006\u5411): \u7cfb\u7edf\u5728\u65f6\u95f4 \\(t\\) \u5904\u4e8e\u6700\u53ef\u80fd\u7684\u72b6\u6001 \\(n=N/2\\),\u5728 \\(t+\\tau\\) \u65f6\u6f14\u5316\u5230\u4e86\u6781\u4e0d\u53ef\u80fd\u7684\u72b6\u6001 \\(n=N\\)\u3002</p> </li> </ul> <p></p> <p>\u6211\u4eec\u6765\u8ba1\u7b97\u8fd9\u4e24\u6761\u5b8c\u6574\u8def\u5f84\u7684\u8054\u5408\u6982\u7387\u4e4b\u6bd4:</p> \\[ \\frac{P(n=\\frac{N}{2} \\text{ at } t+\\tau; n=N \\text{ at } t)}{P(n=N \\text{ at } t+\\tau; n=\\frac{N}{2} \\text{ at } t)} \\] <p>\u5229\u7528\u6761\u4ef6\u6982\u7387\u7684\u5b9a\u4e49 \\(P(A, B) = P(A|B)P(B)\\),\u5176\u4e2d \\(P(B)\\) \u662f\u521d\u59cb\u72b6\u6001\u7684\u6982\u7387,\u7531\u7a33\u6001\u5206\u5e03 \\(\\pi\\) \u7ed9\u51fa,\u4e0a\u5f0f\u53ef\u4ee5\u6539\u5199\u4e3a:</p> \\[ = \\frac{P(\\frac{N}{2}, t+\\tau | N, t) \\cdot \\pi_N}{P(N, t+\\tau | \\frac{N}{2}, t) \\cdot \\pi_{N/2}} \\] <p>\u5728\u8fd9\u91cc,\u6559\u6388\u505a\u4e86\u4e00\u4e2a\u5173\u952e\u7684\u8fd1\u4f3c:\u5bf9\u4e8e\u4e00\u4e2a\u7531\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u7684\u7cfb\u7edf,\u5176\u8f6c\u79fb\u7684\u6761\u4ef6\u6982\u7387\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u662f\u5bf9\u79f0\u7684,\u5373\u4ece\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u7684\u6761\u4ef6\u6982\u7387\u4e0e\u53cd\u5411\u8fc7\u7a0b\u7684\u6761\u4ef6\u6982\u7387\u5927\u81f4\u76f8\u5f53\u3002\u56e0\u6b64,\\(P(N/2, t+\\tau | N, t) \\approx P(N, t+\\tau | N/2, t)\\)\u3002</p> <p>\u8fd9\u6837\u4e00\u6765,\u6574\u4e2a\u6bd4\u503c\u5c31\u7b80\u5316\u4e3a\u4e24\u4e2a\u7aef\u70b9\u72b6\u6001\u7684\u7a33\u6001\u6982\u7387\u4e4b\u6bd4:</p> \\[ \\approx \\frac{\\pi_N}{\\pi_{N/2}} \\] <p>\u4ee3\u5165\u6211\u4eec\u6c42\u51fa\u7684\u4e8c\u9879\u5206\u5e03\u7ed3\u679c:</p> \\[ \\frac{\\pi_N}{\\pi_{N/2}} = \\frac{\\frac{1}{2^N} \\binom{N}{N}}{\\frac{1}{2^N} \\binom{N}{N/2}} = \\frac{\\binom{N}{N}}{\\binom{N}{N/2}} = \\frac{1}{\\binom{N}{N/2}} = \\frac{(N/2)! (N/2)!}{N!} \\] <p>\u5229\u7528\u65af\u7279\u6797\u516c\u5f0f(Stirling's approximation)\\(N! \\approx \\sqrt{2\\pi N} \\left(\\frac{N}{e}\\right)^N\\),\u53ef\u4ee5\u4f30\u7b97\u51fa\u8fd9\u4e2a\u6bd4\u503c\u7684\u5927\u5c0f\u7ea6\u4e3a \\(2^{-N}\\)\u3002\u5373\u4f7f\u5bf9\u4e8e\u4e00\u4e2a\u4e2d\u7b49\u5927\u5c0f\u7684\u7cfb\u7edf,\u6bd4\u5982 \\(N=50\\),\u8fd9\u4e2a\u6bd4\u503c\u4e5f\u662f\u4e00\u4e2a\u5929\u6587\u6570\u5b57(\\(\\approx 10^{-15}\\))\u3002</p> <p>\u8fd9\u610f\u5473\u7740,\u4ece\u4e00\u4e2a\u6709\u5e8f\u72b6\u6001(\\(n=N\\))\u6f14\u5316\u5230\u65e0\u5e8f\u72b6\u6001(\\(n=N/2\\))\u7684\u8def\u5f84,\u8981\u6bd4\u5176\u65f6\u95f4\u53cd\u6f14\u7684\u8def\u5f84,\u53d1\u751f\u7684\u53ef\u80fd\u6027\u9ad8\u51fa\u5929\u6587\u6570\u5b57\u822c\u7684\u500d\u6570\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#33-vs","title":"3.3 \u6096\u8bba\u7684\u6d88\u89e3:\u5fae\u89c2\u6001 vs. \u5b8f\u89c2\u6001","text":"<p>\u8fd9\u91cc\u7684\u5173\u952e\u5728\u4e8e\u533a\u5206\u5fae\u89c2\u6001\u548c\u5b8f\u89c2\u6001\u3002\u5b8f\u89c2\u4e0a\u7684\u4e0d\u53ef\u9006\u6027\u5e76\u975e\u6e90\u4e8e\u5e95\u5c42\u7269\u7406\u5b9a\u5f8b\u7684\u65f6\u95f4\u4e0d\u5bf9\u79f0,\u800c\u662f\u6e90\u4e8e\u7eaf\u7cb9\u7684\u3001\u538b\u5012\u6027\u7684\u7edf\u8ba1\u5b66\u3002</p> <ul> <li> <p>\u5b8f\u89c2\u6001 \\(n=N\\) \u53ea\u5bf9\u5e941\u4e2a\u5fae\u89c2\u6001(\u6240\u6709\u8df3\u86a4\u90fd\u5728\u72d7A\u4e0a)\u3002</p> </li> <li> <p>\u5b8f\u89c2\u6001 \\(n=N/2\\) \u5bf9\u5e94\u7740 \\(\\binom{N}{N/2}\\) \u4e2a\u5fae\u89c2\u6001,\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6570\u5b57\u3002</p> </li> </ul> <p>\u7cfb\u7edf\u5e76\u4e0d\u662f\u88ab\u67d0\u79cd\u795e\u79d8\u7684\u529b\u91cf\"\u62c9\"\u5411\u5e73\u8861\u6001;\u5b83\u53ea\u662f\u5728\u5e73\u7b49\u5730\u63a2\u7d22\u6240\u6709 \\(2^N\\) \u4e2a\u53ef\u80fd\u7684\u5fae\u89c2\u6001\u3002\u7531\u4e8e\u5bf9\u5e94\u4e8e\u5e73\u8861\u5b8f\u89c2\u6001\u7684\u5fae\u89c2\u6001\u6570\u91cf\u662f\u5982\u6b64\u4e4b\u591a,\u7cfb\u7edf\u7edd\u5927\u591a\u6570\u65f6\u95f4\u90fd\u4f1a\u5904\u4e8e\u8fd9\u4e9b\u5fae\u89c2\u6001\u4e4b\u4e00\u3002\u56e0\u6b64,\u4ece\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u5fae\u89c2\u6001\u7684\u5b8f\u89c2\u6001\u51fa\u53d1,\u7cfb\u7edf\u51e0\u4e4e\u5fc5\u7136\u4f1a\u6f14\u5316\u5230\u62e5\u6709\u6d77\u91cf\u5fae\u89c2\u6001\u7684\u5b8f\u89c2\u6001\u3002\u53cd\u5411\u8fc7\u7a0b\u5e76\u975e\u4e0d\u53ef\u80fd,\u53ea\u662f\u5176\u53d1\u751f\u7684\u6982\u7387\u5c0f\u5230\u5728\u5b87\u5b99\u5e74\u9f84\u7684\u65f6\u95f4\u5c3a\u5ea6\u5185\u4e5f\u51e0\u4e4e\u65e0\u6cd5\u89c2\u6d4b\u5230\u3002</p> <p>\u8fd9\u5f15\u51fa\u4e86\u4e00\u4e2a\u5173\u4e8e\u65f6\u95f4\u4e4b\u7bad\u7684\u6df1\u523b\u7ed3\u8bba\u3002\"\u4e00\u4e2a\u7531\u7edf\u8ba1\u51b3\u5b9a\u7684\u65f6\u95f4\u65b9\u5411,\u6e90\u4e8e\u8fd9\u6837\u4e00\u4e2a\u5047\u8bbe:\u4e00\u4e2a\u5904\u4e8e\u6781\u4e0d\u53ef\u80fd\u7684\u6709\u5e8f\u72b6\u6001\u7684\u7cfb\u7edf,\u662f\u7531\u5916\u90e8\u5f71\u54cd\u6240'\u5236\u5907'\u7684\u3002\" \u6211\u4eec\u4e4b\u6240\u4ee5\u80fd\u611f\u77e5\u5230\u65f6\u95f4\u4e4b\u7bad,\u4ec5\u4ec5\u662f\u56e0\u4e3a\u6211\u4eec(\u6216\u5927\u81ea\u7136)\u80fd\u591f\u521b\u9020\u51fa\u4e00\u4e2a\u4f4e\u71b5\u3001\u9ad8\u5ea6\u6709\u5e8f\u7684\u521d\u59cb\u72b6\u6001\u3002\u4ece\u8fd9\u4e2a\u7279\u6b8a\u7684\u8d77\u70b9\u51fa\u53d1,\u538b\u5012\u6027\u7684\u6982\u7387\u51b3\u5b9a\u4e86\u5b83\u5fc5\u7136\u4f1a\u8d70\u5411\u65e0\u5e8f\u3002\u5982\u679c\u6211\u4eec\u89c2\u5bdf\u4e00\u4e2a\u5df2\u7ecf\u5904\u4e8e\u5e73\u8861\u6001\u7684\u7cfb\u7edf,\u6211\u4eec\u4f1a\u770b\u5230\u5b83\u5728\u5e73\u5747\u503c\u9644\u8fd1\u505a\u5fae\u5c0f\u7684\u3001\u5bf9\u79f0\u7684\u6da8\u843d\u3002\u6b64\u65f6,\"\u4e00\u90e8\u5173\u4e8e\u8fd9\u4e9b\u6da8\u843d\u7684\u7535\u5f71,\u6b63\u7740\u653e\u8fd8\u662f\u5012\u7740\u653e,\u5728\u7edf\u8ba1\u4e0a\u662f\u65e0\u6cd5\u533a\u5206\u7684\",\u56e0\u4e3a\u5728\u5e73\u8861\u6001\u9644\u8fd1,\"\u6da8\u843d\u6ca1\u6709\u65f6\u95f4\u65b9\u5411\u611f\"\u3002\u56e0\u6b64,\u65f6\u95f4\u4e4b\u7bad\u5e76\u975e\u52a8\u529b\u5b66\u672c\u8eab\u7684\u5185\u7980\u5c5e\u6027,\u800c\u662f\u6e90\u4e8e\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u7684\u3001\u975e\u5e73\u8861\u7684\u521d\u59cb\u6761\u4ef6\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#4-python","title":"4. \u7528Python\u6a21\u62df\u57c3\u4f26\u8d39\u65af\u7279\u6a21\u578b","text":"<p>\u6211\u4eec\u5c06\u4f7f\u7528Gillespie\u7b97\u6cd5,\u8fd9\u662f\u6a21\u62df\u6b64\u7c7b\u8fde\u7eed\u65f6\u95f4\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u6807\u51c6\u65b9\u6cd5\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f:</p> <p>1) \u8ba1\u7b97\u5f53\u524d\u72b6\u6001\u7684\u603b\u8df3\u51fa\u901f\u7387; 2) \u4f9d\u6b64\u901f\u7387\u751f\u6210\u4e00\u4e2a\u968f\u673a\u7684\u7b49\u5f85\u65f6\u95f4,\u76f4\u5230\u4e0b\u4e00\u6b21\u8df3\u8dc3\u53d1\u751f; 3) \u6839\u636e\u5404\u4e2a\u8f6c\u79fb\u8def\u5f84\u7684\u76f8\u5bf9\u901f\u7387,\u968f\u673a\u51b3\u5b9a\u53d1\u751f\u54ea\u79cd\u8df3\u8dc3(\u662f\u5931\u53bb\u8fd8\u662f\u5f97\u5230\u4e00\u53ea\u8df3\u86a4)\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#41","title":"4.1 \u6a21\u62df\u968f\u673a\u8f68\u8ff9","text":"<p> \u7b2c\u4e00\u4e2a\u6a21\u62df\u65e8\u5728\u590d\u73b0\u8bb2\u4e49\u4e2d\u7684\u8f68\u8ff9\u56fe,\u5c55\u793a\u72d7A\u8eab\u4e0a\u7684\u8df3\u86a4\u6570 \\(n(t)\\) \u968f\u65f6\u95f4\u7684\u53d8\u5316\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef simulate_ehrenfest_trajectory(N=50, n_initial=50, lambda_rate=1.0, t_max=40):\n    \"\"\"\n    Simulate a single trajectory of the Ehrenfest model using the Gillespie algorithm.\n    \"\"\"\n    t = 0.0\n    n = n_initial\n\n    times = [t]\n    n_values = [n]\n\n    while t &lt; t_max:\n        rate_gain = lambda_rate * (N - n)\n        rate_lose = lambda_rate * n\n        total_rate = rate_gain + rate_lose\n\n        if total_rate == 0:\n            break\n\n        dt = np.random.exponential(1.0 / total_rate)\n        t += dt\n\n        if t &gt; t_max:\n            break\n\n        if np.random.rand() &lt; rate_gain / total_rate:\n            n += 1\n        else:\n            n -= 1\n\n        times.append(t)\n        n_values.append(n)\n\n    return times, n_values\n\n# --- Simulation parameters ---\nN = 50\nmean_n = N / 2\nstd_n = 0.5 * np.sqrt(N)\n# Use an appropriate rate to match the trajectory density in the figure\nlambda_rate_sim = 1.0\n\n# --- Create figure consistent with PPT ---\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6))\nfig.suptitle('Stochastic Trajectories', fontsize=20, color='darkgreen')\n\n# --- Left subplot: Ladder-like trajectory approaching equilibrium ---\nnum_trajectories = 4\n# Start from a position far from equilibrium (n=5)\nn_initial_short = 5 \nt_max_short = 50\n\nfor i in range(num_trajectories):\n    times, n_values = simulate_ehrenfest_trajectory(\n        N=N, n_initial=n_initial_short, \n        lambda_rate=lambda_rate_sim, \n        t_max=t_max_short\n    )\n    # Use step plot to draw ladder-like trajectory\n    ax1.step(times, n_values, where='post')\n\n# Plot mean and standard deviation lines\nax1.axhline(mean_n, color='orangered', linestyle='--', lw=2.5, label=r'$\\langle n \\rangle$')\nax1.axhline(mean_n + std_n, color='green', linestyle='-.', lw=2.5, label=r'$\\langle n \\rangle \\pm \\sigma$')\nax1.axhline(mean_n - std_n, color='green', linestyle='-.', lw=2.5)\n\nax1.set_xlabel('time')\nax1.set_ylabel('Fleas on Alice')\nax1.set_xlim(0, t_max_short)\nax1.set_ylim(0, 38)\n# Place legend in the lower right corner\nax1.legend(loc='lower right')\nax1.grid(True)\n\n\n# --- Right subplot: Long-term equilibrium fluctuations ---\nn_initial_long = int(mean_n)\nt_max_long = 5000\n\ntimes_long, n_values_long = simulate_ehrenfest_trajectory(\n    N=N, n_initial=n_initial_long, \n    lambda_rate=lambda_rate_sim, \n    t_max=t_max_long\n)\n# For very dense plots, plot and step look similar, but plot has better performance\nax2.plot(times_long, n_values_long, lw=0.8)\n\n# Plot mean and standard deviation lines\nax2.axhline(mean_n, color='orangered', linestyle='--', lw=2.5)\nax2.axhline(mean_n + std_n, color='green', linestyle='-.', lw=2.5)\nax2.axhline(mean_n - std_n, color='green', linestyle='-.', lw=2.5)\n\nax2.set_xlabel('time')\nax2.set_xlim(0, t_max_long)\nax2.set_ylim(0, 38)\nax2.grid(True)\n\n\n# --- Final adjustments and display ---\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code></pre> </p> <p>\u7cfb\u7edf\u4ece\u521d\u59cb\u7684\u9ad8\u5ea6\u6709\u5e8f\u72b6\u6001(\\(n=50\\))\u8fc5\u901f\u5730\u5411\u5747\u503c(\\(n=25\\))\u5f1b\u8c6b,\u5e76\u968f\u540e\u5728\u5747\u503c\u9644\u8fd1\u8fdb\u884c\u968f\u673a\u6da8\u843d,\u6da8\u843d\u7684\u8303\u56f4\u5927\u81f4\u7531\u6807\u51c6\u5dee\u51b3\u5b9a\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#42","title":"4.2 \u9a8c\u8bc1\u5e73\u8861\u6001\u5206\u5e03","text":"<p>\u5355\u6761\u8f68\u8ff9\u5c55\u793a\u4e86\u52a8\u529b\u5b66\u8fc7\u7a0b,\u4f46\u8981\u9a8c\u8bc1\u6211\u4eec\u7684\u7edf\u8ba1\u7406\u8bba,\u6211\u4eec\u9700\u8981\u8fdb\u884c\u957f\u65f6\u95f4\u7684\u6a21\u62df,\u7edf\u8ba1\u7cfb\u7edf\u5728\u6bcf\u4e2a\u72b6\u6001 \\(n\\) \u4e0a\u82b1\u8d39\u7684\u65f6\u95f4\u6bd4\u4f8b\u3002\u8fd9\u4e2a\u6bd4\u4f8b\u5e94\u8be5\u6536\u655b\u5230\u6211\u4eec\u7406\u8bba\u63a8\u5bfc\u51fa\u7684\u4e8c\u9879\u5206\u5e03 \\(\\pi_n\\)\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.special import comb\nfrom collections import Counter\n\n# Function to simulate a trajectory over time (for the left plot)\ndef simulate_ehrenfest_trajectory(N=50, n_initial=5, lambda_rate=1.0, t_max=50):\n    \"\"\"\n    Simulates a single trajectory of the Ehrenfest model vs. time.\n    \"\"\"\n    t = 0.0\n    n = n_initial\n    times, n_values = [t], [n]\n\n    while t &lt; t_max:\n        rate_gain = lambda_rate * (N - n)\n        rate_lose = lambda_rate * n\n        total_rate = rate_gain + rate_lose\n        if total_rate == 0: break\n\n        dt = np.random.exponential(1.0 / total_rate)\n        t += dt\n        if t &gt; t_max: break\n\n        if np.random.rand() &lt; rate_gain / total_rate:\n            n += 1\n        else:\n            n -= 1\n\n        times.append(t)\n        n_values.append(n)\n\n    return times, n_values\n\n# Your function to simulate for the probability distribution (for the right plot)\n# This function is efficient and correct, so we keep it as is.\ndef simulate_for_distribution(N=50, lambda_rate=1.0, num_steps=100000):\n    \"\"\"\n    Runs a long simulation (fixed number of jumps) to find the equilibrium distribution.\n    \"\"\"\n    n = N // 2\n    n_counts = np.zeros(N + 1, dtype=int)\n\n    for _ in range(num_steps):\n        rate_gain = lambda_rate * (N - n)\n        rate_lose = lambda_rate * n\n        total_rate = rate_gain + rate_lose\n        if total_rate == 0: break\n\n        if np.random.rand() &lt; rate_gain / total_rate:\n            n += 1\n        else:\n            n -= 1\n\n        n_counts[n] += 1\n\n    return n_counts / num_steps\n\n# --- Simulation Parameters ---\nN = 50\nmean_n = N / 2\nstd_n = 0.5 * np.sqrt(N)\n\n# --- Create the figure with two subplots ---\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6))\nfig.suptitle('Equilibrium Distribution', fontsize=20, color='darkgreen')\n\n# --- Left Subplot: Stochastic Trajectory ---\ntimes, n_values = simulate_ehrenfest_trajectory(N=N, n_initial=5, t_max=50)\nax1.step(times, n_values, where='post')\n\nax1.axhline(mean_n, color='orangered', linestyle='--', lw=2)\nax1.axhline(mean_n + std_n, color='green', linestyle='-.', lw=2)\nax1.axhline(mean_n - std_n, color='green', linestyle='-.', lw=2)\n\nax1.set_xlabel('time')\nax1.set_ylabel('Fleas on Alice')\nax1.set_xlim(0, 50)\nax1.set_ylim(0, 35)\nax1.grid(True)\n\n\n# --- Right Subplot: Probability Distribution ---\n# 1. Run your simulation for the distribution data\nsimulated_dist = simulate_for_distribution(N=N, num_steps=5000000)\n\n# 2. Calculate the analytical solution\nn_range = np.arange(N + 1)\nanalytical_dist = comb(N, n_range) / (2**N)\n\n# 3. Plot the results, styled to match the PPT\nax2.bar(n_range, simulated_dist, width=1.0, label='simulation', \n        alpha=0.7, color='steelblue', edgecolor='black', linewidth=0.8)\nax2.plot(n_range, analytical_dist, 'ko-', markerfacecolor='black', \n         markeredgecolor='black', markersize=4, lw=1.0, label='analytic solution')\n\nax2.set_xlabel('Fleas on Alice')\nax2.set_ylabel('Probability')\nax2.set_xlim(12, 38)\nax2.set_ylim(0, 0.125)\nax2.legend()\nax2.grid(axis='y', linestyle='--', alpha=0.7)\n\n\n# --- Final adjustments and display ---\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code></pre> </p> <p>\u8f93\u51fa\u7684\u6982\u7387\u5206\u5e03\u5b83\u4e0e\u7406\u8bba\u4e0a\u7684\u4e8c\u9879\u5206\u5e03\u66f2\u7ebf\u543b\u5408,\u9a8c\u8bc1\u4e86\u6211\u4eec\u4e4b\u524d\u7684\u7406\u8bba\u63a8\u5bfc\u662f\u6b63\u786e\u7684\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#5-kl","title":"5. \u91cf\u5316\u8d8b\u5411\u5e73\u8861\u7684\u65c5\u7a0b:\u7edf\u8ba1\u71b5\u4e0eKL\u6563\u5ea6","text":"<p>\u6211\u4eec\u5df2\u7ecf\u5b9a\u6027\u5730\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5982\u4f55\u8d70\u5411\u5e73\u8861,\u73b0\u5728\u6211\u4eec\u5e0c\u671b\u7528\u4e00\u4e2a\u91cf\u6765\u5b9a\u91cf\u5730\u523b\u753b\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u91cf\u5c31\u662f\u71b5\u3002</p> <p></p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#51","title":"5.1 \u5b9a\u4e49\u968f\u65f6\u95f4\u53d8\u5316\u7684\u71b5","text":"<p>\u5728\u7edf\u8ba1\u529b\u5b66\u4e2d,\u71b5\u7684\u6700\u57fa\u672c\u5b9a\u4e49\u662f\u5409\u5e03\u65af/\u9999\u519c\u71b5,\u5b83\u8861\u91cf\u4e86\u6982\u7387\u5206\u5e03\u5728\u6240\u6709\u53ef\u80fd\u5fae\u89c2\u6001\u4e0a\u7684\u4e0d\u786e\u5b9a\u6027\u6216\"\u94fa\u5c55\"\u7a0b\u5ea6:</p> \\[ S(t) := -\\sum_{\\{\\sigma_i\\}} p(\\{\\sigma_i\\}, t) \\ln p(\\{\\sigma_i\\}, t) \\] <p>\u5176\u4e2d,\u6c42\u548c\u904d\u5386\u6240\u6709 \\(2^N\\) \u4e2a\u5fae\u89c2\u6001 \\(\\{\\sigma_i\\}\\),\\(p(\\{\\sigma_i\\}, t)\\) \u662f\u5728\u65f6\u523b \\(t\\) \u7cfb\u7edf\u5904\u4e8e\u7279\u5b9a\u5fae\u89c2\u6001\u7684\u6982\u7387\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#52","title":"5.2 \u4ece\u5fae\u89c2\u71b5\u5230\u5b8f\u89c2\u71b5","text":"<p>\u76f4\u63a5\u5904\u7406\u5fae\u89c2\u6001\u7684\u6982\u7387\u901a\u5e38\u5f88\u56f0\u96be\u3002\u6559\u6388\u5c55\u793a\u4e86\u5982\u4f55\u4ece\u5fae\u89c2\u5b9a\u4e49\u8fc7\u6e21\u5230\u7528\u5b8f\u89c2\u6001\u6982\u7387 \\(p_n(t)\\) \u6765\u8868\u8fbe\u7684\u71b5\u3002\u6838\u5fc3\u5047\u8bbe\u662f:\u5728\u4efb\u610f\u65f6\u523b \\(t\\),\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5b8f\u89c2\u6001 \\(n\\) \u7684\u6240\u6709 \\(\\binom{N}{n}\\) \u4e2a\u5fae\u89c2\u6001\u90fd\u662f\u7b49\u53ef\u80fd\u7684\u3002\u56e0\u6b64,\u5b8f\u89c2\u6001\u6982\u7387\u548c\u5fae\u89c2\u6001\u6982\u7387\u7684\u5173\u7cfb\u4e3a:</p> \\[ p_n(t) = \\binom{N}{n} p(\\{\\sigma_i\\}, t) \\] <p>\u5c06\u6b64\u5173\u7cfb\u4ee3\u5165\u71b5\u7684\u5b9a\u4e49\u5e76\u5316\u7b80,\u5f97\u5230\u5b8f\u89c2\u71b5\u7684\u8868\u8fbe\u5f0f:</p> \\[ S(t) = -\\sum_{n=0}^{N} p_n(t) \\ln p_n(t) + \\sum_{n=0}^{N} p_n(t) \\ln \\binom{N}{n} \\] <p>\u8fd9\u4e2a\u516c\u5f0f\u63ed\u793a\u4e86\u603b\u71b5\u7531\u4e24\u90e8\u5206\u6784\u6210:</p> <ol> <li> <p>\u7b2c\u4e00\u9879 \\(-\\sum p_n \\ln p_n\\): \u8fd9\u662f\u5173\u4e8e\u7cfb\u7edf\u5904\u4e8e\u54ea\u4e2a\u5b8f\u89c2\u6001\u7684\u4e0d\u786e\u5b9a\u6027\u7684\u71b5\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u9879 \\(\\sum p_n \\ln \\binom{N}{n}\\): \u8fd9\u662f\u5728\u5df2\u77e5\u5b8f\u89c2\u6001\u5206\u5e03 \\(p_n(t)\\) \u7684\u60c5\u51b5\u4e0b,\u5bf9\u5fae\u89c2\u6001\u4e0d\u786e\u5b9a\u6027\u7684\u5e73\u5747\u3002\u6bcf\u4e00\u9879 \\(\\ln \\binom{N}{n}\\) \u662f\u5b8f\u89c2\u6001 \\(n\\) \u7684\u73bb\u5c14\u5179\u66fc\u71b5(\u6b63\u6bd4\u4e8e\u5176\u5fae\u89c2\u6001\u6570\u91cf\u7684\u5bf9\u6570),\u800c\u6574\u4e2a\u6c42\u548c\u662f\u8fd9\u4e2a\u73bb\u5c14\u5179\u66fc\u71b5\u5728\u5f53\u524d\u5b8f\u89c2\u6001\u5206\u5e03\u4e0b\u7684\u671f\u671b\u503c\u3002</p> </li> </ol>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#53-kl","title":"5.3 KL\u6563\u5ea6:\u8861\u91cf\u4e0e\u5e73\u8861\u7684\"\u8ddd\u79bb\"","text":"<p>\u4e3a\u4e86\u63cf\u8ff0\u7cfb\u7edf\u5f53\u524d\u72b6\u6001 \\(p_n(t)\\) \u4e0e\u6700\u7ec8\u5e73\u8861\u6001 \\(\\pi_n\\) \u4e4b\u95f4\u7684\u5dee\u5f02,\u6559\u6388\u5f15\u5165\u4e86\u4e00\u4e2a\u6765\u81ea\u4fe1\u606f\u8bba\u7684\u5f3a\u5927\u5de5\u5177\u2014\u2014\u5e93\u5c14\u8d1d\u514b-\u83b1\u5e03\u52d2\u6563\u5ea6(Kullback-Leibler Divergence, KL\u6563\u5ea6):</p> \\[ H(t) = \\sum_n p_n(t) \\ln \\left(\\frac{p_n(t)}{\\pi_n}\\right) \\] <p>KL\u6563\u5ea6 \\(H(t)\\) \u662f\u4e00\u4e2a\u975e\u5bf9\u79f0\u7684\u5ea6\u91cf,\u7528\u4e8e\u8861\u91cf\u6982\u7387\u5206\u5e03 \\(p_n(t)\\) \u76f8\u5bf9\u4e8e\u53c2\u8003\u5206\u5e03 \\(\\pi_n\\) \u7684\"\u504f\u79bb\u7a0b\u5ea6\"\u3002\u5b83\u603b\u662f\u975e\u8d1f\u7684(\\(H(t) \\geq 0\\)),\u5e76\u4e14\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u5206\u5e03\u5b8c\u5168\u76f8\u540c\u65f6(\u5373\u5bf9\u6240\u6709 \\(n\\) \u90fd\u6709 \\(p_n(t) = \\pi_n\\)),\\(H(t)\\) \u624d\u7b49\u4e8e\u96f6\u3002\u5728\u6211\u4eec\u7684\u7269\u7406\u60c5\u5883\u4e2d,\\(H(t)\\) \u5b9a\u91cf\u5730\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5f53\u524d\u7684\u6982\u7387\u5206\u5e03\u8ddd\u79bb\u5176\u6700\u7ec8\u5e73\u8861\u5206\u5e03\u7684\"\u4fe1\u606f\u8ddd\u79bb\"\u3002</p> <p>\u6700\u6df1\u523b\u7684\u8054\u7cfb\u5728\u4e8e,KL\u6563\u5ea6\u4e0e\u6211\u4eec\u5b9a\u4e49\u7684\u5b8f\u89c2\u71b5\u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u7b80\u5355\u7684\u5173\u7cfb:</p> \\[ H(t) = S_\\infty - S(t) \\] <p>\u5176\u4e2d \\(S_\\infty\\) \u662f\u7cfb\u7edf\u5728\u8fbe\u5230\u5e73\u8861\u65f6\u7684\u6700\u5927\u71b5\u3002\u8fd9\u4e2a\u5173\u7cfb\u8868\u660e,\\(H(t)\\) \u968f\u65f6\u95f4\u5355\u8c03\u9012\u51cf\u5e76\u6700\u7ec8\u8d8b\u4e8e\u96f6\u7684\u8fc7\u7a0b,\u5b8c\u5168\u7b49\u4ef7\u4e8e\u7cfb\u7edf\u7684\u71b5 \\(S(t)\\) \u968f\u65f6\u95f4\u5355\u8c03\u589e\u52a0\u5e76\u6700\u7ec8\u8fbe\u5230\u5176\u6700\u5927\u503c \\(S_\\infty\\) \u7684\u8fc7\u7a0b\u3002\u8fd9\u4e3a\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b(\u71b5\u589e\u539f\u7406)\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f62\u5f0f\u5316\u7684\u3001\u5b9a\u91cf\u7684\u63cf\u8ff0,\u88ab\u79f0\u4e3aH\u5b9a\u7406\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#54","title":"5.4 \u6a21\u62df\u71b5\u7684\u6f14\u5316","text":"<p>\u4e3a\u4e86\u53ef\u89c6\u5316\u71b5\u548cKL\u6563\u5ea6\u7684\u6f14\u5316,\u6211\u4eec\u9700\u8981\u6a21\u62df\u4e00\u4e2a\u7cfb\u7efc(ensemble),\u5373\u5927\u91cf\u72ec\u7acb\u7684\u7cfb\u7edf\u526f\u672c\u3002\u901a\u8fc7\u5bf9\u7cfb\u7efc\u5728\u4e0d\u540c\u65f6\u523b\u7684\u72b6\u6001\u8fdb\u884c\u7edf\u8ba1,\u6211\u4eec\u53ef\u4ee5\u8fd1\u4f3c\u5f97\u5230\u968f\u65f6\u95f4\u53d8\u5316\u7684\u6982\u7387\u5206\u5e03 \\(p_n(t)\\)\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.special import comb\n\ndef simulate_ensemble(N=30, n_initial=30, num_trajectories=5000, t_points=np.linspace(0, 15, 100)):\n    \"\"\"\n    Simulates an ensemble of Ehrenfest trajectories to calculate p_n(t).\n\n    Args:\n        N (int): Total number of fleas.\n        n_initial (int): Initial state for all trajectories.\n        num_trajectories (int): Number of trajectories in the ensemble.\n        t_points (numpy.ndarray): Time points at which to calculate p_n(t).\n\n    Returns:\n        numpy.ndarray: A 2D array p_n_t where p_n_t[i, j] is p_j(t_i).\n    \"\"\"\n    # Using a simpler simulation method for ensemble (tau-leaping approximation) for speed\n    # This is sufficient for demonstrating the concept.\n    # A full Gillespie ensemble would be more accurate but much slower.\n\n    p_n_t = np.zeros((len(t_points), N + 1))\n    p_n_t[0, n_initial] = 1.0  # At t=0, all systems are in n_initial\n\n    dt = t_points[1] - t_points[0] if len(t_points) &gt; 1 else 0\n    lambda_rate = 0.1  # This rate affects the time scale\n\n    for i in range(1, len(t_points)):\n        p_prev = p_n_t[i-1, :]\n        p_curr = np.copy(p_prev)\n\n        # Evolution of probabilities based on the Master Equation\n        for n in range(N + 1):\n            # Flow out of state n\n            p_curr[n] -= p_prev[n] * lambda_rate * (n + (N - n)) * dt\n            # Flow into state n\n            if n &gt; 0:\n                p_curr[n] += p_prev[n-1] * lambda_rate * (N - (n - 1)) * dt\n            if n &lt; N:\n                p_curr[n] += p_prev[n+1] * lambda_rate * (n + 1) * dt\n\n        p_n_t[i, :] = p_curr\n\n    return p_n_t\n\n# --- Calculation and Plotting ---\nN = 30\nt_eval = np.linspace(0, 15, 150)\np_n_t = simulate_ensemble(N=N, n_initial=N, t_points=t_eval)\n\n# Calculate S(t) and H(t)\npi_n = comb(N, np.arange(N + 1)) / (2**N)\nlog_comb_N_n = np.log(comb(N, np.arange(N + 1)))\n\nS_t = []\nH_t = []\n\nfor p_n in p_n_t:\n    # Avoid log(0) issues\n    p_n_safe = p_n[p_n &gt; 0]\n    pi_n_safe = pi_n[p_n &gt; 0]\n\n    # S(t) calculation\n    term1 = -np.sum(p_n_safe * np.log(p_n_safe))\n    term2 = np.sum(p_n * log_comb_N_n)\n    S_t.append(term1 + term2)\n\n    # H(t) calculation\n    H = np.sum(p_n_safe * np.log(p_n_safe / pi_n_safe))\n    H_t.append(H)\n\n# Plotting\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6))\n\nax1.plot(t_eval, S_t)\nax1.set_title('Statistical Entropy S(t)')\nax1.set_xlabel('Time')\nax1.set_ylabel('Entropy S(t)')\nax1.grid(True)\n\nax2.plot(t_eval, H_t)\nax2.set_title('Kullback-Leibler Divergence H(t)')\nax2.set_xlabel('Time')\nax2.set_ylabel('KL Divergence H(t)')\nax2.grid(True)\n\nplt.tight_layout()\nplt.show()\n</code></pre> <p></p> <p>\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801,\u6211\u4eec\u5c06\u5f97\u5230\u4e24\u5f20\u56fe:\u4e00\u5f20\u663e\u793a\u71b5 \\(S(t)\\) \u4ece\u4e00\u4e2a\u8f83\u4f4e\u7684\u521d\u59cb\u503c(\u5bf9\u5e94\u4e8e\u9ad8\u5ea6\u6709\u5e8f\u7684\u521d\u59cb\u72b6\u6001)\u5355\u8c03\u589e\u52a0,\u6700\u7ec8\u9971\u548c\u5230\u4e00\u4e2a\u6700\u5927\u503c;\u53e6\u4e00\u5f20\u663e\u793aKL\u6563\u5ea6 \\(H(t)\\) \u4ece\u4e00\u4e2a\u6b63\u503c\u5f00\u59cb,\u5355\u8c03\u9012\u51cf,\u6700\u7ec8\u8d8b\u8fd1\u4e8e\u96f6\u3002\u8fd9\u4e24\u5f20\u56fe\u751f\u52a8\u5730\u53ef\u89c6\u5316\u4e86\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u5728\u57c3\u4f26\u8d39\u65af\u7279\u6a21\u578b\u4e2d\u7684\u8fd0\u4f5c\u3002</p>"},{"location":"zh/notes/10.%20%E5%9F%83%E4%BC%A6%E8%B4%B9%E6%96%AF%E7%89%B9%E6%A8%A1%E5%9E%8B%E3%80%81%E7%86%B5%E4%B8%8EKL%E6%95%A3%E5%BA%A6/#_2","title":"\u603b\u7ed3:\u7edf\u8ba1\u529b\u5b66\u7684\u57fa\u672c\u89c1\u89e3","text":"<p>\u4e00\u4e9b\u57fa\u672c\u89c1\u89e3 </p> <p>(i) \u4e00\u4e2a\u5b8f\u89c2\u4e0a\u660e\u663e\u504f\u79bb\u5e73\u8861\u7684\u521d\u59cb\u72b6\u6001,\u6709\u538b\u5012\u6027\u7684\u53ef\u80fd\u6027\u4f1a\u5411\u7740\u66f4\u65e0\u5e8f\u7684\u72b6\u6001\u6f14\u5316,\u4e5f\u5c31\u662f\u8d8b\u5411\u5e73\u8861\u3002 </p> <p>(ii) \u5728\u5e73\u8861\u6001\u4e2d,\u6da8\u843d\u6ca1\u6709\u65f6\u95f4\u65b9\u5411\u611f\u3002 </p> <p>(iii) \u4ece\u5e73\u8861\u6001\u51fa\u53d1,\u53d1\u751f\u5de8\u5927\u6da8\u843d\u4ece\u800c\u6f14\u5316\u5230\u6781\u4e0d\u53ef\u80fd\u7684\u72b6\u6001,\u662f\u6781\u5176\u7f55\u89c1\u7684\u3002 </p> <p>(iv) \u901a\u8fc7\u5bf9\u57c3\u4f26\u8d39\u65af\u7279\u6a21\u578b\u7684\u8be6\u7ec6\u5206\u6790\u548c\u6a21\u62df,\u6211\u4eec\u5b9e\u9645\u4e0a\u5df2\u7ecf\u63a5\u89e6\u5230\u4e86\u7edf\u8ba1\u529b\u5b66\u7684\u51e0\u4e2a\u6700\u6838\u5fc3\u7684\u601d\u60f3\u3002\u6559\u6388\u5728\u8bb2\u4e49\u7684\u6700\u540e\u603b\u7ed3\u4e86\u56db\u70b9\"\u57fa\u672c\u89c1\u89e3\",\u5b83\u4eec\u662f\u5bf9\u672c\u8bb2\u5185\u5bb9\u7684\u5b8c\u7f8e\u6982\u62ec:</p> <p></p> <p>1. \u4e00\u4e2a\u5b8f\u89c2\u4e0a\u504f\u79bb\u5e73\u8861\u7684\u521d\u59cb\u72b6\u6001,\u5c06\u4ee5\u538b\u5012\u6027\u7684\u53ef\u80fd\u6027\u6f14\u5316\u5411\u66f4\u65e0\u5e8f\u7684\u3001\u63a5\u8fd1\u5e73\u8861\u7684\u72b6\u6001\u3002</p> <p>\u8fd9\u6b63\u662f\u6211\u4eec\u901a\u8fc7\u8ba1\u7b97\u6982\u7387\u6bd4\u503c \\(\\pi_{N/2}/\\pi_N \\sim 2^{-N}\\) \u6240\u63ed\u793a\u7684\u3002\u7cfb\u7edf\u8d70\u5411\u5e73\u8861\u5e76\u975e\u56e0\u4e3a\u6709\u67d0\u79cd\"\u529b\"\u5728\u9a71\u52a8,\u800c\u662f\u56e0\u4e3a\u5e73\u8861\u6001\u5bf9\u5e94\u7684\u5fae\u89c2\u6001\u6570\u91cf\u5b9e\u5728\u592a\u591a\u4e86\u3002</p> <p>2. \u5728\u5e73\u8861\u6001\u4e2d,\u6da8\u843d\u6ca1\u6709\u65f6\u95f4\u65b9\u5411\u611f\u3002</p> <p>\u8fd9\u4e0e\u7ec6\u81f4\u5e73\u8861\u7684\u6982\u5ff5\u7d27\u5bc6\u76f8\u5173\u3002\u5728\u5e73\u8861\u6001\u9644\u8fd1,\u7cfb\u7edf\u5728\u4e24\u4e2a\u6982\u7387\u76f8\u8fd1\u7684\u72b6\u6001\u4e4b\u95f4\u6765\u56de\u8df3\u8dc3,\u5176\u6b63\u5411\u548c\u9006\u5411\u8fc7\u7a0b\u5728\u7edf\u8ba1\u4e0a\u662f\u65e0\u6cd5\u533a\u5206\u7684\u3002</p> <p>3. \u4ece\u5e73\u8861\u6001\u51fa\u53d1\u7684\u5de8\u5927\u6da8\u843d(\u5373\u6f14\u5316\u5230\u6781\u4e0d\u53ef\u80fd\u7684\u72b6\u6001)\u662f\u6781\u5176\u7f55\u89c1\u7684\u3002</p> <p>\u8fd9\u662f\u4e8c\u9879\u5206\u5e03\u6027\u8d28\u7684\u76f4\u63a5\u63a8\u8bba\u3002\u6982\u7387\u5206\u5e03\u5728\u5747\u503c\u5904\u5f62\u6210\u4e00\u4e2a\u5c16\u9510\u7684\u5cf0,\u8fdc\u79bb\u5747\u503c\u7684\u72b6\u6001\u5176\u6982\u7387\u5448\u6307\u6570\u7ea7\u4e0b\u964d,\u56e0\u6b64\u81ea\u53d1\u4ea7\u751f\u5b8f\u89c2\u6709\u5e8f\u72b6\u6001\u7684\u53ef\u80fd\u6027\u5fae\u4e4e\u5176\u5fae\u3002</p> <p>4. \u7edf\u8ba1\u4e0a\u786e\u5b9a\u7684\u65f6\u95f4\u65b9\u5411\u6e90\u4e8e\u8fd9\u6837\u4e00\u4e2a\u5047\u8bbe:\u4e00\u4e2a\u5904\u4e8e\u6781\u4e0d\u53ef\u80fd\u7684\u6709\u5e8f\u72b6\u6001\u7684\u7cfb\u7edf,\u662f\u7ecf\u7531\u5916\u90e8\u5f71\u54cd\u6240\u51c6\u5907\u7684\u3002\u5373\u4f7f\u5bf9\u4e8e\u6211\u4eec\u6240\u8003\u8651\u7684\u8fd9\u4e2a\u76f8\u5f53\u5c0f\u7684\u7cfb\u7edf,\u4f7f\u7528\"\u538b\u5012\u6027\u7684\"\u548c\"\u6781\u5176\"\u8fd9\u4e9b\u8bcd\u4e5f\u662f\u975e\u5e38\u4fdd\u5b88\u7684\u8bf4\u6cd5\u3002</p> <p>\u4e00\u4e2a\u7531\u7edf\u8ba1\u51b3\u5b9a\u7684\u65f6\u95f4\u65b9\u5411,\u6e90\u4e8e\u6211\u4eec\u5047\u8bbe\u7cfb\u7edf\u662f\u88ab\"\u5236\u5907\"\u5728\u4e00\u4e2a\u9ad8\u5ea6\u4e0d\u53ef\u80fd\u7684\u6709\u5e8f\u72b6\u6001\u3002\u8fd9\u662f\u5bf9\"\u65f6\u95f4\u4e4b\u7bad\"\u6765\u6e90\u7684\u6700\u6df1\u523b\u7684\u6d1e\u5bdf\u3002\u6211\u4eec\u4e4b\u6240\u4ee5\u770b\u5230\u4e0d\u53ef\u9006\u6027,\u662f\u56e0\u4e3a\u6211\u4eec\u603b\u662f\u4ece\u4e00\u4e2a\u7279\u6b8a\u7684\u3001\u4f4e\u71b5\u7684\u521d\u59cb\u6761\u4ef6\u5f00\u59cb\u89c2\u5bdf\u3002\u65f6\u95f4\u4e4b\u7bad\u5e76\u975e\u7269\u7406\u5b9a\u5f8b\u7684\u5185\u7980\u5c5e\u6027,\u800c\u662f\u5b87\u5b99(\u6216\u6211\u4eec\u5b9e\u9a8c)\u521d\u59cb\u6761\u4ef6\u7684\u53cd\u6620\u3002</p> <p>\u603b\u800c\u8a00\u4e4b,\u57c3\u4f26\u8d39\u65af\u7279\u6a21\u578b\u5c3d\u7ba1\u6781\u5176\u7b80\u5355,\u5374\u8ba9\u6211\u4eec\u5f97\u4ee5\u6e05\u6670\u5730\u89c2\u5bdf\u548c\u7406\u89e3\u7edf\u8ba1\u529b\u5b66\u7684\u57fa\u77f3\u2014\u2014\u4e0d\u53ef\u9006\u6027\u3001\u71b5\u3001\u5e73\u8861\u4ee5\u53ca\u65f6\u95f4\u4e4b\u7bad\u7684\u7edf\u8ba1\u5b66\u8d77\u6e90\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/","title":"\u5f15\u8a00","text":"<p>\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\uff0cErwin Frey \u6559\u6388\u5df2\u7ecf\u6df1\u5165\u63a2\u8ba8\u4e86\u63cf\u8ff0\u72b6\u6001\u79bb\u6563\u7684\u7cfb\u7edf\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\uff0c\u4f8b\u5982\u7cfb\u7edf\u4e2d\u5206\u5b50\u7684\u6570\u91cf\u6216\u57fa\u56e0\u5f00\u5173\u7684\u72b6\u6001\u3002\u7136\u800c\uff0c\u81ea\u7136\u754c\u7684\u8bb8\u591a\u73b0\u8c61\u672c\u8d28\u4e0a\u662f\u8fde\u7eed\u7684\uff0c\u6bd4\u5982\u4e00\u4e2a\u7c92\u5b50\u5728\u6db2\u4f53\u4e2d\u7684\u4f4d\u7f6e\u3001\u4e00\u4e2a\u5316\u5b66\u53cd\u5e94\u7684\u6d53\u5ea6\u573a\uff0c\u6216\u8005\u4e00\u4e2a\u7ec6\u80de\u5728\u7ec4\u7ec7\u4e2d\u7684\u8fc1\u79fb\u3002\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u4fbf\u662f\u5c06\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7406\u8bba\u6846\u67b6\uff0c\u4ece\u79bb\u6563\u72b6\u6001\u7a7a\u95f4\u63a8\u5e7f\u5230\u8fde\u7eed\u72b6\u6001\u7a7a\u95f4\u3002</p> <p>\u8fd9\u6b21\u63a8\u5e7f\u5e76\u975e\u7b80\u5355\u7684\u6570\u5b66\u5ef6\u4f38\uff0c\u5b83\u63ed\u793a\u4e86\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u7684\u968f\u673a\u52a8\u529b\u5b66\u884c\u4e3a\uff0c\u5e76\u6700\u7ec8\u5f15\u5bfc\u6211\u4eec\u5f97\u5230\u4e24\u79cd\u63cf\u8ff0\u7cfb\u7edf\u6f14\u5316\u7684\u6838\u5fc3\u65b9\u7a0b\u3002\u5bf9\u4e8e\u90a3\u4e9b\u72b6\u6001\u4f1a\u53d1\u751f\u77ac\u65f6\u3001\u6709\u9650\u5e45\u5ea6\u53d8\u5316\u7684\u7cfb\u7edf\uff08\u5982\u5206\u5b50\u9a6c\u8fbe\u7684\u6b65\u8fdb\uff09\uff0c\u6211\u4eec\u5c06\u63a8\u5bfc\u51fa\u4e00\u79cd\u79ef\u5206-\u5fae\u5206\u5f62\u5f0f\u7684\u4e3b\u65b9\u7a0b\u3002\u800c\u5bf9\u4e8e\u90a3\u4e9b\u72b6\u6001\u8fde\u7eed\u3001\u5e73\u6ed1\u53d8\u5316\u7684\u7cfb\u7edf\uff08\u5982\u5e03\u6717\u8fd0\u52a8\uff09\uff0c\u6211\u4eec\u5c06\u63a8\u5bfc\u51fa\u8457\u540d\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff08Fokker-Planck Equation\uff09\uff0c\u4e00\u79cd\u504f\u5fae\u5206\u65b9\u7a0b\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#1","title":"1. \u4e3b\u65b9\u7a0b\u56de\u987e","text":"<p>\u5728\u8fdb\u5165\u8fde\u7eed\u72b6\u6001\u7a7a\u95f4\u7684\u4e16\u754c\u4e4b\u524d\uff0c\u6559\u6388\u9996\u5148\u56de\u987e\u4e86\u63cf\u8ff0\u79bb\u6563\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u6838\u5fc3\u6982\u5ff5\u548c\u65b9\u7a0b\uff0c\u8fd9\u4e9b\u90fd\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u8fdb\u884c\u63a8\u5e7f\u7684\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#11-chapman-kolmogorov-equation","title":"1.1 \u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b (Chapman-Kolmogorov Equation)","text":"<p>\u4e00\u5207\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u7406\u8bba\u57fa\u7840\u90fd\u6e90\u4e8e\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff0c\u5373\u7cfb\u7edf\u7684\u672a\u6765\u72b6\u6001\u53ea\u4f9d\u8d56\u4e8e\u5176\u5f53\u524d\u72b6\u6001\uff0c\u800c\u4e0e\u8fc7\u53bb\u7684\u5386\u53f2\u65e0\u5173\u3002\u8fd9\u4e00\u6027\u8d28\u7684\u6570\u5b66\u4f53\u73b0\u5c31\u662f\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b\uff1a</p> \\[p(n,t|n_0,t_0)=\\sum_{n'} p(n,t|n',t')p(n',t'|n_0,t_0) \\text{for } t_0\\leq t' \\leq t\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7269\u7406\u610f\u4e49\u662f\uff1a\u4ece\u521d\u59cb\u72b6\u6001 \\(n_0\\) \u5728 \\(t_0\\) \u65f6\u523b\u51fa\u53d1\uff0c\u5230 \\(t\\) \u65f6\u523b\u5904\u4e8e\u72b6\u6001 \\(n\\) \u7684\u603b\u6982\u7387\uff0c\u7b49\u4e8e\u6240\u6709\u53ef\u80fd\u7ecf\u8fc7\u7684\u4e2d\u95f4\u72b6\u6001 \\(n'\\) \u7684\u6982\u7387\u4e4b\u548c\u3002\u5b83\u63cf\u8ff0\u4e86\u6982\u7387\u5982\u4f55\u901a\u8fc7\u4e2d\u95f4\u65f6\u523b \\(t'\\) \u8fdb\u884c\u4f20\u64ad\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#12-master-equation","title":"1.2 \u4e3b\u65b9\u7a0b (Master Equation)","text":"<p>\u5f53\u6211\u4eec\u5c06\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b\u5199\u6210\u5fae\u5206\u5f62\u5f0f\u65f6\uff0c\u5c31\u5f97\u5230\u4e86\u63cf\u8ff0\u6982\u7387\u968f\u65f6\u95f4\u8fde\u7eed\u6f14\u5316\u7684\u4e3b\u65b9\u7a0b\u3002\u5176\u901a\u7528\u5f62\u5f0f\u4e3a\uff1a</p> \\[\\frac{d}{dt}p(t)=Qp(t)\\] <p>\u5176\u4e2d \\(p(t)\\) \u662f\u4e00\u4e2a\u5217\u5411\u91cf\uff0c\u5176\u5143\u7d20 \\(p(n,t)\\) \u662f\u7cfb\u7edf\u5728\u65f6\u523b \\(t\\) \u5904\u4e8e\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\uff0c\u800c \\(Q\\) \u662f\u8f6c\u79fb\u901f\u7387\u77e9\u9635\u3002</p> <p>\u66f4\u5177\u4f53\u5730\uff0c\u4e3b\u65b9\u7a0b\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u7684\"\u5f97\u5931\"\u5f62\u5f0f\uff1a</p> \\[\\partial_t p(n,t|\\cdot)=\\sum_m w(n,m)p(m,t|\\cdot)-w(n)p(n,t|\\cdot)\\] <p>\u8fd9\u91cc\u7684 \\(w(n,m)\\) \u662f\u4ece\u72b6\u6001 \\(m\\) \u8f6c\u79fb\u5230\u72b6\u6001 \\(n\\) \u7684\u901f\u7387\u3002\u65b9\u7a0b\u7684\u7269\u7406\u610f\u4e49\u975e\u5e38\u76f4\u89c2\uff1a\u5904\u4e8e\u72b6\u6001 \\(n\\) \u7684\u6982\u7387 \\(p(n,t)\\) \u7684\u53d8\u5316\u7387\uff0c\u7b49\u4e8e\u4ece\u6240\u6709\u5176\u4ed6\u72b6\u6001 \\(m\\) \u6d41\u5165\u5230\u72b6\u6001 \\(n\\) \u7684\u603b\u901f\u7387\uff08\u589e\u76ca\u9879\uff09\uff0c\u51cf\u53bb\u4ece\u72b6\u6001 \\(n\\) \u6d41\u51fa\u5230\u6240\u6709\u5176\u4ed6\u72b6\u6001\u7684\u603b\u901f\u7387\uff08\u635f\u5931\u9879\uff09\u3002\u5176\u4e2d\uff0c\u603b\u6d41\u51fa\u901f\u7387 \\(w(n)=\\sum_m w(m,n)\\)\u3002</p> <p>\u901a\u8fc7\u91cd\u65b0\u7ec4\u5408\u9879\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5f97\u5230\"\u51c0\u6d41\"\u5f62\u5f0f\uff1a</p> \\[\\partial_t p(n,t|\\cdot)=\\sum_m [w(n,m)p(m,t|\\cdot)-w(m,n)p(n,t|\\cdot)]\\] <p>\u8fd9\u4e2a\u5f62\u5f0f\u5f3a\u8c03\u4e86\u6bcf\u4e00\u5bf9\u72b6\u6001 \\((n,m)\\) \u4e4b\u95f4\u7684\u6982\u7387\u51c0\u6d41\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#13","title":"1.3 \u4e0d\u53ef\u7ea6\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u6838\u5fc3\u7ed3\u8bba","text":"<p>\u5bf9\u4e8e\u72b6\u6001\u6709\u9650\u4e14\u4e0d\u53ef\u7ea6\uff08\u5373\u4efb\u4f55\u72b6\u6001\u90fd\u53ef\u4ee5\u901a\u8fc7\u6709\u9650\u6b65\u5230\u8fbe\u4efb\u4f55\u5176\u4ed6\u72b6\u6001\uff09\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\uff0c\u6211\u4eec\u6709\u4ee5\u4e0b\u91cd\u8981\u7ed3\u8bba\uff1a</p> <ol> <li> <p>\u5b58\u5728\u4e00\u4e2a\u552f\u4e00\u7684\u7a33\u6001\u5206\u5e03 \\(p^{ss}\\)\uff0c\u5176\u6240\u6709\u5143\u7d20\u5747\u4e3a\u6b63\u3002</p> </li> <li> <p>\u5982\u679c\u8fc7\u7a0b\u662f\u53ef\u9006\u7684\uff0c\u5b83\u5c06\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861 (detailed balance) \u6761\u4ef6\uff1a\\(w(n,m)p_m^{ss}=w(m,n)p_n^{ss}\\)\u3002\u5728\u7a33\u6001\u4e0b\uff0c\u4efb\u610f\u4e24\u4e2a\u72b6\u6001\u4e4b\u95f4\u7684\u51c0\u6982\u7387\u6d41\u4e3a\u96f6\u3002</p> </li> <li> <p>\u5982\u679c\u8fc7\u7a0b\u662f\u4e0d\u53ef\u9006\u7684\uff0c\u7a33\u6001\u4e0b\u4f1a\u5b58\u5728\u6301\u7eed\u7684\u6982\u7387\u6d41\uff0c\u5f62\u6210\u73af\u8def\u3002</p> </li> <li> <p>\u4e0d\u53ef\u9006\u6027\u53ef\u4ee5\u901a\u8fc7\u71b5\u4ea7\u751f\u6765\u91cf\u5316\uff0c\u5b83\u53cd\u6620\u4e86\u6b63\u5411\u548c\u53cd\u5411\u8f68\u8ff9\u7684\u6982\u7387\u4e0d\u5bf9\u79f0\u6027\u3002</p> </li> </ol> <p>\u8fd9\u4e9b\u6982\u5ff5\uff0c\u7279\u522b\u662f\u7ec6\u81f4\u5e73\u8861\uff0c\u4e0d\u4ec5\u662f\u7406\u89e3\u5e73\u8861\u6001\u7269\u7406\u7684\u5173\u952e\uff0c\u4e5f\u4e3a\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u4ecb\u7ecd\u7684\u4e00\u79cd\u5f3a\u5927\u7684\u8ba1\u7b97\u65b9\u6cd5\u2014\u2014\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u6d1b\u2014\u2014\u5960\u5b9a\u4e86\u7406\u8bba\u57fa\u7840\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#2-mcmc","title":"2. \u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u6d1b (MCMC)","text":"<p>\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u6d1b\uff08Markov Chain Monte Carlo, MCMC\uff09\u65b9\u6cd5\u7531 Nicholas Metropolis \u7b49\u4eba\u4e8e1953\u5e74\u5728\u7814\u7a76\u6838\u7269\u7406\u95ee\u9898\u65f6\u9996\u521b\uff08Metropolis\u7b97\u6cd5\uff09\uff0c\u540e\u7ecf W.K. Hastings \u7b49\u7edf\u8ba1\u5b66\u5bb6\u53d1\u5c55\u4e3a\u901a\u7528\u7b97\u6cd5\u3002</p> <p>\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u6d1b\uff08MCMC\uff09\u65b9\u6cd5\u7684\u63d0\u51fa\u6e90\u4e8e\u7269\u7406\u548c\u7edf\u8ba1\u5b66\u4e2d\u4e00\u4e2a\u68d8\u624b\u7684\u57fa\u7840\u6027\u95ee\u9898\uff1a\u5982\u4f55\u5728\u4e00\u4e2a\u6781\u5176\u5de8\u5927\u751a\u81f3\u65e0\u9650\u7684\u72b6\u6001\u7a7a\u95f4\u4e2d\u8ba1\u7b97\u4e00\u4e2a\u7269\u7406\u91cf\u7684\u5e73\u5747\u503c\u6216\u5bf9\u4e00\u4e2a\u590d\u6742\u7684\u6982\u7387\u5206\u5e03\u8fdb\u884c\u62bd\u6837\u3002\u76f4\u63a5\u5bf9\u6240\u6709\u72b6\u6001\u6c42\u548c\u6216\u79ef\u5206\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684\u3002MCMC\u7684\u63d0\u51fa\u6b63\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u96be\u9898\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\u201c\u7528\u65f6\u95f4\u6362\u7a7a\u95f4\u201d\uff1a\u5b83\u653e\u5f03\u4e86\u904d\u5386\u6574\u4e2a\u7a7a\u95f4\uff0c\u8f6c\u800c\u8bbe\u8ba1\u4e00\u4e2a\u5de7\u5999\u7684\u968f\u673a\u884c\u8d70\u8fc7\u7a0b\uff0c\u5373\u9a6c\u5c14\u53ef\u592b\u94fe\u3002</p> <p>\u8fd9\u6761\u94fe\u88ab\u7cbe\u786e\u6784\u5efa\uff0c\u4f7f\u5176\u6700\u7ec8\u4f1a\u201c\u5fd8\u8bb0\u201d\u521d\u59cb\u72b6\u6001\uff0c\u5e76\u6536\u655b\u5230\u4e00\u4e2a\u552f\u4e00\u7684\u7a33\u6001\u5206\u5e03\uff0c\u800c\u8fd9\u4e2a\u7a33\u6001\u5206\u5e03\u6070\u597d\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7814\u7a76\u7684\u76ee\u6807\u6982\u7387\u5206\u5e03\uff08\u4f8b\u5982\uff0c\u7269\u7406\u5b66\u4e2d\u7684\u73bb\u5c14\u5179\u66fc\u5206\u5e03\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8ba9\u8fd9\u4e2a\u968f\u673a\u8fc7\u7a0b\u8fd0\u884c\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u7136\u540e\u6536\u96c6\u5b83\u6240\u8bbf\u95ee\u7684\u72b6\u6001\u6837\u672c\uff0c\u8fd9\u4e9b\u6837\u672c\u5c31\u81ea\u7136\u5730\u4ee3\u8868\u4e86\u76ee\u6807\u5206\u5e03\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u7528\u8fd9\u4e9b\u6837\u672c\u7684\u7b80\u5355\u5e73\u5747\u6765\u8fd1\u4f3c\u771f\u5b9e\u7684\u7cfb\u7efc\u5e73\u5747\u503c\u3002</p> <p>\u5176\u5177\u4f53\u5e94\u7528\u6781\u5176\u5e7f\u6cdb\uff0c\u65e9\u5df2\u8d85\u8d8a\u5176\u7269\u7406\u5b66\u8d77\u6e90\uff1a 1.  \u7edf\u8ba1\u7269\u7406\u5b66\uff1a\u8fd9\u662f\u5176\u7ecf\u5178\u5e94\u7528\uff0c\u7528\u4e8e\u6a21\u62df\u4f0a\u8f9b\u6a21\u578b\u3001\u6676\u683c\u89c4\u8303\u7406\u8bba\u7b49\uff0c\u8ba1\u7b97\u78c1\u5316\u7387\u3001\u6bd4\u70ed\u7b49\u5b8f\u89c2\u70ed\u529b\u5b66\u6027\u8d28\u3002 2.  \u8d1d\u53f6\u65af\u7edf\u8ba1\u4e0e\u673a\u5668\u5b66\u4e60\uff1aMCMC\u662f\u73b0\u4ee3\u8d1d\u53f6\u65af\u63a8\u65ad\u7684\u57fa\u77f3\u3002\u5f53\u6a21\u578b\u7684\u540e\u9a8c\u6982\u7387\u5206\u5e03\u6781\u5176\u590d\u6742\u3001\u65e0\u6cd5\u89e3\u6790\u6c42\u89e3\u65f6\uff0cMCMC\u65b9\u6cd5\uff08\u5982Gibbs\u62bd\u6837\u3001Metropolis-Hastings\u7b97\u6cd5\uff09\u88ab\u7528\u6765\u4ece\u4e2d\u62bd\u53d6\u6837\u672c\uff0c\u4ece\u800c\u4f30\u8ba1\u6a21\u578b\u53c2\u6570\u3001\u8fdb\u884c\u6a21\u578b\u9009\u62e9\u548c\u9884\u6d4b\u3002 3.  \u8ba1\u7b97\u751f\u7269\u5b66\uff1a\u7528\u4e8e\u63a8\u65ad\u7269\u79cd\u95f4\u7684\u8fdb\u5316\u5173\u7cfb\uff08\u7cfb\u7edf\u53d1\u80b2\u6811\uff09\u3001\u8fdb\u884c\u57fa\u56e0\u5e8f\u5217\u6bd4\u5bf9\u548c\u6a21\u62df\u86cb\u767d\u8d28\u6298\u53e0\u3002 4.  \u91d1\u878d\u5de5\u7a0b\uff1a\u7528\u4e8e\u91d1\u878d\u884d\u751f\u54c1\u5b9a\u4ef7\u548c\u98ce\u9669\u4ef7\u503c\uff08VaR\uff09\u7684\u8ba1\u7b97\uff0c\u5bf9\u590d\u6742\u7684\u968f\u673a\u8fc7\u7a0b\u8fdb\u884c\u5efa\u6a21\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#21","title":"2.1 \u6838\u5fc3\u601d\u60f3\uff1a\u7528\u9a6c\u5c14\u53ef\u592b\u94fe\u8fdb\u884c\u62bd\u6837","text":"<p>\u5728\u7edf\u8ba1\u7269\u7406\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u8ba1\u7b97\u67d0\u4e2a\u7269\u7406\u91cf \\(A\\) \u7684\u7cfb\u7efc\u5e73\u5747\u503c\uff0c\u4f8b\u5982\u78c1\u5316\u5f3a\u5ea6\u6216\u80fd\u91cf\u3002\u5176\u5b9a\u4e49\u4e3a\uff1a</p> \\[\\langle A(X) \\rangle = \\sum_i A(X_i)p_i\\] <p>\u5176\u4e2d \\(X_i\\) \u662f\u7cfb\u7edf\u7684\u4e00\u4e2a\u5fae\u89c2\u72b6\u6001\uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u5177\u4f53\u7684\u81ea\u65cb\u6784\u578b\uff09\uff0c\\(p_i\\) \u662f\u8be5\u72b6\u6001\u51fa\u73b0\u7684\u6982\u7387\u3002\u5bf9\u4e8e\u5904\u4e8e\u70ed\u5e73\u8861\u7684\u7cfb\u7edf\uff0c\u8fd9\u4e2a\u6982\u7387\u7531\u6b63\u5219\u7cfb\u7efc (canonical ensemble) \u7684\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u7ed9\u51fa\uff1a</p> \\[p_i = \\frac{1}{Z} e^{-E_i/k_B T}\\] <p>\u8fd9\u91cc \\(E_i\\) \u662f\u72b6\u6001 \\(i\\) \u7684\u80fd\u91cf\uff0c\\(T\\) \u662f\u6e29\u5ea6\uff0c\\(k_B\\) \u662f\u73bb\u5c14\u5179\u66fc\u5e38\u6570\uff0c\\(Z\\) \u662f\u914d\u5206\u51fd\u6570 1\u3002</p> <p>\u95ee\u9898\u5728\u4e8e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5305\u542b\u5927\u91cf\u7c92\u5b50\uff08\u6bd4\u5982\u4e00\u4e2a \\(50\\times 50\\) \u7684\u4f0a\u8f9b\u6a21\u578b\uff0c\u6709 \\(2^{2500}\\) \u4e2a\u72b6\u6001\uff09\u7684\u7cfb\u7edf\uff0c\u76f4\u63a5\u8ba1\u7b97\u8fd9\u4e2a\u6c42\u548c\u662f\u7edd\u5bf9\u4e0d\u53ef\u80fd\u7684\u3002</p> <p>\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u6d1b (MCMC) \u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edd\u5999\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u6211\u4eec\u4e0d\u518d\u5c1d\u8bd5\u904d\u5386\u6240\u6709\u72b6\u6001\uff0c\u800c\u662f\u8bbe\u8ba1\u4e00\u4e2a\u8f85\u52a9\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\uff0c\u4f7f\u5176\u7a33\u6001\u5206\u5e03\u6070\u597d\u662f\u6211\u4eec\u60f3\u8981\u62bd\u6837\u7684\u76ee\u6807\u5206\u5e03 \\(p_i\\)\u3002\u7136\u540e\uff0c\u6211\u4eec\u8ba9\u8fd9\u4e2a\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u6f14\u5316\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u5b83\u6240\u8bbf\u95ee\u7684\u72b6\u6001\u5e8f\u5217 \\(X_1,X_2,\\ldots,X_N\\) \u5c31\u4f1a\u50cf\u662f\u4ece \\(p_i\\) \u4e2d\u62bd\u53d6\u7684\u4e00\u7cfb\u5217\u6837\u672c\u3002\u4e8e\u662f\uff0c\u590d\u6742\u7684\u7cfb\u7efc\u5e73\u5747\u8ba1\u7b97\u5c31\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7b97\u672f\u5e73\u5747\uff1a</p> \\[\\langle A(X) \\rangle \\approx \\frac{1}{N}\\sum_{k=1}^N A(X_k)\\]"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#22-metropolis","title":"2.2 Metropolis \u7b97\u6cd5","text":"<p>\u5982\u4f55\u5de7\u5999\u5730\u8bbe\u8ba1\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\uff0c\u4f7f\u5176\u7a33\u6001\u6070\u597d\u662f\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u5462\uff1fMetropolis \u7b97\u6cd5\u7ed9\u51fa\u4e86\u4e00\u4e2a\u975e\u5e38\u4f18\u96c5\u548c\u901a\u7528\u7684\u7b54\u6848\u3002</p> <ol> <li> <p>\u76ee\u6807\uff1a\u6784\u5efa\u4e00\u4e2a\u8f6c\u79fb\u901f\u7387\u4e3a \\(w_{i\\to j}\\) \u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\uff0c\u4f7f\u5f97\u5176\u7a33\u6001\u5206\u5e03 \\(p_i^{ss}\\) \u6b63\u6bd4\u4e8e \\(p_i^{\\text{therm}}=e^{-E_i/k_B T}\\)\u3002</p> </li> <li> <p>\u5145\u5206\u6761\u4ef6\uff1a\u6839\u636e\u6211\u4eec\u521a\u624d\u7684\u56de\u987e\uff0c\u7ec6\u81f4\u5e73\u8861\u662f\u4e00\u4e2a\u8db3\u4ee5\u4fdd\u8bc1\u7cfb\u7edf\u8fbe\u5230\u6240\u9700\u7a33\u6001\u7684\u6761\u4ef6\u3002\u6211\u4eec\u53ea\u9700\u8981\u8ba9\u8f6c\u79fb\u901f\u7387\u6ee1\u8db3\uff1a</p> </li> </ol> \\[w_{i\\to j}p_i^{\\text{therm}}=w_{j\\to i}p_j^{\\text{therm}}\\] <ol> <li>\u63a8\u5bfc\uff1a\u5c06 \\(p_i^{\\text{therm}}\\) \u7684\u8868\u8fbe\u5f0f\u4ee3\u5165\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5bf9\u8f6c\u79fb\u901f\u7387\u6bd4\u503c\u7684\u8981\u6c42\uff1a</li> </ol> \\[\\frac{w_{j\\to i}}{w_{i\\to j}}=\\frac{p_i^{\\text{therm}}}{p_j^{\\text{therm}}}=\\frac{e^{-E_i/k_B T}}{e^{-E_j/k_B T}}=e^{-(E_j-E_i)/k_B T}\\] <ol> <li> <p>\u8fd9\u4e2a\u5173\u7cfb\u5f0f\u662fMetropolis\u7b97\u6cd5\u7684\u6838\u5fc3\u3002\u5b83\u5c06\u5fae\u89c2\u52a8\u529b\u5b66\uff08\u8f6c\u79fb\u901f\u7387\uff09\u4e0e\u7cfb\u7edf\u7684\u80fd\u91cf\u666f\u89c2\uff08\u80fd\u91cf\u5dee\uff09\u8054\u7cfb\u4e86\u8d77\u6765\u3002</p> </li> <li> <p>Metropolis \u7684\u9009\u62e9\uff1a\u6ee1\u8db3\u4e0a\u8ff0\u6bd4\u503c\u7684 \\(w_{i\\to j}\\) \u6709\u5f88\u591a\u79cd\u9009\u62e9\u3002Metropolis \u63d0\u51fa\u4e86\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u4e14\u6709\u6548\u7684\u6784\u9020\u65b9\u6cd5\u3002\u8be5\u7b97\u6cd5\u5206\u4e3a\u4e24\u6b65\uff1a\u63d0\u8bae (propose) \u548c \u63a5\u53d7/\u62d2\u7edd (accept/reject)\u3002</p> </li> <li> <p>\u63d0\u8bae\uff1a\u4ece\u5f53\u524d\u72b6\u6001 \\(i\\)\uff0c\u968f\u673a\u5730\u63d0\u8bae\u4e00\u4e2a\u65b0\u72b6\u6001 \\(j\\)\u3002\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u5bf9\u72b6\u6001 \\(i\\) \u505a\u4e00\u4e2a\u5fae\u5c0f\u7684\u968f\u673a\u6270\u52a8\uff08\u4f8b\u5982\uff0c\u5728\u4f0a\u8f9b\u6a21\u578b\u4e2d\u968f\u673a\u7ffb\u8f6c\u4e00\u4e2a\u81ea\u65cb\uff09\u3002\u5047\u8bbe\u4ece \\(i\\) \u63d0\u8bae \\(j\\) \u548c\u4ece \\(j\\) \u63d0\u8bae \\(i\\) \u7684\u6982\u7387\u662f\u76f8\u7b49\u7684\uff08\u5373\u63d0\u8bae\u5206\u5e03\u662f\u5bf9\u79f0\u7684\uff09\u3002</p> </li> <li> <p>\u63a5\u53d7/\u62d2\u7edd\uff1a\u8ba1\u7b97\u80fd\u91cf\u53d8\u5316 \\(\\Delta E=E_j-E_i\\)\u3002</p> <ul> <li> <p>\u5982\u679c \\(\\Delta E\\leq 0\\)\uff08\u65b0\u72b6\u6001\u80fd\u91cf\u66f4\u4f4e\u6216\u76f8\u7b49\uff09\uff0c\u5219\u603b\u662f\u63a5\u53d7\u8fd9\u4e2a\u63d0\u8bae\uff0c\u7cfb\u7edf\u8f6c\u79fb\u5230\u72b6\u6001 \\(j\\)\u3002</p> </li> <li> <p>\u5982\u679c \\(\\Delta E&gt;0\\)\uff08\u65b0\u72b6\u6001\u80fd\u91cf\u66f4\u9ad8\uff09\uff0c\u5219\u4ee5\u4e00\u5b9a\u7684\u6982\u7387 \\(P_{\\text{accept}}=e^{-\\Delta E/k_B T}\\) \u63a5\u53d7\u8fd9\u4e2a\u63d0\u8bae\u3002\u5177\u4f53\u64cd\u4f5c\u662f\uff1a\u751f\u6210\u4e00\u4e2a \\([0,1)\\) \u4e4b\u95f4\u7684\u968f\u673a\u6570 \\(r\\)\uff0c\u5982\u679c \\(r&lt;P_{\\text{accept}}\\)\uff0c\u5219\u63a5\u53d7\u8f6c\u79fb\uff1b\u5426\u5219\uff0c\u62d2\u7edd\u63d0\u8bae\uff0c\u7cfb\u7edf\u4fdd\u6301\u5728\u539f\u72b6\u6001 \\(i\\) \u4e0d\u53d8\u3002</p> </li> </ul> </li> </ol> <p>\u8fd9\u4e2a\u63a5\u53d7\u51c6\u5219\uff0c\u5373\u63a5\u53d7\u6982\u7387\u4e3a \\(\\min(1,e^{-\\Delta E/k_B T})\\)\uff0c\u6070\u597d\u6ee1\u8db3\u4e86\u7ec6\u81f4\u5e73\u8861\u7684\u8981\u6c42\u3002\u5b83\u76f4\u89c2\u5730\u4f53\u73b0\u4e86\u7269\u7406\u8fc7\u7a0b\uff1a\u7cfb\u7edf\u503e\u5411\u4e8e\u5411\u4f4e\u80fd\u91cf\u72b6\u6001\u6f14\u5316\uff0c\u4f46\u7531\u4e8e\u70ed\u6da8\u843d\u7684\u5b58\u5728\uff0c\u5b83\u4e5f\u6709\u4e00\u5b9a\u6982\u7387\u8df3\u5230\u80fd\u91cf\u66f4\u9ad8\u7684\u72b6\u6001\uff0c\u4ece\u800c\u80fd\u591f\u63a2\u7d22\u6574\u4e2a\u72b6\u6001\u7a7a\u95f4\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u9677\u5165\u67d0\u4e2a\u5c40\u90e8\u80fd\u91cf\u6700\u4f4e\u70b9\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#23-python","title":"2.3 Python \u6a21\u62df\uff1a\u4e8c\u7ef4\u4f0a\u8f9b\u6a21\u578b","text":"<p>\u4e3a\u4e86\u5177\u4f53\u611f\u53d7 Metropolis \u7b97\u6cd5\u7684\u5a01\u529b\uff0c\u6211\u4eec\u7528\u5b83\u6765\u6a21\u62df\u4e00\u4e2a\u7ecf\u5178\u7684\u7269\u7406\u7cfb\u7edf\uff1a\u4e8c\u7ef4\u4f0a\u8f9b\u6a21\u578b (2D Ising Model)\u3002\u8fd9\u662f\u4e00\u4e2a\u63cf\u8ff0\u94c1\u78c1\u6027\u7684\u7b80\u5316\u6a21\u578b\uff0c\u7531\u4e00\u4e2a\u4e8c\u7ef4\u6676\u683c\u6784\u6210\uff0c\u6bcf\u4e2a\u683c\u70b9\u4e0a\u6709\u4e00\u4e2a\u81ea\u65cb\uff0c\u5176\u72b6\u6001\u4e3a\"\u4e0a\"(+1)\u6216\"\u4e0b\"(-1)\u3002</p> <p>\u7cfb\u7edf\u7684\u603b\u80fd\u91cf\uff08\u54c8\u5bc6\u987f\u91cf\uff09\u7531\u4e0b\u5f0f\u7ed9\u51fa\uff1a</p> \\[H = -J \\sum_{\\langle i,j \\rangle} S_i S_j\\] <p>\u5176\u4e2d \\(\\sum_{\\langle i,j \\rangle}\\) \u8868\u793a\u5bf9\u6240\u6709\u6700\u8fd1\u90bb\u7684\u81ea\u65cb\u5bf9\u6c42\u548c\uff0c\\(S_i\\) \u548c \\(S_j\\) \u662f\u76f8\u90bb\u683c\u70b9\u4e0a\u7684\u81ea\u65cb\u503c\u3002\u6211\u4eec\u8bbe\u8026\u5408\u5e38\u6570 \\(J=1\\)\u3002\u5f53\u76f8\u90bb\u81ea\u65cb\u65b9\u5411\u76f8\u540c\u65f6 \\((S_i S_j = 1)\\)\uff0c\u80fd\u91cf\u8d21\u732e\u4e3a \\(-J\\)\uff0c\u7cfb\u7edf\u80fd\u91cf\u964d\u4f4e\uff1b\u65b9\u5411\u76f8\u53cd\u65f6 \\((S_i S_j = -1)\\)\uff0c\u80fd\u91cf\u8d21\u732e\u4e3a \\(+J\\)\uff0c\u7cfb\u7edf\u80fd\u91cf\u5347\u9ad8\u3002\u56e0\u6b64\uff0c\u7cfb\u7edf\u5728\u4f4e\u6e29\u4e0b\u503e\u5411\u4e8e\u6240\u6709\u81ea\u65cb\u671d\u5411\u4e00\u81f4\uff0c\u5f62\u6210\u5b8f\u89c2\u78c1\u5316\uff0c\u5373\u94c1\u78c1\u6001\u3002</p> <p>\u4e0b\u9762\u7684 Python \u4ee3\u7801\u5b9e\u73b0\u4e86 Metropolis \u7b97\u6cd5\u6765\u6a21\u62df\u4e8c\u7ef4\u4f0a\u8f9b\u6a21\u578b\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n\ndef initialize_lattice(N):\n    \"\"\"\n    Initialize an N x N lattice with random spin states of +1 or -1.\n    \"\"\"\n    return 2 * np.random.randint(2, size=(N, N)) - 1\n\ndef calculate_energy_change(lattice, i, j):\n    \"\"\"\n    Calculate the energy change caused by flipping the spin at position (i, j).\n    Periodic boundary conditions are used.\n    \"\"\"\n    N = lattice.shape[0]\n    s_current = lattice[i, j]\n\n    # Find spin values of the four neighboring sites (top, bottom, left, right)\n    s_top = lattice[(i - 1) % N, j]\n    s_bottom = lattice[(i + 1) % N, j]\n    s_left = lattice[i, (j - 1) % N]\n    s_right = lattice[i, (j + 1) % N]\n\n    # Energy change dE = E_final - E_initial\n    # E_initial = -J * s_current * (s_top + s_bottom + s_left + s_right)\n    # E_final = -J * (-s_current) * (s_top + s_bottom + s_left + s_right)\n    # dE = E_final - E_initial = 2 * J * s_current * (sum of neighbors)\n    # Set J=1\n    dE = 2 * s_current * (s_top + s_bottom + s_left + s_right)\n    return dE\n\ndef metropolis_sweep(lattice, beta):\n    \"\"\"\n    Perform one complete Metropolis scan (N*N attempts).\n    beta = 1 / (k_B * T)\n    \"\"\"\n    N = lattice.shape[0]\n    for _ in range(N * N):\n        # Randomly select a lattice site\n        i, j = np.random.randint(0, N, size=2)\n\n        # Calculate energy change\n        dE = calculate_energy_change(lattice, i, j)\n\n        # Metropolis acceptance/rejection criterion\n        if dE &lt;= 0 or np.random.rand() &lt; np.exp(-beta * dE):\n            lattice[i, j] *= -1 # Accept flip\n\n    return lattice\n\n# --- Simulation parameters ---\nN = 50  # Lattice size\nT = 1.5 # Temperature (critical temperature Tc is approximately 2.269)\nbeta = 1.0 / T\nn_sweeps = 3000 # Total number of sweeps for simulation\nframe_interval = 50 # Record a frame every this many sweeps\n\n# --- Initialization ---\nlattice = initialize_lattice(N)\n\n# Set up visualization\nfig, ax = plt.subplots(figsize=(10, 8))\nim = ax.imshow(lattice, cmap='RdYlBu', vmin=-1, vmax=1, interpolation='nearest')\nax.set_title(f'2D Ising Model (T = {T:.2f}, Sweep = 0)', fontsize=16)\nax.set_axis_off()\n\n# Add color bar\ncbar = plt.colorbar(im, ax=ax, shrink=0.8)\ncbar.set_label('Spin', fontsize=14)\n\n# --- Simulation and animation ---\ndef update(frame):\n    global lattice\n    # Perform frame_interval sweeps\n    for _ in range(frame_interval):\n        lattice = metropolis_sweep(lattice, beta)\n    im.set_data(lattice)\n    ax.set_title(f'2D Ising Model (T = {T:.2f}, Sweep = {frame * frame_interval})', fontsize=16)\n    return [im]\n\n# Create animation\nani = FuncAnimation(fig, update, frames=n_sweeps // frame_interval,\n                    interval=100, blit=False, repeat=False)\n\nplt.tight_layout()\nplt.show()\n\n# Save as GIF file\n\nimport imageio\nprint(\"Saving animation as GIF file...\")\n\n    # Re-run simulation to capture all frames\nlattice_gif = initialize_lattice(N)\n\n    # Create images for GIF\nfig_gif, ax_gif = plt.subplots(figsize=(10, 8))\nim_gif = ax_gif.imshow(lattice_gif, cmap='RdYlBu', vmin=-1, vmax=1, interpolation='nearest')\nax_gif.set_title(f'2D Ising Model (T = {T:.2f}, Sweep = 0)', fontsize=16)\nax_gif.set_axis_off()\ncbar_gif = plt.colorbar(im_gif, ax=ax_gif, shrink=0.8)\ncbar_gif.set_label('Spin', fontsize=14)\n\nwith imageio.get_writer('ising_model.gif', mode='I', duration=0.1, loop=0) as writer:\n        # Save initial state\n    fig_gif.canvas.draw()\n    image_array = np.array(fig_gif.canvas.renderer._renderer)\n    writer.append_data(image_array[:, :, :3])\n    print(f\"Saved 0/{n_sweeps // frame_interval} frames\")\n\n        # Step through simulation and save each frame\n    for i in range(n_sweeps // frame_interval):\n        for _ in range(frame_interval):\n            lattice_gif = metropolis_sweep(lattice_gif, beta)\n        im_gif.set_data(lattice_gif)\n        ax_gif.set_title(f'2D Ising Model (T = {T:.2f}, Sweep = {(i+1) * frame_interval})', fontsize=16)\n        fig_gif.canvas.draw()\n        image_array = np.array(fig_gif.canvas.renderer._renderer)\n        writer.append_data(image_array[:, :, :3])\n\n        if (i+1) % 10 == 0:\n            print(f\"Saved {i+1}/{n_sweeps // frame_interval} frames\")\n\nplt.close(fig_gif)\n</code></pre> </p> <p>\u5f53\u6e29\u5ea6 T \u8bbe\u7f6e\u5728\u4e34\u754c\u6e29\u5ea6 Tc\u22482.269 \u4ee5\u4e0b\u65f6\uff08\u4f8b\u5982 T=1.5\uff09\uff0c\u4f60\u4f1a\u89c2\u5bdf\u5230\u7cfb\u7edf\u4ece\u521d\u59cb\u7684\u968f\u673a\u201c\u6912\u76d0\u201d\u72b6\u6001\uff0c\u9010\u6e10\u6f14\u5316\u51fa\u5927\u7247\u7684\u540c\u5411\u81ea\u65cb\u201c\u7574\u201d\u3002\u6700\u7ec8\uff0c\u6574\u4e2a\u7cfb\u7edf\u4f1a\u8d8b\u5411\u4e8e\u4e00\u4e2a\u51e0\u4e4e\u5b8c\u5168\u6709\u5e8f\u7684\u94c1\u78c1\u6001\uff08\u5168\u84dd\u6216\u5168\u7ea2\uff09\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u751f\u52a8\u5730\u5c55\u793a\u4e86Metropolis\u7b97\u6cd5\u5982\u4f55\u901a\u8fc7\u9075\u5faa\u7b80\u5355\u7684\u5c40\u90e8\u89c4\u5219\uff08\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u7684\u63a5\u53d7/\u62d2\u7edd\u51c6\u5219\uff09\uff0c\u6210\u529f\u5730\u5f15\u5bfc\u7cfb\u7edf\u627e\u5230\u5176\u5168\u5c40\u7684\u4f4e\u80fd\u5e73\u8861\u6001\uff0c\u4ece\u800c\u6d8c\u73b0\u51fa\u5b8f\u89c2\u7684\u6709\u5e8f\u7ed3\u6784\u3002\u8fd9\u6b63\u662f\u7edf\u8ba1\u529b\u5b66\u4e2d\u4ece\u5fae\u89c2\u89c4\u5219\u5230\u5b8f\u89c2\u884c\u4e3a\u7684\u7cbe\u9ad3\u6240\u5728\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#3","title":"3. \u8fde\u7eed\u72b6\u6001\u7a7a\u95f4\u4e2d\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u51c6\u5907\u8fdb\u884c\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u8de8\u8d8a\uff1a\u5c06\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u63cf\u8ff0\u4ece\u79bb\u6563\u72b6\u6001\uff08\u5982\u81ea\u65cb\u72b6\u6001 \\(\\pm 1\\)\uff09\u63a8\u5e7f\u5230\u8fde\u7eed\u72b6\u6001\u7a7a\u95f4\u3002\u8fd9\u610f\u5473\u7740\u7cfb\u7edf\u7684\u72b6\u6001\u53d8\u91cf \\(\\vec{X}(t)\\) \u53ef\u4ee5\u5728\u4e00\u4e2a\u8fde\u7eed\u7684\u57df\u4e2d\u53d6\u503c\uff0c\u4f8b\u5982 \\(\\vec{X}(t)\\in\\mathbb{R}^d\\)\u3002\u4e3a\u4e86\u5efa\u7acb\u76f4\u89c2\u7684\u7406\u89e3\uff0c\u6559\u6388\u5728\u8bb2\u5ea7\u4e2d\u5217\u4e3e\u4e86\u51e0\u4e2a\u5178\u578b\u7684\u7269\u7406\u548c\u751f\u7269\u5b66\u4f8b\u5b50\u3002</p> <p>1. \u5e03\u6717\u8fd0\u52a8 (Brownian Motion)</p> <p>\u4e00\u4e2a\u60ac\u6d6e\u5728\u6db2\u4f53\u4e2d\u7684\u82b1\u7c89\u9897\u7c92\uff0c\u7531\u4e8e\u53d7\u5230\u5927\u91cf\u5fae\u5c0f\u7684\u3001\u968f\u673a\u7684\u6c34\u5206\u5b50\u78b0\u649e\uff0c\u4f1a\u8fdb\u884c\u6c38\u4e0d\u505c\u6b47\u7684\u65e0\u89c4\u5219\u8fd0\u52a8\u3002\u8fd9\u4e2a\u9897\u7c92\u7684\u4f4d\u7f6e \\(X(t)\\in\\mathbb{R}^3\\) \u5c31\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u72b6\u6001\u53d8\u91cf\u3002\u5b83\u7684\u8f68\u8ff9\u770b\u8d77\u6765\u662f\u8fde\u7eed\u4f46\u5904\u5904\u4e0d\u53ef\u5fae\u7684\uff0c\u5145\u6ee1\u4e86\u952f\u9f7f\u72b6\u7684\u968f\u673a\u884c\u8d70\u3002</p> <p>2. \u5206\u5b50\u9a6c\u8fbe (Molecular Motors)</p> <p></p> <p></p> <p>\u4ee5\u9a71\u52a8\u86cb\u767d\uff08Kinesin\uff09\u4e3a\u4f8b\uff0c\u5b83\u50cf\u4e00\u4e2a\u5fae\u578b\u642c\u8fd0\u5de5\uff0c\u6cbf\u7740\u7ec6\u80de\u5185\u7684\u5fae\u7ba1\u8f68\u9053\"\u884c\u8d70\"\u6765\u8fd0\u8f93\u7269\u8d28\u3002\u5b83\u7684\u6bcf\u4e00\u6b65\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff08\u7ea6 8 nm\uff09\uff0c\u56e0\u6b64\u4ece\u5b8f\u89c2\u4e0a\u770b\uff0c\u5176\u8fd0\u52a8\u53ef\u4ee5\u88ab\u7c97\u7c92\u5316\u5730\u63cf\u8ff0\u4e3a\u4e00\u4e2a\u5728\u5fae\u7ba1\u4e0a\u7684\u4f4d\u7f6e\u53d8\u91cf \\(x(t)\\)\u3002\u867d\u7136\u5e95\u5c42\u7684\u5316\u5b66\u53cd\u5e94\uff08ATP\u6c34\u89e3\uff09\u662f\u79bb\u6563\u4e8b\u4ef6\uff0c\u4f46\u5176\u4f4d\u7f6e\u8f68\u8ff9\u6df7\u5408\u4e86\u79bb\u6563\u7684\u8df3\u8dc3\u548c\u5728\u6bcf\u4e2a\u7ed3\u5408\u4f4d\u70b9\u9644\u8fd1\u7684\u70ed\u632f\u52a8\u3002</p> <p>3. \u7ec6\u83cc\u8d8b\u5316\u6027 (Bacterial Chemotaxis)</p> <p></p> <p></p> <p>\u5927\u80a0\u6746\u83cc\u5728\u73af\u5883\u4e2d\u5bfb\u627e\u98df\u7269\u65f6\uff0c\u4f1a\u91c7\u7528\u4e00\u79cd\"\u5954\u8dd1-\u7ffb\u6eda (Run &amp; Tumble)\"\u7684\u8fd0\u52a8\u7b56\u7565\u3002\u5728\"\u5954\u8dd1\"\u9636\u6bb5\uff0c\u5b83\u6cbf\u7740\u4e00\u4e2a\u65b9\u5411\u76f4\u7ebf\u524d\u8fdb\uff1b\u5728\"\u7ffb\u6eda\"\u9636\u6bb5\uff0c\u5b83\u4f1a\u539f\u5730\u968f\u673a\u6539\u53d8\u65b9\u5411\u3002\u63cf\u8ff0\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u72b6\u6001\u53d8\u91cf\u81f3\u5c11\u9700\u8981\u4f4d\u7f6e \\(x(t)\\) \u548c\u65b9\u5411 \\(\\theta(t)\\)\uff0c\u4e24\u8005\u90fd\u662f\u8fde\u7eed\u7684\u3002\u5176\u8f68\u8ff9\u7531\u5e73\u6ed1\u7684\u76f4\u7ebf\u6bb5\u548c\u77ac\u65f6\u7684\u65b9\u5411\u6539\u53d8\u6784\u6210\u3002</p> <p>\u8fd9\u4e09\u4e2a\u4f8b\u5b50\u5e76\u975e\u968f\u610f\u6311\u9009\uff0c\u5b83\u4eec\u5de7\u5999\u5730\u9884\u793a\u4e86\u6211\u4eec\u5373\u5c06\u8981\u5efa\u7acb\u7684\u4e0d\u540c\u6570\u5b66\u6a21\u578b\u3002\u5e03\u6717\u8fd0\u52a8\u662f\u7eaf\u6269\u6563\u8fc7\u7a0b\u7684\u5178\u8303\uff0c\u5176\u6837\u672c\u8def\u5f84\u662f\u8fde\u7eed\u7684\u3002\u9a71\u52a8\u86cb\u767d\u7684\u8fd0\u52a8\u662f\u8df3\u8dc3\u8fc7\u7a0b\u7684\u4ee3\u8868\uff0c\u5176\u6837\u672c\u8def\u5f84\u662f\u5206\u6bb5\u5e38\u6570\u3001\u4e0d\u8fde\u7eed\u7684\u3002\u800c\u7ec6\u83cc\u7684\u8fd0\u52a8\u5219\u662f\u4e00\u4e2a\u6df7\u5408\u8fc7\u7a0b\uff0c\u65e2\u5305\u542b\u8fde\u7eed\u7684\u8fd0\u52a8\uff0c\u4e5f\u5305\u542b\u79bb\u6563\u7684\u4e8b\u4ef6\u3002\u8fd9\u4e9b\u7269\u7406\u56fe\u50cf\u4e3a\u6211\u4eec\u63a5\u4e0b\u6765\u63a8\u5bfc\u7684\u62bd\u8c61\u6570\u5b66\u65b9\u7a0b\u63d0\u4f9b\u4e86\u5177\u4f53\u7684\u7269\u7406\u60c5\u666f\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#4","title":"4. \u6837\u672c\u8def\u5f84\u4e0e\u6f14\u5316\u65b9\u7a0b","text":"<p>\u4ece\u79bb\u6563\u5230\u8fde\u7eed\uff0c\u6700\u6838\u5fc3\u7684\u53d8\u5316\u5728\u4e8e\u6211\u4eec\u5982\u4f55\u63cf\u8ff0\u72b6\u6001\u4e4b\u95f4\u7684\u201c\u8f6c\u79fb\u201d\u3002\u5bf9\u4e8e\u8fde\u7eed\u7a7a\u95f4\uff0c\u6211\u4eec\u4e0d\u518d\u4f7f\u7528\u6982\u7387 \\(P_n(t)\\)\uff0c\u800c\u662f\u4f7f\u7528\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 (Probability Density Function, PDF) \\(P(x, t)\\)\u3002\\(P(x, t) dx\\) \u8868\u793a\u5728\u65f6\u523b \\(t\\) \u53d1\u73b0\u7cfb\u7edf\u5904\u4e8e\u4ee5 \\(x\\) \u4e3a\u4e2d\u5fc3\u7684\u5fae\u5c0f\u4f53\u79ef\u5143 \\(dx\\) \u5185\u7684\u6982\u7387\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#41","title":"4.1 \u8def\u5f84\u7684\u4e24\u79cd\u6027\u8d28","text":"<p>\u6839\u636e\u7cfb\u7edf\u72b6\u6001\u968f\u65f6\u95f4\u6f14\u5316\u7684\u8f68\u8ff9\uff08\u6837\u672c\u8def\u5f84\uff09\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fde\u7eed\u7a7a\u95f4\u4e2d\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u5206\u4e3a\u4e24\u5927\u7c7b\u3002\u8fd9\u4e2a\u5206\u7c7b\u7684\u6570\u5b66\u5224\u636e\uff08Kramers-Moyal\u6761\u4ef6\uff09\u662f\u770b\u5728\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u65f6\u95f4\u95f4\u9694 \\(\\Delta t\\) \u5185\uff0c\u7cfb\u7edf\u53d1\u751f\u4e00\u4e2a\u5927\u4e8e\u4efb\u610f\u5c0f\u91cf \\(\\epsilon\\) \u7684\u4f4d\u79fb\u7684\u6982\u7387\u5982\u4f55\u968f \\(\\Delta t\\) \u53d8\u5316\u3002</p> <p>1. \u8fde\u7eed\u6837\u672c\u8def\u5f84 (Continuous Sample Path)</p> <p>\u5bf9\u4e8e\u8fd9\u7c7b\u8fc7\u7a0b\uff0c\u7cfb\u7edf\u72b6\u6001\u7684\u6539\u53d8\u662f\u5e73\u6ed1\u7684\uff0c\u4e0d\u4f1a\u53d1\u751f\u77ac\u65f6\u7684\u3001\u6709\u9650\u5927\u5c0f\u7684\u8df3\u8dc3\u3002\u6570\u5b66\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u5728\u4e00\u4e2a\u5c0f\u65f6\u95f4\u9694 \\(\\Delta t\\) \u5185\u53d1\u751f\u5927\u8df3\u8dc3\u7684\u6982\u7387\u8d8b\u8fd1\u4e8e\u96f6\u7684\u901f\u5ea6\u6bd4 \\(\\Delta t\\) \u672c\u8eab\u8fd8\u8981\u5feb\uff1a</p> \\[ \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} \\int_{|\\Delta x|&gt;\\epsilon} dx\\ p(x,t+\\Delta t|x',t) = 0 \\] <p>\u5e03\u6717\u8fd0\u52a8\u5c31\u662f\u6700\u5178\u578b\u7684\u4f8b\u5b50\u3002\u5176\u8f6c\u79fb\u6982\u7387\u5bc6\u5ea6\u662f\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03\uff08\u6b63\u6001\u5206\u5e03\uff09\uff0c\u65b9\u5dee\u6b63\u6bd4\u4e8e \\(\\Delta t\\)\uff1a</p> \\[ p(x,t+\\Delta t|x',t) = \\frac{1}{\\sqrt{4\\pi D\\Delta t}} \\exp\\left(-\\frac{(x-x')^2}{4D\\Delta t}\\right) \\] <p>\u5f53 \\(\\Delta t\\to 0\\) \u65f6\uff0c\u8fd9\u4e2a\u5206\u5e03\u4f1a\u65e0\u9650\u96c6\u4e2d\u5728\u8d77\u70b9 \\(x'\\) \u9644\u8fd1\uff0c\u8868\u660e\u53d1\u751f\u5927\u8df3\u8dc3\u7684\u6982\u7387\u6781\u4f4e\u3002</p> <p>2. \u4e0d\u8fde\u7eed\u6837\u672c\u8def\u5f84 (Discontinuous Sample Path)</p> <p>\u5bf9\u4e8e\u8fd9\u7c7b\u8fc7\u7a0b\uff0c\u7cfb\u7edf\u53ef\u4ee5\u53d1\u751f\u77ac\u65f6\u7684\u3001\u6709\u9650\u5927\u5c0f\u7684\u8df3\u8dc3\u3002\u6b64\u65f6\uff0c\u5728 \\(\\Delta t\\to 0\\) \u7684\u6781\u9650\u4e0b\uff0c\u8f6c\u79fb\u6982\u7387\u5bc6\u5ea6\u9664\u4ee5 \\(\\Delta t\\) \u4f1a\u6536\u655b\u5230\u4e00\u4e2a\u6709\u9650\u7684\u8f6c\u79fb\u901f\u7387\u5bc6\u5ea6 (transition rate density) \\(w(x|x')\\)\uff1a</p> \\[ w(x|x';t) = \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} p(x,t+\\Delta t|x',t) \\] <p>\\(w(x|x')dx\\) \u53ef\u4ee5\u7406\u89e3\u4e3a\u7cfb\u7edf\u5f53\u524d\u5728 \\(x'\\) \u5904\uff0c\u5355\u4f4d\u65f6\u95f4\u5185\u8df3\u8dc3\u5230\u4ee5 \\(x\\) \u4e3a\u4e2d\u5fc3\u7684\u5fae\u5c0f\u533a\u95f4 \\(dx\\) \u5185\u7684\u901f\u7387\u3002\u9a71\u52a8\u86cb\u767d\u7684\u6b65\u8fdb\u8fd0\u52a8\u5c31\u5c5e\u4e8e\u6b64\u7c7b\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#42","title":"4.2 \u6f14\u5316\u65b9\u7a0b\u7684\u63a8\u5bfc","text":"<p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2a\u63cf\u8ff0\u6982\u7387\u5bc6\u5ea6 \\(P(\\vec{x},t)\\) \u968f\u65f6\u95f4\u6f14\u5316\u7684\u65b9\u7a0b\uff0c\u5b83\u5c06\u662f\u8fde\u7eed\u7a7a\u95f4\u7248\u672c\u7684\"\u4e3b\u65b9\u7a0b\"\u3002\u63a8\u5bfc\u7684\u8d77\u70b9\u662f\u8003\u5bdf\u4efb\u610f\u4e00\u4e2a\u5149\u6ed1\u53ef\u89c2\u6d4b\u91cf \\(f(\\vec{x})\\) \u7684\u671f\u671b\u503c\u968f\u65f6\u95f4\u7684\u53d8\u5316\u7387 \\(\\partial_t \\langle f \\rangle(t)\\) (1)\u3002</p> \\[\\partial_t \\langle f \\rangle(t) = \\partial_t \\int dx\\ f(\\vec{x}) P(\\vec{x},t|\\cdot)\\] <p>\u6839\u636e\u5bfc\u6570\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u6709\uff1a</p> \\[\\partial_t \\langle f \\rangle(t) = \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} \\left[ \\int dx\\ f(\\vec{x}) P(\\vec{x},t+\\Delta t|\\cdot) - \\int dx\\ f(\\vec{x}) P(\\vec{x},t|\\cdot) \\right]\\] <p>\u8fd9\u91cc\u7684\u5173\u952e\u4e00\u6b65\u662f\u4f7f\u7528\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b\u6765\u8868\u8fbe \\(P(\\vec{x},t+\\Delta t|\\cdot)\\)\uff1a</p> \\[P(\\vec{x},t+\\Delta t|\\cdot) = \\int dx'\\ P(\\vec{x},t+\\Delta t|\\vec{x}',t) P(\\vec{x}',t|\\cdot)\\] <p>\u5c06\u6b64\u5f0f\u4ee3\u5165\uff0c\u5e76\u5229\u7528\u6982\u7387\u5b88\u6052 \\(\\int dx'\\ P(\\vec{x}',t+\\Delta t|\\vec{x},t)=1\\)\uff0c\u7ecf\u8fc7\u5de7\u5999\u7684\u53d8\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7edf\u4e00\u7684\u51fa\u53d1\u70b9\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u6839\u636e\u8def\u5f84\u662f\"\u8df3\u8dc3\"\u8fd8\u662f\"\u6269\u6563\"\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c\u5bf9\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u8fdb\u884c\u4e0d\u540c\u7684\u5904\u7406\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#43","title":"4.3 \u60c5\u51b5\u4e00\uff1a\u7eaf\u8df3\u8dc3\u8fc7\u7a0b","text":"<p>\u5bf9\u4e8e\u4e0d\u8fde\u7eed\u7684\u6837\u672c\u8def\u5f84\uff0c\u6211\u4eec\u4f7f\u7528\u4e4b\u524d\u5b9a\u4e49\u7684\u8f6c\u79fb\u901f\u7387\u5bc6\u5ea6 \\(w(\\vec{x}|\\vec{x}')\\)\u3002\u5c06\u5b83\u4ee3\u5165\u5230 \\(\\partial_t \\langle f \\rangle(t)\\) \u7684\u8868\u8fbe\u5f0f\u4e2d\uff0c\u5e76\u4ea4\u6362\u79ef\u5206\u53d8\u91cf\u7684\u6b21\u5e8f\uff0c\u6700\u7ec8\u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[\\partial_t \\langle f \\rangle(t) = \\int d\\vec{x}\\ f(\\vec{x}) \\int d\\vec{x}'\\ [w(\\vec{x}|\\vec{x}',t) P(\\vec{x}',t|\\cdot) - w(\\vec{x}'|\\vec{x},t) P(\\vec{x},t|\\cdot)]\\] <p>\u7531\u4e8e\u8fd9\u4e2a\u65b9\u7a0b\u5fc5\u987b\u5bf9\u4efb\u610f\u9009\u62e9\u7684\u51fd\u6570 \\(f(\\vec{x})\\) \u90fd\u6210\u7acb\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u53bb\u6389\u5916\u5c42\u7684 \\(\\int d\\vec{x}\\ f(\\vec{x})\\)\uff0c\u4ece\u800c\u5f97\u5230\u6982\u7387\u5bc6\u5ea6 \\(P(\\vec{x},t)\\) \u81ea\u8eab\u7684\u6f14\u5316\u65b9\u7a0b\uff1a</p> \\[\\partial_t P(\\vec{x},t|\\cdot) = \\int d\\vec{x}'\\ [w(\\vec{x}|\\vec{x}',t) P(\\vec{x}',t|\\cdot) - w(\\vec{x}'|\\vec{x},t) P(\\vec{x},t|\\cdot)]\\] <p>\u8fd9\u5c31\u662f\u8fde\u7eed\u72b6\u6001\u7a7a\u95f4\u7684\u4e3b\u65b9\u7a0b (1)\u3002\u5b83\u7684\u7ed3\u6784\u4e0e\u79bb\u6563\u4e3b\u65b9\u7a0b\u5b8c\u5168\u4e00\u81f4\uff1a\u7b2c\u4e00\u9879\u662f\u662f\u6240\u6709\u5176\u4ed6\u4f4d\u7f6e \\(\\vec{x}'\\) \u8df3\u5165 \\(\\vec{x}\\) \u7684\u589e\u76ca\u9879\uff0c\u7b2c\u4e8c\u9879\u662f\u4ece \\(\\vec{x}\\) \u8df3\u51fa\u5230\u6240\u6709\u5176\u4ed6\u4f4d\u7f6e\u7684\u635f\u5931\u9879\u3002\u552f\u4e00\u7684\u533a\u522b\u662f\uff0c\u79bb\u6563\u6c42\u548c \\(\\sum_m\\) \u88ab\u8fde\u7eed\u79ef\u5206 \\(\\int d\\vec{x}'\\) \u6240\u53d6\u4ee3\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#44-","title":"4.4 \u60c5\u51b5\u4e8c\uff1a\u7eaf\u6269\u6563\u8fc7\u7a0b\u4e0e\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b","text":"<p>\u5bf9\u4e8e\u8fde\u7eed\u7684\u6837\u672c\u8def\u5f84\uff0c\u60c5\u51b5\u5219\u5b8c\u5168\u4e0d\u540c\u3002\u6211\u4eec\u4e0d\u80fd\u5b9a\u4e49\u4e00\u4e2a\u8df3\u8f6c\u901f\u7387\uff0c\u56e0\u4e3a\u7cfb\u7edf\u603b\u662f\u5728\u5f53\u524d\u4f4d\u7f6e\u7684\u90bb\u57df\u5185\u79fb\u52a8\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u56de\u5230 \\(\\partial_t \\langle f \\rangle(t)\\) \u7684\u63a8\u5bfc\u8fc7\u7a0b\uff0c\u5bf9\u51fd\u6570 \\(f(\\vec{x}')\\) \u5728\u70b9 \\(\\vec{x}\\) \u9644\u8fd1\u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\uff1a</p> \\[f(\\vec{x}') = f(\\vec{x}) + (x_i'-x_i)\\partial_i f(\\vec{x}) + \\frac{1}{2}(x_i'-x_i)(x_j'-x_j)\\partial_i \\partial_j f(\\vec{x}) + \\ldots\\] <p>\u5c06\u8fd9\u4e2a\u5c55\u5f00\u5f0f\u4ee3\u5165\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u8868\u8fbe\u5f0f\u4e2d\u51fa\u73b0\u4e86\u4f4d\u79fb \\(\\Delta \\vec{x}=\\vec{x}'-\\vec{x}\\) \u7684\u5404\u9636\u77e9\u3002\u5bf9\u4e8e\u6269\u6563\u8fc7\u7a0b\uff0c\u6211\u4eec\u5047\u8bbe\u53ea\u6709\u524d\u4e24\u9636\u77e9\u5728 \\(\\Delta t\\to 0\\) \u7684\u6781\u9650\u4e0b\u662f\u975e\u96f6\u7684\u3002</p> <p>\u6211\u4eec\u5b9a\u4e49\u8fd9\u4e24\u4e2a\u91cd\u8981\u7684\u7269\u7406\u91cf\uff1a</p> <p>1. \u6f02\u79fb\u77e2\u91cf (Drift Vector) \\(A_i(\\vec{x},t)\\):</p> \\[ A_i(x, t) := \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} \\int dx' (x'_i - x_i) P(x', t + \\Delta t | x, t) \\equiv \\left. \\frac{\\langle \\Delta x_i \\rangle}{\\Delta t} \\right|_{\\Delta t \\to 0} \\] <p>\u5b83\u63cf\u8ff0\u4e86\u5728 \\(\\vec{x}\\) \u70b9\u7684\u7c92\u5b50\u6240\u611f\u53d7\u5230\u7684\u5e73\u5747\u901f\u5ea6\u6216\u7cfb\u7edf\u6027\u7684\"\u6f02\u79fb\"\u3002</p> <p>2. \u6269\u6563\u77e9\u9635 (Diffusion Matrix) \\(B_{ij}(\\vec{x},t)\\):</p> \\[ B_{ij}(x, t) := \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} \\int dx' (x'_i - x_i)(x'_j - x_j) P(x', t + \\Delta t | x, t) \\equiv \\left. \\frac{\\langle \\Delta x_i \\Delta x_j \\rangle}{\\Delta t} \\right|_{\\Delta t \\to 0} \\] <p>\u5b83\u63cf\u8ff0\u4e86\u968f\u673a\u529b\u7684\u5f3a\u5ea6\u548c\u5173\u8054\u6027\uff0c\u5373\u4f4d\u79fb\u7684\u534f\u65b9\u5dee\u3002\u5bf9\u89d2\u5143\u7d20 \\(B_{ii}\\) \u63cf\u8ff0\u4e86\u6cbf \\(i\\) \u65b9\u5411\u7684\u6269\u6563\u5f3a\u5ea6\uff0c\u975e\u5bf9\u89d2\u5143\u7d20 \\(B_{ij}\\) \u63cf\u8ff0\u4e86\u4e0d\u540c\u65b9\u5411\u4e0a\u968f\u673a\u8fd0\u52a8\u7684\u5173\u8054\u3002</p> <p>\u5c06\u6cf0\u52d2\u5c55\u5f00\u548c\u8fd9\u4e24\u4e2a\u5b9a\u4e49\u4ee3\u5165 \\(\\partial_t \\langle f \\rangle(t)\\) \u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u4f7f\u7528\u5206\u90e8\u79ef\u5206\u6cd5\u5c06\u5bfc\u6570\u4ece\u6d4b\u8bd5\u51fd\u6570 \\(f\\) \u8f6c\u79fb\u5230\u6982\u7387\u5bc6\u5ea6 \\(P\\) \u4e0a\uff0c\u7ecf\u8fc7\u4e00\u756a\u63a8\u5bfc\uff0c\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u5173\u4e8e \\(P(\\vec{x},t)\\) \u7684\u504f\u5fae\u5206\u65b9\u7a0b\u2014\u2014\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b (Fokker-Planck Equation)\uff1a</p> \\[\\partial_t P(\\vec{x}, t | \\cdot) = -\\partial_i \\left[ A_i(\\vec{x}, t) P(\\vec{x}, t | \\cdot) \\right] + \\frac{1}{2} \\partial_i \\partial_j \\left[ B_{ij}(\\vec{x}, t) P(\\vec{x}, t | \\cdot) \\right]\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u662f\u7edf\u8ba1\u7269\u7406\u4e2d\u6700\u91cd\u8981\u7684\u65b9\u7a0b\u4e4b\u4e00\u3002\u5b83\u7684\u7269\u7406\u610f\u4e49\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u4e00\u4e2a\u6982\u7387\u5b88\u6052\u7684\u8fde\u7eed\u6027\u65b9\u7a0b \\(\\partial_t P = -\\nabla \\cdot \\vec{J}_P\\)\uff0c\u5176\u4e2d\u6982\u7387\u6d41\u5bc6\u5ea6 \\(\\vec{J}_P\\) \u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li> <p>\u6f02\u79fb\u6d41 (Drift Current): \\(\\vec{J}_{\\text{drift}} = \\vec{A} P\\)\u3002\u7531\u7cfb\u7edf\u6027\u7684\u529b\u9a71\u52a8\u3002</p> </li> <li> <p>\u6269\u6563\u6d41 (Diffusion Current): \\(\\vec{J}_{\\text{diff}} = -\\frac{1}{2} \\nabla \\cdot (\\mathbf{B} P)\\)\u3002\u7531\u968f\u673a\u6da8\u843d\u5f15\u8d77\uff0c\u603b\u662f\u4ece\u9ad8\u6982\u7387\u5bc6\u5ea6\u533a\u57df\u6d41\u5411\u4f4e\u6982\u7387\u5bc6\u5ea6\u533a\u57df\u3002</p> </li> </ul> <p>\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u7684\u63a8\u5bfc\u8fc7\u7a0b\u5b8c\u7f8e\u5730\u5c55\u793a\u4e86\u7edf\u8ba1\u529b\u5b66\u5982\u4f55\u8fde\u63a5\u5fae\u89c2\u4e0e\u5b8f\u89c2\u3002\u65b9\u7a0b\u672c\u8eab\u662f\u786e\u5b9a\u6027\u7684\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u521d\u59cb\u7684\u6982\u7387\u5206\u5e03 \\(P(\\vec{x},0)\\)\uff0c\u5b83\u7684\u672a\u6765\u6f14\u5316 \\(P(\\vec{x},t)\\) \u5c31\u88ab\u552f\u4e00\u786e\u5b9a\u4e86\u3002\u7136\u800c\uff0c\u65b9\u7a0b\u7684\u7cfb\u6570\u2014\u2014\u6f02\u79fb\u9879 \\(\\vec{A}\\) \u548c\u6269\u6563\u9879 \\(\\mathbf{B}\\)\u2014\u2014\u5374\u662f\u7531\u5e95\u5c42\u7684\u5fae\u89c2\u968f\u673a\u884c\u8d70\u7684\u7edf\u8ba1\u6027\u8d28\uff08\u5747\u503c\u548c\u65b9\u5dee\uff09\u6240\u51b3\u5b9a\u7684\u3002\u8fd9\u63ed\u793a\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u539f\u7406\uff1a\u867d\u7136\u5355\u4e2a\u7c92\u5b50\u7684\u8f68\u8ff9\u662f\u4e0d\u53ef\u9884\u6d4b\u7684\uff0c\u4f46\u5927\u91cf\u7c92\u5b50\u7ec4\u6210\u7684\u7cfb\u7efc\u7684\u6982\u7387\u5206\u5e03\u6f14\u5316\u5374\u662f\u53ef\u4ee5\u88ab\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u5b8f\u89c2\u5b9a\u5f8b\u6240\u63cf\u8ff0\u7684\u3002</p> <p>Fokker-Planck\u65b9\u7a0b\uff0c\u4e5f\u79f0\u4e3a Kolmogorov \u524d\u5411\u65b9\u7a0b\uff0c\u662f\u63cf\u8ff0\u968f\u673a\u7cfb\u7edf\u6f14\u5316\u7684\u6838\u5fc3\u65b9\u7a0b\uff0c\u5b83\u4ece\u6717\u4e4b\u4e07\u65b9\u7a0b\u5bf9\u5e03\u6717\u8fd0\u52a8\u7684\u5fae\u89c2\u63cf\u8ff0\u51fa\u53d1\uff0c\u901a\u8fc7\u7edf\u8ba1\u5e73\u5747\u523b\u753b\u51fa\u7cfb\u7edf\u6982\u7387\u5206\u5e03\u968f\u65f6\u95f4\u7684\u786e\u5b9a\u6027\u6f14\u5316\u8109\u7edc\u3002\u8be5\u65b9\u7a0b\u7cbe\u5999\u5730\u523b\u753b\u4e86\u786e\u5b9a\u6027\u529b\uff08\u7531\u6f02\u79fb\u9879 \\(A_i\\) \u63cf\u8ff0\uff09\u4e0e\u968f\u673a\u6da8\u843d\uff08\u7531\u6269\u6563\u9879 \\(B_{ij}\\) \u63cf\u8ff0\uff09\u4e4b\u95f4\u7684\u7ade\u4e89\u4e0e\u5e73\u8861\u3002</p> <p>\u5176\u5177\u4f53\u5e94\u7528\u6781\u4e3a\u5e7f\u6cdb\uff0c\u8d2f\u7a7f\u4e8e\u73b0\u4ee3\u79d1\u5b66\u4e0e\u5de5\u7a0b\u9886\u57df\uff1a\u5728\u7edf\u8ba1\u7269\u7406\u4e2d\uff0c\u5b83\u7528\u4e8e\u7814\u7a76\u7cfb\u7edf\u5982\u4f55\u5f1b\u8c6b\u5230\u7531\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u7ed9\u51fa\u7684\u70ed\u529b\u5b66\u5e73\u8861\u6001\uff1b\u5728\u91d1\u878d\u6570\u5b66\u4e2d\uff0c\u5b83\u662fBlack-Scholes\u6a21\u578b\u7b49\u671f\u6743\u5b9a\u4ef7\u7406\u8bba\u7684\u57fa\u7840\uff0c\u7528\u4e8e\u63cf\u8ff0\u8d44\u4ea7\u4ef7\u683c\u7684\u968f\u673a\u6ce2\u52a8\uff1b\u5728\u7cfb\u7edf\u751f\u7269\u5b66\u4e2d\uff0c\u5b83\u6a21\u62df\u7ec6\u80de\u5185\u5316\u5b66\u7269\u8d28\u6d53\u5ea6\u7684\u6da8\u843d\u548c\u57fa\u56e0\u8868\u8fbe\u566a\u58f0\uff1b\u5728\u795e\u7ecf\u79d1\u5b66\u4e2d\uff0c\u5b83\u523b\u753b\u795e\u7ecf\u5143\u819c\u7535\u4f4d\u7684\u968f\u673a\u89e6\u53d1\u8fc7\u7a0b\uff1b\u5728\u6c14\u8c61\u5b66\u548c\u6d41\u4f53\u529b\u5b66\u4e2d\uff0c\u5b83\u7528\u4e8e\u7814\u7a76\u6c61\u67d3\u7269\u5728\u6e4d\u6d41\u4e2d\u7684\u6269\u6563\u548c\u8f93\u8fd0\u3002\u7b80\u800c\u8a00\u4e4b\uff0cFokker-Planck\u65b9\u7a0b\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u5957\u5f3a\u5927\u7684\u6570\u5b66\u6846\u67b6\uff0c\u7528\u4ee5\u7406\u89e3\u548c\u9884\u6d4b\u65e0\u5904\u4e0d\u5728\u7684\u968f\u673a\u73b0\u8c61\uff0c\u662f\u4ece\u5fae\u89c2\u7c92\u5b50\u5230\u5b8f\u89c2\u5e02\u573a\u7684\u201c\u968f\u673a\u52a8\u529b\u5b66\u4e4b\u9b42\u201d\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#45-python","title":"4.5 Python \u6a21\u62df\uff1a\u4e8c\u7ef4\u5e03\u6717\u8fd0\u52a8","text":"<p>\u4e3a\u4e86\u76f4\u89c2\u5730\u7406\u89e3\u6269\u6563\u8fc7\u7a0b\u548c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u7684\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff1a\u4e00\u4e2a\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u81ea\u7531\u6269\u6563\u7684\u7c92\u5b50\u3002\u6b64\u65f6\uff0c\u6ca1\u6709\u6f02\u79fb\uff08\\(A=0\\)\uff09\uff0c\u6269\u6563\u662f\u5404\u5411\u540c\u6027\u7684\uff08\\(B_{ij}=2D\\delta_{ij}\\)\uff0c\u5176\u4e2d \\(D\\) \u662f\u6269\u6563\u7cfb\u6570\uff09\u3002\u5bf9\u5e94\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u5c31\u662f\u8457\u540d\u7684\u6269\u6563\u65b9\u7a0b\uff1a</p> \\[\\partial_t P = D \\nabla^2 P\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u89e3\u662f\u4e00\u4e2a\u5747\u503c\u4e3a\u96f6\u3001\u65b9\u5dee\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u5927\u7684\u9ad8\u65af\u5206\u5e03\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6a21\u62df\u4e00\u4e2a\u4e8c\u7ef4\u968f\u673a\u884c\u8d70 (2D Random Walk) \u6765\u8fd1\u4f3c\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u5728\u6bcf\u4e2a\u79bb\u6563\u7684\u65f6\u95f4\u6b65 \\(\\Delta t\\) \u5185\uff0c\u7c92\u5b50\u7684\u4f4d\u7f6e\u53d1\u751f\u4e00\u4e2a\u968f\u673a\u4f4d\u79fb\uff1a</p> \\[\\vec{X}(t+\\Delta t) = \\vec{X}(t) + \\sqrt{2D\\Delta t} \\cdot \\vec{\\eta}\\] <p>\u5176\u4e2d \\(\\vec{\\eta}\\) \u662f\u4e00\u4e2a\u4e8c\u7ef4\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u968f\u673a\u5411\u91cf\uff08\u5373\u5176\u5206\u91cf\u662f\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\u7684\u72ec\u7acb\u9ad8\u65af\u968f\u673a\u6570\uff09\u3002</p> <p>\u4e0b\u9762\u7684 Python \u4ee3\u7801\u6a21\u62df\u4e86\u591a\u4e2a\u4ece\u539f\u70b9\u51fa\u53d1\u7684\u4e8c\u7ef4\u968f\u673a\u884c\u8d70\u8f68\u8ff9\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n\n# --- Simulation parameters ---\nn_walkers = 10      # Number of particles to simulate\nn_steps = 1000      # Number of steps for each particle\ndt = 0.01           # Time step size\nD = 1.0             # Diffusion coefficient\n\n# --- Simulation process ---\n# Generate random displacements for all steps\n# Shape is (n_walkers, n_steps, 2), representing (particle, step, x/y coordinates)\n# np.random.randn generates standard normal distribution random numbers\nrandom_displacements = np.random.randn(n_walkers, n_steps, 2) * np.sqrt(2 * D * dt)\n\n# Calculate trajectories for each particle\n# np.cumsum(..., axis=1) performs cumulative sum along the time step dimension\n# Initial position is (0,0)\ntrajectories = np.cumsum(random_displacements, axis=1)\n\n# --- Visualization ---\nfig, ax = plt.subplots(figsize=(8, 8))\n\n# Plot trajectory of each particle\nfor i in range(n_walkers):\n    # trajectories[i, :, 0] is all x coordinates of particle i\n    # trajectories[i, :, 1] is all y coordinates of particle i\n    ax.plot(trajectories[i, :, 0], trajectories[i, :, 1], alpha=0.7)\n\n# Mark start and end points\nstart_points = np.zeros((n_walkers, 2))\nend_points = trajectories[:, -1, :]  # Take the last point of each trajectory\nax.scatter(start_points[:, 0], start_points[:, 1], color='red', s=100, zorder=3, label='Start')\nax.scatter(end_points[:, 0], end_points[:, 1], color='green', s=50, zorder=3, label='End')\n\nax.set_title(f'2D Brownian Motion ({n_walkers} walkers, {n_steps} steps)')\nax.set_xlabel('X Position')\nax.set_ylabel('Y Position')\nax.legend()\nax.grid(True)\nax.set_aspect('equal', adjustable='box')\nplt.show()\n\n# --- Plot distribution of end points ---\nfig_hist, ax_hist = plt.subplots(figsize=(10, 8))\n\n# Increase number of particles to better show Gaussian distribution\nn_walkers_hist = 1000  # Increased number of particles\nrandom_displacements_hist = np.random.randn(n_walkers_hist, n_steps, 2) * np.sqrt(2 * D * dt)\ntrajectories_hist = np.cumsum(random_displacements_hist, axis=1)\nend_points_hist = trajectories_hist[:, -1, :]\n\n# Use more bins and better color mapping to show distribution\nhist_plot = ax_hist.hist2d(end_points_hist[:, 0], end_points_hist[:, 1], bins=50, cmap='hot')\nax_hist.set_title('Distribution of End Points\\n(2D Gaussian Distribution)', fontsize=16)\nax_hist.set_xlabel('Final X Position', fontsize=12)\nax_hist.set_ylabel('Final Y Position', fontsize=12)\nax_hist.set_aspect('equal', adjustable='box')\n\n# Add theoretical contour lines\nx_min, x_max = np.min(end_points_hist[:, 0]), np.max(end_points_hist[:, 0])\ny_min, y_max = np.min(end_points_hist[:, 1]), np.max(end_points_hist[:, 1])\nx = np.linspace(x_min, x_max, 100)\ny = np.linspace(y_min, y_max, 100)\nX, Y = np.meshgrid(x, y)\n# Theoretical variance\nsigma_squared = 2 * D * n_steps * dt\nZ = np.exp(-(X**2 + Y**2) / (2 * sigma_squared))\nax_hist.contour(X, Y, Z, levels=5, colors='blue', alpha=0.6, linewidths=1)\n\n# Add color bar\ncbar = plt.colorbar(hist_plot[3], ax=ax_hist, label='Number of walkers')\ncbar.set_label('Number of walkers', fontsize=12)\n\nplt.tight_layout()\nplt.show()\n\n# --- Plot 1D projection distributions ---\nfig_proj, (ax_x, ax_y) = plt.subplots(1, 2, figsize=(12, 5))\n\n# X-direction projection\nax_x.hist(end_points_hist[:, 0], bins=50, density=True, alpha=0.7, color='skyblue', edgecolor='black', linewidth=0.5)\n# Theoretical X-direction distribution\nsigma = np.sqrt(2 * D * n_steps * dt)\nx_range = np.linspace(np.min(end_points_hist[:, 0]), np.max(end_points_hist[:, 0]), 100)\ngaussian_x = 1/np.sqrt(2*np.pi*sigma**2) * np.exp(-x_range**2/(2*sigma**2))\nax_x.plot(x_range, gaussian_x, 'r-', linewidth=2, label=f'Theoretical Gaussian\\n$\\\\sigma^2 = {sigma**2:.2f}$')\nax_x.set_xlabel('X Position')\nax_x.set_ylabel('Probability Density')\nax_x.set_title('X Distribution')\nax_x.legend()\nax_x.grid(True, alpha=0.3)\n\n# Y-direction projection\nax_y.hist(end_points_hist[:, 1], bins=50, density=True, alpha=0.7, color='lightcoral', edgecolor='black', linewidth=0.5)\nax_y.plot(x_range, gaussian_x, 'r-', linewidth=2, label=f'Theoretical Gaussian\\n$\\\\sigma^2 = {sigma**2:.2f}$')\nax_y.set_xlabel('Y Position')\nax_y.set_ylabel('Probability Density')\nax_y.set_title('Y Distribution')\nax_y.legend()\nax_y.grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n\n# --- Create Brownian motion animation ---\nfig_anim, ax_anim = plt.subplots(figsize=(8, 8))\n\n# Set animation parameters\nn_frames = 200  # Number of animation frames\nstep_interval = n_steps // n_frames  # Steps between each frame\n\n# Initialize animation elements\nlines = [ax_anim.plot([], [], alpha=0.7)[0] for _ in range(n_walkers)]\npoints = ax_anim.scatter([], [], color='red', s=50, zorder=3)\n\n# Set axes\nax_anim.set_xlim(np.min(trajectories[:, :, 0]), np.max(trajectories[:, :, 0]))\nax_anim.set_ylim(np.min(trajectories[:, :, 1]), np.max(trajectories[:, :, 1]))\nax_anim.set_title('2D Brownian Motion Animation')\nax_anim.set_xlabel('X Position')\nax_anim.set_ylabel('Y Position')\nax_anim.grid(True)\nax_anim.set_aspect('equal', adjustable='box')\n\ndef animate(frame):\n    # Calculate which step to display for current frame\n    step = min(frame * step_interval, n_steps - 1)\n\n    # Update each trajectory\n    for i in range(n_walkers):\n        lines[i].set_data(trajectories[i, :step, 0], trajectories[i, :step, 1])\n\n    # Update current point positions\n    current_points = trajectories[:, step, :]\n    points.set_offsets(current_points)\n\n    ax_anim.set_title(f'2D Brownian Motion (Step {step}/{n_steps})')\n    return lines + [points]\n\n# Create animation\nanim = FuncAnimation(fig_anim, animate, frames=n_frames, interval=50, blit=False, repeat=True)\nplt.show()\n\n# Save animation as GIF\ntry:\n    import imageio\n    import io\n    from PIL import Image\n\n    print(\"Saving Brownian motion animation as GIF file...\")\n\n    # Create temporary image list\n    images = []\n\n    # Generate animation frames\n    for frame in range(0, n_frames, 2):  # Take every other frame to reduce file size\n        animate(frame)\n        fig_anim.canvas.draw()\n\n        # Convert figure to image\n        buf = io.BytesIO()\n        fig_anim.savefig(buf, format='png', dpi=100)\n        buf.seek(0)\n        img = Image.open(buf)\n        images.append(img)\n\n        if frame % 20 == 0:\n            print(f\"Processed {frame}/{n_frames} frames\")\n\n    # Save as GIF\n    images[0].save('brownian_motion.gif', save_all=True, append_images=images[1:], \n                   duration=100, loop=0)\n    print(\"Animation saved as brownian_motion.gif\")\n\nexcept ImportError:\n    print(\"Missing libraries required to save GIF (imageio or PIL), please install: pip install imageio pillow\")\n\nplt.show()\n</code></pre> <p></p> <p>10\u4e2a\u72ec\u7acb\u7684\u201c\u968f\u673a\u6f2b\u6b65\u8005\u201d\uff08walkers\uff09\u4ece\u540c\u4e00\u4e2a\u4e2d\u5fc3\u70b9\uff08\u7ea2\u8272\u5706\u70b9\uff09\u51fa\u53d1\uff0c\u7ecf\u8fc71000\u4e2a\u65f6\u95f4\u6b65\u540e\u7684\u8fd0\u52a8\u8f68\u8ff9\u3002\u6bcf\u4e00\u6761\u5f69\u8272\u66f2\u7ebf\u90fd\u4ee3\u8868\u4e86\u4e00\u4e2a\u7c92\u5b50\u53ef\u80fd\u7ecf\u5386\u7684\u4e00\u79cd\u72ec\u7279\u5386\u53f2\u8def\u5f84\u3002\u8fd9\u5f20\u56fe\u6b63\u662f\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u6240\u63cf\u8ff0\u7684\u5fae\u89c2\u57fa\u7840\u3002\u65b9\u7a0b\u672c\u8eab\u5e76\u4e0d\u5173\u5fc3\u67d0\u4e00\u6761\u5177\u4f53\u7684\u3001\u66f2\u6298\u7684\u8def\u5f84\uff0c\u800c\u662f\u81f4\u529b\u4e8e\u63cf\u8ff0\u5927\u91cf\u6b64\u7c7b\u8def\u5f84\u5728\u7edf\u8ba1\u4e0a\u5171\u540c\u5f62\u6210\u7684\u201c\u6982\u7387\u4e91\u201d\u662f\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u7684\u3002</p> <p>\u4e3a\u4e86\u4ece\u6742\u4e71\u7684\u4e2a\u4f53\u8f68\u8ff9\u4e2d\u6d1e\u5bdf\u96c6\u4f53\u7684\u7edf\u8ba1\u89c4\u5f8b\uff0c\u6211\u4eec\u628a\u6a21\u62df\u7684\u7c92\u5b50\u6570\u91cf\u589e\u52a0\u523010000\u4e2a\uff0c\u5e76\u53ea\u5173\u6ce8\u5b83\u4eec\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002\u8fd9\u5f20\u56fe\u4ee5\u201c\u70ed\u56fe\u201d\uff08heatmap\uff09\u7684\u5f62\u5f0f\u5c55\u793a\u4e86\u8fd9\u4e9b\u7ec8\u70b9\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u5206\u5e03\u5bc6\u5ea6\u3002\u6574\u4e2a\u5206\u5e03\u5448\u73b0\u51fa\u4e00\u79cd\u5706\u5f62\u7684\u3001\u4e2d\u5fc3\u5bc6\u96c6\u3001\u5411\u5916\u9010\u6e10\u7a00\u758f\u7684\u5f62\u6001\u3002\u8fd9\u6b63\u662f\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u5728\u6ca1\u6709\u5916\u90e8\u529b\uff08\u6f02\u79fb\u9879\u4e3a\u96f6\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u4ece\u4e00\u4e2a\u70b9\u6e90\uff08delta\u51fd\u6570\u521d\u59cb\u6761\u4ef6\uff09\u6f14\u5316\u51fa\u7684\u89e3\u2014\u2014\u4e00\u4e2a\u4e8c\u7ef4\u9ad8\u65af\u5206\u5e03\u3002\u56fe\u4e2d\u53e0\u52a0\u7684\u84dd\u8272\u540c\u5fc3\u5706\u662f\u7406\u8bba\u9884\u6d4b\u7684\u4e8c\u7ef4\u9ad8\u65af\u5206\u5e03\u7684\u7b49\u9ad8\u7ebf\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6a21\u62df\u6570\u636e\uff08\u70ed\u56fe\uff09\u4e0e\u7406\u8bba\u9884\u6d4b\uff08\u7b49\u9ad8\u7ebf\uff09\u543b\u5408\uff0c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u7cbe\u786e\u5730\u6355\u6349\u4e86\u6269\u6563\u8fc7\u7a0b\u7684\u5b8f\u89c2\u7edf\u8ba1\u884c\u4e3a\u3002</p> <p>\u8fd9\u5f20\u56fe\u662f\u8fde\u63a5\u5fae\u89c2\u968f\u673a\u6027\u4e0e\u5b8f\u89c2\u786e\u5b9a\u6027\u7684\u6865\u6881\u3002\u867d\u7136\u5355\u4e2a\u7c92\u5b50\u7684\u7ec8\u70b9\u65e0\u6cd5\u9884\u6d4b\uff0c\u4f46\u5927\u91cf\u7c92\u5b50\u7684\u7ec8\u70b9\u5206\u5e03\u5374\u9075\u5faa\u4e00\u4e2a\u975e\u5e38\u786e\u5b9a\u7684\u6570\u5b66\u89c4\u5f8b\u3002</p> <p>\u4e3a\u4e86\u66f4\u5b9a\u91cf\u5730\u5206\u6790\u8fd9\u4e2a\u4e8c\u7ef4\u9ad8\u65af\u5206\u5e03\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5206\u522b\u6295\u5f71\u5230X\u8f74\u548cY\u8f74\u4e0a\uff0c\u5f97\u5230\u4e24\u4e2a\u4e00\u7ef4\u7684\u6982\u7387\u5bc6\u5ea6\u5206\u5e03\u56fe\u3002\u5de6\u56fe\uff08\u84dd\u8272\uff09\u663e\u793a\u4e86\u6240\u6709\u7c92\u5b50\u6700\u7ec8X\u5750\u6807\u7684\u5206\u5e03\uff0c\u53f3\u56fe\uff08\u7c89\u8272\uff09\u663e\u793a\u4e86\u6700\u7ec8Y\u5750\u6807\u7684\u5206\u5e03\u3002\u4e24\u4e2a\u6295\u5f71\u56fe\u90fd\u6e05\u6670\u5730\u5448\u73b0\u51fa\u7ecf\u5178\u7684\u4e00\u7ef4\u9ad8\u65af\u5206\u5e03\uff08\u201c\u949f\u5f62\u66f2\u7ebf\u201d\uff09\u5f62\u6001\u3002\u8fd9\u8868\u660e\uff0c\u867d\u7136\u7c92\u5b50\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u8fd0\u52a8\uff0c\u4f46\u5b83\u5728\u4efb\u4f55\u4e00\u4e2a\u6b63\u4ea4\u65b9\u5411\u4e0a\u7684\u4f4d\u79fb\u5206\u91cf\u90fd\u9075\u5faa\u72ec\u7acb\u7684\u4e00\u7ef4\u5e03\u6717\u8fd0\u52a8\u89c4\u5f8b\u3002</p>"},{"location":"zh/notes/11.%20%E8%BF%9E%E7%BB%AD%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E4%B8%8E%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B/#_2","title":"\u603b\u7ed3","text":"<p>\u6211\u4eec\u5df2\u7ecf\u5206\u522b\u8ba8\u8bba\u4e86\u7eaf\u8df3\u8dc3\u8fc7\u7a0b\u548c\u7eaf\u6269\u6563\u8fc7\u7a0b\u3002\u7136\u800c\uff0c\u6b63\u5982\u7ec6\u83cc\u7684\"\u5954\u8dd1-\u7ffb\u6eda\"\u8fd0\u52a8\u6240\u5c55\u793a\u7684\uff0c\u8bb8\u591a\u771f\u5b9e\u4e16\u754c\u7684\u7cfb\u7edf\u540c\u65f6\u5305\u542b\u4e86\u8fd9\u4e24\u79cd\u52a8\u529b\u5b66\u7279\u5f81\u3002\u4e3a\u4e86\u63cf\u8ff0\u8fd9\u7c7b\u6df7\u5408\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u524d\u9762\u63a8\u5bfc\u51fa\u7684\u4e24\u79cd\u65b9\u7a0b\u7ed3\u5408\u8d77\u6765\u3002</p> <p>\u4e00\u4e2a\u7cfb\u7edf\u5728\u72b6\u6001 \\(\\vec{x}\\) \u7684\u6982\u7387\u5bc6\u5ea6 \\(P(\\vec{x},t)\\) \u7684\u53d8\u5316\uff0c\u65e2\u53ef\u4ee5\u6765\u81ea\u4e8e\u5c40\u90e8\u7684\u6f02\u79fb\u548c\u6269\u6563\uff0c\u4e5f\u53ef\u4ee5\u6765\u81ea\u4e8e\u4e0e\u5176\u4ed6\u4f4d\u7f6e\u7684\u975e\u5c40\u90e8\u8df3\u8dc3\u3002\u56e0\u6b64\uff0c\u603b\u7684\u6f14\u5316\u65b9\u7a0b\u662f\u798f\u514b-\u666e\u6717\u514b\u9879\u548c\u8fde\u7eed\u4e3b\u65b9\u7a0b\u9879\u7684\u7b80\u5355\u52a0\u548c\uff1a</p> \\[\\partial_t P(\\vec{x},t|\\cdot) = \\underbrace{-\\partial_i[A_i(\\vec{x},t)P] + \\frac{1}{2}\\partial_i \\partial_j [B_{ij}(\\vec{x},t)P]}_{\\text{\u6f02\u79fb\u4e0e\u6269\u6563 (Fokker-Planck)}} + \\underbrace{\\int dx'[w(\\vec{x}|\\vec{x}';t)P(\\vec{x}',t|\\cdot) - w(\\vec{x}'|\\vec{x};t)P(\\vec{x},t|\\cdot)]}_{\\text{\u8df3\u8dc3 (Master Equation)}}\\] <p>\u8fd9\u4e2a\u901a\u7528\u65b9\u7a0b\u4e3a\u63cf\u8ff0\u5177\u6709\u8fde\u7eed\u72b6\u6001\u7a7a\u95f4\uff0c\u4f46\u6837\u672c\u8def\u5f84\u540c\u65f6\u5305\u542b\u8fde\u7eed\u548c\u4e0d\u8fde\u7eed\u90e8\u5206\u7684\u590d\u6742\u968f\u673a\u8fc7\u7a0b\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u800c\u5f3a\u5927\u7684\u6846\u67b6\u3002</p> <p>\u8fd9\u8282\u8bfe\u6211\u4eec\u5b8c\u6210\u4e86\u4ece\u79bb\u6563\u5230\u8fde\u7eed\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u63a8\u5e7f\uff0c\u8fd9\u662f\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u6982\u5ff5\u98de\u8dc3\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u6839\u636e\u6837\u672c\u8def\u5f84\u7684\u6027\u8d28\uff0c\u8fde\u7eed\u7a7a\u95f4\u4e2d\u7684\u968f\u673a\u8fc7\u7a0b\u53ef\u4ee5\u88ab\u533a\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a</p> <ol> <li> <p>\u8df3\u8dc3\u8fc7\u7a0b\uff1a\u7531\u8fde\u7eed\u7a7a\u95f4\u4e3b\u65b9\u7a0b\u63cf\u8ff0\uff0c\u5176\u6838\u5fc3\u662f\u5b9a\u4e49\u4e86\u72b6\u6001\u95f4\u7684\u8f6c\u79fb\u901f\u7387\u5bc6\u5ea6\u3002</p> </li> <li> <p>\u6269\u6563\u8fc7\u7a0b\uff1a\u7531\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u63cf\u8ff0\uff0c\u5176\u6838\u5fc3\u662f\u5b9a\u4e49\u4e86\u5fae\u89c2\u968f\u673a\u8fd0\u52a8\u7684\u6f02\u79fb\u548c\u6269\u6563\u7cfb\u6570\u3002</p> </li> </ol>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/","title":"\u5f15\u8a00\uff1a\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u4f5c\u4e3a\u603b\u6846\u67b6","text":"<p>\u4e0a\u8282\u8bfe\u6559\u6388\u4ecb\u7ecd\u4e86\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b (Fokker-Planck Equation, FPE)\u3002\u8fd9\u4e2a\u65b9\u7a0b\u4e3a\u63cf\u8ff0\u8fde\u7eed\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u4e2d\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7684\u6f14\u5316\u63d0\u4f9b\u4e86\u4e00\u4e2a\u666e\u9002\u800c\u5f3a\u5927\u7684\u6570\u5b66\u6846\u67b6\u3002</p> <p>\u4e00\u7ef4\u7cfb\u7edf\u4e2d\u7684\u901a\u7528\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u53ef\u4ee5\u5199\u4e3a\u4ee5\u4e0b\u5f62\u5f0f\uff1a</p> \\[\\frac{\\partial P(x,t)}{\\partial t} = -\\frac{\\partial}{\\partial x}[A(x)P(x,t)] + D(x)\\frac{\\partial^2}{\\partial x^2}P(x,t)\\] <p>\u5176\u4e2d\uff0c\\(P(x,t)\\) \u662f\u7c92\u5b50\u5728\u65f6\u523b \\(t\\) \u4f4d\u4e8e\u4f4d\u7f6e \\(x\\) \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u3002\u8fd9\u4e2a\u65b9\u7a0b\u7531\u4e24\u4e2a\u6838\u5fc3\u90e8\u5206\u7ec4\u6210\uff0c\u5b83\u4eec\u5206\u522b\u63cf\u8ff0\u4e86\u9a71\u52a8\u7c92\u5b50\u8fd0\u52a8\u7684\u4e24\u79cd\u57fa\u672c\u7269\u7406\u8fc7\u7a0b\uff1a</p> <ol> <li> <p>\u6f02\u79fb\u9879 (Drift Term)\uff1a\u7531\u7cfb\u6570 \\(A(x)\\) \u63cf\u8ff0\u3002\u8fd9\u4e00\u9879\u4ee3\u8868\u4e86\u4f5c\u7528\u5728\u7c92\u5b50\u4e0a\u7684\u786e\u5b9a\u6027\u3001\u7cfb\u7edf\u6027\u7684\u5f71\u54cd\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u529b\u3002\u5b83\u63cf\u8ff0\u4e86\u7c92\u5b50\u5728\u4f4d\u7f6e \\(x\\) \u5904\u7684\u5e73\u5747\u901f\u5ea6\uff0c\u503e\u5411\u4e8e\u5c06\u6982\u7387\u5206\u5e03\u7684\u4e2d\u5fc3\"\u63a8\"\u5411\u67d0\u4e2a\u7279\u5b9a\u7684\u65b9\u5411\u6216\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u91cd\u529b\u4f1a\u4f7f\u7c92\u5b50\u5411\u4e0b\u6f02\u79fb\uff0c\u5f39\u7c27\u7684\u6062\u590d\u529b\u4f1a\u4f7f\u7c92\u5b50\u5411\u5e73\u8861\u4f4d\u7f6e\u6f02\u79fb\u3002</p> </li> <li> <p>\u6269\u6563\u9879 (Diffusion Term)\uff1a\u7531\u7cfb\u6570 \\(D(x)\\) \u63cf\u8ff0\u3002\u8fd9\u4e00\u9879\u4ee3\u8868\u4e86\u968f\u673a\u3001\u5076\u7136\u7684\u5f71\u54cd\uff0c\u91cf\u5316\u4e86\u7c92\u5b50\u53d7\u5230\u7684\u968f\u673a\"\u8e22\u52a8\"\u7684\u5f3a\u5ea6\u3002\u5b83\u6e90\u4e8e\u7cfb\u7edf\u73af\u5883\uff08\u5982\u6db2\u4f53\u4e2d\u7684\u5206\u5b50\uff09\u7684\u70ed\u6da8\u843d\uff0c\u5e76\u5bfc\u81f4\u6982\u7387\u5206\u5e03\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\"\u94fa\u5f00\"\u6216\u5f25\u6563\u3002\u6269\u6563\u7cfb\u6570 \\(D(x)\\) \u4e0e\u7c92\u5b50\u4f4d\u79fb\u7684\u65b9\u5dee\u76f4\u63a5\u76f8\u5173\u3002</p> </li> </ol> <p>\u90a3\u4e48\uff0c\u8fd9\u4e2a\u65b9\u7a0b\u4ece\u4f55\u800c\u6765\uff1f\u5b83\u5e76\u975e\u51ed\u7a7a\u4ea7\u751f\uff0c\u800c\u662f\u57fa\u4e8e\u6df1\u523b\u7684\u7269\u7406\u5047\u8bbe\u3002\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u53ef\u4ee5\u4ece\u66f4\u57fa\u672c\u7684\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b\uff08Chapman-Kolmogorov equation\uff09\u51fa\u53d1\uff0c\u901a\u8fc7\u6240\u8c13\u7684\u514b\u83b1\u9ed8\u65af-\u83ab\u4e9a\u5c14\u5c55\u5f00\uff08Kramers-Moyal expansion\uff09\u63a8\u5bfc\u5f97\u51fa\u3002\u8fd9\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u7684\u5173\u952e\u4e00\u6b65\u662f\u505a\u51fa\u4e00\u4e2a\u7269\u7406\u4e0a\u7684\u7b80\u5316\uff1a\u6211\u4eec\u5047\u8bbe\u5728\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u65f6\u95f4\u6b65\u957f \\(\\Delta t\\) \u5185\uff0c\u53ea\u6709\u7c92\u5b50\u4f4d\u79fb\u7684\u4e00\u9636\u77e9\uff08\u5e73\u5747\u4f4d\u79fb\uff0c\u4e0e\u6f02\u79fb\u76f8\u5173\uff09\u548c\u4e8c\u9636\u77e9\uff08\u5747\u65b9\u4f4d\u79fb\uff0c\u4e0e\u6269\u6563\u76f8\u5173\uff09\u662f\u663e\u8457\u7684\uff0c\u800c\u6240\u6709\u66f4\u9ad8\u9636\u7684\u77e9\uff08\u5982 \\(\\langle(\\Delta x)^3\\rangle\\) \u7b49\uff09\u90fd\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002</p> <p>\u8fd9\u4e00\u5047\u8bbe\u5728\u7269\u7406\u4e0a\u662f\u6781\u5176\u5408\u7406\u7684\uff0c\u5b83\u7cbe\u786e\u5730\u5bf9\u5e94\u4e86\u8fd9\u6837\u4e00\u7c7b\u8fc7\u7a0b\uff1a\u7cfb\u7edf\u7684\u6f14\u5316\u662f\u7531\u5927\u91cf\u3001\u5fae\u5c0f\u3001\u72ec\u7acb\u7684\u968f\u673a\u4e8b\u4ef6\uff08\u4f8b\u5982\uff0c\u5e03\u6717\u7c92\u5b50\u4e0e\u6c34\u5206\u5b50\u7684\u65e0\u6570\u6b21\u78b0\u649e\uff09\u7d2f\u79ef\u800c\u6210\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u4fdd\u8bc1\u4e86\u603b\u7684\u4f4d\u79fb\u8d8b\u5411\u4e8e\u4e00\u4e2a\u9ad8\u65af\u8fc7\u7a0b\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u4ece\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u51fa\u53d1\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u5c06\u6211\u4eec\u7684\u7814\u7a76\u8303\u56f4\u9650\u5b9a\u5728\u4e00\u4e2a\u7531\u5e73\u6ed1\u7684\u786e\u5b9a\u6027\u529b\u548c\u7ec6\u7c92\u5ea6\u7684\u3001\u7c7b\u4f3c\u9ad8\u65af\u7684\u566a\u58f0\u5171\u540c\u9a71\u52a8\u7684\u7269\u7406\u73b0\u8c61\u7c7b\u522b\u4e2d\u3002</p> <p></p> <p>\u8fd9\u8282\u8bfe\u5c06\u8981\u63a2\u8ba8\u7684\u7ef4\u7eb3\u8fc7\u7a0b\uff08Wiener Process\uff09\u548c\u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b\u8fc7\u7a0b\uff08Ornstein-Uhlenbeck Process\uff09\uff0c\u6b63\u662f\u8fd9\u4e2a\u5b8f\u5927\u6846\u67b6\u4e0b\u4e24\u4e2a\u6700\u57fa\u672c\u3001\u6700\u91cd\u8981\u7684\u7279\u4f8b\u3002\u5b83\u4eec\u5206\u522b\u5bf9\u5e94\u4e86\u6700\u7eaf\u7cb9\u7684\u6269\u6563\u548c\u6269\u6563\u4e0e\u7ebf\u6027\u6062\u590d\u529b\u76f8\u7ed3\u5408\u7684\u60c5\u5f62\uff0c\u901a\u8fc7\u5bf9\u5b83\u4eec\u7684\u7814\u7a76\uff0c\u6211\u4eec\u5c06\u80fd\u63ed\u793a\u968f\u673a\u8fc7\u7a0b\u4e2d\u6700\u6df1\u523b\u7684\u7269\u7406\u89c4\u5f8b\u3002</p>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#1","title":"1. \u7ef4\u7eb3\u8fc7\u7a0b\u2014\u2014\u7eaf\u7cb9\u6269\u6563\u7684\u539f\u578b","text":"<p>\u7ef4\u7eb3\u8fc7\u7a0b\u662f\u5e03\u6717\u8fd0\u52a8\uff08Brownian Motion\uff09\u5728\u6570\u5b66\u4e0a\u7684\u4e25\u8c28\u8868\u8ff0\uff0c\u5b83\u662f\u968f\u673a\u8fc7\u7a0b\u7406\u8bba\u7684\u57fa\u77f3\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7c92\u5b50\u5728\u6ca1\u6709\u4efb\u4f55\u5916\u529b\u6216\u52bf\u573a\u5f15\u5bfc\u7684\u60c5\u51b5\u4e0b\uff0c\u4ec5\u7531\u73af\u5883\u7684\u70ed\u6da8\u843d\u9a71\u52a8\u800c\u8fdb\u884c\u7684\u968f\u673a\u8fd0\u52a8\u3002</p>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#11","title":"1.1 \u57fa\u7840\u6027\u8d28","text":"<p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u7c92\u5b50\u5728\u65e0\u7a77\u5c0f\u65f6\u95f4\u95f4\u9694 \\(\\Delta t\\) \u5185\u4f4d\u79fb \\(\\Delta x\\) \u7684\u77e9\uff08moments\uff09\u6765\u7cbe\u786e\u523b\u753b\u7ef4\u7eb3\u8fc7\u7a0b\uff1a</p> <p>\u96f6\u6f02\u79fb (Zero Drift)\uff1a</p> \\[   A = \\lim_{\\Delta t \\to 0} \\frac{\\langle \\Delta x \\rangle}{\\Delta t} = 0 \\] <p>\u8fd9\u4e2a\u6761\u4ef6\u7684\u7269\u7406\u610f\u4e49\u662f\uff0c\u7c92\u5b50\u7684\u8fd0\u52a8\u6ca1\u6709\u7cfb\u7edf\u6027\u7684\u504f\u597d\u65b9\u5411\u3002\u5728\u4efb\u4f55\u65f6\u523b\uff0c\u5b83\u5411\u5de6\u79fb\u52a8\u548c\u5411\u53f3\u79fb\u52a8\u7684\u6982\u7387\u662f\u5b8c\u5168\u76f8\u7b49\u7684\u3002\u56e0\u6b64\uff0c\u5bf9\u5927\u91cf\u7c92\u5b50\u8fdb\u884c\u5e73\u5747\uff0c\u5b83\u4eec\u7684\u5e73\u5747\u4f4d\u79fb\u59cb\u7ec8\u4e3a\u96f6\u3002\u7c92\u5b50\u867d\u7136\u5728\u4e0d\u505c\u5730\u8fd0\u52a8\uff0c\u4f46\"\u5e73\u5747\u800c\u8a00\uff0c\u5b83\u54ea\u513f\u4e5f\u6ca1\u53bb\"\u3002</p> <p>\u6052\u5b9a\u6269\u6563 (Constant Diffusion)\uff1a</p> \\[   B = \\lim_{\\Delta t \\to 0} \\frac{\\langle (\\Delta x)^2 \\rangle}{\\Delta t} = 2D \\] <p>\u5176\u4e2d \\(D\\) \u662f\u4e00\u4e2a\u6b63\u5e38\u6570\uff0c\u88ab\u79f0\u4e3a\u6269\u6563\u7cfb\u6570 (diffusion coefficient)\u3002\u8fd9\u4e2a\u6761\u4ef6\u662f\u7ef4\u7eb3\u8fc7\u7a0b\u7684\u6838\u5fc3\u7279\u5f81\u3002\u5b83\u8868\u660e\uff0c\u7c92\u5b50\u7684\u5747\u65b9\u4f4d\u79fb\uff08mean squared displacement, MSD\uff09\u4e0e\u65f6\u95f4\u6210\u6b63\u6bd4\uff1a\\(\\langle(\\Delta x)^2\\rangle = 2D\\Delta t\\)\u3002\u8fd9\u63ed\u793a\u4e86\u6269\u6563\u8fc7\u7a0b\u7684\u4e00\u4e2a\u6df1\u523b\u672c\u8d28\uff1a\u867d\u7136\u7c92\u5b50\u7684\u5e73\u5747\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u4f46\u5176\u8fd0\u52a8\u8303\u56f4\uff08\u6216\u8005\u8bf4\u4f4d\u7f6e\u7684\u4e0d\u786e\u5b9a\u6027\uff09\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u5e73\u65b9\u6839\u7a33\u5b9a\u5730\u589e\u957f\u3002\u6269\u6563\u7cfb\u6570 \\(D\\) \u7684\u91cf\u7eb2\u662f [\u957f\u5ea6]\\(^2\\)/[\u65f6\u95f4]\uff0c\u5b83\u91cf\u5316\u4e86\u8fd9\u79cd\u4e0d\u786e\u5b9a\u6027\u533a\u57df\u6269\u5f20\u7684\u901f\u5ea6\u3002</p> <p>\u5c06\u8fd9\u4e24\u4e2a\u6761\u4ef6\uff08\\(A(x)=0\\) \u548c \\(D(x)=D\\) \u4e3a\u5e38\u6570\uff09\u4ee3\u5165\u901a\u7528\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff0c\u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u63cf\u8ff0\u7ef4\u7eb3\u8fc7\u7a0b\u7684\u504f\u5fae\u5206\u65b9\u7a0b\uff0c\u5373\u6269\u6563\u65b9\u7a0b (Diffusion Equation)\uff1a</p> \\[\\frac{\\partial P(x,t|x_0,t_0)}{\\partial t} = D \\frac{\\partial^2}{\\partial x^2} P(x,t|x_0,t_0)\\]"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#12","title":"1.2 \u6269\u6563\u65b9\u7a0b\u53ca\u5176\u89e3","text":"<p>\u6269\u6563\u65b9\u7a0b\u63cf\u8ff0\u4e86\u5728\u6ca1\u6709\u6f02\u79fb\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u6982\u7387\u5206\u5e03\u5982\u4f55\u7eaf\u7cb9\u56e0\u4e3a\u968f\u673a\u8fd0\u52a8\u800c\u968f\u65f6\u95f4\u6f14\u5316\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5728 \\(t_0\\) \u65f6\u523b\u786e\u5b9a\u4f4d\u4e8e \\(x_0\\) \u7684\u7c92\u5b50\uff08\u5373\u521d\u59cb\u6761\u4ef6\u4e3a \\(P(x,t_0|x_0,t_0)=\\delta(x-x_0)\\)\uff09\uff0c\u8fd9\u4e2a\u65b9\u7a0b\u7684\u89e3\u662f\u4e00\u4e2a\u9ad8\u65af\u51fd\u6570\uff08\u6b63\u6001\u5206\u5e03\uff09\uff1a</p> \\[P(x,t|x_0,t_0) = \\frac{1}{\\sqrt{4\\pi D(t-t_0)}} \\exp\\left(-\\frac{(x-x_0)^2}{4D(t-t_0)}\\right)\\] <p>\u8fd9\u4e2a\u89e3\u5b8c\u7f8e\u5730\u4f53\u73b0\u4e86\u7ef4\u7eb3\u8fc7\u7a0b\u7684\u7edf\u8ba1\u7279\u6027\uff1a</p> <ul> <li> <p>\u5747\u503c (Mean)\uff1a\u8be5\u9ad8\u65af\u5206\u5e03\u7684\u4e2d\u5fc3\uff08\u5cf0\u503c\uff09\u59cb\u7ec8\u4f4d\u4e8e\u521d\u59cb\u4f4d\u7f6e \\(x_0\\)\u3002\u8fd9\u4e0e\u96f6\u6f02\u79fb\u7684\u6027\u8d28\u76f8\u7b26\uff0c\u5373 \\(\\langle x(t) \\rangle = x_0\\)\u3002</p> </li> <li> <p>\u65b9\u5dee (Variance)\uff1a\u8be5\u9ad8\u65af\u5206\u5e03\u7684\u65b9\u5dee\u4e3a \\(\\sigma^2(t) = 2D(t-t_0)\\)\u3002\u65b9\u5dee\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u957f\uff0c\u8fd9\u610f\u5473\u7740\u6982\u7387\u5206\u5e03\u7684\u5bbd\u5ea6\uff08\u4ee5\u6807\u51c6\u5dee \\(\\sigma(t) = \\sqrt{2D(t-t_0)}\\) \u8861\u91cf\uff09\u968f\u65f6\u95f4\u7684\u5e73\u65b9\u6839\u589e\u957f\u3002\u8fd9\u6b63\u662f\u5747\u65b9\u4f4d\u79fb\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u957f\u7684\u76f4\u63a5\u4f53\u73b0\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u627e\u5230\u7c92\u5b50\u7684\u533a\u57df\u8d8a\u6765\u8d8a\u5e7f\uff0c\u6211\u4eec\u5bf9\u5b83\u7684\u4f4d\u7f6e\u7684\u9884\u6d4b\u4e5f\u8d8a\u6765\u8d8a\u4e0d\u786e\u5b9a\u3002</p> </li> </ul>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#13-ipython","title":"1.3 \u8ba1\u7b97\u5b9e\u9a8c\u5ba4 I\uff1a\u7528Python\u6a21\u62df\u5e03\u6717\u8fd0\u52a8","text":"<p>\u8ba1\u7b97\u673a\u6a21\u62df\u80fd\u8ba9\u6211\u4eec\u66f4\u76f4\u89c2\u5730\u611f\u53d7\u5355\u4e2a\u7c92\u5b50\u7684\u968f\u673a\u8f68\u8ff9\u4ee5\u53ca\u5927\u91cf\u7c92\u5b50\u6784\u6210\u7684\u7cfb\u7efc\uff08ensemble\uff09\u7684\u96c6\u4f53\u884c\u4e3a\u3002\u4e3a\u4e86\u6a21\u62df\u7ef4\u7eb3\u8fc7\u7a0b\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u5176\u5bf9\u5e94\u7684\u968f\u673a\u5fae\u5206\u65b9\u7a0b (Stochastic Differential Equation, SDE)\uff1a</p> \\[dX(t) = \\sqrt{2D} \\, dW(t)\\] <p>\u8fd9\u91cc\uff0c\\(X(t)\\) \u662f\u7c92\u5b50\u7684\u4f4d\u7f6e\uff0c\\(dW(t)\\) \u662f\u7ef4\u7eb3\u8fc7\u7a0b\u7684\u65e0\u7a77\u5c0f\u589e\u91cf\u3002\u8fd9\u4e2a\u589e\u91cf\u662f\u4e00\u4e2a\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a \\(dt\\) \u7684\u9ad8\u65af\u968f\u673a\u53d8\u91cf\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6b27\u62c9-\u4e38\u5c71\u65b9\u6cd5 (Euler-Maruyama method) \u5bf9\u8fd9\u4e2aSDE\u8fdb\u884c\u6570\u503c\u6c42\u89e3\u3002\u8fd9\u662f\u4e00\u79cd\u5c06\u8fde\u7eed\u65f6\u95f4\u8fc7\u7a0b\u79bb\u6563\u5316\u7684\u7b80\u5355\u800c\u6709\u6548\u7684\u65b9\u6cd5\u3002\u5176\u66f4\u65b0\u89c4\u5219\u5982\u4e0b\uff1a</p> \\[X(t+\\Delta t) = X(t) + \\sqrt{2D\\Delta t} \\cdot N(0,1)\\] <p>\u5176\u4e2d\uff0c\\(N(0,1)\\) \u662f\u4ece\u5747\u503c\u4e3a0\u3001\u65b9\u5dee\u4e3a1\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u4e2d\u62bd\u53d6\u7684\u4e00\u4e2a\u968f\u673a\u6570\u3002\u8fd9\u4e2a\u66f4\u65b0\u89c4\u5219\u76f4\u63a5\u5b9e\u73b0\u4e86\u5e03\u6717\u8fd0\u52a8\u589e\u91cf\u7684\u6838\u5fc3\u6027\u8d28\uff1a\u4f4d\u79fb\u7684\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a \\(2D\\Delta t\\)\u3002</p> <p>1\uff1a\u5355\u4e2a\u5e03\u6717\u8fd0\u52a8\u8f68\u8ff9\u7684\u6a21\u62df</p> <p>\u4e0b\u9762\u7684Python\u4ee3\u7801\u6a21\u62df\u5e76\u7ed8\u5236\u4e86\u51e0\u4e2a\u72ec\u7acb\u7684\u5e03\u6717\u8fd0\u52a8\u8f68\u8ff9\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# Solve Chinese display issue\nplt.rcParams['font.sans-serif'] = ['SimHei']  # Used to properly display Chinese labels\nplt.rcParams['axes.unicode_minus'] = False    # Used to properly display minus sign\n\n# --- Parameter settings ---\nD = 1.0          # Diffusion coefficient (m^2/s)\nT = 10.0         # Total simulation time (s)\ndt = 0.01        # Time step (s)\nnum_steps = int(T / dt) # Total steps\nnum_particles = 5 # Number of particles to simulate\n\n# --- Simulation process ---\n# Create time axis\nt = np.linspace(0, T, num_steps + 1)\n# Initialize particle position array, all particles start at x=0\nx = np.zeros((num_particles, num_steps + 1))\n\n# Euler-Maruyama method for iteration\nfor i in range(num_steps):\n    # Generate random increment\n    random_increment = np.random.randn(num_particles)\n    # Update positions of all particles\n    x[:, i+1] = x[:, i] + np.sqrt(2 * D * dt) * random_increment\n\n# --- Results visualization ---\nplt.figure(figsize=(12, 7))\nfor i in range(num_particles):\n    plt.plot(t, x[i, :], label=f'Particle {i+1}')\n\nplt.title('Trajectories of 5 Independent Brownian Motion Particles (Wiener Process)', fontsize=16)\nplt.xlabel('Time (s)', fontsize=14)\nplt.ylabel('Position (m)', fontsize=14)\nplt.grid(True, linestyle='--', alpha=0.6)\nplt.legend()\nplt.savefig('single_brownian_motion_trajectory.png', dpi=300, bbox_inches='tight')\nplt.show()\n</code></pre> </p> <p>\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u6bcf\u4e2a\u7c92\u5b50\u7684\u8f68\u8ff9\u90fd\u662f\u9ad8\u5ea6\u4e0d\u89c4\u5219\u548c\"\u952f\u9f7f\u72b6\"\u7684\u3002\u8fd9\u76f4\u89c2\u5730\u5c55\u793a\u4e86\u7ef4\u7eb3\u8fc7\u7a0b\u7684\u4e00\u4e2a\u6df1\u523b\u6570\u5b66\u7279\u6027\uff1a\u5176\u8def\u5f84\u662f\u5904\u5904\u8fde\u7eed\u4f46\u5904\u5904\u4e0d\u53ef\u5fae\u7684\u3002\u8fde\u7eed\u6027\u610f\u5473\u7740\u7c92\u5b50\u4e0d\u4f1a\u77ac\u65f6\u8df3\u8dc3\uff0c\u800c\u4e0d\u53ef\u5fae\u6027\u5219\u610f\u5473\u7740\u5728\u4efb\u4f55\u65f6\u95f4\u70b9\u90fd\u65e0\u6cd5\u5b9a\u4e49\u4e00\u4e2a\u77ac\u65f6\u901f\u5ea6\u3002\u5982\u679c\u6211\u4eec\u653e\u5927\u8f68\u8ff9\u7684\u4efb\u4f55\u4e00\u5c0f\u6bb5\uff0c\u5b83\u770b\u8d77\u6765\u4ecd\u7136\u548c\u6574\u4f53\u4e00\u6837\u66f2\u6298\uff0c\u6ca1\u6709\u53d8\u5f97\u66f4\u5e73\u6ed1\u3002\u8fd9\u80cc\u540e\u7684\u539f\u56e0\u662f\u4f4d\u79fb \\(\\Delta X\\) \u4e0e \\(\\Delta t\\) \u6210\u6b63\u6bd4\uff0c\u56e0\u6b64\u77ac\u65f6\u901f\u5ea6\u7684\u4f30\u8ba1\u503c \\(\\Delta X/\\Delta t\\) \u4f1a\u968f\u7740 \\(\\Delta t \\to 0\\) \u800c\u53d1\u6563\u3002\u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f7f\u7528\u5fae\u5206\u5f62\u5f0f \\(dX(t)\\) \u800c\u4e0d\u662f\u5bfc\u6570\u5f62\u5f0f \\(dX/dt\\) \u6765\u4e66\u5199SDE\u3002</p> <p>2\uff1a\u7c92\u5b50\u7cfb\u7efc\u7684\u6f14\u5316</p> <p>\u5355\u4e2a\u8f68\u8ff9\u662f\u968f\u673a\u7684\uff0c\u4f46\u5927\u91cf\u7c92\u5b50\u7684\u96c6\u4f53\u884c\u4e3a\u5374\u662f\u786e\u5b9a\u7684\uff0c\u5e76\u9075\u5faa\u6269\u6563\u65b9\u7a0b\u7684\u9884\u6d4b\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6a21\u62df\u4e86\u4e00\u4e2a\u753110000\u4e2a\u7c92\u5b50\u7ec4\u6210\u7684\u7cfb\u7efc\uff0c\u5e76\u5c06\u5176\u5728\u4e0d\u540c\u65f6\u523b\u7684\u4f4d\u7f6e\u5206\u5e03\u4e0e\u7406\u8bba\u4e0a\u7684\u9ad8\u65af\u89e3\u8fdb\u884c\u6bd4\u8f83\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n# Solve Chinese display issue\nplt.rcParams['font.sans-serif'] = ['SimHei']  # Used to properly display Chinese labels\nplt.rcParams['axes.unicode_minus'] = False    # Used to properly display minus sign\n\n# --- Parameter settings ---\nD = 1.0          # Diffusion coefficient (m^2/s)\nT = 5.0          # Total simulation time (s)\ndt = 0.01        # Time step (s)\nnum_steps = int(T / dt) # Total steps\nnum_particles = 10000 # Number of particles to simulate\nx0 = 0.0         # Initial position\n\n# --- Simulation process ---\n# Initialize particle positions, all particles start at x0\nx = np.full(num_particles, x0)\n# Record particle positions at specific times\nsnapshots = {}\nsnapshot_times = [0.1, 1.0, 5.0]\n\nfor i in range(num_steps):\n    t_current = (i + 1) * dt\n    # Update positions of all particles\n    random_increment = np.random.randn(num_particles)\n    x = x + np.sqrt(2 * D * dt) * random_increment\n\n    # Check if we've reached a snapshot time\n    for t_snap in snapshot_times:\n        if np.isclose(t_current, t_snap):\n            snapshots[t_snap] = x.copy()\n\n# --- Results visualization ---\nplt.figure(figsize=(14, 8))\nbins = np.linspace(-15, 15, 101) # Histogram bins\n\nfor t_snap, positions in snapshots.items():\n    # Plot histogram of simulated data\n    plt.hist(positions, bins=bins, density=True, alpha=0.7, label=f'Simulation t={t_snap}s')\n\n    # Calculate and plot theoretical Gaussian distribution\n    mean_theory = x0\n    variance_theory = 2 * D * t_snap\n    std_dev_theory = np.sqrt(variance_theory)\n    x_theory = np.linspace(-15, 15, 200)\n    pdf_theory = norm.pdf(x_theory, loc=mean_theory, scale=std_dev_theory)\n    plt.plot(x_theory, pdf_theory, lw=3, linestyle='--', label=f'Theory t={t_snap}s')\n\nplt.title('Evolution of Position Distribution for Brownian Motion Particle Ensemble', fontsize=16)\nplt.xlabel('Position (m)', fontsize=14)\nplt.ylabel('Probability Density', fontsize=14)\nplt.grid(True, linestyle='--', alpha=0.6)\nplt.legend()\nplt.savefig('particle_ensemble_evolution.png', dpi=300, bbox_inches='tight')\nplt.show()\n</code></pre> </p> <p>\u8fd9\u4e2a\u6a21\u62df\u5c55\u793a\u4e86\u7406\u8bba\u4e0e\u5b9e\u8df5\u7684\u7edf\u4e00\u3002\u5c3d\u7ba1\u6bcf\u4e2a\u7c92\u5b50\u7684\u8def\u5f84\u4e0d\u53ef\u9884\u6d4b\uff0c\u4f46\u6574\u4e2a\u7c92\u5b50\u7fa4\u4f53\u7684\u6982\u7387\u5206\u5e03\u5374\u4ee5\u4e00\u79cd\u5b8c\u5168\u786e\u5b9a\u7684\u65b9\u5f0f\u6f14\u5316\uff1a\u4ece\u4e00\u4e2a\u96c6\u4e2d\u5728\u521d\u59cb\u4f4d\u7f6e\u7684\u5c16\u5cf0\uff08\u72c4\u62c9\u514b\\(\\delta\\)\u51fd\u6570\uff09\u5f00\u59cb\uff0c\u9010\u6e10\u5c55\u5bbd\u6210\u4e00\u4e2a\u8d8a\u6765\u8d8a\u5bbd\u7684\u9ad8\u65af\u5206\u5e03\u3002\u6a21\u62df\u5f97\u5230\u7684\u76f4\u65b9\u56fe\u4e0e\u6269\u6563\u65b9\u7a0b\u7684\u89e3\u6790\u89e3\uff08\u9ad8\u65af\u5206\u5e03\uff09\u9ad8\u5ea6\u543b\u5408\uff0c\u8fd9\u6709\u529b\u5730\u8bc1\u660e\u4e86\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u662f\u5982\u4f55\u4ece\u5fae\u89c2\u7684\u968f\u673a\u884c\u8d70\u4e2d\u6d8c\u73b0\u51fa\u6765\u7684\u5b8f\u89c2\u786e\u5b9a\u6027\u89c4\u5f8b\u3002</p>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#2-","title":"2. \u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b\u8fc7\u7a0b\u2014\u2014\u53d7\u7ea6\u675f\u7684\u6269\u6563","text":"<p>\u7ef4\u7eb3\u8fc7\u7a0b\u63cf\u8ff0\u4e86\u5b8c\u5168\u81ea\u7531\u7684\u6269\u6563\uff0c\u4f46\u5728\u8bb8\u591a\u7269\u7406\u548c\u751f\u7269\u7cfb\u7edf\u4e2d\uff0c\u968f\u673a\u8fd0\u52a8\u4f1a\u53d7\u5230\u67d0\u79cd\u5f62\u5f0f\u7684\u7ea6\u675f\u3002\u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b\uff08Ornstein-Uhlenbeck, O-U\uff09\u8fc7\u7a0b\u5c31\u662f\u63cf\u8ff0\u8fd9\u7c7b\u7cfb\u7edf\u6700\u7ecf\u5178\u7684\u6a21\u578b\u3002\u5b83\u5f15\u5165\u4e86\u4e00\u4e2a\u5c06\u7c92\u5b50\u62c9\u5411\u5e73\u8861\u4f4d\u7f6e\u7684\u6062\u590d\u529b\uff0c\u4ece\u800c\u4e0e\u6269\u6563\u6548\u5e94\u76f8\u6297\u8861\u3002</p>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#21","title":"2.1 \u7269\u7406\u7cfb\u7edf\uff1a\u8c10\u632f\u5b50\u52bf\u9631\u4e2d\u7684\u5e03\u6717\u7c92\u5b50","text":"<p>\u60f3\u8c61\u4e00\u4e2a\u60ac\u6d6e\u5728\u6db2\u4f53\u4e2d\u7684\u5fae\u5c0f\u7c92\u5b50\uff0c\u5b83\u4e0d\u4ec5\u53d7\u5230\u6c34\u5206\u5b50\u7684\u968f\u673a\u78b0\u649e\uff08\u5e03\u6717\u8fd0\u52a8\uff09\uff0c\u8fd8\u88ab\u4e00\u4e2a\u770b\u4e0d\u89c1\u7684\"\u5f39\u7c27\"\u675f\u7f1a\u5728\u539f\u70b9\u9644\u8fd1\u3002\u8fd9\u79cd\u675f\u7f1a\u53ef\u4ee5\u7528\u4e00\u4e2a\u8c10\u632f\u5b50\u52bf (harmonic potential) \u6765\u63cf\u8ff0\uff1a</p> \\[U(x) = \\frac{1}{2}kx^2\\] <p>\u5176\u4e2d \\(k\\) \u662f\"\u5f39\u7c27\"\u7684\u52b2\u5ea6\u7cfb\u6570\uff0c\u4ee3\u8868\u4e86\u52bf\u9631\u7684\u5f3a\u5ea6\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u6765\u5206\u6790\u4f5c\u7528\u5728\u8fd9\u4e2a\u7c92\u5b50\u4e0a\u7684\u4e24\u79cd\u529b\uff1a</p> <p>1. \u786e\u5b9a\u6027\u6f02\u79fb\uff08\u5f39\u7c27\u7684\u6062\u590d\u529b\uff09\uff1a</p> <p>\u52bf\u80fd \\(U(x)\\) \u4ea7\u751f\u4e00\u4e2a\u7ebf\u6027\u6062\u590d\u529b \\(F_{\\text{restore}} = -\\nabla U = -kx\\)\u3002\u8fd9\u4e2a\u529b\u603b\u662f\u6307\u5411\u52bf\u80fd\u6700\u4f4e\u70b9\uff08\\(x=0\\)\uff09\uff0c\u5e76\u4e0e\u504f\u79bb\u4e2d\u5fc3\u7684\u8ddd\u79bb\u6210\u6b63\u6bd4\u3002\u5728\u4f4e\u96f7\u8bfa\u6570\u7684\u6d41\u4f53\u73af\u5883\u4e2d\uff08\u5373\u8fd0\u52a8\u7f13\u6162\u3001\u5c3a\u5bf8\u5fae\u5c0f\uff09\uff0c\u7c92\u5b50\u7684\u60ef\u6027\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\uff0c\u8fd9\u79cd\u6062\u590d\u529b\u4f1a\u4e0e\u6d41\u4f53\u7684\u65af\u6258\u514b\u65af\u963b\u529b (Stokes' drag) \u76f8\u5e73\u8861\u3002\u65af\u6258\u514b\u65af\u5b9a\u5f8b\u544a\u8bc9\u6211\u4eec\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u534a\u5f84\u4e3a \\(R\\) \u7684\u7403\u5f62\u7c92\u5b50\uff0c\u5728\u9ecf\u5ea6\u4e3a \\(\\eta\\) \u7684\u6d41\u4f53\u4e2d\u4ee5\u901f\u5ea6 \\(\\dot{x}\\) \u8fd0\u52a8\u65f6\uff0c\u53d7\u5230\u7684\u963b\u529b\u4e3a \\(F_{\\text{drag}} = \\zeta \\dot{x}\\)\uff0c\u5176\u4e2d \\(\\zeta = 6\\pi\\eta R\\) \u662f\u6469\u64e6\u7cfb\u6570 (friction coefficient)\u3002</p> <p>\u529b\u5e73\u8861\u65b9\u7a0b\u4e3a \\(F_{\\text{restore}} + F_{\\text{drag}} = 0\\)\uff0c\u5373\uff1a</p> \\[    -kx = \\zeta \\dot{x} \\] <p>\u6574\u7406\u540e\uff0c\u6211\u4eec\u5f97\u5230\u7c92\u5b50\u5728\u6ca1\u6709\u968f\u673a\u566a\u58f0\u5f71\u54cd\u4e0b\u7684\u786e\u5b9a\u6027\u8fd0\u52a8\u65b9\u7a0b\uff1a</p> \\[    \\dot{x} = -\\frac{k}{\\zeta}x = -\\gamma x \\] <p>\u8fd9\u91cc\u7684 \\(\\gamma = k/\\zeta\\) \u88ab\u79f0\u4e3a\u5f1b\u8c6b\u7387 (relaxation rate)\uff0c\u5b83\u7684\u5012\u6570 \\(\\tau = 1/\\gamma\\) \u662f\u7cfb\u7edf\u7684\u7279\u5f81\u5f1b\u8c6b\u65f6\u95f4\u3002\u8fd9\u4e2a\u65b9\u7a0b\u63cf\u8ff0\u4e86\u7c92\u5b50\u5982\u4f55\u6307\u6570\u7ea7\u5730\u56de\u5230\u5e73\u8861\u4f4d\u7f6e\u3002\u56e0\u6b64\uff0cO-U\u8fc7\u7a0b\u7684\u6f02\u79fb\u9879\u662f\u4e00\u4e2a\u4e0e\u4f4d\u7f6e\u7ebf\u6027\u76f8\u5173\u7684\u51fd\u6570\uff1a\\(A(x) = -\\gamma x\\)\u3002\u8fd9\u4e2a\u6f02\u79fb\u9879\u4f53\u73b0\u4e86\u4e00\u79cd\"\u5747\u503c\u56de\u5f52\"\uff08mean-reversion\uff09\u7684\u7279\u6027\u3002</p> <p>2. \u968f\u673a\u6269\u6563\uff08\u6d41\u4f53\u7684\u70ed\u6da8\u843d\uff09\uff1a</p> <p>\u4e0e\u7ef4\u7eb3\u8fc7\u7a0b\u4e00\u6837\uff0c\u6765\u81ea\u5468\u56f4\u6d41\u4f53\u5206\u5b50\u7684\u968f\u673a\u78b0\u649e\u4f9d\u7136\u5b58\u5728\u3002\u6211\u4eec\u5047\u8bbe\u8fd9\u79cd\u968f\u673a\u529b\u7684\u5f3a\u5ea6\u4e0d\u4f9d\u8d56\u4e8e\u7c92\u5b50\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u6269\u6563\u9879\u4ecd\u7136\u662f\u4e00\u4e2a\u5e38\u6570\uff1a\\(B = 2D\\)\u3002</p>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#22","title":"2.2 \u63a7\u5236\u65b9\u7a0b\u53ca\u5176\u6c42\u89e3","text":"<p>\u5c06\u6211\u4eec\u63a8\u5bfc\u51fa\u7684\u6f02\u79fb\u9879 \\(A(x) = -\\gamma x\\) \u548c\u6269\u6563\u9879 \\(D\\) \u4ee3\u5165\u901a\u7528\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff0c\u4fbf\u5f97\u5230\u4e86\u63cf\u8ff0O-U\u8fc7\u7a0b\u7684\u63a7\u5236\u65b9\u7a0b (4)\uff1a</p> \\[ \\frac{\\partial P(x,t)}{\\partial t} = \\frac{\\partial}{\\partial x}[\\gamma x P(x,t)] + D \\frac{\\partial^2}{\\partial x^2} P(x,t) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u751f\u52a8\u5730\u63cf\u7ed8\u4e86\u4e00\u573a\"\u62d4\u6cb3\u6bd4\u8d5b\"\uff1a\u7b2c\u4e00\u9879\uff08\u6f02\u79fb\u9879\uff09\u8bd5\u56fe\u5c06\u6982\u7387\u5206\u5e03\u5411\u539f\u70b9\u538b\u7f29\uff0c\u4f7f\u5176\u53d8\u5f97\u66f4\u7a84\u3001\u66f4\u9ad8\uff1b\u800c\u7b2c\u4e8c\u9879\uff08\u6269\u6563\u9879\uff09\u5219\u8bd5\u56fe\u5c06\u6982\u7387\u5206\u5e03\u5411\u5916\u94fa\u5f00\uff0c\u4f7f\u5176\u53d8\u5f97\u66f4\u5bbd\u3001\u66f4\u6241\u5e73\u3002\u7cfb\u7edf\u7684\u6700\u7ec8\u72b6\u6001\u5c06\u662f\u8fd9\u4e24\u79cd\u6548\u5e94\u8fbe\u5230\u52a8\u6001\u5e73\u8861\u7684\u7ed3\u679c\u3002</p> <p>\u4e3a\u4e86\u6c42\u89e3\u8fd9\u4e2a\u504f\u5fae\u5206\u65b9\u7a0b\uff0c\u8bb2\u5ea7\u4e2d\u91c7\u7528\u4e86\u4e00\u79cd\u975e\u5e38\u5f3a\u5927\u7684\u6280\u672f\u2014\u2014\u7279\u5f81\u51fd\u6570\u6cd5 (method of characteristics)\uff0c\u5e76\u7ed3\u5408\u4e86\u5085\u91cc\u53f6\u53d8\u6362\u3002\u4e0b\u9762\u6211\u4eec\u8be6\u7ec6\u5730\u91cd\u73b0\u8fd9\u4e2a\u6c42\u89e3\u8fc7\u7a0b\uff1a</p> <p>1. \u5085\u91cc\u53f6\u53d8\u6362\uff1a</p> <p>\u6211\u4eec\u5b9a\u4e49\u6982\u7387\u5bc6\u5ea6 \\(P(x,t)\\) \u7684\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u5373\u5176\u7279\u5f81\u51fd\u6570 (characteristic function) \\(\\phi(k,t)\\)\uff1a</p> \\[    \\phi(k,t) := \\int_{-\\infty}^{\\infty} dx \\, e^{ikx} P(x,t) \\] <p>\u5085\u91cc\u53f6\u53d8\u6362\u7684\u4f18\u70b9\u5728\u4e8e\u5b83\u53ef\u4ee5\u5c06\u7a7a\u95f4\u5bfc\u6570 \\(\\partial/\\partial x\\) \u8f6c\u5316\u4e3a\u6ce2\u6570 \\(k\\) \u7684\u4e58\u6cd5\uff08\u5177\u4f53\u6765\u8bf4\u662f\u4e58\u4ee5 \\(ik\\)\uff09\u3002\u5e94\u7528\u8fd9\u4e2a\u53d8\u6362\u540e\uff0c\u539f\u5148\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u4f1a\u53d8\u5f97\u66f4\u7b80\u5355\u3002</p> <p>2. \u53d8\u6362\u540e\u7684\u504f\u5fae\u5206\u65b9\u7a0b\uff1a</p> <p>\u5bf9O-U\u7684FPE\u4e24\u8fb9\u8fdb\u884c\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u5229\u7528\u5206\u90e8\u79ef\u5206\u548c\u53d8\u6362\u6027\u8d28\uff0c\u53ef\u4ee5\u5f97\u5230 \\(\\phi(k,t)\\) \u6240\u6ee1\u8db3\u7684\u65b9\u7a0b\uff1a</p> \\[    \\frac{\\partial \\phi(k,t)}{\\partial t} + \\gamma k \\frac{\\partial \\phi(k,t)}{\\partial k} = -Dk^2 \\phi(k,t) \\] <p>\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e \\(\\phi(k,t)\\) \u7684\u4e00\u9636\u7ebf\u6027\u504f\u5fae\u5206\u65b9\u7a0b\u3002</p> <p>3. \u7279\u5f81\u51fd\u6570\u6cd5\u6c42\u89e3\uff1a</p> <p>\u6211\u4eec\u5bfb\u627e\u5728 \\((k,t)\\) \u7a7a\u95f4\u4e2d\u7684\u4e00\u4e9b\u7279\u6b8a\u66f2\u7ebf\uff0c\u79f0\u4e3a\u7279\u5f81\u7ebf (characteristics)\uff0c\u6cbf\u7740\u8fd9\u4e9b\u66f2\u7ebf\uff0c\u4e0a\u8ff0\u504f\u5fae\u5206\u65b9\u7a0b\u53ef\u4ee5\u7b80\u5316\u4e3a\u4e00\u4e2a\u5e38\u5fae\u5206\u65b9\u7a0b\u3002\u8fd9\u4e9b\u7279\u5f81\u7ebf\u7531\u65b9\u7a0b \\(dt/1 = dk/(\\gamma k)\\) \u7ed9\u51fa\uff0c\u79ef\u5206\u5f97\u5230\u7279\u5f81\u7ebf\u65b9\u7a0b\uff1a</p> \\[    \\frac{dk}{dt} = -\\gamma k \\implies k(t) = k_0 e^{-\\gamma t} \\] <p>\u5176\u4e2d \\(k_0\\) \u662f \\(t=0\\) \u65f6\u7684\u521d\u59cb\u6ce2\u6570\u3002\u6cbf\u7740\u8fd9\u6837\u4e00\u6761\u7279\u5f81\u7ebf\uff0c\\(\\phi(k(t),t)\\) \u5bf9\u65f6\u95f4\u7684\u5168\u5bfc\u6570\u4e3a\uff1a</p> \\[    \\frac{d\\phi}{dt} = \\frac{\\partial \\phi}{\\partial t} + \\frac{\\partial \\phi}{\\partial k} \\frac{dk}{dt} = \\frac{\\partial \\phi}{\\partial t} - \\gamma k \\frac{\\partial \\phi}{\\partial k} \\] <p>\u5bf9\u6bd4\u53d8\u6362\u540e\u7684PDE\uff0c\u6211\u4eec\u53d1\u73b0\u6cbf\u7740\u7279\u5f81\u7ebf\uff0c\u65b9\u7a0b\u7b80\u5316\u4e3a\uff1a</p> \\[    \\frac{d\\phi}{dt} = -Dk(t)^2 \\phi(t) \\] <p>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\uff0c\u5176\u89e3\u4e3a\uff1a</p> \\[    \\phi(t) = \\phi(0) \\exp\\left(-D \\int_0^t dt' k(t')^2 \\right) \\] <p>4. \u4ee3\u5165\u6c42\u89e3\uff1a</p> <p>\u6211\u4eec\u5c06 \\(k(t') = k_0 e^{-\\gamma t'}\\) \u4ee3\u5165\u79ef\u5206\uff0c\u5e76\u5047\u8bbe\u521d\u59cb\u65f6\u523b \\(t=0\\) \u7c92\u5b50\u4f4d\u4e8e \\(x_0\\)\uff0c\u6b64\u65f6 \\(P(x,0) = \\delta(x-x_0)\\)\uff0c\u5bf9\u5e94\u7684\u521d\u59cb\u7279\u5f81\u51fd\u6570\u4e3a \\(\\phi(k,0) = e^{ikx_0}\\)\uff0c\u56e0\u6b64 \\(\\phi(0) = e^{ik_0x_0}\\)\u3002</p> \\[    \\int_0^t dt' k_0^2 e^{-2\\gamma t'} = k_0^2 \\left[\\frac{e^{-2\\gamma t'}}{-2\\gamma}\\right]_0^t = \\frac{k_0^2}{2\\gamma}(1 - e^{-2\\gamma t}) \\] <p>\u4e8e\u662f\uff0c\\(\\phi(t)\\) \u7684\u89e3\u4e3a\uff1a</p> \\[    \\phi(t) = \\exp\\left(ik_0x_0 - \\frac{Dk_0^2}{2\\gamma}(1 - e^{-2\\gamma t})\\right) \\] <p>5. \u53cd\u53d8\u6362\u56de\u539f\u53d8\u91cf\uff1a</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u5c06 \\(k_0\\) \u7528 \\(k(t)\\) \u8868\u793a\u56de\u6765\uff0c\\(k_0 = k(t)e^{\\gamma t}\\)\uff0c\u4ee3\u5165\u4e0a\u5f0f\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u7279\u5f81\u51fd\u6570\u89e3\uff1a</p> \\[    \\phi(k, t) = \\exp\\left(ikx_0e^{-\\gamma t} - \\frac{Dk^2}{2\\gamma}(1 - e^{-2\\gamma t})\\right) \\]"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#23","title":"2.3 \u52a8\u529b\u5b66\u8be0\u91ca","text":"<p>\u8fd9\u4e2a\u7279\u5f81\u51fd\u6570 \\(\\phi(k,t)\\) \u7684\u5f62\u5f0f\u975e\u5e38\u7279\u6b8a\uff0c\u5b83\u662f\u4e00\u4e2a\u9ad8\u65af\u51fd\u6570\u7684\u5085\u91cc\u53f6\u53d8\u6362\u3002\u4e00\u4e2a\u901a\u7528\u9ad8\u65af\u5206\u5e03\u7684\u7279\u5f81\u51fd\u6570\u5177\u6709\u6807\u51c6\u5f62\u5f0f\uff1a</p> \\[\\phi_{\\text{Gaussian}}(k) = \\exp\\left(ik\\langle x \\rangle - \\frac{1}{2}k^2 \\text{Var}(x)\\right)\\] <p>\u901a\u8fc7\u5c06\u6211\u4eec\u7684\u89e3\u4e0e\u8fd9\u4e2a\u6807\u51c6\u5f62\u5f0f\u8fdb\u884c\u9010\u9879\u6bd4\u8f83\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bfb\u51fa\u7c92\u5b50\u4f4d\u7f6e\u7684\u5747\u503c\u548c\u65b9\u5dee\u968f\u65f6\u95f4\u7684\u6f14\u5316\u89c4\u5f8b\uff1a</p> <p>\u5747\u503c (Mean)\uff1a</p> \\[   \\langle x \\rangle(t) = x_0 e^{-\\gamma t} \\] <p>\u7c92\u5b50\u7cfb\u7efc\u7684\u5e73\u5747\u4f4d\u7f6e\u4ece\u521d\u59cb\u4f4d\u7f6e \\(x_0\\) \u5f00\u59cb\uff0c\u6307\u6570\u8870\u51cf\u8d8b\u5411\u4e8e\u52bf\u9631\u4e2d\u5fc3 \\(x=0\\)\u3002\u8fd9\u4e0e\u5b8c\u5168\u5ffd\u7565\u566a\u58f0\u65f6\u7684\u786e\u5b9a\u6027\u52a8\u529b\u5b66\u89e3\u5b8c\u5168\u4e00\u81f4\u3002\u8fd9\u8bf4\u660e\uff0c\u968f\u673a\u566a\u58f0\u867d\u7136\u4f7f\u5f97\u6bcf\u4e2a\u7c92\u5b50\u7684\u8f68\u8ff9\u53d8\u5f97\u66f2\u6298\uff0c\u4f46\u5e76\u4e0d\u4f1a\u6539\u53d8\u6574\u4e2a\u7cfb\u7efc\u7684\u5e73\u5747\u8fd0\u52a8\u8d8b\u52bf\u3002</p> <p>\u65b9\u5dee (Variance)\uff1a</p> \\[ \\text{Var}[x](t) = \\frac{D}{\\gamma}(1 - e^{-2\\gamma t}) \\] <p>\u7c92\u5b50\u4f4d\u7f6e\u7684\u65b9\u5dee\uff08\u5373\u5206\u5e03\u7684\u5bbd\u5ea6\uff09\u7684\u6f14\u5316\u5219\u66f4\u6709\u8da3\u3002</p> <ul> <li> <p>\u5728\u521d\u59cb\u9636\u6bb5\uff08\\(t \\to 0\\)\uff09\uff0c\u5229\u7528\u6cf0\u52d2\u5c55\u5f00 \\(e^{-2\\gamma t} \\approx 1 - 2\\gamma t\\)\uff0c\u65b9\u5dee\u8fd1\u4f3c\u4e3a \\(\\text{Var}[x](t) \\approx (D/\\gamma)(2\\gamma t) = 2Dt\\)\u3002\u8fd9\u8868\u660e\u5728\u77ed\u65f6\u95f4\u5185\uff0c\u7c92\u5b50\u8fd8\u6ca1\u6765\u5f97\u53ca\u611f\u53d7\u5230\u6062\u590d\u529b\u7684\u4f5c\u7528\uff0c\u5176\u884c\u4e3a\u548c\u81ea\u7531\u7684\u5e03\u6717\u8fd0\u52a8\uff08\u7ef4\u7eb3\u8fc7\u7a0b\uff09\u5b8c\u5168\u4e00\u6837\u3002</p> </li> <li> <p>\u968f\u7740\u65f6\u95f4\u63a8\u79fb\uff08\\(t \\to \\infty\\)\uff09\uff0c\u6307\u6570\u9879 \\(e^{-2\\gamma t}\\) \u8d8b\u4e8e\u96f6\uff0c\u65b9\u5dee\u4f1a\u8d8b\u4e8e\u4e00\u4e2a\u6052\u5b9a\u7684\u7a33\u6001\u503c\uff1a</p> </li> </ul> \\[ \\text{Var}_{ss} = \\lim_{t \\to \\infty} \\text{Var}[x](t) = \\frac{D}{\\gamma} \\] <p>\u8fd9\u4e2a\u7a33\u6001 (steady state) \u662fO-U\u8fc7\u7a0b\u6700\u5173\u952e\u7684\u7279\u6027\u3002\u5b83\u610f\u5473\u7740\u7cfb\u7edf\u6700\u7ec8\u4f1a\u8fbe\u5230\u4e00\u4e2a\u52a8\u6001\u5e73\u8861\uff1a\u6062\u590d\u529b\u5c06\u7c92\u5b50\u5411\u4e2d\u5fc3\u62c9\u7684\u8d8b\u52bf\uff0c\u4e0e\u6269\u6563\u4f5c\u7528\u5c06\u7c92\u5b50\u5411\u5916\u63a8\u7684\u8d8b\u52bf\uff0c\u8fbe\u5230\u4e86\u5b8c\u7f8e\u7684\u62b5\u6d88\u3002\u6b64\u65f6\uff0c\u6982\u7387\u5206\u5e03\u4e0d\u518d\u968f\u65f6\u95f4\u53d8\u5316\uff0c\u5f62\u6210\u4e00\u4e2a\u4e2d\u5fc3\u5728\u539f\u70b9\u3001\u65b9\u5dee\u4e3a \\(D/\\gamma\\) \u7684\u7a33\u5b9a\u9ad8\u65af\u5206\u5e03\u3002\u7cfb\u7edf\"\u5fd8\u8bb0\"\u4e86\u5b83\u7684\u521d\u59cb\u72b6\u6001 \\(x_0\\)\u3002</p>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#24-ii","title":"2.4 \u8ba1\u7b97\u5b9e\u9a8c\u5ba4 II\uff1a\u6a21\u62df\u53d7\u675f\u7f1a\u7684\u7c92\u5b50","text":"<p>\u4e0e\u7ef4\u7eb3\u8fc7\u7a0b\u7c7b\u4f3c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6570\u503c\u6a21\u62dfO-U\u8fc7\u7a0b\u5bf9\u5e94\u7684SDE\u6765\u83b7\u5f97\u76f4\u89c2\u7684\u7406\u89e3\uff1a</p> \\[ dX(t) = -\\gamma X(t) dt + \\sqrt{2D} \\, dW(t) \\] <p>\u5176\u6b27\u62c9-\u4e38\u5c71\u79bb\u6563\u5f62\u5f0f\u4e3a\uff1a</p> \\[ X(t+\\Delta t) = X(t) - \\gamma X(t) \\Delta t + \\sqrt{2D\\Delta t} \\cdot N(0,1) \\] <p>\u8fd9\u4e2a\u66f4\u65b0\u89c4\u5219\u4e2d\u5305\u542b\u4e86\u786e\u5b9a\u6027\u7684\u6f02\u79fb\u9879\uff08\u4f7f\u7c92\u5b50\u5411\u539f\u70b9\u79fb\u52a8\uff09\u548c\u968f\u673a\u7684\u6269\u6563\u9879\u3002</p> <p>1. \u5355\u4e2a\u53d7\u675f\u7f1a\u7c92\u5b50\u7684\u8f68\u8ff9</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n# Solve Chinese display issue\nplt.rcParams['font.sans-serif'] = ['SimHei']  # Used to properly display Chinese labels\nplt.rcParams['axes.unicode_minus'] = False    # Used to properly display minus sign\n\n# --- Parameter settings ---\nD = 1.0          # Diffusion coefficient (m^2/s)\ngamma = 0.5      # Relaxation rate (1/s)\nT = 50.0         # Total simulation time (s)\ndt = 0.01        # Time step (s)\nnum_steps = int(T / dt) # Total steps\nx0 = 10.0        # Initial position\n\n# --- Simulation process ---\nt = np.linspace(0, T, num_steps + 1)\nx = np.zeros(num_steps + 1)\nx[0] = x0\n\nfor i in range(num_steps):\n    random_increment = np.random.randn()\n    # Update with drift and diffusion terms\n    x[i+1] = x[i] - gamma * x[i] * dt + np.sqrt(2 * D * dt) * random_increment\n\n# --- Results visualization ---\nplt.figure(figsize=(12, 7))\nplt.plot(t, x, label='Particle Trajectory')\nplt.axhline(0, color='r', linestyle='--', label='Equilibrium Position (x=0)')\nplt.title('Trajectory of a Single Particle in a Harmonic Potential Well (O-U Process)', fontsize=16)\nplt.xlabel('Time (s)', fontsize=14)\nplt.ylabel('Position (m)', fontsize=14)\nplt.grid(True, linestyle='--', alpha=0.6)\nplt.legend()\nplt.savefig('single_confined_particle_trajectory.png', dpi=300, bbox_inches='tight')\nplt.show()\n</code></pre> </p> <p>\u4ece\u8f68\u8ff9\u56fe\u4e2d\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u5230\uff0c\u7c92\u5b50\u5728\u539f\u70b9\u9644\u8fd1\u968f\u673a\u6ce2\u52a8\u3002\u5f53\u5b83\u5076\u7136\u6f02\u5230\u79bb\u539f\u70b9\u8f83\u8fdc\u7684\u5730\u65b9\u65f6\uff0c\u5f3a\u5927\u7684\u6062\u590d\u529b\uff08\u6f02\u79fb\u9879\uff09\u4f1a\u66f4\u660e\u663e\u5730\u628a\u5b83\"\u62c9\"\u56de\u6765\u3002\u6700\u7ec8\uff0c\u7c92\u5b50\u7684\u8fd0\u52a8\u88ab\u9650\u5236\u5728\u4e00\u4e2a\u4ee5\u539f\u70b9\u4e3a\u4e2d\u5fc3\u7684\u6709\u9650\u533a\u57df\u5185\u3002</p> <p>2. \u7cfb\u7efc\u6f14\u5316\u4e0e\u7406\u8bba\u9a8c\u8bc1</p> <p>\u73b0\u5728\u6211\u4eec\u6a21\u62df\u4e00\u4e2a\u7c92\u5b50\u7cfb\u7efc\uff0c\u5e76\u9a8c\u8bc1\u5176\u5747\u503c\u548c\u65b9\u5dee\u662f\u5426\u4e0e\u6211\u4eec\u7684\u89e3\u6790\u89e3\u5b8c\u5168\u4e00\u81f4\u3002 <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n# Solve Chinese display issue\nplt.rcParams['font.sans-serif'] = ['SimHei']  # Used to properly display Chinese labels\nplt.rcParams['axes.unicode_minus'] = False    # Used to properly display minus sign\n\n# --- Parameter settings ---\nD = 1.0\ngamma = 0.5\nT = 10.0\ndt = 0.01\nnum_steps = int(T / dt)\nnum_particles = 10000\nx0 = 5.0\n\n# --- Simulation process ---\nt = np.linspace(0, T, num_steps + 1)\nx = np.full((num_particles, num_steps + 1), x0)\n\n# Record mean and variance during simulation\nmean_sim = np.zeros(num_steps + 1)\nvar_sim = np.zeros(num_steps + 1)\nmean_sim[0] = x0\nvar_sim[0] = 0\n\nfor i in range(num_steps):\n    random_increment = np.random.randn(num_particles)\n    x[:, i+1] = x[:, i] - gamma * x[:, i] * dt + np.sqrt(2 * D * dt) * random_increment\n    mean_sim[i+1] = np.mean(x[:, i+1])\n    var_sim[i+1] = np.var(x[:, i+1])\n\n# --- Theoretical solution ---\nmean_theory = x0 * np.exp(-gamma * t)\nvar_theory = (D / gamma) * (1 - np.exp(-2 * gamma * t))\n\n# --- Results visualization ---\nfig, (ax1, ax2) = plt.subplots(2, 1, figsize=(12, 10), sharex=True)\n\n# Mean comparison\nax1.plot(t, mean_sim, 'o', markersize=4, label='Simulated Mean')\nax1.plot(t, mean_theory, 'r-', lw=3, label='Theoretical Mean')\nax1.set_ylabel(r'Average Position $\\langle x \\rangle$', fontsize=14)\nax1.set_title('Evolution of Mean and Variance in O-U Process', fontsize=16)\nax1.grid(True, linestyle='--', alpha=0.6)\nax1.legend()\n\n# Variance comparison\nax2.plot(t, var_sim, 'o', markersize=4, label='Simulated Variance')\nax2.plot(t, var_theory, 'r-', lw=3, label='Theoretical Variance')\nax2.axhline(D / gamma, color='k', linestyle='--', label=f'Steady-state Variance D/\u03b3 = {D/gamma:.2f}')\nax2.set_xlabel('Time (s)', fontsize=14)\nax2.set_ylabel('Variance Var[x]', fontsize=14)\nax2.grid(True, linestyle='--', alpha=0.6)\nax2.legend()\n\nplt.tight_layout()\nplt.savefig('confined_particle_ensemble_evolution.png', dpi=300, bbox_inches='tight')\nplt.show()\n</code></pre> </p> <p>\u8ba1\u7b97\u51fa\u7684\u7cfb\u7efc\u5747\u503c\u548c\u65b9\u5dee\u4e0e\u7406\u8bba\u516c\u5f0f\u7684\u66f2\u7ebf\u91cd\u5408\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5747\u503c\u5982\u4f55\u6307\u6570\u8870\u51cf\u52300\uff0c\u4ee5\u53ca\u65b9\u5dee\u5982\u4f55\u4ece0\u5f00\u59cb\u589e\u957f\u5e76\u6700\u7ec8\u9971\u548c\u5230\u7a33\u6001\u503c \\(D/\\gamma\\)\u3002</p>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#25-","title":"2.5 \u7ef4\u7eb3\u8fc7\u7a0b\u4e0e\u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b\u8fc7\u7a0b\u7684\u5bf9\u6bd4","text":"<p>\u4e3a\u4e86\u5de9\u56fa\u7406\u89e3\uff0c\u4e0b\u8868\u603b\u7ed3\u4e86\u8fd9\u4e24\u4e2a\u6838\u5fc3\u968f\u673a\u8fc7\u7a0b\u7684\u5173\u952e\u533a\u522b\u4e0e\u8054\u7cfb\u3002</p> \u7279\u6027 \u7ef4\u7eb3\u8fc7\u7a0b (Wiener Process) \u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b\u8fc7\u7a0b (Ornstein-Uhlenbeck Process) \u7269\u7406\u7c7b\u6bd4 \u5728\u65e0\u9650\u7a7a\u95f4\u4e2d\u81ea\u7531\u6f02\u6d6e\u7684\u5c18\u57c3 \u88ab\u5f39\u7c27\u62f4\u4f4f\u5e76\u5728\u6db2\u4f53\u4e2d\u632f\u52a8\u7684\u5fae\u73e0 \u6f02\u79fb\u7cfb\u6570 A(x) 0 (\u65e0\u504f\u597d\u65b9\u5411) \\(-\\gamma x\\) (\u7ebf\u6027\u6062\u590d\u529b\uff0c\u5747\u503c\u56de\u5f52) \u6269\u6563\u7cfb\u6570 D(x) D (\u5e38\u6570) D (\u5e38\u6570) \u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b \\(\\partial_{t} P = D \\partial_{x}^{2} P\\) (\u6269\u6563\u65b9\u7a0b) \\(\\partial_{t} P = \\partial_{x} (\\gamma x P) + D \\partial_{x}^{2} P\\) \u5747\u503c \\(\\langle x \\rangle(t)\\) \\(x_{0}\\) (\u4fdd\u6301\u4e0d\u53d8) \\(x_{0} e^{-\\gamma t}\\) (\u6307\u6570\u8870\u51cf\u81f30) \u65b9\u5dee \\(\\operatorname{Var}[x](t)\\) \\(2Dt\\) (\u65e0\u9650\u7ebf\u6027\u589e\u957f) \\(\\frac{D}{\\gamma} (1 - e^{-2\\gamma t})\\) (\u589e\u957f\u5e76\u9971\u548c) \u7a33\u6001 (\\(t \\to \\infty\\)) \u4e0d\u5b58\u5728\u7a33\u6001\u5206\u5e03 (\u65e0\u9650\u6269\u6563) \u5b58\u5728\u7a33\u6001\u9ad8\u65af\u5206\u5e03\uff0c\u65b9\u5dee\u4e3a \\(\\frac{D}{\\gamma}\\) <p>\u8fd9\u4e2a\u8868\u683c\u63ed\u793a\u4e86\u6f02\u79fb\u9879\u7684\u5f15\u5165\u662f\u5982\u4f55\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u7cfb\u7edf\u884c\u4e3a\u7684\u3002\u7ef4\u7eb3\u8fc7\u7a0b\u662f\u4e00\u4e2a\u65e0\u754c\u7684\u8fc7\u7a0b\uff0c\u5176\u4e0d\u786e\u5b9a\u6027\u4f1a\u65e0\u9650\u589e\u957f\u3002\u800cO-U\u8fc7\u7a0b\u5219\u662f\u4e00\u4e2a\u6709\u754c\u7684\u8fc7\u7a0b\uff0c\u7531\u4e8e\u6062\u590d\u529b\u7684\u5b58\u5728\uff0c\u7cfb\u7edf\u6700\u7ec8\u4f1a\u8fbe\u5230\u4e00\u4e2a\u7edf\u8ba1\u4e0a\u7684\u5e73\u8861\u72b6\u6001\u3002</p>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#3-","title":"3. \u7231\u56e0\u65af\u5766-\u65af\u6258\u514b\u65af\u5173\u7cfb\u2014\u2014\u6da8\u843d\u4e0e\u8017\u6563\u7684\u6df1\u523b\u8054\u7cfb","text":"<p>\u8fd9\u8282\u8bfe\u7684\u6700\u540e\u4e00\u90e8\u5206\uff0c\u662f\u5c06\u6211\u4eec\u4ece\u968f\u673a\u8fc7\u7a0b\u52a8\u529b\u5b66\u4e2d\u5f97\u5230\u7684\u7ed3\u8bba\u4e0e\u7ecf\u5178\u7684\u70ed\u529b\u5b66\u7406\u8bba\u8054\u7cfb\u8d77\u6765\uff0c\u4ece\u800c\u63a8\u5bfc\u51fa\u4e00\u4e2a\u7269\u7406\u5b66\u4e2d\u6781\u4e3a\u6df1\u523b\u548c\u4f18\u7f8e\u7684\u5173\u7cfb\u3002</p>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#31","title":"3.1 \u901a\u5f80\u70ed\u529b\u5b66\u7684\u6865\u6881","text":"<p>\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u5f53\u65f6\u95f4\u8d8b\u4e8e\u65e0\u7a77\u5927\u65f6\uff08\\(t \\to \\infty\\)\uff09\uff0c\u5904\u4e8e\u8c10\u632f\u5b50\u52bf\u9631\u4e2d\u7684\u5e03\u6717\u7c92\u5b50\u7cfb\u7edf\u4f1a\u8fbe\u5230\u4e00\u4e2a\u7a33\u6001\u3002\u5728\u8fd9\u4e2a\u7a33\u6001\u4e0b\uff0c\u7cfb\u7edf\u5b8c\u5168\"\u5fd8\u8bb0\"\u4e86\u5176\u521d\u59cb\u4f4d\u7f6e \\(x_0\\)\uff0c\u5176\u6982\u7387\u5206\u5e03\u662f\u4e00\u4e2a\u4e0d\u968f\u65f6\u95f4\u53d8\u5316\u7684\u3001\u4e2d\u5fc3\u4f4d\u4e8e\u539f\u70b9\u7684\u9ad8\u65af\u5206\u5e03\u3002\u8fd9\u4e2a\u7a33\u6001\u7684\u65b9\u5dee\uff0c\u4e5f\u5c31\u662f\u7c92\u5b50\u4f4d\u7f6e\u7684\u5747\u65b9\u503c\u4e3a\uff1a</p> \\[\\langle x^2 \\rangle_{ss} = \\text{Var}_{ss} = \\frac{D}{\\gamma}\\] <p>\u8fd9\u4e2a\u7ed3\u679c\u5b8c\u5168\u662f\u4ece\u968f\u673a\u52a8\u529b\u5b66\uff08\u5373\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff09\u7684\u89d2\u5ea6\u63a8\u5bfc\u51fa\u6765\u7684\u3002</p> <p>\u7269\u7406\u4e0a\uff0c\u8fd9\u4e2a\u957f\u65f6\u95f4\u6781\u9650\u4e0b\u7684\u7a33\u6001\uff0c\u6b63\u5bf9\u5e94\u4e8e\u7cfb\u7edf\u4e0e\u5468\u56f4\u73af\u5883\uff08\u70ed\u6d74\uff09\u8fbe\u5230\u70ed\u5e73\u8861 (thermal equilibrium) \u7684\u72b6\u6001\u3002</p>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#32","title":"3.2 \u80fd\u91cf\u5747\u5206\u5b9a\u7406","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u6682\u65f6\u653e\u4e0b\u968f\u673a\u8fc7\u7a0b\uff0c\u8f6c\u800c\u4ece\u7ecf\u5178\u7edf\u8ba1\u529b\u5b66\u7684\u89d2\u5ea6\u6765\u5ba1\u89c6\u8fd9\u4e2a\u5904\u4e8e\u70ed\u5e73\u8861\u7684\u7cfb\u7edf\u3002\u80fd\u91cf\u5747\u5206\u5b9a\u7406 (Equipartition Theorem) \u662f\u7edf\u8ba1\u529b\u5b66\u7684\u4e00\u4e2a\u57fa\u672c\u7ed3\u8bba\u3002\u8be5\u5b9a\u7406\u6307\u51fa\uff0c\u5728\u4e00\u4e2a\u5904\u4e8e\u6e29\u5ea6\u4e3a \\(T\\) \u7684\u70ed\u5e73\u8861\u7cfb\u7edf\u91cc\uff0c\u80fd\u91cf\u8868\u8fbe\u5f0f\u4e2d\u6bcf\u4e00\u4e2a\u72ec\u7acb\u7684\u3001\u4e8c\u6b21\u65b9\u7684\u81ea\u7531\u5ea6\uff08\u4f8b\u5982\u52a8\u80fd\u9879 \\(\\frac{1}{2}mv^2\\) \u6216\u52bf\u80fd\u9879 \\(\\frac{1}{2}kx^2\\)\uff09\uff0c\u5176\u5e73\u5747\u80fd\u91cf\u90fd\u7cbe\u786e\u5730\u7b49\u4e8e \\(\\frac{1}{2}k_B T\\)\uff0c\u5176\u4e2d \\(k_B\\) \u662f\u73bb\u5c14\u5179\u66fc\u5e38\u6570\u3002</p> <p>\u5bf9\u4e8e\u6211\u4eec\u6240\u7814\u7a76\u7684\u3001\u88ab\u8c10\u632f\u5b50\u52bf \\(U(x) = \\frac{1}{2}kx^2\\) \u675f\u7f1a\u7684\u7c92\u5b50\uff0c\u5176\u52bf\u80fd\u5c31\u662f\u4e00\u4e2a\u4e8c\u6b21\u578b\u7684\u81ea\u7531\u5ea6\u3002\u56e0\u6b64\uff0c\u6839\u636e\u80fd\u91cf\u5747\u5206\u5b9a\u7406\uff0c\u5176\u5e73\u5747\u52bf\u80fd\u5fc5\u987b\u6ee1\u8db3\uff1a</p> \\[\\langle U \\rangle = \\left\\langle \\frac{1}{2}kx^2 \\right\\rangle = \\frac{1}{2}k \\langle x^2 \\rangle = \\frac{1}{2}k_B T\\] <p>\u4ece\u8fd9\u4e2a\u7eaf\u7cb9\u7684\u70ed\u529b\u5b66\u5173\u7cfb\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u89e3\u51fa\u7cfb\u7edf\u5728\u70ed\u5e73\u8861\u65f6\u7c92\u5b50\u4f4d\u7f6e\u7684\u5747\u65b9\u503c\uff1a</p> \\[\\langle x^2 \\rangle_{\\text{eq}} = \\frac{k_B T}{k}\\]"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#33","title":"3.3 \u63a8\u5bfc\u4e0e\u6d1e\u89c1","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u62e5\u6709\u4e86\u4e24\u4e2a\u5728\u5b8c\u5168\u4e0d\u540c\u7406\u8bba\u6846\u67b6\u4e0b\u5f97\u5230\u7684\u3001\u5173\u4e8e\u540c\u4e00\u4e2a\u7269\u7406\u91cf\uff08\u7cfb\u7edf\u8fbe\u5230\u5e73\u8861\u65f6\u7684 \\(\\langle x^2 \\rangle\\)\uff09\u7684\u8868\u8fbe\u5f0f\uff1a</p> <ol> <li> <p>\u6765\u81ea\u968f\u673a\u52a8\u529b\u5b66 (FPE): \\(\\langle x^2 \\rangle_{ss} = \\frac{D}{\\gamma}\\)</p> </li> <li> <p>\u6765\u81ea\u5e73\u8861\u7edf\u8ba1\u529b\u5b66 (Equipartition): \\(\\langle x^2 \\rangle_{eq} = \\frac{k_B T}{k}\\)</p> </li> </ol> <p>\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u8868\u8fbe\u5f0f\u63cf\u8ff0\u7684\u662f\u540c\u4e00\u4e2a\u7269\u7406\u72b6\u6001\uff0c\u5b83\u4eec\u5fc5\u7136\u76f8\u7b49\uff1a</p> \\[\\frac{D}{\\gamma} = \\frac{k_B T}{k}\\] <p>\u73b0\u5728\uff0c\u6211\u4eec\u4ee3\u5165\u4e4b\u524d\u5b9a\u4e49\u7684\u5f1b\u8c6b\u7387 \\(\\gamma = k/\\zeta = k/(6\\pi\\eta R)\\)\uff1a</p> \\[\\frac{k}{6\\pi\\eta R} \\cdot D = k_B T\\] <p>\u5bf9\u8fd9\u4e2a\u65b9\u7a0b\u8fdb\u884c\u7b80\u5355\u7684\u4ee3\u6570\u6574\u7406\uff0c\u4e24\u8fb9\u7684\u52b2\u5ea6\u7cfb\u6570 \\(k\\) \u6070\u597d\u6d88\u6389\uff0c\u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u8457\u540d\u7684\u7231\u56e0\u65af\u5766-\u65af\u6258\u514b\u65af\u5173\u7cfb (Einstein-Stokes Relation)\uff1a</p> \\[D = \\frac{k_B T}{6\\pi\\eta R} = \\frac{k_B T}{\\zeta}\\]"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#34-","title":"3.4 \u6da8\u843d-\u8017\u6563\u5b9a\u7406","text":"<p>\u8fd9\u4e2a\u516c\u5f0f\u7684\u4f18\u7f8e\u4e4b\u5904\u8fdc\u4e0d\u6b62\u4e8e\u5b83\u8054\u7cfb\u4e86\u51e0\u4e2a\u7269\u7406\u91cf\uff0c\u66f4\u5728\u4e8e\u5b83\u6240\u63ed\u793a\u7684\u6df1\u523b\u7269\u7406\u539f\u7406\uff0c\u8fd9\u4e2a\u539f\u7406\u88ab\u79f0\u4e3a\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Fluctuation-Dissipation Theorem) \u7684\u4e00\u4e2a\u5177\u4f53\u5b9e\u4f8b\u3002\u8ba9\u6211\u4eec\u6765\u89e3\u8bfb\u8fd9\u4e2a\u5173\u7cfb\u5f0f\u7684\u4e24\u7aef\uff1a</p> <ul> <li> <p>\u6da8\u843d (Fluctuation)\uff1a\u7b49\u5f0f\u5de6\u8fb9\u7684\u6269\u6563\u7cfb\u6570 \\(D\\)\uff0c\u63cf\u8ff0\u7684\u662f\u7cfb\u7edf\u5185\u5728\u7684\u3001\u5fae\u89c2\u7684\u968f\u673a\u6da8\u843d\u7684\u5f3a\u5ea6\u3002\u5b83\u91cf\u5316\u4e86\u7c92\u5b50\u7531\u4e8e\u4e0e\u73af\u5883\u5206\u5b50\u8fdb\u884c\u65e0\u4f11\u6b62\u7684\u968f\u673a\u78b0\u649e\u800c\u4ea7\u751f\u7684\"\u6296\u52a8\"\u6216\"\u6447\u6446\"\u7684\u5267\u70c8\u7a0b\u5ea6\u3002\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u7cfb\u7edf\"\u65e0\u5e8f\"\u548c\"\u968f\u673a\u6027\"\u7684\u91cf\u3002</p> </li> <li> <p>\u8017\u6563 (Dissipation)\uff1a\u7b49\u5f0f\u53f3\u8fb9\u7684\u5206\u6bcd\uff0c\u6469\u64e6\u7cfb\u6570 \\(\\zeta = 6\\pi\\eta R\\)\uff0c\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u5b8f\u89c2\u7684\u3001\u786e\u5b9a\u6027\u7684\u80fd\u91cf\u8017\u6563\u8fc7\u7a0b\u3002\u5f53\u6211\u4eec\u8bd5\u56fe\u63a8\u52a8\u7c92\u5b50\u7a7f\u8fc7\u6d41\u4f53\u65f6\uff0c\u6d41\u4f53\u4f1a\u4ea7\u751f\u963b\u529b\uff0c\u8fd9\u4e2a\u963b\u529b\u4f1a\u4f7f\u7c92\u5b50\u7684\u5b8f\u89c2\u52a8\u80fd\u8f6c\u5316\u4e3a\u70ed\u80fd\u800c\u8017\u6563\u6389\u3002\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u7cfb\u7edf\"\u963b\u5c3c\"\u548c\"\u6469\u64e6\"\u7684\u91cf\u3002</p> </li> </ul> <p>\u7231\u56e0\u65af\u5766-\u65af\u6258\u514b\u65af\u5173\u7cfb\u77f3\u7834\u5929\u60ca\u5730\u6307\u51fa\uff1a\u6da8\u843d\u548c\u8017\u6563\u5e76\u975e\u4e24\u4e2a\u72ec\u7acb\u7684\u73b0\u8c61\uff0c\u5b83\u4eec\u672c\u8d28\u4e0a\u662f\u540c\u4e00\u7269\u7406\u8fc7\u7a0b\u7684\u4e24\u4e2a\u4e0d\u540c\u4fa7\u9762\u3002\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\u90fd\u6e90\u4e8e\u540c\u4e00\u4e2a\u5fae\u89c2\u8d77\u6e90\u2014\u2014\u7cfb\u7edf\u4e0e\u73af\u5883\uff08\u70ed\u6d74\uff09\u4e2d\u5927\u91cf\u7c92\u5b50\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u90a3\u4e9b\u5bfc\u81f4\u5b8f\u89c2\u7269\u4f53\u8fd0\u52a8\u65f6\u4ea7\u751f\u6469\u64e6\u529b\u7684\u5fae\u89c2\u78b0\u649e\uff0c\u4e5f\u6b63\u662f\u9a71\u52a8\u5fae\u89c2\u7c92\u5b50\u8fdb\u884c\u65e0\u89c4\u5219\u5e03\u6717\u8fd0\u52a8\u7684\u968f\u673a\u529b\u3002</p> <p>\u6e29\u5ea6 \\(T\\) \u5728\u8fd9\u4e2a\u5173\u7cfb\u4e2d\u626e\u6f14\u4e86\u81f3\u5173\u91cd\u8981\u7684\u89d2\u8272\uff0c\u5b83\u50cf\u4e00\u5ea7\u6865\u6881\uff0c\u5c06\u5fae\u89c2\u7684\u968f\u673a\u6da8\u843d\u4e0e\u5b8f\u89c2\u7684\u80fd\u91cf\u8017\u6563\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u4e00\u4e2a\u6e29\u5ea6\u66f4\u9ad8\u7684\u73af\u5883\uff0c\u610f\u5473\u7740\u5176\u5185\u90e8\u7c92\u5b50\u7684\u70ed\u8fd0\u52a8\u66f4\u5267\u70c8\u3002\u8fd9\u65e2\u4f1a\u5bfc\u81f4\u5bf9\u5e03\u6717\u7c92\u5b50\u7684\u968f\u673a\"\u8e22\u52a8\"\u66f4\u5f3a\uff08\u66f4\u5927\u7684 \\(D\\)\uff09\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u5bf9\u8bd5\u56fe\u7a7f\u8fc7\u5b83\u7684\u5b8f\u89c2\u7269\u4f53\u4ea7\u751f\u66f4\u5927\u7684\u963b\u529b\uff08\u66f4\u5927\u7684 \\(\\eta\\)\uff0c\u4ece\u800c\u66f4\u5927\u7684 \\(\\zeta\\)\uff09\u3002\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7cbe\u786e\u5730\u91cf\u5316\u4e86\u8fd9\u4e24\u8005\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p>"},{"location":"zh/notes/12.%20%E5%B8%83%E6%9C%97%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%A5%A5%E6%81%A9%E6%96%AF%E5%9D%A6-%E4%B9%8C%E4%BC%A6%E8%B4%9D%E5%85%8B%E8%BF%87%E7%A8%8B/#_1","title":"\u603b\u7ed3","text":"<p>\u56de\u770b\u6574\u4e2a\u8bb2\u5ea7\u7684\u903b\u8f91\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5b83\u5b9e\u9645\u4e0a\u6784\u6210\u4e86\u4e00\u4e2a\u5bf9\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7684\u7cbe\u5999\u7684\u3001\u5efa\u8bbe\u6027\u7684\u8bc1\u660e\u3002\u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b\u8fc7\u7a0b\u4e4b\u6240\u4ee5\u662f\u5982\u6b64\u5b8c\u7f8e\u7684\u7406\u8bba\"\u5b9e\u9a8c\u5ba4\"\uff0c\u6b63\u662f\u56e0\u4e3a\u5b83\u8db3\u591f\u7b80\u5355\uff0c\u53ef\u4ee5\u88ab\u89e3\u6790\u6c42\u89e3\uff0c\u540c\u65f6\u53c8\u8db3\u591f\u590d\u6742\uff0c\u5728\u5176\u6570\u5b66\u7ed3\u6784\u4e2d\u5929\u7136\u5730\u5305\u542b\u4e86\u6da8\u843d\u9879\uff08\\(D\\)\uff09\u548c\u8017\u6563\u9879\uff08\u901a\u8fc7 \\(\\gamma\\) \u5173\u8054\u7684 \\(\\zeta\\)\uff09\u3002\u901a\u8fc7\u6c42\u89e3\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u52a8\u529b\u5b66\u5e76\u5c06\u5176\u7a33\u6001\u89e3\u4e0e\u70ed\u529b\u5b66\u5e73\u8861\u539f\u7406\u8fdb\u884c\u5bf9\u6bd4\uff0c\u6211\u4eec\u4e0d\u4ec5\u89e3\u51b3\u4e86\u4e00\u4e2a\u5177\u4f53\u7684\u7269\u7406\u95ee\u9898\uff0c\u66f4\u63ed\u793a\u4e86\u4e00\u6761\u8d2f\u7a7f\u4e8e\u7269\u7406\u5b66\u4f17\u591a\u9886\u57df\u7684\u666e\u9002\u539f\u7406\u3002\u8fd9\u4e2a\u539f\u7406\u7684\u9002\u7528\u8303\u56f4\u8fdc\u8d85\u5e03\u6717\u8fd0\u52a8\uff0c\u4f8b\u5982\u5728\u7535\u5b50\u5b66\u4e2d\uff0c\u5b83\u8868\u73b0\u4e3a\u7535\u963b\u7684\u70ed\u566a\u58f0\uff08\u7ea6\u7ff0\u900a-\u5948\u594e\u65af\u7279\u566a\u58f0\uff09\u4e0e\u7535\u963b\u503c\u7684\u5173\u7cfb\u3002\u5b8f\u89c2\u7684\u786e\u5b9a\u6027\u89c4\u5f8b\uff08\u5982\u8d8b\u5411\u70ed\u5e73\u8861\uff09\u4e0e\u4e0d\u53ef\u907f\u514d\u7684\u8017\u6563\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u5fae\u89c2\u4e16\u754c\u7684\u6c38\u6052\u6da8\u843d</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/","title":"\u5f15\u8a00:\u4ece\u7406\u8bba\u5206\u6790\u5230\u8ba1\u7b97\u5de5\u5177","text":"<p>\u8fd9\u8282\u8bfe\u7531\u52a9\u6559\u8bb2\u6388\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u8bb2\u4e2d\uff0cErwin Frey \u6559\u6388\u5df2\u7ecf\u5e2e\u6211\u4eec\u5efa\u7acb\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u7406\u8bba\u6846\u67b6\u6765\u7406\u89e3\u548c\u63cf\u8ff0\u968f\u673a\u8fc7\u7a0b\u3002\u6211\u4eec\u4ece\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u57fa\u672c\u6982\u5ff5\u51fa\u53d1\uff0c\u63a8\u5bfc\u4e86\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b\uff08Chapman-Kolmogorov equation\uff09\uff0c\u5e76\u8fdb\u4e00\u6b65\u5f97\u5230\u4e86\u4e3b\u65b9\u7a0b\uff08Master Equation\uff09\u548c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff08Fokker-Planck equation\uff09\u3002\u6211\u4eec\u8fd8\u6df1\u5165\u63a2\u8ba8\u4e86\u7cfb\u7edf\u7684\u7a33\u6001\u3001\u7ec6\u81f4\u5e73\u8861\uff08detailed balance\uff09\u6761\u4ef6\u4ee5\u53ca\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\uff08Perron-Frobenius theorem\uff09\uff0c\u8fd9\u4e9b\u90fd\u4e3a\u6211\u4eec\u7406\u89e3\u7cfb\u7edf\u5982\u4f55\u8fbe\u5230\u5e76\u7ef4\u6301\u5176\u5e73\u8861\u6001\u63d0\u4f9b\u4e86\u6df1\u523b\u7684\u89c1\u89e3\u3002</p> <p></p> <p>\u5230\u76ee\u524d\u4e3a\u6b62,\u6211\u4eec\u7684\u89c6\u89d2\u4e3b\u8981\u662f\u5206\u6790\u6027\u7684:\u7ed9\u5b9a\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b(\u7531\u5176\u8f6c\u79fb\u901f\u7387\u5b9a\u4e49),\u6211\u4eec\u5206\u6790\u5b83\u7684\u884c\u4e3a,\u6bd4\u5982\u5b83\u7684\u7a33\u6001\u5206\u5e03\u662f\u4ec0\u4e48\u3002\u5728\u8fd9\u8282\u8bfe\u4e2d,\u6211\u4eec\u5c06\u8fdb\u884c\u8f6c\u53d8,\u5c06\u89c6\u89d2\u4ece\u5206\u6790\u8f6c\u5411\u7efc\u5408\u4e0e\u5e94\u7528\u3002\u6211\u4eec\u5c06\u5c55\u793a\u5982\u4f55\u5c06\u6574\u4e2a\u968f\u673a\u8fc7\u7a0b\u7684\u7406\u8bba\u6846\u67b6,\u7279\u522b\u662f\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u6982\u5ff5,\u8f6c\u53d8\u4e3a\u4e00\u79cd\u5f3a\u5927\u7684\u8ba1\u7b97\u5de5\u5177,\u7528\u4e8e\u89e3\u51b3\u4e00\u4e2a\u5728\u6240\u6709\u79d1\u5b66\u9886\u57df\u90fd\u81f3\u5173\u91cd\u8981\u7684\u95ee\u9898:\u7edf\u8ba1\u63a8\u65ad(statistical inference),\u5373\u5982\u4f55\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u6a21\u578b\u7684\u53c2\u6570\u3002</p> <p>\u901a\u8fc7\u5de7\u5999\u5730\"\u8bbe\u8ba1\"\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b,\u4f7f\u5176\u7a33\u6001\u6070\u597d\u662f\u6211\u4eec\u60f3\u8981\u7684\u76ee\u6807\u6982\u7387\u5206\u5e03,\u6211\u4eec\u5c31\u53ef\u4ee5\u751f\u6210\u8be5\u5206\u5e03\u7684\u6837\u672c,\u4ece\u800c\u89e3\u51b3\u90a3\u4e9b\u5728\u89e3\u6790\u4e0a\u65e0\u6cd5\u5904\u7406\u7684\u590d\u6742\u79ef\u5206\u95ee\u9898\u3002\u8fd9\u4e2a\u65b9\u6cd5\u88ab\u79f0\u4e3a\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u6d1b(Markov Chain Monte Carlo, MCMC),\u5b83\u5f7b\u5e95\u6539\u53d8\u4e86\u8d1d\u53f6\u65af\u7edf\u8ba1\u5b66\u548c\u8bb8\u591a\u4f9d\u8d56\u4e8e\u8ba1\u7b97\u5efa\u6a21\u7684\u79d1\u5b66\u9886\u57df\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#1","title":"1. \u95ee\u9898\u7684\u63d0\u51fa:\u4ece\u771f\u5b9e\u4e16\u754c\u6570\u636e\u4e2d\u63a8\u65ad\u6a21\u578b","text":"<p>\u79d1\u5b66\u7814\u7a76\u7684\u6838\u5fc3\u4efb\u52a1\u4e4b\u4e00\u662f\u4ece\u89c2\u6d4b\u6570\u636e\u4e2d\u6784\u5efa\u548c\u9a8c\u8bc1\u6570\u5b66\u6a21\u578b\u3002\u4e00\u4e2a\u597d\u7684\u6a21\u578b\u4e0d\u4ec5\u80fd\u89e3\u91ca\u73b0\u6709\u6570\u636e,\u8fd8\u80fd\u5bf9\u672a\u6765\u505a\u51fa\u9884\u6d4b\u3002\u7136\u800c,\u4e00\u4e2a\u6a21\u578b\u7684\u9884\u6d4b\u80fd\u529b\u5b8c\u5168\u53d6\u51b3\u4e8e\u5176\u53c2\u6570\u7684\u53d6\u503c\u3002\u90a3\u4e48,\u6211\u4eec\u5982\u4f55\u5229\u7528\u5b9e\u9a8c\u6216\u89c2\u6d4b\u6570\u636e\u6765\u786e\u5b9a\u8fd9\u4e9b\u672a\u77e5\u53c2\u6570\u5462?</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#11","title":"1.1  \u4e00\u4e2a\u7ecf\u5178\u7684\u751f\u6001\u7cfb\u7edf:\u731e\u7301\u4e0e\u96ea\u5154","text":"<p>\u4e3a\u4e86\u8ba9\u95ee\u9898\u5177\u4f53\u5316,\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u751f\u6001\u5b66\u4e2d\u975e\u5e38\u7ecf\u5178\u7684\u4f8b\u5b50:\u52a0\u62ff\u5927\u731e\u7301(lynx,\u6355\u98df\u8005)\u548c\u96ea\u5154(hare,\u730e\u7269)\u7684\u79cd\u7fa4\u52a8\u6001\u3002\u54c8\u5fb7\u900a\u6e7e\u516c\u53f8(Hudson Bay Company)\u57281900\u5e74\u81f31920\u5e74\u95f4\u8bb0\u5f55\u4e86\u6536\u96c6\u5230\u7684\u8fd9\u4e24\u79cd\u52a8\u7269\u7684\u6bdb\u76ae\u6570\u91cf,\u8fd9\u4e9b\u6570\u636e\u88ab\u8ba4\u4e3a\u662f\u5b83\u4eec\u5404\u81ea\u79cd\u7fa4\u6570\u91cf\u7684\u53ef\u9760\u6307\u6807\u3002</p> <p></p> <p></p> <p>\u5c06\u8fd9\u4e9b\u6570\u636e\u7ed8\u5236\u6210\u56fe\u8868,\u6211\u4eec\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u5230\u4e24\u4e2a\u79cd\u7fa4\u6570\u91cf\u968f\u65f6\u95f4\u7684\u5468\u671f\u6027\u632f\u8361,\u5e76\u4e14\u6355\u98df\u8005(\u731e\u7301)\u7684\u79cd\u7fa4\u9ad8\u5cf0\u603b\u662f\u7565\u5fae\u6ede\u540e\u4e8e\u730e\u7269(\u96ea\u5154)\u7684\u79cd\u7fa4\u9ad8\u5cf0\u3002</p> <p></p> <p>\u9762\u5bf9\u8fd9\u6837\u7684\u6570\u636e,\u4e00\u4e2a\u81ea\u7136\u800c\u7136\u7684\u79d1\u5b66\u95ee\u9898\u662f:\u6211\u4eec\u80fd\u5426\u627e\u5230\u4e00\u4e2a\u6570\u5b66\u6a21\u578b\u6765\u63cf\u8ff0\u5e76\u9884\u6d4b\u8fd9\u79cd\u5468\u671f\u6027\u884c\u4e3a? \u66f4\u8fdb\u4e00\u6b65,\u6211\u4eec\u80fd\u5426\u4ece\u8fd9\u4e9b\u5177\u4f53\u7684\u6570\u636e\u70b9\u4e2d,\u63a8\u65ad\u51fa\u63a7\u5236\u8fd9\u4e2a\u751f\u6001\u7cfb\u7edf\u52a8\u6001\u7684\"\u6cd5\u5219\"?</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#12-","title":"1.2 \u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b:\u4e00\u4e2a\u6570\u5b66\u63cf\u8ff0","text":"<p>\u4e3a\u4e86\u63cf\u8ff0\u8fd9\u79cd\u6355\u98df\u8005-\u730e\u7269\u7cfb\u7edf,\u4e00\u4e2a\u8457\u540d\u7684\u6570\u5b66\u6a21\u578b\u662f\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9(Lotka-Volterra)\u65b9\u7a0b\u3002\u8be5\u6a21\u578b\u7528\u4e00\u7ec4\u8026\u5408\u7684\u5e38\u5fae\u5206\u65b9\u7a0b(ODEs)\u6765\u63cf\u8ff0\u4e24\u4e2a\u79cd\u7fa4\u6570\u91cf\u7684\u53d8\u5316\u3002</p> <p>\u8bbe \\(x\\) \u4e3a\u96ea\u5154(\u730e\u7269)\u7684\u79cd\u7fa4\u6570\u91cf, \\(y\\) \u4e3a\u731e\u7301(\u6355\u98df\u8005)\u7684\u79cd\u7fa4\u6570\u91cf\u3002\u8be5\u6a21\u578b\u53ef\u4ee5\u5199\u4e3a:</p> \\[ \\frac{dx}{dt} = \\alpha x - \\beta xy \\quad \\text{(\u96ea\u5154)} \\] \\[ \\frac{dy}{dt} = -\\gamma y + \\delta xy \\quad \\text{(\u731e\u7301)} \\] <p>\u8ba9\u6211\u4eec\u5256\u6790\u8fd9\u4e2a\u6a21\u578b\u4e2d\u7684\u6bcf\u4e00\u9879,\u7406\u89e3\u5176\u80cc\u540e\u7684\u751f\u7269\u5b66\u610f\u4e49:</p> <ul> <li> <p>\\(\\alpha x\\): \u8fd9\u4e00\u9879\u4ee3\u8868\u96ea\u5154\u7684\u81ea\u7136\u589e\u957f\u3002\u5728\u6ca1\u6709\u6355\u98df\u8005\u7684\u60c5\u51b5\u4e0b(\\(y=0\\)),\u96ea\u5154\u79cd\u7fa4\u4f1a\u4ee5\u901f\u7387 \\(\\alpha\\) \u8fdb\u884c\u6307\u6570\u589e\u957f\u3002\u56e0\u6b64,\\(\\alpha\\) \u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u96ea\u5154\u7684\"\u51fa\u751f\u7387\"\u3002</p> </li> <li> <p>\\(-\\beta xy\\): \u8fd9\u4e00\u9879\u63cf\u8ff0\u4e86\u96ea\u5154\u56e0\u88ab\u731e\u7301\u6355\u98df\u800c\u5bfc\u81f4\u7684\u6570\u91cf\u51cf\u5c11\u3002\u6355\u98df\u4e8b\u4ef6\u53d1\u751f\u7684\u9891\u7387\u6b63\u6bd4\u4e8e\u96ea\u5154\u548c\u731e\u7301\u76f8\u9047\u7684\u9891\u7387,\u800c\u76f8\u9047\u9891\u7387\u53c8\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\u5b83\u4eec\u79cd\u7fa4\u6570\u91cf\u7684\u4e58\u79ef \\(xy\\)\u3002\u53c2\u6570 \\(\\beta\\) \u4ee3\u8868\u4e86\u6355\u98df\u7684\"\u6210\u529f\u7387\"\u6216\"\u6355\u98df\u6548\u7387\"\u3002</p> </li> <li> <p>\\(-\\gamma y\\): \u8fd9\u4e00\u9879\u4ee3\u8868\u731e\u7301\u7684\u81ea\u7136\u6b7b\u4ea1\u3002\u5728\u6ca1\u6709\u98df\u7269(\u96ea\u5154)\u7684\u60c5\u51b5\u4e0b(\\(x=0\\)),\u731e\u7301\u79cd\u7fa4\u4f1a\u56e0\u4e3a\u9965\u997f\u3001\u75be\u75c5\u6216\u79cd\u5185\u7ade\u4e89\u800c\u4ee5\u901f\u7387 \\(\\gamma\\) \u6307\u6570\u8870\u51cf\u3002\u56e0\u6b64,\\(\\gamma\\) \u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u731e\u7301\u7684\"\u6b7b\u4ea1\u7387\"\u3002</p> </li> <li> <p>\\(+\\delta xy\\): \u8fd9\u4e00\u9879\u63cf\u8ff0\u4e86\u731e\u7301\u79cd\u7fa4\u56e0\u6355\u98df\u96ea\u5154\u800c\u83b7\u5f97\u7684\u589e\u957f\u3002\u540c\u6837,\u8fd9\u4e2a\u589e\u957f\u7387\u4e5f\u6b63\u6bd4\u4e8e\u76f8\u9047\u9891\u7387 \\(xy\\)\u3002\u53c2\u6570 \\(\\delta\\) \u4ee3\u8868\u4e86\u731e\u7301\u5c06\u6355\u98df\u5230\u7684\u96ea\u5154\u8f6c\u5316\u4e3a\u81ea\u8eab\u7e41\u6b96\u7684\"\u8f6c\u5316\u6548\u7387\"\u3002</p> </li> </ul> <p>\u73b0\u5728,\u6211\u4eec\u7684\u95ee\u9898\u53d8\u5f97\u66f4\u52a0\u7cbe\u786e\u4e86\u3002\u63cf\u8ff0\u8fd9\u4e2a\u7cfb\u7edf\u52a8\u6001\u7684\"\u6cd5\u5219\"\u88ab\u5c01\u88c5\u5728\u4e86\u8fd9\u56db\u4e2a\u53c2\u6570 \\(\\theta=\\{\\alpha,\\beta,\\gamma,\\delta\\}\\) \u4e2d\u3002\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f,\u7ed9\u5b9a\u89c2\u6d4b\u6570\u636e \\(D\\)(\u5373\u90a3\u5f20\u65f6\u95f4\u5e8f\u5217\u56fe\u8868),\u5982\u4f55\u63a8\u65ad\u51fa\u8fd9\u7ec4\u53c2\u6570 \\(\\theta\\) \u6700\u53ef\u80fd\u7684\u503c?\u8fd9\u4fbf\u662f\u53c2\u6570\u63a8\u65ad(parameter inference)\u7684\u6838\u5fc3\u95ee\u9898\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u4ece\u6df7\u4e71\u7684\u771f\u5b9e\u4e16\u754c\u89c2\u6d4b(\u6bdb\u76ae\u6570\u636e)\u5230\u62bd\u8c61\u7684\u6570\u5b66\u6a21\u578b(\u5fae\u5206\u65b9\u7a0b)\u7684\u98de\u8dc3\u3002\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b\u65e0\u7591\u662f\u5bf9\u590d\u6742\u751f\u6001\u7cfb\u7edf\u7684\u7b80\u5316,\u4f46\u5b83\u6293\u4f4f\u4e86\u6355\u98df\u8005\u4e0e\u730e\u7269\u4e4b\u95f4\u76f8\u4e92\u4f5c\u7528\u7684\u6838\u5fc3\u53cd\u9988\u5faa\u73af\u3002\u6311\u6218\u4e0d\u4ec5\u5728\u4e8e\u6c42\u89e3\u8fd9\u7ec4\u65b9\u7a0b,\u66f4\u5728\u4e8e\u627e\u5230\u65b9\u7a0b\u7684\u7279\u5b9a\"\u7248\u672c\"(\u5373\u6700\u5408\u9002\u7684\u53c2\u6570\u503c),\u4f7f\u5176\u80fd\u591f\u6700\u597d\u5730\u4ee3\u8868\u6211\u4eec\u6240\u89c2\u6d4b\u5230\u7684\u771f\u5b9e\u4e16\u754c\u3002\u8fd9\u4e3a\u6211\u4eec\u63a5\u4e0b\u6765\u5f15\u5165\u6982\u7387\u65b9\u6cd5\u5960\u5b9a\u4e86\u57fa\u7840\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#2","title":"2. \u8d1d\u53f6\u65af\u6846\u67b6:\u7cfb\u7edf\u6027\u7684\u63a8\u65ad\u65b9\u6cd5","text":"<p>\u5982\u4f55\u7cfb\u7edf\u5730\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u53c2\u6570 \\(\\theta\\)?\u8d1d\u53f6\u65af\u63a8\u65ad(Bayesian inference)\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u4e8e\u6982\u7387\u8bba\u7684\u3001\u903b\u8f91\u4e25\u8c28\u7684\u6846\u67b6\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u5728\u83b7\u5f97\u65b0\u8bc1\u636e\u540e\u66f4\u65b0\u6211\u4eec\u5bf9\u4e8b\u7269\u4fe1\u5ff5\u7a0b\u5ea6\u7684\u65b9\u6cd5\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#21","title":"2.1 \u8d1d\u53f6\u65af\u5b9a\u7406\u7684\u5f15\u5165","text":"<p>\u8d1d\u53f6\u65af\u63a8\u65ad\u7684\u6838\u5fc3\u5de5\u5177\u662f\u8d1d\u53f6\u65af\u5b9a\u7406(Bayes' Theorem)\u3002\u5b83\u5c06\u6211\u4eec\u5173\u5fc3\u7684\u91cf\u8054\u7cfb\u5728\u4e00\u8d77,\u5176\u5f62\u5f0f\u5982\u4e0b:</p> \\[ p(\\theta|D) = \\frac{p(D|\\theta)p(\\theta)}{p(D)} \\] <p>\u8fd9\u4e2a\u516c\u5f0f\u770b\u8d77\u6765\u5f88\u7b80\u5355,\u4f46\u5b83\u8574\u542b\u4e86\u6df1\u523b\u7684\u903b\u8f91\u3002\u5b83\u544a\u8bc9\u6211\u4eec\u5982\u4f55\u5c06\u5173\u4e8e\u53c2\u6570\u7684\u5148\u9a8c\u77e5\u8bc6\u4e0e\u6570\u636e\u4e2d\u5305\u542b\u7684\u4fe1\u606f\u7ed3\u5408\u8d77\u6765,\u4ece\u800c\u5f97\u5230\u66f4\u65b0\u540e\u7684\u77e5\u8bc6\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#22","title":"2.2 \u89e3\u6784\u8d1d\u53f6\u65af\u5b9a\u7406","text":"<p>\u4e3a\u4e86\u5728\u6211\u4eec\u7684\u731e\u7301-\u96ea\u5154\u95ee\u9898\u4e2d\u5e94\u7528\u8fd9\u4e2a\u5b9a\u7406,\u6211\u4eec\u9700\u8981\u7406\u89e3\u516c\u5f0f\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\u3002</p> <p>\u8d1d\u53f6\u65af\u63a8\u65ad\u7684\u89c6\u89d2\u4e0e\u4f20\u7edf\u7684\"\u6700\u4f73\u62df\u5408\"\u65b9\u6cd5(\u5982\u6700\u5c0f\u4e8c\u4e58\u6cd5)\u6709\u7740\u6839\u672c\u6027\u7684\u4e0d\u540c\u3002\u4f20\u7edf\u65b9\u6cd5\u53ef\u80fd\u4f1a\u7ed9\u6211\u4eec\u4e00\u7ec4\u552f\u4e00\u7684\"\u6700\u4f73\"\u53c2\u6570\u503c\u3002\u800c\u8d1d\u53f6\u65af\u65b9\u6cd5\u5219\u544a\u8bc9\u6211\u4eec:\"\u4e0d\u5b58\u5728\u552f\u4e00\u6b63\u786e\u7684 \\(\\theta\\)\u3002\u76f8\u53cd,\u8fd9\u91cc\u6709\u4e00\u5e45\u53ef\u80fd\u6027\u7684\u56fe\u666f\u3002\u53c2\u6570\u7a7a\u95f4\u4e2d\u7684\u8fd9\u4e2a\u533a\u57df\u975e\u5e38\u53ef\u80fd,\u800c\u53e6\u4e00\u4e2a\u533a\u57df\u5219\u975e\u5e38\u4e0d\u53ef\u80fd\u3002\"</p> <p>\u8fd9\u79cd\u6982\u7387\u6027\u7684\u89c6\u89d2\u975e\u5e38\u5f3a\u5927\u3002\u5b83\u5141\u8bb8\u6211\u4eec\u56de\u7b54\u66f4\u6df1\u5165\u7684\u95ee\u9898,\u4f8b\u5982:\"\u96ea\u5154\u51fa\u751f\u7387 \\(\\alpha\\) \u4ecb\u4e8e0.5\u52300.6\u4e4b\u95f4\u7684\u6982\u7387\u662f\u591a\u5c11?\"\u6216\u8005\"\u6355\u98df\u7387 \\(\\beta\\) \u548c\u731e\u7301\u6b7b\u4ea1\u7387 \\(\\gamma\\) \u662f\u5426\u76f8\u5173?\"\u3002\u8fd9\u662f\u4e00\u79cd\u4ece\u786e\u5b9a\u6027\u601d\u7ef4\u5230\u6982\u7387\u6027\u601d\u7ef4\u7684\u6df1\u523b\u8f6c\u53d8,\u5b83\u66f4\u8bda\u5b9e\u5730\u53cd\u6620\u4e86\u6211\u4eec\u5728\u9762\u5bf9\u6709\u9650\u6570\u636e\u65f6\u7684\u4e0d\u786e\u5b9a\u6027\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#3","title":"3. \u8ba1\u7b97\u74f6\u9888:\u9ad8\u7ef4\u79ef\u5206\u7684\u6311\u6218","text":"<p>\u62e5\u6709\u540e\u9a8c\u5206\u5e03 \\(p(\\theta|D)\\) \u7406\u8bba\u4e0a\u89e3\u51b3\u4e86\u63a8\u65ad\u95ee\u9898,\u4f46\u5728\u5b9e\u8df5\u4e2d,\u6211\u4eec\u901a\u5e38\u9700\u8981\u4ece\u8fd9\u4e2a\u5206\u5e03\u4e2d\u63d0\u53d6\u4e00\u4e9b\u6458\u8981\u4fe1\u606f,\u6bd4\u5982\u53c2\u6570\u7684\u671f\u671b\u503c(\u5e73\u5747\u503c)\u6216\u65b9\u5dee(\u4e0d\u786e\u5b9a\u6027\u7684\u5927\u5c0f)\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#31","title":"3.1 \u4ece\u5206\u5e03\u5230\u671f\u671b\u503c","text":"<p>\u8981\u8ba1\u7b97\u67d0\u4e2a\u5173\u4e8e\u53c2\u6570\u7684\u51fd\u6570 \\(f(\\theta)\\) \u7684\u671f\u671b\u503c(\u4f8b\u5982,\\(f(\\theta)=\\alpha\\) \u5c31\u662f\u4e3a\u4e86\u8ba1\u7b97\u53c2\u6570 \\(\\alpha\\) \u7684\u5e73\u5747\u503c),\u6211\u4eec\u9700\u8981\u6c42\u89e3\u5982\u4e0b\u79ef\u5206:</p> \\[ \\langle f(\\theta) \\rangle = \\int f(\\theta) p(\\theta|D) d\\theta^n \\] <p>\u8fd9\u91cc\u7684 \\(n\\) \u662f\u53c2\u6570\u7684\u6570\u91cf(\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d,\\(n=4\\))\u3002\u8fd9\u4e2a\u79ef\u5206\u662f\u5728\u6574\u4e2a \\(n\\) \u7ef4\u53c2\u6570\u7a7a\u95f4\u4e0a\u8fdb\u884c\u7684\u3002</p> <p>\u6b64\u5916,\u6211\u4eec\u8fd8\u9700\u8981\u8ba1\u7b97\u5f52\u4e00\u5316\u5e38\u6570,\u5373\u8bc1\u636e \\(p(D)\\),\u5b83\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u540c\u6837\u5f62\u5f0f\u7684\u79ef\u5206:</p> \\[ p(D) = \\int p(D|\\theta)p(\\theta) d\\theta \\] <p>\u8fd9\u4e2a\u79ef\u5206\u901a\u5e38\u662f\u8d1d\u53f6\u65af\u63a8\u65ad\u4e2d\u6700\u56f0\u96be\u7684\u90e8\u5206\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#32","title":"3.2 \u7ef4\u5ea6\u707e\u96be","text":"<p>\u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u79ef\u5206\u5982\u6b64\u96be\u4ee5\u8ba1\u7b97?\u539f\u56e0\u5728\u4e8e\u6240\u8c13\u7684\u7ef4\u5ea6\u707e\u96be(Curse of Dimensionality)\u3002</p> <p>\u4e00\u79cd\u6700\u76f4\u89c2\u7684\u6570\u503c\u79ef\u5206\u65b9\u6cd5\u662f\"\u7f51\u683c\u6cd5\":\u6211\u4eec\u5c06\u6bcf\u4e2a\u53c2\u6570\u7ef4\u5ea6\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u79bb\u6563\u7684\u683c\u70b9,\u7136\u540e\u5728\u8fd9\u4e9b\u683c\u70b9\u4e0a\u8ba1\u7b97\u88ab\u79ef\u51fd\u6570\u7684\u503c,\u6700\u540e\u52a0\u6743\u6c42\u548c\u3002</p> <p>\u8ba9\u6211\u4eec\u770b\u770b\u4e3a\u4ec0\u4e48\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u8fc5\u901f\u5931\u6548\u3002\u5047\u8bbe\u6211\u4eec\u5bf9\u6bcf\u4e2a\u53c2\u6570\u7ef4\u5ea6\u53ea\u53d610\u4e2a\u683c\u70b9\u3002</p> <ul> <li> <p>\u5bf9\u4e8e1\u4e2a\u53c2\u6570(1D),\u6211\u4eec\u9700\u8981\u8ba1\u7b97 \\(10^1=10\\) \u6b21\u3002</p> </li> <li> <p>\u5bf9\u4e8e2\u4e2a\u53c2\u6570(2D),\u6211\u4eec\u9700\u8981\u8ba1\u7b97 \\(10^2=100\\) \u6b21\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u6211\u4eec\u76844\u53c2\u6570\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b(4D),\u6211\u4eec\u9700\u8981\u8ba1\u7b97 \\(10^4=10,000\\) \u6b21\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4e00\u4e2a\u670920\u4e2a\u53c2\u6570\u7684\u66f4\u590d\u6742\u7684\u6a21\u578b,\u6211\u4eec\u9700\u8981\u8ba1\u7b97 \\(10^{20}\\) \u6b21!\u8fd9\u4e2a\u6570\u5b57\u5df2\u7ecf\u8fdc\u8fdc\u8d85\u51fa\u4e86\u4efb\u4f55\u73b0\u4ee3\u8ba1\u7b97\u673a\u7684\u5904\u7406\u80fd\u529b\u3002</p> </li> </ul> <p>\u8ba1\u7b97\u91cf\u968f\u7ef4\u5ea6\u6307\u6570\u589e\u957f,\u8fd9\u4f7f\u5f97\u7f51\u683c\u6cd5\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u5b8c\u5168\u4e0d\u53ef\u884c\u3002</p> <p>\u66f4\u6df1\u5c42\u6b21\u7684\u95ee\u9898\u5728\u4e8e,\u9ad8\u7ef4\u7a7a\u95f4\u7684\u884c\u4e3a\u4e0e\u6211\u4eec\u7684\u4f4e\u7ef4\u76f4\u89c9\u76f8\u6096\u3002\u6b63\u5982\u52a9\u6559\u5728\u9ed1\u677f\u4e0a\u7684\u8349\u56fe\u6240\u793a,\u540e\u9a8c\u6982\u7387\u5206\u5e03 \\(p(\\theta|D)\\) \u7684\"\u8d28\u91cf\"\u901a\u5e38\u96c6\u4e2d\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\u4e00\u4e2a\u975e\u5e38\u5fae\u5c0f\u7684\u3001\u5f62\u72b6\u4e0d\u89c4\u5219\u7684\u533a\u57df\u5185\u3002\u800c\u5e7f\u9614\u7684\u53c2\u6570\u7a7a\u95f4\u4e2d\u7684\u7edd\u5927\u90e8\u5206\u533a\u57df,\u5176\u6982\u7387\u5bc6\u5ea6\u51e0\u4e4e\u4e3a\u96f6\u3002</p> <p></p> <p>\u7f51\u683c\u6cd5\u662f\"\u76f2\u76ee\"\u7684,\u5b83\u4f1a\u5747\u5300\u5730\u63a2\u7d22\u6574\u4e2a\u53c2\u6570\u7a7a\u95f4\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4f1a\u82b1\u8d39\u7edd\u5927\u90e8\u5206\u7684\u8ba1\u7b97\u8d44\u6e90\u53bb\u8bc4\u4f30\u90a3\u4e9b \\(p(\\theta|D) \\approx 0\\) \u7684\u70b9\u3002\u8fd9\u4e9b\u70b9\u7684\u51fd\u6570\u503c\u5bf9\u6700\u7ec8\u79ef\u5206\u7684\u8d21\u732e\u51e0\u4e4e\u4e3a\u96f6,\u56e0\u6b64\u8fd9\u4e9b\u8ba1\u7b97\u5b8c\u5168\u662f\u6d6a\u8d39\u3002</p> <p>\"\u7ef4\u5ea6\u707e\u96be\"\u4e0d\u4ec5\u4ec5\u662f\u8ba1\u7b97\u901f\u5ea6\u53d8\u6162\u7684\u95ee\u9898,\u5b83\u662f\u4e00\u4e2a\u6839\u672c\u6027\u7684\u5c3a\u5ea6\u95ee\u9898,\u4f7f\u5f97\u4e00\u6574\u7c7b\u7b80\u5355\u76f4\u89c2\u7684\u7b97\u6cd5\u53d8\u5f97\u6beb\u65e0\u7528\u5904\u3002\u95ee\u9898\u5f52\u7ed3\u4e3a\u641c\u7d22\u6548\u7387:\u6211\u4eec\u6b63\u5728\u4e00\u4e2a\u6307\u6570\u7ea7\u589e\u957f\u7684\u5de8\u5927\u7a7a\u95f4\u4e2d,\u5bfb\u627e\u4e00\u4e2a\u5fae\u5c0f\u7684\u3001\u6211\u4eec\u4e8b\u5148\u4e0d\u77e5\u9053\u5176\u4f4d\u7f6e\u7684\"\u91cd\u8981\"\u533a\u57df\u3002\u8fd9\u8feb\u4f7f\u6211\u4eec\u5fc5\u987b\u5f7b\u5e95\u6539\u53d8\u7b56\u7565\u3002\u5982\u679c\u6211\u4eec\u65e0\u6cd5\u63a2\u7d22\u6574\u4e2a\u7a7a\u95f4,\u90a3\u4e48\u6211\u4eec\u662f\u5426\u80fd\u88ab\u67d0\u79cd\u65b9\u6cd5\u5f15\u5bfc,\u53ea\u53bb\u63a2\u7d22\u90a3\u4e9b\u91cd\u8981\u7684\u533a\u57df\u5462?</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#4","title":"4. \u65b0\u7b56\u7565:\u8499\u7279\u5361\u6d1b\u79ef\u5206","text":"<p>\u9762\u5bf9\u9ad8\u7ef4\u79ef\u5206\u7684\u6311\u6218,\u6211\u4eec\u9700\u8981\u4e00\u79cd\u66f4\u667a\u80fd\u7684\u65b9\u6cd5\u3002\u8499\u7279\u5361\u6d1b\u79ef\u5206(Monte Carlo Integration)\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edd\u5999\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u7528\u968f\u673a\u91c7\u6837\u4ee3\u66ff\u4e86\u786e\u5b9a\u6027\u7684\u7f51\u683c\u5212\u5206\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#41","title":"4.1 \u5927\u6570\u5b9a\u5f8b\u7684\u5a01\u529b","text":"<p>\u8499\u7279\u5361\u6d1b\u79ef\u5206\u7684\u6838\u5fc3\u601d\u60f3\u57fa\u4e8e\u5927\u6570\u5b9a\u5f8b\u3002\u5b83\u5c06\u79ef\u5206\u7684\u8ba1\u7b97\u8fd1\u4f3c\u4e3a\u4e00\u4e2a\u6837\u672c\u5747\u503c\u7684\u8ba1\u7b97:</p> \\[ \\langle f(\\theta) \\rangle = \\int f(\\theta) p(\\theta|D) d\\theta \\approx \\frac{1}{N} \\sum_{i=1}^{N} f(\\theta^{(i)}) \\] <p>\u8fd9\u4e2a\u516c\u5f0f\u770b\u8d77\u6765\u975e\u5e38\u7b80\u5355,\u5c31\u50cf\u662f\u8ba1\u7b97 \\(f(\\theta)\\) \u7684\u666e\u901a\u5e73\u5747\u503c\u3002\u4f46\u5b83\u7684\u9b54\u529b\u5728\u4e8e\u8fd9\u4e9b\u6837\u672c \\(\\theta^{(i)}\\) \u662f\u5982\u4f55\u751f\u6210\u7684\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#42","title":"4.2 \u91cd\u8981\u6027\u91c7\u6837:\u5173\u952e\u7684\u6d1e\u89c1","text":"<p>\u4e3a\u4e86\u4f7f\u8fd9\u4e2a\u8fd1\u4f3c\u6709\u6548\u4e14\u9ad8\u6548,\u8fd9\u4e9b\u6837\u672c \\(\\theta^{(i)}\\) \u5fc5\u987b\u662f\u4ece\u76ee\u6807\u6982\u7387\u5206\u5e03 \\(p(\\theta|D)\\) \u672c\u8eab\u4e2d\u62bd\u53d6\u51fa\u6765\u7684\u3002</p> <p>\u8fd9\u4fbf\u662f\"\u91cd\u8981\u6027\u91c7\u6837\"(Importance Sampling)\u7684\u6838\u5fc3\u601d\u60f3\u3002\u901a\u8fc7\u76f4\u63a5\u4ece \\(p(\\theta|D)\\) \u4e2d\u62bd\u6837,\u6211\u4eec\u81ea\u7136\u800c\u7136\u5730\u5c06\u8ba1\u7b97\u7cbe\u529b\u96c6\u4e2d\u5728\u4e86\u6982\u7387\u5bc6\u5ea6\u9ad8\u7684\u533a\u57df\u2014\u2014\u4e5f\u5c31\u662f\u5bf9\u79ef\u5206\u8d21\u732e\u6700\u5927\u7684\u533a\u57df\u3002\u6211\u4eec\u4e0d\u518d\u6d6a\u8d39\u65f6\u95f4\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\u90a3\u4e9b\u6982\u7387\u4e3a\u96f6\u7684\"\u8352\u6f20\"\u91cc\u3002\u6837\u672c\u70b9\u4f1a\u4ee5\u4e0e\u5176\u6982\u7387\u6210\u6b63\u6bd4\u7684\u9891\u7387\u51fa\u73b0,\u8fd9\u6b63\u662f\u6211\u4eec\u6240\u9700\u8981\u7684\u3002</p> <p>\u8fd9\u4e2a\u8f6c\u53d8\u662f\u9769\u547d\u6027\u7684\u3002\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u5730\u5c06\u4e00\u4e2a\u68d8\u624b\u7684\u79ef\u5206\u95ee\u9898,\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u540c\u6837\u5177\u6709\u6311\u6218\u6027\u4f46\u53ef\u4ee5\u89e3\u51b3\u7684\u91c7\u6837\u95ee\u9898:</p> <p>\u6211\u4eec\u5982\u4f55\u4ece\u4e00\u4e2a\u6211\u4eec\u751a\u81f3\u65e0\u6cd5\u5f52\u4e00\u5316(\u56e0\u4e3a\u4e0d\u77e5\u9053 \\(p(D)\\))\u7684\u3001\u590d\u6742\u7684\u3001\u9ad8\u7ef4\u7684\u6982\u7387\u5206\u5e03 \\(p(\\theta|D)\\) \u4e2d\u751f\u6210\u968f\u673a\u6837\u672c?</p> <p>\u8499\u7279\u5361\u6d1b\u79ef\u5206\u4ee3\u8868\u4e86\u4e00\u79cd\u4ece\u786e\u5b9a\u6027\u3001\u7a77\u4e3e\u5f0f\u8ba1\u7b97\u5230\u8fd1\u4f3c\u6027\u3001\u968f\u673a\u6027\u6a21\u62df\u7684\u8303\u5f0f\u8f6c\u53d8\u3002\u5b83\u62e5\u62b1\u968f\u673a\u6027,\u5e76\u5c06\u5176\u4f5c\u4e3a\u514b\u670d\u7ef4\u5ea6\u707e\u96be\u7684\u6709\u529b\u5de5\u5177\u3002\u5b83\u89e3\u51b3\u4e86\u6548\u7387\u95ee\u9898,\u56e0\u4e3a\u6211\u4eec\u4e0d\u518d\u9700\u8981\u9884\u5148\u77e5\u9053\u91cd\u8981\u533a\u57df\u5728\u54ea\u91cc,\u91c7\u6837\u8fc7\u7a0b\u4f1a\u81ea\u52a8\u53d1\u73b0\u5b83\u3002\u73b0\u5728,\u6211\u4eec\u9700\u8981\u7684\u4e0d\u518d\u662f\u4e00\u4e2a\u79ef\u5206\u5668,\u800c\u662f\u4e00\u4e2a\u91c7\u6837\u5668\u3002\u8fd9\u4e3a\u6211\u4eec\u5f15\u5165\u6574\u4e2a\u968f\u673a\u8fc7\u7a0b\u7406\u8bba\u4f53\u7cfb\u63d0\u4f9b\u4e86\u6700\u7ec8\u7684\u52a8\u673a\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#5-mcmc","title":"5. \u901a\u8fc7\u968f\u673a\u8fc7\u7a0b\u751f\u6210\u6837\u672c:\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u6d1b(MCMC)","text":"<p>\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u80fd\u591f\u4ece\u4efb\u610f\u590d\u6742\u5206\u5e03 \\(p(\\theta|D)\\) \u4e2d\u91c7\u6837\u7684\u673a\u5668\u5462?\u8fd9\u5c31\u56de\u5230\u4e86\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u2014\u2014\u9a6c\u5c14\u53ef\u592b\u94fe\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#51","title":"5.1 \u56de\u987e\u6211\u4eec\u7684\u5de5\u5177\u7bb1:\u9a6c\u5c14\u53ef\u592b\u94fe\u4e0e\u7a33\u6001\u5206\u5e03","text":"<p>\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u524d\u51e0\u8bb2(\u7279\u522b\u662f\u7b2c6-8\u8bb2)\u7684\u6838\u5fc3\u6982\u5ff5:</p> <ul> <li> <p>\u9a6c\u5c14\u53ef\u592b\u94fe:\u4e00\u4e2a\"\u65e0\u8bb0\u5fc6\"\u7684\u968f\u673a\u8fc7\u7a0b,\u5176\u672a\u6765\u7684\u72b6\u6001\u53ea\u4f9d\u8d56\u4e8e\u5f53\u524d\u72b6\u6001,\u800c\u4e0e\u8fc7\u53bb\u65e0\u5173\u3002</p> </li> <li> <p>\u7a33\u6001\u5206\u5e03(Stationary Distribution) \\(\\pi\\):\u5728\u67d0\u4e9b\u6761\u4ef6\u4e0b(\u904d\u5386\u6027),\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u94fe\u5728\u8fd0\u884c\u8db3\u591f\u957f\u65f6\u95f4\u540e,\u5176\u72b6\u6001\u7684\u6982\u7387\u5206\u5e03\u4f1a\u6536\u655b\u5230\u4e00\u4e2a\u4e0d\u518d\u53d8\u5316\u7684\u6781\u9650\u5206\u5e03,\u5373\u7a33\u6001\u5206\u5e03\u3002</p> </li> <li> <p>\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406:\u4e3a\u4e00\u5927\u7c7b\u7cfb\u7edf\u7684\u7a33\u6001\u7684\u5b58\u5728\u6027\u548c\u552f\u4e00\u6027\u63d0\u4f9b\u4e86\u6570\u5b66\u4fdd\u8bc1\u3002</p> </li> <li> <p>\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6(Detailed Balance):\u8fd9\u662f\u4e00\u4e2a\u786e\u4fdd\u7cfb\u7edf\u80fd\u591f\u6536\u655b\u5230\u7a33\u6001 \\(\\pi\\) \u7684\u5145\u5206\u6761\u4ef6\u3002\u5176\u6570\u5b66\u8868\u8fbe\u5f0f\u4e3a:\\(\\pi(\\theta)W(\\theta'|\\theta) = \\pi(\\theta')W(\\theta|\\theta')\\),\u5176\u4e2d \\(W(\\theta'|\\theta)\\) \u662f\u4ece\u72b6\u6001 \\(\\theta\\) \u8f6c\u79fb\u5230\u72b6\u6001 \\(\\theta'\\) \u7684\u8f6c\u79fb\u6982\u7387\u3002</p> </li> </ul>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#52-mcmc","title":"5.2 MCMC\u7684\u6838\u5fc3\u601d\u60f3","text":"<p>\u73b0\u5728,\u6211\u4eec\u63ed\u793aMCMC\u65b9\u6cd5\u7684\u6838\u5fc3\u601d\u60f3:\u5982\u679c\u6211\u4eec\u80fd\u591f\u8bbe\u8ba1\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u94fe,\u4f7f\u5176\u552f\u4e00\u7684\u7a33\u6001\u5206\u5e03 \\(\\pi\\) \u6070\u597d\u5c31\u662f\u6211\u4eec\u60f3\u8981\u91c7\u6837\u7684\u76ee\u6807\u540e\u9a8c\u5206\u5e03 \\(p(\\theta|D)\\),\u90a3\u4f1a\u600e\u4e48\u6837?</p> <p>\u5982\u679c\u80fd\u505a\u5230\u8fd9\u4e00\u70b9,\u90a3\u4e48\u91c7\u6837\u8fc7\u7a0b\u5c06\u53d8\u5f97\u5f02\u5e38\u7b80\u5355:</p> <ol> <li> <p>\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u521d\u59cb\u70b9 \\(\\theta^{(0)}\\)\u3002</p> </li> <li> <p>\u8ba9\u8fd9\u4e2a\u9a6c\u5c14\u53ef\u592b\u94fe\u6839\u636e\u5176\u8f6c\u79fb\u89c4\u5219\u4e0d\u65ad\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb(\u968f\u673a\u6e38\u8d70)\u3002</p> </li> <li> <p>\u8fd0\u884c\u8db3\u591f\u957f\u7684\u65f6\u95f4,\u8ba9\u94fe\"\u5fd8\u8bb0\"\u5176\u521d\u59cb\u72b6\u6001,\u6536\u655b\u5230\u5176\u7a33\u6001\u5206\u5e03\u3002\u8fd9\u4e2a\u521d\u59cb\u9636\u6bb5\u88ab\u79f0\u4e3a\"\u71c3\u70e7\u671f\"(burn-in)\u3002</p> </li> <li> <p>\u5728\u71c3\u70e7\u671f\u7ed3\u675f\u540e,\u6211\u4eec\u5f00\u59cb\u8bb0\u5f55\u94fe\u6240\u8bbf\u95ee\u7684\u72b6\u6001\u5e8f\u5217 \\(\\{\\theta^{(i)}\\}\\)\u3002</p> </li> </ol> <p>\u6839\u636e\u7a33\u6001\u5206\u5e03\u7684\u5b9a\u4e49,\u8fd9\u4e2a\u5e8f\u5217 \\(\\{\\theta^{(i)}\\}\\) \u5c31\u662f\u6211\u4eec\u68a6\u5bd0\u4ee5\u6c42\u7684\u3001\u4ece\u76ee\u6807\u5206\u5e03 \\(p(\\theta|D)\\) \u4e2d\u62bd\u53d6\u7684\u4e00\u7cfb\u5217\u6837\u672c!\u6211\u4eec\u6210\u529f\u5730\u6784\u5efa\u4e86\u4e00\u4e2a\u91c7\u6837\u5668\u3002</p> <p>\u8fd9\u662f\u672c\u8bb2\u5ea7\u6982\u5ff5\u4e0a\u7684\u6838\u5fc3\u3002MCMC\u5c06\u63cf\u8ff0\u6027\u7684\u968f\u673a\u8fc7\u7a0b\u7406\u8bba\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u6307\u4ee4\u6027\u7684\u3001\u53ef\u64cd\u4f5c\u7684\u8ba1\u7b97\u5f15\u64ce\u3002\u6211\u4eec\u4e0d\u518d\u4ec5\u4ec5\u662f\u5206\u6790\u4e00\u4e2a\u7ed9\u5b9a\u7269\u7406\u7cfb\u7edf\u7684\u5e73\u8861\u6001;\u6211\u4eec\u662f\u5728\u5de5\u7a0b\u5316\u5730\u8bbe\u8ba1\u4e00\u4e2a\u8ba1\u7b97\"\u7cfb\u7edf\"(\u9a6c\u5c14\u53ef\u592b\u94fe),\u4f7f\u5176\u5e73\u8861\u6001\u6210\u4e3a\u5bf9\u6211\u4eec\u6709\u7528\u7684\u5de5\u5177(\u540e\u9a8c\u5206\u5e03)\u3002</p> <p>\u4ee5\u524d\u7684\u8bb2\u5ea7\u6559\u4f1a\u6211\u4eec:\"\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u8f6c\u79fb\u77e9\u9635 \\(W\\),\u8fd9\u91cc\u662f\u5982\u4f55\u627e\u5230\u5b83\u7684\u7a33\u6001\u5206\u5e03 \\(\\pi\\)\u3002\" \u800cMCMC\u5c06\u8fd9\u4e2a\u95ee\u9898\u5b8c\u5168\u98a0\u5012\u8fc7\u6765:\"\u6211\u4eec\u6709\u4e00\u4e2a\u60f3\u8981\u7684\u76ee\u6807\u7a33\u6001\u5206\u5e03 \\(\\pi=p(\\theta|D)\\),\u6211\u4eec\u5982\u4f55\u80fd\u627e\u5230\u4e00\u4e2a\u53ef\u4ee5\u4ea7\u751f\u5b83\u7684\u8f6c\u79fb\u77e9\u9635 \\(W\\)?\" \u8fd9\u662f\u4e00\u6b21\u4ece\u5206\u6790\u5230\u7efc\u5408\u7684\u98de\u8dc3\u3002\u9a6c\u5c14\u53ef\u592b\u94fe\u7406\u8bba(\u7279\u522b\u662f\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6)\u4e3a\u6211\u4eec\u6784\u5efa\u8fd9\u6837\u7684 \\(W\\) \u63d0\u4f9b\u4e86\u84dd\u56fe\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#6-metropolis-hastings","title":"6. Metropolis-Hastings\u7b97\u6cd5:\u4e00\u4e2a\u5b9e\u7528\u7684\u914d\u65b9","text":"<p>\u90a3\u4e48,\u5177\u4f53\u8be5\u5982\u4f55\u6784\u5efa\u6ee1\u8db3\u6761\u4ef6\u7684\u8f6c\u79fb\u89c4\u5219 \\(W\\) \u5462?Metropolis-Hastings\u7b97\u6cd5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u901a\u7528\u4e14\u5f3a\u5927\u7684\u914d\u65b9,\u53ef\u4ee5\u4e3a\u4efb\u610f\u76ee\u6807\u5206\u5e03\u6784\u5efa\u9a6c\u5c14\u53ef\u592b\u94fe\u3002</p> <p>Metropolis-Hastings \u7b97\u6cd5\u662f\u73b0\u4ee3\u8ba1\u7b97\u7edf\u8ba1\u5b66\u548c\u7269\u7406\u5b66\u4e2d\u6700\u91cd\u8981\u7684\u7b97\u6cd5\u4e4b\u4e00,\u5176\u53d1\u5c55\u6a2a\u8de8\u4e86\u4e8c\u5341\u4e16\u7eaa\u4e2d\u53f6\u7684\u4e24\u6b21\u5173\u952e\u521b\u65b0\u3002\u8fd9\u4e2a\u7b97\u6cd5\u6700\u521d\u7684\u7248\u672c\u7531 Nicholas Metropolis \u53ca\u5176\u5408\u4f5c\u8005(\u5305\u62ec Arianna Rosenbluth, Marshall Rosenbluth, Augusta Teller, \u548c Edward Teller)\u57281953\u5e74\u63d0\u51fa,\u5f53\u65f6\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u7269\u7406\u5b66\u4e2d\u9ad8\u7ef4\u7cfb\u7edf\u7684\u72b6\u6001\u65b9\u7a0b\u8ba1\u7b97\u95ee\u9898,\u5176\u6838\u5fc3\u601d\u60f3\u662f\u6784\u5efa\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u94fe,\u4f7f\u5176\u6700\u7ec8\u7684\u7a33\u5b9a\u5206\u5e03\u662f\u6211\u4eec\u60f3\u8981\u62bd\u6837\u7684\u76ee\u6807\u5206\u5e03,\u6700\u521d\u7684\u7248\u672c\u4ec5\u9650\u4e8e\u5bf9\u79f0\u7684\u63d0\u8bae\u5206\u5e03\u3002\u968f\u540e,\u57281970\u5e74,\u7edf\u8ba1\u5b66\u5bb6 W. K. Hastings \u5c06\u8be5\u7b97\u6cd5\u63a8\u5e7f\u5230\u4e86\u975e\u5bf9\u79f0\u63d0\u8bae\u5206\u5e03\u7684\u60c5\u51b5,\u6781\u5927\u5730\u6269\u5c55\u4e86\u5176\u9002\u7528\u8303\u56f4,\u5f62\u6210\u4e86\u6211\u4eec\u4eca\u5929\u6240\u77e5\u7684 Metropolis-Hastings \u7b97\u6cd5\u3002</p> <p>\u8be5\u7b97\u6cd5\u7684\u5e94\u7528\u6781\u4e3a\u5e7f\u6cdb,\u5c24\u5176\u5728\u8d1d\u53f6\u65af\u7edf\u8ba1\u4e2d\u626e\u6f14\u7740\u6838\u5fc3\u89d2\u8272\u3002\u5f53\u4e00\u4e2a\u6a21\u578b\u7684\u540e\u9a8c\u6982\u7387\u5206\u5e03\u5f62\u5f0f\u590d\u6742\u3001\u7ef4\u5ea6\u5f88\u9ad8,\u4ee5\u81f3\u4e8e\u65e0\u6cd5\u76f4\u63a5\u8fdb\u884c\u89e3\u6790\u8ba1\u7b97\u6216\u62bd\u6837\u65f6,Metropolis-Hastings \u7b97\u6cd5\u4fbf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u6570\u503c\u6a21\u62df\u5de5\u5177\u3002\u5177\u4f53\u5e94\u7528\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e:\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u8fdb\u884c\u8d1d\u53f6\u65af\u63a8\u65ad,\u4f30\u8ba1\u590d\u6742\u6a21\u578b\u7684\u53c2\u6570;\u5728\u8ba1\u7b97\u751f\u7269\u5b66\u4e2d\u7528\u4e8e\u7cfb\u7edf\u53d1\u80b2\u6811\u7684\u6784\u5efa;\u5728\u7269\u7406\u5b66\u4e2d\u6a21\u62df\u591a\u7c92\u5b50\u7cfb\u7edf\u7684\u884c\u4e3a;\u5728\u91d1\u878d\u9886\u57df\u7528\u4e8e\u98ce\u9669\u5efa\u6a21\u548c\u671f\u6743\u5b9a\u4ef7\u3002\u53ef\u4ee5\u8bf4,\u4efb\u4f55\u9700\u8981\u4ece\u4e00\u4e2a\u96be\u4ee5\u76f4\u63a5\u5904\u7406\u7684\u6982\u7387\u5206\u5e03\u4e2d\u8fdb\u884c\u62bd\u6837\u7684\u79d1\u5b66\u548c\u5de5\u7a0b\u9886\u57df,\u90fd\u80fd\u770b\u5230 Metropolis-Hastings \u7b97\u6cd5\u7684\u8eab\u5f71\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#61","title":"6.1 \u7b97\u6cd5\u6b65\u9aa4","text":"<p>\u8be5\u7b97\u6cd5\u7684\u6d41\u7a0b\u975e\u5e38\u6e05\u6670,\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5:\u63d0\u8bae\u548c\u63a5\u53d7/\u62d2\u7edd\u3002</p> <p>1. \u521d\u59cb\u5316:\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\u4efb\u610f\u9009\u62e9\u4e00\u4e2a\u521d\u59cb\u72b6\u6001 \\(\\theta^{(0)}\\)\u3002</p> <p>2. \u8fed\u4ee3:\u5bf9\u4e8e \\(i=1,2,...,N\\):</p> <p>a. \u63d0\u8bae (Propose):\u6839\u636e\u4e00\u4e2a\u63d0\u8bae\u5206\u5e03(proposal distribution) \\(q(\\theta'|\\theta^{(i-1)})\\),\u4ece\u5f53\u524d\u72b6\u6001 \\(\\theta^{(i-1)}\\) \u51fa\u53d1,\u751f\u6210\u4e00\u4e2a\u5019\u9009\u72b6\u6001 \\(\\theta'\\)\u3002\u8fd9\u4e2a\u63d0\u8bae\u5206\u5e03\u53ef\u4ee5\u5f88\u7b80\u5355,\u4f8b\u5982\u4e00\u4e2a\u4ee5\u5f53\u524d\u72b6\u6001\u4e3a\u4e2d\u5fc3\u7684\u6b63\u6001\u5206\u5e03\u3002</p> <p>b. \u8ba1\u7b97\u63a5\u53d7\u7387 (Accept/Reject):\u8ba1\u7b97\u63a5\u53d7\u8fd9\u4e2a\u63d0\u8bae\u7684\u6982\u7387 \\(A(\\theta'|\\theta^{(i-1)})\\)\u3002Metropolis-Hastings\u7b97\u6cd5\u7ed9\u51fa\u7684\u63a5\u53d7\u7387\u4e3a:</p> \\[ A(\\theta' | \\theta) = \\min\\left(1, \\frac{p(\\theta')q(\\theta|\\theta')}{p(\\theta)q(\\theta'|\\theta)}\\right) \\] <p>\u6ce8\u610f,\u6211\u4eec\u5728\u8fd9\u91cc\u7528 \\(p(\\theta)\\) \u6765\u4ee3\u8868\u6211\u4eec\u7684\u76ee\u6807\u5206\u5e03 \\(p(\\theta|D)\\)\u3002</p> <p>c. \u51b3\u7b56:\u4ece \\([0,1]\\) \u7684\u5747\u5300\u5206\u5e03\u4e2d\u62bd\u53d6\u4e00\u4e2a\u968f\u673a\u6570 \\(u\\)\u3002</p> <p>\u5982\u679c $u&lt;A $,\u5219\u63a5\u53d7\u8fd9\u4e2a\u63d0\u8bae,\u4ee4\u65b0\u72b6\u6001 \\(\\theta^{(i)}=\\theta'\\)\u3002</p> <p>\u5426\u5219,\u62d2\u7edd\u8fd9\u4e2a\u63d0\u8bae,\u4ee4\u65b0\u72b6\u6001 \\(\\theta^{(i)}=\\theta^{(i-1)}\\)(\u5373\u505c\u7559\u5728\u539f\u5730)\u3002</p> <p>\u901a\u8fc7\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b,\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u94fe\u6837\u672c\u5e8f\u5217 \\(\\{\\theta^{(0)},\\theta^{(1)},...,\\theta^{(N)}\\}\\)\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#62","title":"6.2 \u4e3a\u4ec0\u4e48\u5b83\u6709\u6548:\u5f3a\u5236\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861","text":"<p>\u8fd9\u4e2a\u7b97\u6cd5\u7684\u7cbe\u5999\u4e4b\u5904\u5728\u4e8e,\u4e0a\u8ff0\u5b9a\u4e49\u7684\u63a5\u53d7\u7387 \\(A\\) \u6070\u597d\u80fd\u4fdd\u8bc1\u6574\u4e2a\u8fc7\u7a0b\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6,\u4ece\u800c\u786e\u4fdd\u94fe\u7684\u7a33\u6001\u5206\u5e03\u5c31\u662f\u6211\u4eec\u7684\u76ee\u6807\u5206\u5e03 \\(p(\\theta)\\)\u3002</p> <p>\u8ba9\u6211\u4eec\u6765\u7406\u89e3\u63a5\u53d7\u7387\u516c\u5f0f\u4e2d\u7684\u4e24\u4e2a\u5173\u952e\u6bd4\u7387:</p> <ul> <li> <p>\\(\\frac{p(\\theta')}{p(\\theta)}\\):\u8fd9\u662f\u76ee\u6807\u5206\u5e03\u5728\u63d0\u8bae\u70b9\u548c\u5f53\u524d\u70b9\u7684\u6982\u7387\u5bc6\u5ea6\u4e4b\u6bd4\u3002\u5982\u679c\u63d0\u8bae\u7684\u65b0\u70b9 \\(\\theta'\\) \u4f4d\u4e8e\u4e00\u4e2a\u6982\u7387\u66f4\u9ad8\u7684\u533a\u57df(\\(p(\\theta')&gt;p(\\theta)\\)),\u90a3\u4e48\u8fd9\u4e2a\u6bd4\u7387\u5927\u4e8e1,\u63a5\u53d7\u7387 \\(A\\) \u5c06\u4e3a1,\u6211\u4eec\u603b\u662f\u4f1a\u63a5\u53d7\u8fd9\u4e2a\u79fb\u52a8\u3002\u8fd9\u4fdd\u8bc1\u4e86\u94fe\u503e\u5411\u4e8e\u5411\u9ad8\u6982\u7387\u533a\u57df\u79fb\u52a8\u3002\u5982\u679c\u63d0\u8bae\u70b9\u6982\u7387\u66f4\u4f4e,\u6211\u4eec\u5219\u4ee5\u4e00\u5b9a\u7684\u6982\u7387\u63a5\u53d7\u5b83,\u8fd9\u4f7f\u5f97\u94fe\u80fd\u591f\u63a2\u7d22\u6574\u4e2a\u5206\u5e03,\u800c\u4e0d\u4ec5\u4ec5\u662f\u505c\u7559\u5728\u6982\u7387\u7684\u6700\u9ad8\u5cf0\u3002</p> </li> <li> <p>\\(\\frac{q(\\theta|\\theta')}{q(\\theta'|\\theta)}\\):\u8fd9\u662f\u63d0\u8bae\u5206\u5e03\u7684\u4fee\u6b63\u56e0\u5b50\u3002\u5b83\u7528\u4e8e\u4fee\u6b63\u4efb\u4f55\u53ef\u80fd\u5b58\u5728\u7684\"\u63d0\u8bae\u504f\u89c1\"\u3002\u5982\u679c\u4ece \\(\\theta\\) \u63d0\u8bae \\(\\theta'\\) \u6bd4\u4ece \\(\\theta'\\) \u63d0\u8bae \\(\\theta\\) \u66f4\u5bb9\u6613,\u8fd9\u4e2a\u6bd4\u7387\u5c31\u4f1a\u5bf9\u6b64\u8fdb\u884c\u8865\u507f,\u786e\u4fdd\u63a2\u7d22\u662f\u516c\u5e73\u7684\u3002\u5728\u8bb8\u591a\u5b9e\u9645\u5e94\u7528\u4e2d,\u6211\u4eec\u4f1a\u9009\u62e9\u4e00\u4e2a\u5bf9\u79f0\u7684\u63d0\u8bae\u5206\u5e03,\u4f8b\u5982\u6b63\u6001\u5206\u5e03,\u6b64\u65f6 \\(q(\\theta|\\theta')=q(\\theta'|\\theta)\\),\u8fd9\u4e2a\u4fee\u6b63\u56e0\u5b50\u5c31\u7b49\u4e8e1\u3002\u7b97\u6cd5\u7b80\u5316\u4e3a\u539f\u59cb\u7684Metropolis\u7b97\u6cd5,\u5176\u63a5\u53d7\u7387\u4e3a \\(A=\\min(1,\\frac{p(\\theta')}{p(\\theta)})\\)\u3002</p> </li> </ul> <p>\u8fd9\u4e2a\u7b97\u6cd5\u8fd8\u6709\u4e00\u4e2a\u5de8\u5927\u7684\u5b9e\u8df5\u4f18\u52bf:\u8bf7\u6ce8\u610f,\u5728\u63a5\u53d7\u7387\u7684\u8ba1\u7b97\u4e2d,\u6211\u4eec\u53ea\u9700\u8981\u76ee\u6807\u5206\u5e03\u7684\u6bd4\u7387 \\(\\frac{p(\\theta')}{p(\\theta)}\\)\u3002\u8fd9\u610f\u5473\u7740,\u5bf9\u4e8e\u8d1d\u53f6\u65af\u63a8\u65ad \\(p(\\theta|D)=\\frac{p(D|\\theta)p(\\theta)}{p(D)}\\),\u90a3\u4e2a\u6781\u5176\u96be\u4ee5\u8ba1\u7b97\u7684\u5f52\u4e00\u5316\u5e38\u6570(\u8bc1\u636e)\\(p(D)\\) \u5728\u6bd4\u7387\u4e2d\u88ab\u5b8c\u7f8e\u5730\u6d88\u6389\u4e86!</p> \\[ \\frac{p(\\theta|D)}{p(\\theta'|D)} = \\frac{p(D|\\theta)p(\\theta)/p(D)}{p(D|\\theta')p(\\theta')/p(D)} = \\frac{p(D|\\theta)p(\\theta)}{p(D|\\theta')p(\\theta')} \\] <p>\u6211\u4eec\u53ea\u9700\u8981\u80fd\u591f\u8ba1\u7b97\u4f3c\u7136 \\(p(D|\\theta)\\) \u548c\u5148\u9a8c \\(p(\\theta)\\) \u5373\u53ef,\u800c\u8fd9\u901a\u5e38\u662f\u53ef\u884c\u7684\u3002\u8fd9\u6b63\u662fMCMC\u65b9\u6cd5\u5982\u6b64\u6210\u529f\u548c\u666e\u53ca\u7684\u5173\u952e\u539f\u56e0\u4e4b\u4e00\u3002\u5b83\u5de7\u5999\u5730\u7ed5\u8fc7\u4e86\u8d1d\u53f6\u65af\u63a8\u65ad\u4e2d\u6700\u5927\u7684\u8ba1\u7b97\u969c\u788d\u3002</p> <p>\u7b97\u6cd5\u7684\u7ed3\u6784\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\"\u63d0\u8bae-\u4fee\u6b63\"\u7684\u667a\u80fd\u7cfb\u7edf\u3002\u63d0\u8bae\u5206\u5e03 \\(q\\) \u8d1f\u8d23\u63a2\u7d22,\u5b83\u53ef\u4ee5\u662f\u7b80\u5355\u751a\u81f3\u662f\"\u76f2\u76ee\"\u7684\u3002\u800c\u63a5\u53d7\u6982\u7387 \\(A\\) \u5219\u662f\u667a\u80fd\u7684\u8fc7\u6ee4\u5668,\u5b83\u901a\u8fc7\u5f3a\u5236\u6267\u884c\u7ec6\u81f4\u5e73\u8861\u8fd9\u4e00\u7269\u7406\u6cd5\u5219,\u786e\u4fdd\u4e86\u65e0\u8bba\u63a2\u7d22\u8fc7\u7a0b\u5982\u4f55,\u6700\u7ec8\u7684\u7ed3\u679c\u90fd\u4f1a\u6536\u655b\u5230\u6b63\u786e\u7684\u76ee\u6807\u5206\u5e03\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#7-mcmc-","title":"7. \u4f7f\u7528MCMC\u6c42\u89e3\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b\u53c2\u6570","text":"<p>\u73b0\u5728,\u6211\u4eec\u5c06\u7406\u8bba\u4ed8\u8bf8\u5b9e\u8df5\u3002\u6211\u4eec\u56de\u5230\u8bb2\u5ea7\u6700\u521d\u7684\u4f8b\u5b50:\u731e\u7301\u4e0e\u96ea\u5154\u7684\u79cd\u7fa4\u52a8\u6001\u3002\u6211\u4eec\u5c06\u4f7f\u7528Metropolis-Hastings MCMC\u7b97\u6cd5,\u6839\u636e\u54c8\u5fb7\u900a\u6e7e\u516c\u53f8\u63d0\u4f9b\u7684\u6570\u636e,\u6765\u63a8\u65ad\u51fa\u6700\u53ef\u80fd\u63cf\u8ff0\u8fd9\u4e2a\u751f\u6001\u7cfb\u7edf\u7684\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b\u7684\u56db\u4e2a\u53c2\u6570 (\\(\\alpha, \\beta, \\gamma, \\delta\\))\u3002</p> <p>\u8fd9\u4e2a\u6848\u4f8b\u7684\u6311\u6218\u5728\u4e8e,\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b\u662f\u4e00\u7ec4\u5fae\u5206\u65b9\u7a0b,\u6ca1\u6709\u7b80\u5355\u7684\u89e3\u6790\u89e3\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u53c2\u6570,\u6211\u4eec\u9700\u8981\u901a\u8fc7\u6570\u503c\u79ef\u5206\u6765\u5f97\u5230\u79cd\u7fa4\u6570\u91cf\u7684\u6f14\u5316\u66f2\u7ebf\u3002\u8fd9\u4f7f\u5f97\u540e\u9a8c\u6982\u7387\u5206\u5e03 \\(p(\\theta|D)\\) \u53d8\u5f97\u5f02\u5e38\u590d\u6742,\u65e0\u6cd5\u76f4\u63a5\u8ba1\u7b97\u6216\u91c7\u6837\u3002\u8fd9\u6b63\u662fMCMC\u5927\u663e\u8eab\u624b\u7684\u573a\u666f\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#71","title":"7.1 \u5efa\u6a21\u601d\u8def","text":"<ol> <li>\u6a21\u578b: \u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002</li> <li>\u6570\u636e: 1900-1920\u5e74\u7684\u96ea\u5154(H)\u548c\u731e\u7301(L)\u6570\u91cf\u3002</li> <li>\u76ee\u6807: \u6c42\u89e3\u540e\u9a8c\u6982\u7387\u5206\u5e03 \\(p(\\alpha, \\beta, \\gamma, \\delta | \\text{\u6570\u636e})\\)\u3002</li> <li>\u65b9\u6cd5: \u6784\u5efa\u4e00\u4e2aMetropolis-Hastings\u91c7\u6837\u5668\u3002<ul> <li>\u72b6\u6001\u7a7a\u95f4: \u56db\u7ef4\u53c2\u6570\u7a7a\u95f4 \\((\\alpha, \\beta, \\gamma, \\delta)\\)\u3002</li> <li>\u76ee\u6807\u5206\u5e03: \u540e\u9a8c\u6982\u7387 \\(p(\\theta|D) \\propto p(D|\\theta)p(\\theta)\\)\u3002<ul> <li>\u4f3c\u7136\u51fd\u6570 \\(p(D|\\theta)\\): \u6211\u4eec\u5047\u8bbe\u89c2\u6d4b\u6570\u636e\u4e0e\u6a21\u578b\u9884\u6d4b\u4e4b\u95f4\u7684\u8bef\u5dee\u670d\u4ece\u5bf9\u6570\u6b63\u6001\u5206\u5e03\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4f1a\u8ba1\u7b97\u6a21\u578b\u5728\u7ed9\u5b9a\u53c2\u6570\\(\\theta\\)\u4e0b\u9884\u6d4b\u7684\u79cd\u7fa4\u6570\u91cf,\u5e76\u5c06\u5176\u4e0e\u771f\u5b9e\u6570\u636e\u8fdb\u884c\u6bd4\u8f83,\u8ba1\u7b97\u5176\u6982\u7387\u3002</li> <li>\u5148\u9a8c\u5206\u5e03 \\(p(\\theta)\\): \u7531\u4e8e\u6211\u4eec\u5bf9\u53c2\u6570\u6ca1\u6709\u592a\u591a\u5148\u9a8c\u77e5\u8bc6,\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u65e0\u4fe1\u606f\u7684\u3001\u5bbd\u6cdb\u7684\u5747\u5300\u5206\u5e03\u6216\u6b63\u6001\u5206\u5e03\u4f5c\u4e3a\u5148\u9a8c\u3002</li> </ul> </li> <li>\u63d0\u8bae\u5206\u5e03 \\(q(\\theta'|\\theta)\\): \u6211\u4eec\u91c7\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u968f\u673a\u6e38\u8d70\u7b56\u7565\u3002\u5728\u5f53\u524d\u53c2\u6570\u70b9\\(\\theta\\)\u9644\u8fd1,\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u5c0f\u7684\u968f\u673a\u6270\u52a8(\u4f8b\u5982,\u4ece\u4e00\u4e2a\u591a\u5143\u6b63\u6001\u5206\u5e03\u4e2d\u91c7\u6837)\u6765\u751f\u6210\u65b0\u7684\u63d0\u8bae\u70b9\\(\\theta'\\)\u3002</li> </ul> </li> </ol>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#72-python","title":"7.2 Python \u5b9e\u73b0","text":"<p>\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u5b8c\u6574\u5730\u5c55\u793a\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e2aMCMC\u8fc7\u7a0b\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import odeint\nfrom scipy.stats import norm\n\n# 1. Load data\n# Data source: https://github.com/stan-dev/example-models\n# Year, Lynx (x1000), Hare (x1000)\ndata = np.array([\n    [1900, 4.0, 30.0], [1901, 6.1, 47.2], [1902, 9.8, 70.2],\n    [1903, 35.2, 77.4], [1904, 59.4, 36.3], [1905, 41.7, 20.6],\n    [1906, 19.0, 18.1], [1907, 13.0, 21.4], [1908, 8.3, 22.0],\n    [1909, 9.1, 25.4], [1910, 7.4, 27.1], [1911, 8.0, 40.3],\n    [1912, 12.3, 57.0], [1913, 19.5, 76.6], [1914, 45.7, 52.3],\n    [1915, 51.1, 19.5], [1916, 29.7, 11.2], [1917, 15.8, 7.6],\n    [1918, 9.7, 14.6], [1919, 10.1, 16.2], [1920, 8.6, 24.7]\n])\nyears = data[:, 0]\nlynx_data = data[:, 1]\nhare_data = data[:, 2]\ny_obs = np.vstack((hare_data, lynx_data)).T # Observed data [H, L]\n\n# 2. Define Lotka-Volterra model\ndef lotka_volterra(y, t, alpha, beta, gamma, delta):\n    \"\"\"\n    Lotka-Volterra differential equations\n    y: [H, L] population array\n    t: time\n    alpha, beta, gamma, delta: model parameters\n    \"\"\"\n    H, L = y\n    dH_dt = alpha * H - beta * H * L\n    dL_dt = delta * H * L - gamma * L\n    return [dH_dt, dL_dt]\n\n# 3. Define log posterior probability function\ndef log_posterior(theta, y_obs, t_obs):\n    alpha, beta, gamma, delta = theta\n\n    # a. Log-Prior\n    # Assume parameters follow wide normal distributions, and must be positive\n    if any(p &lt;= 0 for p in theta):\n        return -np.inf\n    log_prior_alpha = norm.logpdf(alpha, loc=1, scale=1)\n    log_prior_beta = norm.logpdf(beta, loc=0.05, scale=0.05)\n    log_prior_gamma = norm.logpdf(gamma, loc=1, scale=1)\n    log_prior_delta = norm.logpdf(delta, loc=0.02, scale=0.02)\n    log_p = log_prior_alpha + log_prior_beta + log_prior_gamma + log_prior_delta\n\n    # b. Log-Likelihood\n    # Initial conditions use the first point of data\n    y0 = y_obs[0, :]\n    # Numerically solve differential equations using odeint\n    y_pred = odeint(lotka_volterra, y0, t_obs, args=(alpha, beta, gamma, delta))\n\n    # Assume errors follow a log-normal distribution, equivalent to log-transformed data following a normal distribution\n    # We also need to estimate a standard deviation sigma for the error\n    # For simplicity, we fix a reasonable sigma value here\n    sigma = 0.5 \n    log_likelihood = np.sum(norm.logpdf(np.log(y_obs), loc=np.log(y_pred), scale=sigma))\n\n    return log_p + log_likelihood\n\n# 4. Implement Metropolis-Hastings MCMC\ndef metropolis_hastings(log_posterior_func, n_iter, initial_theta, proposal_std, y_obs, t_obs):\n    # Initialization\n    n_params = len(initial_theta)\n    chain = np.zeros((n_iter, n_params))\n    chain[0, :] = initial_theta\n\n    current_log_post = log_posterior_func(initial_theta, y_obs, t_obs)\n\n    accepted_count = 0\n\n    for i in range(1, n_iter):\n        if i % 1000 == 0:\n            print(f\"Iteration {i}/{n_iter}...\")\n\n        # a. Propose new point\n        proposal_theta = np.random.normal(loc=chain[i-1, :], scale=proposal_std)\n\n        # b. Calculate acceptance probability\n        proposal_log_post = log_posterior_func(proposal_theta, y_obs, t_obs)\n\n        log_alpha = proposal_log_post - current_log_post\n\n        # c. Accept or reject\n        if np.log(np.random.rand()) &lt; log_alpha:\n            chain[i, :] = proposal_theta\n            current_log_post = proposal_log_post\n            accepted_count += 1\n        else:\n            chain[i, :] = chain[i-1, :]\n\n    print(f\"Acceptance rate: {accepted_count / n_iter:.2f}\")\n    return chain\n\n# 5. Run MCMC\nn_iterations = 50000\nburn_in = 10000 # Discard early unstable samples\ninitial_params = [1.0, 0.05, 1.0, 0.02] # Initial guess\nproposal_widths = [0.05, 0.001, 0.05, 0.001] # Proposal distribution standard deviation, needs tuning\nt_span = np.arange(len(years)) # Time points (0, 1, 2, ...)\n\nchain = metropolis_hastings(log_posterior, n_iterations, initial_params, proposal_widths, y_obs, t_span)\n\n# Discard burn-in phase\nposterior_samples = chain[burn_in:, :]\n\n# 6. Results visualization\nparam_names = ['alpha', 'beta', 'gamma', 'delta']\n\n# a. Plot trace plots of parameters\nplt.figure(figsize=(15, 8))\nfor i in range(4):\n    plt.subplot(2, 2, i+1)\n    plt.plot(posterior_samples[:, i])\n    plt.title(f'Trace of {param_names[i]}')\n    plt.xlabel('Iteration')\n    plt.ylabel('Parameter Value')\nplt.tight_layout()\nplt.show()\n\n# b. Plot posterior distributions\nplt.figure(figsize=(15, 8))\nfor i in range(4):\n    plt.subplot(2, 2, i+1)\n    plt.hist(posterior_samples[:, i], bins=50, density=True, alpha=0.6)\n    plt.title(f'Posterior of {param_names[i]}')\n    plt.xlabel('Parameter Value')\n    plt.ylabel('Density')\nplt.tight_layout()\nplt.show()\n\n# c. Plot model predictions vs. real data\nplt.figure(figsize=(12, 6))\n# Randomly sample some parameter combinations from the posterior distribution for simulation\nn_samples_plot = 100\nsample_indices = np.random.randint(0, len(posterior_samples), n_samples_plot)\n\nfor idx in sample_indices:\n    params = posterior_samples[idx, :]\n    y_pred = odeint(lotka_volterra, y_obs[0,:], t_span, args=tuple(params))\n    plt.plot(years, y_pred[:, 0], color='skyblue', alpha=0.1) # Predicted hares\n    plt.plot(years, y_pred[:, 1], color='lightcoral', alpha=0.1) # Predicted lynx\n\n# Plot original data points\nplt.plot(years, hare_data, 'o-', color='blue', label='Observed Hares')\nplt.plot(years, lynx_data, 'o-', color='red', label='Observed Lynx')\nplt.xlabel('Year')\nplt.ylabel('Population (x1000)')\nplt.title('Lotka-Volterra Model Fit to Hudson Bay Data')\nplt.legend()\nplt.grid(True)\nplt.show()\n</code></pre> </p> <p>\u8f68\u8ff9\u56fe:\u8fd9\u4e2a\u56fe\u663e\u793a\u4e86\u5728MCMC\u7684\u8fed\u4ee3\u8fc7\u7a0b\u4e2d,\u6bcf\u4e2a\u53c2\u6570\u7684\u91c7\u6837\u503c\u662f\u5982\u4f55\u53d8\u5316\u7684\u3002\u7406\u60f3\u60c5\u51b5\u4e0b,\u6211\u4eec\u5e0c\u671b\u770b\u5230\u8fd9\u4e9b\u8f68\u8ff9\u50cf\u4e00\u6761\"\u6bdb\u6bdb\u866b\"\u4e00\u6837,\u5728\u4e00\u4e2a\u7a33\u5b9a\u7684\u503c\u9644\u8fd1\u968f\u673a\u6ce2\u52a8,\u6ca1\u6709\u660e\u663e\u7684\u4e0a\u5347\u6216\u4e0b\u964d\u8d8b\u52bf\u3002\u8fd9\u8868\u660e\u9a6c\u5c14\u53ef\u592b\u94fe\u5df2\u7ecf\"\u5fd8\u8bb0\"\u4e86\u5b83\u7684\u521d\u59cb\u4f4d\u7f6e,\u5e76\u5f00\u59cb\u5728\u76ee\u6807\u540e\u9a8c\u5206\u5e03\u7684\u5178\u578b\u533a\u57df\u8fdb\u884c\u63a2\u7d22\u3002\u5982\u679c\u8f68\u8ff9\u56fe\u5448\u73b0\u51fa\u660e\u663e\u7684\u8d8b\u52bf,\u901a\u5e38\u610f\u5473\u7740\"burn-in\"\u9636\u6bb5\u4e0d\u591f\u957f,\u6216\u8005\u63d0\u8bae\u5206\u5e03\u4e0d\u5408\u9002,\u94fe\u7684\u6df7\u5408\u6548\u7387\u4f4e\u3002</p> <p></p> <p>\u540e\u9a8c\u5206\u5e03\u56fe (Posterior Distributions):\u8fd9\u662f\u6211\u4eec\u8fdb\u884c\u8d1d\u53f6\u65af\u63a8\u65ad\u7684\u6838\u5fc3\u7ed3\u679c\u3002\u8fd9\u4e9b\u76f4\u65b9\u56fe\u8fd1\u4f3c\u5730\u63cf\u7ed8\u4e86\u5728\u7ed9\u5b9a\u6570\u636e\u4e4b\u540e,\u6211\u4eec\u5bf9\u6bcf\u4e2a\u53c2\u6570\u4e0d\u786e\u5b9a\u6027\u7684\u8ba4\u77e5\u3002\u5206\u5e03\u7684\u5cf0\u503c\u4ee3\u8868\u4e86\u53c2\u6570\u6700\u53ef\u80fd\u7684\u503c(\u5373\u6700\u5927\u540e\u9a8c\u4f30\u8ba1),\u800c\u5206\u5e03\u7684\u5bbd\u5ea6\u5219\u91cf\u5316\u4e86\u6211\u4eec\u5bf9\u8fd9\u4e2a\u503c\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u4f8b\u5982,\u4e00\u4e2a\u53c8\u9ad8\u53c8\u7a84\u7684\u5206\u5e03\u610f\u5473\u7740\u6570\u636e\u975e\u5e38\u6709\u529b\u5730\u5c06\u8be5\u53c2\u6570\u7ea6\u675f\u5728\u4e86\u4e00\u4e2a\u5c0f\u8303\u56f4\u5185;\u800c\u4e00\u4e2a\u53c8\u77ee\u53c8\u80d6\u7684\u5206\u5e03\u5219\u8868\u660e\u6570\u636e\u63d0\u4f9b\u7684\u4fe1\u606f\u6709\u9650,\u6211\u4eec\u5bf9\u8be5\u53c2\u6570\u7684\u771f\u5b9e\u503c\u4ecd\u7136\u4e0d\u592a\u786e\u5b9a\u3002 </p> <p>\u6a21\u578b\u9884\u6d4b\u4e0e\u6570\u636e\u5bf9\u6bd4\u56fe:\u8fd9\u5f20\u56fe\u5c06\u6211\u4eec\u7684\u63a8\u65ad\u7ed3\u679c\u4e0e\u771f\u5b9e\u4e16\u754c\u7684\u6570\u636e\u8fdb\u884c\u4e86\u76f4\u89c2\u7684\u6bd4\u8f83\u3002\u56fe\u4e2d\u534a\u900f\u660e\u7684\u7ec6\u7ebf\u4ee3\u8868\u4e86\u4ece\u540e\u9a8c\u5206\u5e03\u4e2d\u968f\u673a\u62bd\u53d6\u7684100\u7ec4\u4e0d\u540c\u53c2\u6570\u6240\u4ea7\u751f\u7684\u6a21\u578b\u6f14\u5316\u8f68\u8ff9\u3002\u8fd9\u4e9b\u66f2\u7ebf\u6784\u6210\u7684\"\u7f6e\u4fe1\u5e26\"\u5c55\u793a\u4e86\u6a21\u578b\u5728\u8003\u8651\u4e86\u53c2\u6570\u4e0d\u786e\u5b9a\u6027\u540e\u7684\u9884\u6d4b\u8303\u56f4\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230,\u771f\u5b9e\u7684\u6570\u636e\u70b9(\u84dd\u8272\u548c\u7ea2\u8272\u7684\u5706\u70b9)\u57fa\u672c\u90fd\u843d\u5728\u4e86\u8fd9\u4e2a\u7f6e\u4fe1\u5e26\u5185,\u8fd9\u8868\u660e\u6211\u4eec\u7684\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b\u548c\u63a8\u65ad\u51fa\u7684\u53c2\u6570\u80fd\u591f\u5f88\u597d\u5730\u6355\u6349\u5e76\u518d\u73b0\u5386\u53f2\u4e0a\u731e\u7301\u548c\u96ea\u5154\u79cd\u7fa4\u7684\u5468\u671f\u6027\u6ce2\u52a8\u3002\u8fd9\u4e3a\u6a21\u578b\u7684\u6709\u6548\u6027\u63d0\u4f9b\u4e86\u6709\u529b\u7684\u89c6\u89c9\u8bc1\u636e\u3002</p> <p>\u901a\u8fc7\u8fd9\u4e2a\u6848\u4f8b,\u6211\u4eec\u5b8c\u6574\u5730\u8d70\u4e86\u4e00\u904d\u4f7f\u7528\u9ad8\u7ea7\u91c7\u6837\u65b9\u6cd5\u89e3\u51b3\u5b9e\u9645\u79d1\u5b66\u95ee\u9898\u7684\u6d41\u7a0b:\u4ece\u4e00\u4e2a\u73b0\u5b9e\u4e16\u754c\u7684\u6570\u636e\u96c6\u51fa\u53d1,\u5efa\u7acb\u4e00\u4e2a\u6570\u5b66\u6a21\u578b,\u5229\u7528\u8d1d\u53f6\u65af\u63a8\u65ad\u7684\u6846\u67b6\u5b9a\u4e49\u76ee\u6807(\u540e\u9a8c\u5206\u5e03),\u6700\u540e\u901a\u8fc7\u6784\u5efa\u4e00\u4e2a\u5de7\u5999\u7684\u968f\u673a\u8fc7\u7a0b(MCMC),\u6210\u529f\u5730\u4ece\u8fd9\u4e2a\u590d\u6742\u7684\u76ee\u6807\u5206\u5e03\u4e2d\u62bd\u53d6\u4e86\u6837\u672c,\u5b8c\u6210\u4e86\u5bf9\u6a21\u578b\u53c2\u6570\u7684\u91cf\u5316\u5b66\u4e60\u3002\u8fd9\u6b63\u662f\u8499\u7279\u5361\u6d1b\u65b9\u6cd5\u4f5c\u4e3a\u968f\u673a\u8fc7\u7a0b\u5728\u73b0\u4ee3\u79d1\u5b66\u7814\u7a76\u4e2d\u5f3a\u5927\u5a01\u529b\u7684\u4f53\u73b0\u3002</p>"},{"location":"zh/notes/13.%20%E4%BD%9C%E4%B8%BA%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#_2","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u5c06\u968f\u673a\u8fc7\u7a0b\u7684\u7406\u8bba\u4ece\u4e00\u4e2a\u7eaf\u7cb9\u7684\u5206\u6790\u5de5\u5177,\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u5f3a\u5927\u7684\u8ba1\u7b97\u5f15\u64ce\u3002\u6211\u4eec\u4ece\u4e00\u4e2a\u5b9e\u9645\u7684\u79d1\u5b66\u95ee\u9898\u2014\u2014\u4ece\u6570\u636e\u4e2d\u63a8\u65ad\u6a21\u578b\u53c2\u6570\u2014\u2014\u51fa\u53d1,\u8ba4\u8bc6\u5230\u8d1d\u53f6\u65af\u6846\u67b6\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u7406\u8bba\u4e0a\u7684\u89e3\u51b3\u65b9\u6848,\u5373\u540e\u9a8c\u6982\u7387\u5206\u5e03\u3002\u7136\u800c,\u8fd9\u4e2a\u65b9\u6848\u88ab\"\u7ef4\u5ea6\u707e\u96be\"\u6240\u56f0,\u5bfc\u81f4\u76f4\u63a5\u8ba1\u7b97\u53d8\u5f97\u4e0d\u53ef\u884c\u3002</p> <p>MCMC\u65b9\u6cd5,\u7279\u522b\u662fMetropolis-Hastings\u7b97\u6cd5,\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u6761\u4f18\u96c5\u7684\u51fa\u8def\u3002\u901a\u8fc7\u5c06\u91c7\u6837\u95ee\u9898\u91cd\u65b0\u8868\u8ff0\u4e3a\u5bfb\u627e\u4e00\u4e2a\u7279\u5b9a\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u7a33\u6001\u5206\u5e03\u95ee\u9898,\u6211\u4eec\u5de7\u5999\u5730\u5229\u7528\u4e86\u7ec6\u81f4\u5e73\u8861\u7b49\u57fa\u672c\u539f\u7406,\u6784\u5efa\u4e86\u4e00\u4e2a\u80fd\u591f\u4ece\u4efb\u610f\u76ee\u6807\u5206\u5e03\u4e2d\u91c7\u6837\u7684\u901a\u7528\"\u673a\u5668\"\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e0d\u4ec5\u7ed5\u8fc7\u4e86\u8ba1\u7b97\u5f52\u4e00\u5316\u5e38\u6570\u7684\u96be\u9898,\u8fd8\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u590d\u6742\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u8fdb\u884c\u6709\u6548\u63a2\u7d22\u7684\u7b56\u7565\u3002</p> <p>\u8fd9\u6b21\u8bb2\u5ea7\u8fde\u63a5\u4e86\u8bfe\u7a0b\u7684\u524d\u534a\u90e8\u5206(\u968f\u673a\u8fc7\u7a0b\u7406\u8bba)\u548c\u540e\u534a\u90e8\u5206(\u5e94\u7528),\u5c55\u793a\u4e86\u6df1\u523b\u7684\u7406\u8bba\u77e5\u8bc6\u5982\u4f55\u80fd\u591f\u76f4\u63a5\u8f6c\u5316\u4e3a\u89e3\u51b3\u73b0\u5b9e\u4e16\u754c\u95ee\u9898\u7684\u5b9e\u7528\u5de5\u5177\u3002MCMC\u53ca\u5176\u53d8\u4f53\u662f\u73b0\u4ee3\u8ba1\u7b97\u7edf\u8ba1\u5b66\u3001\u673a\u5668\u5b66\u4e60\u548c\u8bb8\u591a\u5b9a\u91cf\u79d1\u5b66\u9886\u57df\u7684\u57fa\u77f3,\u638c\u63e1\u5176\u6838\u5fc3\u601d\u60f3,\u5c06\u4e3a\u6211\u4eec\u6253\u5f00\u63a2\u7d22\u66f4\u590d\u6742\u6a21\u578b\u7684\u5927\u95e8\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/","title":"\u5f15\u8a00\uff1a\u514b\u670d\u968f\u673a\u6e38\u8d70\u7684\u4f4e\u6548\u6027","text":"<p>\u8fd9\u8282\u8bfe\u7ee7\u7eed\u7531\u52a9\u6559\u6765\u6559\u6388\uff0c\u5c06\u4ecb\u7ecd\u4e00\u79cd\u66f4\u5f3a\u5927\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u6d1b\uff08MCMC\uff09\u65b9\u6cd5\uff0c\u65e8\u5728\u514b\u670d\u6807\u51c6Metropolis-Hastings\u7b97\u6cd5\u7684\u4e3b\u8981\u5f31\u70b9\uff1a\u5176\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\u4f4e\u6548\u7684\"\u968f\u673a\u6e38\u8d70\"\u5f0f\u63a2\u7d22\u3002\u65b0\u7684\u65b9\u6cd5\u901a\u8fc7\u501f\u9274\u7ecf\u5178\u529b\u5b66\u7684\u6982\u5ff5\uff0c\u53d1\u5c55\u51fa\u4e00\u79cd\u66f4\"\u667a\u80fd\"\u7684\u63d0\u8bae\u673a\u5236\u3002</p> <p></p> <p>\u5176\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u6211\u4eec\u4e0d\u518d\u91c7\u53d6\u968f\u673a\u3001\u65e0\u65b9\u5411\u7684\u6b65\u9aa4\uff0c\u800c\u662f\u5c06\u91c7\u6837\u53d8\u91cf\u89c6\u4e3a\u5728\u52bf\u80fd\u573a\u4e2d\u8fd0\u52a8\u7684\u7c92\u5b50\u3002\u901a\u8fc7\u6a21\u62df\u5176\u7269\u7406\u8f68\u8ff9\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u51fa\u8fdc\u79bb\u5f53\u524d\u72b6\u6001\u4f46\u4ecd\u6709\u5f88\u9ad8\u63a5\u53d7\u6982\u7387\u7684\u65b0\u72b6\u6001\u3002\u8fd9\u4f7f\u5f97\u7b97\u6cd5\u80fd\u591f\u66f4\u5feb\u5730\u63a2\u7d22\u548c\u6536\u655b\uff0c\u5c24\u5176\u662f\u5728\u9ad8\u7ef4\u95ee\u9898\u4e2d\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#1-metropolis-hastings","title":"1. \u56de\u987e\uff1aMetropolis-Hastings\u7b97\u6cd5\u53ca\u5176\u5c40\u9650\u6027","text":"<p>\u6b63\u5982\u6211\u4eec\u5728\u4e0a\u4e00\u8282\u4f5c\u4e3a\u968f\u673a\u8fc7\u7a0b\u7684\u8499\u7279\u5361\u6d1b\u91c7\u6837\u4e2d\u6240\u5b66\u5230\u7684\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u6784\u5efa\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u94fe\uff0c\u4f7f\u5176\u5e73\u7a33\u5206\u5e03\u662f\u6211\u4eec\u60f3\u8981\u91c7\u6837\u7684\u76ee\u6807\u6982\u7387\u5206\u5e03 \\(p(\\theta)\\)\u3002Metropolis-Hastings\u7b97\u6cd5\u4e3a\u6b64\u63d0\u4f9b\u4e86\u4e00\u4e2a\u901a\u7528\u7684\u65b9\u6848\u3002</p> <p>\u8be5\u7b97\u6cd5\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\u4ece\u4e00\u4e2a\u63d0\u8bae\u5206\u5e03 \\(q(\\theta'|\\theta)\\) \u4e2d\u63d0\u51fa\u4e00\u4e2a\u65b0\u72b6\u6001 \\(\\theta'\\)\uff0c\u5e76\u4ee5\u6982\u7387 \\(\\alpha\\) \u63a5\u53d7\u5b83\u3002\u6b63\u5982\u52a9\u6559\u5728\u8bfe\u7a0b\u5f00\u59cb\u65f6\u6240\u6307\u51fa\u7684\uff0c\u8fd9\u4e2a\u63a5\u53d7\u6982\u7387\u662f\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u7684\u5173\u952e\u3002\u5176\u901a\u7528\u5f62\u5f0f\u4e3a\uff1a</p> \\[\\alpha(\\theta'|\\theta) = \\min\\left(1, \\frac{p(\\theta)q(\\theta'|\\theta)}{p(\\theta')q(\\theta|\\theta')}\\right)\\] <p>\u8fd9\u4e2a\u6bd4\u7387\u7684\u8bbe\u8ba1\u65e8\u5728\u4fee\u6b63\u63d0\u8bae\u5206\u5e03 \\(q\\) \u4e2d\u7684\u4efb\u4f55\u4e0d\u5bf9\u79f0\u6027\uff0c\u5e76\u4f7f\u94fe\u504f\u5411\u4e8e\u5177\u6709\u66f4\u9ad8\u6982\u7387 \\(p\\) \u7684\u72b6\u6001\u3002\u5982\u679c\u6211\u4eec\u63d0\u8bae\u79fb\u52a8\u5230\u4e00\u4e2a\u9ad8\u6982\u7387\u533a\u57df\uff0c\u90a3\u4e48 \\(p(\\theta')\\) \u9879\u4f1a\u5f88\u5927\uff0c\u4ece\u800c\u589e\u52a0 \\(\\alpha\\)\u3002\u5982\u679c\u6211\u4eec\u7684\u63d0\u8bae\u5206\u5e03\u4f7f\u5f97\u4ece \\(\\theta\\) \u5230 \\(\\theta'\\) \u6bd4\u8fd4\u56de\u66f4\u5bb9\u6613\uff0c\u90a3\u4e48 \\(q(\\theta|\\theta')/q(\\theta'|\\theta)\\) \u9879\u4f1a\u5bf9\u6b64\u8fdb\u884c\u4fee\u6b63\uff0c\u786e\u4fdd\u94fe\u4e0d\u4f1a\u88ab\u56f0\u5728\u90a3\u4e9b\u5bb9\u6613\u8fdb\u5165\u4f46\u96be\u4ee5\u79bb\u5f00\u7684\u533a\u57df\u3002</p> <p>\u4e00\u4e2a\u5e38\u89c1\u7684\u7b80\u5316\u662f\u4f7f\u7528\u5bf9\u79f0\u7684\u63d0\u8bae\u5206\u5e03\uff0c\u5373 \\(q(\\theta'|\\theta) = q(\\theta|\\theta')\\)\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u63a5\u53d7\u6982\u7387\u7b80\u5316\u4e3a\uff1a</p> \\[\\alpha = \\min\\left(1, \\frac{p(\\theta')}{p(\\theta)}\\right)\\] <p>\u8fd9\u88ab\u79f0\u4e3a\"Metropolis\"\u7b97\u6cd5\uff0c\u662fMetropolis-Hastings\u7b97\u6cd5\u7684\u4e00\u4e2a\u7279\u4f8b\u3002\u81f3\u5173\u91cd\u8981\u7684\u662f\uff0c\u6982\u7387\u5206\u5e03 \\(p(\\theta)\\) \u7684\u5f52\u4e00\u5316\u5e38\u6570 \\(Z\\) \u5728\u6bd4\u7387\u4e2d\u88ab\u6d88\u6389\u4e86\uff0c\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u5b9e\u8df5\u4f18\u52bf\u3002\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053 \\(p(\\theta)\\) \u7684\u5f62\u5f0f\uff0c\u800c\u65e0\u9700\u8ba1\u7b97\u5176\u5f52\u4e00\u5316\u5e38\u6570\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#metropolis-hastings","title":"\"\u968f\u673a\u6e38\u8d70\" Metropolis-Hastings\u53ca\u5176\u81f4\u547d\u7f3a\u9677","text":"<p>\u4e00\u79cd\u975e\u5e38\u5e38\u89c1\u7684\u5bf9\u79f0\u63d0\u8bae\u5206\u5e03\u662f\u4ee5\u5f53\u524d\u72b6\u6001\u4e3a\u4e2d\u5fc3\u7684\u9ad8\u65af\u5206\u5e03\uff1a</p> \\[q(\\theta'|\\theta) = \\mathcal{N}(\\theta'|\\theta, \\sigma^2)\\] <p>\u8fd9\u79cd\u65b9\u6cd5\u76f4\u89c2\u4e14\u6613\u4e8e\u5b9e\u73b0\uff0c\u4f46\u5b83\u6b63\u662f\u8be5\u7b97\u6cd5\u6548\u7387\u4f4e\u4e0b\u7684\u6839\u6e90\u3002\u8fd9\u79cd\u968f\u673a\u6e38\u8d70\u7684\u6027\u80fd\u4e25\u91cd\u4f9d\u8d56\u4e8e\u6b65\u957f \\(\\sigma\\) \u7684\u9009\u62e9\u3002</p> <p>\u5c0f\u6b65\u957f \\(\\sigma\\)\uff1a\u63d0\u8bae\u7684\u65b0\u72b6\u6001\u4f1a\u975e\u5e38\u63a5\u8fd1\u5f53\u524d\u72b6\u6001\u3002\u7531\u4e8e \\(p(\\theta)\\) \u7684\u53d8\u5316\u5f88\u5c0f\uff0c\u63a5\u53d7\u7387\u4f1a\u5f88\u9ad8\u3002\u7136\u800c\uff0c\u94fe\u7684\u79fb\u52a8\u975e\u5e38\u7f13\u6162\uff0c\u4ee5\u6269\u6563\u7684\u65b9\u5f0f\u63a2\u7d22\u5206\u5e03\u3002\u8fd9\u5bfc\u81f4\u6837\u672c\u4e4b\u95f4\u5b58\u5728\u9ad8\u5ea6\u7684\u81ea\u76f8\u5173\u6027\uff0c\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u4e00\u6761\u975e\u5e38\u957f\u7684\u94fe\u624d\u80fd\u83b7\u5f97\u4e00\u7ec4\u5177\u6709\u4ee3\u8868\u6027\u7684\u72ec\u7acb\u6837\u672c\u3002\u7b97\u6cd5\u53ef\u80fd\u4f1a\u88ab\"\u56f0\"\u5728\u5c40\u90e8\u7684\u6982\u7387\u5cf0\u503c\u4e2d\u3002</p> <p>\u5927\u6b65\u957f \\(\\sigma\\)\uff1a\u539f\u5219\u4e0a\uff0c\u7b97\u6cd5\u53ef\u4ee5\u66f4\u5feb\u5730\u63a2\u7d22\u7a7a\u95f4\u3002\u7136\u800c\uff0c\u5728\u4efb\u4f55\u7a0d\u5fae\u590d\u6742\u7684\u5206\u5e03\u4e2d\uff0c\u4e00\u6b21\u5927\u7684\u968f\u673a\u8df3\u8dc3\u6781\u6709\u53ef\u80fd\u843d\u5728\u4e00\u4e2a\u6982\u7387\u4f4e\u5f97\u591a\u7684\u533a\u57df\uff08\u4e00\u4e2a\u5206\u5e03\u7684\"\u5178\u578b\u96c6\"\u901a\u5e38\u662f\u4e00\u4e2a\u8584\u58f3\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5b9e\u5fc3\u7403\uff09\u3002\u8fd9\u4f1a\u5bfc\u81f4\u63a5\u53d7\u7387 \\(\\alpha\\) \u6025\u5267\u4e0b\u964d\uff0c\u94fe\u51e0\u4e4e\u505c\u6ede\u4e0d\u524d\uff0c\u62d2\u7edd\u4e86\u51e0\u4e4e\u6240\u6709\u7684\u63d0\u8bae\u3002</p> <p>\u8fd9\u79cd\u6b65\u957f\u9009\u62e9\u4e0a\u7684\u4e24\u96be\u56f0\u5883\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u4f1a\u53d8\u5f97\u5c24\u5176\u4e25\u91cd\u3002\u5728\u4e00\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u968f\u673a\u4e00\u6b65\u670950%\u7684\u673a\u4f1a\u671d\u5411\"\u6b63\u786e\"\u7684\u5927\u81f4\u65b9\u5411\u3002\u4f46\u5728 \\(D\\) \u7ef4\u7a7a\u95f4\u4e2d\uff0c\u72b6\u6001\u7a7a\u95f4\u7684\u4f53\u79ef\u5448\u6307\u6570\u7ea7\u589e\u957f\u3002\u4e00\u4e2a\u968f\u673a\u7684\u6b65\u9aa4\u51e0\u4e4e\u53ef\u4ee5\u80af\u5b9a\u4f1a\u6307\u5411\u4e00\u4e2a\"\u574f\"\u7684\u65b9\u5411\uff0c\u8fdc\u79bb\u90a3\u4e9b\u9ad8\u6982\u7387\u6240\u5728\u7684\u72ed\u7a84\u533a\u57df\u3002\u56e0\u6b64\uff0c\u968f\u7740\u53c2\u6570\u6570\u91cf \\(D\\) \u7684\u589e\u52a0\uff0c\u968f\u673a\u6e38\u8d70\u7684\u6548\u7387\u5448\u6307\u6570\u7ea7\u4e0b\u964d\u3002</p> <p>\u8fd9\u79cd\u6743\u8861\u4f7f\u5f97\u968f\u673a\u6e38\u8d70Metropolis-Hastings\u91c7\u6837\u5668\u4e0d\u9002\u7528\u4e8e\u73b0\u4ee3\u8d1d\u53f6\u65af\u7edf\u8ba1\u3001\u673a\u5668\u5b66\u4e60\u548c\u7269\u7406\u5b66\u4e2d\u7ecf\u5e38\u9047\u5230\u7684\u590d\u6742\u3001\u9ad8\u7ef4\u6982\u7387\u5206\u5e03\u3002\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u63d0\u51fa\u65e2\u8ddd\u79bb\u8fdc\u53c8\u53ef\u80fd\u88ab\u63a5\u53d7\u7684\u65b0\u72b6\u6001\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#2","title":"2. \u65b0\u89c6\u89d2\uff1a\u5c06\u6982\u7387\u91cd\u65b0\u8be0\u91ca\u4e3a\u52bf\u80fd","text":"<p>\u4e3a\u4e86\u514b\u670d\u968f\u673a\u6e38\u8d70\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u6548\u7387\u4f4e\u4e0b\u7684\u6839\u672c\u5c40\u9650\u6027\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u66f4\u201c\u667a\u80fd\u201d\u7684\u63a2\u7d22\u7b56\u7565\u3002\u8fd9\u4e2a\u7b56\u7565\u7684\u7075\u611f\u6765\u81ea\u4e8e\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u57fa\u77f3\u6a21\u578b\u4e4b\u4e00\u2014\u2014\u4f0a\u8f9b\u6a21\u578b\uff08Ising model\uff09\u3002</p> <p>\u4f0a\u8f9b\u6a21\u578b\u662f\u7406\u89e3\u7269\u8d28\u76f8\u53d8\uff08\u5982\u78c1\u94c1\u7684\u78c1\u5316\uff09\u7684\u8303\u4f8b\u3002\u5728\u5176\u4e2d\uff0c\u7cfb\u7edf\u5904\u4e8e\u67d0\u4e2a\u7279\u5b9a\u5fae\u89c2\u72b6\u6001\uff08\u4f8b\u5982\uff0c\u4e00\u4e32\u81ea\u65cb\u5411\u4e0a\u6216\u5411\u4e0b\uff0c\u7528 \\(\\{\\sigma\\}\\) \u8868\u793a\uff09\u7684\u6982\u7387\uff0c\u5b8c\u5168\u7531\u5176\u80fd\u91cf\u548c\u73af\u5883\u6e29\u5ea6\u51b3\u5b9a\uff0c\u5176\u5f62\u5f0f\u4e3a\u4f18\u7f8e\u7684\u73bb\u5c14\u5179\u66fc\u5206\u5e03\uff1a</p> \\[p(\\{\\sigma\\}) = \\frac{1}{Z} e^{-\\beta H(\\{\\sigma\\})}\\] <p>\u5728\u8fd9\u91cc\uff0c\\(H\\) \u662f\u8be5\u6784\u578b\u7684\u54c8\u5bc6\u5c14\u987f\u91cf\uff08\u4e5f\u5c31\u662f\u80fd\u91cf\uff09\uff0c\\(\\beta\\) \u662f\u4e0e\u6e29\u5ea6\u76f8\u5173\u7684\u5e38\u6570\uff0c\\(Z\\) \u662f\u786e\u4fdd\u603b\u6982\u7387\u4e3a1\u7684\u5f52\u4e00\u5316\u5e38\u6570\uff08\u914d\u5206\u51fd\u6570\uff09\u3002\u8fd9\u4e2a\u516c\u5f0f\u8574\u542b\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u7269\u7406\u76f4\u89c9\uff1a\u80fd\u91cf\u8d8a\u4f4e\u7684\u72b6\u6001\uff0c\u5176\u51fa\u73b0\u7684\u6982\u7387\u5448\u6307\u6570\u7ea7\u589e\u9ad8\u3002\u7269\u7406\u7cfb\u7edf\u603b\u662f\u503e\u5411\u4e8e\u505c\u7559\u5728\u66f4\u7a33\u5b9a\u7684\u4f4e\u80fd\u91cf\u72b6\u6001\u3002</p> <p> \u8fd9\u4e2a\u7269\u7406\u56fe\u50cf\u7ed9\u4e86\u6211\u4eec\u5de8\u5927\u7684\u542f\u53d1\u3002\u6211\u4eec\u53ef\u4ee5\u201c\u53cd\u8f6c\u201d\u8fd9\u4e2a\u903b\u8f91\uff1a\u5bf9\u4e8e\u4efb\u4f55\u6211\u4eec\u60f3\u8981\u91c7\u6837\u7684\u3001\u62bd\u8c61\u7684\u76ee\u6807\u6982\u7387\u5206\u5e03 \\(p(\\theta)\\)\uff0c\u6211\u4eec\u662f\u5426\u4e5f\u80fd\u4e3a\u5b83\u5b9a\u4e49\u4e00\u4e2a\u7b49\u6548\u7684\u201c\u80fd\u91cf\u201d\u51fd\u6570 \\(E(\\theta)\\) \u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f3a\u5236\u8ba9\u5b83\u4eec\u6ee1\u8db3\u7c7b\u4f3c\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u7684\u5173\u7cfb\uff1a</p> \\[p(\\theta) \\propto e^{-E(\\theta)}\\] <p>\u901a\u8fc7\u5bf9\u4e24\u8fb9\u53d6\u5bf9\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5199\u51fa\u5b83\u4eec\u4e4b\u95f4\u7684\u6362\u7b97\u5173\u7cfb\uff1a</p> \\[E(\\theta) = -\\log p(\\theta) + \\text{const}\\] <p>\u6211\u4eec\u5c06\u8fd9\u4e2a\u65b0\u5b9a\u4e49\u7684 \\(E(\\theta)\\) \u79f0\u4e3a\u52bf\u80fd\uff08Potential Energy\uff09\u3002</p> <p>\u8fd9\u4e2a\u770b\u4f3c\u7b80\u5355\u7684\u6570\u5b66\u53d8\u6362\uff0c\u5b9e\u9645\u4e0a\u662f\u4e00\u6b21\u6839\u672c\u6027\u7684\u8ba4\u77e5\u98de\u8dc3 \uff0c\u5b83\u5f7b\u5e95\u6539\u53d8\u4e86\u6211\u4eec\u770b\u5f85\u91c7\u6837\u95ee\u9898\u7684\u65b9\u5f0f\u3002</p> <ol> <li> <p>\u4ece\u201c\u76f2\u76ee\u201d\u5230\u201c\u6709\u5411\u201d\uff1a\u6211\u4eec\u6700\u521d\u7684\u76ee\u6807\u662f\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u5bfb\u627e \\(p(\\theta)\\) \u503c\u9ad8\u7684\u533a\u57df\u3002\u73b0\u5728\uff0c\u6211\u4eec\u7b49\u4ef7\u7684\u65b0\u76ee\u6807\u662f\u63a2\u7d22\u52bf\u80fd \\(E(\\theta)\\) \u4f4e\u7684\u533a\u57df\u3002\u8fd9\u6210\u529f\u5730\u5c06\u4e00\u4e2a\u7eaf\u7cb9\u7684\u7edf\u8ba1\u91c7\u6837\u95ee\u9898\uff0c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6781\u5bcc\u7269\u7406\u76f4\u89c9\u7684\u3001\u63a2\u7d22\u80fd\u91cf\u666f\u89c2\u7684\u95ee\u9898\u3002\u539f\u6765\u5728 \\(p(\\theta)\\) \u4e2d\u7684\u9ad8\u6982\u7387\u201c\u5c71\u5cf0\u201d\uff0c\u73b0\u5728\u53d8\u6210\u4e86 \\(E(\\theta)\\) \u80fd\u91cf\u666f\u89c2\u4e2d\u7684\u6df1\u9083\u201c\u5c71\u8c37\u201d\u3002</p> </li> <li> <p>\u5f15\u5165\u201c\u529b\u201d\u7684\u6982\u5ff5\uff1a\u968f\u673a\u6e38\u8d70\u4e4b\u6240\u4ee5\u6548\u7387\u4f4e\u4e0b\uff0c\u662f\u56e0\u4e3a\u5b83\u662f\u201c\u76f2\u76ee\u201d\u7684\uff0c\u5b83\u5728\u63d0\u8bae\u4e0b\u4e00\u6b65\u65f6\u5b8c\u5168\u4e0d\u4e86\u89e3\u5730\u5f62\u7684\u8d70\u5411\u3002\u4f46\u5728\u7269\u7406\u4e16\u754c\u4e2d\uff0c\u7269\u4f53\u7684\u8fd0\u52a8\u4e0d\u662f\u76f2\u76ee\u7684\u3002\u4e00\u4e2a\u5728\u5c71\u8c37\u4e2d\u6eda\u52a8\u7684\u5c0f\u7403\u4f1a\u53d7\u5230\u529b\u7684\u4f5c\u7528\u3002\u8fd9\u4e2a\u529b\uff0c\u6b63\u662f\u52bf\u80fd\u7684\u8d1f\u68af\u5ea6\uff1a</p> \\[F = -\\nabla E(\\theta) = - \\nabla (-\\log p(\\theta)) = \\nabla \\log p(\\theta)\\] </li> </ol> <p>\u6211\u4eec\u627e\u5230\u4e86\u6446\u8131\u968f\u673a\u6027\u7684\u94a5\u5319\u3002\u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u201c\u529b\u201d\uff0c\u5b83\u76f4\u63a5\u7531\u76ee\u6807\u5206\u5e03\u7684\u5bf9\u6570\u68af\u5ea6\u7ed9\u51fa\uff0c\u5e76\u4e14\u8fd9\u4e2a\u529b\u6c38\u8fdc\u6307\u5411\u6982\u7387\u5bc6\u5ea6\u589e\u957f\u6700\u5feb\u7684\u65b9\u5411\u3002\u6211\u4eec\u4e0d\u518d\u9700\u8981\u76f2\u76ee\u8bd5\u63a2\uff0c\u800c\u662f\u53ef\u4ee5\u987a\u7740\u201c\u529b\u201d\u7684\u65b9\u5411\uff0c\u9ad8\u6548\u5730\u5411\u7740\u9ad8\u6982\u7387\u533a\u57df\u524d\u8fdb\u3002</p> <p>\u901a\u8fc7\u8fd9\u4e2a\u89c6\u89d2\u8f6c\u6362\uff0c\u6211\u4eec\u5c06\u62bd\u8c61\u7684\u91c7\u6837\u95ee\u9898\u5177\u8c61\u5316\u4e3a\u5728\u4e00\u4e2a\u7531\u76ee\u6807\u5206\u5e03\u5b9a\u4e49\u7684\u52bf\u80fd\u573a\u4e2d\uff0c\u6a21\u62df\u4e00\u4e2a\u7269\u7406\u7c92\u5b50\u7684\u8fd0\u52a8\u3002\u8fd9\u4e2a\u7c92\u5b50\u4f1a\u88ab\u81ea\u7136\u5730\u201c\u63a8\u201d\u5411\u6211\u4eec\u6700\u611f\u5174\u8da3\u7684\u533a\u57df\u3002</p> <p>\u5c06\u7269\u7406\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u601d\u60f3\u7528\u4e8e\u7edf\u8ba1\u8ba1\u7b97\u7684\u60f3\u6cd5\uff0c\u6700\u65e9\u5728\u7269\u7406\u5b66\u754c\u915d\u917f\u3002\u5c06\u8fd9\u4e00\u601d\u60f3 kristallisiert \u6210\u6211\u4eec\u4eca\u5929\u6240\u77e5\u7684\u54c8\u5bc6\u987f\u8499\u7279\u5361\u7f57\uff08\u5f53\u65f6\u88ab\u79f0\u4e3a\u6df7\u5408\u8499\u7279\u5361\u7f57\uff0cHybrid Monte Carlo\uff09\u7684\u5f00\u521b\u6027\u5de5\u4f5c\uff0c\u662f\u7531 Duane, Kennedy, Pendleton \u548c Roweth \u57281987\u5e74\u53d1\u8868\u7684\u3002\u4ed6\u4eec\u5f53\u65f6\u7684\u76ee\u6807\u662f\u89e3\u51b3\u683c\u70b9\u91cf\u5b50\u8272\u52a8\u529b\u5b66\uff08Lattice QCD\uff09\u4e2d\u6781\u5177\u6311\u6218\u6027\u7684\u9ad8\u7ef4\u79ef\u5206\u95ee\u9898\u3002\u540e\u6765\uff0c\u8fd9\u4e00\u5f3a\u5927\u65b9\u6cd5\u88ab\u7edf\u8ba1\u5b66\u548c\u673a\u5668\u5b66\u4e60\u793e\u533a\uff08\u7279\u522b\u662f Radford Neal\uff09\u6240\u53d1\u73b0\u548c\u63a8\u5e7f\uff0c\u5e76\u6700\u7ec8\u6210\u4e3a\u73b0\u4ee3\u8d1d\u53f6\u65af\u63a8\u65ad\u4e2d\u6700\u9ad8\u6548\u3001\u6700\u6838\u5fc3\u7684\u7b97\u6cd5\u4e4b\u4e00\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#3","title":"3. \u6784\u5efa\u54c8\u5bc6\u5c14\u987f\u7cfb\u7edf\uff1a\u5f15\u5165\u52a8\u91cf","text":"<p>\u901a\u8fc7\u5f15\u5165\u201c\u52bf\u80fd\u201d\u7684\u6982\u5ff5\uff0c\u6210\u529f\u5730\u5c06\u91c7\u6837\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u63a2\u7d22\u7269\u7406\u80fd\u91cf\u666f\u89c2\u7684\u95ee\u9898\u3002\u4f46\u8fd9\u8fd8\u4e0d\u591f\uff0c\u56e0\u4e3a\u4e00\u4e2a\u53ea\u5177\u6709\u4f4d\u7f6e\u548c\u52bf\u80fd\u7684\u201c\u7c92\u5b50\u201d\u662f\u9759\u6b62\u7684\uff0c\u5b83\u65e0\u6cd5\u81ea\u884c\u63a2\u7d22\u3002\u4e3a\u4e86\u8ba9\u7c92\u5b50\u201c\u52a8\u8d77\u6765\u201d\uff0c\u6211\u4eec\u9700\u8981\u8d4b\u4e88\u5b83\u52a8\u91cf\uff08Momentum\uff09\u3002\u8fd9\u662f\u54c8\u5bc6\u5c14tonian Monte Carlo (HMC) \u7684\u6838\u5fc3\u521b\u65b0\uff0c\u4e5f\u662f\u5b83\u4e0e\u4f20\u7edfMCMC\u65b9\u6cd5\u7684\u6839\u672c\u533a\u522b\u6240\u5728\u3002</p> <p>HMC\u7684\u5b8c\u6574\u601d\u60f3\u5e76\u975e\u51ed\u7a7a\u800c\u6765\u3002\u5b83\u7684\u5386\u53f2\u53ef\u4ee5\u8ffd\u6eaf\u52301980\u5e74\u4ee3\uff0c\u6700\u521d\u7531Simon Duane\u7b49\u7269\u7406\u5b66\u5bb6\u5728\u89e3\u51b3\u683c\u70b9\u89c4\u8303\u7406\u8bba\u7684\u590d\u6742\u8ba1\u7b97\u65f6\u63d0\u51fa\u3002\u4ed6\u4eec\u5929\u624d\u5730\u610f\u8bc6\u5230\uff0c\u53ef\u4ee5\u501f\u7528\u7ecf\u5178\u529b\u5b66\u4e2d\u63cf\u8ff0\u884c\u661f\u8fd0\u52a8\u7684\u54c8\u5bc6\u5c14\u987f\u52a8\u529b\u5b66\u6846\u67b6\uff0c\u6765\u6307\u5bfc\u7edf\u8ba1\u91c7\u6837\u8fc7\u7a0b\uff0c\u4ece\u800c\u6539\u53d8\u5176\u6548\u7387\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#31","title":"3.1 \u4e3a\u4ec0\u4e48\u8981\u5f15\u5165\u52a8\u91cf\uff1f","text":"<p>\u5f15\u5165\u4e00\u4e2a\u4e0e\u6211\u4eec\u6a21\u578b\u53c2\u6570 \\(\\theta\\) \uff08\u4f4d\u7f6e\uff09\u7ef4\u5ea6\u76f8\u540c\u7684\u3001\u865a\u6784\u7684\u8f85\u52a9\u201c\u52a8\u91cf\u201d\u53d8\u91cf \\(v\\)\uff0c\u76f8\u5f53\u4e8e\u5c06\u6211\u4eec\u7684\u95ee\u9898\u4ece\u4e00\u4e2a\u9759\u6001\u7684\u666f\u89c2\u63a2\u7d22\uff0c\u5347\u7ea7\u4e3a\u4e00\u4e2a\u52a8\u6001\u7684\u7269\u7406\u7cfb\u7edf\u6a21\u62df\u3002</p> <ul> <li>\u4ece\u4e00\u9636\u5230\u4e8c\u9636\uff1a\u4f20\u7edf\u7684\u968f\u673a\u6e38\u8d70\u65b9\u6cd5\u662f\u4e00\u9636\u7684\uff0c\u4e0b\u4e00\u6b65\u7684\u4f4d\u7f6e\u4ec5\u4ec5\u53d6\u51b3\u4e8e\u5f53\u524d\u4f4d\u7f6e\u3002\u8fd9\u5c31\u50cf\u4e00\u4e2a\u8499\u7740\u773c\u775b\u7684\u4eba\uff0c\u6bcf\u4e00\u6b65\u90fd\u53ea\u80fd\u5728\u539f\u5730\u968f\u673a\u6478\u7d22\u3002\u5f15\u5165\u52a8\u91cf\u540e\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u4e00\u4e2a\u4e8c\u9636\u52a8\u529b\u5b66\u7cfb\u7edf\uff0c\u4e0b\u4e00\u6b65\u7684\u4f4d\u7f6e\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u5f53\u524d\u4f4d\u7f6e\uff0c\u8fd8\u53d6\u51b3\u4e8e\u5f53\u524d\u7684\u901f\u5ea6\uff08\u52a8\u91cf\uff09\u3002\u8fd9\u5c31\u50cf\u7ed9\u5c71\u8c37\u4e2d\u7684\u4e00\u4e2a\u6e9c\u51b0\u8005\u4e00\u4e2a\u521d\u59cb\u63a8\u529b\uff0c\u4ed6\u4f1a\u6cbf\u7740\u4e00\u6761\u5e73\u6ed1\u7684\u8f68\u8ff9\u6301\u7eed\u6ed1\u884c\u5f88\u957f\u4e00\u6bb5\u8ddd\u79bb\uff0c\u800c\u4e0d\u662f\u5728\u539f\u5730\u6253\u8f6c\u3002</li> <li>\u6301\u4e45\u4e14\u6709\u65b9\u5411\u7684\u63a2\u7d22\uff1a\u52a8\u91cf\u8d4b\u4e88\u4e86\u63a2\u7d22\u8fc7\u7a0b\u201c\u60ef\u6027\u201d\u3002\u4e00\u65e6\u88ab\u8d4b\u4e88\u4e86\u521d\u59cb\u52a8\u91cf\uff0c\u7c92\u5b50\u503e\u5411\u4e8e\u6cbf\u7740\u4e00\u4e2a\u65b9\u5411\u6301\u7eed\u8fd0\u52a8\uff0c\u540c\u65f6\u53d7\u5230\u52bf\u80fd\u529b\uff08\u68af\u5ea6\u7684\u53cd\u65b9\u5411\uff09\u7684\u4f5c\u7528\u800c\u4f18\u96c5\u5730\u8f6c\u5411\u3002\u8fd9\u79cd\u6301\u4e45\u6027\u7684\u8fd0\u52a8\u4f7f\u5f97\u91c7\u6837\u5668\u80fd\u591f\u8fdb\u884c\u957f\u8ddd\u79bb\u7684\u3001\u6709\u610f\u4e49\u7684\u79fb\u52a8\uff0c\u4e00\u6b21\u6027\u8de8\u8d8a\u53c2\u6570\u7a7a\u95f4\u4e2d\u7684\u5927\u7247\u533a\u57df\uff0c\u4ece\u800c\u9ad8\u6548\u5730\u63a2\u7d22\u6574\u4e2a\u6982\u7387\u5206\u5e03\u3002</li> </ul>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#32-htheta-v","title":"3.2 \u5b9a\u4e49\u54c8\u5bc6\u5c14\u987f\u91cf \\(H(\\theta, v)\\)","text":"<p>\u5728\u7ecf\u5178\u529b\u5b66\u4e2d\uff0c\u4e00\u4e2a\u5b64\u7acb\u7cfb\u7edf\u7684\u603b\u80fd\u91cf\u662f\u5b88\u6052\u7684\u3002\u8fd9\u4e2a\u603b\u80fd\u91cf\uff0c\u5373\u54c8\u5bc6\u5c14\u987f\u91cf \\(H\\)\uff0c\u662f\u5176\u52bf\u80fd\u548c\u52a8\u80fd\u4e4b\u548c\u3002\u6211\u4eec\u5b8c\u5168\u7167\u642c\u8fd9\u4e2a\u7269\u7406\u5b66\u4e2d\u6700\u6838\u5fc3\u7684\u6982\u5ff5\u6765\u6784\u5efa\u6211\u4eec\u7684\u7cfb\u7edf\uff1a</p> \\[H(\\theta, v) = E(\\theta) + K(v)\\] <ul> <li> <p>\u52bf\u80fd \\(E(\\theta)\\)\uff1a\u5982\u4e0a\u5b9a\u4e49\uff0c\\(E(\\theta) = -\\log p(\\theta)\\)\u3002\u8fd9\u90e8\u5206\u5b8c\u5168\u7531\u6211\u4eec\u7684\u76ee\u6807\u6982\u7387\u5206\u5e03\u51b3\u5b9a\uff0c\u5b83\u6784\u5efa\u4e86\u7c92\u5b50\u8fd0\u52a8\u7684\u201c\u5730\u5f62\u201d\u6216\u201c\u80fd\u91cf\u666f\u89c2\u201d\u3002\u6982\u7387\u8d8a\u9ad8\u7684\u533a\u57df\uff0c\u52bf\u80fd\u8d8a\u4f4e\u3002</p> </li> <li> <p>\u52a8\u80fd \\(K(v)\\)\uff1a\u8fd9\u662f\u4e0e\u8fd0\u52a8\u76f8\u5173\u7684\u80fd\u91cf\u3002\u5176\u5f62\u5f0f\u76f4\u63a5\u501f\u9274\u7269\u7406\u5b66\uff0c\u662f\u52a8\u91cf\u7684\u4e8c\u6b21\u578b\u51fd\u6570\uff1a     \\(\\(K(v) = \\frac{1}{2} v^T M^{-1} v\\)\\)     \u8fd9\u91cc\u7684\\(M\\)\u662f\u4e00\u4e2a\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635\uff0c\u88ab\u79f0\u4e3a\u8d28\u91cf\u77e9\u9635\u3002</p> <ul> <li>\u52a8\u91cf \\(v\\)\uff1a\u53ef\u4ee5\u76f4\u89c2\u5730\u7406\u89e3\u4e3a\u7c92\u5b50\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\u63a2\u7d22\u7684\u201c\u901f\u5ea6\u548c\u65b9\u5411\u201d\u3002</li> <li>\u8d28\u91cf\u77e9\u9635 \\(M\\)\uff1a\u5728\u7269\u7406\u4e0a\uff0c\u8d28\u91cf\u4ee3\u8868\u4e86\u60ef\u6027\u7684\u5927\u5c0f\u3002\u5728\u8fd9\u91cc\uff0c\u5b83\u626e\u6f14\u7740\u4e00\u4e2a\u91cd\u8981\u7684\u8c03\u8282\u89d2\u8272\u3002<ul> <li>\u7b80\u5355\u60c5\u51b5\uff1a\u6700\u7b80\u5355\u7684\u9009\u62e9\u662f\u5c06 \\(M\\) \u8bbe\u4e3a\u5355\u4f4d\u77e9\u9635 (\\(M=I\\))\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5047\u8bbe\u6240\u6709\u53c2\u6570\u7ef4\u5ea6\u7684\u201c\u8d28\u91cf\u201d\u90fd\u76f8\u540c\uff0c\u7c92\u5b50\u5728\u5404\u4e2a\u65b9\u5411\u4e0a\u5bf9\u201c\u529b\u201d\u7684\u54cd\u5e94\u662f\u5747\u7b49\u7684\u3002</li> <li>\u6df1\u5c42\u542b\u4e49\uff1a\u66f4\u9ad8\u7ea7\u7684\u5e94\u7528\u4e2d\uff0c\\(M\\)\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a\u4e0e\u76ee\u6807\u5206\u5e03\u7684\u534f\u65b9\u5dee\u76f8\u5173\uff0c\u8fd9\u4f7f\u5f97\u7c92\u5b50\u5728\u6982\u7387\u5bc6\u5ea6\u72ed\u7a84\u7684\u65b9\u5411\u4e0a\u201c\u8d28\u91cf\u201d\u66f4\u5927\uff08\u66f4\u96be\u88ab\u63a8\u52a8\uff0c\u79fb\u52a8\u66f4\u8c28\u614e\uff09\uff0c\u5728\u6982\u7387\u5bc6\u5ea6\u5bbd\u9614\u7684\u65b9\u5411\u4e0a\u201c\u8d28\u91cf\u201d\u66f4\u5c0f\uff08\u66f4\u5bb9\u6613\u88ab\u63a8\u52a8\uff0c\u79fb\u52a8\u66f4\u5927\u80c6\uff09\uff0c\u4ece\u800c\u6781\u5927\u5730\u63d0\u5347\u4e86\u5728\u590d\u6742\u76f8\u5173\u5206\u5e03\u4e0a\u7684\u91c7\u6837\u6548\u7387\u3002</li> </ul> </li> </ul> </li> </ul>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#33","title":"3.3 \u8054\u5408\u6b63\u5219\u5206\u5e03","text":"<p>\u6211\u4eec\u73b0\u5728\u57fa\u4e8e\u8fd9\u4e2a\u54c8\u5bc6\u5c14\u987f\u91cf\uff0c\u4ee5\u548c\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u5b8c\u5168\u76f8\u540c\u7684\u5f62\u5f0f\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5173\u4e8e\u4f4d\u7f6e\u548c\u52a8\u91cf\u7684\u8054\u5408\u6982\u7387\u5206\u5e03 \\(p(\\theta, v)\\)\uff0c\u8fd9\u5728\u7269\u7406\u5b66\u4e2d\u88ab\u79f0\u4e3a\u6b63\u5219\u5206\u5e03\uff08Canonical Distribution\uff09:</p> \\[p(\\theta, v) = \\frac{1}{Z'} e^{-H(\\theta, v)} = \\frac{1}{Z'} e^{-(E(\\theta) + K(v))} = \\frac{1}{Z'} e^{-E(\\theta)} e^{-K(v)}\\] <p>\u8fd9\u4e2a\u6784\u9020\u770b\u8d77\u6765\u8ba9\u95ee\u9898\u66f4\u590d\u6742\u4e86\uff1a\u6211\u4eec\u672c\u6765\u53ea\u60f3\u4ece \\(p(\\theta)\\) \u91c7\u6837\uff0c\u73b0\u5728\u5374\u8981\u53bb\u4ece\u4e00\u4e2a\u66f4\u9ad8\u7ef4\u7684 \\(p(\\theta, v)\\) \u91c7\u6837\u3002\u8fd9\u91cc\u7684\u5965\u79d8\u5728\u4e8e\uff0c\u8fd9\u4e2a\u8054\u5408\u5206\u5e03\u7684\u7ed3\u6784\u662f\u53ef\u5206\u79bb\u7684\u3002\u56e0\u4e3a\u54c8\u5bc6\u5c14\u987f\u91cf\u88ab\u8bbe\u8ba1\u4e3a\u4e24\u90e8\u5206\u7684\u548c\uff0c\u6240\u4ee5\u8054\u5408\u6982\u7387\u53ef\u4ee5\u56e0\u5f0f\u5206\u89e3\uff1a</p> \\[p(\\theta, v) = \\left(\\frac{1}{Z_E} e^{-E(\\theta)}\\right) \\left(\\frac{1}{Z_K} e^{-K(v)}\\right) = p(\\theta) p(v)\\] <p>\u5728\u6211\u4eec\u5bf9\u52a8\u80fd \\(K(v)\\) \u7684\u5e38\u89c1\u9009\u62e9\u4e0b\uff0c\\(p(v)\\) \u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e2d\u5fc3\u9ad8\u65af\u5206\u5e03\uff1a\\(p(v) = \\mathcal{N}(v|0, M)\\)\u3002</p> <p>\u8fd9\u4e2a\u56e0\u5f0f\u5206\u89e3\u662fHMC\u6574\u4e2a\u7406\u8bba\u6846\u67b6\u7684\u57fa\u77f3\u3002\u5b83\u5411\u6211\u4eec\u4fdd\u8bc1\uff1a</p> <p>\u5728\u8fd9\u4e2a\u6269\u5c55\u7684\u8054\u5408\u5206\u5e03\u4e2d\uff0c\u4f4d\u7f6e \\(\\theta\\) \u548c\u52a8\u91cf \\(v\\) \u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002</p> <p>\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u5f15\u5165\u7684\u52a8\u91cf\u53d8\u91cf\u867d\u7136\u5728\u52a8\u529b\u5b66\u6f14\u5316\u4e2d\u81f3\u5173\u91cd\u8981\uff08\u5b83\u9a71\u52a8\u4e86\u63a2\u7d22\uff09\uff0c\u4f46\u5b83\u5e76\u4e0d\u4f1a\u5f71\u54cd\u6211\u4eec\u6700\u7ec8\u91c7\u6837\u7684\u9759\u6001\u76ee\u6807\u5206\u5e03\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u80fd\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u4ece\u8054\u5408\u5206\u5e03 \\(p(\\theta, v)\\) \u4e2d\u751f\u6210\u6837\u672c\u5bf9 \\((\\theta, v)\\)\uff0c\u6211\u4eec\u53ea\u9700\u5728\u91c7\u6837\u540e\u7b80\u5355\u5730\u4e22\u5f03\u52a8\u91cf \\(v\\) \u5206\u91cf\uff0c\u5269\u4e0b\u7684 \\(\\theta\\) \u5c31\u662f\u6211\u4eec\u68a6\u5bd0\u4ee5\u6c42\u7684\u3001\u6765\u81ea\u539f\u59cb\u76ee\u6807\u5206\u5e03 \\(p(\\theta)\\) \u7684\u6709\u6548\u6837\u672c\u3002</p> <p>\u52a8\u91cf\u5c31\u50cf\u4e00\u4e2a\u4e34\u65f6\u7684\u201c\u52a9\u63a8\u5668\u201d\u6216\u201c\u811a\u624b\u67b6\u201d\uff1a\u6211\u4eec\u5728\u6bcf\u4e00\u6b65\u5f00\u59cb\u65f6\u968f\u673a\u8bbe\u5b9a\u4e00\u4e2a\u52a8\u91cf\uff08\u7ed9\u7c92\u5b50\u4e00\u4e2a\u968f\u673a\u7684\u201c\u8e22\u52a8\u201d\uff09\uff0c\u8ba9\u7cfb\u7edf\u5728\u7269\u7406\u5b9a\u5f8b\u7684\u6307\u5f15\u4e0b\u6f14\u5316\uff0c\u4ece\u800c\u9ad8\u6548\u5730\u63d0\u51fa\u4e00\u4e2a\u9ad8\u8d28\u91cf\u7684\u5019\u9009\u70b9\uff0c\u4efb\u52a1\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u52a9\u63a8\u5668\u6254\u6389\uff0c\u51c6\u5907\u4e0b\u4e00\u6b21\u7684\u53d1\u5c04\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#4","title":"4. \u54c8\u5bc6\u5c14\u987f\u8499\u7279\u5361\u6d1b\u5206\u6b65\u6307\u5357","text":"<p>HMC\u7684\u6bcf\u4e00\u6b21\u8fed\u4ee3\u5305\u542b\u4e24\u4e2a\u4e3b\u8981\u9636\u6bb5\uff1a\u9996\u5148\uff0c\u5bf9\u52a8\u91cf\u8fdb\u884c\u4e00\u6b21\u968f\u673a\"\u8e22\u52a8\"\uff1b\u5176\u6b21\uff0c\u901a\u8fc7\u6a21\u62df\u54c8\u5bc6\u5c14\u987f\u52a8\u529b\u5b66\u751f\u6210\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u63d0\u8bae\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#41","title":"4.1 \u7b2c\u4e00\u6b65\uff1a\u52a8\u91cf\u91cd\u91c7\u6837","text":"<p>\u5728\u6bcf\u6b21\u8fed\u4ee3\u5f00\u59cb\u65f6\uff0c\u6211\u4eec\u4e22\u5f03\u65e7\u7684\u52a8\u91cf\uff0c\u5e76\u4ece\u5176\u5206\u5e03 \\(p(v)\\) \u4e2d\u62bd\u53d6\u4e00\u4e2a\u65b0\u7684\u3002\u8fd9\u901a\u5e38\u662f\u4e00\u4e2a\u6807\u51c6\u591a\u5143\u9ad8\u65af\u5206\u5e03\uff1a</p> \\[v \\sim \\mathcal{N}(0, M)\\] <p>\u4ece\u7269\u7406\u76f4\u89c9\u4e0a\u770b\uff0c\u8fd9\u4e00\u6b65\u76f8\u5f53\u4e8e\u7ed9\u6211\u4eec\u7684\u865a\u6784\u7c92\u5b50\u4e00\u4e2a\u968f\u673a\u7684\"\u8e22\u52a8\"\u3002\u8fd9\u6539\u53d8\u4e86\u7cfb\u7edf\u7684\u603b\u80fd\u91cf \\(H\\)\uff0c\u4f7f\u5f97\u91c7\u6837\u5668\u80fd\u591f\u5728\u4e0d\u540c\u7684\u80fd\u91cf\u7b49\u503c\u7ebf\u4e4b\u95f4\u8df3\u8dc3\uff0c\u4ece\u800c\u63a2\u7d22\u6574\u4e2a\u80fd\u91cf\u666f\u89c2\u3002\u6ca1\u6709\u8fd9\u4e00\u6b65\uff0c\u6a21\u62df\u5c06\u662f\u7eaf\u7cb9\u786e\u5b9a\u6027\u7684\uff0c\u5e76\u88ab\u56f0\u5728\u5355\u4e00\u7684\u80fd\u91cf\u7b49\u503c\u9762\u4e0a\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#42","title":"4.2 \u7b2c\u4e8c\u6b65\uff1a\u7528\u54c8\u5bc6\u5c14\u987f\u65b9\u7a0b\u6a21\u62df\u7269\u7406\u8fc7\u7a0b","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u8d77\u59cb\u70b9 \\((\\theta, \\tilde{v})\\)\uff0c\u6211\u4eec\u901a\u8fc7\u6839\u636e\u54c8\u5bc6\u5c14\u987f\u8fd0\u52a8\u65b9\u7a0b\u5c06\u7cfb\u7edf\u5411\u524d\u6f14\u5316\u4e00\u6bb5\u56fa\u5b9a\u7684\u65f6\u95f4 \\(T\\)\uff0c\u6765\u751f\u6210\u4e00\u4e2a\u63d0\u8bae \\((\\theta', v')\\)\uff1a</p> \\[\\frac{d\\theta}{dt} = \\frac{\\partial H}{\\partial v} = M^{-1}v\\] \\[\\frac{dv}{dt} = -\\frac{\\partial H}{\\partial \\theta} = -\\nabla_\\theta E(\\theta) = \\nabla_\\theta \\log p(\\theta)\\] <p>\u4ece\u7269\u7406\u76f4\u89c9\u4e0a\u770b\uff1a</p> <ul> <li> <p>\u7b2c\u4e00\u4e2a\u65b9\u7a0b\u5f88\u7b80\u5355\uff1a\u4f4d\u7f6e\u7684\u53d8\u5316\u7387\u5c31\u662f\u901f\u5ea6 \\((M^{-1}v)\\)\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u4e2a\u65b9\u7a0b\u662f\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b \\((F = ma)\\)\uff1a\u52a8\u91cf\u7684\u53d8\u5316\u7387\u662f\u529b\uff0c\u5373\u52bf\u80fd\u7684\u8d1f\u68af\u5ea6\u3002\u7c92\u5b50\u88ab\"\u62c9\"\u5411\u80fd\u91cf\u66f4\u4f4e\uff08\u6982\u7387\u66f4\u9ad8\uff09\u7684\u533a\u57df\u3002</p> </li> </ul> <p>\u8fd9\u6b63\u662fHMC\u5f3a\u5927\u4e4b\u5904\u7684\u6838\u5fc3\u3002\u4e0e\u968f\u673a\u6e38\u8d70\u4e0d\u540c\uff0c\u5176\u8f68\u8ff9\u662f\u7531\u5bf9\u6570\u6982\u7387\u7684\u68af\u5ea6\u5f15\u5bfc\u7684\u3002\u7c92\u5b50\u4f1a\u81ea\u7136\u5730\u671d\u5411\u5e76\u63a2\u7d22\u9ad8\u6982\u7387\u533a\u57df\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u63d0\u51fa\u4e00\u4e2a\u8fdc\u79bb\u5f53\u524d\u72b6\u6001 \\(\\theta\\) \u4f46\u4ecd\u5904\u4e8e\u5408\u7406\u533a\u57df\u7684\u65b0\u72b6\u6001 \\(\\theta'\\)\uff0c\u4ece\u800c\u83b7\u5f97\u5f88\u9ad8\u7684\u63a5\u53d7\u7387\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#43","title":"4.3 \u7b2c\u4e09\u6b65\uff1a\u4f7f\u7528\u86d9\u8df3\u6cd5\u8fdb\u884c\u6570\u503c\u79ef\u5206","text":"<p>\u54c8\u5bc6\u5c14\u987f\u65b9\u7a0b\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u6709\u8da3\u7684\u95ee\u9898\uff0c\u6211\u4eec\u65e0\u6cd5\u89e3\u6790\u5730\u6c42\u89e3\u5b83\u4eec\uff0c\u56e0\u6b64\u5fc5\u987b\u4f7f\u7528\u6570\u503c\u79ef\u5206\u5668\u6765\u8fd1\u4f3c\u8f68\u8ff9\u3002\u50cf\u6b27\u62c9\u6cd5\u8fd9\u6837\u7684\u7b80\u5355\u65b9\u6cd5\u4f1a\u8fc5\u901f\u7d2f\u79ef\u8bef\u5dee\u5e76\u4e14\u4e0d\u80fd\u4fdd\u6301\u80fd\u91cf\u5b88\u6052\uff0c\u5bfc\u81f4\u63a5\u53d7\u7387\u975e\u5e38\u4f4e\u3002HMC\u9700\u8981\u4e00\u79cd\u7279\u6b8a\u7684\u79ef\u5206\u5668\uff0c\u79f0\u4e3a\u8f9b\u79ef\u5206\u5668\uff08symplectic integrator\uff09\u3002\u6700\u5e38\u89c1\u7684\u9009\u62e9\u662f\u86d9\u8df3\u6cd5\uff08Leapfrog integrator\uff09\u3002</p> <p>\u86d9\u8df3\u7b97\u6cd5\u901a\u8fc7\u5148\u66f4\u65b0\u534a\u6b65\u52a8\u91cf\uff0c\u518d\u66f4\u65b0\u4e00\u6574\u6b65\u4f4d\u7f6e\uff0c\u6700\u540e\u518d\u66f4\u65b0\u534a\u6b65\u52a8\u91cf\u6765\u5de5\u4f5c\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5f88\u5c0f\u7684\u65f6\u95f4\u6b65\u957f \\(\\epsilon\\)\uff0c\u4e00\u4e2a\u86d9\u8df3\u6b65\u9aa4\u5982\u4e0b (5)\uff1a</p> <ol> <li> <p>\\(v(t + \\epsilon/2) = v(t) - (\\epsilon/2) \\nabla_\\theta E(\\theta(t)) = v(t) + (\\epsilon/2) \\nabla_\\theta \\log p(\\theta(t))\\)</p> </li> <li> <p>\\(\\theta(t + \\epsilon) = \\theta(t) + \\epsilon M^{-1} v(t + \\epsilon/2)\\)</p> </li> <li> <p>\\(v(t + \\epsilon) = v(t + \\epsilon/2) - (\\epsilon/2) \\nabla_\\theta E(\\theta(t + \\epsilon)) = v(t + \\epsilon/2) + (\\epsilon/2) \\nabla_\\theta \\log p(\\theta(t + \\epsilon))\\)</p> </li> </ol> <p>\u8981\u6a21\u62df\u603b\u65f6\u95f4 \\(T\\)\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u8fc7\u7a0b\u91cd\u590d \\(L = T/\\epsilon\\) \u6b21\u3002</p> <p>\u4e3a\u4ec0\u4e48\u8981\u8d39\u5fc3\u4f7f\u7528\u8fd9\u79cd\u7279\u5b9a\u7684\u66f4\u65b0\u65b9\u6848\u5462\uff1f\u50cf\u86d9\u8df3\u6cd5\u8fd9\u6837\u7684\u8f9b\u79ef\u5206\u5668\u5177\u6709\u4e24\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u7279\u6027\uff1a</p> <ol> <li> <p>\u65f6\u95f4\u53ef\u9006\u6027\uff1a\u5982\u679c\u4f60\u7528\u86d9\u8df3\u6cd5\u8fd0\u884c \\(L\\) \u6b65\u4ece \\((\\theta, v)\\) \u5230\u8fbe \\((\\theta', v')\\)\uff0c\u7136\u540e\u5c06\u6700\u7ec8\u52a8\u91cf\u53cd\u8f6c\u4e3a \\(-v'\\) \u518d\u8fd0\u884c \\(L\\) \u6b65\uff0c\u4f60\u5c06\u7cbe\u786e\u5730\u56de\u5230 \\((\\theta, -v)\\)\u3002\u8fd9\u4e2a\u6027\u8d28\u5bf9\u4e8e\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u81f3\u5173\u91cd\u8981\u3002</p> </li> <li> <p>\u4f53\u79ef\u4fdd\u6301\u6027\uff1a\u8be5\u79ef\u5206\u5668\u4fdd\u6301\u4e86 \\((\\theta, v)\\) \u76f8\u7a7a\u95f4\u7684\u4f53\u79ef\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u4f1a\u4eba\u4e3a\u5730\u538b\u7f29\u6216\u7a00\u91ca\u6982\u7387\u5bc6\u5ea6\uff0c\u8fd9\u5bf9\u4e8e\u4e00\u4e2a\u6709\u6548\u7684MCMC\u7b97\u6cd5\u6765\u8bf4\u662f\u5fc5\u9700\u7684\u3002</p> </li> </ol> <p>\u867d\u7136\u86d9\u8df3\u6cd5\u4e0d\u80fd\u5b8c\u7f8e\u5730\u4fdd\u6301\u54c8\u5bc6\u5c14\u987f\u91cf \\(H\\)\uff08\u5b83\u4f1a\u6709 \\(\\epsilon^2\\) \u91cf\u7ea7\u7684\u5c0f\u8bef\u5dee\uff09\uff0c\u4f46\u5b83\u5177\u6709\u51fa\u8272\u7684\u957f\u671f\u7a33\u5b9a\u6027\u548c\u4fdd\u6301MCMC\u8f6c\u79fb\u6709\u6548\u6027\u6240\u9700\u7684\u51e0\u4f55\u7279\u6027\u3002\u8fd9\u4f7f\u5f97HMC\u5373\u4f7f\u5728\u8bb8\u591a\u79ef\u5206\u6b65\u9aa4\u4e4b\u540e\u4e5f\u80fd\u4fdd\u6301\u5f88\u9ad8\u7684\u63a5\u53d7\u7387\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#44-metropolis-hastings","title":"4.4 \u7b2c\u56db\u6b65\uff1aMetropolis-Hastings\u4fee\u6b63","text":"<p>\u7ecf\u8fc7 \\(L\\) \u6b65\u86d9\u8df3\u79ef\u5206\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u63d0\u8bae\u72b6\u6001 \\((\\theta', v')\\)\u3002\u7531\u4e8e\u6570\u503c\u79ef\u5206\u5e76\u4e0d\u5b8c\u7f8e\uff0c\u603b\u80fd\u91cf \\(H\\) \u5e76\u672a\u5b8c\u5168\u5b88\u6052\u3002\\(H(\\theta', v')\\) \u4f1a\u4e0e \\(H(\\theta, \\tilde{v})\\) \u7565\u6709\u4e0d\u540c\u3002\u4e3a\u4e86\u4fee\u6b63\u8fd9\u4e2a\u6570\u503c\u8bef\u5dee\u5e76\u4f7f\u7b97\u6cd5\u7cbe\u786e\uff0c\u6211\u4eec\u6267\u884c\u6700\u540e\u4e00\u6b65Metropolis\u63a5\u53d7\u6b65\u9aa4 (1)\uff1a</p> \\[\\alpha = \\min\\left(1, \\exp[-(H(\\theta', v') - H(\\theta, \\tilde{v}))]\\right)\\] <p>\u8fd9\u4e00\u70b9\u975e\u5e38\u6df1\u523b\u3002\u4e0e\u968f\u673a\u6e38\u8d70Metropolis\u4e0d\u540c\uff0cHMC\u4e2d\u7684\u63a5\u53d7/\u62d2\u7edd\u6b65\u9aa4\u4e0d\u662f\u63a2\u7d22\u7684\u4e3b\u8981\u9a71\u52a8\u529b\u3002\u54c8\u5bc6\u5c14\u987f\u52a8\u529b\u5b66\u624d\u662f\u63a2\u7d22\u8005\u3002\u63a5\u53d7\u6b65\u9aa4\u662f\u5bf9\u6570\u503c\u79ef\u5206\u5668\u7684\u8d28\u91cf\u63a7\u5236\u68c0\u67e5\u3002\u5982\u679c\u79ef\u5206\u5668\u5728\u4fdd\u6301\u80fd\u91cf\u65b9\u9762\u505a\u5f97\u5f88\u597d\uff08\\(H' \\approx H\\)\uff09\uff0c\u90a3\u4e48\u63a5\u53d7\u6982\u7387 \\(\\alpha\\) \u5c31\u4f1a\u63a5\u8fd11\uff0c\u6b63\u5982\u9ed1\u677f\u4e0a\u6240\u5199\u7684\uff08\\(\\alpha \\approx 1\\)\uff09\u3002\u5982\u679c\u6b65\u957f \\(\\epsilon\\) \u592a\u5927\uff0c\u79ef\u5206\u8bef\u5dee\u4f1a\u5f88\u5927\uff0c\u80fd\u91cf\u4e0d\u5b88\u6052\uff0c\u63d0\u8bae\u5c31\u4f1a\u88ab\uff08\u6b63\u786e\u5730\uff09\u62d2\u7edd\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#5-hmcmetropolis","title":"5. \u53ef\u89c6\u5316HMC\u4e0e\u968f\u673a\u6e38\u8d70Metropolis","text":"<p>\u901a\u8fc7\u4e0a\u9762\u4e24\u5e45\u52a8\u6001\u793a\u610f\u56fe\uff0c\u53ef\u4ee5\u6e05\u6670\u7684\u4e86\u89e3\u57fa\u4e8eMetropolis \u7b97\u6cd5\u7684\u91c7\u6837\u548c\u57fa\u4e8e\u54c8\u5bc6\u5c14\u987f\u8499\u7279\u5361\u6d1b\u91c7\u6837\u7684\u533a\u522b\u3002</p> <p>\u4e3a\u4e86\u5efa\u7acb\u76f4\u89c2\u7406\u89e3\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u53ef\u89c6\u5316\u6765\u6bd4\u8f83\u4e00\u4e2a\u7b80\u5355\u7684\u968f\u673a\u6e38\u8d70Metropolis\uff08RWM\uff09\u91c7\u6837\u5668\u548c\u6211\u4eec\u65b0\u7684HMC\u91c7\u6837\u5668\u7684\u63a2\u7d22\u884c\u4e3a\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u4e8c\u7ef4\u76f8\u5173\u9ad8\u65af\u5206\u5e03\u4f5c\u4e3a\u76ee\u6807\u5206\u5e03\u3002\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6d4b\u8bd5\u6848\u4f8b\uff0c\u56e0\u4e3a\u53d8\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u4f7f\u5f97\u8f74\u5bf9\u9f50\u6216\u7b80\u5355\u7684\u968f\u673a\u6e38\u8d70\u91c7\u6837\u5668\u96be\u4ee5\u9ad8\u6548\u63a2\u7d22\u3002</p> <p>\u4ee5\u4e0b\u4ee3\u7801\u5c06\u5b9e\u73b0\u5e76\u5bf9\u6bd4\u8fd9\u4e24\u79cd\u7b97\u6cd5\u3002</p> <ol> <li> <p>\u5b9a\u4e49\u76ee\u6807\u5206\u5e03\uff1a\u5b9e\u73b0\u4e8c\u7ef4\u9ad8\u65af\u5206\u5e03\u7684\u5bf9\u6570\u6982\u7387\uff08\u5373\u8d1f\u52bf\u80fd\uff09\u53ca\u5176\u68af\u5ea6\u3002</p> </li> <li> <p>RWM\u91c7\u6837\u5668\uff1a\u5b9e\u73b0\u6807\u51c6\u7684\u968f\u673a\u6e38\u8d70Metropolis\u7b97\u6cd5\u3002</p> </li> <li> <p>HMC\u91c7\u6837\u5668\uff1a\u5b9e\u73b0\u86d9\u8df3\u79ef\u5206\u5668\u548c\u5b8c\u6574\u7684HMC\u5faa\u73af\u3002</p> </li> <li> <p>\u53ef\u89c6\u5316\uff1a\u5728\u76ee\u6807\u5206\u5e03\u7684\u7b49\u9ad8\u7ebf\u56fe\u4e0a\uff0c\u7ed8\u5236\u4e24\u79cd\u7b97\u6cd5\u751f\u6210\u7684\u6837\u672c\u8def\u5f84\u3002</p> </li> </ol> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import multivariate_normal\n\n# --- Target distribution (correlated 2D Gaussian distribution) --- \n# This defines our \"potential energy field\"\nmean = np.array([0.0, 0.0])\ncov = np.array([[1.0, 0.95], \n                [0.95, 1.0]])\ninv_cov = np.linalg.inv(cov)\ntarget_dist = multivariate_normal(mean, cov)\n\ndef potential_energy(theta):\n    \"\"\" Potential energy U(theta) = -log p(theta) \"\"\"\n    return -target_dist.logpdf(theta)\n\ndef grad_potential_energy(theta):\n    \"\"\" Gradient of potential energy, i.e., -d/d(theta) log p(theta) \"\"\"\n    # For Gaussian distribution N(mu, Sigma), the gradient of log p is -inv(Sigma) * (theta - mu)\n    # So the gradient of potential energy (-log p) is inv(Sigma) * (theta - mu)\n    return inv_cov @ (theta - mean)\n\n# --- Leapfrog integrator ---\ndef leapfrog(theta, v, grad_U, epsilon, L):\n    \"\"\"\n    Perform L steps of leapfrog integration.\n    theta: current position\n    v: current momentum\n    grad_U: function to compute gradient of potential energy\n    epsilon: step size\n    L: number of steps\n    \"\"\"\n    # Initial half-step momentum update\n    v_half = v - 0.5 * epsilon * grad_U(theta)\n    # L-1 full-step updates\n    for _ in range(L - 1):\n        theta = theta + epsilon * v_half\n        v_half = v_half - epsilon * grad_U(theta)\n    # Final full-step position update\n    theta = theta + epsilon * v_half\n    # Final half-step momentum update\n    v = v_half - 0.5 * epsilon * grad_U(theta)\n    return theta, v\n\n# --- HMC sampler ---\ndef hmc_sampler(start_theta, n_samples, epsilon, L):\n    samples = [start_theta]\n    theta = start_theta\n\n    for _ in range(n_samples - 1):\n        # 1. Sample momentum\n        v_current = np.random.randn(2)\n\n        # 2. Simulate trajectory using leapfrog\n        theta_prop, v_prop = leapfrog(np.copy(theta), np.copy(v_current), grad_potential_energy, epsilon, L)\n\n        # 3. Metropolis-Hastings correction\n        # H(theta, v) = U(theta) + K(v), where K(v) = 0.5 * v.T @ v\n        U_current = potential_energy(theta)\n        K_current = 0.5 * (v_current @ v_current)\n        H_current = U_current + K_current\n\n        U_prop = potential_energy(theta_prop)\n        K_prop = 0.5 * (v_prop @ v_prop)\n        H_prop = U_prop + K_prop\n\n        # Acceptance probability\n        alpha = min(1.0, np.exp(H_current - H_prop))\n\n        if np.random.rand() &lt; alpha:\n            theta = theta_prop\n\n        samples.append(theta)\n\n    return np.array(samples)\n\n# --- Random Walk Metropolis sampler ---\ndef rwm_sampler(start_theta, n_samples, step_size):\n    samples = [start_theta]\n    theta = start_theta\n\n    for _ in range(n_samples - 1):\n        # Propose a new state\n        theta_prop = theta + step_size * np.random.randn(2)\n\n        # Acceptance probability\n        alpha = min(1.0, np.exp(potential_energy(theta) - potential_energy(theta_prop)))\n\n        if np.random.rand() &lt; alpha:\n            theta = theta_prop\n\n        samples.append(theta)\n\n    return np.array(samples)\n\n# --- Run simulation and plot ---\nn_samples = 500\nstart_theta = np.array([-2.5, 2.5])\n\n# Adjust parameters\nhmc_samples = hmc_sampler(start_theta, n_samples, epsilon=0.1, L=20)\nrwm_samples = rwm_sampler(start_theta, n_samples, step_size=0.15)\n\n# Plotting\nx = np.linspace(-3, 3, 100)\ny = np.linspace(-3, 3, 100)\nX, Y = np.meshgrid(x, y)\npos = np.dstack((X, Y))\nZ = target_dist.pdf(pos)\n\nplt.figure(figsize=(12, 6))\n\n# RWM plot\nplt.subplot(1, 2, 1)\nplt.contour(X, Y, Z, levels=10, cmap='viridis')\nplt.plot(rwm_samples[:, 0], rwm_samples[:, 1], 'r-o', markersize=3, alpha=0.5)\nplt.title(f\"Random Walk Metropolis (N={n_samples})\")\nplt.xlabel(r\"$\\theta_1$\")\nplt.ylabel(r\"$\\theta_2$\")\n\n# HMC plot\nplt.subplot(1, 2, 2)\nplt.contour(X, Y, Z, levels=10, cmap='viridis')\nplt.plot(hmc_samples[:, 0], hmc_samples[:, 1], 'b-o', markersize=3, alpha=0.5)\nplt.title(f\"Hamiltonian Monte Carlo (N={n_samples})\")\nplt.xlabel(r\"$\\theta_1$\")\nplt.ylabel(r\"$\\theta_2$\")\n\nplt.tight_layout()\nplt.show()\n</code></pre> </p> <p>\u4ece\u56fe\u4e2d\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u5230\uff0cRWM\u91c7\u6837\u5668\uff08\u5de6\u56fe\uff09\u7684\u8def\u5f84\u975e\u5e38\u5bc6\u96c6\uff0c\u6b65\u5b50\u5f88\u5c0f\uff0c\u63a2\u7d22\u901f\u5ea6\u7f13\u6162\uff0c\u5448\u73b0\u51fa\u5178\u578b\u7684\u6269\u6563\u884c\u4e3a\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cHMC\u91c7\u6837\u5668\uff08\u53f3\u56fe\uff09\u80fd\u591f\u8fdb\u884c\u957f\u8ddd\u79bb\u7684\u8df3\u8dc3\uff0c\u9ad8\u6548\u5730\u5728\u5206\u5e03\u7684\u9ad8\u6982\u7387\u533a\u57df\u4e4b\u95f4\u79fb\u52a8\uff0c\u4ece\u800c\u66f4\u5feb\u5730\u83b7\u5f97\u6574\u4e2a\u5206\u5e03\u7684\u4ee3\u8868\u6027\u6837\u672c\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#6-","title":"6. \u4f7f\u7528\u73b0\u4ee3\u8d1d\u53f6\u65af\u65b9\u6cd5\u6c42\u89e3\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b\u53c2\u6570","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u7406\u8bba\u4ed8\u8bf8\u5b9e\u8df5\uff0c\u590d\u73b0\u4e0a\u56fe\u8bfe\u5802\u4e3e\u7684\u4f8b\u5b50\u3002\u56de\u5230\u8bb2\u5ea7\u6700\u521d\u7684\u4f8b\u5b50\uff1a\u731e\u7301\u4e0e\u96ea\u5154\u7684\u79cd\u7fa4\u52a8\u6001\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7684\u54c8\u5bc6\u987f\u8499\u7279\u5361\u6d1b\uff08Hamiltonian Monte Carlo, HMC\uff09\u7b97\u6cd5\uff0c\u5728\u4e00\u4e2a\u540d\u4e3a PyMC \u7684\u73b0\u4ee3\u6982\u7387\u7f16\u7a0b\u6846\u67b6\u4e2d\uff0c\u6839\u636e\u54c8\u5fb7\u900a\u6e7e\u516c\u53f8\u63d0\u4f9b\u7684\u6570\u636e\uff0c\u6765\u63a8\u65ad\u63cf\u8ff0\u8fd9\u4e2a\u751f\u6001\u7cfb\u7edf\u7684\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b\u7684\u4e03\u4e2a\u672a\u77e5\u53c2\u6570\uff08\\(\\alpha\\)\uff0c\\(\\beta\\)\uff0c\\(\\gamma\\)\uff0c\\(\\delta\\)\uff0c\u521d\u59cb\u79cd\u7fa4\u6570\u91cf \\(H_{0}\\)\uff0c\\(L_{0}\\)\uff0c\u4ee5\u53ca\u89c2\u6d4b\u566a\u58f0 \\(\\sigma\\)\uff09\u3002</p> <p>\u8fd9\u4e2a\u6848\u4f8b\u7684\u6311\u6218\u5728\u4e8e\uff0c\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b\u662f\u4e00\u7ec4\u5fae\u5206\u65b9\u7a0b\uff0c\u6ca1\u6709\u7b80\u5355\u7684\u89e3\u6790\u89e3\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u53c2\u6570\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u6570\u503c\u79ef\u5206\u6765\u5f97\u5230\u79cd\u7fa4\u6570\u91cf\u7684\u6f14\u5316\u66f2\u7ebf\u3002\u8fd9\u4f7f\u5f97\u540e\u9a8c\u6982\u7387\u5206\u5e03 \\(p(\\theta|D)\\) \u53d8\u5f97\u5f02\u5e38\u590d\u6742\u4e14\u7ef4\u5ea6\u8f83\u9ad8\uff0c\u53c2\u6570\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u5f3a\u70c8\u7684\u76f8\u5173\u6027\u3002\u8fd9\u6b63\u662fHMC \u8fd9\u7c7b\u5148\u8fdb\u7684 MCMC \u7b97\u6cd5\u5927\u663e\u8eab\u624b\u7684\u573a\u666f\u3002</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#61","title":"6.1 \u5efa\u6a21\u601d\u8def","text":"<ol> <li> <p>\u6a21\u578b\uff1a\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\uff08Lotka-Volterra\uff09\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002</p> </li> <li> <p>\u6570\u636e\uff1a1900-1920\u5e74\u7684\u96ea\u5154\uff08Hares\uff09\u548c\u731e\u7301\uff08Lynx\uff09\u79cd\u7fa4\u6570\u91cf\u3002</p> </li> <li> <p>\u76ee\u6807\uff1a\u6c42\u89e3\u6240\u6709\u672a\u77e5\u53c2\u6570\u7684\u8054\u5408\u540e\u9a8c\u6982\u7387\u5206\u5e03 \\(p(\\alpha,\\beta,\\gamma,\\delta,H_{0},L_{0},\\sigma|\\text{\u6570\u636e})\\)\u3002</p> </li> <li> <p>\u65b9\u6cd5\uff1a\u5728PyMC\u4e2d\u6784\u5efa\u6982\u7387\u6a21\u578b\uff0c\u5e76\u4f7f\u7528\u5176\u9ed8\u8ba4\u7684NUTS\uff08No-U-Turn Sampler\uff09\u91c7\u6837\u5668\uff0c\u8fd9\u662f\u4e00\u79cd\u9ad8\u6548\u7684HMC\u53d8\u4f53\u3002</p> </li> </ol> <p>\u72b6\u6001\u7a7a\u95f4\uff1a\u4e03\u7ef4\u53c2\u6570\u7a7a\u95f4 \\((\\alpha,\\beta,\\gamma,\\delta,H_{0},L_{0},\\sigma)\\)\u3002</p> <p>\u76ee\u6807\u5206\u5e03\uff1a\u540e\u9a8c\u6982\u7387 \\(p(\\theta|D) \\propto p(D|\\theta) p(\\theta)\\)\u3002</p> <p>\u4f3c\u7136\u51fd\u6570 \\(p(D|\\theta)\\)\uff1a\u6211\u4eec\u5047\u8bbe\u89c2\u6d4b\u6570\u636e\u4e0e\u6a21\u578b\u9884\u6d4b\u4e4b\u95f4\u7684\u8bef\u5dee\u670d\u4ece\u5bf9\u6570\u6b63\u6001\u5206\u5e03\u3002\u8fd9\u610f\u5473\u7740\u6a21\u578b\u9884\u6d4b\u7684\u79cd\u7fa4\u6570\u91cf\uff08\u5fc5\u987b\u4e3a\u6b63\uff09\u5728\u5bf9\u6570\u5c3a\u5ea6\u4e0a\u4e0e\u89c2\u6d4b\u6570\u636e\u7684\u5bf9\u6570\u5448\u6b63\u6001\u8bef\u5dee\u3002\u8fd9\u5bf9\u4e8e\u4e0d\u80fd\u4e3a\u8d1f\u4e14\u65b9\u5dee\u53ef\u80fd\u968f\u5747\u503c\u53d8\u5316\u7684\u79cd\u7fa4\u6570\u636e\u662f\u4e00\u4e2a\u975e\u5e38\u5408\u7406\u7684\u5047\u8bbe\u3002</p> <p>\u5148\u9a8c\u5206\u5e03 \\(p(\\theta)\\)\uff1a\u6211\u4eec\u4e3a\u6240\u6709\u53c2\u6570\u9009\u62e9\u4e86\u5bf9\u6570\u6b63\u6001\uff08Lognormal\uff09\u6216\u534a\u6b63\u6001\uff08Half-Normal\uff09\u5206\u5e03\u4f5c\u4e3a\u5148\u9a8c\u3002\u8fd9\u662f\u4e00\u4e2a\u5173\u952e\u7684\u5efa\u6a21\u9009\u62e9\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u65bd\u52a0\u4e00\u4e2a\u7269\u7406\u7ea6\u675f\uff1a\u6240\u6709\u8fd9\u4e9b\u53c2\u6570\uff0c\u65e0\u8bba\u662f\u589e\u957f\u7387\u3001\u4ea4\u4e92\u7387\u3001\u521d\u59cb\u79cd\u7fa4\u6570\u8fd8\u662f\u566a\u58f0\uff0c\u5176\u7269\u7406\u610f\u4e49\u90fd\u51b3\u5b9a\u4e86\u5b83\u4eec\u5fc5\u987b\u4e3a\u6b63\u3002\u8fd9\u4e0d\u4ec5\u662f\u5408\u7406\u7684\u5148\u9a8c\u77e5\u8bc6\uff0c\u66f4\u662f\u4fdd\u8bc1\u6570\u503c\u6c42\u89e3\u5668\u7a33\u5b9a\u6027\u7684\u5fc5\u8981\u6761\u4ef6\u3002</p> <p>\u68af\u5ea6\u4fe1\u606f\u4e0eHMC\uff1a\u4e0e\u4f9d\u8d56\u968f\u673a\u6e38\u8d70\u7684Metropolis-Hastings\u4e0d\u540c\uff0cHMC\u7b97\u6cd5\u901a\u8fc7\u6a21\u62df\u7269\u7406\u7cfb\u7edf\u4e2d\u7684\u54c8\u5bc6\u987f\u52a8\u529b\u5b66\u6765\u8fdb\u884c\u91c7\u6837\u3002\u5b83\u5229\u7528\u540e\u9a8c\u5206\u5e03\u7684\u68af\u5ea6\u4fe1\u606f\u6765\u6307\u5bfc\u91c7\u6837\u65b9\u5411\uff0c\u4ece\u800c\u80fd\u591f\u4ee5\u66f4\u9ad8\u7684\u6548\u7387\u63a2\u7d22\u590d\u6742\u3001\u9ad8\u7ef4\u7684\u53c2\u6570\u7a7a\u95f4\u3002\u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u501f\u52a9sunode\u5e93\uff0c\u5b83\u80fd\u591f\u81ea\u52a8\u4e14\u9ad8\u6548\u5730\u8ba1\u7b97\u51faODE\u89e3\u5bf9\u5404\u4e2a\u53c2\u6570\u7684\u68af\u5ea6\u3002\u6b63\u662f\u8fd9\u4e9b\u7cbe\u786e\u7684\u68af\u5ea6\u4fe1\u606f\uff0c\u4f7f\u5f97NUTS\u91c7\u6837\u5668\u80fd\u591f\u6210\u529f\u5730\u5e94\u5bf9\u8fd9\u4e2a\u6311\u6218\u3002</p> <pre><code>\"\"\"\nUsing modern PyMC (v5+) and sunode library to reproduce the Lotka-Volterra model.\nThis version replaces the old PyMC3 + Theano + manual gradient implementation.\n\"\"\"\nimport pymc as pm\nimport numpy as np\nimport arviz as az\nimport sunode\nimport sunode.wrappers.as_pytensor\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n\n# 1. Data preparation (Hudson Bay Company dataset)\n# Keeping consistent with the data used in the original tutorial\ntimes = np.arange(1900, 1921, 1)\nhare_data = np.array([\n    30.0, 47.2, 70.2, 77.4, 36.3, 20.6, 18.1, 21.4, 22.0, 25.4,\n    27.1, 40.3, 57.0, 76.6, 52.3, 19.5, 11.2, 7.6, 14.6, 16.2, 24.7\n])\nlynx_data = np.array([\n    4.0, 6.1, 9.8, 35.2, 59.4, 41.7, 19.0, 13.0, 8.3, 9.1, 7.4,\n    8.0, 12.3, 19.5, 45.7, 51.1, 29.7, 15.8, 9.7, 10.1, 8.6\n])\ndata = np.stack([hare_data, lynx_data]).T\nspecies_names = ['hares', 'lynx']\n\n# 2. Define ODE equations\n# sunode uses sympy for symbolic definition and automatic differentiation, which is very efficient\ndef lotka_volterra(t, y, p):\n    \"\"\"\n    Right-hand side of the Lotka-Volterra (predator-prey) equations.\n\n    Args:\n        t: Time (sympy symbol)\n        y: Dataclass of state variables (species populations), containing y.hares and y.lynx\n        p: Dataclass of parameters, containing p.alpha, p.beta, p.gamma, p.delta\n\n    Returns:\n        A dictionary describing the rate of change of each state variable.\n    \"\"\"\n    return {\n        'hares': p.alpha * y.hares - p.beta * y.lynx * y.hares,\n        'lynx': p.delta * y.hares * y.lynx - p.gamma * y.lynx,\n    }\n\n# 3. Build PyMC probabilistic model\n# Define coordinates to use 'time' and 'species' dimensions in the model\ncoords = {\"time\": times, \"species\": species_names}\n\nwith pm.Model(coords=coords) as model:\n    # --- Prior distributions ---\n    # Use Lognormal priors to ensure parameters are positive, preventing ODE solutions from becoming negative\n    alpha = pm.Lognormal(\"alpha\", mu=np.log(1), sigma=0.5)\n    beta = pm.Lognormal(\"beta\", mu=np.log(0.05), sigma=0.5)\n    gamma = pm.Lognormal(\"gamma\", mu=np.log(1), sigma=0.5)\n    delta = pm.Lognormal(\"delta\", mu=np.log(0.05), sigma=0.5)\n\n    # Priors for initial states\n    initial_hares = pm.Lognormal(\"initial_hares\", mu=np.log(30), sigma=1)\n    initial_lynx = pm.Lognormal(\"initial_lynx\", mu=np.log(4), sigma=1)\n\n    # Prior for observation noise\n    sigma = pm.HalfNormal(\"sigma\", sigma=1)\n\n    # --- Solve ODE using sunode ---\n    # This is the key step that replaces the manual Theano Op\n    y_hat, _, _, _, _, _ = sunode.wrappers.as_pytensor.solve_ivp(\n        y0={\n            # Define initial conditions for the ODE\n            # Format: {'variable_name': (PyTensor variable, shape)}\n            'hares': (initial_hares, ()),\n            'lynx': (initial_lynx, ()),\n        },\n        params={\n            # Define parameters for the ODE\n            # sunode will automatically compute gradients with respect to these PyTensor variables\n            'alpha': (alpha, ()),\n            'beta': (beta, ()),\n            'gamma': (gamma, ()),\n            'delta': (delta, ()),\n            # sunode requires all parameters to be PyTensor variables or numpy arrays\n            '_dummy': np.array(0.), \n        },\n        # Pass in the ODE function we defined earlier\n        rhs=lotka_volterra,\n        # Define time points for solving\n        tvals=times,\n        t0=times[0],\n    )\n\n    # --- Likelihood function ---\n    # sunode returns a dictionary, we need to stack the solution into a matrix to match the shape of observed data\n    ode_solution = pm.math.stack([y_hat['hares'], y_hat['lynx']], axis=1)\n\n    # Assume observations follow a log-normal distribution\n    Y_obs = pm.Lognormal(\n        \"Y_obs\", \n        mu=pm.math.log(ode_solution), \n        sigma=sigma, \n        observed=data, \n        dims=(\"time\", \"species\")\n    )\n\n# 4. Run sampler\n# The NUTS sampler will utilize the exact gradient information provided by sunode\nwith model:\n    # sunode's C backend does not support multiprocessing \"pickling\", so we must use a single core\n    idata = pm.sample(2000, tune=2000, chains=4, cores=1, target_accept=0.9)\n\n# 5. Results visualization\n# Plot posterior distributions of parameters\naz.plot_posterior(idata, var_names=[\"alpha\", \"beta\", \"gamma\", \"delta\", \"initial_hares\", \"initial_lynx\", \"sigma\"])\nplt.suptitle(\"Posterior Distributions of Parameters\", y=1.02)\nplt.tight_layout()\nplt.savefig(\"lv_posterior_distributions.png\", dpi=300, bbox_inches='tight')\nplt.show()\n\n# Extract posterior predictive samples\nwith model:\n    posterior_predictive = pm.sample_posterior_predictive(idata)\n\n# Plot posterior predictions vs. real data\nfig, axes = plt.subplots(2, 1, figsize=(10, 8), sharex=True)\n\nfor i, (spec, color) in enumerate(zip(species_names, ['C0', 'C1'])):\n    # Plot real data\n    axes[i].plot(times, data[:, i], 'o', color=color, label=f\"Observed {spec.capitalize()}\")\n\n    # Extract posterior predictive mean and 94% credible interval\n    pred_mean = posterior_predictive.posterior_predictive['Y_obs'].mean(dim=('chain', 'draw')).sel(species=spec)\n    hdi_94 = az.hdi(posterior_predictive.posterior_predictive['Y_obs'].sel(species=spec), hdi_prob=0.94)\n\n    # Plot posterior predictions\n    axes[i].plot(times, pred_mean, color=color, lw=2, label=f\"Posterior Mean {spec.capitalize()}\")\n    # Use isel (integer selection) instead of sel (label selection) to get HDI upper and lower bounds\n    axes[i].fill_between(times, hdi_94.Y_obs.isel(hdi=0), hdi_94.Y_obs.isel(hdi=1), color=color, alpha=0.3, label=\"94% HDI\")\n\n    axes[i].set_ylabel(\"Population\")\n    axes[i].set_title(f\"{spec.capitalize()} Population Dynamics\")\n    axes[i].legend()\n\naxes[1].set_xlabel(\"Year\")\nplt.tight_layout()\nplt.savefig(\"lv_posterior_predictions.png\", dpi=300, bbox_inches='tight')\nplt.show()\n\n# 6. Phase plot\nplt.figure(figsize=(8, 8))\npred_mean_hares = posterior_predictive.posterior_predictive['Y_obs'].mean(dim=('chain', 'draw')).sel(species='hares')\npred_mean_lynx = posterior_predictive.posterior_predictive['Y_obs'].mean(dim=('chain', 'draw')).sel(species='lynx')\n\nplt.plot(pred_mean_hares, pred_mean_lynx, lw=2, label=\"Posterior Mean Trajectory\")\nplt.plot(hare_data, lynx_data, 'o', alpha=0.8, label=\"Observed Data\")\nplt.xlabel(\"Hares Population\")\nplt.ylabel(\"Lynx Population\")\nplt.title(\"Lotka-Volterra Phase Portrait\")\nplt.legend()\nplt.grid(True, linestyle='--', alpha=0.6)\nplt.savefig(\"lv_phase_portrait.png\", dpi=300, bbox_inches='tight')\nplt.show()\n\n\n# 7. Trace plot\n# This plot is used to diagnose the health of the MCMC sampling process\naz.plot_trace(idata, var_names=[\"alpha\", \"beta\", \"gamma\", \"delta\", \"initial_hares\", \"initial_lynx\", \"sigma\"])\nplt.tight_layout()\nplt.savefig(\"lv_trace_plot.png\", dpi=300, bbox_inches='tight')\nplt.show()\n\n# 8. Results visualization\n# Plot posterior distributions of parameters\naz.plot_posterior(\n    idata, \n    var_names=[\"alpha\", \"beta\", \"gamma\", \"delta\", \"initial_hares\", \"initial_lynx\", \"sigma\"],\n    kind=\"hist\"  # Set chart type to histogram\n)\nplt.suptitle(\"Posterior Distributions of Parameters (Histogram)\", y=1.02)\nplt.tight_layout()\nplt.savefig(\"lv_posterior_histograms.png\", dpi=300, bbox_inches='tight')\nplt.show()\n</code></pre> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0e\u4e0a\u4e00\u8282\u8bfe\u6211\u4eec\u5b9e\u73b0\u7684Metropolis-Hastings MCMC \u4ee3\u7801\u76f8\u6bd4\uff0c\u8fd9\u4efd\u4ee3\u7801\u8fd0\u884c\u65f6\u957f\u66f4\u4e45\u3002\u6839\u672c\u539f\u56e0\u5728\u4e8e\u5176\u91c7\u7528\u4e86\u8ba1\u7b97\u4e0a\u66f4\u6602\u8d35\u7684 \u54c8\u5bc6\u987f\u8499\u7279\u5361\u6d1b\uff08HMC\uff09 \u7b97\u6cd5\uff0c\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0cMetropolis-Hastings \u4ec5\u9700\u5bf9\u5fae\u5206\u65b9\u7a0b\uff08ODE\uff09\u8fdb\u884c\u4e00\u6b21\u6570\u503c\u6c42\u89e3\u6765\u8ba1\u7b97\u4f3c\u7136\uff1b\u800cHMC \u4e3a\u4e86\u5b9e\u73b0\u66f4\u9ad8\u6548\u7684\u53c2\u6570\u7a7a\u95f4\u63a2\u7d22\uff0c\u4e0d\u4ec5\u9700\u8981\u6c42\u89e3ODE\uff0c\u8fd8\u5fc5\u987b\u901a\u8fc7 sunode \u6c42\u89e3\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u4f34\u968f\u5fae\u5206\u65b9\u7a0b\u7ec4\u6765\u83b7\u5f97\u540e\u9a8c\u6982\u7387\u7684\u68af\u5ea6 \uff0c\u5e76\u5229\u7528\u8fd9\u4e2a\u68af\u5ea6\u4fe1\u606f\u6a21\u62df\u4e00\u6574\u6bb5\u8fd0\u52a8\u8f68\u8ff9\u6765\u4ea7\u751f\u4e0b\u4e00\u4e2a\u6837\u672c\u70b9\u3002</p> <p>\u4e3a\u4ec0\u4e48\u8ba1\u7b97\u65f6\u95f4\u90a3\u4e48\u957f\u6211\u4eec\u8fd8\u662f\u8981\u4f7f\u7528 HMC\u5462\uff1f\u9996\u5148 HMC \u66f4\u5168\u9762\u7684\u5efa\u6a21\uff0c\u66f4\u8bda\u5b9e\u7684\u4e0d\u786e\u5b9a\u6027,\u6211\u4eec\u6ca1\u6709\u5047\u5b9a\u521d\u59cb\u503c\u548c\u8bef\u5dee\u662f\u5df2\u77e5\u7684\u3002\u901a\u8fc7\u540c\u65f6\u63a8\u65ad\u8fd98\u4e2a\u53c2\u6570\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u5bf9\u7cfb\u7edf\u6574\u4f53\u4e0d\u786e\u5b9a\u6027\u66f4\u5b8c\u6574\u3001\u66f4\u8bda\u5b9e\u7684\u8bc4\u4f30\u3002\u4e0a\u4e00\u8282\u7684MH\u4ee3\u7801\u56e0\u4e3a\u56fa\u5b9a\u4e86\u8fd9\u4e9b\u503c\uff0c\u53ef\u80fd\u4f1a\u4f4e\u4f30\u6700\u7ec8\u7684\u4e0d\u786e\u5b9a\u6027\u3002 </p> <p>\u5176\u6b21\uff0c\u65e0\u4e0e\u4f26\u6bd4\u7684\u91c7\u6837\u6548\u7387\u548c\u53ef\u9760\u6027\uff0c\u8fd9\u53ef\u80fd\u662f\u6700\u91cd\u8981\u7684\u4f18\u52bf\u3002\u867d\u7136MH\u572810\u5206\u949f\u5185\u7ed9\u51fa50000\u4e2a\u6837\u672c\uff0c\u4f46\u8fd9\u4e9b\u6837\u672c\u53ef\u80fd\u56e0\u4e3a\u9ad8\u5ea6\u76f8\u5173\uff0c\u5b9e\u9645\u53ea\u76f8\u5f53\u4e8e\u51e0\u767e\u4e2a\u72ec\u7acb\u7684\u6709\u6548\u6837\u672c\u3002\u800cNUTS\u82b1\u66f4\u957f4000\u4e2a\u6837\u672c\uff0c\u53ef\u80fd\u5c31\u76f8\u5f53\u4e8e\u4e0a\u5343\u4e2a\u72ec\u7acb\u7684\u6709\u6548\u6837\u672c\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u79d1\u5b66\u95ee\u9898\uff0c \u6837\u672c\u7684\u201c\u8d28\u201d\u8fdc\u6bd4\u201c\u91cf\u201d\u91cd\u8981 \u3002 HMC \u7ed9\u51fa\u7684\u7ed3\u679c\u8fdc\u6bd4MH\u53ef\u9760\uff0c\u66f4\u80fd\u4fdd\u8bc1\u6211\u4eec\u63a2\u7d22\u5230\u4e86\u540e\u9a8c\u5206\u5e03\u7684\u771f\u5b9e\u5f62\u72b6\u3002 </p> <p>\u5176\u5b9e\u6709\u4e00\u70b9\u6570\u636e\u57fa\u7840\u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u6709\u7591\u60d1\uff0c\u6211\u4eec\u660e\u660e\u4f1a\u6709\u66f4\u5feb\u901f\u7684\u65b9\u6cd5(\u5982 scipy.optimize.curve_fit)  \uff1a\u53ef\u4ee5\u5728\u51e0\u79d2\u949f\u5185\u7ed9\u4f60\u4e00\u7ec4\u6700\u4f18\u7684\u53c2\u6570\u503c\uff08\u4e00\u4e2a\u70b9\u4f30\u8ba1\uff09\u3002\u5b83\u80fd\u544a\u8bc9\u4f60\u201c\u54ea\u6761\u66f2\u7ebf\u80fd\u6700\u597d\u5730\u7a7f\u8fc7\u8fd9\u4e9b\u6570\u636e\u70b9\u201d\u3002\u4f46\u8d1d\u53f6\u65afODE\u65b9\u6cd5(\u6211\u4eec\u7528\u7684)  \uff1a\u5b83\u4e0d\u4ec5\u7ed9\u51fa\u4e86\u53c2\u6570\u7684\u4f30\u8ba1\uff0c\u8fd8\u7ed9\u51fa\u4e86 \u53c2\u6570\u7684\u5b8c\u6574\u540e\u9a8c\u5206\u5e03 \u3002\u5b83\u80fd\u544a\u8bc9\u4f60\uff1a\u201c\u6839\u636e\u6570\u636e\u548c\u6211\u4eec\u7684\u7269\u7406\u6a21\u578b\uff0c\u730e\u7269\u51fa\u751f\u7387 \u03b1 \u670995%\u7684\u53ef\u80fd\u6027\u5728[0.5, 0.8] \u8fd9\u4e2a\u533a\u95f4\u5185\uff0c\u6700\u53ef\u80fd\u7684\u503c\u662f0.65\u201d\u3002 </p> <p>\u8fd9\u5728\u79d1\u7814\u8ffd\u6c42\u4e2d\u662f\u5929\u58e4\u4e4b\u522b\u3002\u6211\u4eec\u5173\u5fc3\u7684\u5f80\u5f80\u4e0d\u662f\u90a3\u6761\u6700\u4f18\u7684\u66f2\u7ebf\uff0c\u800c\u662f\u9a71\u52a8\u8fd9\u4e2a\u7cfb\u7edf\u7684\u5185\u5728\u89c4\u5f8b \uff0c\u4e5f\u5c31\u662f\\(\\alpha, \\beta, \\gamma, \\delta\\)\u8fd9\u4e9b\u53c2\u6570\u7684\u771f\u5b9e\u503c\u3002\u7406\u89e3\u8fd9\u4e9b\u53c2\u6570\uff0c\u5c31\u662f\u7406\u89e3\u8fd9\u4e2a\u751f\u6001\u7cfb\u7edf\u672c\u8eab\u3002\u8fd9\u5c31\u50cf\u533b\u751f\u8bca\u65ad\u75c5\u56e0\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u9000\u70e7\u3002 </p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u771f\u6b63\u7684\u79d1\u5b66\u662f\u4e25\u8c28\u7684\u4e0d\u786e\u5b9a\u6027\u91cf\u5316(Rigorous Uncertainty Quantification)\u800c\u975e\u4ec5\u4ec5\u662f\u6570\u636e\u70bc\u4e39\uff0c\u5728\u79d1\u5b66\u3001\u5de5\u7a0b\u548c\u653f\u7b56\u5236\u5b9a\u4e2d\uff0c\u77e5\u9053\u6211\u4eec\u5bf9\u4e00\u4e2a\u7ed3\u679c\u201c\u6709\u591a\u786e\u5b9a\u201d\u81f3\u5173\u91cd\u8981\u3002\u6bd4\u5982\uff0c\u5f53\u6211\u4eec\u8bf4\u201c\u6839\u636e\u6a21\u578b\uff0c2030\u5e74\u7684\u6d77\u5e73\u9762\u4e0a\u5347\u670995%\u7684\u6982\u7387\u572810\u523015\u5398\u7c73\u4e4b\u95f4\u201d\uff0c\u8fd9\u79cd\u5e26\u6709\u4e25\u683c\u6982\u7387\u4fdd\u8bc1\u7684\u9648\u8ff0\uff0c\u662f\u5236\u5b9a\u5e94\u5bf9\u6c14\u5019\u53d8\u5316\u653f\u7b56\u7684\u57fa\u77f3\u3002\u540c\u6837\uff0c\u5728\u836f\u7269\u7814\u53d1\u4e2d\uff0c\u786e\u5b9a\u4e00\u4e2a\u65b0\u836f\u6709\u6548\u5242\u91cf\u7684\u7f6e\u4fe1\u533a\u95f4\uff0c\u76f4\u63a5\u5173\u7cfb\u5230\u60a3\u8005\u7684\u751f\u547d\u5b89\u5168\u3002\u6211\u4eec\u613f\u610f\u82b1\u51e0\u5468\u7684\u8ba1\u7b97\u65f6\u95f4\uff0c\u6765\u6362\u53d6\u8fd9\u79cd\u53ef\u9760\u6027\u3002 </p> <p>\u66f4\u4e3a\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u69a8\u5e72\u6570\u636e\u4e2d\u7684\u6bcf\u4e00\u6ef4\u4fe1\u606f\uff0c\u5728\u5f88\u591a\u79d1\u7814\u9886\u57df\uff0c\u6570\u636e\u662f\u6781\u5176\u5b9d\u8d35\u548c\u7a00\u758f\u7684\u3002\u6bd4\u5982\uff1a </p> <ul> <li> <p>\u4e34\u5e8a\u8bd5\u9a8c \uff1a\u75c5\u4eba\u6570\u91cf\u6709\u9650\u3002</p> </li> <li> <p>\u53e4\u751f\u7269\u5b66 \uff1a\u5316\u77f3\u6837\u672c\u7a00\u5c11\u3002 </p> </li> <li> <p>\u592a\u7a7a\u63a2\u7d22 \uff1a\u63a2\u6d4b\u5668\u4f20\u56de\u7684\u6570\u636e\u6709\u9650\u3002 </p> </li> </ul> <p>\u5728\u8fd9\u4e9b\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u65e0\u6cd5\u4f7f\u7528\u9700\u8981\u6d77\u91cf\u6570\u636e\u7684\u6df1\u5ea6\u5b66\u4e60\u3002\u4f46\u8d1d\u53f6\u65af\u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u7ed3\u5408\u5148\u9a8c\u77e5\u8bc6\uff08\u6211\u4eec\u7684ODE\u6a21\u578b\u5c31\u662f\u4e00\u79cd\u6781\u5f3a\u7684\u5148\u9a8c\uff09 \u548c\u5c11\u91cf\u6570\u636e\uff0c\u5f97\u51fa\u975e\u5e38\u7a33\u5065\u7684\u7ed3\u8bba\u3002\u5b83\u201c\u69a8\u5e72\u201d\u4e86\u6570\u636e\u4e2d\u7684\u6bcf\u4e00\u6ef4\u4fe1\u606f\u3002 </p> <p> \u8d1d\u53f6\u65af\u6a21\u578b\u5728\u5b66\u4e60\u4e86\u54c8\u5fb7\u900a\u6e7e\u516c\u53f8\u7684\u5386\u53f2\u6570\u636e\u540e\uff0c\u5bf9\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u65b9\u7a0b\u4e2d\u4e03\u4e2a\u672a\u77e5\u53c2\u6570\uff08\u5305\u62ec\u4e24\u4e2a\u521d\u59cb\u503c\u548c\u566a\u58f0\uff09\u7684\u6700\u7ec8\u63a8\u65ad\u7ed3\u679c\u3002\u6bcf\u4e00\u5e45\u5b50\u56fe\u90fd\u4ee3\u8868\u4e00\u4e2a\u53c2\u6570\u7684\u6982\u7387\u5206\u5e03\u3002 </p> <p></p> <p>\u56fe\u4e2d\u4e24\u6761\u5b9e\u7ebf\uff08\u84dd\u8272\u4ee3\u8868\u96ea\u5154\uff0c\u6a59\u8272\u4ee3\u8868\u731e\u7301\uff09\u662f\u6a21\u578b\u7684\u201c\u6700\u4f73\u9884\u6d4b\u201d\u8f68\u8ff9\uff08\u5373\u540e\u9a8c\u5747\u503c\u9884\u6d4b\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\uff0c\u8fd9\u6761\u9884\u6d4b\u7ebf\u975e\u5e38\u6210\u529f\u5730\u6355\u6349\u4e86\u4e24\u79cd\u7269\u79cd\u6570\u91cf\u968f\u65f6\u95f4\u53d8\u5316\u7684\u5468\u671f\u6027\u6da8\u843d\u89c4\u5f8b\u3002\u96ea\u5154\u79cd\u7fa4\u5148\u8fbe\u5230\u9876\u5cf0\uff0c\u968f\u540e\u4f5c\u4e3a\u98df\u7269\u6765\u6e90\u7684\u731e\u7301\u79cd\u7fa4\u4e5f\u968f\u4e4b\u7e41\u8363\uff1b\u800c\u731e-\u7301\u6570\u91cf\u7684\u589e\u52a0\u53c8\u5bfc\u81f4\u96ea\u5154\u88ab\u5927\u91cf\u6355\u98df\u800c\u51cf\u5c11\uff0c\u63a5\u7740\u731e\u7301\u4e5f\u56e0\u98df\u7269\u77ed\u7f3a\u800c\u6570\u91cf\u4e0b\u964d\uff0c\u5982\u6b64\u5faa\u73af\u5f80\u590d\u3002 </p> <p></p> <p>\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b\u7684\u76f8\u56fe(Phase Portrait)\u3002\u8fd9\u5f20\u56fe\u6700\u6838\u5fc3\u7684\u7279\u5f81\u5c31\u662f\u4e00\u4e2a \u95ed\u5408\u7684\u73af\u8def \u3002\u8fd9\u6b63\u662f\u6355\u98df\u8005-\u88ab\u6355\u98df\u8005\u7cfb\u7edf\u7684\u6807\u5fd7\u6027\u52a8\u529b\u5b66\u7279\u5f81\u3002\u4e0e\u4e0a\u4e00\u5f20\u65f6\u95f4\u5e8f\u5217\u56fe\u76f8\u6bd4\uff0c\u8fd9\u5f20\u76f8\u56fe\u66f4\u80fd\u8bc1\u660e\u6a21\u578b\u4e0d\u4ec5\u4ec5\u662f\u201c\u62df\u5408\u4e86\u51e0\u4e2a\u6570\u636e\u70b9\u201d\uff0c\u800c\u662f\u771f\u6b63\u7406\u89e3\u5e76\u590d\u73b0\u4e86\u8fd9\u4e2a\u751f\u6001\u7cfb\u7edf\u5185\u90e8\u7684\u52a8\u529b\u5b66\u53cd\u9988\u673a\u5236\u5b83\u8bc1\u660e\u4e86\u6a21\u578b\u6240\u5b66\u5230\u7684\u53c2\u6570\uff08 \\(\u03b1 , \u03b2 , \u03b3 , \u03b4\\)\uff09\u7ec4\u5408\u5728\u4e00\u8d77\u65f6\uff0c\u80fd\u591f\u751f\u6210\u4e00\u4e2a\u4e0e\u73b0\u5b9e\u4e16\u754c\u89c2\u5bdf\u5230\u7684\u5faa\u73af\u8def\u5f84\u975e\u5e38\u76f8\u4f3c\u7684\u7406\u8bba\u8def\u5f84\u3002 </p> <p></p> <p>\u56fe\u7684\u53f3\u4fa7\u90e8\u5206\uff0c\u6bcf\u4e2a\u53c2\u6570\u7684\u91c7\u6837\u8f68\u8ff9\u90fd\u50cf\u4e00\u6761\u7a33\u5b9a\u800c\u201c\u6bdb\u8338\u8338\u7684\u6bdb\u6bdb\u866b\u201d\uff0c\u6ca1\u6709\u5411\u4e0a\u6216\u5411\u4e0b\u7684\u6f02\u79fb\u8d8b\u52bf\uff0c\u8fd9\u8868\u660e\u91c7\u6837\u8fc7\u7a0b\u5df2\u7ecf\u5b8c\u5168\u6536\u655b\u3002\u540c\u65f6\uff0c\u5de6\u4fa7\u7684\u540e\u9a8c\u5206\u5e03\u56fe\u4e2d\uff0c\u6765\u81ea4\u4e2a\u72ec\u7acb\u91c7\u6837\u94fe\u7684\u66f2\u7ebf\u51e0\u4e4e\u5b8c\u7f8e\u5730\u91cd\u53e0\u5728\u4e00\u8d77\uff0c\u8fd9\u8fdb\u4e00\u6b65\u8bc1\u660e\u5b83\u4eec\u90fd\u4e00\u81f4\u5730\u627e\u5230\u4e86\u76f8\u540c\u7684\u76ee\u6807\u5206\u5e03</p>"},{"location":"zh/notes/14.%20%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E9%87%87%E6%A0%B7/#_2","title":"\u603b\u7ed3","text":"<p>HMC\u5229\u7528\u76ee\u6807\u5206\u5e03\u7684\u51e0\u4f55\u4fe1\u606f\uff08\u901a\u8fc7\u5176\u68af\u5ea6\uff09\u6765\u63d0\u51fa\u8fdc\u8ddd\u79bb\u4e14\u6709\u6548\u7684\u79fb\u52a8\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u76f8\u6bd4\u4e8e\u968f\u673a\u6e38\u8d70\u7b49\u6269\u6563\u6027\u65b9\u6cd5\u7684\u91c7\u6837\u6548\u7387\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u6548\u7387\u662f\u6709\u4ee3\u4ef7\u7684\uff1aHMC\u8981\u6c42\u8ba1\u7b97\u5bf9\u6570\u6982\u7387\u7684\u68af\u5ea6\uff0c\u5e76\u4e14\u6709\u66f4\u591a\u7684\u8c03\u8282\u53c2\u6570\uff08\u6b65\u957f \\(\\epsilon\\)\uff0c\u6b65\u6570 \\(L\\)\uff09\uff0c\u7b97\u6cd5\u8fd0\u884c\u65f6\u957f\u66f4\u957f\u3002</p> <p>\u4e0b\u8868\u603b\u7ed3\u4e86\u672c\u8bb2\u8ba8\u8bba\u7684MCMC\u7b97\u6cd5\u4e4b\u95f4\u7684\u5173\u952e\u533a\u522b\u3002</p> <p>\u88681\uff1aMCMC\u91c7\u6837\u7b97\u6cd5\u6bd4\u8f83</p> \u7279\u6027 \u968f\u673a\u6e38\u8d70Metropolis (RWM) \u54c8\u5bc6\u5c14\u987f\u8499\u7279\u5361\u6d1b (HMC) \u63d0\u8bae\u673a\u5236 \u6269\u6563\u6027\u968f\u673a\u6b65\uff08\u5982\u9ad8\u65af\u566a\u58f0\uff09 \u57fa\u4e8e\u54c8\u5bc6\u5c14\u987f\u52a8\u529b\u5b66\u7684\u786e\u5b9a\u6027\u8f68\u8ff9 \u63a2\u7d22\u884c\u4e3a \u5c40\u90e8\u3001\u7f13\u6162\u3001\u6837\u672c\u81ea\u76f8\u5173\u6027\u9ad8 \u5168\u5c40\u3001\u5feb\u901f\u3001\u6837\u672c\u81ea\u76f8\u5173\u6027\u4f4e \u6240\u9700\u4fe1\u606f \u76ee\u6807\u5bc6\u5ea6 p(\u03b8) (\u53ef\u5dee\u4e00\u4e2a\u5e38\u6570) \u76ee\u6807\u5bc6\u5ea6 p(\u03b8) \u53ca\u5176\u68af\u5ea6 \u2207log p(\u03b8) \u63a5\u53d7\u7387 \u5bf9\u6b65\u957f\u654f\u611f\uff1b\u901a\u5e38\u8c03\u81f3\u7ea623%\u4ee5\u8fbe\u6700\u4f18\u6548\u7387 \u82e5\u8c03\u8282\u5f97\u5f53\uff0c\u901a\u5e38\u975e\u5e38\u9ad8(&gt;80%)\uff1b\u53cd\u6620\u4e86\u79ef\u5206\u5668\u7684\u7cbe\u5ea6 \u5173\u952e\u8c03\u8282\u53c2\u6570 \u6b65\u957f \u03c3 \u6b65\u957f \u03b5\uff0c\u6b65\u6570 L \u9ad8\u7ef4\u6027\u80fd \u5dee\uff1b\u53d7\u7ef4\u5ea6\u707e\u96be\u5f71\u54cd\u4e25\u91cd \u4f18\u79c0\uff1b\u6027\u80fd\u968f\u7ef4\u5ea6\u589e\u52a0\u7684\u6269\u5c55\u6027\u66f4\u597d \u4e3b\u8981\u5e94\u7528\u573a\u666f \u7b80\u5355\u95ee\u9898\u6216\u68af\u5ea6\u4e0d\u53ef\u7528\u65f6 \u590d\u6742\u6a21\u578b\u4e2d\u5bf9\u8fde\u7eed\u53ef\u5fae\u5206\u5e03\u91c7\u6837\u7684\u9ec4\u91d1\u6807\u51c6 \u901f\u5ea6 \u5355\u6b21\u8fed\u4ee3\u901f\u5ea6\u5feb\uff0c\u56e0\u4e3a\u8ba1\u7b97\u7b80\u5355 \u5355\u6b21\u8fed\u4ee3\u901f\u5ea6\u6781\u6162\uff0c\u56e0\u4e3a\u8981\u8ba1\u7b97\u68af\u5ea6 <p>\u4f5c\u4e3a\u521d\u5b66\u8005\uff0c\u5b66\u5b8c\u8fd9\u4e00\u8bb2\u8fd9\u81ea\u7136\u4f1a\u5f15\u51fa\u4e00\u4e2a\u95ee\u9898\uff1a\u5728\u62e5\u6709\u5f3a\u5927\u6df1\u5ea6\u5b66\u4e60\u5de5\u5177\u7684\u4eca\u5929\uff0c\u8fd9\u79cd\u201c\u8001\u6d3e\u201d\u65b9\u6cd5\u662f\u5426\u5df2\u7ecf\u8fc7\u65f6\u6216\u201c\u4e0d\u5982\u201d\u6df1\u5ea6\u5b66\u4e60\uff1f</p> <p>\u7b54\u6848\u662f\uff1a \u5b83\u4eec\u4e0d\u662f\u7b80\u5355\u7684\u4f18\u52a3\u5173\u7cfb\uff0c\u800c\u662f\u9002\u7528\u4e8e\u4e0d\u540c\u95ee\u9898\u3001\u5404\u6709\u5343\u79cb\u7684\u4e24\u79cd\u5f3a\u5927\u5de5\u5177\u3002\u800c\u771f\u6b63\u7684\u79d1\u5b66\u524d\u6cbf\uff0c\u6b63\u662f\u5728\u4e8e\u5c06\u8fd9\u4e24\u8005\u7ed3\u5408\u8d77\u6765\u3002 </p> <p>\u8ba9\u6211\u4eec\u6765\u6df1\u5165\u5bf9\u6bd4\u4e00\u4e0b\u3002</p> <p>\u65b9\u6cd5\u5bf9\u6bd4\uff1a\u8d1d\u53f6\u65afODE\u63a8\u65ad vs. \u7eaf\u6df1\u5ea6\u5b66\u4e60</p> \u7279\u6027 \u8d1d\u53f6\u65afODE\u63a8\u65ad (\u6211\u4eec\u521a\u521a\u7528\u7684\u65b9\u6cd5) \u7eaf\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5 (\u4f8b\u5982 RNN, LSTM, Transformer) \u53ef\u89e3\u91ca\u6027 \u6781\u5f3a (\u767d\u7bb1)\u3002\u6a21\u578b\u7684\u6bcf\u4e2a\u53c2\u6570\u90fd\u6709\u660e\u786e\u7684\u7269\u7406\u610f\u4e49\uff08\\(\\alpha\\)\u662f\u51fa\u751f\u7387\uff0c\\(\\beta\\)\u662f\u6355\u98df\u7387\u7b49\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u5206\u6790\u53c2\u6570\u7684\u540e\u9a8c\u5206\u5e03\uff0c\u7406\u89e3\u7cfb\u7edf\u5185\u5728\u7684\u9a71\u52a8\u529b\u3002 \u6781\u5f31 (\u9ed1\u7bb1)\u3002\u6a21\u578b\u7531\u6570\u767e\u4e07\u4e2a\u6743\u91cd\u548c\u504f\u7f6e\u7ec4\u6210\uff0c\u5f88\u96be\u7406\u89e3\u5176\u5185\u90e8\u51b3\u7b56\u903b\u8f91\u3002\u6211\u4eec\u53ea\u77e5\u9053\u8f93\u5165\u548c\u8f93\u51fa\u7684\u5173\u7cfb\uff0c\u4e0d\u77e5\u9053\u201c\u4e3a\u4ec0\u4e48\u201d\u3002 \u6570\u636e\u9700\u6c42 \u8f83\u4f4e\u3002\u7531\u4e8e\u6a21\u578b\u7ed3\u6784\u57fa\u4e8e\u7269\u7406\u5b9a\u5f8b\uff0c\u5b83\u4e3a\u6570\u636e\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u201c\u9aa8\u67b6\u201d\u3002\u5373\u4f7f\u6570\u636e\u70b9\u4e0d\u591a\uff0c\u4e5f\u80fd\u5f97\u5230\u76f8\u5bf9\u53ef\u9760\u7684\u7ed3\u679c\u3002 \u6781\u9ad8\u3002\u9700\u8981\u5927\u91cf\u6570\u636e\u624d\u80fd\u8ba9\u7f51\u7edc\u5b66\u4e60\u5230\u6f5c\u5728\u7684\u52a8\u6001\u6a21\u5f0f\uff0c\u5426\u5219\u5f88\u5bb9\u6613\u8fc7\u62df\u5408\u3002 \u5148\u9a8c\u77e5\u8bc6/\u7269\u7406\u7ea6\u675f \u6838\u5fc3\u4f18\u52bf\u3002\u6574\u4e2a\u6a21\u578b\u5c31\u662f\u5efa\u7acb\u5728\u9886\u57df\u77e5\u8bc6\uff08Lotka-Volterra\u65b9\u7a0b\uff09\u4e4b\u4e0a\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5148\u9a8c\u5206\u5e03\u878d\u5165\u66f4\u591a\u4e13\u5bb6\u7ecf\u9a8c\u3002 \u9ed8\u8ba4\u5ffd\u7565\u3002\u6a21\u578b\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u4e00\u5207\uff0c\u4e0d\u76f4\u63a5\u5229\u7528\u5df2\u77e5\u7684\u7269\u7406\u5b9a\u5f8b\u3002 \u4e0d\u786e\u5b9a\u6027\u91cf\u5316 \u9ec4\u91d1\u6807\u51c6\u3002\u5929\u751f\u5c31\u80fd\u63d0\u4f9b\u6240\u6709\u53c2\u6570\u7684\u5b8c\u6574\u540e\u9a8c\u5206\u5e03\uff0c\u4ee5\u53ca\u5bf9\u9884\u6d4b\u7ed3\u679c\u7684\u4e25\u683c\u7f6e\u4fe1\u533a\u95f4\uff08Credible Intervals\uff09\uff0c\u8fd9\u5bf9\u4e8e\u79d1\u5b66\u51b3\u7b56\u81f3\u5173\u91cd\u8981\u3002 \u9ed8\u8ba4\u4e0d\u63d0\u4f9b\u3002\u6807\u51c6\u795e\u7ecf\u7f51\u7edc\u53ea\u7ed9\u51fa\u4e00\u4e2a\u70b9\u4f30\u8ba1\u9884\u6d4b\u3002\u867d\u7136\u6709\u8d1d\u53f6\u65af\u795e\u7ecf\u7f51\u7edc\uff08BNN\uff09\u7b49\u6280\u672f\uff0c\u4f46\u901a\u5e38\u66f4\u590d\u6742\u4e14\u5e94\u7528\u8f83\u5c11\u3002 \u8ba1\u7b97\u901f\u5ea6 \u63a8\u65ad(\u91c7\u6837)\u6781\u6162\uff0c\u6b63\u5982\u6211\u4eec\u6240\u89c1\u3002\u4f46\u8bad\u7ec3/\u5b66\u4e60\u7684\u6982\u5ff5\u8f83\u5f31\uff0c\u4e3b\u8981\u662f\u91c7\u6837\u3002 \u8bad\u7ec3\u6781\u6162\uff0c\u9700\u8981\u5927\u91cfGPU\u65f6\u95f4\u548c\u6570\u636e\u3002\u4f46\u4e00\u65e6\u8bad\u7ec3\u5b8c\u6210\uff0c\u9884\u6d4b(\u63a8\u65ad)\u6781\u5feb\u3002 \u6cdb\u5316\u4e0e\u5916\u63a8 \u8f83\u5f3a\u3002\u56e0\u4e3a\u6a21\u578b\u57fa\u4e8e\u201c\u5b9a\u5f8b\u201d\uff0c\u5b83\u5728\u6570\u636e\u8303\u56f4\u4e4b\u5916\u8fdb\u884c\u9884\u6d4b\uff08\u5916\u63a8\uff09\u65f6\uff0c\u8868\u73b0\u901a\u5e38\u6bd4\u7eaf\u6570\u636e\u9a71\u52a8\u65b9\u6cd5\u66f4\u53ef\u9760\u3002 \u6781\u5f31\u3002\u975e\u5e38\u4e0d\u64c5\u957f\u5916\u63a8\u3002\u5982\u679c\u9047\u5230\u8bad\u7ec3\u6570\u636e\u4e4b\u5916\u7684\u65b0\u60c5\u51b5\uff0c\u9884\u6d4b\u7ed3\u679c\u53ef\u80fd\u5b8c\u5168\u9519\u8bef\u3002 <p>\u5f53\u524d\u8ba1\u7b97\u79d1\u5b66\u9886\u57df\u6700\u70ed\u95e8\u7684\u65b9\u5411\u4e4b\u4e00\uff1a\u79d1\u5b66\u673a\u5668\u5b66\u4e60 (Scientific Machine Learning)\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u5c06\u4e24\u8005\u6700\u597d\u7684\u90e8\u5206\u7ed3\u5408\u8d77\u6765\u3002\u4ee3\u8868\u6027\u7684\u6280\u672f\u6709\uff1a</p> <p>1. \u901a\u7528\u5fae\u5206\u65b9\u7a0b (Universal Differential Equations, UDEs)</p> <p>\u5b83\u7684\u505a\u6cd5\u662f\uff1a * \u6211\u4eec\u4ece\u4e00\u4e2a\u5df2\u77e5\u7684\u3001\u4f46\u4e0d\u5b8c\u7f8e\u7684\u7269\u7406\u6a21\u578b\uff08\u6bd4\u5982\u6211\u4eec\u7684Lotka-Volterra\u65b9\u7a0b\uff09\u5f00\u59cb\u3002 * \u7136\u540e\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6765\u5b66\u4e60\u6a21\u578b\u7684\u672a\u77e5\u90e8\u5206\u6216\u8bef\u5dee\u9879\u3002</p> <p>\u65b9\u7a0b\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\uff1a</p> \\[\\frac{dx}{dt} = \\alpha x - \\beta xy + \\mathbf{NN_x}(x, y, \\theta_{NN})\\] \\[\\frac{dy}{dt} = \\delta xy - \\gamma y + \\mathbf{NN_y}(x, y, \\theta_{NN})\\] <p>\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff1a</p> <ul> <li> <p>\u4fdd\u7559\u53ef\u89e3\u91ca\u6027\uff1a\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u63a8\u65ad\u51fa\u6709\u7269\u7406\u610f\u4e49\u7684\u53c2\u6570 \\(\\alpha, \\beta, \\gamma, \\delta\\)\u3002</p> </li> <li> <p>\u63d0\u5347\u6a21\u578b\u7cbe\u5ea6\uff1a\u795e\u7ecf\u7f51\u7edc \\(\\mathbf{NN}\\) \u53ef\u4ee5\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u5e76\u4fee\u6b63\u539f\u59cb\u7269\u7406\u6a21\u578b\u7684\u4e0d\u8db3\u4e4b\u5904\uff08\u4f8b\u5982\uff0c\u73af\u5883\u627f\u8f7d\u529b\u3001\u5b63\u8282\u53d8\u5316\u7b49Lotka-Volterra\u6ca1\u8003\u8651\u7684\u56e0\u7d20\uff09\u3002</p> </li> <li> <p>\u6570\u636e\u6548\u7387\u66f4\u9ad8\uff1a\u56e0\u4e3a\u5927\u90e8\u5206\u7ed3\u6784\u7531\u7269\u7406\u5b9a\u5f8b\u63d0\u4f9b\uff0c\u795e\u7ecf\u7f51\u7edc\u53ea\u9700\u8981\u5b66\u4e60\u201c\u6b8b\u5dee\u201d\u90e8\u5206\uff0c\u6240\u9700\u6570\u636e\u8fdc\u5c11\u4e8e\u7eaf\u6df1\u5ea6\u5b66\u4e60\u3002</p> </li> <li> <p>\u901f\u5ea6\u66f4\u5feb\uff1a\u901a\u5e38\u4f7f\u7528\u57fa\u4e8e\u68af\u5ea6\u7684\u4f18\u5316\u7b97\u6cd5\u8fdb\u884c\u8bad\u7ec3\uff0c\u6bd4\u7eafMCMC\u91c7\u6837\u5feb\u51e0\u4e2a\u6570\u91cf\u7ea7\u3002</p> </li> </ul> <p>2. \u7269\u7406\u4fe1\u606f\u795e\u7ecf\u7f51\u7edc (Physics-Informed Neural Networks, PINNs)</p> <p>\u8fd9\u662f\u53e6\u4e00\u79cd\u601d\u8def\u3002\u5b83\u8ba9\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u76f4\u63a5\u53bb\u62df\u5408\u6570\u636e\uff0c\u4f46\u5728\u8bad\u7ec3\u7684\u635f\u5931\u51fd\u6570\u4e2d\u52a0\u5165\u4e00\u9879\uff0c\u60e9\u7f5a\u90a3\u4e9b\u4e0d\u9075\u5b88\u5df2\u77e5\u7269\u7406\u5b9a\u5f8b\uff08\u5982ODE\u65b9\u7a0b\uff09\u7684\u89e3\u3002</p> <ul> <li>\u635f\u5931\u51fd\u6570 = \u6570\u636e\u62df\u5408\u8bef\u5dee + \u7269\u7406\u65b9\u7a0b\u6b8b\u5dee</li> </ul> <p>\u8fd9\u76f8\u5f53\u4e8e\u5f3a\u8feb\u795e\u7ecf\u7f51\u7edc\u5728\u5b66\u4e60\u6570\u636e\u6a21\u5f0f\u7684\u540c\u65f6\uff0c\u4e5f\u5fc5\u987b\u201c\u5c0a\u91cd\u201d\u7269\u7406\u5b9a\u5f8b\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/","title":"\u5e8f\u8a00\uff1a\u4ece\u65e0\u504f\u5230\u6709\u504f\u7684\u968f\u673a\u6e38\u8d70","text":"<p>\u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0cErwin Frey \u6559\u6388\u5df2\u7ecf\u63a2\u8ba8\u4e86\u7b80\u5355\u968f\u673a\u6e38\u8d70\uff08random walk\uff09\u7684\u6982\u5ff5\uff0c\u5e76\u63ed\u793a\u4e86\u5b83\u5728\u5b8f\u89c2\u5c3a\u5ea6\u4e0a\u5982\u4f55\u4e0e\u6269\u6563\u65b9\u7a0b\u5efa\u7acb\u6df1\u523b\u7684\u8054\u7cfb\u3002\u8fd9\u79cd\u6e38\u8d70\u662f\u5b8c\u5168\u65e0\u504f\u7684\uff0c\u6bcf\u4e00\u6b65\u7684\u65b9\u5411\u9009\u62e9\u90fd\u662f\u7eaf\u7cb9\u968f\u673a\u7684\uff0c\u6700\u7ec8\u5bfc\u81f4\u7c92\u5b50\u4e91\u7684\u5f25\u6563\u3002\u7136\u800c\uff0c\u5728\u751f\u7269\u4e16\u754c\u4e2d\uff0c\u6211\u4eec\u89c2\u5bdf\u5230\u8bb8\u591a\u5fae\u751f\u7269\uff0c\u5c3d\u7ba1\u8eab\u5904\u4e00\u4e2a\u9ecf\u6027\u4e3b\u5bfc\u3001\u60ef\u6027\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u7684\u7269\u7406\u73af\u5883\u4e2d\uff0c\u5374\u80fd\u8868\u73b0\u51fa\u60ca\u4eba\u7684\u5bfc\u822a\u80fd\u529b\uff0c\u671d\u7740\u98df\u7269\u6e90\u79fb\u52a8\u6216\u8fdc\u79bb\u6709\u5bb3\u7269\u8d28\u3002</p> <p></p> <p>\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u95ee\u9898\u662f\uff1a\u4e00\u4e2a\u751f\u7269\u4f53\uff0c\u5728\u4f4e\u96f7\u8bfa\u6570\uff08 \u60ef\u6027\u529b\u4e0e\u9ecf\u6027\u529b\u4e4b\u6bd4\uff0c\u4f4e\u5219\u9ecf\u6027\u4e3b\u5bfc\uff09\u73af\u5883\u7684\u968f\u673a\u529b\u4f5c\u7528\u4e0b\uff0c\u5982\u4f55\u5b9e\u73b0\u5b9a\u5411\u8fd0\u52a8\uff1f\u672c\u8282\u8bfe\u5c06\u4ee5\u7ec6\u83cc\u7684\u8d8b\u5316\u6027\uff08Chemotaxis\uff09\u4e3a\u8303\u4f8b\uff0c\u6df1\u5165\u5256\u6790\u8fd9\u4e00\u95ee\u9898\u3002\u8d8b\u5316\u6027\u662f\u4e00\u4e2a\u5178\u578b\u7684\u6709\u504f\u968f\u673a\u6e38\u8d70\u8fc7\u7a0b\uff0c\u5b83\u5c55\u793a\u4e86\u5fae\u89c2\u5c42\u9762\u7684\u968f\u673a\u51b3\u7b56\u5982\u4f55\u5de7\u5999\u5730\u6c47\u805a\u6210\u5b8f\u89c2\u5c42\u9762\u7684\u6709\u6548\u5bfc\u822a\u7b56\u7565\u3002\u8fd9\u4e0d\u4ec5\u662f\u751f\u7269\u5b66\u4e0a\u7684\u5947\u8ff9\uff0c\u4e5f\u662f\u7edf\u8ba1\u7269\u7406\u5b66\u4e2d\u4e00\u4e2a\u5f15\u4eba\u5165\u80dc\u7684\u8bfe\u9898\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#1","title":"1. \u7ec6\u83cc\u8d8b\u5316\u6027\u7684\u751f\u7269\u5b66\u80cc\u666f","text":""},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#11-","title":"1.1. \u5927\u80a0\u6746\u83cc\u7684\u8fd0\u52a8\u6a21\u5f0f\uff1a\u8dd1\u52a8-\u7ffb\u6eda\u8fd0\u52a8","text":"<p>\u5927\u80a0\u6746\u83cc\uff08E. coli\uff09\u7684\u8fd0\u52a8\u6a21\u5f0f\u5e76\u975e\u8fde\u7eed\u7684\u5e73\u6ed1\u6e38\u52a8\uff0c\u800c\u662f\u7531\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u7684\u884c\u4e3a\u4ea4\u66ff\u7ec4\u6210\uff1a</p> <ul> <li> <p>\u8dd1\u52a8 (Run): \u5728\u6b64\u9636\u6bb5\uff0c\u7ec6\u83cc\u7684\u6570\u6839\u97ad\u6bdb\u4f1a\u9006\u65f6\u9488\uff08Counter-clockwise, CCW\uff09\u65cb\u8f6c\uff0c\u5b83\u4eec\u4f1a\u6c47\u96c6\u6210\u4e00\u675f\uff0c\u50cf\u87ba\u65cb\u6868\u4e00\u6837\u63a8\u52a8\u83cc\u4f53\uff0c\u4f7f\u5176\u8fd1\u4f3c\u5730\u6cbf\u76f4\u7ebf\u524d\u8fdb\u3002</p> </li> <li> <p>\u7ffb\u6eda (Tumble): \u5728\u6b64\u9636\u6bb5\uff0c\u97ad\u6bdb\u7684\u65cb\u8f6c\u65b9\u5411\u53d8\u4e3a\u987a\u65f6\u9488\uff08Clockwise, CW\uff09\u3002\u8fd9\u4f1a\u5bfc\u81f4\u97ad\u6bdb\u675f\u6563\u5f00\uff0c\u6bcf\u6839\u97ad\u6bdb\u72ec\u7acb\u8fd0\u52a8\uff0c\u4ece\u800c\u4f7f\u83cc\u4f53\u5728\u539f\u5730\u968f\u673a\u5730\u6539\u53d8\u65b9\u5411\uff0c\u4e3a\u4e0b\u4e00\u6b21\u201c\u8dd1\u52a8\u201d\u8bbe\u5b9a\u4e00\u4e2a\u65b0\u7684\u3001\u968f\u673a\u7684\u51fa\u53d1\u89d2\u5ea6\u3002</p> </li> </ul> <p>\u8d8b\u5316\u6027\u7684\u6838\u5fc3\u673a\u5236\u5e76\u4e0d\u5728\u4e8e\u7ec6\u83cc\u80fd\u591f\u201c\u64cd\u7eb5\u201d\u65b9\u5411\u76d8\u8fdb\u884c\u7cbe\u786e\u8f6c\u5411\uff0c\u800c\u5728\u4e8e\u5b83\u4eec\u80fd\u591f\u6839\u636e\u73af\u5883\u4e2d\u6709\u5229\u6216\u6709\u5bb3\u5316\u5b66\u7269\u8d28\u7684\u6d53\u5ea6\u53d8\u5316\u6765\u8c03\u63a7\u7ffb\u6eda\u7684\u9891\u7387\u3002\u5f53\u7ec6\u83cc\u611f\u77e5\u5230\u81ea\u5df1\u6b63\u671d\u7740\u5316\u5b66\u5f15\u8bf1\u5242\uff08chemoattractant\uff09\u6d53\u5ea6\u66f4\u9ad8\u7684\u65b9\u5411\u79fb\u52a8\u65f6\uff0c\u5b83\u4f1a\u6291\u5236\u7ffb\u6eda\u7684\u53d1\u751f\uff0c\u4ece\u800c\u5ef6\u957f\u5f53\u524d\u7684\u201c\u8dd1\u52a8\u201d\u65f6\u95f4\u3002\u76f8\u53cd\uff0c\u5982\u679c\u5b83\u53d1\u73b0\u81ea\u5df1\u6b63\u6e38\u5411\u4e0d\u5229\u7684\u65b9\u5411\uff08\u4f8b\u5982\u5f15\u8bf1\u5242\u6d53\u5ea6\u964d\u4f4e\u6216\u8d8b\u907f\u5242\u6d53\u5ea6\u5347\u9ad8\uff09\uff0c\u5b83\u4f1a\u589e\u52a0\u7ffb\u6eda\u7684\u9891\u7387\uff0c\u4ee5\u4fbf\u66f4\u5feb\u5730\u5c1d\u8bd5\u4e00\u4e2a\u65b0\u7684\u968f\u673a\u65b9\u5411\u3002\u901a\u8fc7\u8fd9\u79cd\u7b80\u5355\u7684\u201c\u66f4\u597d\u5219\u7ee7\u7eed\uff0c\u66f4\u5dee\u5219\u6539\u53d8\u201d\u7684\u7b56\u7565\uff0c\u7ec6\u83cc\u7684\u968f\u673a\u6e38\u8d70\u5c31\u5e26\u4e0a\u4e86\u7edf\u8ba1\u4e0a\u7684\u504f\u5411\u6027\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e86\u5411\u9ad8\u6d53\u5ea6\u5f15\u8bf1\u5242\u533a\u57df\u7684\u5b8f\u89c2\u8fc1\u79fb\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#12","title":"1.2. \u5fae\u89c2\u4e16\u754c\u7684\u7269\u7406\u5b66\uff1a\u4f4e\u96f7\u8bfa\u6570\u4e0b\u7684\u751f\u547d","text":"<p>\u4e3a\u4e86\u7406\u89e3\u4e3a\u4ec0\u4e48\u7ec6\u83cc\u4f1a\u91c7\u7528\u8fd9\u79cd\u770b\u4f3c\u7b28\u62d9\u7684\u8dd1\u52a8-\u7ffb\u6eda\u7b56\u7565\uff0c\u6211\u4eec\u5fc5\u987b\u5ba1\u89c6\u5b83\u4eec\u6240\u5904\u7684\u7269\u7406\u73af\u5883\u3002\u63cf\u8ff0\u6d41\u4f53\u52a8\u529b\u5b66\u4e2d\u60ef\u6027\u529b\u4e0e\u9ecf\u6027\u529b\u76f8\u5bf9\u91cd\u8981\u6027\u7684\u65e0\u91cf\u7eb2\u6570\u662f\u96f7\u8bfa\u6570\uff08Reynolds number\uff09\uff0c\u5176\u5b9a\u4e49\u4e3a\uff1a</p> \\[Re = \\frac{\\rho Lv}{\\eta}\\] <p>\u5176\u4e2d\uff0c\\(L\\) \u662f\u7279\u5f81\u957f\u5ea6\uff08\u5bf9\u7ec6\u83cc\u7ea6\u4e3a\u51e0\u5fae\u7c73\uff09\uff0c\\(v\\) \u662f\u901f\u5ea6\uff08\u7ea620-30 \u03bcm/s\uff09\uff0c\\(\\rho\\) \u662f\u6d41\u4f53\u5bc6\u5ea6\uff08\u6c34\u7684\u5bc6\u5ea6\uff09\uff0c\\(\\eta\\) \u662f\u6d41\u4f53\u9ecf\u5ea6\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5178\u578b\u7684\u5927\u80a0\u6746\u83cc\uff0c\u8ba1\u7b97\u51fa\u7684\u96f7\u8bfa\u6570\u6781\u4f4e\uff0c\u7ea6\u4e3a \\(10^{-6}\\)\u3002</p> <p>\u5982\u6b64\u4e4b\u4f4e\u7684\u96f7\u8bfa\u6570\u610f\u5473\u7740\u9ecf\u6027\u529b\u5728\u7ec6\u83cc\u7684\u8fd0\u52a8\u4e2d\u5360\u636e\u4e86\u7edd\u5bf9\u4e3b\u5bfc\u5730\u4f4d\uff0c\u800c\u60ef\u6027\u529b\u5219\u5b8c\u5168\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u8fd9\u5e26\u6765\u4e86\u51e0\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u7269\u7406\u540e\u679c\u3002\u9996\u5148\uff0c\u4e0d\u5b58\u5728\u201c\u6ed1\u884c\u201d\u6216\u201c\u60ef\u6027\u201d\u3002\u4e00\u65e6\u7ec6\u83cc\u7684\u97ad\u6bdb\u505c\u6b62\u63d0\u4f9b\u63a8\u529b\uff0c\u9ecf\u6027\u963b\u529b\u4f1a\u4f7f\u5176\u51e0\u4e4e\u77ac\u95f4\u505c\u6b62\u3002\u8fd9\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u201c\u8dd1\u52a8\u201d\uff08\u6709\u63a8\u529b\uff09\u548c\u201c\u7ffb\u6eda\u201d\uff08\u65b9\u5411\u91cd\u7f6e\uff09\u4e4b\u95f4\u7684\u5207\u6362\u5982\u6b64\u6cfe\u6e2d\u5206\u660e\u3002\u5176\u6b21\uff0c\u50cf\u5b8f\u89c2\u4e16\u754c\u7684\u9c7c\u7c7b\u90a3\u6837\u901a\u8fc7\u8eab\u4f53\u6446\u52a8\u6765\u8fde\u7eed\u8f6c\u5411\u7684\u7b56\u7565\uff0c\u5728\u9ecf\u6027\u4e3b\u5bfc\u7684\u4e16\u754c\u91cc\u662f\u884c\u4e0d\u901a\u7684\u3002\u56e0\u6b64\uff0c\u7ec6\u83cc\u5fc5\u987b\u6f14\u5316\u51fa\u4e00\u79cd\u9002\u5e94\u8fd9\u79cd\u201c\u9ad8\u963b\u5c3c\u201d\u73af\u5883\u7684\u72ec\u7279\u8fd0\u52a8\u7b56\u7565\uff0c\u5373\u968f\u673a\u7684\u8dd1\u52a8-\u7ffb\u6eda\u8fd0\u52a8\u3002\u8fd9\u5e76\u975e\u4e00\u79cd\u6b21\u4f18\u9009\u62e9\uff0c\u800c\u662f\u5728\u5176\u6240\u5904\u7269\u7406\u5c3a\u5ea6\u4e0b\u4e00\u79cd\u9ad8\u6548\u4e14\u5fc5\u8981\u7684\u5bfc\u822a\u65b9\u5f0f\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#13","title":"1.3. \u5206\u5b50\u673a\u5668\uff1a\u5316\u5b66\u611f\u5e94\u7cfb\u7edf","text":"<p>\u7ec6\u83cc\u5982\u4f55\u611f\u77e5\u73af\u5883\u53d8\u5316\u5e76\u5c06\u5176\u8f6c\u5316\u4e3a\u5bf9\u97ad\u6bdb\u9a6c\u8fbe\u7684\u63a7\u5236\u4fe1\u53f7\uff1f\u8fd9\u80cc\u540e\u662f\u4e00\u5957\u7cbe\u5bc6\u590d\u6742\u7684\u751f\u5316\u4fe1\u53f7\u8f6c\u5bfc\u7f51\u7edc\uff0c\u5373\u5316\u5b66\u611f\u5e94\u7cfb\u7edf\uff08chemosensory system\uff09\u3002\u5176\u6838\u5fc3\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u914d\u4f53\u7ed3\u5408 (Ligand Binding): \u5316\u5b66\u5f15\u8bf1\u5242\u6216\u8d8b\u907f\u5242\u5206\u5b50\u4e0e\u7ec6\u80de\u819c\u4e0a\u7684\u7532\u57fa\u63a5\u7eb3\u8d8b\u5316\u86cb\u767d\uff08Methyl-accepting Chemotaxis Proteins, MCPs\uff09\u7ed3\u5408\u3002</p> </li> <li> <p>\u4fe1\u53f7\u8f6c\u5bfc (Signal Transduction): \u914d\u4f53\u7684\u7ed3\u5408\u4f1a\u6539\u53d8MCPs\u7684\u6784\u8c61\uff0c\u8fd9\u79cd\u6784\u8c61\u53d8\u5316\u4f1a\u8fdb\u4e00\u6b65\u8c03\u8282\u4e0e\u4e4b\u5076\u8054\u7684\u7ec4\u6c28\u9178\u6fc0\u9176CheA\u7684\u81ea\u78f7\u9178\u5316\u6d3b\u6027\u3002\u5f15\u8bf1\u5242\u7684\u7ed3\u5408\u4f1a\u6291\u5236CheA\u7684\u6d3b\u6027\u3002</p> </li> <li> <p>\u78f7\u9178\u5316\u7ea7\u8054 (Phosphorylation Cascade): \u6d3b\u5316\u7684CheA\uff08CheA-P\uff09\u4f1a\u5c06\u5176\u78f7\u9178\u57fa\u56e2\u8f6c\u79fb\u7ed9\u54cd\u5e94\u8c03\u8282\u86cb\u767dCheY\u3002</p> </li> <li> <p>\u9a6c\u8fbe\u63a7\u5236 (Motor Control): \u78f7\u9178\u5316\u7684CheY\uff08CheY-P\uff09\u662f\u5173\u952e\u7684\u4fe1\u53f7\u5206\u5b50\u3002\u5b83\u5728\u7ec6\u80de\u8d28\u4e2d\u6269\u6563\uff0c\u5e76\u4e0e\u97ad\u6bdb\u9a6c\u8fbe\u7684\u5f00\u5173\u590d\u5408\u4f53\u7ed3\u5408\uff0c\u663e\u8457\u589e\u52a0\u9a6c\u8fbe\u4eceCCW\uff08\u8dd1\u52a8\uff09\u65cb\u8f6c\u5207\u6362\u5230CW\uff08\u7ffb\u6eda\uff09\u65cb\u8f6c\u7684\u6982\u7387\u3002\u56e0\u6b64\uff0c\u9ad8\u6d53\u5ea6\u7684CheY-P\u610f\u5473\u7740\u9ad8\u7ffb\u6eda\u9891\u7387\u3002</p> </li> <li> <p>\u9002\u5e94 (Adaptation): \u7cfb\u7edf\u8fd8\u5305\u542b\u4e00\u4e2a\u9002\u5e94\u6a21\u5757\u3002\u78f7\u9178\u9176CheZ\u4f1a\u6301\u7eed\u5730\u79fb\u9664CheY-P\u4e0a\u7684\u78f7\u9178\u57fa\u56e2\uff0c\u4f7f\u5176\u5931\u6d3b\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0cMCPs\u7684\u80de\u5185\u7ed3\u6784\u57df\u53ef\u4ee5\u88ab\u53ef\u9006\u5730\u7532\u57fa\u5316\uff08\u7531CheR\u50ac\u5316\uff09\u548c\u53bb\u7532\u57fa\u5316\uff08\u7531CheB\u50ac\u5316\uff09\u3002\u8fd9\u79cd\u7532\u57fa\u5316\u4fee\u9970\u6c34\u5e73\u80fd\u591f\u8c03\u8282MCPs\u5bf9CheA\u6d3b\u6027\u7684\u5f71\u54cd\uff0c\u4f7f\u5f97\u7ec6\u83cc\u80fd\u591f\u5bf9\u5316\u5b66\u7269\u8d28\u6d53\u5ea6\u7684\u76f8\u5bf9\u53d8\u5316\uff08\u5373\u68af\u5ea6\uff09\u505a\u51fa\u54cd\u5e94\uff0c\u800c\u4e0d\u662f\u5bf9\u7edd\u5bf9\u6d53\u5ea6\u505a\u51fa\u54cd\u5e94\u3002\u8fd9\u6b63\u662f\u4e0b\u4e00\u8282\u5c06\u8981\u8ba8\u8bba\u7684\u201c\u65f6\u95f4\u611f\u77e5\u201d\u673a\u5236\u7684\u751f\u7269\u5b66\u57fa\u7840\u3002</p> </li> </ol>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#14","title":"1.4. \u8d8b\u5316\u6027\u7814\u7a76\u9762\u4e34\u7684\u6311\u6218","text":"<p>\u7406\u89e3\u8d8b\u5316\u6027\uff0c\u7279\u522b\u662f\u7ec6\u83cc\u8d8b\u5316\u6027\uff0c\u4e0d\u4ec5\u4ec5\u662f\u63cf\u8ff0\u5176\u8fd0\u52a8\u6a21\u5f0f\u548c\u5206\u5b50\u673a\u5236\u3002\u66f4\u6df1\u5165\u7684\u7814\u7a76\u9762\u4e34\u7740\u4e00\u7cfb\u7684\u6311\u6218\uff0c\u8fd9\u4e9b\u6311\u6218\u6a2a\u8de8\u4e86\u7269\u7406\u5b66\u3001\u751f\u7269\u5b66\u548c\u4fe1\u606f\u8bba\u7b49\u591a\u4e2a\u9886\u57df\uff1a</p> <ol> <li> <p>\u566a\u58f0\u4e0b\u7684\u611f\u77e5\u4e0e\u5bfc\u822a\u6781\u9650 (Limits of Sensing and Navigation under Noise):</p> <ul> <li>\u6838\u5fc3\u95ee\u9898: \u751f\u7269\u4f53\uff08\u5982\u7ec6\u83cc\uff09\u5982\u4f55\u4ec5\u4ec5\u4f9d\u9760\u5c40\u90e8\u3001\u968f\u673a\uff08\u968f\u673a\u6da8\u843d\uff09\u7684\u6d4b\u91cf\uff0c\u6765\u51c6\u786e\u5730\u8fdb\u884c\u5bfc\u822a\uff1f</li> <li>\u6df1\u5c42\u542b\u4e49: \u5728\u5fae\u89c2\u5c3a\u5ea6\u4e0a\uff0c\u5316\u5b66\u7269\u8d28\u5206\u5b50\u7684\u6269\u6563\u548c\u7ed3\u5408\u662f\u968f\u673a\u4e8b\u4ef6\uff0c\u5bfc\u81f4\u7ec6\u80de\u611f\u77e5\u7684\u4fe1\u53f7\u672c\u8eab\u5c31\u5e26\u6709\u566a\u58f0\u3002\u6b64\u5916\uff0c\u7ec6\u80de\u5185\u90e8\u7684\u4fe1\u53f7\u8f6c\u5bfc\u7f51\u7edc\u4e5f\u5b58\u5728\u56fa\u6709\u7684\u751f\u5316\u566a\u58f0\u3002\u5728\u8fd9\u79cd\u9ad8\u566a\u58f0\u73af\u5883\u4e0b\uff0c\u7ec6\u80de\u9700\u8981\u4ece\u5608\u6742\u7684\u4fe1\u53f7\u4e2d\u63d0\u53d6\u6709\u7528\u7684\u68af\u5ea6\u4fe1\u606f\uff0c\u5e76\u505a\u51fa\u6709\u6548\u7684\u51b3\u7b56\u3002\u8fd9\u6d89\u53ca\u5230\u7edf\u8ba1\u63a8\u65ad\u3001\u4fe1\u606f\u8bba\u548c\u63a7\u5236\u7406\u8bba\u7684\u4ea4\u53c9\u95ee\u9898\uff1a\u4e00\u4e2a\u6709\u9650\u5927\u5c0f\u3001\u6709\u9650\u80fd\u91cf\u7684\u751f\u7269\u7cfb\u7edf\uff0c\u5176\u611f\u77e5\u548c\u5bfc\u822a\u7684\u7406\u8bba\u6781\u9650\u5728\u54ea\u91cc\uff1f\u5b83\u5982\u4f55\u901a\u8fc7\u5176\u5206\u5b50\u7f51\u7edc\uff0c\u5728\u7269\u7406\u6781\u9650\u4e0b\u4f18\u5316\u4fe1\u606f\u83b7\u53d6\u548c\u5904\u7406\uff1f</li> </ul> </li> <li> <p>\u611f\u77e5\u4e0e\u9002\u5e94\u7684\u70ed\u529b\u5b66 (Thermodynamics of Sensing and Adaptation):</p> <ul> <li>\u6838\u5fc3\u95ee\u9898: \u8d8b\u5316\u884c\u4e3a\u7684\u80fd\u91cf\u548c\u4fe1\u606f\u6210\u672c\u662f\u591a\u5c11\uff1f</li> <li>\u6df1\u5c42\u542b\u4e49: \u7ec6\u80de\u611f\u77e5\u5316\u5b66\u68af\u5ea6\u3001\u5904\u7406\u4fe1\u53f7\u3001\u8c03\u63a7\u97ad\u6bdb\u9a6c\u8fbe\u5e76\u5b9e\u73b0\u9002\u5e94\uff08\u5373\u5bf9\u80cc\u666f\u6d53\u5ea6\u53d8\u5316\u4e0d\u654f\u611f\uff0c\u53ea\u54cd\u5e94\u76f8\u5bf9\u53d8\u5316\uff09\u90fd\u9700\u8981\u6d88\u8017\u80fd\u91cf\u3002\u4f8b\u5982\uff0c\u78f7\u9178\u5316\u7684\u8fc7\u7a0b\u3001\u7532\u57fa\u5316\u9176\u548c\u53bb\u7532\u57fa\u5316\u9176\u7684\u6d3b\u6027\u90fd\u9700\u8981ATP\u3002\u9002\u5e94\u673a\u5236\u672c\u8eab\u9700\u8981\u7cbe\u786e\u7684\u5e73\u8861\u6765\u7ef4\u6301\u5176\u654f\u611f\u6027\u3002\u4ece\u70ed\u529b\u5b66\u89d2\u5ea6\u770b\uff0c\u4e3a\u4e86\u83b7\u53d6\u548c\u5904\u7406\u73af\u5883\u4fe1\u606f\uff0c\u751f\u7269\u7cfb\u7edf\u9700\u8981\u4ed8\u51fa\u591a\u5c11\u80fd\u91cf\u4ee3\u4ef7\uff1f\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u57fa\u672c\u7684\u70ed\u529b\u5b66\u4e0b\u9650\uff0c\u89c4\u5b9a\u4e86\u5b9e\u73b0\u7279\u5b9a\u611f\u77e5\u7cbe\u5ea6\u6240\u9700\u7684\u6700\u5c0f\u80fd\u91cf\uff1f\u8fd9\u4e9b\u95ee\u9898\u5c06\u4fe1\u606f\u8bba\u4e0e\u975e\u5e73\u8861\u6001\u70ed\u529b\u5b66\u8054\u7cfb\u8d77\u6765\u3002</li> </ul> </li> <li> <p>\u4ece\u5355\u7ec6\u80de\u884c\u4e3a\u5230\u96c6\u4f53\u8f93\u8fd0 (From Single-Cell Behavior to Collective Transport):</p> <ul> <li>\u6838\u5fc3\u95ee\u9898: \u4e2a\u4f53\u7ec6\u80de\u7684\u6da8\u843d\u5982\u4f55\u5851\u9020\u7fa4\u4f53\u5c42\u9762\u7684\u52a8\u529b\u5b66\uff1f</li> <li>\u6df1\u5c42\u542b\u4e49: \u5c3d\u7ba1\u6211\u4eec\u7406\u89e3\u4e86\u5355\u4e2a\u7ec6\u83cc\u7684\u8dd1\u52a8-\u7ffb\u6eda\u673a\u5236\uff0c\u4f46\u5f53\u6570\u767e\u4e07\u751a\u81f3\u6570\u5341\u4ebf\u4e2a\u7ec6\u83cc\u805a\u96c6\u5728\u4e00\u8d77\u65f6\uff0c\u5b83\u4eec\u4f1a\u5c55\u73b0\u51fa\u590d\u6742\u7684\u96c6\u4f53\u884c\u4e3a\uff0c\u4f8b\u5982\u7fa4\u4f53\u8fc1\u79fb\u3001\u751f\u7269\u819c\u5f62\u6210\u548c\u521a\u624d\u63d0\u5230\u7684\u8d8b\u5316\u6027\u584c\u7f29\u3002\u8fd9\u4e9b\u96c6\u4f53\u73b0\u8c61\u5f80\u5f80\u4e0d\u80fd\u7b80\u5355\u5730\u4ece\u5355\u4e2a\u7ec6\u80de\u7684\u884c\u4e3a\u53e0\u52a0\u5f97\u5230\u3002\u6211\u4eec\u9700\u8981\u7406\u89e3\u4e2a\u4f53\u7ec6\u80de\u4e4b\u95f4\uff08\u76f4\u63a5\u6216\u95f4\u63a5\u901a\u8fc7\u5316\u5b66\u573a\uff09\u7684\u76f8\u4e92\u4f5c\u7528\u5982\u4f55\u5bfc\u81f4\u5b8f\u89c2\u4e0a\u7684\u81ea\u7ec4\u7ec7\u6a21\u5f0f\u3002\u8fd9\u9700\u8981\u5c06\u5fae\u89c2\u7684\u968f\u673a\u8fc7\u7a0b\u4e0e\u5b8f\u89c2\u7684\u8fde\u7eed\u4ecb\u8d28\u6a21\u578b\uff08\u5982Keller-Segel\u6a21\u578b\uff09\u76f8\u7ed3\u5408\uff0c\u5e76\u63a2\u7d22\u4e2a\u4f53\u53d8\u5f02\u6027\u5bf9\u7fa4\u4f53\u52a8\u529b\u5b66\u7684\u5f71\u54cd\u3002</li> </ul> </li> </ol>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#2","title":"2. \u8fd0\u52a8\u7684\u7b80\u5316\u6a21\u578b\uff1a\u53cc\u6001\u8fc7\u7a0b","text":"<p>\u4e3a\u4e86\u4ece\u7269\u7406\u5c42\u9762\u7406\u89e3\u8d8b\u5316\u6027\u7684\u672c\u8d28\uff0c\u6211\u4eec\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u6570\u5b66\u6a21\u578b\u3002\u6211\u4eec\u5c06\u4ece\u4e00\u4e2a\u6700\u7b80\u5316\u7684\u6a21\u578b\u5165\u624b\uff0c\u5c06\u590d\u6742\u7684\u4e09\u7ef4\u8dd1\u52a8-\u7ffb\u6eda\u8fd0\u52a8\u62bd\u8c61\u4e3a\u4e00\u4e2a\u4e00\u7ef4\u7a7a\u95f4\u4e2d\u7684\u53cc\u6001\u8fc7\u7a0b\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#21","title":"2.1. \u7b80\u5316\u5230\u4e00\u7ef4\u7a7a\u95f4","text":"<p>\u6211\u4eec\u5047\u8bbe\u7ec6\u83cc\u53ea\u80fd\u5728\u4e00\u4e2a\u4e00\u7ef4\u76f4\u7ebf\u4e0a\u8fd0\u52a8\u3002\u5b83\u7684\u72b6\u6001\u4e0d\u4ec5\u7531\u5176\u4f4d\u7f6e \\(x\\) \u51b3\u5b9a\uff0c\u8fd8\u7531\u5176\u5185\u90e8\u7684\u8fd0\u52a8\u65b9\u5411\u72b6\u6001 \\(\\sigma\\) \u51b3\u5b9a\u3002 </p> <ul> <li> <p>\\(\\sigma=+1\\)\uff1a\u4ee3\u8868\u7ec6\u83cc\u6b63\u5728\u5411\u53f3\u8fd0\u52a8\uff08Right-movers\uff09\u3002</p> </li> <li> <p>\\(\\sigma=-1\\)\uff1a\u4ee3\u8868\u7ec6\u83cc\u6b63\u5728\u5411\u5de6\u8fd0\u52a8\uff08Left-movers\uff09\u3002</p> </li> </ul>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#22","title":"2.2. \u5b9a\u4e49\u72b6\u6001\u5207\u6362\u901f\u7387","text":"<p>\u7ec6\u83cc\u5728\"\u8dd1\u52a8\"\u8fc7\u7a0b\u4e2d\u65b9\u5411\u662f\u56fa\u5b9a\u7684\uff0c\u800c\"\u7ffb\u6eda\"\u5219\u5bf9\u5e94\u4e8e\u65b9\u5411\u72b6\u6001 \\(\\sigma\\) \u7684\u6539\u53d8\u3002\u6211\u4eec\u5c06\u8fd9\u79cd\u72b6\u6001\u5207\u6362\uff08\u5373\u7ffb\u6eda\uff09\u5efa\u6a21\u4e3a\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b\uff0c\u7531\u4e24\u4e2a\u901f\u7387\u53c2\u6570\u63a7\u5236\uff1a</p> <ul> <li> <p>\\(\\alpha_+(x)\\)\uff1a\u5728\u4f4d\u7f6e \\(x\\) \u5904\uff0c\u4e00\u4e2a\u5411\u53f3\u8fd0\u52a8\u7684\u7ec6\u83cc\uff08\\(\\sigma=+1\\)\uff09\u53d1\u751f\u7ffb\u6eda\u5e76\u8f6c\u4e3a\u5411\u5de6\u8fd0\u52a8\uff08\\(\\sigma=-1\\)\uff09\u7684\u901f\u7387\uff0c\u5373\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u6982\u7387\u3002</p> </li> <li> <p>\\(\\alpha_-(x)\\)\uff1a\u5728\u4f4d\u7f6e \\(x\\) \u5904\uff0c\u4e00\u4e2a\u5411\u5de6\u8fd0\u52a8\u7684\u7ec6\u83cc\uff08\\(\\sigma=-1\\)\uff09\u53d1\u751f\u7ffb\u6eda\u5e76\u8f6c\u4e3a\u5411\u53f3\u8fd0\u52a8\uff08\\(\\sigma=+1\\)\uff09\u7684\u901f\u7387\u3002</p> </li> </ul> <p>\u8fd9\u91cc\u7684\u5173\u952e\u5047\u8bbe\u662f\uff0c\u8fd9\u4e9b\u5207\u6362\u901f\u7387\u53ef\u4ee5\u4f9d\u8d56\u4e8e\u7a7a\u95f4\u4f4d\u7f6e \\(x\\)\u3002\u8fd9\u6b63\u662f\u5c06\u73af\u5883\u4fe1\u606f\uff08\u5316\u5b66\u7269\u8d28\u6d53\u5ea6\u68af\u5ea6\uff09\u7f16\u7801\u8fdb\u6a21\u578b\u7684\u5207\u5165\u70b9\u3002\u5982\u679c\u5728\u4e00\u4e2a\u533a\u57df \\(\\alpha_+(x)\\) \u548c \\(\\alpha_-(x)\\) \u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u7ec6\u83cc\u7684\u968f\u673a\u6e38\u8d70\u5c31\u4f1a\u51fa\u73b0\u504f\u5411\u6027\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#23","title":"2.3. \u65b9\u5411\u6982\u7387\u7684\u4e3b\u65b9\u7a0b","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u5f15\u5165\u4e24\u4e2a\u6838\u5fc3\u53d8\u91cf\u6765\u63cf\u8ff0\u8fd9\u4e2a\u7cfb\u7edf\uff1a</p> <ul> <li> <p>\\(p_+(x,t)\\)\uff1a\u5728\u65f6\u523b \\(t\\)\u3001\u4f4d\u7f6e \\(x\\) \u5904\uff0c\u627e\u5230\u4e00\u4e2a\u5411\u53f3\u8fd0\u52a8\u7684\u7ec6\u83cc\u7684\u6982\u7387\u5bc6\u5ea6\u3002</p> </li> <li> <p>\\(p_-(x,t)\\)\uff1a\u5728\u65f6\u523b \\(t\\)\u3001\u4f4d\u7f6e \\(x\\) \u5904\uff0c\u627e\u5230\u4e00\u4e2a\u5411\u5de6\u8fd0\u52a8\u7684\u7ec6\u83cc\u7684\u6982\u7387\u5bc6\u5ea6\u3002</p> </li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8003\u8651\u5728\u4e00\u4e2a\u5fae\u5c0f\u533a\u95f4 \\([x,x+dx]\\) \u5185\uff0c\u8fd9\u4e24\u79cd\u6982\u7387\u5bc6\u5ea6\u968f\u65f6\u95f4\u7684\u53d8\u5316\u6765\u63a8\u5bfc\u5b83\u4eec\u7684\u6f14\u5316\u65b9\u7a0b\uff0c\u5373\u4e3b\u65b9\u7a0b\uff08Master Equations\uff09\u3002</p> <p>\u5bf9\u4e8e \\(p_+(x,t)\\)\uff0c\u5176\u968f\u65f6\u95f4\u7684\u53d8\u5316\u7531\u4e09\u90e8\u5206\u8d21\u732e\uff1a</p> <ol> <li> <p>\u5e73\u6d41\u9879 (Advection): \u7531\u4e8e\u7ec6\u83cc\u4ee5\u901f\u5ea6 \\(v_0\\) \u5411\u53f3\u8fd0\u52a8\uff0c\u5355\u4f4d\u65f6\u95f4\u5185\u4ece\u5de6\u8fb9 \\(x\\) \u5904\u6d41\u5165\u533a\u95f4\u7684\u6982\u7387\u901a\u91cf\u548c\u4ece\u53f3\u8fb9 \\(x+dx\\) \u5904\u6d41\u51fa\u533a\u95f4\u7684\u6982\u7387\u901a\u91cf\u3002</p> </li> <li> <p>\u635f\u5931\u9879 (Loss): \u5728\u4f4d\u7f6e \\(x\\) \u7684\u53f3\u884c\u7ec6\u83cc\u4ee5\u901f\u7387 \\(\\alpha_+(x)\\) \u7ffb\u6eda\uff0c\u8f6c\u53d8\u4e3a\u5de6\u884c\u7ec6\u83cc\uff0c\u5bfc\u81f4 \\(p_+\\) \u7684\u51cf\u5c11\u3002</p> </li> <li> <p>\u589e\u76ca\u9879 (Gain): \u5728\u4f4d\u7f6e \\(x\\) \u7684\u5de6\u884c\u7ec6\u83cc\u4ee5\u901f\u7387 \\(\\alpha_-(x)\\) \u7ffb\u6eda\uff0c\u8f6c\u53d8\u4e3a\u53f3\u884c\u7ec6\u83cc\uff0c\u5bfc\u81f4 \\(p_+\\) \u7684\u589e\u52a0\u3002</p> </li> </ol> <p>\u7efc\u5408\u8fd9\u4e09\u9879\uff0c\u6211\u4eec\u5f97\u5230 \\(p_+\\) \u7684\u4e3b\u65b9\u7a0b\uff1a</p> \\[\\partial_t p_+(x,t) = -v_0 \\partial_x p_+(x,t) - \\alpha_+(x) p_+(x,t) + \\alpha_-(x) p_-(x,t)\\] <p>\u540c\u7406\uff0c\u5bf9\u4e8e \\(p_-(x,t)\\)\uff0c\u7ec6\u83cc\u4ee5\u901f\u5ea6 \\(-v_0\\) \u5411\u5de6\u8fd0\u52a8\uff0c\u5176\u4e3b\u65b9\u7a0b\u4e3a\uff1a</p> \\[\\partial_t p_-(x,t) = +v_0 \\partial_x p_-(x,t) - \\alpha_-(x) p_-(x,t) + \\alpha_+(x) p_+(x,t)\\] <p>\u8fd9\u4e24\u4e2a\u8026\u5408\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u6784\u6210\u4e86\u6211\u4eec\u63cf\u8ff0\u4e00\u7ef4\u8d8b\u5316\u6027\u8fd0\u52a8\u7684\u6700\u5c0f\u7406\u8bba\u6a21\u578b\u3002</p> <p>\u53cc\u6001\u6a21\u578b\u7684\u5173\u952e\u53d8\u91cf\u4e0e\u53c2\u6570\u8868</p> \u7b26\u53f7 \u540d\u79f0 \u7269\u7406\u610f\u4e49 \u5355\u4f4d \\(x,t\\) \u4f4d\u7f6e,\u65f6\u95f4 \u65f6\u7a7a\u5750\u6807 m, s \\(\\sigma\\) \u65b9\u5411\u72b6\u6001 \u7ec6\u83cc\u7684\u5185\u90e8\u72b6\u6001 (+1\u4ee3\u8868\u5411\u53f3, -1\u4ee3\u8868\u5411\u5de6) \u65e0\u91cf\u7eb2 \\(v_0\\) \u6e38\u6cf3\u901f\u5ea6 \u7ec6\u83cc\u5728\"\u8dd1\u52a8\"\u9636\u6bb5\u7684\u6052\u5b9a\u901f\u7387 m/s \\(\\alpha_+(x)\\) \u53f3\u8f6c\u5de6\u5207\u6362\u901f\u7387 \u5728\u4f4d\u7f6ex\u5904\uff0c\u4ece\u5411\u53f3\u8fd0\u52a8\u7ffb\u6eda\u5230\u5411\u5de6\u8fd0\u52a8\u7684\u5355\u4f4d\u65f6\u95f4\u6982\u7387 1/s \\(\\alpha_-(x)\\) \u5de6\u8f6c\u53f3\u5207\u6362\u901f\u7387 \u5728\u4f4d\u7f6ex\u5904\uff0c\u4ece\u5411\u5de6\u8fd0\u52a8\u7ffb\u6eda\u5230\u5411\u53f3\u8fd0\u52a8\u7684\u5355\u4f4d\u65f6\u95f4\u6982\u7387 1/s \\(p_+(x,t)\\) \u53f3\u884c\u8005\u6982\u7387\u5bc6\u5ea6 \u5728(x,t)\u5904\u627e\u5230\u4e00\u4e2a\u5411\u53f3\u8fd0\u52a8\u7ec6\u83cc\u7684\u6982\u7387 1/m \\(p_-(x,t)\\) \u5de6\u884c\u8005\u6982\u7387\u5bc6\u5ea6 \u5728(x,t)\u5904\u627e\u5230\u4e00\u4e2a\u5411\u5de6\u8fd0\u52a8\u7ec6\u83cc\u7684\u6982\u7387 1/m"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#3","title":"3. \u4ece\u5fae\u89c2\u72b6\u6001\u5230\u5b8f\u89c2\u8f93\u8fd0","text":"<p>\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u4e86\u5fae\u89c2\u65b9\u5411\u72b6\u6001\u7684\u6982\u7387\u6f14\u5316\uff0c\u4f46\u6211\u4eec\u66f4\u5173\u5fc3\u7684\u662f\u6574\u4e2a\u7ec6\u83cc\u7fa4\u4f53\u7684\u5b8f\u89c2\u884c\u4e3a\uff0c\u4f8b\u5982\u603b\u7684\u7ec6\u83cc\u5bc6\u5ea6\u5206\u5e03\u548c\u51c0\u7684\u6d41\u52a8\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4ece \\(p_+\\) \u548c \\(p_-\\) \u6784\u5efa\u5b8f\u89c2\u7684\u7269\u7406\u91cf\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#31","title":"3.1. \u5b9a\u4e49\u5b8f\u89c2\u53ef\u89c2\u6d4b\u91cf","text":"<p>\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u5b8f\u89c2\u91cf\uff1a</p> <ul> <li>\u603b\u6982\u7387\u5bc6\u5ea6 (Total Probability Density):</li> </ul> <p>$$   p(x,t) := p_+(x,t) + p_-(x,t)   $$</p> <p>\u8fd9\u4ee3\u8868\u5728\u65f6\u523b \\(t\\)\u3001\u4f4d\u7f6e \\(x\\) \u627e\u5230\u4e00\u4e2a\u7ec6\u83cc\u7684\u603b\u6982\u7387\uff0c\u65e0\u8bba\u5176\u8fd0\u52a8\u65b9\u5411\u5982\u4f55\u3002</p> <ul> <li>\u6982\u7387\u6d41 (Probability Current):</li> </ul> <p>$$   J(x,t) := v_0 [p_+(x,t) - p_-(x,t)]   $$</p> <p>\u8fd9\u4e2a\u91cf\u63cf\u8ff0\u4e86\u5728 \\(x\\) \u70b9\u5904\u6982\u7387\u7684\u51c0\u6d41\u52a8\u3002\u5982\u679c\u5411\u53f3\u8fd0\u52a8\u7684\u7ec6\u83cc\u6bd4\u5411\u5de6\u7684\u591a\uff08\\(p_+&gt;p_-\\)\uff09\uff0c\u5219\u6709\u51c0\u7684\u5411\u53f3\u6d41\u52a8\uff0c\\(J&gt;0\\)\u3002\u53cd\u4e4b\u4ea6\u7136\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#32","title":"3.2. \u63a8\u5bfc\u8fde\u7eed\u6027\u65b9\u7a0b","text":"<p>\u6709\u4e86\u8fd9\u4e24\u4e2a\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u4ee3\u6570\u64cd\u4f5c\u5c06\u4e24\u4e2a\u4e3b\u65b9\u7a0b\u7ed3\u5408\u8d77\u6765\u3002\u5c06\u63cf\u8ff0 \\(p_+\\) \u548c \\(p_-\\) \u7684\u4e24\u4e2a\u4e3b\u65b9\u7a0b\u76f8\u52a0\uff1a</p> \\[\\partial_t (p_+ + p_-) = -v_0 \\partial_x (p_+ - p_-) - (\\alpha_+ p_+ - \\alpha_- p_-) + (-\\alpha_- p_- + \\alpha_+ p_+)\\] <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0e\u7ffb\u6eda\u901f\u7387 \\(\\alpha_\\pm\\) \u76f8\u5173\u7684\u9879\u6070\u597d\u5b8c\u5168\u62b5\u6d88\u3002\u4ee3\u5165 \\(p\\) \u548c \\(J\\) \u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u7acb\u5373\u5f97\u5230\uff1a</p> \\[\\partial_t p(x,t) = -\\partial_x J(x,t)\\] <p>\u8fd9\u662f\u4e00\u4e2a\u6781\u5176\u91cd\u8981\u7684\u65b9\u7a0b\uff0c\u5373\u8fde\u7eed\u6027\u65b9\u7a0b\uff08Continuity Equation\uff09\uff0c\u5b83\u662f\u4e00\u4e2a\u666e\u9002\u7684\u5b88\u6052\u5b9a\u5f8b\u3002\u8fd9\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u63ed\u793a\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u7269\u7406\u5185\u6db5\uff1a\u7ffb\u6eda\uff08\u72b6\u6001\u5207\u6362\uff09\u662f\u4e00\u4e2a\u5185\u90e8\u8fc7\u7a0b\u3002\u5b83\u53ea\u5728\u53f3\u884c\u548c\u5de6\u884c\u8fd9\u4e24\u4e2a\u7fa4\u4f53\u4e4b\u95f4\u91cd\u65b0\u5206\u914d\u7c92\u5b50\uff0c\u4f46\u5e76\u4e0d\u4f1a\u5728\u7a7a\u95f4\u4e2d\u51ed\u7a7a\u521b\u9020\u6216\u6d88\u706d\u7c92\u5b50\u3002\u4e00\u4e2a\u5730\u65b9\u7684\u603b\u7c92\u5b50\u6570\uff08\u6216\u603b\u6982\u7387\uff09\u53d1\u751f\u53d8\u5316\uff0c\u552f\u4e00\u7684\u539f\u56e0\u53ea\u80fd\u662f\u7c92\u5b50\u4ece\u90bb\u8fd1\u533a\u57df\u6e38\u52a8\u8fdb\u6765\u6216\u51fa\u53bb\u3002\u6570\u5b66\u4e0a\u7ffb\u6eda\u9879\u7684\u5b8c\u7f8e\u62b5\u6d88\uff0c\u6070\u6070\u53cd\u6620\u4e86\u7c92\u5b50\u6570\uff08\u6982\u7387\uff09\u7684\u5c40\u57df\u5b88\u6052\u8fd9\u4e00\u57fa\u672c\u7269\u7406\u539f\u7406\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#33","title":"3.3. \u6982\u7387\u6d41\u7684\u52a8\u529b\u5b66","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u4e0d\u5c06\u4e24\u4e2a\u4e3b\u65b9\u7a0b\u76f8\u52a0\uff0c\u800c\u662f\u7528\u7b2c\u4e00\u4e2a\u65b9\u7a0b\u51cf\u53bb\u7b2c\u4e8c\u4e2a\u65b9\u7a0b\uff0c\u4ee5\u8003\u5bdf\u6982\u7387\u5dee \\((p_+-p_-)\\) \u7684\u52a8\u529b\u5b66\uff0c\u8fd9\u6b63\u6bd4\u4e8e\u6982\u7387\u6d41 \\(J\\)\u3002</p> \\[\\partial_t (p_+ - p_-) = -v_0 \\partial_x (p_+ + p_-) - (\\alpha_+ p_+ + \\alpha_- p_-) + (\\alpha_- p_- + \\alpha_+ p_+)\\] <p>\u4e3a\u4e86\u7528\u5b8f\u89c2\u91cf \\(p\\) \u548c \\(J\\) \u6765\u8868\u793a\u8fd9\u4e2a\u65b9\u7a0b\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u5173\u7cfb\u5f0f\uff1a</p> \\[p_\\pm = \\frac{1}{2}(p \\pm \\frac{J}{v_0})\\] <p>\u5c06\u6b64\u4ee3\u5165\u5e76\u6574\u7406\uff0c\u53ef\u4ee5\u5f97\u5230\u6982\u7387\u6d41 \\(J\\) \u81ea\u8eab\u7684\u6f14\u5316\u65b9\u7a0b\uff1a</p> \\[\\partial_t J(x,t) = -v_0^2 \\partial_x p(x,t) - (\\alpha_+ + \\alpha_-)J(x,t) + v_0(\\alpha_- - \\alpha_+)p(x,t)\\] <p></p> <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7ed3\u6784\u975e\u5e38\u4e30\u5bcc\uff0c\u6bcf\u4e00\u9879\u90fd\u6709\u660e\u786e\u7684\u7269\u7406\u610f\u4e49\uff1a</p> <ul> <li> <p>\\(-v_0^2 \\partial_x p\\)\uff1a\u6269\u6563\u9879\u3002\u5b83\u8868\u660e\u603b\u5bc6\u5ea6\u7684\u68af\u5ea6\uff08\\(\\partial_x p\\)\uff09\u4f1a\u50cf\u538b\u529b\u4e00\u6837\u9a71\u52a8\u4ea7\u751f\u6982\u7387\u6d41\u3002</p> </li> <li> <p>\\(-(\\alpha_+ + \\alpha_-)J\\)\uff1a\u6301\u7eed\u6027\u7684\u963b\u5c3c\u9879\u3002\u4efb\u4f55\u5b58\u5728\u7684\u51c0\u6982\u7387\u6d41 \\(J\\) \u90fd\u4f1a\u4ee5 \\(\\alpha_+ + \\alpha_-\\) \u7684\u603b\u901f\u7387\u8870\u51cf\u3002\u8fd9\u662f\u56e0\u4e3a\u7ffb\u6eda\u8fc7\u7a0b\u4f1a\u968f\u673a\u5316\u7ec6\u83cc\u7684\u8fd0\u52a8\u65b9\u5411\uff0c\u4ece\u800c\u7834\u574f\u65b9\u5411\u7684\u6301\u7eed\u6027\uff08persistence\uff09\uff0c\u4f7f\u51c0\u7684\u6d41\u52a8\u8d8b\u4e8e\u96f6\u3002</p> </li> <li> <p>\\(v_0(\\alpha_- - \\alpha_+)p\\)\uff1a\u6f02\u79fb\u9879\u3002\u8fd9\u662f\u8d8b\u5316\u6027\u5f97\u4ee5\u5b9e\u73b0\u7684\u6838\u5fc3\u9879\u3002\u5982\u679c\u5207\u6362\u901f\u7387\u5b58\u5728\u4e0d\u5bf9\u79f0\u6027\uff08\\(\\alpha_- \\neq \\alpha_+\\)\uff09\uff0c\u5373\u4f7f\u5728\u6ca1\u6709\u5bc6\u5ea6\u68af\u5ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6b63\u6bd4\u4e8e\u603b\u5bc6\u5ea6 \\(p\\) \u7684\u51c0\u6f02\u79fb\u6d41\u3002\u8fd9\u6b63\u662f\u5b9a\u5411\u8fd0\u52a8\u7684\u6765\u6e90\u3002</p> </li> </ul>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#4-","title":"4. \u7c97\u7c92\u5316\u89c6\u89d2\uff1a\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b","text":"<p>\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u63cf\u8ff0\u5b8f\u89c2\u91cf \\(p\\) \u548c \\(J\\) \u6f14\u5316\u7684\u4e24\u4e2a\u8026\u5408\u65b9\u7a0b\u3002\u7136\u800c\uff0c\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b80\u5316\u6a21\u578b\uff0c\u5f97\u5230\u4e00\u4e2a\u53ea\u5305\u542b\u603b\u5bc6\u5ea6 \\(p\\) \u7684\u6709\u6548\u65b9\u7a0b\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#41","title":"4.1. \u7edd\u70ed\u8fd1\u4f3c\uff1a\u65f6\u95f4\u5c3a\u5ea6\u7684\u5206\u79bb","text":"<p>\u8ba9\u6211\u4eec\u8003\u5bdf\u7cfb\u7edf\u4e2d\u6d89\u53ca\u7684\u65f6\u95f4\u5c3a\u5ea6\uff1a</p> <ul> <li> <p>\u8dd1\u52a8\u65f6\u95f4 (Run time): \\(\\tau_{run} \\sim 1/\\alpha \\sim 1\\) s\u3002\u8fd9\u662f\u5fae\u89c2\u5c42\u9762\u65b9\u5411\u53d1\u751f\u6539\u53d8\u7684\u7279\u5f81\u65f6\u95f4\uff0c\u7531\u7ffb\u6eda\u901f\u7387\u51b3\u5b9a\u3002</p> </li> <li> <p>\u6269\u6563\u65f6\u95f4 (Diffusion time): \\(\\tau_D \\sim L^2/D_{eff}\\)\u3002\u8fd9\u662f\u5b8f\u89c2\u5bc6\u5ea6\u5206\u5e03 \\(p(x,t)\\) \u53d1\u751f\u663e\u8457\u53d8\u5316\u7684\u7279\u5f81\u65f6\u95f4\u3002\u5bf9\u4e8e\u4e00\u4e2a \\(L\\sim 100\\mu m\\) \u7684\u5c3a\u5ea6\uff0c\u8fd9\u4e2a\u65f6\u95f4\u5927\u7ea6\u662f 25 s\u3002</p> </li> </ul> <p>\u6211\u4eec\u53d1\u73b0 \\(\\tau_D \\gg \\tau_{run}\\)\u3002\u8fd9\u4e2a\u65f6\u95f4\u5c3a\u5ea6\u4e0a\u7684\u663e\u8457\u5206\u79bb\u662f\u8fdb\u884c\u8fd1\u4f3c\u7684\u5173\u952e\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u6982\u7387\u6d41 \\(J\\) \u7684\u52a8\u529b\u5b66\uff08\u7531\u5feb\u901f\u7684\u7ffb\u6eda\u8fc7\u7a0b\u4e3b\u5bfc\uff09\u8981\u6bd4\u603b\u5bc6\u5ea6 \\(p\\) \u7684\u52a8\u529b\u5b66\u5feb\u5f97\u591a\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5bf9\u4e8e\u7f13\u6162\u6f14\u5316\u7684 \\(p\\) \u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a \\(J\\) \u603b\u662f\u80fd\u591f\u77ac\u95f4\u8c03\u6574\u5230\u4e0e\u5f53\u524d \\(p\\) \u53ca\u5176\u68af\u5ea6\u76f8\u9002\u5e94\u7684\u51c6\u7a33\u6001\u3002\u8fd9\u5728\u7269\u7406\u5b66\u4e2d\u88ab\u79f0\u4e3a\"\u7edd\u70ed\u6d88\u9664\"\u6216\"\u5974\u5f79\u539f\u7406\" (slave principle)\uff1a\u5feb\u901f\u53d8\u5316\u7684\u53d8\u91cf\uff08\\(J\\)\uff09\u88ab\u6162\u901f\u53d8\u5316\u7684\u53d8\u91cf\uff08\\(p\\)\uff09\u6240\"\u5974\u5f79\"\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u51fa\u4e00\u4e2a\u5f3a\u6709\u529b\u7684\u8fd1\u4f3c\uff1a\\(\\partial_t J \\approx 0\\)\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#42-","title":"4.2. \u63a8\u5bfc\u6709\u6548\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b","text":"<p>\u5728\u6982\u7387\u6d41\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u4e2d\u5e94\u7528\u7edd\u70ed\u8fd1\u4f3c \\(\\partial_t J \\approx 0\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u89e3\u51fa\u51c6\u7a33\u6001\u4e0b\u7684\u6709\u6548\u6982\u7387\u6d41 \\(J_{eff}\\)\uff1a</p> \\[J_{eff}(x,t) = -\\frac{v_0^2}{\\alpha_+ + \\alpha_-} \\partial_x p + v_0 \\frac{\\alpha_- - \\alpha_+}{\\alpha_+ + \\alpha_-} p\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u6e05\u6670\u5730\u5c55\u793a\u4e86\u6709\u6548\u6982\u7387\u6d41\u7531\u4e24\u90e8\u5206\u6784\u6210\uff1a\u4e00\u90e8\u5206\u7531\u5bc6\u5ea6\u68af\u5ea6\u9a71\u52a8\uff08\u6269\u6563\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u7531\u5207\u6362\u901f\u7387\u4e0d\u5bf9\u79f0\u6027\u9a71\u52a8\uff08\u6f02\u79fb\uff09\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a \\(J_{eff}\\) \u7684\u8868\u8fbe\u5f0f\u4ee3\u56de\u5230\u6211\u4eec\u4e4b\u524d\u63a8\u5bfc\u7684\u3001\u7cbe\u786e\u6210\u7acb\u7684\u8fde\u7eed\u6027\u65b9\u7a0b \\(\\partial_t p = -\\partial_x J\\) \u4e2d\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u53ea\u5305\u542b\u603b\u5bc6\u5ea6 \\(p\\) \u7684\u5c01\u95ed\u65b9\u7a0b\uff1a</p> \\[\\partial_t p = \\partial_x \\left[ \\frac{v_0^2}{\\alpha_+ + \\alpha_-} \\partial_x p - v_0 \\frac{\\alpha_- - \\alpha_+}{\\alpha_+ + \\alpha_-} p \\right]\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u662f\u63cf\u8ff0\u7c92\u5b50\u5728\u6f02\u79fb\u548c\u6269\u6563\u5171\u540c\u4f5c\u7528\u4e0b\u6f14\u5316\u7684\u6807\u51c6\u5f62\u5f0f\uff0c\u88ab\u79f0\u4e3a\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff08Fokker-Planck Equation, FPE\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5199\u6210\u66f4\u7d27\u51d1\u7684\u5f62\u5f0f\uff1a</p> \\[\\partial_t p(x,t) = \\partial_x \\left[ D_{eff}(x) \\partial_x p - v_{eff}(x) p \\right]\\] <p>\u5176\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e24\u4e2a\u4f9d\u8d56\u4e8e\u5c40\u57df\u7ffb\u6eda\u901f\u7387\u7684\u6709\u6548\u8f93\u8fd0\u7cfb\u6570\uff1a</p> <ul> <li>\u6709\u6548\u6269\u6563\u7cfb\u6570 (Effective Diffusion Coefficient):</li> </ul> <p>$$   D_{eff}(x) = \\frac{v_0^2}{\\alpha_+(x) + \\alpha_-(x)}   $$</p> <ul> <li>\u6709\u6548\u6f02\u79fb\u901f\u5ea6 (Effective Drift Velocity):</li> </ul> <p>$$   v_{eff}(x) = v_0 \\frac{\\alpha_+(x) - \\alpha_-(x)}{\\alpha_+(x) + \\alpha_-(x)}   $$</p> <p>\u8fd9\u4e2a\u7ed3\u679c\u610f\u4e49\u91cd\u5927\uff1a\u6211\u4eec\u4ece\u4e00\u4e2a\u63cf\u8ff0\u5fae\u89c2\u72b6\u6001\u5207\u6362\u7684\u590d\u6742\u6a21\u578b\u51fa\u53d1\uff0c\u901a\u8fc7\u4e00\u4e2a\u5408\u7406\u7684\u7269\u7406\u8fd1\u4f3c\uff08\u65f6\u95f4\u5c3a\u5ea6\u5206\u79bb\uff09\uff0c\u6210\u529f\u5730\u63a8\u5bfc\u51fa\u4e86\u4e00\u4e2a\u63cf\u8ff0\u5b8f\u89c2\u7fa4\u4f53\u884c\u4e3a\u7684\u3001\u5f62\u5f0f\u66f4\u7b80\u6d01\u7684\u8fde\u7eed\u4ecb\u8d28\u6a21\u578b\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#43-python-i-","title":"4.3. Python\u6a21\u62df I\uff1a\u6709\u504f\u7684\u8dd1\u52a8-\u7ffb\u6eda\u6a21\u578b","text":"<p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u673a\u6a21\u62df\u6765\u9a8c\u8bc1\u5fae\u89c2\u7684\u8dd1\u52a8-\u7ffb\u6eda\u89c4\u5219\u786e\u5b9e\u80fd\u591f\u4ea7\u751f\u5b8f\u89c2\u7684\u6f02\u79fb\u548c\u6269\u6563\u3002\u4e0b\u9762\u7684Python\u4ee3\u7801\u6a21\u62df\u4e86\u4e00\u7ec4\uff08\u7cfb\u7efc\uff09\u4e00\u7ef4\u7c92\u5b50\uff0c\u5b83\u4eec\u7684\u7ffb\u6eda\u6982\u7387\u4f9d\u8d56\u4e8e\u5176\u6240\u5904\u7684\u4f4d\u7f6e\uff0c\u4ece\u800c\u6a21\u62df\u4e86\u5728\u4e00\u4e2a\u6709\u504f\u73af\u5883\u4e2d\u7684\u8fd0\u52a8\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef run_tumble_1d_simulation(num_particles=5000, num_steps=4000, v0=20.0, dt=0.01, L=200.0):\n    \"\"\"\n    Simulate biased run-and-tumble motion in one-dimensional space.\n\n    Parameters:\n    num_particles (int): Number of particles to simulate.\n    num_steps (int): Total number of simulation steps.\n    v0 (float): Run speed (um/s).\n    dt (float): Time step (s).\n    L (float): Length of spatial domain (-L/2 to L/2).\n    \"\"\"\n    # Initialize particle positions and directions\n    # Positions start from a uniform distribution between -1 and 1 to observe aggregation toward center\n    positions = np.random.uniform(-1, 1, num_particles)\n    # Initial directions randomly +1 or -1\n    directions = np.random.choice([1, -1], num_particles)\n\n    # Store history of positions for calculating mean and variance\n    position_history = np.zeros((num_steps, num_particles))\n\n    # Define position-dependent switching rates\n    def alpha_plus(x):\n        # When x&gt;0, particles moving right are more likely to tumble (alpha_+ increases)\n        # When x&lt;0, particles moving right are less likely to tumble (alpha_+ decreases)\n        # This creates a drift toward x=0\n        return 1.0 * (1 + 2.0 * np.tanh(x / (L/4))) # Base rate 1.0/s\n\n    def alpha_minus(x):\n        # When x&lt;0, particles moving left are more likely to tumble (alpha_- increases)\n        # When x&gt;0, particles moving left are less likely to tumble (alpha_- decreases)\n        # This also creates a drift toward x=0\n        return 1.0 * (1 - 2.0 * np.tanh(x / (L/4))) # Base rate 1.0/s\n\n    for step in range(num_steps):\n        position_history[step] = positions\n\n        # Calculate tumbling probability at current positions\n        # P(tumble) = alpha * dt\n        prob_tumble_plus = alpha_plus(positions) * dt\n        prob_tumble_minus = alpha_minus(positions) * dt\n\n        # Generate random numbers to determine if tumbling occurs\n        rand_nums = np.random.rand(num_particles)\n\n        # Update directions based on current direction and tumbling probability\n        # For particles moving right (directions == 1)\n        tumble_indices_plus = (directions == 1) &amp; (rand_nums &lt; prob_tumble_plus)\n        directions[tumble_indices_plus] = -1\n        # For particles moving left (directions == -1)\n        tumble_indices_minus = (directions == -1) &amp; (rand_nums &lt; prob_tumble_minus)\n        directions[tumble_indices_minus] = 1\n\n        # Update positions\n        positions += directions * v0 * dt\n\n        # Apply reflecting boundary conditions\n        positions[positions &gt; L/2] = L - positions[positions &gt; L/2]\n        directions[positions &gt; L/2] *= -1\n        positions[positions &lt; -L/2] = -L - positions[positions &lt; -L/2]\n        directions[positions &lt; -L/2] *= -1\n\n    return position_history\n\n# --- Run simulation and visualize ---\nhistory = run_tumble_1d_simulation()\nnum_steps, num_particles = history.shape\ntime_points = np.arange(num_steps) * 0.01\n\n# Calculate evolution of mean and variance over time\nmean_pos = np.mean(history, axis=1)\nvar_pos = np.var(history, axis=1)\n\n# --- Plot three separate figures and save to local files ---\n\n# 1. Plot particle trajectories\nplt.style.use('seaborn-v0_8-whitegrid')\nfig, ax = plt.subplots(figsize=(10, 6))\n# Plot more particle trajectories to make the figure more visually appealing\nfor i in range(20):\n    ax.plot(time_points, history[:, i], lw=0.8, alpha=0.7)\nax.set_title('Single Particle Trajectories')\nax.set_xlabel('Time (s)')\nax.set_ylabel('Position (\u03bcm)')\nplt.tight_layout()\nplt.savefig('particle_trajectories.png', dpi=300, bbox_inches='tight')\nplt.close()\n\n# 2. Plot particle distribution histograms at different times\nfig, ax = plt.subplots(figsize=(10, 6))\ntime_indices_to_plot = [int(num_steps/10), int(num_steps/3), int(2*num_steps/3), num_steps-1]\nfor t_idx in time_indices_to_plot:\n    time = t_idx * 0.01\n    ax.hist(history[t_idx, :], bins=50, density=True, alpha=0.6, label=f't = {time:.1f} s')\nax.set_title('Distribution of Particles')\nax.set_xlabel('Position (\u03bcm)')\nax.set_ylabel('Probability Density')\nax.legend()\nplt.tight_layout()\nplt.savefig('particle_distributions.png', dpi=300, bbox_inches='tight')\nplt.close()\n\n# 3. Plot evolution of mean and variance over time\nfig, ax = plt.subplots(figsize=(10, 6))\nax2 = ax.twinx()\np1, = ax.plot(time_points, mean_pos, 'r-', label='Mean Position')\np2, = ax2.plot(time_points, var_pos, 'b-', label='Variance')\nax.set_title('Evolution of Mean and Variance')\nax.set_xlabel('Time (s)')\nax.set_ylabel('Mean Position (\u03bcm)', color='r')\nax2.set_ylabel('Variance (\u03bcm^2)', color='b')\nax.tick_params(axis='y', labelcolor='r')\nax2.tick_params(axis='y', labelcolor='b')\nax.legend([p1, p2], ['Mean Position', 'Variance'], loc='center right')\nplt.tight_layout()\nplt.savefig('mean_variance_evolution.png', dpi=300, bbox_inches='tight')\nplt.close()\n</code></pre> <p></p> <ol> <li>\u8f68\u8ff9\u56fe\u663e\u793a\uff0c\u5355\u4e2a\u7c92\u5b50\u7684\u8fd0\u52a8\u662f\u968f\u673a\u7684\uff0c\u4f46\u603b\u4f53\u4e0a\u88ab\"\u62c9\"\u5411\u4e2d\u5fc3\u533a\u57df\uff080\uff09\uff0c\u8868\u73b0\u51fa\u6709\u504f\u7684\u7279\u6027\u3002</li> </ol> <p></p> <ol> <li>\u5206\u5e03\u76f4\u65b9\u56fe\u663e\u793a\uff0c\u7c92\u5b50\u7cfb\u7efc\u4ece\u521d\u59cb\u7684\u5747\u5300\u5206\u5e03\u9010\u6e10\u5411\u4e2d\u5fc3 \\(x=0\\) \u805a\u96c6\uff0c\u5f62\u6210\u4e00\u4e2a\u7a33\u5b9a\u7684\u5206\u5e03\u3002\u8fd9\u8bc1\u5b9e\u4e86\u5b8f\u89c2\u6f02\u79fb\u7684\u5b58\u5728\u3002</li> </ol> <p></p> <ol> <li>\u5747\u503c\u548c\u65b9\u5dee\u56fe\u5b9a\u91cf\u5730\u5c55\u793a\u4e86\u7cfb\u7efc\u7684\u884c\u4e3a\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7531\u4e8e\u6f02\u79fb\u6307\u5411\u4e2d\u5fc3\uff0c\u7cfb\u7efc\u7684\u5e73\u5747\u4f4d\u7f6e\u4f1a\u8d8b\u4e8e0\u3002\u65b9\u5dee\u5219\u4f1a\u5148\u589e\u5927\u540e\u8fbe\u5230\u4e00\u4e2a\u7a33\u5b9a\u503c\uff0c\u53cd\u6620\u4e86\u6f02\u79fb\u548c\u6269\u6563\u4e4b\u95f4\u7684\u5e73\u8861\u3002\u5982\u679c\u6f02\u79fb\u573a\u662f\u6052\u5b9a\u7684\uff08\u4f8b\u5982\uff0c\\(\\alpha_+\\) \u548c \\(\\alpha_-\\) \u662f\u5e38\u6570\u4e14\u4e0d\u7b49\uff09\uff0c\u6211\u4eec\u4f1a\u89c2\u5bdf\u5230\u5747\u503c\u968f\u65f6\u95f4\u7ebf\u6027\u53d8\u5316\uff0c\u65b9\u5dee\u4e5f\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u957f\uff0c\u8fd9\u4e0eFPE\u7684\u9884\u6d4b\u5b8c\u5168\u4e00\u81f4\u3002</li> </ol>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#5","title":"5. \u95ed\u5408\u56de\u8def\uff1a\u611f\u77e5\u7684\u751f\u7269\u5b66\u57fa\u7840","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u4e86\u4ece\u5fae\u89c2\u5207\u6362\u901f\u7387 \\(\\alpha_\\pm(x)\\) \u5230\u5b8f\u89c2\u6f02\u79fb\u901f\u5ea6 \\(v_{eff}(x)\\) \u7684\u6570\u5b66\u8054\u7cfb\u3002\u4f46\u8fd8\u6709\u4e00\u4e2a\u5173\u952e\u95ee\u9898\u6ca1\u6709\u56de\u7b54\uff1a\u7ec6\u83cc\u662f\u5982\u4f55\u901a\u8fc7\u5176\u751f\u7269\u5316\u5b66\u7f51\u7edc\uff0c\u5c06\u5bf9\u5916\u90e8\u5316\u5b66\u573a \\(c(x)\\) \u7684\u611f\u77e5\uff0c\u8f6c\u5316\u4e3a\u5bf9\u7a7a\u95f4\u4f9d\u8d56\u7684\u5207\u6362\u901f\u7387 \\(\\alpha_\\pm(x)\\) \u7684\u8c03\u63a7\u7684\uff1f</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#51","title":"5.1. \u65f6\u95f4\u611f\u77e5\u673a\u5236","text":"<p>\u4e00\u4e2a\u5c3a\u5bf8\u4ec5\u4e3a\u51e0\u5fae\u7c73\u7684\u7ec6\u83cc\uff0c\u65e0\u6cd5\u76f4\u63a5\u6d4b\u91cf\u5176\u8eab\u4f53\u4e24\u7aef\u7684\u5fae\u5c0f\u6d53\u5ea6\u5dee\u6765\u5224\u65ad\u7a7a\u95f4\u68af\u5ea6 \\(\\partial_x c\\)\u3002\u5b83\u91c7\u7528\u4e86\u4e00\u79cd\u66f4\u4e3a\u5de7\u5999\u7684\u7b56\u7565\uff1a\u65f6\u95f4\u611f\u77e5\uff08Temporal Sensing\uff09\u3002\u5f53\u7ec6\u83cc\u5728\u7a7a\u95f4\u4e2d\u6e38\u52a8\u65f6\uff0c\u5b83\u4f1a\u6301\u7eed\u76d1\u6d4b\u5176\u5468\u56f4\u7684\u5316\u5b66\u7269\u8d28\u6d53\u5ea6\u3002\u5b83\u5b9e\u9645\u6d4b\u91cf\u7684\u662f\u6d53\u5ea6\u968f\u65f6\u95f4\u7684\u53d8\u5316\u7387 \\(\\frac{dc}{dt}\\)\u3002\u5229\u7528\u94fe\u5f0f\u6cd5\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u65f6\u95f4\u5bfc\u6570\u4e0e\u7a7a\u95f4\u68af\u5ea6\u8054\u7cfb\u8d77\u6765\uff1a</p> \\[ \\frac{dc}{dt} = \\frac{\\partial c}{\\partial t} + \\frac{\\partial c}{\\partial x} \\frac{dx}{dt} \\] <p>\u5047\u8bbe\u5316\u5b66\u573a \\(c(x)\\) \u662f\u9759\u6001\u7684\uff08\\(\\frac{\\partial c}{\\partial t} = 0\\)\uff09\uff0c\u5e76\u4e14\u7ec6\u83cc\u4ee5\u901f\u5ea6 \\(v_0\\sigma(t)\\) \u8fd0\u52a8\uff0c\u90a3\u4e48\u5b83\u6240\u7ecf\u5386\u7684\u6d53\u5ea6\u53d8\u5316\u7387\u4e3a\uff1a</p> \\[ \\frac{dc}{dt} = v_0 \\sigma(t) \\partial_x c \\] <p>\u6b63\u662f\u8fd9\u4e2a\u65f6\u95f4\u5bfc\u6570 \\(\\frac{dc}{dt}\\) \u4f5c\u4e3a\u8f93\u5165\u4fe1\u53f7\uff0c\u88ab\u7b2c\u4e00\u8282\u4e2d\u63cf\u8ff0\u7684\u5316\u5b66\u611f\u5e94\u7cfb\u7edf\u6240\u5904\u7406\u3002\u5982\u679c\u7ec6\u83cc\u662f\u5411\u7740\u5f15\u8bf1\u5242\u6d53\u5ea6\u589e\u52a0\u7684\u65b9\u5411\u6e38\u52a8\uff08\u4f8b\u5982\uff0c\\(\\sigma=+1\\) \u4e14 \\(\\partial_x c &gt; 0\\)\uff09\uff0c\u90a3\u4e48 \\(\\frac{dc}{dt} &gt; 0\\)\u3002\u8fd9\u4e2a\u6b63\u4fe1\u53f7\u4f1a\u901a\u8fc7\u4fe1\u53f7\u901a\u8def\u6291\u5236CheA\u6d3b\u6027\uff0c\u964d\u4f4eCheY-P\u6c34\u5e73\uff0c\u4ece\u800c\u51cf\u5c11\u7ffb\u6eda\u6982\u7387\uff0c\u5ef6\u957f\u5f53\u524d\u7684\u201c\u8dd1\u52a8\u201d\u3002\u53cd\u4e4b\uff0c\u5982\u679c \\(\\frac{dc}{dt} &lt; 0\\)\uff0c\u7ffb\u6eda\u6982\u7387\u5c31\u4f1a\u589e\u52a0\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#52","title":"5.2. \u5207\u6362\u901f\u7387\u7684\u5efa\u6a21","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u751f\u7269\u5b66\u673a\u5236\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u54cd\u5e94\u6a21\u578b\u6765\u63cf\u8ff0\u3002\u5047\u8bbe\u7ffb\u6eda\u901f\u7387\u662f\u5bf9\u6240\u611f\u77e5\u5230\u7684\u6d53\u5ea6\u53d8\u5316\u7387 \\(\\frac{dc}{dt}\\) \u7684\u7ebf\u6027\u54cd\u5e94\uff0c\u56f4\u7ed5\u4e00\u4e2a\u57fa\u7840\u901f\u7387 \\(\\alpha_0\\) \u6ce2\u52a8\uff1a</p> \\[ \\alpha(\\text{\u611f\u77e5\u5230\u7684\u53d8\u5316}) = \\alpha_0(1 - \\chi' \\frac{dc}{dt}) \\] <p>\u5176\u4e2d \\(\\chi'\\) \u662f\u4e00\u4e2a\u8861\u91cf\u8d8b\u5316\u6027\u654f\u611f\u5ea6\u7684\u7cfb\u6570\u3002\u5bf9\u4e8e\u5411\u53f3\u8fd0\u52a8\u7684\u7c92\u5b50\uff08\\(\\sigma=+1\\)\uff09\uff0c\u5b83\u611f\u77e5\u7684\u53d8\u5316\u7387\u662f \\(v_0\\partial_x c\\)\uff1b\u5bf9\u4e8e\u5411\u5de6\u8fd0\u52a8\u7684\u7c92\u5b50\uff08\\(\\sigma=-1\\)\uff09\uff0c\u611f\u77e5\u5230\u7684\u53d8\u5316\u7387\u662f \\(-v_0\\partial_x c\\)\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5bf9 \\(\\alpha_+\\) \u548c \\(\\alpha_-\\) \u7684\u5177\u4f53\u8868\u8fbe\u5f0f\uff1a</p> \\[ \\\\alpha_+(x) = \\alpha_0(1 - \\chi v_0 \\partial_x c)\\r\\n\\\\alpha_-(x) = \\alpha_0(1 + \\chi v_0 \\partial_x c) \\] <p>\u8fd9\u91cc\u6211\u4eec\u5c06 \\(\\chi'\\alpha_0\\) \u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684\u8d8b\u5316\u6027\u7cfb\u6570 \\(\\chi\\)\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u8868\u8fbe\u5f0f\u4ee3\u5165\u6211\u4eec\u4e4b\u524d\u63a8\u5bfc\u51fa\u7684\u6709\u6548\u6f02\u79fb\u901f\u5ea6 \\(v_{eff}\\) \u548c\u6709\u6548\u6269\u6563\u7cfb\u6570 \\(D_{eff}\\) \u7684\u516c\u5f0f\u4e2d\uff0c\u4ece\u800c\u5c06\u8f93\u8fd0\u7cfb\u6570\u4e0e\u5316\u5b66\u573a\u68af\u5ea6\u76f4\u63a5\u8054\u7cfb\u8d77\u6765\u3002</p> <p>\u6709\u6548\u6f02\u79fb\u901f\u5ea6\u7684\u63a8\u5bfc\uff1a</p> \\[ v_{eff} = v_0 \\frac{\\alpha_+(x) - \\alpha_-(x)}{\\alpha_+(x) + \\alpha_-(x)} = v_0 \\frac{\\alpha_0(1 - \\chi v_0 \\partial_x c) - \\alpha_0(1 + \\chi v_0 \\partial_x c)}{\\alpha_0(1 - \\chi v_0 \\partial_x c) + \\alpha_0(1 + \\chi v_0 \\partial_x c)} \\] \\[ v_{eff} = v_0 \\frac{-2 \\chi v_0 \\partial_x c}{2 \\alpha_0 (1 - (\\chi v_0 \\partial_x c)^2)} \\approx -\\frac{\\chi v_0^2}{\\alpha_0} \\partial_x c \\] <p>\u5728\u68af\u5ea6\u8f83\u7f13\uff08\\(\\chi v_0 \\partial_x c \\ll 1\\)\uff09\u7684\u5e38\u89c1\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u6838\u5fc3\u7ed3\u8bba\uff1a\u6709\u6548\u6f02\u79fb\u901f\u5ea6\u6b63\u6bd4\u4e8e\u5316\u5b66\u5f15\u8bf1\u5242\u6d53\u5ea6\u7684\u8d1f\u68af\u5ea6\u3002\u8fd9\u610f\u5473\u7740\u7ec6\u83cc\u7fa4\u4f53\u4f1a\u671d\u7740\u5f15\u8bf1\u5242\u6d53\u5ea6\u589e\u52a0\u7684\u65b9\u5411\u6f02\u79fb\uff08\u5982\u679c \\(\\chi &gt; 0\\)\uff09\u3002</p> <p>\u6709\u6548\u6269\u6563\u7cfb\u6570\u7684\u63a8\u5bfc\uff1a</p> \\[ D_{eff} = \\frac{v_0^2}{\\alpha_+(x) + \\alpha_-(x)} = \\frac{v_0^2}{2 \\alpha_0 (1 - (\\chi v_0 \\partial_x c)^2)} \\approx \\frac{v_0^2}{2\\alpha_0} \\] <p>\u5728\u540c\u6837\u7684\u7f13\u68af\u5ea6\u8fd1\u4f3c\u4e0b\uff0c\u6709\u6548\u6269\u6563\u7cfb\u6570\u8fd1\u4f3c\u4e3a\u4e00\u4e2a\u5e38\u6570\u3002</p> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6574\u5730\u6784\u5efa\u4e86\u4ece\u5916\u90e8\u5316\u5b66\u573a\u5230\u7ec6\u83cc\u7fa4\u4f53\u5b8f\u89c2\u8fd0\u52a8\u7684\u7406\u8bba\u94fe\u6761\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#6-keller-segel","title":"6. \u96c6\u4f53\u52a8\u529b\u5b66\uff1aKeller-Segel\u6a21\u578b","text":"<p>\u524d\u9762\u7684\u8ba8\u8bba\u90fd\u5047\u8bbe\u5316\u5b66\u573a \\(c(x)\\) \u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u3001\u7531\u5916\u90e8\u73af\u5883\u51b3\u5b9a\u7684\u80cc\u666f\u573a\u3002\u7136\u800c\uff0c\u5728\u8bb8\u591a\u751f\u7269\u573a\u666f\u4e2d\uff0c\u751f\u7269\u4f53\u81ea\u8eab\u4f1a\u901a\u8fc7\u4ee3\u8c22\u6d3b\u52a8\uff08\u4f8b\u5982\u6d88\u8017\u8425\u517b\u7269\u6216\u5206\u6ccc\u4fe1\u53f7\u5206\u5b50\uff09\u6765\u6539\u53d8\u5176\u6240\u5904\u7684\u5316\u5b66\u73af\u5883\u3002\u8fd9\u5c31\u5f15\u5165\u4e86\u4e00\u4e2a\u5173\u952e\u7684\u53cd\u9988\u56de\u8def\uff1a\u7ec6\u83cc\u7684\u8fd0\u52a8\u54cd\u5e94\u4e8e\u5316\u5b66\u68af\u5ea6\uff0c\u800c\u5b83\u4eec\u7684\u805a\u96c6\u548c\u4ee3\u8c22\u6d3b\u52a8\u53c8\u53cd\u8fc7\u6765\u6539\u53d8\u4e86\u5316\u5b66\u68af\u5ea6\u3002\u8fd9\u79cd\u7ec6\u80de\u4e0e\u73af\u5883\u7684\u52a8\u6001\u8026\u5408\u662f\u5bfc\u81f4\u590d\u6742\u7684\u96c6\u4f53\u884c\u4e3a\u548c\u6a21\u5f0f\u5f62\u6210\uff08pattern formation\uff09\u7684\u6839\u6e90\u3002</p> <p>Keller-Segel\u6a21\u578b\u7531Evelyn F. Keller\u548cLee A. Segel\u4e8e1970\u5e74\u4ee3\u521d\u5171\u540c\u63d0\u51fa\uff0c\u6700\u521d\u65e8\u5728\u901a\u8fc7\u4e00\u4e2a\u8026\u5408\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u7ec4\u6765\u63cf\u8ff0\u9ecf\u83cc\uff08Dictyostelium discoideum\uff09\u5728\u9965\u997f\u6761\u4ef6\u4e0b\u53d7\u73af\u78f7\u9178\u817a\u82f7\uff08cAMP\uff09\u6d53\u5ea6\u68af\u5ea6\u5f15\u5bfc\u7684\u805a\u96c6\u8fc7\u7a0b\uff0c\u8fd9\u4e00\u5f00\u521b\u6027\u5de5\u4f5c\u4e3a\u6570\u5b66\u751f\u7269\u5b66\u7814\u7a76\u7ec6\u80de\u8d8b\u5316\u6027\uff08chemotaxis\uff09\u5960\u5b9a\u4e86\u57fa\u77f3\u3002\u8be5\u6a21\u578b\u7684\u6838\u5fc3\u5728\u4e8e\u523b\u753b\u4e86\u7ec6\u80de\u7fa4\u4f53\u4e0d\u4ec5\u968f\u673a\u6269\u6563\uff0c\u66f4\u4f1a\u6cbf\u7740\u5316\u5b66\u4fe1\u53f7\u7269\u7684\u6d53\u5ea6\u68af\u5ea6\u5b9a\u5411\u8fc1\u79fb\u8fd9\u4e00\u5173\u952e\u751f\u7269\u7269\u7406\u73b0\u8c61\u3002\u5176\u5177\u4f53\u5e94\u7528\u5df2\u4ece\u6700\u521d\u7684\u9ecf\u83cc\u7814\u7a76\u6781\u5927\u5730\u6269\u5c55\u5230\u8bf8\u591a\u9886\u57df\uff0c\u5305\u62ec\u89e3\u91ca\u7ec6\u83cc\u7fa4\u843d\u6a21\u5f0f\u7684\u5f62\u6210\u3001\u8840\u7ba1\u65b0\u751f\uff08angiogenesis\uff09\u4e2d\u5185\u76ae\u7ec6\u80de\u7684\u5bfc\u5411\u8fc1\u79fb\u3001\u80bf\u7624\u7ec6\u80de\u7684\u4fb5\u88ad\u4e0e\u8f6c\u79fb\u8fc7\u7a0b\u3001\u514d\u75ab\u7cfb\u7edf\u4e2d\u767d\u7ec6\u80de\u5411\u708e\u75c7\u90e8\u4f4d\u7684\u52df\u96c6\u3001\u4e43\u81f3\u591a\u7ec6\u80de\u751f\u7269\u80da\u80ce\u53d1\u80b2\u4e2d\u7684\u5f62\u6001\u53d1\u751f\uff08morphogenesis\uff09\uff0c\u6210\u4e3a\u8fde\u63a5\u7ec6\u80de\u81ea\u7ec4\u7ec7\u884c\u4e3a\u4e0e\u5b8f\u89c2\u6a21\u5f0f\u6d8c\u73b0\u7684\u4e00\u4e2a\u5178\u8303\u6570\u5b66\u6a21\u578b\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#61","title":"6.1. \u8026\u5408\u65b9\u7a0b\u7ec4","text":"<p>\u63cf\u8ff0\u8fd9\u79cd\u8026\u5408\u7cfb\u7edf\u7684\u6700\u8457\u540d\u7684\u6a21\u578b\u4e4b\u4e00\u662fKeller-Segel (KS) \u6a21\u578b\u3002\u5b83\u7531\u4e24\u4e2a\u8026\u5408\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u7ec4\u6210\uff1a</p> <p>1.\u7ec6\u80de\u5bc6\u5ea6 \\(\\rho(x,t)\\) \u7684\u6f14\u5316\u65b9\u7a0b\uff1a\u8fd9\u672c\u8d28\u4e0a\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u63a8\u5bfc\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff0c\u4f46\u73b0\u5728\u6f02\u79fb\u9879\u660e\u786e\u5730\u4f9d\u8d56\u4e8e\u52a8\u6001\u53d8\u5316\u7684\u5316\u5b66\u573a \\(c(x,t)\\)\u3002\u6f02\u79fb\u9879 \\(v_{eff}\\rho\\) \u901a\u5e38\u88ab\u5199\u4f5c\u4e00\u4e2a\u8d8b\u5316\u901a\u91cf\uff08chemotactic flux\uff09\u7684\u5f62\u5f0f\uff0c\u5373 \\(-\\chi(\\rho,c)\\rho\\nabla c\\)\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u52a0\u5165\u63cf\u8ff0\u7ec6\u80de\u589e\u6b96\u6216\u6b7b\u4ea1\u7684\u53cd\u5e94\u9879\u3002</p> \\[    \\partial_t \\rho = \\nabla \\cdot [D \\nabla \\rho - \\chi(\\rho,c)\\rho \\nabla c] + f_{growth}(\\rho) \\] <p>\uff08\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 \\(\\rho\\) \u4ee3\u8868\u7ec6\u80de\u5bc6\u5ea6\uff0c\u5e76\u4f7f\u7528\u68af\u5ea6\u7b97\u5b50 \\(\\nabla\\) \u4ee5\u4fbf\u63a8\u5e7f\u5230\u9ad8\u7ef4\u7a7a\u95f4\uff09</p> <p>\u8be5\u65b9\u7a0b\u7269\u7406\u610f\u4e49\uff1a\u4e00\u4e2a\u533a\u57df\u5185\u7ec6\u80de\u6570\u91cf\u7684\u53d8\u5316\uff0c\u7b49\u4e8e\u968f\u673a\u6269\u6563\u8fdb\u6765\u7684\u51cf\u53bb\u6269\u6563\u51fa\u53bb\u7684\uff0c\u52a0\u4e0a\u8d8b\u5316\u8fd0\u52a8\u8fc1\u79fb\u8fdb\u6765\u7684\u51cf\u53bb\u8fc1\u79fb\u51fa\u53bb\u7684\uff0c\u6700\u540e\u52a0\u4e0a\u672c\u5730\u51c0\u589e\u6b96\u7684\u6570\u91cf\u3002</p> <p>2.\u5316\u5b66\u7269\u8d28\u6d53\u5ea6 \\(c(x,t)\\) \u7684\u6f14\u5316\u65b9\u7a0b\uff1a\u8fd9\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u53cd\u5e94-\u6269\u6563\u65b9\u7a0b\uff0c\u63cf\u8ff0\u4e86\u5316\u5b66\u7269\u8d28\u7684\u6269\u6563\u3001\u7531\u7ec6\u83cc\u4ea7\u751f\u7684\u8fc7\u7a0b\u4ee5\u53ca\u5176\u81ea\u8eab\u7684\u964d\u89e3\u8fc7\u7a0b\u3002</p> \\[    \\partial_t c = D_c \\nabla^2 c + f_{prod}(\\rho) - f_{degrad}(c) \\] <p>\u8be5\u65b9\u7a0b\u7269\u7406\u610f\u4e49\uff1a\u4e00\u4e2a\u533a\u57df\u5185\u4fe1\u53f7\u7269\u6d53\u5ea6\u7684\u53d8\u5316\uff0c\u7b49\u4e8e\u6269\u6563\u8fdb\u6765\u7684\u51cf\u53bb\u6269\u6563\u51fa\u53bb\u7684\uff0c\u52a0\u4e0a\u7ec6\u80de\u4ea7\u751f\u7684\uff0c\u51cf\u53bb\u81ea\u7136\u964d\u89e3\u7684\u3002</p> <p></p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#62-keller-segel","title":"6.2. Keller-Segel\u6a21\u578b","text":"<p>\u4e8c\u7ef4\u8d8b\u5316\u6027\u53ef\u89c6\u5316\uff0c\u6e90\u81ea\uff1ahttps://visualpde.com/sim/?preset=KellerSegel</p> <p>\u8bb2\u5ea7\u4e2d\u5f15\u7528\u5e76\u94fe\u63a5\u4e86\u4e00\u4e2a\u53ef\u89c6\u5316\u7684KS\u6a21\u578b\uff0c\u5176\u5177\u4f53\u5f62\u5f0f\u4e3a\uff1a</p> \\[ \\frac{\\partial u}{\\partial t} = \\nabla^2 u - \\nabla \\cdot (\\chi(u) \\nabla v) + u(1 - u) \\] \\[ \\frac{\\partial v}{\\partial t} = D \\nabla^2 v + u - av \\] <p>\u8fd9\u91cc\uff0c\\(u\\) \u4ee3\u8868\u7ec6\u80de\u5bc6\u5ea6\uff0c\\(v\\) \u4ee3\u8868\u5316\u5b66\u7269\u8d28\u6d53\u5ea6\u3002\u6211\u4eec\u6765\u9010\u9879\u5206\u6790\u8fd9\u4e2a\u6a21\u578b\uff1a</p> <ul> <li> <p>\\(\\nabla^2 u\\)\uff1a\u7ec6\u80de\u7684\u968f\u673a\u8fd0\u52a8\uff0c\u5bf9\u5e94\u4e8e\u6211\u4eec\u63a8\u5bfc\u7684\u6709\u6548\u6269\u6563 \\(D_{eff}\\)\uff08\u8fd9\u91cc\u8bbe\u4e3a1\uff09\u3002</p> </li> <li> <p>\\(-\\nabla \\cdot (\\chi(u) \\nabla v)\\): \u8d8b\u5316\u901a\u91cf\u3002\u7ec6\u80de\u4ee5\u6b63\u6bd4\u4e8e \\(\\nabla v\\) \u7684\u901f\u5ea6\u79fb\u52a8\uff08\u5373\u5411 \\(v\\) \u6d53\u5ea6\u9ad8\u5904\u79fb\u52a8\uff09\u3002\u8d8b\u5316\u654f\u611f\u6027\\(\\chi(u) = \\frac{cu}{1 + u^2}\\) \u662f\u5bc6\u5ea6\u4f9d\u8d56\u7684\uff0c\u8fd9\u53ef\u4ee5\u6a21\u62df\u9ad8\u5bc6\u5ea6\u4e0b\u7684\u9971\u548c\u6548\u5e94\u3002</p> </li> <li> <p>\\(u(1-u)\\)\uff1a\u7ec6\u80de\u7684\u903b\u8f91\u65af\u8482\u589e\u957f\uff08Logistic growth\uff09\u3002\u5f53\u5bc6\u5ea6 \\(u\\) \u8f83\u5c0f\u65f6\uff0c\u7ec6\u80de\u4ee5\u6b63\u6bd4\u4e8e \\(u\\) \u7684\u901f\u7387\u589e\u957f\uff1b\u5f53 \\(u\\) \u63a5\u8fd1\u627f\u8f7d\u80fd\u529b1\u65f6\uff0c\u589e\u957f\u505c\u6b62\u3002</p> </li> <li> <p>\\(D\\nabla^2 v\\)\uff1a\u5316\u5b66\u7269\u8d28\u7684\u6269\u6563\u3002</p> </li> <li> <p>\\(u-av\\)\uff1a\u5316\u5b66\u7269\u8d28\u7684\u4ea7\u751f\u4e0e\u964d\u89e3\u3002\u4ea7\u751f\u901f\u7387\u6b63\u6bd4\u4e8e\u7ec6\u80de\u5bc6\u5ea6 \\(u\\)\uff0c\u800c\u964d\u89e3\u901f\u7387\u662f\u7b80\u5355\u7684\u7ebf\u6027\u8870\u51cf \\(-av\\)\u3002</p> </li> </ul>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#63","title":"6.3. \u6a21\u5f0f\u7684\u6d8c\u73b0\uff1a\u8d8b\u5316\u6027\u584c\u7f29","text":"<p>\u8fd9\u4e2a\u8026\u5408\u7cfb\u7edf\u7684\u6838\u5fc3\u52a8\u529b\u5b66\u662f\u4ec0\u4e48\uff1f\u8003\u8651\u4e00\u4e2a\u5747\u5300\u7684\u7ec6\u80de\u5206\u5e03\u4e2d\u7684\u4e00\u4e2a\u5fae\u5c0f\u6da8\u843d\uff0c\u5373\u67d0\u4e2a\u5c40\u57df\u7684\u7ec6\u80de\u5bc6\u5ea6\u7565\u5fae\u504f\u9ad8\u3002\u6839\u636e\u7b2c\u4e8c\u4e2a\u65b9\u7a0b\uff0c\u8fd9\u4e9b\u7ec6\u80de\u4f1a\u4ea7\u751f\u66f4\u591a\u7684\u5316\u5b66\u7269\u8d28\uff0c\u4ece\u800c\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u5f62\u6210\u4e00\u4e2a\u5fae\u5f31\u7684\u6d53\u5ea6\u5cf0\u503c\u3002\u8fd9\u4e2a\u6d53\u5ea6\u5cf0\u503c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6307\u5411\u8be5\u5904\u7684\u68af\u5ea6 \\(\\nabla v\\)\u3002\u6839\u636e\u7b2c\u4e00\u4e2a\u65b9\u7a0b\u7684\u8d8b\u5316\u9879\uff0c\u8fd9\u4e2a\u68af\u5ea6\u4f1a\u5438\u5f15\u5468\u56f4\u66f4\u591a\u7684\u7ec6\u80de\u5411\u8fd9\u4e2a\u5cf0\u503c\u805a\u96c6\u3002\u65b0\u805a\u96c6\u6765\u7684\u7ec6\u80de\u4f1a\u4ea7\u751f\u66f4\u591a\u7684\u5316\u5b66\u7269\u8d28\uff0c\u8fdb\u4e00\u6b65\u5f3a\u5316\u8fd9\u4e2a\u6d53\u5ea6\u5cf0\u503c\uff0c\u4ece\u800c\u5438\u5f15\u66f4\u591a\u7ec6\u80de\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5f3a\u70c8\u7684\u6b63\u53cd\u9988\u5faa\u73af\u3002\u5982\u679c\u8d8b\u5316\u5438\u5f15\u7684\u6548\u5e94\uff08\u7531\u7cfb\u6570 \\(\\chi\\) \u63a7\u5236\uff09\u8db3\u591f\u5f3a\u5927\uff0c\u80fd\u591f\u538b\u5012\u7ec6\u80de\u81ea\u8eab\u7684\u968f\u673a\u6269\u6563\u6548\u5e94\uff08\u7531\u7cfb\u6570 \\(D\\) \u63a7\u5236\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6b63\u53cd\u9988\u5c06\u53d8\u5f97\u4e0d\u7a33\u5b9a\u3002\u6700\u521d\u5fae\u5c0f\u7684\u5bc6\u5ea6\u6da8\u843d\u4f1a\u88ab\u6307\u6570\u7ea7\u653e\u5927\uff0c\u5bfc\u81f4\u7ec6\u80de\u5728\u67d0\u4e9b\u70b9\u4e0a\u5927\u91cf\u805a\u96c6\uff0c\u5f62\u6210\u5c16\u9510\u7684\u5cf0\u503c\u3002\u8fd9\u79cd\u73b0\u8c61\u88ab\u79f0\u4e3a\u8d8b\u5316\u6027\u584c\u7f29\uff08chemotactic collapse\uff09\u3002\u5b83\u5b8c\u7f8e\u5730\u5c55\u793a\u4e86\u7b80\u5355\u7684\u5c40\u90e8\u76f8\u4e92\u4f5c\u7528\u89c4\u5219\u5982\u4f55\u5728\u5b8f\u89c2\u4e0a\u6d8c\u73b0\u51fa\u590d\u6742\u7684\u7a7a\u95f4\u7ed3\u6784\u548c\u6a21\u5f0f\uff0c\u8fd9\u662f\u590d\u6742\u7cfb\u7edf\u7684\u4e00\u4e2a\u6807\u5fd7\u6027\u7279\u5f81\u3002\u6570\u5b66\u4e0a\u7684\u7ebf\u6027\u4e0d\u7a33\u5b9a\u6027\u5206\u6790\u53ef\u4ee5\u7ed9\u51fa\u6a21\u5f0f\u5f62\u6210\u7684\u7cbe\u786e\u6761\u4ef6\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#64-python-iikeller-segel","title":"6.4. Python\u6a21\u62df II\uff1a\u4e00\u7ef4Keller-Segel\u6a21\u578b\u7684\u6709\u9650\u5dee\u5206\u6c42\u89e3","text":"<p>\u4e3a\u4e86\u4eb2\u773c\u89c1\u8bc1\u8d8b\u5316\u6027\u584c\u7f29\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6570\u503c\u65b9\u6cd5\u6c42\u89e3\u4e00\u7ef4\u7684Keller-Segel\u65b9\u7a0b\u7ec4\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528\u7b80\u5355\u7684\u6709\u9650\u5dee\u5206\u6cd5\u548c\u524d\u5411\u6b27\u62c9\u65f6\u95f4\u6b65\u8fdb\u7684Python\u5b9e\u73b0\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\nimport imageio\nimport os\n\ndef solve_keller_segel_1d(L=100.0, Nx=200, T=50.0, Nt=5000, D_u=1.0, D_v=20.0, chi_0=25.0, a=1.0):\n    \"\"\"\n    Solve the one-dimensional Keller-Segel model using finite difference method.\n    u_t = D_u * u_xx - chi_0 * (u * v_x)_x\n    v_t = D_v * v_xx + u - a*v\n    \"\"\"\n    dx = L / Nx\n    dt = T / Nt\n    x = np.linspace(0, L, Nx, endpoint=False)\n\n    # Check numerical stability conditions (for explicit method)\n    # Courant-Friedrichs-Lewy (CFL) condition\n    if dt &gt; dx**2 / (2 * max(D_u, D_v)):\n        print(f\"Warning: Time step {dt:.4f} may be too large for stability.\")\n        # Adjust time step to ensure stability\n        dt = 0.2 * dx**2 / (2 * max(D_u, D_v))\n        Nt = int(T / dt)\n        print(f\"Adjusted time step to {dt:.6f} and Nt to {Nt}\")\n\n    # Initialize cell density u and chemical concentration v\n    # u: Uniform distribution plus small random perturbation\n    u = 1.0 + 0.01 * (np.random.rand(Nx) - 0.5)\n    v = u / a  # Initially v is in local equilibrium\n\n    u_history = [u.copy()]\n    v_history = [v.copy()]\n\n    for n in range(Nt):\n        # Use periodic boundary conditions\n        u_prev = np.roll(u, 1)\n        u_next = np.roll(u, -1)\n        v_prev = np.roll(v, 1)\n        v_next = np.roll(v, -1)\n\n        # Calculate second derivatives (Laplacian)\n        u_xx = (u_next - 2*u + u_prev) / dx**2\n        v_xx = (v_next - 2*v + v_prev) / dx**2\n\n        # Calculate first derivatives (Gradient)\n        v_x = (v_next - v_prev) / (2*dx)\n\n        # Calculate chemotactic flux J = chi * u * v_x\n        J = chi_0 * u * v_x\n        J_prev = np.roll(J, 1)\n\n        # Calculate divergence of flux (Divergence)\n        div_J = (J - J_prev) / dx  # Using upwind scheme\n\n        # Update u and v\n        u_new = u + dt * (D_u * u_xx - div_J)\n        v_new = v + dt * (D_v * v_xx + u - a*v)\n\n        # Ensure non-negativity of solutions\n        u_new = np.maximum(u_new, 0)\n        v_new = np.maximum(v_new, 0)\n\n        # Check for NaN or infinity\n        if np.any(np.isnan(u_new)) or np.any(np.isnan(v_new)) or \\\n           np.any(np.isinf(u_new)) or np.any(np.isinf(v_new)):\n            print(f\"Warning: NaN or Inf encountered at step {n}. Stopping simulation.\")\n            break\n\n        u, v = u_new, v_new\n\n        if n % 50 == 0:  # Store every 50 steps\n            u_history.append(u.copy())\n            v_history.append(v.copy())\n\n    return x, u_history, v_history\n\n# --- Run simulation ---\n# Use parameters more suitable for demonstrating chemotactic collapse\nx, u_hist, v_hist = solve_keller_segel_1d(T=100.0, Nt=20000, chi_0=40.0)\n\n# --- Create GIF animation ---\nfig, ax = plt.subplots(figsize=(10, 6))\nline, = ax.plot(x, u_hist[0], 'b-', lw=2)\nax.set_xlim(0, 100)\n\n# Fix y-axis range to better show the chemotactic collapse process\nax.set_ylim(0, 5)  # Set appropriate range based on expected collapse effect\nax.set_xlabel('Position x')\nax.set_ylabel('Cell Density u(x,t)')\nax.set_title('1D Keller-Segel Simulation: Chemotactic Collapse')\ntime_text = ax.text(0.05, 0.9, '', transform=ax.transAxes)\n\n# Create temporary directory to store frames\ntemp_dir = 'temp_frames'\nos.makedirs(temp_dir, exist_ok=True)\ngif_filename = 'keller_segel_simulation.gif'\n\ndef update(frame):\n    line.set_ydata(u_hist[frame])\n    # Correct time calculation formula\n    time = frame * 50 * (100.0/20000)\n    time_text.set_text(f'Time = {time:.2f}')\n    return line, time_text\n\n# Save each frame as an image\nfilenames = []\nfor i in range(len(u_hist)):\n    update(i)\n    filename = f'{temp_dir}/frame_{i:03d}.png'\n    plt.savefig(filename)\n    filenames.append(filename)\n    if (i+1) % 10 == 0:  # Reduce print frequency\n        print(f'Saving frame {i+1}/{len(u_hist)}')\n\n# Use imageio to create GIF, add loop parameter to ensure infinite looping\nwith imageio.get_writer(gif_filename, mode='I', duration=0.1, loop=0) as writer:\n    for filename in filenames:\n        image = imageio.imread(filename)\n        writer.append_data(image)\n\n# Clean up temporary files\nfor filename in filenames:\n    os.remove(filename)\nos.rmdir(temp_dir)\n\nprint(f'GIF animation saved as {gif_filename}')\n\n# Plot snapshots at several time points\nplt.figure(figsize=(10, 6))\ntime_snapshots = [0, len(u_hist)//4, len(u_hist)//2, len(u_hist)-1]\nfor i, frame in enumerate(time_snapshots):\n    time = frame * 50 * (100.0/20000)\n    plt.plot(x, u_hist[frame], label=f'Time = {time:.2f}')\nplt.xlabel('Position x')\nplt.ylabel('Cell Density u(x,t)')\nplt.title('Snapshots of Cell Density Evolution')\nplt.legend()\nplt.grid(True)\nplt.savefig('keller_segel_snapshots.png', dpi=300, bbox_inches='tight')\nplt.show()\n</code></pre> </p> <p></p> <p>\u6a21\u62df\u7ed3\u679c\u751f\u52a8\u5730\u518d\u73b0\u4e86\u8d8b\u5316\u6027\u584c\u7f29\u7684\u8fc7\u7a0b\u3002\u4ece\u4e00\u4e2a\u51e0\u4e4e\u5747\u5300\u7684\u3001\u5e26\u6709\u5fae\u5c0f\u968f\u673a\u6270\u52a8\u7684\u521d\u59cb\u72b6\u6001\u5f00\u59cb\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u67d0\u4e9b\u533a\u57df\u7684\u5bc6\u5ea6\u5f00\u59cb\u7f13\u6162\u589e\u957f\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8fd9\u4e9b\u5fae\u5c0f\u7684\"\u5c71\u4e18\"\u53d8\u5f97\u8d8a\u6765\u8d8a\u9ad8\u3001\u8d8a\u6765\u8d8a\u7a84\uff0c\u6700\u7ec8\u5f62\u6210\u975e\u5e38\u5c16\u9510\u7684\u3001\u7a33\u5b9a\u7684\u5bc6\u5ea6\u5cf0\u503c\u3002\u8fd9\u6e05\u6670\u5730\u8868\u660e\uff0c\u7ec6\u80de\u95f4\u7684\uff08\u901a\u8fc7\u5316\u5b66\u7269\u8d28\u4ecb\u5bfc\u7684\uff09\u76f8\u4e92\u4f5c\u7528\u80fd\u591f\u81ea\u53d1\u5730\u6253\u7834\u7cfb\u7edf\u7684\u5747\u5300\u6027\uff0c\u5f62\u6210\u9ad8\u5ea6\u6709\u5e8f\u7684\u5b8f\u89c2\u7ed3\u6784\u3002</p>"},{"location":"zh/notes/15.%20%E8%B6%8B%E5%8C%96%E6%80%A7%E3%80%81%E8%B7%91%E5%8A%A8-%E7%BF%BB%E6%BB%9A%E8%BF%90%E5%8A%A8%E4%B8%8EKeller-Segel%E6%A8%A1%E5%9E%8B/#_2","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u6211\u4eec\u4ece\u5206\u5b50\u5c3a\u5ea6\u51fa\u53d1\uff0c\u4e86\u89e3\u4e86\u5355\u4e2a\u7ec6\u83cc\u5185\u90e8\u7cbe\u5bc6\u7684\u5316\u5b66\u611f\u5e94\u7f51\u7edc\uff0c\u8fd9\u662f\u5176\u611f\u77e5\u73af\u5883\u7684\u57fa\u7840)\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u8fd9\u79cd\u590d\u6742\u7684\u751f\u7269\u884c\u4e3a\u62bd\u8c61\u4e3a\u4e00\u4e2a\u5355\u7c92\u5b50\u7edf\u8ba1\u6a21\u578b\u2014\u2014\u4e00\u7ef4\u53cc\u6001\u8fc7\u7a0b\uff0c\u7528\u51e0\u4e2a\u5173\u952e\u7684\u901f\u7387\u53c2\u6570 \\(\\alpha_\\pm\\) \u6355\u6349\u4e86\u5176\u8dd1\u52a8-\u7ffb\u6eda\u8fd0\u52a8\u7684\u672c\u8d28\u3002</p> <p>\u901a\u8fc7\u7c97\u7c92\u5316\u548c\u7edd\u70ed\u8fd1\u4f3c\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u5fae\u89c2\u968f\u673a\u6a21\u578b\u63d0\u5347\u5230\u4e86\u8fde\u7eed\u4ecb\u8d28\u529b\u5b66\u7684\u5c42\u6b21\uff0c\u63a8\u5bfc\u51fa\u4e86\u63cf\u8ff0\u6574\u4e2a\u7ec6\u83cc\u7fa4\u4f53\u5bc6\u5ea6\u6f14\u5316\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff0c\u5e76\u660e\u786e\u4e86\u6709\u6548\u6269\u6563\u7cfb\u6570\u548c\u6f02\u79fb\u901f\u5ea6\u7684\u7269\u7406\u6765\u6e90\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u5c06\u7ec6\u83cc\u7fa4\u4f53\u4e0e\u5176\u6240\u5904\u7684\u5316\u5b66\u73af\u5883\u8026\u5408\u8d77\u6765\uff0c\u6784\u5efa\u4e86\u975e\u7ebf\u6027\u52a8\u529b\u5b66\u6a21\u578b\uff08Keller-Segel\u6a21\u578b\uff09\uff0c\u5e76\u53d1\u73b0\u8fd9\u4e2a\u8026\u5408\u7cfb\u7edf\u80fd\u591f\u6d8c\u73b0\u51fa\u5355\u4e2a\u7ec6\u83cc\u6240\u4e0d\u5177\u5907\u7684\u3001\u4ee4\u4eba\u60ca\u53f9\u7684\u96c6\u4f53\u884c\u4e3a\u2014\u2014\u81ea\u53d1\u7684\u6a21\u5f0f\u5f62\u6210\u548c\u8d8b\u5316\u6027\u584c\u7f29\u3002</p> <p>\u8fd9\u4e2a\u4ece\"\u5206\u5b50\"\u5230\"\u7fa4\u4f53\"\uff0c\u4ece\"\u5fae\u89c2\u968f\u673a\"\u5230\"\u5b8f\u89c2\u786e\u5b9a\u6027\"\u7684\u5efa\u6a21\u8fc7\u7a0b\uff0c\u5b8c\u7f8e\u5730\u8be0\u91ca\u4e86\u7406\u8bba\u7269\u7406\u5b66\u7684\u601d\u60f3\u548c\u65b9\u6cd5\u5982\u4f55\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u590d\u6742\u7684\u7269\u7406\u548c\u751f\u7269\u73b0\u8c61\uff0c\u63ed\u793a\u9690\u85cf\u80cc\u540e\u7684\u666e\u9002\u7269\u7406\u539f\u7406\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/","title":"\u5f15\u8a00\uff1a\u4ece\u5916\u90e8\u4fe1\u53f7\u9a71\u52a8\u5230\u5185\u90e8\u673a\u5236\u9a71\u52a8\u7684\u6a21\u5f0f\u5f62\u6210","text":"<p>\u5728\u4e0a\u4e00\u8bb2\u4e2d\uff0cErwin Frey \u6559\u6388\u63a2\u8ba8\u4e86\u8d8b\u5316\u6027\uff08chemotaxis\uff09\u4ee5\u53ca\u7ecf\u5178\u7684Keller-Segel\u6a21\u578b\uff0c\u5b83\u63cf\u8ff0\u4e86\u751f\u7269\u7fa4\u4f53\uff08\u5982\u7ec6\u83cc\uff09\u5982\u4f55\u54cd\u5e94\u5316\u5b66\u4fe1\u53f7\u68af\u5ea6\u800c\u805a\u96c6\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u672c\u8bb2\u5185\u5bb9\uff0cErwin Frey \u6559\u6388\u9996\u5148\u7b80\u8981\u56de\u987e\u4e86\u5176\u6838\u5fc3\u601d\u60f3\u3002Keller-Segel\u6a21\u578b\u7531\u4e00\u7ec4\u8026\u5408\u7684\u53cd\u5e94-\u6269\u6563\u65b9\u7a0b\u6784\u6210\uff0c\u63cf\u8ff0\u4e86\u7c92\u5b50\uff08\u5982\u7ec6\u83cc\uff09\u5bc6\u5ea6 \\(g(\\vec{x},t)\\) \u548c\u5316\u5b66\u4fe1\u53f7\u6d53\u5ea6 \\(c(\\vec{x},t)\\) \u7684\u65f6\u7a7a\u6f14\u5316\u3002</p> <p></p> <p>\u7c92\u5b50\u5bc6\u5ea6\u7684\u6f14\u5316\u65b9\u7a0b\u4e3a\uff1a $$ \\partial_t g(\\vec{x}, t) = - \\vec{\\nabla} \\cdot \\left( \\left( \\chi(c) \\vec{\\nabla} c(\\vec{x}, t) \\right) g(\\vec{x}, t) \\right) + D \\nabla^2 g(\\vec{x}, t) $$</p> <p>\u5316\u5b66\u4fe1\u53f7\u6d53\u5ea6\u7684\u6f14\u5316\u65b9\u7a0b\u4e3a\uff1a</p> \\[\\partial_t c(\\vec{x},t) = D_c \\nabla^2 c(\\vec{x},t) - k c(\\vec{x},t) + f(g)\\] <p>\u7b2c\u4e00\u4e2a\u65b9\u7a0b\u63cf\u8ff0\u4e86\u7c92\u5b50\u5bc6\u5ea6\u7684\u53d8\u5316\u3002\u53f3\u4fa7\u7b2c\u4e00\u9879\u662f\u8d8b\u5316\u9879\uff0c\u8868\u793a\u7c92\u5b50\u4f1a\u671d\u7740\u5316\u5b66\u4fe1\u53f7\u6d53\u5ea6\u66f4\u9ad8\u7684\u65b9\u5411\u79fb\u52a8\uff0c\u5176\u4e2d \\(\\chi(c)\\) \u662f\u8d8b\u5316\u654f\u611f\u6027\uff1b\u7b2c\u4e8c\u9879\u662f\u6807\u51c6\u7684\u6269\u6563\u9879\uff0c\u63cf\u8ff0\u4e86\u7c92\u5b50\u7684\u968f\u673a\u8fd0\u52a8\u3002\u7b2c\u4e8c\u4e2a\u65b9\u7a0b\u63cf\u8ff0\u4e86\u5316\u5b66\u4fe1\u53f7\u7684\u4ea7\u751f\u548c\u6d88\u6563\uff0c\u5305\u62ec\u4fe1\u53f7\u81ea\u8eab\u7684\u6269\u6563\uff08\\(D_c \\nabla^2 c\\)\uff09\u3001\u964d\u89e3\uff08\\(-k c\\)\uff09\u4ee5\u53ca\u7531\u7c92\u5b50\u4ea7\u751f\u7684\u4fe1\u53f7\u6e90\uff08\\(f(g)\\)\uff09\u3002</p> <p>Keller-Segel\u6a21\u578b\u7684\u6838\u5fc3\u673a\u5236\u662f\u4e00\u4e2a\u6b63\u53cd\u9988\u5faa\u73af\uff1a\u7c92\u5b50\u805a\u96c6\u7684\u5730\u65b9\u4f1a\u4ea7\u751f\u66f4\u9ad8\u6d53\u5ea6\u7684\u5316\u5b66\u4fe1\u53f7\uff0c\u800c\u66f4\u9ad8\u6d53\u5ea6\u7684\u4fe1\u53f7\u53c8\u4f1a\u5438\u5f15\u66f4\u591a\u7684\u7c92\u5b50\u524d\u6765\u805a\u96c6\u3002\u8fd9\u79cd\u7531\u5916\u90e8\u4fe1\u53f7\uff08\u5316\u5b66\u68af\u5ea6\uff09\u5f15\u5bfc\u7684\u8fd0\u52a8\uff0c\u6700\u7ec8\u53ef\u4ee5\u5bfc\u81f4\u7cfb\u7edf\u4ece\u4e00\u4e2a\u5747\u5300\u7684\u72b6\u6001\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u5177\u6709\u590d\u6742\u7a7a\u95f4\u7ed3\u6784\u7684\u975e\u5e73\u8861\u7a33\u6001\uff08Non-Equilibrium Steady State, NESS\uff09\uff0c\u4f8b\u5982\u5f62\u6210\u56e2\u7c07\u6216\u6591\u56fe\uff08Pattern\uff09\u3002</p> <p></p> <p>Keller-Segel\u6a21\u578b\u6210\u529f\u5730\u89e3\u91ca\u4e86\u8bb8\u591a\u751f\u7269\u7cfb\u7edf\u4e2d\u7684\u805a\u96c6\u73b0\u8c61\uff0c\u4f46\u5b83\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u76f8\u5bf9\u590d\u6742\u7684\u751f\u7269\u673a\u5236\uff1a\u7c92\u5b50\u5fc5\u987b\u80fd\u591f\u611f\u77e5\u73af\u5883\u4e2d\u7684\u5316\u5b66\u68af\u5ea6\uff0c\u5e76\u76f8\u5e94\u5730\u8c03\u6574\u5176\u8fd0\u52a8\u65b9\u5411\u3002\u8fd9\u5c31\u5f15\u51fa\u4e86\u4e00\u4e2a\u66f4\u6df1\u5c42\u6b21\u3001\u66f4\u5177\u666e\u904d\u6027\u7684\u7269\u7406\u95ee\u9898\uff1a\u5373\u4f7f\u6ca1\u6709\u5916\u90e8\u4fe1\u53f7\u7684\u5f15\u5bfc\uff0c\u4e5f\u6ca1\u6709\u7c92\u5b50\u95f4\u7684\u76f4\u63a5\u5438\u5f15\u529b\uff0c\u4ec5\u4ec5\u901a\u8fc7\u7c92\u5b50\u81ea\u8eab\u7684\u8fd0\u52a8\u7279\u6027\uff0c\u7cfb\u7edf\u80fd\u5426\u81ea\u53d1\u5730\u5f62\u6210\u6709\u5e8f\u7684\u7ed3\u6784\uff1f</p> <p>\u8fd9\u8282\u8bfe\u5c06\u56f4\u7ed5\u8fd9\u4e2a\u95ee\u9898\u5c55\u5f00\uff0c\u63a2\u8ba8\u4e00\u79cd\u5168\u65b0\u7684\u6a21\u5f0f\u5f62\u6210\u673a\u5236\u3002\u6211\u4eec\u5c06\u770b\u5230\uff0c\u7c92\u5b50\u8fd0\u52a8\u7684\u5185\u5728\u5c5e\u6027\u2014\u2014\u7279\u522b\u662f\u5176\u901f\u5ea6\u5982\u4f55\u53d7\u5468\u56f4\u73af\u5883\uff08\u4f8b\u5982\uff0c\u7c92\u5b50\u5bc6\u5ea6\uff09\u7684\u5f71\u54cd\u2014\u2014\u8db3\u4ee5\u9a71\u52a8\u7cfb\u7edf\u53d1\u751f\u76f8\u5206\u79bb\u3002\u8fd9\u79cd\u73b0\u8c61\u88ab\u79f0\u4e3a\u8fd0\u52a8\u8bf1\u5bfc\u76f8\u5206\u79bb\uff08Motility-Induced Phase Separation, MIPS\uff09\u3002\u8fd9\u6807\u5fd7\u7740\u6211\u4eec\u4ece\u7814\u7a76\u7531\u5916\u90e8\u4fe1\u53f7\u9a71\u52a8\u7684\u7279\u5b9a\u751f\u7269\u884c\u4e3a\uff0c\u8f6c\u5411\u63a2\u7d22\u7531\u66f4\u666e\u9002\u7684\u7269\u7406\u539f\u7406\u4e3b\u5bfc\u7684\u81ea\u7ec4\u7ec7\u73b0\u8c61\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#1-schnitzer-","title":"1. Schnitzer\u6a21\u578b\uff1a\u8dd1\u52a8-\u7ffb\u6eda\u52a8\u529b\u5b66\u7684\u5fae\u89c2\u63cf\u8ff0","text":"<p>\u4e3a\u4e86\u4ece\u5fae\u89c2\u5c42\u9762\u7406\u89e3\u7c92\u5b50\u8fd0\u52a8\u5982\u4f55\u5bfc\u81f4\u5b8f\u89c2\u4e0a\u7684\u6a21\u5f0f\u5f62\u6210\uff0c\u6559\u6388\u5f15\u5165\u4e00\u4e2a\u7ecf\u5178\u6a21\u578b\u2014\u2014Schnitzer\u6a21\u578b\u3002\u8be5\u6a21\u578b\u6700\u521d\u662f\u4e3a\u4e86\u7ed9\u8d8b\u5316\u6027\u4e2d\u7684\u5927\u80a0\u6746\u83cc\uff08E. coli\uff09\u7b49\u5fae\u751f\u7269\u7684\"\u8dd1\u52a8-\u7ffb\u6eda\"\uff08run-and-tumble\uff09\u8fd0\u52a8\u5efa\u7acb\u4e00\u4e2a\u8fde\u7eed\u4ecb\u8d28\u7406\u8bba\u3002\u5728\u672c\u8bb2\u4e2d\uff0c\u6211\u4eec\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u7406\u60f3\u5316\u7684\u6a21\u578b\u7cfb\u7edf\uff0c\u6765\u63ed\u793aMIPS\u7684\u7269\u7406\u672c\u8d28\u3002</p> <p>Schnitzer\u6a21\u578b\u4e8e20\u4e16\u7eaa90\u5e74\u4ee3\u672b\u81f321\u4e16\u7eaa\u521d\u7531Martin J. Schnitzer\u3001George Oster\u548cHoward C. Berg\u7b49\u4eba\u53d1\u5c55\u8d77\u6765\uff0c\u5176\u5386\u53f2\u80cc\u666f\u662f\u4e3a\u4e86\u4ece\u7b2c\u4e00\u6027\u539f\u7406\u51fa\u53d1\uff0c\u4e3a\u5927\u80a0\u6746\u83cc\u7b49\u7ec6\u83cc\u7684\u8d8b\u5316\u6027\u884c\u4e3a\u5efa\u7acb\u4e00\u4e2a\u4e25\u8c28\u7684\u7edf\u8ba1\u529b\u5b66\u6846\u67b6\u3002\u8be5\u6a21\u578b\u7684\u6838\u5fc3\u672c\u8d28\u662f\u5c06\u5fae\u89c2\u7684\u201c\u8dd1\u52a8-\u7ffb\u6eda\u201d\u968f\u673a\u8fd0\u52a8\u4e0e\u7ec6\u80de\u5185\u5316\u5b66\u4fe1\u53f7\u8f6c\u5bfc\u901a\u8def\u8026\u5408\uff0c\u901a\u8fc7\u4e3b\u65b9\u7a0b\uff08Master Equation\uff09\u548c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff08Fokker-Planck Equation\uff09\u7b49\u6570\u5b66\u5de5\u5177\uff0c\u4ece\u5355\u4e2a\u7ec6\u83cc\u7684\u968f\u673a\u8fd0\u52a8\u89c4\u5f8b\u63a8\u5bfc\u51fa\u7ec6\u80de\u7fa4\u4f53\u5728\u5316\u5b66\u7269\u8d28\u6d53\u5ea6\u573a\u4e2d\u7684\u5b8f\u89c2\u6269\u6563\u3001\u6f02\u79fb\u7b49\u8fde\u7eed\u4ecb\u8d28\u884c\u4e3a\u3002\u5176\u5177\u4f53\u5e94\u7528\u8fdc\u4e0d\u6b62\u4e8e\u89e3\u91ca\u8d8b\u5316\u6027\uff0c\u5b83\u5df2\u6210\u4e3a\u7814\u7a76\u5fae\u751f\u7269\u8fd0\u52a8\u7684\u6807\u51c6\u8303\u5f0f\uff0c\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u91cf\u5316\u7ec6\u83cc\u5728\u590d\u6742\u73af\u5883\u4e2d\u7684\u641c\u7d22\u7b56\u7565\u3001\u4f18\u5316\u75c5\u539f\u4f53\u4fb5\u88ad\u548c\u514d\u75ab\u7ec6\u80de\u8ffd\u8e2a\u7684\u6a21\u578b\uff0c\u4ee5\u53ca\u542f\u53d1\u5fae\u7eb3\u673a\u5668\u4eba\u96c6\u7fa4\u7684\u7b97\u6cd5\u8bbe\u8ba1\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#11","title":"1.1. \u7cfb\u7edf\u7684\u5b9a\u4e49","text":"<p>\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u7b80\u5316\u7684\u4e00\u7ef4\u7cfb\u7edf\u3002\u5728\u8fd9\u4e2a\u7cfb\u7edf\u4e2d\uff0c\u5b58\u5728\u4e24\u7c7b\u7c92\u5b50\uff1a</p> <ul> <li> <p>\u5bc6\u5ea6\u4e3a \\(P_+(x,t)\\) \u7684\u7c92\u5b50\uff0c\u5b83\u4eec\u4ee5\u901f\u5ea6 \\(v(x)\\) \u5411\u53f3\uff08\\(+x\\) \u65b9\u5411\uff09\u79fb\u52a8\u3002</p> </li> <li> <p>\u5bc6\u5ea6\u4e3a \\(P_-(x,t)\\) \u7684\u7c92\u5b50\uff0c\u5b83\u4eec\u4ee5\u901f\u5ea6 \\(v(x)\\) \u5411\u5de6\uff08\\(-x\\) \u65b9\u5411\uff09\u79fb\u52a8\u3002</p> </li> </ul> <p>\u8fd9\u91cc\u7684\u901f\u5ea6 \\(v(x)\\) \u548c\u7ffb\u6eda\u7387 \\(\\alpha(x)\\) \u90fd\u53ef\u80fd\u4f9d\u8d56\u4e8e\u7a7a\u95f4\u4f4d\u7f6e \\(x\\)\u3002\u7ffb\u6eda\uff08tumble\uff09\u662f\u6307\u7c92\u5b50\u4f1a\u4ee5\u4e00\u5b9a\u7684\u901f\u7387 \\(\\alpha(x)\\) \u968f\u673a\u5730\u6539\u53d8\u5176\u8fd0\u52a8\u65b9\u5411\u3002\u5728\u4e00\u7ef4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u610f\u5473\u7740\u5411\u53f3\u8fd0\u52a8\u7684\u7c92\u5b50\u4f1a\u53d8\u4e3a\u5411\u5de6\u8fd0\u52a8\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#12","title":"1.2. \u4e3b\u65b9\u7a0b","text":"<p>\u57fa\u4e8e\u4ee5\u4e0a\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u63cf\u8ff0 \\(P_+\\) \u548c \\(P_-\\) \u5bc6\u5ea6\u6f14\u5316\u7684\u4e3b\u65b9\u7a0b\uff08Master Equations\uff09\u3002\u8fd9\u662f\u4e00\u5bf9\u8026\u5408\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u3002</p> <p>\u5bf9\u4e8e\u5411\u53f3\u8fd0\u52a8\u7684\u7c92\u5b50\u5bc6\u5ea6 \\(P_+\\)\uff0c\u5176\u6f14\u5316\u65b9\u7a0b\u4e3a\uff1a</p> \\[\\partial_t P_+ = -\\partial_x [v(x) P_+] - \\frac{1}{2} \\alpha(x) P_+ + \\frac{1}{2} \\alpha(x) P_-\\] <p>\u8be5\u65b9\u7a0b\u7684\u7269\u7406\u610f\u4e49\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ol> <li> <p>\u5e73\u6d41\u9879\uff08Advection\uff09\uff1a\\(-\\partial_x [v(x) P_+]\\)\u3002\u8fd9\u662f\u4e00\u4e2a\u8fde\u7eed\u6027\u65b9\u7a0b\u7684\u6d41\u51fa\u9879\uff0c\u63cf\u8ff0\u4e86 \\(P_+\\) \u7c92\u5b50\u4ee5\u901f\u5ea6 \\(v(x)\\) \u5411\u53f3\u8fd0\u52a8\u6240\u5bfc\u81f4\u7684\u5bc6\u5ea6\u53d8\u5316\u3002</p> </li> <li> <p>\u635f\u5931\u9879\uff08Loss\uff09\uff1a\\(-\\frac{1}{2} \\alpha(x) P_+\\)\u3002\u5411\u53f3\u8fd0\u52a8\u7684\u7c92\u5b50\u4f1a\u4ee5\u901f\u7387 \\(\\alpha(x)\\) \u53d1\u751f\u7ffb\u6eda\u3002\u5728\u4e00\u7ef4\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u5047\u8bbe\u7ffb\u6eda\u540e\u65b9\u5411\u5b8c\u5168\u968f\u673a\uff0c\u56e0\u6b64\u6709\u4e00\u534a\u7684\u6982\u7387\uff08\u8fd9\u91cc\u7b80\u5316\u4e3a\u786e\u5b9a\u6027\u5730\uff09\u53d8\u4e3a\u5411\u5de6\u8fd0\u52a8\u3002\u56e0\u6b64\uff0c\u8fd9\u4e00\u9879\u63cf\u8ff0\u4e86 \\(P_+\\) \u7fa4\u4f53\u56e0\u7ffb\u6eda\u800c\u51cf\u5c11\u7684\u901f\u7387\u3002</p> </li> <li> <p>\u589e\u76ca\u9879\uff08Gain\uff09\uff1a\\(+\\frac{1}{2} \\alpha(x) P_-\\)\u3002\u540c\u7406\uff0c\u5411\u5de6\u8fd0\u52a8\u7684\u7c92\u5b50 \\(P_-\\) \u4e5f\u4f1a\u53d1\u751f\u7ffb\u6eda\uff0c\u5e76\u6709\u4e00\u5b9a\u6982\u7387\u53d8\u4e3a\u5411\u53f3\u8fd0\u52a8\uff0c\u4ece\u800c\u8865\u5145\u4e86 \\(P_+\\) \u7fa4\u4f53\u3002</p> </li> </ol> <p>\u5bf9\u4e8e\u5411\u5de6\u8fd0\u52a8\u7684\u7c92\u5b50\u5bc6\u5ea6 \\(P_-\\)\uff0c\u5176\u6f14\u5316\u65b9\u7a0b\u5177\u6709\u5bf9\u79f0\u7684\u5f62\u5f0f\uff1a</p> \\[\\partial_t P_- = +\\partial_x [v(x) P_-] - \\frac{1}{2} \\alpha(x) P_- + \\frac{1}{2} \\alpha(x) P_+\\] <p>\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5e73\u6d41\u9879 \\(\\partial_x [v(x) P_-]\\) \u524d\u9762\u7684\u7b26\u53f7\u4e3a\u6b63\uff0c\u56e0\u4e3a\u5b83\u63cf\u8ff0\u7684\u662f\u7c92\u5b50\u5411\u5de6\uff08-x\u65b9\u5411\uff09\u8fd0\u52a8\u3002\u635f\u5931\u9879\u548c\u589e\u76ca\u9879\u7684\u7269\u7406\u89e3\u91ca\u4e0e \\(P_+\\) \u65b9\u7a0b\u7c7b\u4f3c\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#13","title":"1.3. \u5b8f\u89c2\u53ef\u89c2\u6d4b\u91cf","text":"<p>\\(P_+\\) \u548c \\(P_-\\) \u662f\u5fae\u89c2\u72b6\u6001\u7684\u63cf\u8ff0\u3002\u5728\u5b9e\u9a8c\u6216\u5b8f\u89c2\u7406\u8bba\u4e2d\uff0c\u6211\u4eec\u66f4\u5173\u5fc3\u7684\u662f\u4e00\u4e9b\u5b8f\u89c2\u53ef\u89c2\u6d4b\u91cf\uff0c\u4f8b\u5982\u603b\u7c92\u5b50\u5bc6\u5ea6\u548c\u7c92\u5b50\u6d41\u3002\u5b83\u4eec\u53ef\u4ee5\u7531 \\(P_+\\) \u548c \\(P_-\\) \u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u603b\u7c92\u5b50\u5bc6\u5ea6\uff08Total Density\uff09\uff1a\\(g(x,t) = P_+(x,t) + P_-(x,t)\\)</p> </li> <li> <p>\u7c92\u5b50\u6d41\uff08Particle Flux/Current\uff09\uff1a\\(J(x,t) = v(x) [P_+(x,t) - P_-(x,t)]\\)</p> </li> </ul> <p>\u6211\u4eec\u7684\u6700\u7ec8\u76ee\u6807\u662f\u63a8\u5bfc\u51fa\u4e00\u4e2a\u53ea\u5305\u542b\u5b8f\u89c2\u91cf \\(g(x,t)\\) \u7684\u5c01\u95ed\u6f14\u5316\u65b9\u7a0b\uff0c\u800c\u65e0\u9700\u518d\u5173\u5fc3\u5fae\u89c2\u7684 \\(P_+\\) \u548c \\(P_-\\)\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a\"\u7c97\u7c92\u5316\"\uff08coarse-graining\uff09\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#2","title":"2. \u7c97\u7c92\u5316\uff1a\u901a\u8fc7\u7edd\u70ed\u6d88\u9664\u4ece\u5fae\u89c2\u89c4\u5219\u5230\u5b8f\u89c2\u5b9a\u5f8b","text":"<p>\u4e3a\u4e86\u4ece\u63cf\u8ff0\u5fae\u89c2\u72b6\u6001\uff08\\(P_+, P_-\\)\uff09\u7684Schnitzer\u6a21\u578b\u5f97\u5230\u63cf\u8ff0\u5b8f\u89c2\u5bc6\u5ea6\uff08\\(g\\)\uff09\u7684\u65b9\u7a0b\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7cfb\u7edf\u6027\u7684\u7b80\u5316\u65b9\u6cd5\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u79cd\u5728\u7269\u7406\u5b66\u4e2d\u975e\u5e38\u5f3a\u5927\u7684\u6280\u672f\u2014\u2014\u7edd\u70ed\u6d88\u9664\uff08Adiabatic Elimination\uff09\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#21","title":"2.1. \u7edd\u70ed\u6d88\u9664\u539f\u7406","text":"<p>\u7edd\u70ed\u6d88\u9664\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u5f53\u4e00\u4e2a\u52a8\u529b\u5b66\u7cfb\u7edf\u5305\u542b\u6f14\u5316\u901f\u7387\u5dee\u5f02\u5de8\u5927\u7684\u53d8\u91cf\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5316\u7cfb\u7edf\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u7cfb\u7edf\u4e2d\u7684\u53d8\u91cf\u53ef\u4ee5\u5206\u4e3a\"\u5feb\u53d8\u91cf\"\u548c\"\u6162\u53d8\u91cf\"\u3002\u5feb\u53d8\u91cf\u7684\u6f14\u5316\u65f6\u95f4\u5c3a\u5ea6\u5f88\u77ed\uff08\u5f1b\u8c6b\u901f\u7387\u5feb\uff09\uff0c\u800c\u6162\u53d8\u91cf\u7684\u6f14\u5316\u65f6\u95f4\u5c3a\u5ea6\u5f88\u957f\uff08\u5f1b\u8c6b\u901f\u7387\u6162\uff09\u3002\u7edd\u70ed\u6d88\u9664\u5047\u8bbe\u5feb\u53d8\u91cf\u80fd\u591f\"\u77ac\u65f6\"\u5730\u9002\u5e94\u6162\u53d8\u91cf\u7684\u4efb\u4f55\u53d8\u5316\uff0c\u5e76\u59cb\u7ec8\u5904\u4e8e\u7531\u5f53\u524d\u6162\u53d8\u91cf\u503c\u6240\u51b3\u5b9a\u7684\u51c6\u7a33\u6001\uff08quasi-steady state\uff09\u3002\u901a\u8fc7\u6c42\u89e3\u5feb\u53d8\u91cf\u7684\u51c6\u7a33\u6001\uff0c\u5e76\u5c06\u5176\u4ee3\u5165\u6162\u53d8\u91cf\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\"\u6d88\u9664\"\u5feb\u53d8\u91cf\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u4e2a\u53ea\u63cf\u8ff0\u6162\u53d8\u91cf\u6f14\u5316\u7684\u3001\u66f4\u7b80\u5355\u7684\u6709\u6548\u52a8\u529b\u5b66\u65b9\u7a0b\u3002</p> <p>\u5728\u6211\u4eec\u7684Schnitzer\u6a21\u578b\u4e2d\uff1a</p> <ul> <li> <p>\u6162\u53d8\u91cf\uff1a\u603b\u5bc6\u5ea6 \\(g = P_+ + P_-\\)\u3002\u5b83\u7684\u53d8\u5316\u4f9d\u8d56\u4e8e\u7c92\u5b50\u5728\u7a7a\u95f4\u4e2d\u7684\u8f93\u8fd0\uff0c\u8fd9\u662f\u4e00\u4e2a\u76f8\u5bf9\u7f13\u6162\u7684\u8fc7\u7a0b\u3002</p> </li> <li> <p>\u5feb\u53d8\u91cf\uff1a\u7c92\u5b50\u6d41 \\(J\\) \u6240\u5173\u8054\u7684\u5bc6\u5ea6\u5dee \\(P_+ - P_-\\)\u3002\u7c92\u5b50\u901a\u8fc7\u7ffb\u6eda\uff08\u7531\u901f\u7387 \\(\\alpha\\) \u63a7\u5236\uff09\u5728\u5411\u5de6\u548c\u5411\u53f3\u7684\u72b6\u6001\u4e4b\u95f4\u5feb\u901f\u8f6c\u6362\u3002\u6211\u4eec\u5047\u8bbe\u7ffb\u6eda\u8fc7\u7a0b\u8fdc\u5feb\u4e8e\u7c92\u5b50\u5728\u5b8f\u89c2\u5c3a\u5ea6\u4e0a\u79fb\u52a8\u7684\u8fc7\u7a0b\uff0c\u5373 \\(\\alpha\\) \u5f88\u5927\u3002</p> </li> </ul>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#22-fokker-planck","title":"2.2. \u6709\u6548Fokker-Planck\u65b9\u7a0b\u7684\u63a8\u5bfc","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u9075\u5faa\u8bfe\u5802\u4e2d\u7684\u63a8\u5bfc\u6b65\u9aa4\uff0c\u5bf9Schnitzer\u6a21\u578b\u8fdb\u884c\u7edd\u70ed\u6d88\u9664\u3002</p> <ol> <li> <p>\u5c06 \\(P_+\\) \u548c \\(P_-\\) \u7684\u4e3b\u65b9\u7a0b\u76f8\u52a0\u548c\u76f8\u51cf\u3002</p> </li> <li> <p>\u76f8\u52a0\uff1a</p> </li> </ol> <p>$$    \\partial_t (P_+ + P_-) = -\\partial_x [v (P_+ - P_-)] \\implies \\partial_t g = -\\partial_x J    $$</p> <p>\u8fd9\u4e2a\u7ed3\u679c\u662f\u4e00\u4e2a\u7cbe\u786e\u7684\u7c92\u5b50\u6570\u5b88\u6052\u5b9a\u5f8b\uff0c\u8868\u660e\u603b\u5bc6\u5ea6\u7684\u53d8\u5316\u7387\u7b49\u4e8e\u7c92\u5b50\u6d41\u7684\u8d1f\u6563\u5ea6\u3002</p> <ul> <li>\u76f8\u51cf\uff1a</li> </ul> <p>$$    \\partial_t (P_+ - P_-) = -\\partial_x [v (P_+ + P_-)] - \\alpha (P_+ - P_-)    $$</p> <p>2. \u5e94\u7528\u7edd\u70ed\u8fd1\u4f3c\u3002</p> <p>\u6211\u4eec\u5047\u8bbe\u5feb\u53d8\u91cf \\((P_+ - P_-)\\) \u7684\u5f1b\u8c6b\u975e\u5e38\u5feb\uff0c\u4ee5\u81f3\u4e8e\u5b83\u7684\u65f6\u95f4\u5bfc\u6570\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\u96f6\uff0c\u5373 \\(\\partial_t (P_+ - P_-) \\approx 0\\)\u3002</p> <p>3. \u6c42\u89e3\u5feb\u53d8\u91cf\u7684\u51c6\u7a33\u6001\u3002</p> <p>\u5728 \\(\\partial_t (P_+ - P_-) \\approx 0\\) \u7684\u6761\u4ef6\u4e0b\uff0c\u7b2c\u4e8c\u4e2a\u65b9\u7a0b\u53d8\u4e3a\uff1a</p> <p>$$    0 \\approx -\\partial_x [v (P_+ + P_-)] - \\alpha (P_+ - P_-) = -\\partial_x [v g] - \\alpha (P_+ - P_-)    $$</p> <p>\u89e3\u51fa \\((P_+ - P_-)\\)\uff1a</p> <p>$$    (P_+ - P_-) \\approx -\\frac{1}{\\alpha(x)} \\partial_x [v(x) g(x,t)]    $$</p> <p>7. \u5c06\u51c6\u7a33\u6001\u8868\u8fbe\u5f0f\u4ee3\u56de\u5b8f\u89c2\u91cf\u7684\u5b9a\u4e49\u4e2d\u3002</p> <p>\u9996\u5148\uff0c\u4ee3\u5165\u7c92\u5b50\u6d41 \\(J\\) \u7684\u5b9a\u4e49\uff1a</p> <p>$$    J = v(x) (P_+ - P_-) \\approx -\\frac{v(x)}{\\alpha(x)} \\partial_x [v(x) g(x,t)]    $$</p> <p>\u7136\u540e\uff0c\u5c06\u8fd9\u4e2a\u6709\u6548\u7c92\u5b50\u6d41\u7684\u8868\u8fbe\u5f0f\u4ee3\u5165\u7c92\u5b50\u6570\u5b88\u6052\u5b9a\u5f8b \\(\\partial_t g = -\\partial_x J\\)\uff1a</p> <p>$$    \\partial_t g(x,t) = \\partial_x \\left( \\frac{v(x)}{\\alpha(x)} \\partial_x [v(x) g(x,t)] \\right)    $$</p> <p>\u5728\u4e3b\u65b9\u7a0b\u4e2d\uff0c\\(\\alpha\\) \u5df2\u9690\u542b\\(\\frac{1}{2}\\) \u56e0\u5b50\uff08\u635f\u5931\u9879\u4e3a \\(\\frac{1}{2} \\alpha P_+\\)\uff09\uff0c\u4e3a\u4e86\u4e25\u8c28\u70b9\uff0c\u6700\u7ec8\u65b9\u7a0b\u9700\u663e\u5f0f\u6dfb\u52a0 \\(\\frac{1}{2}\\)</p> \\[\\partial_t g(x,t) = \\partial_x \\left( \\frac{v(x)}{2\\alpha(x)} \\partial_x [v(x) g(x,t)] \\right)\\] <p>\u901a\u8fc7\u8fd9\u4e00\u7cfb\u5217\u6b65\u9aa4\uff0c\u6211\u4eec\u6210\u529f\u5730\u6d88\u9664\u4e86\u5fae\u89c2\u53d8\u91cf \\(P_+\\) \u548c \\(P_-\\)\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u53ea\u63cf\u8ff0\u5b8f\u89c2\u603b\u5bc6\u5ea6 \\(g\\) \u6f14\u5316\u7684\u5c01\u95ed\u504f\u5fae\u5206\u65b9\u7a0b\u3002\u8fd9\u4e2a\u65b9\u7a0b\u5728\u5f62\u5f0f\u4e0a\u662f\u4e00\u4e2a\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff08Fokker-Planck Equation\uff09\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#23","title":"2.3. \u6709\u6548\u7c92\u5b50\u6d41\u4e0e\u6269\u6563","text":"<p>\u4e3a\u4e86\u66f4\u6df1\u5165\u5730\u7406\u89e3\u8fd9\u4e2a\u5b8f\u89c2\u65b9\u7a0b\u7684\u7269\u7406\u610f\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6709\u6548\u7c92\u5b50\u6d41 \\(J\\) \u7684\u8868\u8fbe\u5f0f\u5c55\u5f00\uff1a</p> \\[J = -\\frac{v(x)}{\\alpha(x)} \\left( g(x,t) \\frac{\\partial v(x)}{\\partial x} + v(x) \\frac{\\partial g(x,t)}{\\partial x} \\right)\\] <p>\u6574\u7406\u540e\u5f97\u5230\uff1a</p> \\[J = -\\underbrace{\\frac{v^2(x)}{\\alpha(x)}}_{D_{\\text{eff}}(x)} \\frac{\\partial g}{\\partial x} - \\underbrace{\\frac{g(x,t) v(x)}{\\alpha(x)} \\frac{\\partial v(x)}{\\partial x}}_{\\text{\u6f02\u79fb\u9879 (Drift Term)}}\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u63ed\u793a\u4e86\u5b8f\u89c2\u7c92\u5b50\u8fd0\u52a8\u7684\u4e24\u4e2a\u7ec4\u6210\u90e8\u5206\uff1a</p> <ul> <li> <p>\u6709\u6548\u6269\u6563\u9879\uff1a\u7b2c\u4e00\u9879\u7684\u5f62\u5f0f\u4e0e\u83f2\u514b\u6269\u6563\u5b9a\u5f8b\uff08Fick's Law of Diffusion\uff09\u5b8c\u5168\u76f8\u540c\uff0c\u5176\u4e2d \\(D_{\\text{eff}}(x) = \\frac{v^2(x)}{\\alpha(x)}\\) \u626e\u6f14\u4e86\u6709\u6548\u6269\u6563\u7cfb\u6570\u7684\u89d2\u8272\u3002\u5b83\u8868\u660e\uff0c\u5373\u4f7f\u5fae\u89c2\u8fd0\u52a8\u662f\u786e\u5b9a\u6027\u7684\u8dd1\u52a8\uff08run\uff09\uff0c\u5b8f\u89c2\u4e0a\u7531\u4e8e\u9891\u7e41\u7684\u7ffb\u6eda\uff08tumble\uff09\u4e5f\u4f1a\u8868\u73b0\u51fa\u7c7b\u4f3c\u6269\u6563\u7684\u884c\u4e3a\u3002</p> </li> <li> <p>\u6709\u6548\u6f02\u79fb\u9879\uff1a\u7b2c\u4e8c\u9879\u662f\u4e00\u4e2a\u6f02\u79fb\u9879\uff0c\u5b83\u7684\u5927\u5c0f\u6b63\u6bd4\u4e8e\u7c92\u5b50\u5bc6\u5ea6 \\(g\\) \u548c\u901f\u5ea6\u68af\u5ea6 \\(\\partial_x v(x)\\)\u3002\u8fd9\u4e00\u9879\u610f\u5473\u7740\uff0c\u7c92\u5b50\u4f1a\u53d7\u5230\u4e00\u4e2a\u7b49\u6548\u7684\"\u529b\"\uff0c\u9a71\u4f7f\u5b83\u4eec\u5411\u901f\u5ea6 \\(v(x)\\) \u66f4\u4f4e\u7684\u65b9\u5411\u79fb\u52a8\u3002</p> </li> </ul>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#3","title":"3. \u6d3b\u6027\u7c92\u5b50\u805a\u96c6\u7684\u7269\u7406\u5b66","text":"<p>\u6211\u4eec\u521a\u521a\u63a8\u5bfc\u51fa\u7684\u5b8f\u89c2\u65b9\u7a0b\u8574\u542b\u7740\u6d3b\u6027\u7269\u8d28\uff08active matter\uff09\u7269\u7406\u5b66\u7684\u4e00\u4e2a\u6838\u5fc3\u539f\u7406\u3002\u4e3a\u4e86\u63ed\u793a\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u6765\u5206\u6790\u7cfb\u7edf\u7684\u7a33\u6001\u89e3\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#31","title":"3.1. \u7a33\u6001\u5206\u6790","text":"<p>\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5c01\u95ed\u7cfb\u7edf\uff0c\u8fd9\u610f\u5473\u7740\u5728\u7a33\u6001\uff08steady state\uff09\u65f6\uff0c\u51c0\u7c92\u5b50\u6d41 \\(J_{ss}\\) \u5fc5\u987b\u5904\u5904\u4e3a\u96f6\u3002\u4e3a\u4e86\u7b80\u5316\u5206\u6790\uff0c\u6211\u4eec\u5047\u8bbe\u7ffb\u6eda\u7387 \\(\\alpha(x)\\) \u662f\u4e00\u4e2a\u5e38\u6570 \\(\\alpha_0\\)\u3002</p> <p>\u7a33\u6001\u6761\u4ef6 \\(J_{ss} = 0\\) \u610f\u5473\u7740\uff1a</p> \\[-\\alpha_0 v(x) \\partial_x [v(x) g_{ss}(x)] = 0\\] <p>\u8fd9\u8981\u6c42\u65b9\u62ec\u53f7\u5185\u7684\u9879\u4e3a\u4e00\u4e2a\u5e38\u6570\uff1a</p> \\[v(x) g_{ss}(x) = \\text{constant}\\] <p>\u56e0\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u6d01\u800c\u6df1\u523b\u7684\u7ed3\u8bba\uff1a</p> \\[g_{ss}(x) \\propto \\frac{1}{v(x)}\\] <p>\u7a33\u6001\u7c92\u5b50\u5bc6\u5ea6 \\(g_{ss}(x)\\) \u4e0e\u5f53\u5730\u7684\u7c92\u5b50\u8fd0\u52a8\u901f\u5ea6 \\(v(x)\\) \u6210\u53cd\u6bd4\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#32","title":"3.2. \u7269\u7406\u8be0\u91ca\uff1a\"\u6d3b\u6027\u7c92\u5b50\u5728\u8fd0\u52a8\u7f13\u6162\u5904\u805a\u96c6\"","text":"<p>\u8fd9\u4e2a \\(g \\propto 1/v\\) \u7684\u5173\u7cfb\u662f\u6d3b\u6027\u7269\u8d28\u7269\u7406\u5b66\u533a\u522b\u4e8e\u5e73\u8861\u6001\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u57fa\u77f3\u4e4b\u4e00 \u3002</p> <p>\u5728\u5e73\u8861\u6001\u7cfb\u7edf\u4e2d\uff0c\u7c92\u5b50\u7684\u7a33\u6001\u5206\u5e03\u7531\u73bb\u5c14\u5179\u66fc\u5206\u5e03\uff08Boltzmann distribution\uff09\u51b3\u5b9a\uff0c\\(g \\propto \\exp(-U/k_B T)\\)\uff0c\u5176\u4e2d \\(U\\) \u662f\u52bf\u80fd\u3002\u7c92\u5b50\u7684\u5206\u5e03\u53ea\u53d6\u51b3\u4e8e\u80fd\u91cf\u666f\u89c2\uff0c\u800c\u4e0e\u5b83\u4eec\u7684\u8fd0\u52a8\u5b66\u53c2\u6570\uff08\u5982\u901f\u5ea6\uff09\u65e0\u5173\u3002</p> <p>\u7136\u800c\uff0c\u5728\u6d3b\u6027\u7cfb\u7edf\u4e2d\uff0c\u7cfb\u7edf\u5904\u4e8e\u975e\u5e73\u8861\u6001\uff0c\u5176\u7a33\u6001\u5206\u5e03\u7531\u52a8\u529b\u5b66\u8fc7\u7a0b\u51b3\u5b9a\u3002\\(g \\propto 1/v\\) \u7684\u7269\u7406\u56fe\u50cf\u975e\u5e38\u76f4\u89c2\uff1a\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u4e00\u4e2a\"\u4ea4\u901a\u5835\u585e\"\u6548\u5e94\u3002\u5f53\u7c92\u5b50\u8fd0\u52a8\u5230\u4e00\u4e2a\u5b83\u4eec\u901f\u5ea6\u4f1a\u51cf\u6162\u7684\u533a\u57df\u65f6\uff0c\u5b83\u4eec\u9700\u8981\u82b1\u8d39\u66f4\u957f\u7684\u65f6\u95f4\u624d\u80fd\u79bb\u5f00\u8fd9\u4e2a\u533a\u57df\u3002\u76f8\u53cd\uff0c\u5f53\u7c92\u5b50\u5904\u4e8e\u4e00\u4e2a\u9ad8\u901f\u533a\u57df\u65f6\uff0c\u5b83\u4eec\u4f1a\u8fc5\u901f\u7a7f\u8fc7\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8fd9\u79cd\u52a8\u529b\u5b66\u5dee\u5f02\u5bfc\u81f4\u4e86\u7c92\u5b50\u5728\u4f4e\u901f\u533a\u57df\u7684\u51c0\u79ef\u7d2f\u3002\u8fd9\u4e2a\u7b80\u5355\u7684\u52a8\u529b\u5b66\"\u4ea4\u901a\u5835\u585e\"\u8bba\u8bc1\uff0c\u6b63\u662f \\(g \\propto 1/v\\) \u80cc\u540e\u6df1\u523b\u7684\u7269\u7406\u539f\u7406\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#4-mips","title":"4. \u8fd0\u52a8\u8bf1\u5bfc\u76f8\u5206\u79bb\uff08MIPS\uff09","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5047\u8bbe\u901f\u5ea6 \\(v(x)\\) \u662f\u7a7a\u95f4 \\(x\\) \u7684\u56fa\u5b9a\u51fd\u6570\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u3001\u66f4\u7b26\u5408\u7269\u7406\u5b9e\u9645\u7684\u8bbe\u5b9a\uff0c\u5b83\u5c06\u76f4\u63a5\u5bfc\u81f4\u76f8\u5206\u79bb\u7684\u53d1\u751f\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#41","title":"4.1. \u5173\u952e\u53cd\u9988\uff1a\u4f9d\u8d56\u4e8e\u5bc6\u5ea6\u7684\u8fd0\u52a8\u6027","text":"<p>\u6211\u4eec\u5047\u8bbe\u7c92\u5b50\u7684\u8fd0\u52a8\u901f\u5ea6\u4e0d\u518d\u662f\u7a7a\u95f4\u5750\u6807\u7684\u5148\u9a8c\u51fd\u6570\uff0c\u800c\u662f\u4f9d\u8d56\u4e8e\u5c40\u90e8\u7684\u7c92\u5b50\u5bc6\u5ea6\uff0c\u5373 \\(v = v(g)\\)\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5408\u7406\u7684\u5047\u8bbe\u3002\u5728\u8bb8\u591a\u771f\u5b9e\u7cfb\u7edf\u4e2d\uff0c\u4f8b\u5982\u5bc6\u96c6\u7684\u7ec6\u80de\u7fa4\u6216\u80f6\u4f53\u60ac\u6d6e\u6db2\u4e2d\uff0c\u5f53\u7c92\u5b50\u5bc6\u5ea6\u5347\u9ad8\u65f6\uff0c\u5b83\u4eec\u4f1a\u56e0\u4e3a\u7a7a\u95f4\u4f4d\u963b\uff08steric hindrance\uff09\u6216\"\u62e5\u6324\"\uff08crowding\uff09\u6548\u5e94\u800c\u76f8\u4e92\u963b\u788d\uff0c\u5bfc\u81f4\u8fd0\u52a8\u901f\u5ea6\u4e0b\u964d\u3002\u6b64\u5916\uff0c\u4e5f\u53ef\u80fd\u5b58\u5728\u751f\u7269\u5316\u5b66\u4fe1\u53f7\u673a\u5236\uff08\u5982\u7fa4\u4f53\u611f\u5e94\uff0cquorum sensing\uff09\uff0c\u4f7f\u5f97\u7c92\u5b50\u5728\u9ad8\u5bc6\u5ea6\u4e0b\u4e3b\u52a8\u51cf\u901f\u3002\u5728\u672c\u8bb2\u4e2d\uff0c\u6211\u4eec\u4e3b\u8981\u8003\u8651\u901f\u5ea6\u968f\u5bc6\u5ea6\u589e\u52a0\u800c\u51cf\u5c0f\u7684\u60c5\u51b5\uff0c\u5373</p> \\[v'(g) = \\frac{dv}{dg} &lt; 0\\]"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#42","title":"4.2. \u4e0d\u7a33\u5b9a\u6027\u7684\u51fa\u73b0\uff1a\u53cd\u5e38\u6269\u6563","text":"<p>\u5f15\u5165 \\(v(g)\\) \u540e\uff0c\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u6709\u6548\u7c92\u5b50\u6d41 \\(J\\) \u7684\u8868\u8fbe\u5f0f\u3002\u4e3a\u7b80\u5316\u8d77\u89c1\uff0c\u6211\u4eec\u91c7\u7eb3\u8bb2\u5ea7\u4e2d\u7684\u8bbe\u5b9a\uff0c\u4ee4\u7ffb\u6eda\u7387 \\(\\alpha = 1\\)\u3002</p> \\[J = -v(g) \\partial_x [g v(g)]\\] <p>\u5229\u7528\u94fe\u5f0f\u6cd5\u5219\u5c55\u5f00\u5bfc\u6570\u9879\uff1a</p> \\[J = -v(g) \\left[ v(g) \\frac{\\partial g}{\\partial x} + g \\frac{dv(g)}{dg} \\frac{\\partial g}{\\partial x} \\right]\\] <p>\u6574\u7406\u540e\u5f97\u5230\uff1a</p> \\[J = - \\left[ v(g)^2 + g v(g) v'(g) \\right] \\frac{\\partial g}{\\partial x}\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u4ecd\u7136\u662f\u83f2\u514b\u5b9a\u5f8b \\(J = -D_{\\text{eff}}(g) \\frac{\\partial g}{\\partial x}\\)\uff0c\u4f46\u73b0\u5728\u6709\u6548\u6269\u6563\u7cfb\u6570 \\(D_{\\text{eff}}(g)\\) \u672c\u8eab\u4e5f\u4f9d\u8d56\u4e8e\u5bc6\u5ea6\uff1a</p> \\[D_{\\text{eff}}(g) = v(g)^2 + g v(g) v'(g)\\]"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#43","title":"4.3. \u805a\u96c6\u6761\u4ef6\u4e0e\u6b63\u53cd\u9988\u5faa\u73af","text":"<p>\u8fd9\u4e2a\u4f9d\u8d56\u4e8e\u5bc6\u5ea6\u7684\u6709\u6548\u6269\u6563\u7cfb\u6570 \\(D_{\\text{eff}}(g)\\) \u7684\u884c\u4e3a\u51b3\u5b9a\u4e86\u7cfb\u7edf\u7684\u5b8f\u89c2\u52a8\u529b\u5b66\u3002</p> <ul> <li> <p>\u6b63\u5e38\u6269\u6563\uff08Normal Diffusion\uff09\uff1a\u5982\u679c \\(D_{\\text{eff}}(g) &gt; 0\\)\uff0c\u7c92\u5b50\u6d41\u7684\u65b9\u5411\u4e0e\u5bc6\u5ea6\u68af\u5ea6\u65b9\u5411\u76f8\u53cd\uff08\u4ece\u9ad8\u5bc6\u5ea6\u6d41\u5411\u4f4e\u5bc6\u5ea6\uff09\u3002\u8fd9\u4f1a\u62b9\u5e73\u4efb\u4f55\u5bc6\u5ea6\u4e0d\u5747\u5300\u6027\uff0c\u4f7f\u7cfb\u7edf\u8d8b\u5411\u4e8e\u4e00\u4e2a\u5747\u5300\u7684\u7a33\u6001\u3002</p> </li> <li> <p>\u53cd\u5e38\u6269\u6563\uff08Anti-Diffusion\uff09\uff1a\u5982\u679c \\(D_{\\text{eff}}(g) &lt; 0\\)\uff0c\u60c5\u51b5\u5c06\u53d1\u751f\u620f\u5267\u6027\u7684\u9006\u8f6c\uff01\u6b64\u65f6\u7c92\u5b50\u6d41\u7684\u7b26\u53f7\u4e3a\u6b63\uff0c\u610f\u5473\u7740\u7c92\u5b50\u4f1a\u987a\u7740\u5bc6\u5ea6\u68af\u5ea6\u6d41\u52a8\uff0c\u5373\u4ece\u4f4e\u5bc6\u5ea6\u533a\u57df\u6d41\u5411\u9ad8\u5bc6\u5ea6\u533a\u57df (1)\u3002\u8fd9\u79cd\u884c\u4e3a\u4f1a\u653e\u5927\u4efb\u4f55\u5fae\u5c0f\u7684\u5bc6\u5ea6\u6da8\u843d\uff0c\u5bfc\u81f4\u7c92\u5b50\u81ea\u53d1\u5730\u805a\u96c6\uff0c\u6700\u7ec8\u5f62\u6210\u56e2\u7c07\u548c\u6591\u56fe\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0c\u7cfb\u7edf\u53d8\u5f97\u4e0d\u7a33\u5b9a\u7684\u6761\u4ef6\u662f \\(D_{\\text{eff}}(g) &lt; 0\\)\u3002\u7531\u4e8e \\(v(g)\\) \u603b\u662f\u6b63\u7684\uff0c\u8fd9\u4e2a\u6761\u4ef6\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a</p> \\[v(g) + g v'(g) &lt; 0\\] <p>\u8fd9\u4e2a\u6761\u4ef6\u7b49\u4ef7\u4e8e\u8bb2\u5ea7\u7b14\u8bb0\u4e2d\u7ed9\u51fa\u7684\u5f62\u5f0f 1\uff1a</p> \\[\\frac{d}{dg}[g v(g)] &lt; 0\\] <p>\u8fd9\u4e2a\u6570\u5b66\u6761\u4ef6\u80cc\u540e\u662f\u4e00\u6b63\u53cd\u9988\u5faa\u73af\uff08Positive Feedback Loop\uff09\uff0c\u5b83\u6b63\u662fMIPS\u7684\u6838\u5fc3\u673a\u5236\u3002</p> <ol> <li> <p>\u521d\u59cb\u6da8\u843d\uff1a\u5047\u8bbe\u7cfb\u7edf\u6700\u521d\u5904\u4e8e\u4e00\u4e2a\u5747\u5300\u7684\u5bc6\u5ea6\u72b6\u6001\u3002\u7531\u4e8e\u70ed\u566a\u58f0\u6216\u5176\u4ed6\u968f\u673a\u56e0\u7d20\uff0c\u67d0\u4e2a\u5c40\u90e8\u533a\u57df\u7684\u5bc6\u5ea6\u51fa\u73b0\u4e86\u4e00\u4e2a\u5fae\u5c0f\u7684\u6b63\u5411\u6da8\u843d\u3002</p> </li> <li> <p>\u51cf\u901f\uff1a\u7531\u4e8e\u6211\u4eec\u5047\u8bbe \\(v'(g) &lt; 0\\)\uff0c\u8fd9\u4e2a\u5bc6\u5ea6\u7a0d\u9ad8\u533a\u57df\u5185\u7684\u7c92\u5b50\u8fd0\u52a8\u901f\u5ea6\u4f1a\u56e0\u6b64\u800c\u51cf\u6162\u3002</p> </li> <li> <p>\u805a\u96c6\uff1a\u6839\u636e\u6211\u4eec\u5728\u7b2c4\u8282\u5efa\u7acb\u7684\u539f\u7406\uff08\\(g \\propto 1/v\\)\uff09\uff0c\u6d3b\u6027\u7c92\u5b50\u503e\u5411\u4e8e\u5728\u8fd0\u52a8\u7f13\u6162\u7684\u5730\u65b9\u805a\u96c6\u3002\u56e0\u6b64\uff0c\u66f4\u591a\u7684\u7c92\u5b50\u4f1a\u88ab\u5438\u5f15\u5230\u8fd9\u4e2a\u5df2\u7ecf\u7565\u5fae\u5bc6\u96c6\u7684\u533a\u57df\u3002</p> </li> <li> <p>\u653e\u5927\uff1a\u7c92\u5b50\u7684\u8fdb\u4e00\u6b65\u805a\u96c6\u4f7f\u5f97\u8be5\u533a\u57df\u7684\u5bc6\u5ea6\u53d8\u5f97\u66f4\u9ad8\uff0c\u4ece\u800c\u5bfc\u81f4\u7c92\u5b50\u901f\u5ea6\u8fdb\u4e00\u6b65\u4e0b\u964d\uff0c\u8fd9\u53c8\u4f1a\u5438\u5f15\u66f4\u591a\u7684\u7c92\u5b50\u2026\u2026</p> </li> </ol> <p>\u8fd9\u662f\u4e00\u4e2a\u5931\u63a7\u7684\u8fc7\u7a0b\u3002\u6700\u521d\u5fae\u4e0d\u8db3\u9053\u7684\u5bc6\u5ea6\u6da8\u843d\u88ab\u4e0d\u65ad\u653e\u5927\uff0c\u6700\u7ec8\u5bfc\u81f4\u5747\u5300\u72b6\u6001\u7684\u5d29\u6e83\u3002\u7cfb\u7edf\u4f1a\u81ea\u53d1\u5730\u5206\u79bb\u6210\u4e00\u4e2a\u9ad8\u5bc6\u5ea6\u3001\u4f4e\u8fc1\u79fb\u7387\u7684\"\u6db2\u76f8\"\u548c\u4e00\u4e2a\u4f4e\u5bc6\u5ea6\u3001\u9ad8\u8fc1\u79fb\u7387\u7684\"\u6c14\u76f8\"\u3002\u8fd9\u5c31\u662f\u8fd0\u52a8\u8bf1\u5bfc\u76f8\u5206\u79bb\u3002\u503c\u5f97\u5f3a\u8c03\u7684\u662f\uff0c\u8fd9\u662f\u4e00\u79cd\u7eaf\u7cb9\u7684\u975e\u5e73\u8861\u73b0\u8c61\uff0c\u5176\u9a71\u52a8\u529b\u662f\u7c92\u5b50\u7684\u8fd0\u52a8\u7279\u6027\uff0c\u800c\u975e\u50cf\u5e73\u8861\u6001\u76f8\u53d8\u90a3\u6837\u7531\u7c92\u5b50\u95f4\u7684\u5438\u5f15\u529b\u9a71\u52a8\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#5-mips","title":"5. MIPS\u7684\u4e8c\u7ef4\u6a21\u62df\u4e0e\u6570\u503c\u65b9\u6cd5","text":"<p>\u4e3a\u4e86\u6df1\u5165\u63a2\u7d22\u8fd0\u52a8\u8bf1\u5bfc\u76f8\u5206\u79bb\uff08MIPS\uff09\u5728\u7a7a\u95f4\u81ea\u7ec4\u7ec7\uff08self-organization\uff09\u8fc7\u7a0b\u4e2d\u7684\u4e30\u5bcc\u7ec6\u8282\uff0c\u6211\u4eec\u5c06\u76f4\u63a5\u5efa\u7acb\u5e76\u6c42\u89e3\u4e00\u4e2a\u4e8c\u7ef4\u6a21\u578b\u3002\u4e00\u7ef4\u6a21\u578b\u867d\u7136\u53ef\u4ee5\u63ed\u793a\u4e0d\u7a33\u5b9a\u7684\u672c\u8d28\uff0c\u4f46\u4e8c\u7ef4\u6a21\u62df\u80fd\u66f4\u76f4\u89c2\u5730\u5c55\u793a\u6591\u56fe\uff08Pattern\uff09\u7684\u5f62\u6210\u3001\u7ade\u4e89\u4e0e\u7c97\u5316\uff08Coarsening\uff09\uff0c\u8fd9\u4e9b\u90fd\u662f\u76f8\u5206\u79bb\u73b0\u8c61\u7684\u6838\u5fc3\u7279\u5f81\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#51-cahn-hilliard","title":"5.1. \u7269\u7406\u6a21\u578b\uff1aCahn-Hilliard\u65b9\u7a0b","text":"<p>\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u63cf\u8ff0\u76f8\u5206\u79bb\u6700\u901a\u7528\u548c\u7a33\u5065\u7684\u65b9\u7a0b\u662fCahn-Hilliard\u65b9\u7a0b\u3002\u5b83\u4f18\u96c5\u5730\u6355\u6349\u4e86\u9a71\u52a8\u76f8\u5206\u79bb\u7684\"\u53cd\u5411\u6269\u6563\"\u6548\u5e94\u548c\u6291\u5236\u65e0\u9650\u5c16\u9510\u754c\u9762\u7684\"\u8868\u9762\u5f20\u529b\"\u6548\u5e94\u4e4b\u95f4\u7684\u7ade\u4e89\u3002</p> <p>\u8be5\u65b9\u7a0b\u63cf\u8ff0\u4e86\u7c92\u5b50\u5bc6\u5ea6 \\(g(\\vec{x}, t)\\) \u968f\u65f6\u95f4\u7684\u6f14\u5316\uff0c\u5176\u5f62\u5f0f\u5982\u4e0b\uff1a</p> \\[\\frac{\\partial g}{\\partial t} = M \\nabla^2 \\mu\\] <p>\u8fd9\u662f\u4e00\u4e2a\u8fde\u7eed\u6027\u65b9\u7a0b\uff0c\u5176\u4e2d \\(M\\) \u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u79f0\u4e3a\u8fc1\u79fb\u7387\uff08mobility\uff09\uff0c\u800c \\(\\mu\\) \u662f\u6709\u6548\u5316\u5b66\u52bf\u3002\u65b9\u7a0b\u8868\u660e\uff0c\u7c92\u5b50\u4f1a\u4ece\u5316\u5b66\u52bf\u9ad8\u7684\u5730\u65b9\u6d41\u5411\u5316\u5b66\u52bf\u4f4e\u7684\u5730\u65b9\u3002\u5316\u5b66\u52bf \\(\\mu\\) \u672c\u8eab\u7531\u4e24\u90e8\u5206\u8d21\u732e\uff0c\u5b83\u7531\u4e00\u4e2a\u6709\u6548\u81ea\u7531\u80fd\u6cdb\u51fd \\(F[g]\\) \u5bf9\u5bc6\u5ea6\u7684\u6cdb\u51fd\u5bfc\u6570\u7ed9\u51fa\uff1a</p> \\[\\mu = \\frac{\\delta F}{\\delta g} = \\underbrace{f'(g)}_{\\text{\u4f53\u80fd\u91cf\u9879}} - \\underbrace{\\kappa \\nabla^2 g}_{\\text{\u754c\u9762\u80fd\u91cf\u9879}}\\] <ul> <li>\u4f53\u80fd\u91cf\u9879 \\(f'(g)\\)\uff1a\u8fd9\u4e00\u9879\u6e90\u4e8e\u7c92\u5b50\u95f4\u7684\u6709\u6548\u76f8\u4e92\u4f5c\u7528\u3002\u5728MIPS\u7684\u80cc\u666f\u4e0b\uff0c\u5b83\u4e0e\u6211\u4eec\u4e4b\u524d\u63a8\u5bfc\u7684\u6709\u6548\u6269\u6563\u7cfb\u6570 \\(D_{\\text{eff}}(g)\\) \u76f4\u63a5\u76f8\u5173\uff08\u5177\u4f53\u5173\u7cfb\u4e3a \\(f''(g) \\propto D_{\\text{eff}}(g)\\)\uff09\u3002\u5b83\u7684\u4f5c\u7528\u662f\uff0c\u5f53\u5bc6\u5ea6\u5904\u4e8e\u4e0d\u7a33\u5b9a\u533a\u95f4\u65f6\uff0c\u4f1a\u9a71\u52a8\u7cfb\u7edf\u5206\u79bb\u6210\u4e24\u4e2a\u5bc6\u5ea6\u4e0d\u540c\u7684\u7269\u76f8\u3002\u5bf9\u4e8e\u6211\u4eec\u4f7f\u7528\u7684 \\(v(g) = v_0(1-g/g^*)\\) \u6a21\u578b\uff0c\u8be5\u9879\u7684\u5177\u4f53\u5f62\u5f0f\u4e3a\uff1a</li> </ul> \\[ f'(g) = v_0^2 \\left( g - \\frac{3}{2g^*}g^2 + \\frac{2}{3(g^*)^2}g^3 \\right) \\] <ul> <li>\u754c\u9762\u80fd\u91cf\u9879 \\(-\\kappa \\nabla^2 g\\)\uff1a\u8fd9\u4e00\u9879\u662f\u6a21\u578b\u7684\u5173\u952e\u4fee\u6b63\u3002\\(\\kappa\\) \u662f\u4e00\u4e2a\u6b63\u7684\u5e38\u6570\uff0c\u4ee3\u8868\u4e86\u754c\u9762\u5f20\u529b\u7684\u5f3a\u5ea6\u3002\\(\\nabla^2 g\\) \u662f\u5bc6\u5ea6\u7684\u62c9\u666e\u62c9\u65af\u7b97\u5b50\uff0c\u5b83\u8861\u91cf\u4e86\u5bc6\u5ea6\u573a\u7684\"\u5f2f\u66f2\"\u7a0b\u5ea6\u3002\u8fd9\u4e00\u9879\u7684\u4f5c\u7528\u662f\u60e9\u7f5a\u5177\u6709\u9ad8\u66f2\u7387\u7684\u3001\u5c16\u9510\u7684\u5bc6\u5ea6\u68af\u5ea6\uff0c\u4ece\u800c\u963b\u6b62\u4e86\u6211\u4eec\u5728\u521d\u7ea7\u6a21\u578b\u4e2d\u770b\u5230\u7684\u975e\u7269\u7406\u5c16\u5cf0\uff0c\u5e76\u8d4b\u4e88\u4e86\u76f8\u5206\u79bb\u754c\u9762\u4e00\u4e2a\u7279\u5f81\u5bbd\u5ea6\u548c\u80fd\u91cf\u4ee3\u4ef7\u3002</li> </ul> <p>\u5c06\u8fd9\u4e24\u4e2a\u516c\u5f0f\u7ed3\u5408\u8d77\u6765\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u8981\u6c42\u89e3\u7684\u5b8c\u6574\u56db\u9636\u975e\u7ebf\u6027\u504f\u5fae\u5206\u65b9\u7a0b\u3002</p> <p>\u8bb8\u591a\u79cd\u7c7b\u7684\u7ec6\u83cc\uff0c\u5982\u5927\u80a0\u6746\u83cc\uff08E. coli\uff09\u6216\u9ecf\u83cc\uff08Myxococcus xanthus\uff09\uff0c\u5728\u8425\u517b\u4e30\u5bcc\u7684\u57f9\u517b\u57fa\u8868\u9762\u4f1a\u5f62\u6210\u9ad8\u5bc6\u5ea6\u7684\u201c\u83cc\u7fa4\u201d\u6216\u751f\u7269\u819c \u3002\u5728\u8fd9\u4e9b\u5bc6\u96c6\u7684\u7fa4\u4f53\u4e2d\uff0c\u7ec6\u83cc\u7684\u8fd0\u52a8\u4f1a\u56e0\u9891\u7e41\u7684\u7269\u7406\u78b0\u649e\u800c\u53d7\u963b\u3002\u7b26\u5408\u201c\u62e5\u6324\u51cf\u901f\u201d\u8fd9\u4e00\u6838\u5fc3\u89c4\u5219\uff0c\u4ece\u800c\u81ea\u53d1\u5730\u5206\u79bb\u6210\u9ad8\u5bc6\u5ea6\u7684\u3001\u51e0\u4e4e\u9759\u6b62\u7684\u7ec6\u83cc\u56e2\u7c07\uff08\u6db2\u6ef4\uff09\u548c\u4f4e\u5bc6\u5ea6\u7684\u3001\u5feb\u901f\u8fd0\u52a8\u7684\u201c\u6c14\u4f53\u201d\u533a\u57df\u3002</p> <p>\u5b8f\u89c2\u4e16\u754c\u7684\u76f4\u89c2\u7c7b\u6bd4\uff0c\u5982\u62e5\u6324\u7684\u4eba\u7fa4\uff08\u8d2d\u7269\u7a97\u53e3\u6548\u5e94\uff09\uff0c\u8fd9\u662fFrey\u6559\u6388\u5728\u8bb2\u5ea7\u4e2d\u63d0\u5230\u7684\u4e00\u4e2a\u7edd\u4f73\u7c7b\u6bd4 \u3002\u60f3\u8c61\u4e00\u6761\u7e41\u5fd9\u7684\u5546\u4e1a\u8857\uff0c\u5f53\u4e00\u4e2a\u6709\u8da3\u7684\u6a71\u7a97\u5438\u5f15\u4e86\u4e00\u4e9b\u4eba\u9a7b\u8db3\u89c2\u770b\u65f6\uff0c\u4ed6\u4eec\u7684\u51cf\u901f\u4f1a\u8feb\u4f7f\u540e\u9762\u7684\u4eba\u4e5f\u6162\u4e0b\u6765\u6216\u7ed5\u8def\uff0c\u4ece\u800c\u5bfc\u81f4\u8fd9\u4e2a\u533a\u57df\u7684\u4eba\u6d41\u5bc6\u5ea6\u77ac\u95f4\u589e\u9ad8\uff0c\u5f62\u6210\u4e00\u4e2a\u81ea\u53d1\u7684\u201c\u4ea4\u901a\u5835\u585e\u201d\u3002\u8fd9\u91cc\u6ca1\u6709\u201c\u5438\u5f15\u529b\u201d\uff0c\u4ec5\u4ec5\u662f\u8fd0\u52a8\u89c4\u5219\uff08\u51cf\u901f\uff09\u5bfc\u81f4\u4e86\u805a\u96c6\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#52","title":"5.2. \u6570\u503c\u65b9\u6cd5\uff1a\u6709\u9650\u5dee\u5206\u6cd5","text":"<p>\u6211\u4eec\u5c06\u5728\u4e00\u4e2a \\(N_x \\times N_y\\) \u7684\u4e8c\u7ef4\u6b63\u4ea4\u7f51\u683c\u4e0a\uff0c\u4f7f\u7528\u6709\u9650\u5dee\u5206\u6cd5\uff08Finite Difference Method\uff09\u6765\u6570\u503c\u6c42\u89e3Cahn-Hilliard\u65b9\u7a0b\u3002\u7a7a\u95f4\u70b9\u7684\u7d22\u5f15\u4e3a \\((i, j)\\)\uff0c\u65f6\u95f4\u6b65\u7684\u7d22\u5f15\u4e3a \\(n\\)\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#_2","title":"\u7a7a\u95f4\u79bb\u6563\u5316\uff1a\u4e8c\u7ef4\u62c9\u666e\u62c9\u65af\u7b97\u5b50","text":"<p>\u65b9\u7a0b\u7684\u6838\u5fc3\u662f\u62c9\u666e\u62c9\u65af\u7b97\u5b50 \\(\\nabla^2 = \\frac{\\partial^2}{\\partial x^2} + \\frac{\\partial^2}{\\partial y^2}\\)\u3002\u6211\u4eec\u4f7f\u7528\u4e8c\u9636\u4e2d\u5fc3\u5dee\u5206\uff08\u4e5f\u79f0\u4e3a\u4e94\u70b9\u6a21\u677f\uff09\u6765\u8fd1\u4f3c\u5b83\u3002\u5bf9\u4e8e\u4efb\u610f\u51fd\u6570 \\(U\\) \u5728\u683c\u70b9 \\((i, j)\\) \u4e0a\u7684\u503c \\(U_{i,j}\\)\uff0c\u5176\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u53ef\u79bb\u6563\u5316\u4e3a\uff1a</p> \\[(\\nabla^2 U)_{i,j} \\approx \\frac{U_{i+1,j} + U_{i-1,j} + U_{i,j+1} + U_{i,j-1} - 4U_{i,j}}{(\\Delta x)^2}\\] <p>\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u7a7a\u95f4\u6b65\u957f\u5728x\u548cy\u65b9\u5411\u4e0a\u662f\u76f8\u540c\u7684\uff0c\u5373 \\(\\Delta x = \\Delta y\\)\u3002\\(U_{i+1,j}\\) \u4ee3\u8868y\u65b9\u5411\u4e0b\u4e00\u4e2a\u683c\u70b9\u7684\u503c\uff0c\\(U_{i,j+1}\\) \u4ee3\u8868x\u65b9\u5411\u4e0b\u4e00\u4e2a\u683c\u70b9\u7684\u503c\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#_3","title":"\u65f6\u95f4\u79bb\u6563\u5316\uff1a\u524d\u5411\u6b27\u62c9\u6cd5","text":"<p>\u5bf9\u4e8e\u65f6\u95f4\u5bfc\u6570 \\(\\frac{\\partial g}{\\partial t}\\)\uff0c\u6211\u4eec\u4f7f\u7528\u6700\u7b80\u5355\u7684\u524d\u5411\u6b27\u62c9\u6cd5\uff1a</p> \\[\\frac{\\partial g}{\\partial t} \\bigg|_{t=t_n} \\approx \\frac{g_{i,j}^{n+1} - g_{i,j}^n}{\\Delta t}\\] <p>\u5176\u4e2d\uff0c\\(g_{i,j}^n\\) \u662f\u5bc6\u5ea6\u5728 \\((i,j)\\) \u70b9\u3001\\(n\\) \u65f6\u523b\u7684\u503c\uff0c\\(g_{i,j}^{n+1}\\) \u662f\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u503c\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#_4","title":"\u5b8c\u6574\u7684\u66f4\u65b0\u7b97\u6cd5","text":"<p>\u7ed3\u5408\u4ee5\u4e0a\u79bb\u6563\u5316\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ece \\(n\\) \u65f6\u523b\u7684\u5bc6\u5ea6\u573a \\(g^n\\) \u8ba1\u7b97\u51fa \\(n+1\\) \u65f6\u523b\u5bc6\u5ea6\u573a \\(g^{n+1}\\) \u7684\u5b8c\u6574\u7b97\u6cd5\uff1a</p> <ol> <li> <p>\u7b2c\u4e00\u6b65\uff1a\u8ba1\u7b97 \\(g^n\\) \u7684\u62c9\u666e\u62c9\u65af    \u5bf9\u4e8e\u7f51\u683c\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9 \\((i,j)\\)\uff0c\u5229\u7528\u4e94\u70b9\u6a21\u677f\u516c\u5f0f\u8ba1\u7b97 \\((\\nabla^2 g)^n_{i,j}\\)\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u6b65\uff1a\u8ba1\u7b97\u5316\u5b66\u52bf \\(\\mu^n\\)    \u5229\u7528\u4e0a\u4e00\u6b65\u7684\u7ed3\u679c\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7684\u5316\u5b66\u52bf\uff1a</p> </li> </ol> <p>$$    \\mu_{i,j}^n = f'(g_{i,j}^n) - \\kappa (\\nabla^2 g)^n_{i,j}    $$</p> <ol> <li> <p>\u7b2c\u4e09\u6b65\uff1a\u8ba1\u7b97 \\(\\mu^n\\) \u7684\u62c9\u666e\u62c9\u65af    \u518d\u6b21\u4f7f\u7528\u4e94\u70b9\u6a21\u677f\u516c\u5f0f\uff0c\u5bf9\u521a\u521a\u5f97\u5230\u7684\u5316\u5b66\u52bf\u573a \\(\\mu^n\\) \u6c42\u62c9\u666e\u62c9\u65af\uff0c\u5f97\u5230 \\((\\nabla^2 \\mu)^n_{i,j}\\)\u3002</p> </li> <li> <p>\u7b2c\u56db\u6b65\uff1a\u66f4\u65b0\u5bc6\u5ea6\u573a \\(g^{n+1}\\)    \u4f7f\u7528\u524d\u5411\u6b27\u62c9\u6cd5\u66f4\u65b0\u5bc6\u5ea6\uff1a</p> </li> </ol> <p>$$    g_{i,j}^{n+1} = g_{i,j}^n + M \\cdot \\Delta t \\cdot (\\nabla^2 \\mu)^n_{i,j}    $$</p> <p>\u6211\u4eec\u5bf9\u6574\u4e2a\u7f51\u683c\u91cd\u590d\u8fd9\u56db\u6b65\uff0c\u5373\u53ef\u5b8c\u6210\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u6f14\u5316\u3002\u4e0d\u65ad\u8fed\u4ee3\uff0c\u5c31\u80fd\u6a21\u62df\u51fa\u5b8c\u6574\u7684\u76f8\u5206\u79bb\u8fc7\u7a0b\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#53-python","title":"5.3. Python\u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport imageio\nimport os\nfrom tqdm import tqdm\n\n# --- 1. Parameter settings ---\nL = 10.0      # System domain side length\nNx = 128      # Number of spatial grid points (same in x and y directions)\ndx = L / Nx   # Spatial step size\n\n# --- Simulation total time T=20 ---\nT = 20.0\n# --- Correspondingly reduce total steps ---\nNt = 8000\ndt = T / Nt\n\n# Model parameters\nv0 = 1.0\ng_star = 2.0\ng0 = 1.2      # Average density\nM = 1.0       # Mobility\nkappa = 1e-4  # Surface tension coefficient\n\n# --- 2. Define relevant functions ---\ndef mu_bulk_func(g, v0, g_star):\n    term1 = g\n    term2 = -(3.0 / (2.0 * g_star)) * g**2\n    term3 = (2.0 / (3.0 * g_star**2)) * g**3\n    return v0**2 * (term1 + term2 + term3)\n\n# --- 3. Initialize density field ---\ng = g0 + 0.05 * (np.random.rand(Nx, Nx) - 0.5)\n\n# Frames for storing GIF and statistical plots\nframes = []\n\n# --- 4. Main simulation loop ---\nfor n in tqdm(range(Nt), desc=f\"Simulating 2D MIPS (T={T})\"):\n    g_up, g_down = np.roll(g, -1, axis=0), np.roll(g, 1, axis=0)\n    g_left, g_right = np.roll(g, -1, axis=1), np.roll(g, 1, axis=1)\n    lap_g = (g_up + g_down + g_left + g_right - 4*g) / (dx**2)\n\n    mu_bulk = mu_bulk_func(g, v0, g_star)\n    mu = mu_bulk - kappa * lap_g\n\n    mu_up, mu_down = np.roll(mu, -1, axis=0), np.roll(mu, 1, axis=0)\n    mu_left, mu_right = np.roll(mu, -1, axis=1), np.roll(mu, 1, axis=1)\n    lap_mu = (mu_up + mu_down + mu_left + mu_right - 4*mu) / (dx**2)\n\n    g = g + M * dt * lap_mu\n\n    if n % (Nt // 100) == 0:\n        frames.append(g.copy())\n\n# --- 5. Create GIF animation ---\nprint(\"\\nCreating GIF animation...\")\ntemp_dir = 'temp_frames_mips2d_short'\nos.makedirs(temp_dir, exist_ok=True)\ngif_filename = 'MIPS_2D.gif'\nfilenames = []\n\nall_data = np.concatenate([frame.flatten() for frame in frames])\nvmin = np.percentile(all_data, 0.1)\nvmax = np.percentile(all_data, 99.9)\n\nfor i, frame_data in enumerate(frames):\n    fig, ax = plt.subplots(figsize=(8, 8))\n    im = ax.imshow(frame_data, cmap='magma', vmin=vmin, vmax=vmax, interpolation='bicubic')\n    ax.set_title(f'2D MIPS: Density Field at t = {i / (len(frames)-1) * T:.2f}')\n    ax.set_xticks([]); ax.set_yticks([])\n    plt.colorbar(im, ax=ax, fraction=0.046, pad=0.04, label=\"Density g(x,y,t)\")\n\n    filename = f'{temp_dir}/frame_{i:03d}.png'\n    plt.savefig(filename)\n    filenames.append(filename)\n    plt.close(fig)\n\ngif_duration = 0.2 \nwith imageio.get_writer(gif_filename, mode='I', duration=gif_duration, loop=0) as writer:\n    for filename in tqdm(filenames, desc=\"Building GIF\"):\n        image = imageio.imread(filename)\n        writer.append_data(image)\n\nprint(f'\\nAnimation saved as {gif_filename}')\n\n# --- 6. Plot core statistics: density histogram ---\nprint(\"Creating statistical histogram plot...\")\nfig_hist, ax_hist = plt.subplots(figsize=(10, 7))\n\n\n# Select representative time points to plot\n# Change last index from 100 to 99, as list indices range from 0 to 99\nsnapshot_indices = [0, 10, 30, 99] \ncolors = plt.cm.viridis(np.linspace(0, 1, len(snapshot_indices)))\n\nfor i, frame_idx in enumerate(snapshot_indices):\n    time = frame_idx / (len(frames) - 1) * T # Corrected time calculation\n    data = frames[frame_idx].flatten()\n    ax_hist.hist(data, bins=100, density=True, alpha=0.7, \n                 label=f't = {time:.1f}', color=colors[i])\n\nax_hist.set_title('Evolution of Density Distribution during MIPS', fontsize=16)\nax_hist.set_xlabel('Density (g)', fontsize=14)\nax_hist.set_ylabel('Probability Density', fontsize=14)\nax_hist.legend()\nax_hist.grid(True, alpha=0.3)\nplt.tight_layout()\nplt.savefig('MIPS_density_histogram.png')\nplt.show()\n\nprint(f'Histogram plot saved as MIPS_density_histogram.png')\n</code></pre> <p>\u52a8\u753b\u6e05\u6670\u5730\u5c55\u793a\u4e86\u76f8\u5206\u79bb\u7684\u542f\u52a8\u8fc7\u7a0b\uff1a\u7cfb\u7edf\u4ece\u4e00\u4e2a\u51e0\u4e4e\u5747\u5300\u7684\u72b6\u6001\u5f00\u59cb\uff0c\u5185\u5728\u7684\u4e0d\u7a33\u5b9a\u6027\u8fc5\u901f\u653e\u5927\u4e86\u5fae\u5c0f\u7684\u968f\u673a\u566a\u58f0\uff0c\u5f62\u6210\u4e86\u76f8\u4e92\u4ea4\u7ec7\u7684\u3001\u7c7b\u4f3c\u8ff7\u5bab\u7684\u201c\u65cb\u8282\u7ebf\u201d\u7ed3\u6784\u3002\u5f88\u5feb\uff0c\u8fd9\u4e9b\u7ec6\u957f\u7ed3\u6784\u4f1a\u56e0\u8868\u9762\u5f20\u529b\u800c\u65ad\u88c2\u3001\u6536\u7f29\uff0c\u5f62\u6210\u8f6e\u5ed3\u6e05\u6670\u7684\u201c\u6db2\u6ef4\u201d\u72b6\u9ad8\u5bc6\u5ea6\u533a\u57df\uff0c\u6f02\u6d6e\u5728\u4f4e\u5bc6\u5ea6\u7684\u201c\u6c14\u4f53\u201d\u80cc\u666f\u4e2d\u3002</p> <p></p> <p>\\(t = 0.0\\) (\u7d2b\u8272): \u5206\u5e03\u662f\u4e00\u4e2a\u4f4d\u4e8e\u5e73\u5747\u5bc6\u5ea6 \\(g_0=1.2\\) \u7684\u5355\u4e00\u7a84\u5cf0\uff0c\u4ee3\u8868\u7cfb\u7edf\u521d\u59cb\u7684\u5747\u5300\u72b6\u6001\u3002\\(t = 2.0\\) (\u84dd\u8272): \u5206\u5e03\u8fc5\u901f\u53d8\u5bbd\u5e76\u5411\u4e24\u8fb9\u574d\u584c\uff0c\u8868\u660e\u5747\u5300\u6001\u6b63\u5728\u74e6\u89e3\uff0c\u7cfb\u7edf\u540c\u65f6\u51fa\u73b0\u4e86\u9ad8\u4e8e\u548c\u4f4e\u4e8e\u5e73\u5747\u5bc6\u5ea6\u7684\u533a\u57df\u3002\\(t = 6.1\\) (\u7eff\u8272): \u53cc\u5cf0\u7ed3\u6784\u51fa\u73b0\uff01\u8fd9\u6807\u5fd7\u7740\u76f8\u5206\u79bb\u5df2\u7ecf\u53d1\u751f\uff0c\u7cfb\u7edf\u4e2d\u660e\u786e\u5730\u5f62\u6210\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u7269\u76f8\uff1a\u4e00\u4e2a\u4f4e\u5bc6\u5ea6\u76f8\u548c\u4e00\u4e2a\u9ad8\u5bc6\u5ea6\u76f8\u3002\\(t = 20.0\\) (\u9ec4\u8272): \u53cc\u5cf0\u7ed3\u6784\u5b8c\u5168\u6210\u719f\u3002\u4e24\u4e2a\u5c16\u9510\u7684\u5cf0\u5206\u522b\u4ee3\u8868\u4e86\u7a33\u5b9a\u5b58\u5728\u7684\u201c\u6c14\u4f53\u201d\u76f8\uff08\u5bc6\u5ea6\u7ea60.7\uff09\u548c\u201c\u6db2\u4f53\u201d\u76f8\uff08\u5bc6\u5ea6\u7ea62.25\uff09\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#6","title":"6. \u4e00\u79cd\u6709\u6548\u7684\u70ed\u529b\u5b66\u63cf\u8ff0","text":"<p>MIPS\u7684\u52a8\u529b\u5b66\u8fc7\u7a0b\u867d\u7136\u590d\u6742\u4e14\u672c\u8d28\u4e0a\u662f\u975e\u5e73\u8861\u7684\uff0c\u8bfe\u5802\u6700\u540e\u6559\u6388\u63ed\u793a\uff0c\u5b83\u7684\u884c\u4e3a\u53ef\u4ee5\u88ab\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5e73\u8861\u6001\u70ed\u529b\u5b66\u81ea\u7531\u80fd\u7684\u6570\u5b66\u7ed3\u6784\u6240\u63cf\u8ff0\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#61","title":"6.1. \u6620\u5c04\u4e3a\u68af\u5ea6\u6d41","text":"<p>\u8bb2\u5ea7\u6307\u51fa\uff0c\u6709\u6548\u7c92\u5b50\u6d41 \\(J_{\\text{eff}}\\) \u53ef\u4ee5\u88ab\u91cd\u5199\u6210\u4e00\u79cd\u5728\u5e73\u8861\u6001\u8f93\u8fd0\u7406\u8bba\u4e2d\u5e38\u89c1\u7684\u5f62\u5f0f\uff1a</p> \\[J_{\\text{eff}}(x,t) = -M(g) \\partial_x \\mu_{\\text{eff}}(g)\\] <p>\u901a\u8fc7\u4e0e\u6211\u4eec\u4e4b\u524d\u63a8\u5bfc\u7684 \\(J\\) \u7684\u8868\u8fbe\u5f0f\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ef\u4ee5\u8bc6\u522b\u51fa\u4ee5\u4e0b\u4e24\u9879\uff1a</p> <ul> <li> <p>\u8fc1\u79fb\u7387\uff08Mobility\uff09\uff1a\\(M(g) = g v(g)^2\\)\u3002\u5b83\u63cf\u8ff0\u4e86\u7c92\u5b50\u5728\u53d7\u5230\u4e00\u4e2a\u7b49\u6548\"\u529b\"\uff08\u7531\u5316\u5b66\u52bf\u68af\u5ea6\u4ea7\u751f\uff09\u65f6\u79fb\u52a8\u7684\u96be\u6613\u7a0b\u5ea6\u3002</p> </li> <li> <p>\u6709\u6548\u5316\u5b66\u52bf\uff08Effective Chemical Potential\uff09\uff1a\\(\\mu_{\\text{eff}}(g) = \\log g + \\log v(g)\\)\u3002\u5728\u5e73\u8861\u6001\u70ed\u529b\u5b66\u4e2d\uff0c\u5316\u5b66\u52bf\u7684\u5dee\u5f02\u9a71\u52a8\u7c92\u5b50\u4ece\u9ad8\u5316\u5b66\u52bf\u533a\u57df\u6d41\u5411\u4f4e\u5316\u5b66\u52bf\u533a\u57df\u3002\u5728\u8fd9\u91cc\uff0c\\(\\mu_{\\text{eff}}\\) \u626e\u6f14\u4e86\u7c7b\u4f3c\u7684\u89d2\u8272\u3002</p> </li> </ul>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#62","title":"6.2. \u674e\u96c5\u666e\u8bfa\u592b\u6cdb\u51fd","text":"<p>\u5316\u5b66\u52bf\u901a\u5e38\u53ef\u4ee5\u7531\u4e00\u4e2a\u81ea\u7531\u80fd\u51fd\u6570\u5bf9\u7c92\u5b50\u6570\u6c42\u5bfc\u5f97\u5230\u3002\u7c7b\u4f3c\u5730\uff0c\u8fd9\u91cc\u7684\u6709\u6548\u5316\u5b66\u52bf \\(\\mu_{\\text{eff}}(g)\\) \u53ef\u4ee5\u88ab\u770b\u4f5c\u4e00\u4e2a\u6709\u6548\u81ea\u7531\u80fd\u6cdb\u51fd\uff08Effective Free Energy Functional\uff09\\(F_{\\text{eff}}[g]\\) \u5bf9\u5bc6\u5ea6 \\(g\\) \u7684\u6cdb\u51fd\u5bfc\u6570\u3002\u8fd9\u4e2a\u6cdb\u51fd \\(F_{\\text{eff}}[g]\\) \u4e5f\u88ab\u79f0\u4e3a\u674e\u96c5\u666e\u8bfa\u592b\u6cdb\u51fd\uff08Lyapunov Functional\uff09\u3002</p> <p>\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[F_{\\text{eff}}[g] = \\int dx \\left[ g(x) \\log g(x) - g(x) + \\int_0^g ds \\log v(s) \\right]\\] <p>\u6211\u4eec\u53ef\u4ee5\u9a8c\u8bc1\uff0c\u5bf9\u8fd9\u4e2a\u6cdb\u51fd\u6c42\u5173\u4e8e \\(g\\) \u7684\u6cdb\u51fd\u5bfc\u6570\uff0c\u786e\u5b9e\u80fd\u5f97\u5230\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49\u7684\u6709\u6548\u5316\u5b66\u52bf\uff1a</p> \\[\\mu_{\\text{eff}}(g) = \\frac{\\delta F_{\\text{eff}}}{\\delta g} = \\frac{\\partial}{\\partial g} \\left( g \\log g - g + \\int_0^g ds \\log v(s) \\right) = (\\log g + 1) - 1 + \\log v(g) = \\log g + \\log v(g)\\] <p>\u8fd9\u9a8c\u8bc1\u4e86\u6574\u4e2a\u6570\u5b66\u6846\u67b6\u7684\u81ea\u6d3d\u6027\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#63","title":"6.3. \u7cfb\u7edf\u603b\u662f\u5411\"\u5c71\u4e0b\"\u6f14\u5316","text":"<p>\u6709\u4e86\u6709\u6548\u81ea\u7531\u80fd\u6cdb\u51fd\uff0c\u6574\u4e2a\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u53ef\u4ee5\u88ab\u4f18\u96c5\u5730\u5199\u6210\u4e00\u4e2a\u68af\u5ea6\u6d41\uff08Gradient Flow\uff09\u7684\u5f62\u5f0f\uff1a</p> \\[\\partial_t g = \\partial_x \\left[ M(g) \\partial_x \\frac{\\delta F_{\\text{eff}}}{\\delta g} \\right]\\] <p>\u8fd9\u4e2a\u5f62\u5f0f\u6709\u4e00\u4e2a\u6781\u5176\u91cd\u8981\u7684\u63a8\u8bba\uff1a\u7cfb\u7edf\u5728\u6f14\u5316\u8fc7\u7a0b\u4e2d\uff0c\u5176\u6709\u6548\u81ea\u7531\u80fd \\(F_{\\text{eff}}\\) \u603b\u662f\u4e0d\u65ad\u51cf\u5c0f\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e00\u70b9\uff1a</p> \\[\\frac{dF_{\\text{eff}}}{dt} = \\int dx \\frac{\\delta F_{\\text{eff}}}{\\delta g} \\frac{\\partial g}{\\partial t} = \\int dx \\, \\mu_{\\text{eff}} \\, \\partial_t g\\] <p>\u5c06 \\(\\partial_t g\\) \u7684\u8868\u8fbe\u5f0f\u4ee3\u5165\uff1a</p> \\[\\frac{dF_{\\text{eff}}}{dt} = \\int dx \\, \\mu_{\\text{eff}} \\, \\partial_x \\left[ M(g) \\partial_x \\mu_{\\text{eff}} \\right]\\] <p>\u4f7f\u7528\u5206\u90e8\u79ef\u5206\u6cd5\uff08\u5047\u8bbe\u5468\u671f\u6027\u8fb9\u754c\u6761\u4ef6\uff09\uff1a</p> \\[\\frac{dF_{\\text{eff}}}{dt} = - \\int dx \\, (\\partial_x \\mu_{\\text{eff}}) \\left[ M(g) \\partial_x \\mu_{\\text{eff}} \\right] = - \\int dx \\, M(g) (\\partial_x \\mu_{\\text{eff}})^2\\] <p>\u7531\u4e8e\u8fc1\u79fb\u7387 \\(M(g) = g v(g)^2\\) \u603b\u662f\u975e\u8d1f\u7684\uff0c\u800c \\((\\partial_x \\mu_{\\text{eff}})^2\\) \u4e5f\u603b\u662f\u975e\u8d1f\u7684\uff0c\u6240\u4ee5\u6574\u4e2a\u79ef\u5206\u9879\u662f\u975e\u8d1f\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8bc1\u660e\u4e86\uff1a</p> \\[\\frac{dF_{\\text{eff}}}{dt} \\le 0\\] <p>\u8fd9\u4e2a\u7ed3\u679c\u544a\u8bc9\u6211\u4eec\uff0c\u5c3d\u7ba1MIPS\u662f\u4e00\u4e2a\u590d\u6742\u7684\u975e\u5e73\u8861\u52a8\u529b\u5b66\u8fc7\u7a0b\uff0c\u4f46\u5b83\u7684\u6f14\u5316\u65b9\u5411\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u5728\u4e00\u4e2a\u7531 \\(F_{\\text{eff}}\\) \u5b9a\u4e49\u7684\u6709\u6548\"\u80fd\u91cf\u666f\u89c2\"\u4e0a\u4e0b\u6ed1\u7684\u8fc7\u7a0b\u3002\u7cfb\u7edf\u4f1a\u4e0d\u65ad\u5730\u8c03\u6574\u81ea\u8eab\u6784\u578b\uff0c\u4ee5\u5bfb\u627e\u5e76\u6700\u7ec8\u8fbe\u5230\u8fd9\u4e2a\u6709\u6548\u81ea\u7531\u80fd\u7684\u6700\u5c0f\u503c\u3002\u8fd9\u4e2a\u6700\u5c0f\u503c\u5bf9\u5e94\u7684\u72b6\u6001\uff0c\u5c31\u662f\u6211\u4eec\u89c2\u5bdf\u5230\u7684\u7a33\u5b9a\u7684\u3001\u76f8\u5206\u79bb\u7684\u7a33\u6001\u3002\u8fd9\u4e5f\u89e3\u91ca\u4e86\u6a21\u62df\u4e2d\u89c2\u5bdf\u5230\u7684\"\u7c97\u7c92\u5316\"\u73b0\u8c61\uff1a\u5c0f\u6db2\u6ef4\u5408\u5e76\u6210\u5927\u6db2\u6ef4\uff0c\u662f\u4e3a\u4e86\u51cf\u5c11\u603b\u7684\"\u76f8\u754c\u9762\"\uff0c\u4ece\u800c\u964d\u4f4e\u7cfb\u7edf\u7684\u603b\u6709\u6548\u81ea\u7531\u80fd\uff0c\u8fd9\u4e0e\u5e73\u8861\u6001\u7cfb\u7edf\u4e2d\u7684\u5965\u65af\u7279\u74e6\u5c14\u5fb7\u719f\u5316\uff08Ostwald ripening\uff09\u8fc7\u7a0b\u975e\u5e38\u76f8\u4f3c\u3002</p>"},{"location":"zh/notes/16.%20Schnitzer%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8F%8D%E5%B8%B8%E6%89%A9%E6%95%A3%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%AF%B1%E5%AF%BC%E7%9B%B8%E5%88%86%E7%A6%BB/#_5","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u4ece\u4e00\u4e2a\u63cf\u8ff0\u5355\u4e2a\u7c92\u5b50\"\u8dd1\u52a8-\u7ffb\u6eda\"\u8fd0\u52a8\u7684\u5fae\u89c2\u6a21\u578b\uff08Schnitzer\u6a21\u578b\uff09\u51fa\u53d1\u3002\u901a\u8fc7\u7c97\u7c92\u5316\u6280\u672f\uff08\u7edd\u70ed\u6d88\u9664\uff09\uff0c\u6211\u4eec\u63a8\u5bfc\u51fa\u4e86\u63cf\u8ff0\u7c92\u5b50\u7fa4\u4f53\u5bc6\u5ea6\u7684\u5b8f\u89c2\u52a8\u529b\u5b66\u65b9\u7a0b\uff08\u6709\u6548Fokker-Planck\u65b9\u7a0b\uff09\u3002</p> <p>\u901a\u8fc7\u5f15\u5165\u4e00\u4e2a\u7269\u7406\u4e0a\u5408\u7406\u7684\u53cd\u9988\u673a\u5236\uff08\u62e5\u6324\u51cf\u901f\uff09\uff0c\u8fd9\u4e2a\u5b8f\u89c2\u65b9\u7a0b\u9884\u8a00\u4e86\u4e00\u79cd\u52a8\u529b\u5b66\u4e0d\u7a33\u5b9a\u6027\uff08\u53cd\u5e38\u6269\u6563\uff09\uff0c\u5e76\u6700\u7ec8\u5bfc\u81f4\u4e86\u58ee\u89c2\u7684\u96c6\u4f53\u73b0\u8c61\uff08\u8fd0\u52a8\u8bf1\u5bfc\u76f8\u5206\u79bb\uff09\u3002\u6700\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u6574\u4e2a\u590d\u6742\u7684\u975e\u5e73\u8861\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u88ab\u4e00\u4e2a\u4f18\u7f8e\u7684\u6709\u6548\u70ed\u529b\u5b66\u6846\u67b6\uff08\u674e\u96c5\u666e\u8bfa\u592b\u6cdb\u51fd\uff09\u6240\u63cf\u8ff0\uff0c\u7cfb\u7edf\u7684\u6f14\u5316\u5982\u540c\u5728\u4e00\u4e2a\u80fd\u91cf\u666f\u89c2\u4e0a\u5bfb\u627e\u6700\u4f4e\u70b9\u3002</p> <p>\u8fd0\u52a8\u8bf1\u5bfc\u76f8\u5206\u79bb\u662f\u6d3b\u6027\u7269\u8d28\u7269\u7406\u5b66\u4e2d\u6700\u57fa\u672c\u3001\u6700\u666e\u9002\u7684\u81ea\u7ec4\u7ec7\u673a\u5236\u4e4b\u4e00\uff0c\u5b83\u5e7f\u6cdb\u5b58\u5728\u4e8e\u4ece\u7ec6\u83cc\u83cc\u843d\u3001\u5408\u6210\u6d3b\u6027\u80f6\u4f53\u5230\u673a\u5668\u4eba\u96c6\u7fa4\u7b49\u5404\u79cd\u7cfb\u7edf\u4e2d\u3002\u672c\u8bb2\u6240\u4ecb\u7ecd\u7684\u7406\u8bba\u5de5\u5177\uff0c\u4e3a\u7406\u89e3\u8fd9\u4e9b\u8ff7\u4eba\u7684\u81ea\u7ec4\u7ec7\u73b0\u8c61\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u57fa\u7840\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/","title":"\u5f15\u8a00","text":"<p>\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\uff0cErwin Frey \u6559\u6388\u5df2\u7ecf\u63a2\u8ba8\u4e86\u5982\u4f55\u4f7f\u7528\u4e3b\u65b9\u7a0b\u548c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u6765\u63cf\u8ff0\u968f\u673a\u8fc7\u7a0b\u3002\u8fd9\u4e9b\u5de5\u5177\u975e\u5e38\u5f3a\u5927\uff0c\u5b83\u4eec\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7cfb\u7edf\u5728\u7ed9\u5b9a\u65f6\u95f4\u5904\u4e8e\u67d0\u4e2a\u7279\u5b9a\u72b6\u6001\u7684\u6982\u7387\u5206\u5e03\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u3002\u8fd9\u79cd\u89c6\u89d2\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\"\u7cfb\u7efc\u89c6\u89d2\"\uff0c\u56e0\u4e3a\u5b83\u5173\u6ce8\u7684\u662f\u7531\u65e0\u6570\u4e2a\u76f8\u540c\u7cfb\u7edf\u6784\u6210\u7684\u7406\u8bba\u96c6\u5408\u7684\u5e73\u5747\u884c\u4e3a\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5e76\u6ca1\u6709\u544a\u8bc9\u6211\u4eec\u5355\u4e2a\u7c92\u5b50\u2014\u2014\u6bd4\u5982\u5728\u6db2\u4f53\u4e2d\u60ac\u6d6e\u7684\u4e00\u4e2a\u82b1\u7c89\u7c92\u2014\u2014\u6240\u7ecf\u5386\u7684\u5177\u4f53\u3001\u66f2\u6298\u7684\u8fd0\u52a8\u8f68\u8ff9\u662f\u600e\u6837\u7684\u3002\u672c\u8bb2\u5ea7\u5c06\u6807\u5fd7\u7740\u4e00\u4e2a\u5173\u952e\u7684\u89c6\u89d2\u8f6c\u53d8\uff1a\u6211\u4eec\u5c06\u4ece\u63cf\u8ff0\u6982\u7387\u7684\u5e73\u6ed1\u6f14\u5316\uff0c\u8f6c\u5411\u6784\u5efa\u4e00\u4e2a\u80fd\u591f\u63cf\u7ed8\u5355\u4e2a\u7c92\u5b50\u968f\u673a\u8f68\u8ff9\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u3002\u8fd9\u4e2a\u6838\u5fc3\u5de5\u5177\u5c31\u662f\u6717\u4e4b\u4e07\u65b9\u7a0b (Langevin Equation)\uff0c\u5b83\u5c06\u725b\u987f\u529b\u5b66\u7684\u786e\u5b9a\u6027\u601d\u60f3\u4e0e\u7edf\u8ba1\u7269\u7406\u7684\u968f\u673a\u6027\u5de7\u5999\u5730\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4e3a\u6211\u4eec\u7406\u89e3\u548c\u6a21\u62df\u5904\u4e8e\u70ed\u73af\u5883\u4e2d\u7684\u7c92\u5b50\u884c\u4e3a\u63d0\u4f9b\u4e86\u5168\u65b0\u7684\u3001\u66f4\u4e3a\u76f4\u89c2\u7684\u9014\u5f84\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#1","title":"1. \u4ece\u7cfb\u7efc\u5230\u8f68\u8ff9\uff1a\u56de\u987e\u4e0e\u65b0\u89c6\u89d2","text":""},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#11","title":"1.1. \u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u56de\u987e","text":"<p>\u4e3a\u4e86\u6784\u5efa\u63cf\u8ff0\u5355\u7c92\u5b50\u8f68\u8ff9\u7684\u7406\u8bba\uff0c\u6211\u4eec\u9996\u5148\u56de\u987e\u4e00\u4e0b\u4e4b\u524d\u63cf\u8ff0\u968f\u673a\u8fc7\u7a0b\u7684\u6846\u67b6\u3002</p> <ul> <li>\u79bb\u6563\u72b6\u6001\u7a7a\u95f4 (Discrete State Space)</li> </ul> <p>\u5bf9\u4e8e\u72b6\u6001\u53ef\u4ee5\u88ab\u79bb\u6563\u8ba1\u6570\u7684\u7cfb\u7edf\uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u533a\u57df\u5185\u7684\u5206\u5b50\u6570\u91cf\uff09\uff0c\u5176\u6982\u7387\u6f14\u5316\u7531\u4e3b\u65b9\u7a0b (Master Equation) \u63cf\u8ff0\uff1a</p> <p>$$   \\frac{dP(t)}{dt} = QP(t)   $$</p> <p>\u8fd9\u91cc\uff0c\\(P(t)\\) \u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5176\u5206\u91cf\u8868\u793a\u7cfb\u7edf\u5904\u4e8e\u5404\u4e2a\u79bb\u6563\u72b6\u6001\u7684\u6982\u7387\uff0c\\(Q\\) \u662f\u5305\u542b\u72b6\u6001\u95f4\u8dc3\u8fc1\u901f\u7387\u7684\u77e9\u9635\u3002\u8fd9\u4e2a\u65b9\u7a0b\u63cf\u8ff0\u4e86\u6574\u4e2a\u6982\u7387\u5206\u5e03\uff08\u5373\u7cfb\u7efc\uff09\u7684\u786e\u5b9a\u6027\u6f14\u5316\u3002\u5982\u679c\u6211\u4eec\u60f3\u6a21\u62df\u5355\u4e2a\u7cfb\u7edf\u7684\u5177\u4f53\u968f\u673a\u5386\u53f2\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u50cf\u5409\u83b1\u65af\u76ae\u7b97\u6cd5 (Gillespie Algorithm) \u8fd9\u6837\u7684\u65b9\u6cd5\u6765\u751f\u6210\u4e00\u6761\u968f\u673a\u8f68\u8ff9\u3002</p> <ul> <li>\u8fde\u7eed\u72b6\u6001\u7a7a\u95f4 (Continuous State Space)</li> </ul> <p>\u5bf9\u4e8e\u72b6\u6001\u662f\u8fde\u7eed\u53d8\u91cf\u7684\u7cfb\u7edf\uff08\u4f8b\u5982\uff0c\u7c92\u5b50\u7684\u4f4d\u7f6e\u6216\u901f\u5ea6\uff09\uff0c\u5176\u6982\u7387\u6f14\u5316\u7531\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b (Fokker-Planck Equation) \u63cf\u8ff0\u3002\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u5b83\u53ef\u4ee5\u88ab\u5206\u89e3\u4e3a\u51e0\u4e2a\u90e8\u5206\uff1a</p> <p>$$   \\frac{\\partial P(x,t)}{\\partial t} = \\text{\"\u6f02\u79fb (DRIFT)\"} + \\text{\"\u6269\u6563 (DIFFUSION)\"} + \\text{\"\u8df3\u8dc3 (JUMP)\"}   $$</p> <p>\u8fd9\u4e2a\u65b9\u7a0b\u540c\u6837\u63cf\u8ff0\u4e86\u6982\u7387\u5bc6\u5ea6 \\(P(x,t)\\) \u8fd9\u4e2a\u7cfb\u7efc\u91cf\u7684\u786e\u5b9a\u6027\u6f14\u5316\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u4e00\u4e2a\u7531\u5927\u91cf\u7c92\u5b50\u6784\u6210\u7684\"\u6982\u7387\u4e91\"\u4f1a\u5982\u4f55\u6f02\u79fb\u548c\u6269\u6563\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#12","title":"1.2. \u63d0\u51fa\u6838\u5fc3\u95ee\u9898","text":"<p>\u65e0\u8bba\u662f\u4e3b\u65b9\u7a0b\u8fd8\u662f\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff0c\u5b83\u4eec\u90fd\u56de\u7b54\u4e86\"\u5728\u65f6\u95f4 \\(t\\)\uff0c\u7c92\u5b50\u53ef\u80fd\u5728\u54ea\u91cc\uff1f\"\u8fd9\u4e2a\u95ee\u9898\u3002\u7136\u800c\uff0c\u5b83\u4eec\u5e76\u6ca1\u6709\u76f4\u63a5\u56de\u7b54\"\u67d0\u4e2a\u7279\u5b9a\u7c92\u5b50\u4ece\u65f6\u95f40\u5230\u65f6\u95f4 \\(t\\) \u662f\u5982\u4f55\u8fd0\u52a8\u7684\uff1f\"\u3002\u6211\u4eec\u89c2\u5bdf\u5230\u7684\u5355\u4e2a\u5e03\u6717\u7c92\u5b50\u7684\u8f68\u8ff9\u662f\u4e00\u6761\u8fde\u7eed\u4f46\u5904\u5904\"\u62d0\u89d2\"\u7684\u3001\u4e0d\u53ef\u9884\u6d4b\u7684\u8def\u5f84\u3002</p> <p></p> <p>\u8fd9\u5c31\u5f15\u51fa\u4e86\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u95ee\u9898\uff1a\u6211\u4eec\u80fd\u5426\u4e3a\u5355\u4e2a\u968f\u673a\u7c92\u5b50\u5199\u51fa\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u8fd0\u52a8\u65b9\u7a0b\uff1f\u5373\uff0c\u6211\u4eec\u80fd\u5426\u786e\u5b9a\u4e0b\u9762\u8fd9\u4e2a\u65b9\u7a0b\u4e2d\u7684\u672a\u77e5\u9879\uff1f</p> \\[ \\frac{dx(t)}{dt} = ? \\] <p>\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\uff0c\u6b63\u662f\u7531\u4fdd\u7f57\u00b7\u6717\u4e4b\u4e07 (Paul Langevin) \u572820\u4e16\u7eaa\u521d\u63d0\u51fa\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u3002</p> <p>\u6717\u4e4b\u4e07\u65b9\u7a0b\u7531\u6cd5\u56fd\u7269\u7406\u5b66\u5bb6\u4fdd\u7f57\u00b7\u6717\u4e4b\u4e07\u4e8e1908\u5e74\u63d0\u51fa\uff0c\u6700\u521d\u7528\u4e8e\u63cf\u8ff0\u5e03\u6717\u8fd0\u52a8\u4e2d\u60ac\u6d6e\u7c92\u5b50\u5728\u6d41\u4f53\u4e2d\u53d7\u5230\u5206\u5b50\u78b0\u649e\u800c\u4ea7\u751f\u7684\u65e0\u89c4\u5219\u8fd0\u52a8\uff0c\u4e3a\u7edf\u8ba1\u529b\u5b66\u548c\u968f\u673a\u8fc7\u7a0b\u7814\u7a76\u5960\u5b9a\u4e86\u57fa\u7840\u3002\u5176\u6838\u5fc3\u672c\u8d28\u662f\u4e00\u4e2a\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff0c\u901a\u8fc7\u7ed3\u5408\u786e\u5b9a\u6027\u529b\uff08\u5982\u7c98\u6ede\u963b\u529b\uff09\u548c\u968f\u673a\u566a\u58f0\u529b\uff08\u9ad8\u65af\u767d\u566a\u58f0\uff09\uff0c\u523b\u753b\u4e86\u5fae\u89c2\u7c92\u5b50\u5728\u52bf\u80fd\u573a\u4e2d\u53d7\u8d8b\u52bf\u529b\u3001\u6469\u64e6\u529b\u4e0e\u968f\u673a\u529b\u5171\u540c\u4f5c\u7528\u7684\u52a8\u529b\u5b66\u884c\u4e3a\uff0c\u5e76\u6ee1\u8db3\u6da8\u843d\u8017\u6563\u5b9a\u7406\uff0c\u63ed\u793a\u4e86\u7cfb\u7edf\u4ece\u975e\u5e73\u8861\u6001\u8d8b\u5411\u70ed\u5e73\u8861\u7684\u8fc7\u7a0b\u3002</p> <p>\u8be5\u65b9\u7a0b\u7684\u5e94\u7528\u8303\u56f4\u6781\u5e7f\uff1a\u4ece\u7269\u7406\u5b66\u7684\u5e03\u6717\u8fd0\u52a8\u6a21\u62df\u548c\u5206\u5b50\u52a8\u529b\u5b66\u7814\u7a76\uff0c\u5230\u5316\u5b66\u4e2d\u7684\u53cd\u5e94\u901f\u7387\u5efa\u6a21\uff0c\u518d\u5230\u751f\u7269\u5b66\u4e2d\u7684\u86cb\u767d\u8d28\u6298\u53e0\u52a8\u529b\u5b66\u5206\u6790\uff1b\u6b64\u5916\uff0c\u5b83\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u4e3a\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u63d0\u4f9b\u4e86\u7406\u8bba\u6846\u67b6\uff0c\u5e76\u5728\u91d1\u878d\u6570\u5b66\u4e2d\u7528\u4e8e\u98ce\u9669\u8bc4\u4f30\u548c\u80a1\u4ef7\u6ce2\u52a8\u6a21\u62df\u3002</p> <p>\u4ece\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u5230\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u8f6c\u53d8\uff0c\u4e0d\u4ec5\u4ec5\u662f\u6570\u5b66\u5de5\u5177\u7684\u6539\u53d8\uff0c\u66f4\u662f\u4e00\u79cd\u57fa\u7840\u89c2\u5ff5\u4e0a\u7684\u6df1\u523b\u6539\u53d8\u3002\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u672c\u8eab\u5bf9\u4e8e\u6982\u7387\u5206\u5e03 \\(P(x,t)\\) \u800c\u8a00\u662f\u786e\u5b9a\u6027\u7684\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u521d\u59cb\u5206\u5e03\uff0c\u5176\u672a\u6765\u7684\u6f14\u5316\u662f\u5b8c\u5168\u786e\u5b9a\u7684\u3002\u800c\u6717\u4e4b\u4e07\u65b9\u7a0b\u5bf9\u4e8e\u5355\u4e2a\u7c92\u5b50\u7684\u8f68\u8ff9 \\(x(t)\\) \u800c\u8a00\uff0c\u5176\u672c\u8d28\u662f\u968f\u673a\u7684\uff08stochastic\uff09\u3002\u8fd9\u4e24\u8005\u5e76\u975e\u76f8\u4e92\u72ec\u7acb\uff0c\u800c\u662f\u540c\u4e00\u679a\u786c\u5e01\u7684\u4e24\u9762\u3002\u4e00\u4e2a\u63cf\u8ff0\u4e86\u968f\u673a\u884c\u8d70\u8005\u7684\"\u4e91\"\u5982\u4f55\u6f14\u5316\uff0c\u53e6\u4e00\u4e2a\u5219\u63cf\u7ed8\u4e86\u5355\u4e2a\u884c\u8d70\u8005\u7684\u6bcf\u4e00\u6b65\u3002\u6b63\u5982\u6211\u4eec\u5c06\u5728\u540e\u9762\u770b\u5230\u7684\uff0c\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e2d\u7684\u53c2\u6570\uff08\u5982\u9a71\u52a8\u529b\u548c\u566a\u58f0\u5f3a\u5ea6\uff09\u4e0e\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u4e2d\u7684\u7cfb\u6570\uff08\u6f02\u79fb\u9879\u548c\u6269\u6563\u9879\uff09\u4e4b\u95f4\u5b58\u5728\u7740\u6df1\u523b\u800c\u7cbe\u786e\u7684\u6570\u5b66\u8054\u7cfb\u3002\u7406\u89e3\u8fd9\u79cd\u5bf9\u5076\u6027\u662f\u638c\u63e1\u968f\u673a\u8fc7\u7a0b\u7406\u8bba\u7684\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#2","title":"2. \u4e3a\u5e03\u6717\u7c92\u5b50\u5efa\u6a21\uff1a\u968f\u673a\u529b\u7684\u5fc5\u8981\u6027","text":""},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#21","title":"2.1. \u6734\u7d20\u7684\u5b8f\u89c2\u6a21\u578b","text":"<p>\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2a\u5177\u4f53\u7684\u7269\u7406\u7cfb\u7edf\u5f00\u59cb\uff1a\u4e00\u4e2a\u60ac\u6d6e\u5728\u6db2\u4f53\u4e2d\u7684\u5fae\u89c2\u7c92\u5b50\uff0c\u5373\u7ecf\u5178\u7684\u5e03\u6717\u7c92\u5b50 (Brownian Particle)\u3002\u6700\u7b80\u5355\u7684\u5efa\u6a21\u601d\u8def\u662f\u76f4\u63a5\u5e94\u7528\u6211\u4eec\u719f\u6089\u7684\u5b8f\u89c2\u7269\u7406\u5b9a\u5f8b\u3002\u4e00\u4e2a\u5728\u7c98\u6027\u6d41\u4f53\u4e2d\u8fd0\u52a8\u7684\u7269\u4f53\u4f1a\u53d7\u5230\u963b\u529b\uff0c\u8be5\u963b\u529b\u901a\u5e38\u4e0e\u901f\u5ea6\u6210\u6b63\u6bd4\uff08\u65af\u6258\u514b\u65af\u963b\u529b\uff09\u3002\u6839\u636e\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\uff1a</p> \\[ m\\frac{dv(t)}{dt} = -m\\xi v(t) \\] <p>\u8fd9\u91cc\uff0c\\(m\\) \u662f\u7c92\u5b50\u7684\u8d28\u91cf\uff0c\\(v(t)\\) \u662f\u5176\u901f\u5ea6\u3002\u6559\u6388\u5728\u4ed6\u7684\u677f\u4e66\u4e2d\u4f7f\u7528\u4e86 \\(m\\xi\\) \u6765\u8868\u793a\u6469\u64e6\u7cfb\u6570\uff0c\u8fd9\u4e2a\u91cf\u901a\u5e38\u4e5f\u88ab\u8bb0\u4e3a \\(\\gamma\\)\u3002\u56e0\u6b64\uff0c\\(\\gamma = m\\xi\\) \u662f\u63cf\u8ff0\u963b\u529b\u5927\u5c0f\u7684\u6469\u64e6\u7cfb\u6570\u3002\u5bf9\u4e8e\u4e00\u4e2a\u534a\u5f84\u4e3a \\(R\\) \u7684\u7403\u5f62\u7c92\u5b50\uff0c\u5728\u7c98\u5ea6\u4e3a \\(\\eta\\) \u7684\u6d41\u4f53\u4e2d\uff0c\u8fd9\u4e2a\u7cfb\u6570\u7531\u65af\u6258\u514b\u65af\u516c\u5f0f\u7ed9\u51fa\uff1a</p> \\[ \\gamma = 6\\pi\\eta R \\] <p>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\uff0c\u5176\u89e3\u4e3a\uff1a</p> \\[ v(t) = v_0 e^{-\\xi t} \\] <p>\u8fd9\u4e2a\u6a21\u578b\u9884\u8a00\uff0c\u65e0\u8bba\u7c92\u5b50\u7684\u521d\u901f\u5ea6 \\(v_0\\) \u662f\u591a\u5c11\uff0c\u5b83\u7684\u901f\u5ea6\u90fd\u4f1a\u5728 \\(\\xi^{-1}\\) \u8fd9\u4e2a\u7279\u5f81\u65f6\u95f4\u5c3a\u5ea6\u4e0a\u6307\u6570\u8870\u51cf\u81f3\u96f6\u3002\u8fd9\u4e2a\u6734\u7d20\u7684\u5b8f\u89c2\u6a21\u578b\uff0c\u5176\u6838\u5fc3\u7269\u7406\u610f\u4e49\u662f\u8bd5\u56fe\u7528\u7ecf\u5178\u7684\u3001\u786e\u5b9a\u6027\u7684\u725b\u987f\u529b\u5b66\u6765\u63cf\u8ff0\u4e00\u4e2a\u672c\u8d28\u4e0a\u7531\u5fae\u89c2\u968f\u673a\u6027\u4e3b\u5bfc\u7684\u7cfb\u7edf\u3002\u5b83\u51c6\u786e\u6293\u4f4f\u4e86\u201c\u200b\u200b\u6469\u64e6\u8017\u6563\u80fd\u91cf\u201d\u8fd9\u4e00\u5173\u952e\u7269\u7406\u673a\u5236\u3002</p> <p>\u7136\u800c\uff0c\u8fd9\u4e2a\u6a21\u578b\u7684\u6839\u672c\u5c40\u9650\u6027\u5728\u4e8e\uff0c\u5b83\u5b8c\u5168\u5ffd\u7565\u4e86\u6d41\u4f53\u5206\u5b50\u70ed\u8fd0\u52a8\u5e26\u6765\u7684\u968f\u673a\u649e\u51fb\u3002\u5b83\u9884\u8a00\u7c92\u5b50\u4f1a\u505c\u6b62\uff0c\u4f46\u8fd9\u4e0e\u6211\u4eec\u5728\u663e\u5fae\u955c\u4e0b\u5b9e\u9645\u89c2\u5bdf\u5230\u7684\u6c38\u4e0d\u505c\u6b47\u7684\u5e03\u6717\u8fd0\u52a8\u76f8\u77db\u76fe\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#22","title":"2.2. \u4e0e\u70ed\u529b\u5b66\u7684\u77db\u76fe","text":"<p>\u8fd9\u4e2a\u6734\u7d20\u6a21\u578b\u7684\u7ed3\u8bba\u2014\u2014\u5373\u6db2\u4f53\u4e2d\u7684\u7c92\u5b50\u6700\u7ec8\u4f1a\u9759\u6b62\u4e0b\u6765\u2014\u2014\u663e\u7136\u4e0e\u6211\u4eec\u7684\u89c2\u5bdf\u548c\u7269\u7406\u76f4\u89c9\u76f8\u6096\u3002\u4e00\u4e2a\u5904\u4e8e\u6709\u6e29\u5ea6\u7684\u6db2\u4f53\u4e2d\u7684\u82b1\u7c89\u7c92\u6c38\u8fdc\u4e0d\u4f1a\u771f\u6b63\u5730\"\u9759\u6b62\"\uff0c\u5b83\u603b\u662f\u5728\u4e0d\u505c\u5730\u505a\u65e0\u89c4\u5219\u8fd0\u52a8\u3002</p> <p>\u8fd9\u91cc\u7684\u5173\u952e\u5728\u4e8e\u70ed\u529b\u5b66\u3002\u6839\u636e\u7edf\u8ba1\u529b\u5b66\u4e2d\u7684\u80fd\u91cf\u5747\u5206\u5b9a\u7406 (Equipartition Theorem)\uff0c\u5728\u70ed\u5e73\u8861\u72b6\u6001\u4e0b\uff0c\u7cfb\u7edf\u6bcf\u4e2a\u81ea\u7531\u5ea6\u7684\u5e73\u5747\u52a8\u80fd\u90fd\u7b49\u4e8e \\(\\frac{1}{2}k_B T\\)\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u8fd0\u52a8\u7684\u7c92\u5b50\uff0c\u5b83\u6709\u4e09\u4e2a\u5e73\u52a8\u81ea\u7531\u5ea6\uff0c\u56e0\u6b64\u5176\u5e73\u5747\u52a8\u80fd\u4e3a\uff1a</p> \\[ \\langle E_{kin} \\rangle = \\frac{1}{2}m\\langle v^2 \\rangle = \\frac{3}{2}k_B T \\] <p>\u5176\u4e2d\uff0c\\(k_B\\) \u662f\u73bb\u5c14\u5179\u66fc\u5e38\u6570\uff0c\\(T\\) \u662f\u73af\u5883\u7684\u7edd\u5bf9\u6e29\u5ea6\u3002</p> <p>\u8fd9\u4e2a\u57fa\u672c\u5b9a\u7406\u8981\u6c42\uff0c\u53ea\u8981\u6e29\u5ea6 \\(T &gt; 0\\)\uff0c\u7c92\u5b50\u7684\u5e73\u5747\u901f\u7387\u5e73\u65b9 \\(\\langle v^2 \\rangle\\) \u5c31\u5fc5\u987b\u662f\u4e00\u4e2a\u975e\u96f6\u7684\u5b9a\u503c\u3002\u5176\u65b9\u5747\u6839\u901f\u7387\uff0c\u5373\u70ed\u901f\u7387 (thermal velocity)\uff0c\u4e3a\uff1a</p> \\[ \\sqrt{\\langle v^2 \\rangle} = \\sqrt{\\frac{3k_B T}{m}} \\] <p>\u8fd9\u5c31\u4ea7\u751f\u4e86\u4e00\u4e2a\u5c16\u9510\u7684\u77db\u76fe\uff1a\u6734\u7d20\u7684\u786e\u5b9a\u6027\u6a21\u578b\u9884\u8a00 \\(v \\to 0\\)\uff0c\u800c\u70ed\u529b\u5b66\u5b9a\u5f8b\u5219\u65ad\u8a00 \\(\\langle v^2 \\rangle\\) \u5fc5\u987b\u4fdd\u6301\u4e00\u4e2a\u7531\u6e29\u5ea6\u51b3\u5b9a\u7684\u975e\u96f6\u503c\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#23","title":"2.3. \u6717\u4e4b\u4e07\u7684\u5047\u8bf4\uff1a\u4e00\u4e2a\u6da8\u843d\u529b","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u77db\u76fe\uff0c\u6717\u4e4b\u4e07\u63d0\u51fa\u4e86\u4e00\u4e2a\u5929\u624d\u7684\u5047\u8bbe\uff1a\u9664\u4e86\u5b8f\u89c2\u7684\u7c98\u6027\u963b\u529b\u5916\uff0c\u7c92\u5b50\u8fd8\u53d7\u5230\u4e00\u4e2a\u989d\u5916\u7684\u3001\u5feb\u901f\u53d8\u5316\u7684\u968f\u673a\u529b\uff0c\u8bb0\u4e3a \\(\\eta(t)\\)\u3002\u8fd9\u4e2a\u529b\u4ee3\u8868\u4e86\u6765\u81ea\u5468\u56f4\u65e0\u6570\u4e2a\u6db2\u4f53\u5206\u5b50\u7684\u3001\u6c38\u4e0d\u505c\u6b47\u7684\u3001\u65e0\u89c4\u5219\u7684\u78b0\u649e\u3002</p> <p>\u5c06\u8fd9\u4e2a\u968f\u673a\u529b\u52a0\u5165\u8fd0\u52a8\u65b9\u7a0b\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u63cf\u8ff0\u5e03\u6717\u7c92\u5b50\u901f\u5ea6\u6f14\u5316\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\uff1a</p> \\[ m\\frac{dv(t)}{dt} = -m\\xi v(t) + \\eta(t) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u4f18\u7f8e\u5730\u4f53\u73b0\u4e86\u6d41\u4f53\u5bf9\u5e03\u6717\u7c92\u5b50\u7684\u53cc\u91cd\u4f5c\u7528\uff1a</p> <ol> <li> <p>\u8017\u6563 (Dissipation)\uff1a\u901a\u8fc7\u7c98\u6027\u963b\u529b\u9879 \\(-m\\xi v(t)\\)\uff0c\u6d41\u4f53\u4e0d\u65ad\u5730\u6d88\u8017\u7c92\u5b50\u7684\u52a8\u80fd\uff0c\u4f7f\u5176\u51cf\u901f\u3002</p> </li> <li> <p>\u6da8\u843d (Fluctuation)\uff1a\u901a\u8fc7\u968f\u673a\u529b\u9879 \\(\\eta(t)\\)\uff0c\u6d41\u4f53\u53c8\u4e0d\u65ad\u5730\u5c06\u81ea\u8eab\u7684\u70ed\u80fd\uff08\u5206\u5b50\u65e0\u89c4\u5219\u8fd0\u52a8\u7684\u52a8\u80fd\uff09\u4f20\u9012\u7ed9\u7c92\u5b50\uff0c\u4f7f\u5176\u52a0\u901f\u3002</p> </li> </ol> <p>\u5f15\u5165\u968f\u673a\u529b \\(\\eta(t)\\) \u5e76\u975e\u4e00\u4e2a\u7b80\u5355\u7684\"\u6253\u8865\u4e01\"\u5f0f\u7684\u4fee\u6b63\u3002\u5b83\u8574\u542b\u4e86\u4e00\u4e2a\u6781\u4e3a\u6df1\u523b\u7684\u7269\u7406\u601d\u60f3\uff1a\u5bfc\u81f4\u80fd\u91cf\u8017\u6563\uff08\u6469\u64e6\u529b\uff09\u7684\u5fae\u89c2\u673a\u5236\u4e0e\u5bfc\u81f4\u70ed\u6da8\u843d\uff08\u968f\u673a\u529b\uff09\u7684\u5fae\u89c2\u673a\u5236\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002\u6469\u64e6\u529b\u548c\u968f\u673a\u7684\"\u8e22\u529b\"\u90fd\u6e90\u4e8e\u7c92\u5b50\u4e0e\u6d41\u4f53\u5206\u5b50\u7684\u78b0\u649e\u3002\u5b8f\u89c2\u7684\u963b\u529b \\(-m\\xi v\\) \u662f\u5f53\u7c92\u5b50\u4ee5\u901f\u5ea6 \\(v\\) \u8fd0\u52a8\u65f6\uff0c\u6240\u53d7\u5230\u7684\u65e0\u6570\u6b21\u5206\u5b50\u78b0\u649e\u7684\u5e73\u5747\u6548\u679c\uff1b\u800c\u968f\u673a\u529b \\(\\eta(t)\\) \u5219\u662f\u8fd9\u4e9b\u78b0\u649e\u529b\u504f\u79bb\u5176\u5e73\u5747\u503c\u7684\u6da8\u843d\u90e8\u5206\u3002\u56e0\u6b64\uff0c\u8017\u6563\u548c\u6da8\u843d\u5e76\u975e\u4e24\u4e2a\u72ec\u7acb\u7684\u7269\u7406\u73b0\u8c61\uff0c\u5b83\u4eec\u662f\u540c\u4e00\u4e2a\u5fae\u89c2\u8fc7\u7a0b\u7684\u4e24\u4e2a\u4e0d\u540c\u4fa7\u9762\u2014\u2014\u5e73\u5747\u6548\u5e94\u548c\u6da8\u843d\u6548\u5e94\u3002\u8fd9\u4e00\u8ba4\u8bc6\u6b63\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u63a8\u5bfc\u7684\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7684\u6838\u5fc3\u601d\u60f3\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#3-","title":"3. \u6717\u4e4b\u4e07\u65b9\u7a0b\u4e0e\u6da8\u843d-\u8017\u6563\u5b9a\u7406","text":"<p>\u6211\u4eec\u65e0\u6cd5\u7cbe\u786e\u77e5\u9053\u968f\u673a\u529b \\(\\eta(t)\\) \u5728\u6bcf\u4e00\u65f6\u523b\u7684\u5177\u4f53\u503c\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u63cf\u8ff0\u5b83\u7684\u7edf\u8ba1\u6027\u8d28\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#31","title":"3.1. \u566a\u58f0\u7684\u7edf\u8ba1\u7279\u6027","text":"<ul> <li>\u96f6\u5747\u503c (Zero Mean)\uff1a\u4ece\u4efb\u4f55\u65b9\u5411\u800c\u6765\u7684\u5206\u5b50\u78b0\u649e\u6982\u7387\u90fd\u662f\u5747\u7b49\u7684\uff0c\u56e0\u6b64\u5728\u957f\u65f6\u95f4\u5e73\u5747\u4e0b\uff0c\u968f\u673a\u529b\u7684\u5e73\u5747\u6548\u679c\u4e3a\u96f6\u3002\u8fd9\u4fdd\u8bc1\u4e86\u5982\u679c\u6211\u4eec\u5bf9\u8bb8\u591a\u6761\u8f68\u8ff9\u8fdb\u884c\u5e73\u5747\uff0c\u5c06\u80fd\u591f\u6062\u590d\u90a3\u4e2a\u6ca1\u6709\u968f\u673a\u529b\u7684\u786e\u5b9a\u6027\u65b9\u7a0b\u3002\u7528\u6570\u5b66\u8bed\u8a00\u8868\u8fbe\u4e3a\uff1a</li> </ul> <p>$$   \\langle \\eta(t) \\rangle = 0   $$</p> <ul> <li>Delta-\u5173\u8054\uff08\u767d\u566a\u58f0\uff09\uff1a\u5206\u5b50\u78b0\u649e\u53d1\u751f\u7684\u65f6\u95f4\u5c3a\u5ea6\uff08\u76ae\u79d2\u7ea7\uff09\u8fdc\u5c0f\u4e8e\u5e03\u6717\u7c92\u5b50\u8fd0\u52a8\u7684\u5178\u578b\u65f6\u95f4\u5c3a\u5ea6\uff08\u5fae\u79d2\u7ea7\u6216\u66f4\u957f\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e2a\u7406\u60f3\u5316\u7684\u5047\u8bbe\uff1a\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u65f6\u523b\u7684\u968f\u673a\u529b\u662f\u5b8c\u5168\u4e0d\u76f8\u5173\u7684\u3002\u8fd9\u79cd\u5728\u65f6\u95f4\u4e0a\u6ca1\u6709\u4efb\u4f55\u5173\u8054\u7684\u566a\u58f0\u88ab\u79f0\u4e3a\u9ad8\u65af\u767d\u566a\u58f0 (Gaussian White Noise)\u3002</li> </ul> <p>\u5176\u5173\u8054\u51fd\u6570\uff08correlation function\uff09\u7684\u6570\u5b66\u5f62\u5f0f\u4e3a\uff1a</p> <p>$$   \\langle \\eta_i(t) \\eta_j(t') \\rangle = 2\\Gamma \\delta_{ij} \\delta(t-t')   $$</p> <p>\u8ba9\u6211\u4eec\u6765\u9010\u9879\u89e3\u91ca\u8fd9\u4e2a\u91cd\u8981\u7684\u516c\u5f0f\uff1a</p> <ul> <li> <p>\\(\\Gamma\\)\uff1a\u566a\u58f0\u5f3a\u5ea6 (Noise Strength)\u3002\u5b83\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u63cf\u8ff0\u4e86\u968f\u673a\u529b\u7684\u6da8\u843d\u5e45\u5ea6\u6709\u591a\u5927\u3002\u76ee\u524d\uff0c\u5b83\u7684\u503c\u8fd8\u662f\u672a\u77e5\u7684\u3002</p> </li> <li> <p>\\(\\delta_{ij}\\)\uff1a\u514b\u7f57\u5185\u514b Delta \u7b26\u53f7 (Kronecker delta)\u3002\u5b83\u8868\u793a\u5f53 \\(i=j\\) \u65f6\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002\u8fd9\u610f\u5473\u7740 \\(x\\) \u65b9\u5411\u7684\u968f\u673a\u529b\u4e0e \\(y\\) \u6216 \\(z\\) \u65b9\u5411\u7684\u968f\u673a\u529b\u662f\u4e0d\u76f8\u5173\u7684\u3002</p> </li> <li> <p>\\(\\delta(t-t')\\)\uff1a\u72c4\u62c9\u514b Delta \u51fd\u6570 (Dirac delta function)\u3002\u5b83\u8868\u793a\u53ea\u6709\u5728 \\(t=t'\\) \u8fd9\u540c\u4e00\u4e2a\u77ac\u95f4\uff0c\u968f\u673a\u529b\u624d\u4e0e\u81ea\u8eab\u76f8\u5173\uff0c\u5728\u4efb\u4f55 \\(t \\neq t'\\) \u7684\u60c5\u51b5\u4e0b\uff0c\u76f8\u5173\u6027\u90fd\u4e3a\u96f6\u3002</p> </li> </ul>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#32","title":"3.2. \u6c42\u89e3\u901f\u5ea6","text":"<p>\u6717\u4e4b\u4e07\u65b9\u7a0b\u662f\u4e00\u4e2a\u7ebf\u6027\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u4e00\u4e2a\u7531\u968f\u673a\u529b \\(\\eta(t)\\) \u9a71\u52a8\u7684\u4e00\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\u3002\u5176\u5f62\u5f0f\u89e3\u53ef\u4ee5\u5199\u6210\u4e00\u4e2a\u79ef\u5206\u65b9\u7a0b\uff1a</p> \\[ v(t) = v_0 e^{-\\xi t} + \\frac{1}{m}\\int_0^t d\\tau e^{-\\xi(t-\\tau)} \\eta(\\tau) \\] <p>\u4e3a\u4e86\u6570\u5b66\u5904\u7406\u4e0a\u7684\u65b9\u4fbf\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u767d\u566a\u58f0 \\(\\lambda(t) = \\frac{1}{\\sqrt{2\\Gamma}}\\eta(t)\\)\uff0c\u5b83\u7684\u5173\u8054\u51fd\u6570\u66f4\u7b80\u5355\uff1a\\(\\langle \\lambda_i(t)\\lambda_j(t') \\rangle = \\delta_{ij}\\delta(t-t')\\)\u3002\u4e8e\u662f\uff0c\u901f\u5ea6\u7684\u89e3\u53ef\u4ee5\u5199\u4e3a\uff1a</p> \\[ v(t) = v_0 e^{-\\xi t} + \\frac{\\sqrt{2\\Gamma}}{m} \\int_0^t d\\tau e^{-\\xi(t-\\tau)} \\lambda(\\tau) \\]"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#33","title":"3.3. \u901f\u5ea6\u81ea\u5173\u8054\u51fd\u6570","text":"<p>\u4e3a\u4e86\u5c06\u6211\u4eec\u7684\u52a8\u529b\u5b66\u6a21\u578b\u4e0e\u70ed\u529b\u5b66\u8054\u7cfb\u8d77\u6765\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97 \\(\\langle v^2(t) \\rangle\\)\u3002\u4e00\u4e2a\u66f4\u901a\u7528\u4e14\u529f\u80fd\u66f4\u5f3a\u5927\u7684\u7269\u7406\u91cf\u662f\u901f\u5ea6\u81ea\u5173\u8054\u51fd\u6570 (Velocity Autocorrelation Function, VACF)\uff0c\u8bb0\u4e3a \\(\\langle v_i(t) v_j(t') \\rangle\\)\u3002\u5b83\u8861\u91cf\u4e86\u7c92\u5b50\u5728 \\(t\\) \u65f6\u523b\u7684\u901f\u5ea6\u4e0e\u5728\u53e6\u4e00\u4e2a\u65f6\u523b \\(t'\\) \u7684\u901f\u5ea6\u4e4b\u95f4\u7684\u5173\u8054\u7a0b\u5ea6\u3002</p> <p>\u6211\u4eec\u901a\u8fc7\u5c06\u901f\u5ea6\u7684\u89e3\u4ee3\u5165 \\(\\langle v_i(t) v_j(t') \\rangle\\) \u5e76\u53d6\u7cfb\u7efc\u5e73\u5747\u6765\u8ba1\u7b97\u5b83\u3002\u8fd9\u4e2a\u8ba1\u7b97\u8fc7\u7a0b\u5728\u8bb2\u5ea7\u7684\u677f\u4e66\u4e2d\u6709\u8be6\u7ec6\u7684\u63a8\u5bfc\u3002\u8ba1\u7b97\u4e2d\u5305\u542b\u56db\u9879\uff0c\u5176\u4e2d\u4e24\u9879\u4ea4\u53c9\u9879\u7531\u4e8e \\(\\langle \\lambda(\\tau) \\rangle = 0\\) \u800c\u6d88\u5931\u3002\u5269\u4e0b\u4e24\u9879\uff0c\u4e00\u9879\u662f\u521d\u901f\u5ea6\u7684\u8870\u51cf\u9879\uff0c\u53e6\u4e00\u9879\u662f\u566a\u58f0\u8d21\u732e\u7684\u53cc\u91cd\u79ef\u5206\u9879\uff1a</p> \\[ \\langle v_i(t) v_j(t') \\rangle = v_0^i v_0^j e^{-\\xi(t+t')} + \\frac{2\\Gamma}{m^2}\\int_0^t d\\tau \\int_0^{t'} d\\tau' \\langle \\lambda_i(\\tau) \\lambda_j(\\tau') \\rangle e^{-\\xi(t-\\tau)} e^{-\\xi(t'-\\tau')} \\] <p>\u5229\u7528\u767d\u566a\u58f0\u7684\u6838\u5fc3\u6027\u8d28 \\(\\langle \\lambda_i(\\tau) \\lambda_j(\\tau') \\rangle = \\delta_{ij}\\delta(\\tau-\\tau')\\)\uff0c\u53cc\u91cd\u79ef\u5206\u53ef\u4ee5\u88ab\u7b80\u5316\u4e3a\u4e00\u91cd\u79ef\u5206\uff0c\u6700\u7ec8\u5f97\u5230\uff1a</p> \\[ \\langle v_i(t) v_j(t') \\rangle = \\left( v_{0i} v_{0j} - \\frac{\\Gamma}{\\xi m^2} \\delta_{ij} \\right) e^{-\\xi (t + t')} + \\frac{\\Gamma}{\\xi m^2} \\delta_{ij} e^{-\\xi |t - t'|} \\]"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#34-","title":"3.4. \u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7684\u63a8\u5bfc","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u6765\u8003\u5bdf\u7cfb\u7edf\u8fbe\u5230\u70ed\u5e73\u8861\u540e\u7684\u884c\u4e3a\u3002\u5728\u957f\u65f6\u95f4\u6781\u9650\u4e0b\uff08\\(t, t' \\gg \\xi^{-1}\\)\uff09\uff0c\u7cfb\u7edf\u4f1a\"\u5fd8\u8bb0\"\u5176\u521d\u59cb\u901f\u5ea6 \\(v_0\\)\u3002\u6b64\u65f6\uff0c\u4e0a\u5f0f\u4e2d\u5305\u542b \\(e^{-\\xi(t+t')}\\) \u7684\u7b2c\u4e00\u9879\u4f1a\u8870\u51cf\u81f3\u96f6\uff0c\u6211\u4eec\u5f97\u5230\u7a33\u6001\u4e0b\u7684\u901f\u5ea6\u81ea\u5173\u8054\u51fd\u6570\uff1a</p> <p>$$ \\langle v_i(t) v_j(t') \\rangle_{\\text{stat}} = \\frac{\\Gamma}{\\xi m^2} \\delta_{ij} e^{-\\xi |t - t'|} $$ \u8fd9\u4e2a\u7ed3\u679c\u544a\u8bc9\u6211\u4eec\uff0c\u5373\u4f7f\u5728\u7a33\u6001\u4e0b\uff0c\u901f\u5ea6\u7684\u5173\u8054\u4e5f\u5e76\u975e\u77ac\u95f4\u6d88\u5931\uff0c\u800c\u662f\u968f\u7740\u65f6\u95f4\u5dee \\(|t-t'|\\) \u7684\u589e\u5927\u800c\u6307\u6570\u8870\u51cf\uff0c\u5176\u7279\u5f81\u65f6\u95f4\u5c31\u662f\u901f\u5ea6\u7684\u5f1b\u8c6b\u65f6\u95f4 \\(\\xi^{-1}\\)\u3002</p> <p>\u73b0\u5728\u662f\u6700\u5173\u952e\u7684\u4e00\u6b65\u3002\u6211\u4eec\u4ee4 \\(t=t'\\)\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4efb\u610f\u65f6\u523b\u7a33\u6001\u4e0b\u7684\u901f\u5ea6\u5e73\u65b9\u5747\u503c\uff1a</p> \\[ \\langle v_i(t) v_i(t) \\rangle = \\frac{\\Gamma}{\\xi m^2} \\] <p>\u5bf9\u4e8e\u4e09\u7ef4\u7a7a\u95f4\uff0c\u603b\u7684\u901f\u5ea6\u5e73\u65b9\u5747\u503c\u4e3a\u4e09\u4e2a\u5206\u91cf\u4e4b\u548c\uff1a</p> <p>$$ \\langle v^2(t) \\rangle = \\sum_{i=1}^{3} \\langle v_i(t) v_i(t) \\rangle = 3 \\frac{\\Gamma}{\\xi m^2} $$ \u6700\u540e\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u4ece\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\u6a21\u578b\u63a8\u5bfc\u51fa\u7684\u7ed3\u679c\uff0c\u4e0e\u4ece\u80fd\u91cf\u5747\u5206\u5b9a\u7406\u5f97\u51fa\u7684\u70ed\u529b\u5b66\u8981\u6c42 \\(\\langle v^2 \\rangle = \\frac{3k_B T}{m}\\) \u76f8\u7b49\u540c\uff1a</p> <p>$$ \\frac{3 \\Gamma}{\\xi m^2} = \\frac{3 k_B T}{m} \\Rightarrow \\Gamma = m \\xi k_B T = \\gamma k_B T $$ \u8fd9\u5c31\u662f\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u6210\u679c\u4e4b\u4e00\uff1a\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Fluctuation-Dissipation Theorem, FDT)\u3002</p> <p>\u8fd9\u4e2a\u5b9a\u7406\u7684\u7269\u7406\u610f\u4e49\u6781\u4e3a\u6df1\u523b\uff1a\u5b83\u660e\u786e\u6307\u51fa\uff0c\u63cf\u8ff0\u968f\u673a\u529b\u6da8\u843d\u5e45\u5ea6\u7684\u566a\u58f0\u5f3a\u5ea6 \\(\\Gamma\\) \u5e76\u4e0d\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u3001\u9700\u8981\u989d\u5916\u6d4b\u91cf\u7684\u53c2\u6570\u3002\u5b83\u5b8c\u5168\u7531\u4e24\u4e2a\u6211\u4eec\u5df2\u77e5\u7684\u91cf\u6240\u51b3\u5b9a\uff1a\u63cf\u8ff0\u80fd\u91cf\u8017\u6563\u7684\u6469\u64e6\u7cfb\u6570 (\\(m\\xi = \\gamma\\)) \u548c\u63cf\u8ff0\u7cfb\u7edf\u70ed\u80fd\u7684\u6e29\u5ea6 (\\(k_B T\\))\u3002\u6da8\u843d\u4e0e\u8017\u6563\uff0c\u8fd9\u4e24\u4e2a\u770b\u4f3c\u5bf9\u7acb\u7684\u8fc7\u7a0b\uff0c\u88ab\u4e00\u4e2a\u7b80\u6d01\u800c\u666e\u9002\u7684\u516c\u5f0f\u7d27\u5bc6\u5730\u8054\u7cfb\u5728\u4e86\u4e00\u8d77\u3002</p> <p>\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u540e\u7eed\u5185\u5bb9\uff0c\u4e0b\u8868\u603b\u7ed3\u4e86\u8fd9\u8282\u8bfe\u4e2d\u51fa\u73b0\u7684\u5173\u952e\u7269\u7406\u53c2\u6570\u3002</p> \u7b26\u53f7 \u540d\u79f0 \u7269\u7406\u610f\u4e49 \\(m\\) \u8d28\u91cf \u5e03\u6717\u7c92\u5b50\u7684\u60ef\u6027\u3002 \\(v(t)\\) \u901f\u5ea6 \u7c92\u5b50\u7684\u77ac\u65f6\u901f\u5ea6\u3002 \\(\\xi\\) \u963b\u5c3c\u7387 \u5355\u4f4d\u8d28\u91cf\u7684\u6469\u64e6\u7cfb\u6570 (\\(\\gamma / m\\))\uff0c\u51b3\u5b9a\u4e86\u901f\u5ea6\u5f1b\u8c6b\u7684\u65f6\u95f4\u5c3a\u5ea6 \\(\\xi^{-1}\\)\u3002 \\(\\gamma = m\\xi\\) \u6469\u64e6\u7cfb\u6570 \u8861\u91cf\u7c98\u6027\u963b\u529b\u5927\u5c0f\u7684\u7269\u7406\u91cf\u3002\u5bf9\u4e8e\u7403\u4f53\uff0c\\(\\gamma = 6\\pi\\eta R\\)\u3002 \\(\\eta(t)\\) \u968f\u673a\u529b \u7531\u5206\u5b50\u78b0\u649e\u4ea7\u751f\u7684\u3001\u4ee3\u8868\u70ed\u6da8\u843d\u7684\u968f\u673a\u529b\u3002 \\(\\Gamma\\) \u566a\u58f0\u5f3a\u5ea6 \u968f\u673a\u529b\u5173\u8054\u51fd\u6570\u7684\u5e45\u5ea6\uff0c\\(\\langle \\eta(t)\\eta(t') \\rangle \\propto \\Gamma\\)\u3002 \\(k_B\\) \u73bb\u5c14\u5179\u66fc\u5e38\u6570 \u8fde\u63a5\u6e29\u5ea6\u4e0e\u80fd\u91cf\u7684\u57fa\u672c\u7269\u7406\u5e38\u6570\u3002 \\(T\\) \u7edd\u5bf9\u6e29\u5ea6 \u8861\u91cf\u6d41\u4f53\u5206\u5b50\u5e73\u5747\u52a8\u80fd\u7684\u7269\u7406\u91cf\u3002 \\(D\\) \u6269\u6563\u7cfb\u6570 (\u5c06\u5728\u7b2c4\u8282\u5f15\u5165) \u8861\u91cf\u7c92\u5b50\u6269\u6563\u5feb\u6162\u7684\u7269\u7406\u91cf\u3002"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#4","title":"4. \u5747\u65b9\u4f4d\u79fb\uff1a\u4ece\u5f39\u9053\u5f0f\u8fd0\u52a8\u5230\u6269\u6563\u8fd0\u52a8","text":"<p>\u6211\u4eec\u5df2\u7ecf\u5b8c\u6574\u5730\u63cf\u8ff0\u4e86\u5e03\u6717\u7c92\u5b50\u7684\u901f\u5ea6\u3002\u73b0\u5728\uff0c\u6211\u4eec\u8f6c\u5411\u63cf\u8ff0\u5176\u4f4d\u7f6e\u7684\u53d8\u5316\uff0c\u8fd9\u5728\u5b9e\u9a8c\u4e0a\u66f4\u5bb9\u6613\u89c2\u6d4b\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#41","title":"4.1. \u8ba1\u7b97\u5747\u65b9\u4f4d\u79fb","text":"<p>\u7c92\u5b50\u7684\u4f4d\u79fb\u77e2\u91cf\u5b9a\u4e49\u4e3a\u901f\u5ea6\u5bf9\u65f6\u95f4\u7684\u79ef\u5206\uff1a</p> \\[\\Delta x(t) = x(t) - x(0) = \\int_0^t v(s) ds\\] <p>\u6211\u4eec\u6700\u5173\u5fc3\u7684\u7edf\u8ba1\u91cf\u662f\u5747\u65b9\u4f4d\u79fb (Mean Squared Displacement, MSD)\uff0c\u5373\u4f4d\u79fb\u5927\u5c0f\u5e73\u65b9\u7684\u7cfb\u7efc\u5e73\u5747\u503c\uff1a</p> \\[\\langle |\\Delta x(t)|^2 \\rangle = \\left\\langle \\left(\\int_0^t v(s) ds\\right) \\cdot \\left(\\int_0^t v(s') ds'\\right) \\right\\rangle = \\int_0^t ds \\int_0^t ds' \\langle v(s) \\cdot v(s') \\rangle\\] <p>\u6211\u4eec\u5c06\u7a33\u6001\u4e0b\u7684\u901f\u5ea6\u81ea\u5173\u8054\u51fd\u6570 \\(\\langle \\vec{v}(s) \\cdot \\vec{v}(s') \\rangle = \\sum_{i} \\langle v_i(s) v_i(s') \\rangle = 3 \\frac{\\Gamma}{\\xi m^2} e^{-\\xi |s - s'|}\\) \u4ee3\u5165\u3002\u5229\u7528\u6da8\u843d-\u8017\u6563\u5b9a\u7406 \\(\\Gamma = m\\xi k_B T\\)\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[ \\langle \\vec{v}(s) \\cdot \\vec{v}(s') \\rangle = 3 \\frac{k_B T}{m} e^{-\\xi |s - s'|} \\] <p>\u5c06\u6b64\u5f0f\u4ee3\u5165\u53cc\u91cd\u79ef\u5206\u5e76\u6c42\u89e3\uff0c\u7ecf\u8fc7\u4e00\u756a\u8ba1\u7b97\uff0c\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7684MSD\u8868\u8fbe\u5f0f\uff1a</p> \\[\\langle |\\Delta x(t)|^2 \\rangle = \\frac{6k_B T}{m\\xi} \\left[t - \\frac{1}{\\xi}(1-e^{-\\xi t})\\right]\\]"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#42","title":"4.2. \u8fd0\u52a8\u7684\u4e24\u79cd\u6a21\u5f0f","text":"<p>\u8fd9\u4e2aMSD\u516c\u5f0f\u5305\u542b\u4e86\u4e30\u5bcc\u7684\u7269\u7406\u5185\u5bb9\u3002\u901a\u8fc7\u5206\u6790\u5176\u5728\u4e0d\u540c\u65f6\u95f4\u5c3a\u5ea6\u4e0b\u7684\u6781\u9650\u884c\u4e3a\uff0c\u6211\u4eec\u53ef\u4ee5\u63ed\u793a\u5e03\u6717\u8fd0\u52a8\u7684\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u7684\u6a21\u5f0f\u3002</p> <ul> <li>\u77ed\u65f6\u6781\u9650\uff08\u5f39\u9053\u5f0f\u8fd0\u52a8\uff09</li> </ul> <p>\u5f53\u65f6\u95f4 \\(t\\) \u8fdc\u5c0f\u4e8e\u901f\u5ea6\u5f1b\u8c6b\u65f6\u95f4 \\(\\xi^{-1}\\) (\\(t \\ll \\xi^{-1}\\)) \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6307\u6570\u9879\u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\uff1a\\(e^{-\\xi t} \\approx 1 - \\xi t + \\frac{1}{2}(\\xi t)^2 - \\cdots\\)\u3002\u4ee3\u5165MSD\u516c\u5f0f\uff0c\u6211\u4eec\u53d1\u73b0\uff1a</p> <p>$$   \\langle |\\Delta x(t)|^2 \\rangle \\approx \\frac{6k_B T}{m\\xi} \\left[t - \\frac{1}{\\xi}\\left(1-(1-\\xi t + \\frac{1}{2}(\\xi t)^2)\\right)\\right] = \\frac{3k_B T}{m} t^2   $$</p> <p>\u6ce8\u610f\u5230 \\(\\langle v^2 \\rangle = \\frac{3k_B T}{m}\\)\uff0c\u6240\u4ee5 \\(\\langle |\\Delta x(t)|^2 \\rangle \\approx \\langle v^2 \\rangle t^2\\)\u3002</p> <p>\u7269\u7406\u610f\u4e49\uff1a\u5728\u6781\u77ed\u7684\u65f6\u95f4\u5c3a\u5ea6\u5185\uff0c\u7c92\u5b50\u8fd8\u6ca1\u6709\u6765\u5f97\u53ca\u4e0e\u8db3\u591f\u591a\u7684\u6d41\u4f53\u5206\u5b50\u78b0\u649e\u6765\u6539\u53d8\u5176\u8fd0\u52a8\u65b9\u5411\u548c\u901f\u7387\u3002\u5b83\u7684\u8fd0\u52a8\u4e3b\u8981\u7531\u5176\u81ea\u8eab\u7684\u60ef\u6027\u4e3b\u5bfc\uff0c\u5c31\u50cf\u4e00\u9897\u5fae\u578b\u5b50\u5f39\u4e00\u6837\u505a\u76f4\u7ebf\u8fd0\u52a8\uff0c\u4f4d\u79fb\u7ea6\u7b49\u4e8e\u521d\u901f\u5ea6\u4e58\u4ee5\u65f6\u95f4\u3002\u8fd9\u79cd\u8fd0\u52a8\u6a21\u5f0f\u88ab\u79f0\u4e3a\u5f39\u9053\u5f0f\u8fd0\u52a8 (ballistic motion)\uff0c\u5176\u7279\u5f81\u662fMSD\u4e0e \\(t^2\\) \u6210\u6b63\u6bd4\u3002</p> <ul> <li>\u957f\u65f6\u6781\u9650\uff08\u6269\u6563\u8fd0\u52a8\uff09</li> </ul> <p>\u5f53\u65f6\u95f4 \\(t\\) \u8fdc\u5927\u4e8e\u901f\u5ea6\u5f1b\u8c6b\u65f6\u95f4 \\(\\xi^{-1}\\) (\\(t \\gg \\xi^{-1}\\)) \u65f6\uff0c\u6307\u6570\u9879 \\(e^{-\\xi t}\\) \u8d8b\u8fd1\u4e8e\u96f6\u3002\u6b64\u65f6MSD\u516c\u5f0f\u7b80\u5316\u4e3a\uff1a</p> <p>$$   \\langle |\\Delta x(t)|^2 \\rangle \\approx \\frac{6k_B T}{m\\xi} t   $$</p> <p>\u7269\u7406\u610f\u4e49\uff1a\u5728\u8db3\u591f\u957f\u7684\u65f6\u95f4\u5c3a\u5ea6\u4e0a\uff0c\u7c92\u5b50\u7684\u521d\u59cb\u901f\u5ea6\u4fe1\u606f\u5df2\u7ecf\u88ab\u65e0\u6570\u6b21\u7684\u968f\u673a\u78b0\u649e\u5b8c\u5168\"\u62b9\u53bb\"\u4e86\u3002\u5b83\u7684\u8fd0\u52a8\u8f68\u8ff9\u53d8\u6210\u4e86\u4e00\u7cfb\u5217\u65e0\u89c4\u5219\u7684\u3001\u4e0d\u76f8\u5173\u7684\u6b65\u4f10\uff0c\u5373\u968f\u673a\u884c\u8d70 (random walk)\u3002\u8fd9\u662f\u6269\u6563\u8fd0\u52a8 (diffusive motion) \u7684\u5178\u578b\u7279\u5f81\uff0c\u5176MSD\u4e0e\u65f6\u95f4 \\(t\\) \u6210\u7ebf\u6027\u5173\u7cfb\u3002</p> <p>\u6574\u4e2aMSD\u66f2\u7ebf\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6570\u5b66\u7ed3\u679c\uff0c\u5b83\u66f4\u50cf\u662f\u4e00\u4e2a\u8bb0\u5f55\u4e86\u7c92\u5b50\u4e0e\u73af\u5883\u76f8\u4e92\u4f5c\u7528\u7684\"\u52a8\u529b\u5b66\u6307\u7eb9\"\u3002\u5728MSD\u5bf9\u65f6\u95f4\u7684\u53cc\u5bf9\u6570\u56fe\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u5230\u4e00\u6761\u66f2\u7ebf\uff0c\u5176\u659c\u7387\u4ece\u77ed\u65f6\u95f4\u533a\u76842\u5e73\u6ed1\u5730\u8fc7\u6e21\u5230\u957f\u65f6\u95f4\u533a\u76841\u3002\u8fd9\u4e2a\u659c\u7387\u7684\u53d8\u5316\uff0c\u76f4\u89c2\u5730\u5c55\u793a\u4e86\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4e3b\u5bfc\u7c92\u5b50\u8fd0\u52a8\u7684\u7269\u7406\u673a\u5236\u4ece\u60ef\u6027\u8f6c\u53d8\u4e3a\u6469\u64e6\u529b\u7684\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u8f6c\u53d8\u7684\u53d1\u751f\uff0c\u6070\u597d\u5c31\u5728\u901f\u5ea6\u5f1b\u8c6b\u65f6\u95f4 \\(\\tau_v = \\xi^{-1} = m/\\gamma\\) \u9644\u8fd1\u3002\u56e0\u6b64\uff0c\u8fd9\u6761\u66f2\u7ebf\u751f\u52a8\u5730\u8bb2\u8ff0\u4e86\u4e00\u4e2a\u4ece\"\u60ef\u6027\u4e16\u754c\"\u5230\"\u6469\u64e6\u4e3b\u5bfc\u4e16\u754c\"\u7684\u5b8c\u6574\u6545\u4e8b\u3002</p> <p></p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#43-","title":"4.3. \u65af\u6258\u514b\u65af-\u7231\u56e0\u65af\u5766\u5173\u7cfb","text":"<p>\u5728\u6269\u6563\u7406\u8bba\u4e2d\uff0c\u6269\u6563\u7cfb\u6570 \\(D\\) \u901a\u5e38\u901a\u8fc7MSD\u7684\u957f\u65f6\u95f4\u884c\u4e3a\u6765\u5b9a\u4e49\u3002\u5728 \\(d\\) \u7ef4\u7a7a\u95f4\u4e2d\uff0c\u5176\u5b9a\u4e49\u4e3a\uff1a</p> \\[\\langle |\\Delta x(t)|^2 \\rangle = 2dDt\\] <p>\u6211\u4eec\u5c06\u8fd9\u4e2a\u5b9a\u4e49\u4e0e\u6211\u4eec\u5728\u4e09\u7ef4\u7a7a\u95f4(\\(d=3\\))\u4e2d\u63a8\u5bfc\u51fa\u7684\u957f\u65f6\u6781\u9650\u7ed3\u679c\u8fdb\u884c\u6bd4\u8f83\uff1a</p> \\[2(3)Dt = \\frac{6k_B T}{m\\xi} t\\] <p>\u4e24\u8fb9\u6d88\u53bb \\(6t\\)\uff0c\u6211\u4eec\u7acb\u523b\u5f97\u5230\u4e86\u4e00\u4e2a\u6781\u4e3a\u91cd\u8981\u7684\u5173\u7cfb\u5f0f\uff1a</p> \\[D = \\frac{k_B T}{m\\xi} = \\frac{k_B T}{\\gamma}\\] <p>\u8fd9\u5c31\u662f\u8457\u540d\u7684\u65af\u6258\u514b\u65af-\u7231\u56e0\u65af\u5766\u5173\u7cfb (Stokes-Einstein Relation)\u3002\u5b83\u5c06\u4e00\u4e2a\u5b8f\u89c2\u7684\u8f93\u8fd0\u6027\u8d28\u2014\u2014\u6269\u6563\u7cfb\u6570 \\(D\\)\uff08\u63cf\u8ff0\u7269\u8d28\u6269\u6563\u7684\u5feb\u6162\uff09\u2014\u2014\u4e0e\u7cfb\u7edf\u7684\u5fae\u89c2\u6027\u8d28\u2014\u2014\u6e29\u5ea6 \\(T\\) \u548c\u6469\u64e6\u7cfb\u6570 \\(\\gamma\\)\u2014\u2014\u8054\u7cfb\u4e86\u8d77\u6765\u3002\u8fd9\u4e2a\u5173\u7cfb\u662f\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u57fa\u77f3\u4e4b\u4e00\uff0c\u5b83\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u89c2\u6d4b\u5b8f\u89c2\u7684\u6269\u6563\u73b0\u8c61\u6765\u63a8\u65ad\u5fae\u89c2\u4e16\u754c\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u5206\u5b50\u7684\u5c3a\u5bf8\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#5-python","title":"5. \u7528Python\u6a21\u62df\u5e03\u6717\u7c92\u5b50","text":"<p>\u73b0\u5728\u6211\u4eec\u901a\u8fc7\u8ba1\u7b97\u673a\u6a21\u62df\u76f4\u89c2\u5730\u611f\u53d7\u5927\u91cf\u7c92\u5b50\u7684\u96c6\u4f53\u6269\u6563\uff0c\u5e76\u5b9a\u91cf\u9a8c\u8bc1\u6211\u4eec\u7406\u8bba\u7684\u6b63\u786e\u6027\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#51-","title":"5.1. \u6570\u503c\u65b9\u6cd5\uff1a\u6b27\u62c9-\u4e38\u5c71\u683c\u5f0f","text":"<p>\u7531\u4e8e\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e2d\u5305\u542b\u4e00\u4e2a\u6211\u4eec\u65e0\u6cd5\u9884\u77e5\u7684\u968f\u673a\u9879 \\(\\eta(t)\\)\uff0c\u56e0\u6b64\u65e0\u6cd5\u50cf\u666e\u901a\u5fae\u5206\u65b9\u7a0b\u90a3\u6837\u6c42\u51fa\u7279\u5b9a\u8f68\u8ff9\u7684\u89e3\u6790\u89e3\u3002\u6211\u4eec\u5fc5\u987b\u501f\u52a9\u6570\u503c\u65b9\u6cd5\u3002</p> <p>\u5bf9\u4e8e\u968f\u673a\u5fae\u5206\u65b9\u7a0b (SDEs)\uff0c\u6700\u7b80\u5355\u7684\u6570\u503c\u79ef\u5206\u65b9\u6cd5\u662f\u6b27\u62c9-\u4e38\u5c71 (Euler-Maruyama) \u65b9\u6cd5\u3002\u5b83\u662f\u6211\u4eec\u719f\u6089\u7684\u6c42\u89e3\u5e38\u5fae\u5206\u65b9\u7a0b\u7684\u6b27\u62c9\u6cd5\u7684\u4e00\u4e2a\u76f4\u63a5\u63a8\u5e7f\u3002\u6211\u4eec\u5c06\u65f6\u95f4\u548c\u53d8\u91cf\u79bb\u6563\u5316\uff0c\u65f6\u95f4\u6b65\u957f\u4e3a \\(\\Delta t\\)\u3002\u4f4d\u7f6e\u548c\u901f\u5ea6\u7684\u66f4\u65b0\u89c4\u5219\u5982\u4e0b\uff1a</p> \\[x_{n+1} = x_n + v_n \\Delta t\\] \\[m(v_{n+1} - v_n) = -m\\xi v_n \\Delta t + \\int_{t_n}^{t_{n+1}} \\eta(\\tau) d\\tau\\] <p>\u8fd9\u91cc\u7684\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5904\u7406\u566a\u58f0\u7684\u79ef\u5206\u9879 \\(\\int_{t_n}^{t_{n+1}} \\eta(\\tau) d\\tau\\)\u3002\u7531\u4e8e\u767d\u566a\u58f0\u7684delta-\u5173\u8054\u7279\u6027\uff0c\u8fd9\u4e2a\u79ef\u5206\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5176\u6807\u51c6\u5dee\u7684\u6807\u5ea6\u4e0d\u662f \\(\\Delta t\\)\uff0c\u800c\u662f \\(\\sqrt{\\Delta t}\\)\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8fd9\u4e2a\u79ef\u5206\u9879\u53ef\u4ee5\u88ab\u4e00\u4e2a\u5747\u503c\u4e3a0\u3001\u65b9\u5dee\u4e3a \\(2\\Gamma\\Delta t\\) \u7684\u9ad8\u65af\u968f\u673a\u6570\u6765\u8fd1\u4f3c\u3002</p> <p>\u56e0\u6b64\uff0c\u901f\u5ea6\u7684\u6700\u7ec8\u66f4\u65b0\u8fed\u4ee3\u683c\u5f0f\u4e3a\uff1a</p> \\[v_{n+1} = v_n - \\xi v_n \\Delta t + \\frac{\\sqrt{2\\Gamma\\Delta t}}{m} \\cdot N(0,1)\\] <p>\u5176\u4e2d\uff0c\\(N(0,1)\\) \u662f\u4e00\u4e2a\u5206\u91cf\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff08\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\uff09\u4e2d\u62bd\u53d6\u7684\u968f\u673a\u5411\u91cf\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#52-python","title":"5.2. Python \u5b9e\u73b0","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u3001\u5e26\u6709\u8be6\u7ec6\u6ce8\u91ca\u7684Python\u811a\u672c\uff0c\u7528\u4e8e\u6a21\u62df\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u591a\u4e2a\u5e03\u6717\u7c92\u5b50\u7684\u8fd0\u52a8\u3002\u5b83\u5c06\u9996\u5148\u751f\u6210\u4e00\u4e2a\u5c55\u793a\u7c92\u5b50\u7cfb\u7efc\u6269\u6563\u7684\u52a8\u6001GIF\uff0c\u7136\u540e\u8ba1\u7b97\u5e76\u7ed8\u5236\u5173\u952e\u7684MSD\u7edf\u8ba1\u56fe\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport imageio\nimport os\nimport shutil\nimport warnings\n\n\nplt.style.use('dark_background')\nwarnings.filterwarnings(\"ignore\", category=UserWarning, module='imageio')\n\n# --- Parameter settings ---\n\nm = 1.0\nxi = 1.0         # Friction rate -&gt; Relaxation time tau = 1/xi = 1.0s\nkBT = 1.0        # Thermal energy, set to 1\ngamma = m * xi\nGamma = gamma * kBT\ntotal_time = 100.0\ndt = 0.01\n\n# --- General simulation parameters ---\nnum_particles = 500\nnum_steps = int(total_time / dt)\ndimensions = 2\n\n# --- 2. Initialization and simulation execution ---\npositions = np.zeros((num_particles, num_steps + 1, dimensions))\nvelocities = np.zeros((num_particles, num_steps + 1, dimensions))\n\n# Draw initial velocities from Gaussian distribution according to equipartition theorem\nv_std = np.sqrt(kBT / m)\nvelocities[:, 0, :] = np.random.normal(0, v_std, (num_particles, dimensions))\n\n# Pre-calculate noise term amplitude for efficiency\nnoise_amp = np.sqrt(2 * Gamma * dt) / m\n\nprint(\"Starting particle motion simulation...\")\nfor i in range(num_steps):\n    random_force = np.random.normal(0, 1, (num_particles, dimensions))\n    velocities[:, i+1, :] = velocities[:, i, :] * (1 - xi * dt) + noise_amp * random_force\n    positions[:, i+1, :] = positions[:, i, :] + velocities[:, i, :] * dt\nprint(\"Simulation complete.\")\n\n# --- 3. Generate GIF animation of Brownian motion for many particles ---\nprint(\"Generating Brownian motion GIF animation...\")\ngif_filename = 'brownian_motion.gif'\ntemp_dir = 'temp_frames'\nif os.path.exists(temp_dir): shutil.rmtree(temp_dir)\nos.makedirs(temp_dir)\n\nframe_step = max(1, int(num_steps / 150))\nfilenames = []\nmax_pos_dynamic = np.max(np.abs(positions)) * 1.1\n\nfor i in range(0, num_steps + 1, frame_step):\n    fig, ax = plt.subplots(figsize=(8, 8))\n    dist_from_origin = np.linalg.norm(positions[:, i, :], axis=1)\n    ax.scatter(positions[:, i, 0], positions[:, i, 1], s=5, alpha=0.6, cmap='viridis', c=dist_from_origin)\n    ax.set_title(f'Brownian Motion of {num_particles} Particles\\nTime: {i*dt:.2e} s', color='white', fontsize=14)\n    ax.set_xlabel('x position (m)', color='white')\n    ax.set_ylabel('y position (m)', color='white')\n    ax.set_xlim(-max_pos_dynamic, max_pos_dynamic)\n    ax.set_ylim(-max_pos_dynamic, max_pos_dynamic)\n    ax.set_aspect('equal', adjustable='box')\n    filename = f'{temp_dir}/frame_{i:05d}.png'\n    filenames.append(filename)\n    plt.savefig(filename, dpi=100)\n    plt.close()\n\nwith imageio.get_writer(gif_filename, mode='I', duration=0.08, loop=0) as writer:\n    for filename in filenames:\n        writer.append_data(imageio.imread(filename))\nshutil.rmtree(temp_dir)\nprint(f\"Animation saved to '{gif_filename}'\")\n\n# --- 4. Calculate and plot key MSD statistics ---\nprint(\"Calculating and plotting MSD statistics...\")\nsq_displacements = np.sum(positions**2, axis=2)\nmsd = np.mean(sq_displacements, axis=0)\ntime_axis = np.arange(num_steps + 1) * dt\nfig_msd, ax_msd = plt.subplots(figsize=(10, 7))\nax_msd.loglog(time_axis[1:], msd[1:], 'o', color='#00A0FF', markersize=3, alpha=0.8, label='Simulated MSD')\n\ntau_relax = 1/xi\nballistic_indices = (time_axis &gt; 0) &amp; (time_axis &lt; 0.1 * tau_relax)\nballistic_line = (dimensions * kBT / m) * time_axis[ballistic_indices]**2\nax_msd.loglog(time_axis[ballistic_indices], ballistic_line, 'r--', lw=2.5, label=r'Ballistic Regime ($\\propto t^2$)')\n\ndiffusive_indices = time_axis &gt; 10 * tau_relax\nD_eff = kBT / gamma\ndiffusive_line = 2 * dimensions * D_eff * time_axis[diffusive_indices]\nax_msd.loglog(time_axis[diffusive_indices], diffusive_line, 'g--', lw=2.5, label=r'Diffusive Regime ($\\propto t$)')\n\nax_msd.axvline(x=tau_relax, color='purple', linestyle=':', lw=2, label=f'Relaxation Time $\\\\tau = 1/\\\\xi = {tau_relax:.2e}$ s')\nax_msd.set_title(\"Mean Squared Displacement (MSD) vs. Time\", color='white', fontsize=16)\nax_msd.set_xlabel(\"Time (s)\", color='white', fontsize=12)\nax_msd.set_ylabel(\"MSD (m$^2$)\", color='white', fontsize=12)\nax_msd.legend(facecolor='gray', framealpha=0.2, labelcolor='white')\nax_msd.grid(True, which=\"both\", ls=\"--\", color='gray', alpha=0.5)\nplt.tight_layout()\nplt.savefig(\"msd_plot.png\", dpi=150)\nplt.show()\nprint(f\"MSD image saved to 'msd_plot.png'\")\n</code></pre> <p></p> <p>\u5c55\u793a\u4e86500\u4e2a\u5e03\u6717\u7c92\u5b50\u6784\u6210\u7684\u7cfb\u7efc\uff08Ensemble\uff09\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u3002\u6240\u6709\u7c92\u5b50\u4ece\u539f\u70b9\u51fa\u53d1\uff0c\u5728\u968f\u673a\u529b\u7684\u9a71\u52a8\u4e0b\u5411\u5916\u6269\u6563\uff0c\u63cf\u7ed8\u51fa\u201c\u6982\u7387\u4e91\u201d\u7684\u6269\u5f20\u8fc7\u7a0b\uff0c\u4e3a\u62bd\u8c61\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u63d0\u4f9b\u4e86\u7269\u7406\u56fe\u50cf\u3002</p> <p> \u6240\u6709500\u4e2a\u6a21\u62df\u7c92\u5b50\u7684MSD\uff0c\u5e76\u5c06\u5176\u7ed8\u5236\u5728\u53cc\u5bf9\u6570\u5750\u6807\u7cfb\u4e0a\u3002\u5728\u77ed\u65f6\u95f4\u5c3a\u5ea6\u4e0a\uff08\\(t\\ll\\tau=1.0\\,\\mathrm{s}\\)\uff09\uff0c\u6a21\u62df\u6570\u636e\u70b9\uff08\u84dd\u8272\u5706\u5708\uff09\u4e0e\u659c\u7387\u4e3a2\u7684\u7406\u8bba\u7ebf\uff08\u7ea2\u8272\u865a\u7ebf\uff09\u91cd\u5408\uff0c\u8fd9\u6b63\u662f\u5f39\u9053\u5f0f\u8fd0\u52a8\u7684\u7279\u5f81\u3002\u5728\u957f\u65f6\u95f4\u5c3a\u5ea6\u4e0a\uff08\\(t\\gg\\tau=1.0\\,\\mathrm{s}\\)\uff09\uff0c\u6a21\u62df\u6570\u636e\u70b9\u4e0e\u659c\u7387\u4e3a1\u7684\u7406\u8bba\u7ebf\uff08\u7eff\u8272\u865a\u7ebf\uff09\u91cd\u5408\uff0c\u8fd9\u6b63\u662f\u6269\u6563\u8fd0\u52a8\u7684\u7279\u5f81\u3002\u5728\u4e2d\u95f4\u533a\u57df\uff0c\u7531\u7d2b\u8272\u865a\u7ebf\u6807\u8bb0\u7684\u7279\u5f81\u5f1b\u8c6b\u65f6\u95f4 \\(\\tau=1.0\\,\\mathrm{s}\\) \u9644\u8fd1\uff0c\u6a21\u62df\u6570\u636e\u5e73\u6ed1\u5730\u4ece\u4e00\u4e2a\u533a\u57df\u8fc7\u6e21\u5230\u53e6\u4e00\u4e2a\u533a\u57df\u3002</p> <p>\u8fd9\u4e2a\u8ba1\u7b97\u5b9e\u9a8c\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u53ef\u89c6\u5316\u3002\u5728\u7406\u8bba\u63a8\u5bfc\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u5728\u7269\u7406\u4e0a\u5e76\u4e0d\u5b8c\u5168\u771f\u5b9e\u7684\u7406\u60f3\u5316\u6a21\u578b\uff0c\u5373delta-\u5173\u8054\u7684\u767d\u566a\u58f0\u3002\u7136\u800c\uff0c\u6211\u4eec\u7684\u6570\u503c\u6a21\u62df\uff0c\u6b63\u662f\u57fa\u4e8e\u8fd9\u4e2a\u7406\u60f3\u5316\u6a21\u578b\u7684\u79bb\u6563\u5316\u7248\u672c\uff08\u5373\u6bcf\u4e00\u6b65\u7684\u566a\u58f0\u90fd\u4e0e\u524d\u4e00\u6b65\u5b8c\u5168\u65e0\u5173\uff09\uff0c\u5374\u590d\u73b0\u4e86\u5177\u6709\u4e24\u79cd\u4e0d\u540c\u52a8\u529b\u5b66\u6a21\u5f0f\u7684\u590d\u6742\u7269\u7406\u73b0\u8c61\u3002\u8fd9\u8868\u660e\uff0c\u5c3d\u7ba1\u5fae\u89c2\u78b0\u649e\u5177\u6709\u6709\u9650\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u4f46\u53ea\u8981\u6211\u4eec\u5173\u5fc3\u7684\u5e03\u6717\u7c92\u5b50\u8fd0\u52a8\u65f6\u95f4\u5c3a\u5ea6\u8fdc\u5927\u4e8e\u78b0\u649e\u65f6\u95f4\uff0c\u767d\u566a\u58f0\u5c31\u662f\u4e00\u4e2a\u6781\u5176\u6709\u6548\u4e14\u51c6\u786e\u7684\u7269\u7406\u6a21\u578b\u3002</p>"},{"location":"zh/notes/17.%20%E6%9C%97%E4%B9%8B%E4%B8%87%E6%96%B9%E7%A8%8B%E3%80%81%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#_2","title":"\u603b\u7ed3","text":"<p>\u8fd9\u8282\u8bfe\u6211\u4eec\u5b8c\u6210\u4e86\u4ece\u7cfb\u7efc\u63cf\u8ff0\u5230\u5355\u4f53\u8f68\u8ff9\u63cf\u8ff0\u7684\u5173\u952e\u4e00\u6b65\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u4e0e\u7ed3\u8bba\u53ef\u4ee5\u603b\u7ed3\u4e3a\u4ee5\u4e0b\u51e0\u70b9\uff1a</p> <ol> <li> <p>\u89c6\u89d2\u8f6c\u53d8\uff1a\u6211\u4eec\u4ece\u63cf\u8ff0\u6982\u7387\u5206\u5e03\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff0c\u8f6c\u5411\u4e86\u76f4\u63a5\u63cf\u8ff0\u5355\u4e2a\u7c92\u5b50\u8f68\u8ff9\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u3002\u8fd9\u662f\u7814\u7a76\u968f\u673a\u8fc7\u7a0b\u4e2d\u4e24\u79cd\u4e92\u8865\u7684\u91cd\u8981\u89c6\u89d2\u3002</p> </li> <li> <p>\u968f\u673a\u529b\u7684\u5fc5\u8981\u6027\uff1a\u4e00\u4e2a\u53ea\u5305\u542b\u5b8f\u89c2\u963b\u529b\u7684\u6734\u7d20\u52a8\u529b\u5b66\u6a21\u578b\u4f1a\u5bfc\u81f4\u4e0e\u70ed\u529b\u5b66\u80fd\u91cf\u5747\u5206\u5b9a\u7406\u76f8\u77db\u76fe\u7684\u9519\u8bef\u7ed3\u8bba\u3002\u4e3a\u4e86\u4fee\u6b63\u8fd9\u4e00\u70b9\uff0c\u5fc5\u987b\u5728\u65b9\u7a0b\u4e2d\u5f15\u5165\u4e00\u4e2a\u4ee3\u8868\u5fae\u89c2\u70ed\u6da8\u843d\u7684\u968f\u673a\u529b\uff08\u566a\u58f0\uff09\u9879\u3002</p> </li> <li> <p>\u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff1a\u8be5\u5b9a\u7406\u662f\u8fd9\u51e0\u8bfe\u7684\u6838\u5fc3\u3002\u5b83\u6307\u51fa\uff0c\u63cf\u8ff0\u7cfb\u7edf\u80fd\u91cf\u8017\u6563\u7684\u6469\u64e6\u7cfb\u6570 (\\(m\\xi\\)) \u548c\u63cf\u8ff0\u5fae\u89c2\u968f\u673a\u6da8\u843d\u7684\u566a\u58f0\u5f3a\u5ea6 (\\(\\Gamma\\)) \u5e76\u975e\u76f8\u4e92\u72ec\u7acb\uff0c\u800c\u662f\u901a\u8fc7\u6e29\u5ea6 \\(T\\) \u7d27\u5bc6\u8054\u7cfb\u5728\u4e00\u8d77 (\\(\\Gamma = m\\xi k_B T\\))\u3002\u8fd9\u4e2a\u6df1\u523b\u7684\u539f\u7406\u4fdd\u8bc1\u4e86\u52a8\u529b\u5b66\u6a21\u578b\u5728\u957f\u65f6\u95f4\u6f14\u5316\u540e\u80fd\u591f\u8fbe\u5230\u6b63\u786e\u7684\u3001\u7b26\u5408\u7edf\u8ba1\u529b\u5b66\u9884\u8a00\u7684\u70ed\u5e73\u8861\u6001\u3002</p> </li> <li> <p>\u4e24\u79cd\u8fd0\u52a8\u6a21\u5f0f\u7684\u7edf\u4e00\uff1a\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u89e3\u81ea\u7136\u5730\u7edf\u4e00\u4e86\u4e24\u79cd\u8fd0\u52a8\u6a21\u5f0f\u3002\u5728\u77ed\u4e8e\u901f\u5ea6\u5f1b\u8c6b\u65f6\u95f4 (\\(t \\ll 1/\\xi\\)) \u7684\u5c3a\u5ea6\u4e0a\uff0c\u7c92\u5b50\u8868\u73b0\u4e3a\u5f39\u9053\u8fd0\u52a8 (\\(\\text{MSD} \\propto t^2\\))\uff1b\u5728\u8fdc\u5927\u4e8e\u8be5\u65f6\u95f4\u7684\u5c3a\u5ea6\u4e0a\uff0c\u5219\u8fc7\u6e21\u4e3a\u6269\u6563\u8fd0\u52a8 (\\(\\text{MSD} \\propto t\\))\u3002\u8fd9\u5bfc\u51fa\u4e86\u8457\u540d\u7684\u7231\u56e0\u65af\u5766-\u65af\u6258\u514b\u65af\u5173\u7cfb\u3002</p> </li> </ol> <p>\u901a\u8fc7\u8fd9\u8282\u8bfe\u7684\u5b66\u4e60\uff0c\u6211\u4eec\u4e0d\u4ec5\u5f97\u5230\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u5de5\u5177\u2014\u2014\u6717\u4e4b\u4e07\u65b9\u7a0b\uff0c\u6765\u6a21\u62df\u548c\u5206\u6790\u968f\u673a\u52a8\u529b\u5b66\u7cfb\u7edf\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u6df1\u5165\u7406\u89e3\u4e86\u5b8f\u89c2\u4e16\u754c\u7684\u8017\u6563\u4e0e\u5fae\u89c2\u4e16\u754c\u7684\u6da8\u843d\u4e4b\u95f4\u4e0d\u53ef\u5206\u5272\u7684\u5185\u5728\u8054\u7cfb\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/","title":"\u5f15\u8a00","text":"<p>\u4e0a\u4e00\u8282\u8bfe,Erwin Frey \u6559\u6388\u5f15\u5165\u4e86\u6717\u4e4b\u4e07\u65b9\u7a0b(Langevin Equation),\u5b83\u901a\u8fc7\u5e73\u8861\u4e24\u79cd\u529b\u6765\u63cf\u8ff0\u5355\u4e2a\u5e03\u6717\u7c92\u5b50\u7684\u8fd0\u52a8\u8f68\u8ff9:\u4e00\u79cd\u662f\u786e\u5b9a\u6027\u7684\u6469\u64e6\u963b\u529b,\u4e0e\u7c92\u5b50\u7684\u901f\u5ea6\u6210\u6b63\u6bd4\u5e76\u53cd\u5411;\u53e6\u4e00\u79cd\u662f\u968f\u673a\u7684\u3001\u5feb\u901f\u6da8\u843d\u7684\u529b,\u4ee3\u8868\u4e86\u7c92\u5b50\u4e0e\u5468\u56f4\u6eb6\u5242\u5206\u5b50\u7684\u6301\u7eed\u78b0\u649e\u3002\u8fd9\u79cd\u63cf\u8ff0\u65b9\u5f0f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u4e8e\u5fae\u89c2\u3001\u8ffd\u8e2a\u5355\u4e00\u7c92\u5b50\u8f68\u8ff9\u7684\u89c6\u89d2\u3002</p> <p></p> <p>\u8fd9\u8282\u8bfe\u5c06\u4ece\u63cf\u8ff0\u4e00\u4e2a\u7279\u5b9a\u3001\u968f\u673a\u7684\u7c92\u5b50\u8def\u5f84,\u8f6c\u5411\u63cf\u8ff0\u4e00\u4e2a\u7531\u5927\u91cf\u975e\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u7ec4\u6210\u7684\u7cfb\u7efc\u7684\u6982\u7387\u5206\u5e03\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u3002\u8fd9\u662f\u4e00\u4e2a\u4ece\u63cf\u8ff0\u5355\u4e2a\u7c92\u5b50\u8f68\u8ff9\u7684\u968f\u673a\u5e38\u5fae\u5206\u65b9\u7a0b(Stochastic Ordinary Differential Equation, SDE)\u5230\u63cf\u8ff0\u6982\u7387\u5bc6\u5ea6\u672c\u8eab\u7684\u786e\u5b9a\u6027\u504f\u5fae\u5206\u65b9\u7a0b(Partial Differential Equation, PDE)\u7684\u8f6c\u53d8\u3002\u8fd9\u4e2a\u65b0\u7684\u65b9\u7a0b,\u5c31\u662f\u4e4b\u524d\u4ecb\u7ecd\u8fc7\u7684\u2014\u2014\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b(Fokker-Planck Equation, FPE)\u3002</p> <p>\u6717\u4e4b\u4e07\u65b9\u7a0b\u5305\u542b\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u9879 \\(\\eta(t)\\),\u8fd9\u4f7f\u5f97\u5b83\u7684\u4efb\u4f55\u4e00\u4e2a\u89e3(\u5373\u4e00\u6761\u8f68\u8ff9)\u90fd\u662f\u4e0d\u53ef\u9884\u6d4b\u7684\u3002\u7136\u800c,\u901a\u8fc7\u5bf9\u8fd9\u4e2a\u566a\u58f0\u7684\u7edf\u8ba1\u6027\u8d28\u8fdb\u884c\u5e73\u5747,\u6211\u4eec\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e00\u4e2a\u5b8c\u5168\u786e\u5b9a\u6027\u7684\u3001\u63cf\u8ff0\u6982\u7387\u5206\u5e03 \\(p(v,t)\\) \u7684\u6f14\u5316\u65b9\u7a0b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c55\u793a\u4e86\u7edf\u8ba1\u529b\u5b66\u4e2d\u7684\u4e00\u4e2a\u6838\u5fc3\u539f\u7406:\u5b8f\u89c2\u91cf(\u5982\u6982\u7387\u5206\u5e03)\u7684\u786e\u5b9a\u6027\u3001\u53ef\u9884\u6d4b\u7684\u89c4\u5f8b\u662f\u5982\u4f55\u4ece\u5176\u80cc\u540e\u6df7\u4e71\u3001\u968f\u673a\u7684\u5fae\u89c2\u52a8\u529b\u5b66\u4e2d\u6d8c\u73b0\u51fa\u6765\u7684\u3002\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u867d\u7136\u4e0d\u80fd\u9884\u6d4b\u5355\u4e2a\u7c92\u5b50\u7684\u5177\u4f53\u8def\u5f84,\u4f46\u5b83\u80fd\u591f\u7cbe\u786e\u5730\u9884\u6d4b\u7531\u65e0\u6570\u53ef\u80fd\u6027\u6784\u6210\u7684\"\u6982\u7387\u4e91\"\u662f\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u53d8\u7684\u3002\u8fd9\u4f53\u73b0\u4e86\u7edf\u8ba1\u5e73\u5747\u5982\u4f55\"\u6d17\u53bb\"\u5fae\u89c2\u7684\u968f\u673a\u6027,\u4ece\u800c\u63ed\u793a\u51fa\u5b8f\u89c2\u7684\u786e\u5b9a\u6027,\u8fd9\u662f\u8fde\u63a5\u529b\u5b66\u4e0e\u70ed\u529b\u5b66\u7684\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#1-","title":"1. \u901f\u5ea6\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b","text":""},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#11","title":"1.1 \u8d77\u70b9:\u901f\u5ea6\u7a7a\u95f4\u4e2d\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b","text":"<p>\u6211\u4eec\u4ece\u63cf\u8ff0\u4e00\u4e2a\u81ea\u7531\u5e03\u6717\u7c92\u5b50\u901f\u5ea6 \\(v\\) \u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u5f00\u59cb:</p> \\[ m\\frac{dv}{dt} = -m\\xi v(t) + \\eta(t) \\] <p>\u8ba9\u6211\u4eec\u5bf9\u8fd9\u4e2a\u65b9\u7a0b\u7684\u5404\u9879\u8fdb\u884c\u7269\u7406\u5206\u6790:</p> <ul> <li> <p>\\(m\\frac{dv}{dt}\\):\u60ef\u6027\u9879,\u5373\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b\u4e2d\u7684\u8d28\u91cf\u4e58\u4ee5\u52a0\u901f\u5ea6\u3002</p> </li> <li> <p>\\(-m\\xi v(t)\\):\u6469\u64e6\u963b\u529b\u6216\u963b\u5c3c\u529b,\u5176\u65b9\u5411\u603b\u662f\u4e0e\u8fd0\u52a8\u65b9\u5411\u76f8\u53cd\u3002\u8fd9\u91cc\u7684 \\(\\xi\\) \u662f\u5355\u4f4d\u8d28\u91cf\u7684\u6469\u64e6\u7cfb\u6570\u3002</p> </li> <li> <p>\\(\\eta(t)\\):\u968f\u673a\u529b,\u4ee3\u8868\u4e86\u6765\u81ea\u5468\u56f4\u6d41\u4f53\u5206\u5b50\u7684\u6301\u7eed\u3001\u968f\u673a\u7684\u78b0\u649e\u3002</p> </li> </ul> <p>\u968f\u673a\u529b \\(\\eta(t)\\) \u7684\u7edf\u8ba1\u6027\u8d28\u81f3\u5173\u91cd\u8981\u3002\u5b83\u88ab\u5efa\u6a21\u4e3a\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf,\u5e76\u5177\u6709\u4ee5\u4e0b\u7279\u6027:</p> <ul> <li> <p>\u96f6\u5747\u503c:\\(\\langle\\eta_i(t)\\rangle=0\\)\u3002\u8fd9\u8868\u660e\u4ece\u5e73\u5747\u610f\u4e49\u4e0a\u770b,\u968f\u673a\u7684\u78b0\u649e\u5728\u4efb\u4f55\u65b9\u5411\u4e0a\u90fd\u6ca1\u6709\u504f\u597d\u3002</p> </li> <li> <p>Delta\u76f8\u5173\u7684\u534f\u65b9\u5dee(\u767d\u566a\u58f0):\\(\\langle\\eta_i(t)\\eta_j(t')\\rangle=2\\Gamma\\delta_{ij}\\delta(t-t')\\)\u3002\u8fd9\u662f\u5bf9\u70ed\u6da8\u843d\u7684\u6570\u5b66\u7406\u60f3\u5316\u63cf\u8ff0\u3002\u72c4\u62c9\u514b \\(\\delta(t-t')\\) \u51fd\u6570\u610f\u5473\u7740\u5728\u4efb\u4f55\u4e00\u4e2a\u65f6\u523b\u7684\u529b\u4e0e\u4efb\u4f55\u5176\u4ed6\u65f6\u523b\u7684\u529b\u90fd\u662f\u5b8c\u5168\u4e0d\u76f8\u5173\u7684,\u65e0\u8bba\u8fd9\u4e24\u4e2a\u65f6\u523b\u76f8\u8ddd\u591a\u8fd1\u3002\u8fd9\u4e9b\u6da8\u843d\u7684\u5f3a\u5ea6\u7531 \\(\\Gamma\\) \u51b3\u5b9a\u3002</p> </li> </ul> <p>\u5728\u8fd9\u91cc,\\(\\Gamma\\) \u7684\u8868\u8fbe\u5f0f\u4e3a \\(\\Gamma=m\\xi k_B T\\)\u3002\u8fd9\u662f\u4e00\u4e2a\u6e90\u81ea\u4e0a\u4e00\u8bb2\u7684\u6df1\u523b\u7ed3\u679c,\u5b83\u6b63\u662f\u6da8\u843d-\u8017\u6563\u5b9a\u7406(Fluctuation-Dissipation Theorem)\u7684\u4e00\u79cd\u4f53\u73b0\u3002\u8be5\u5b9a\u7406\u5c06\u968f\u673a\u6da8\u843d\u7684\u5e45\u5ea6(\u7531 \\(\\Gamma\\) \u63cf\u8ff0)\u4e0e\u7cfb\u7edf\u7684\u80fd\u91cf\u8017\u6563(\u7531\u6469\u64e6 \\(\\xi\\) \u63cf\u8ff0)\u4ee5\u53ca\u70ed\u6d74\u7684\u6e29\u5ea6(\\(T\\))\u8054\u7cfb\u5728\u4e86\u4e00\u8d77\u3002\u8fd9\u79cd\u8054\u7cfb\u5e76\u975e\u5de7\u5408,\u800c\u662f\u7cfb\u7edf\u80fd\u591f\u6700\u7ec8\u8fbe\u5230\u70ed\u5e73\u8861\u7684\u5fc5\u8981\u6761\u4ef6\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#12","title":"1.2 \u52a8\u529b\u5b66\u7684\u79bb\u6563\u5316","text":"<p>\u4e3a\u4e86\u5206\u6790\u901f\u5ea6\u53d8\u5316\u7684\u7edf\u8ba1\u7279\u6027,\u6211\u4eec\u5c06\u6717\u4e4b\u4e07\u65b9\u7a0b\u5728\u4e00\u4e2a\u5fae\u5c0f\u7684\u65f6\u95f4\u6b65\u957f \\(\\Delta t\\) \u4e0a\u8fdb\u884c\u79bb\u6563\u5316\u3002\u8fd9\u4f7f\u5f97\u5fae\u5206\u65b9\u7a0b\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u66f4\u65b0\u89c4\u5219:</p> \\[ m\\frac{\\Delta v}{\\Delta t} = -m\\xi v(t)\\Delta t + \\Delta W(t,\\Delta t) \\] <p>\u6211\u4eec\u5b9a\u4e49\"\u566a\u58f0\u589e\u91cf\"(Noise Increment)\\(\\Delta W\\) \u4e3a\u968f\u673a\u529b\u5728\u8fd9\u4e2a\u5fae\u5c0f\u65f6\u95f4\u95f4\u9694\u5185\u7684\u79ef\u5206:</p> \\[ \\Delta W(t,\\Delta t) := \\int_t^{t+\\Delta t} d\\tau \\eta(\\tau) \\] <p>\u8fd9\u4e2a\u91cf\u4ee3\u8868\u4e86\u5728 \\(\\Delta t\\) \u65f6\u95f4\u5185,\u7c92\u5b50\u53d7\u5230\u7684\u51c0\u968f\u673a\u51b2\u91cf\u3002</p> <p>\u5229\u7528 \\(\\eta(t)\\) \u7684\u7edf\u8ba1\u6027\u8d28,\u6211\u4eec\u53ef\u4ee5\u63a8\u5bfc\u51fa \\(\\Delta W\\) \u7684\u5747\u503c\u548c\u534f\u65b9\u5dee:</p> <ul> <li> <p>\u5747\u503c:\\(\\langle\\Delta W_i\\rangle = \\int_t^{t+\\Delta t} d\\tau \\langle\\eta_i(\\tau)\\rangle = 0\\)\u3002</p> </li> <li> <p>\u534f\u65b9\u5dee:\u6839\u636e\u89c6\u9891\u4e2d\u7684\u5173\u952e\u8ba1\u7b97:</p> </li> </ul> \\[ \\langle\\Delta W_k \\Delta W_j\\rangle = \\int_t^{t+\\Delta t} d\\tau \\int_t^{t+\\Delta t} d\\tau' \\langle\\eta_k(\\tau)\\eta_j(\\tau')\\rangle = 2m\\xi k_B T \\delta_{kj} \\Delta t \\] <p>\u566a\u58f0\u589e\u91cf\u7684\u65b9\u5dee \\(\\langle(\\Delta W)^2\\rangle\\) \u4e0e \\(\\Delta t\\) \u6210\u6b63\u6bd4,\u800c\u4e0d\u662f\u4e0e \\((\\Delta t)^2\\) \u6210\u6b63\u6bd4,\u8fd9\u662f\u7406\u89e3\u968f\u673a\u8fc7\u7a0b\u7684\u5173\u952e\u3002\u4e00\u4e2a\u6807\u51c6\u7684\u786e\u5b9a\u6027\u8fc7\u7a0b,\u5176\u4f4d\u79fb\u4e0e \\(\\Delta t\\) \u6210\u6b63\u6bd4,\u4f4d\u79fb\u7684\u5e73\u65b9\u5219\u4e0e \\((\\Delta t)^2\\) \u6210\u6b63\u6bd4\u3002\u7136\u800c,\u79ef\u5206\u566a\u58f0\u7684\u65b9\u5dee\u4e0e \\(\\Delta t\\) \u7684\u7ebf\u6027\u5173\u7cfb\u662f\u566a\u58f0 \\(\\eta(t)\\) \u5177\u6709Delta\u76f8\u5173\u6027(\u767d\u566a\u58f0)\u7684\u76f4\u63a5\u540e\u679c\u3002\u8fd9\u4e00\u6570\u5b66\u7279\u6027\u6b63\u662f\u5e03\u6717\u8fd0\u52a8\u4e2d\u4f4d\u79fb\u4e0e\u65f6\u95f4\u7684\u5e73\u65b9\u6839 \\(\\sqrt{t}\\) \u6210\u6b63\u6bd4\u8fd9\u4e00\u7279\u5f81\u7684\u6839\u6e90,\u8fd9\u4e5f\u662f\u968f\u673a\u79ef\u5206\u4e0e\u666e\u901a\u79ef\u5206\u7684\u672c\u8d28\u533a\u522b\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#13-","title":"1.3 \u63a8\u5bfc\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u7684\u7cfb\u6570","text":"<p>\u73b0\u5728,\u6211\u4eec\u5f15\u5165\u6f02\u79fb(drift)\u7cfb\u6570 \\(A_i\\) \u548c\u6269\u6563(diffusion)\u7cfb\u6570 \\(B_{ij}\\) \u7684\u6982\u5ff5,\u5b83\u4eec\u5206\u522b\u5b9a\u4e49\u4e3a\u5355\u4f4d\u65f6\u95f4\u5185\u901f\u5ea6\u53d8\u5316\u7684\u4e00\u9636\u77e9\u548c\u4e8c\u9636\u77e9\u3002\u8fd9\u4e24\u4e2a\u7cfb\u6570\u662f\u6784\u5efa\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u7684\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#a_i","title":"\u6f02\u79fb\u7cfb\u6570 \\(A_i\\) (\u4ee3\u8868\"\u63a8\u529b\")","text":"<ul> <li> <p>\u5b9a\u4e49:\\(A_i = \\lim_{\\Delta t \\to 0} \\frac{\\langle\\Delta v_i\\rangle}{\\Delta t}\\)\u3002\u5b83\u4ee3\u8868\u4e86\u7c92\u5b50\u901f\u5ea6\u6240\u7ecf\u5386\u7684\u5e73\u5747\u7684\u3001\u786e\u5b9a\u6027\u7684\"\u6f02\u79fb\"\u6216\"\u63a8\u529b\"\u3002</p> </li> <li> <p>\u63a8\u5bfc:\u6839\u636e\u89c6\u9891,\u6211\u4eec\u5bf9\u79bb\u6563\u5316\u7684 \\(\\Delta v_i\\) \u65b9\u7a0b\u53d6\u5e73\u5747:</p> </li> </ul> \\[ \\langle\\Delta v_i\\rangle = \\langle -\\xi v_i \\Delta t + \\frac{\\Delta W_i}{m}\\rangle = -\\xi v_i \\Delta t \\] <p>\u8fd9\u662f\u56e0\u4e3a\u566a\u58f0\u589e\u91cf\u7684\u5e73\u5747\u503c\u4e3a\u96f6,\u5373 \\(\\langle\\Delta W_i\\rangle=0\\)\u3002</p> <ul> <li>\u7ed3\u679c:\\(A_i = -\\xi v_i\\)\u3002\u8fd9\u4e2a\u7ed3\u679c\u7684\u7269\u7406\u610f\u4e49\u975e\u5e38\u660e\u786e:\u901f\u5ea6\u7684\u5e73\u5747\u6f02\u79fb\u5b8c\u5168\u7531\u6469\u64e6\u529b\u5f15\u8d77,\u800c\u6469\u64e6\u529b\u603b\u662f\u8bd5\u56fe\u51cf\u5c0f\u901f\u5ea6,\u5c06\u5176\u63a8\u5411\u96f6\u3002</li> </ul>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#b_ij","title":"\u6269\u6563\u7cfb\u6570 \\(B_{ij}\\) (\u4ee3\u8868\"\u6269\u6563\")","text":"<ul> <li> <p>\u5b9a\u4e49:\\(B_{ij} = \\lim_{\\Delta t \\to 0} \\frac{\\langle\\Delta v_i \\Delta v_j\\rangle}{\\Delta t}\\)\u3002\u5b83\u4ee3\u8868\u4e86\u901f\u5ea6\u6da8\u843d\u7684\u65b9\u5dee,\u91cf\u5316\u4e86\u7531\u4e8e\u968f\u673a\u529b\u7684\u4f5c\u7528,\u6982\u7387\u5206\u5e03\u5728\u901f\u5ea6\u7a7a\u95f4\u4e2d\"\u6269\u6563\u5f00\u6765\"\u7684\u7a0b\u5ea6\u3002</p> </li> <li> <p>\u63a8\u5bfc:\u6211\u4eec\u9075\u5faa\u8bfe\u7a0b\u4e2d\u7684\u8ba1\u7b97,\u5728 \\(\\Delta t \\to 0\\) \u7684\u6781\u9650\u4e0b\u53ea\u4fdd\u7559 \\(\\Delta t\\) \u7684\u6700\u4f4e\u9636\u9879:</p> </li> </ul> \\[ \\langle\\Delta v_i \\Delta v_j\\rangle = \\langle(-\\xi v_i \\Delta t + \\frac{\\Delta W_i}{m})(-\\xi v_j \\Delta t + \\frac{\\Delta W_j}{m})\\rangle \\approx \\frac{1}{m^2}\\langle\\Delta W_i \\Delta W_j\\rangle \\] <p>\u5728\u53d6\u6781\u9650\u7684\u8fc7\u7a0b\u4e2d,\u4e0e \\((\\Delta t)^2\\) \u548c \\(\\Delta t\\langle\\Delta W\\rangle\\) \u76f8\u5173\u7684\u9879\u90fd\u5c06\u6d88\u5931\u3002</p> <ul> <li>\u7ed3\u679c:\\(B_{ij} = \\frac{1}{\\Delta t} \\frac{1}{m^2}(2m\\xi k_B T \\delta_{ij} \\Delta t) = \\frac{2k_B T \\xi}{m} \\delta_{ij}\\)\u3002\u8fd9\u4e2a\u7ed3\u679c\u8868\u660e,\u5728\u901f\u5ea6\u7a7a\u95f4\u4e2d\u7684\u6269\u6563\u662f\u6052\u5b9a\u7684,\u5e76\u4e14\u5176\u5f3a\u5ea6\u6b63\u6bd4\u4e8e\u73af\u5883\u7684\u6e29\u5ea6\u3002</li> </ul>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#14-","title":"1.4 \u901f\u5ea6\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b","text":"<p>\u73b0\u5728,\u6211\u4eec\u5c06\u63a8\u5bfc\u51fa\u7684\u7cfb\u6570\u4ee3\u5165\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u7684\u4e00\u822c\u5f62\u5f0f:</p> \\[ \\partial_t p = -\\sum_i \\partial_{v_i} (A_i p) + \\frac{1}{2} \\sum_{i,j} \\partial_{v_i} \\partial_{v_j} (B_{ij} p) \\] <p>\u4ee3\u5165\u6211\u4eec\u5f97\u5230\u7684 \\(A_i\\) \u548c \\(B_{ij}\\),\u4fbf\u53ef\u5f97\u5230\u901f\u5ea6\u5206\u5e03 \\(p(v,t)\\) \u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b:</p> \\[ \\partial_t p(v, t) = \\nabla_v \\cdot [\\xi v p(v, t)] + \\frac{k_B T \\xi}{m} \\nabla_v^2 p(v, t) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u5728\u7269\u7406\u4e0a\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u4e00\u4e2a\u6982\u7387\u7684\u8fde\u7eed\u6027\u65b9\u7a0b\u3002\u7b49\u5f0f\u53f3\u8fb9\u7684\u7b2c\u4e00\u9879\u662f\u6f02\u79fb\u9879,\u63cf\u8ff0\u4e86\u6982\u7387\u5206\u5e03\u5982\u4f55\u88ab\u6469\u64e6\u529b\u7cfb\u7edf\u6027\u5730\u62d6\u62fd\u5411\u901f\u5ea6\u4e3a\u96f6\u7684\u4e2d\u5fc3\u3002\u7b2c\u4e8c\u9879\u662f\u6269\u6563\u9879,\u63cf\u8ff0\u4e86\u968f\u673a\u529b\u5982\u4f55\u5bfc\u81f4\u6982\u7387\u5206\u5e03\u5411\u5916\u6269\u6563\u5f00\u6765\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#15","title":"1.5 \u5e73\u8861\u6001:\u91cd\u73b0\u70ed\u529b\u5b66","text":"<p>\u5f53\u65f6\u95f4\u8db3\u591f\u957f(\\(t \\to \\infty\\))\u65f6,\u7cfb\u7edf\u5c06\u8fbe\u5230\u5e73\u8861,\u6b64\u65f6\u6982\u7387\u5206\u5e03\u4e0d\u518d\u968f\u65f6\u95f4\u53d8\u5316,\u5373\u8fbe\u5230\u7a33\u6001:\\(\\partial_t p = 0\\)\u3002\u8fd9\u610f\u5473\u7740\u7531\u6f02\u79fb\u548c\u6269\u6563\u5f15\u8d77\u7684\u6982\u7387\u6d41\u5fc5\u987b\u5b8c\u5168\u76f8\u4e92\u62b5\u6d88\u3002</p> <p>\u8fd9\u4e2a\u7a33\u6001\u65b9\u7a0b\u7684\u89e3\u4e3a:</p> \\[ p_{eq}(v) \\propto \\exp\\left(-\\frac{mv^2}{2k_B T}\\right) \\] <p>\u8fd9\u662f\u4e00\u4e2a\u6781\u5176\u6df1\u523b\u7684\u7ed3\u679c\u3002\u6211\u4eec\u4ece\u4e00\u4e2a\u7eaf\u7cb9\u7684\u52a8\u529b\u5b66\u6a21\u578b(\u6717\u4e4b\u4e07\u65b9\u7a0b)\u51fa\u53d1,\u8fd9\u4e2a\u6a21\u578b\u672c\u8eab\u5bf9\u7edf\u8ba1\u7cfb\u7efc\u6216\u70ed\u529b\u5b66\u4e00\u65e0\u6240\u77e5\u3002\u901a\u8fc7\u63a8\u5bfc\u5e76\u6c42\u89e3\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b,\u6211\u4eec\u8bc1\u660e\u4e86\u8fd9\u4e2a\u52a8\u529b\u5b66\u6a21\u578b\u5fc5\u7136\u4f1a\u5bfc\u81f4\u901f\u5ea6\u7684\u9ea6\u514b\u65af\u97e6-\u73bb\u5c14\u5179\u66fc\u5206\u5e03(Maxwell-Boltzmann distribution),\u800c\u8fd9\u6b63\u662f\u5e73\u8861\u6001\u7edf\u8ba1\u529b\u5b66\u7684\u57fa\u77f3\u3002\u6717\u4e4b\u4e07\u65b9\u7a0b\u63cf\u8ff0\u4e86\u539f\u56e0(\u6469\u64e6\u548c\u968f\u673a\u78b0\u649e),\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u63cf\u8ff0\u4e86\u8fc7\u7a0b(\u6982\u7387\u7684\u6f02\u79fb\u548c\u6269\u6563),\u800c\u9ea6\u514b\u65af\u97e6-\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u5219\u662f\u6700\u7ec8\u7684\u7ed3\u679c(\u552f\u4e00\u3001\u7a33\u5b9a\u7684\u5e73\u8861\u6001)\u3002\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u4e3a\u6211\u4eec\u63ed\u793a\u4e86\u4e00\u4e2a\u7cfb\u7edf\u5982\u4f55\u901a\u8fc7\u4e0e\u73af\u5883\u7684\u76f8\u4e92\u4f5c\u7528(\u6469\u64e6\u548c\u6da8\u843d)\u8fdb\u884c\u70ed\u5316,\u5e76\u6700\u7ec8\u8fbe\u5230\u5176\u70ed\u529b\u5b66\u6240\u9884\u8a00\u7684\u5e73\u8861\u6001\u7684\u5177\u4f53\u52a8\u529b\u5b66\u673a\u5236\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d,\u6da8\u843d-\u8017\u6563\u5b9a\u7406(\\(\\Gamma \\propto \\xi T\\))\u662f\u4fdd\u8bc1\u7cfb\u7edf\u80fd\u591f\u8fbe\u5230\u6b63\u786e\u5e73\u8861\u6001\u7684\u5173\u952e\u3002\u6ca1\u6709\u5b83,\u6f02\u79fb\u548c\u6269\u6563\u4e4b\u95f4\u7684\u5e73\u8861\u5c06\u88ab\u6253\u7834,\u7cfb\u7edf\u4e5f\u5c31\u4e0d\u4f1a\u5f1b\u8c6b\u5230\u7531\u6e29\u5ea6 \\(T\\) \u6240\u51b3\u5b9a\u7684\u6b63\u786e\u72b6\u6001\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#2","title":"2. \u8fc7\u963b\u5c3c\u6781\u9650\u4e0e\u65af\u6469\u68f1\u970d\u592b\u65af\u57fa\u65b9\u7a0b","text":""},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#21","title":"2.1 \u9ad8\u6469\u64e6\u73af\u5883:\u5ffd\u7565\u60ef\u6027","text":"<p>\u73b0\u5728,\u6211\u4eec\u5c06\u7814\u7a76\u7684\u7cfb\u7edf\u4ece\u81ea\u7531\u7c92\u5b50\u6269\u5c55\u5230\u5728\u4e00\u4e2a\u52bf\u573a \\(U(x)\\) \u4e2d\u8fd0\u52a8\u7684\u7c92\u5b50\u3002\u5176\u5b8c\u6574\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e3a:</p> \\[ m\\frac{d^2x}{dt^2} + m\\xi\\frac{dx}{dt} = -\\nabla U(x) + \\eta(t) \\] <p>\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u5730\u8bc6\u522b\u51fa\u65b9\u7a0b\u4e2d\u7684\u5404\u9879:\u60ef\u6027\u9879\u3001\u963b\u5c3c\u9879\u3001\u4fdd\u5b88\u529b\u9879\u548c\u968f\u673a\u529b\u9879\u3002</p> <p>\u5728\u8bb8\u591a\u7269\u7406\u548c\u751f\u7269\u7cfb\u7edf\u4e2d,\u4f8b\u5982\u6c34\u4e2d\u7684\u80f6\u4f53\u9897\u7c92\u6216\u7ec6\u80de\u8d28\u4e2d\u7684\u86cb\u767d\u8d28,\u963b\u5c3c\u529b(\\(m\\xi\\frac{dx}{dt}\\))\u4e0e\u60ef\u6027\u9879(\\(m\\frac{d^2x}{dt^2}\\))\u76f8\u6bd4\u662f\u5de8\u5927\u7684\u3002\u5728\u8fd9\u79cd\"\u8fc7\u963b\u5c3c\"(overdamped)\u6216\"\u9ad8\u6469\u64e6\"\u7684\u6781\u9650\u4e0b,\u7c92\u5b50\u7684\u52a8\u91cf\u4f1a\u56e0\u9891\u7e41\u7684\u78b0\u649e\u800c\u88ab\u8fc5\u901f\u968f\u673a\u5316,\u4ee5\u81f3\u4e8e\u5176\u901f\u5ea6\u80fd\u591f\u77ac\u65f6\u5730\u9002\u5e94\u5c40\u57df\u7684\u529b\u573a\u3002</p> <p>\u8fd9\u79cd\u8fd1\u4f3c\u662f\u65f6\u95f4\u5c3a\u5ea6\u5206\u79bb(timescale separation)\u7684\u4e00\u4e2a\u5178\u578b\u4f8b\u5b50\u3002\u901f\u5ea6 \\(v\\) \u662f\u4e00\u4e2a\"\u5feb\u53d8\u91cf\",\u5b83\u5728 \\(1/\\xi\\) \u8fd9\u6837\u4e00\u4e2a\u6781\u77ed\u7684\u65f6\u95f4\u5c3a\u5ea6\u4e0a\u5c31\u5f1b\u8c6b\u5230\u4e86\u5176\u51c6\u7a33\u6001\u503c\u3002\u800c\u4f4d\u7f6e \\(x\\) \u662f\u4e00\u4e2a\"\u6162\u53d8\u91cf\",\u5b83\u5728\u66f4\u957f\u7684\u65f6\u95f4\u5c3a\u5ea6\u4e0a\u53d1\u751f\u53d8\u5316\u3002\u901a\u8fc7\u5047\u8bbe\u5feb\u53d8\u91cf\u77ac\u65f6\u8fbe\u5230\u5e73\u8861,\u6211\u4eec\u53ef\u4ee5\u4e3a\u6162\u53d8\u91cf\u63a8\u5bfc\u51fa\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u6709\u6548\u8fd0\u52a8\u65b9\u7a0b\u3002\u6362\u53e5\u8bdd\u8bf4,\u5728\u8fc7\u963b\u5c3c\u6781\u9650\u4e0b,\u6211\u4eec\u4e0d\u518d\u5173\u5fc3\u901f\u5ea6 \\(v\\) \u56f4\u7ed5\u5176\u5e73\u8861\u503c\u7684\u5feb\u901f\u6da8\u843d,\u53ea\u5173\u5fc3\u7531\u6b64\u5bfc\u81f4\u7684\u7c92\u5b50\u4f4d\u7f6e \\(x\\) \u7684\u7f13\u6162\u6f14\u5316\u3002</p> <p>\u901a\u8fc7\u5c06\u60ef\u6027\u9879 \\(m\\frac{d^2x}{dt^2}\\) \u8bbe\u4e3a\u96f6,\u6211\u4eec\u5f97\u5230\u4e86\u8fc7\u963b\u5c3c\u6717\u4e4b\u4e07\u65b9\u7a0b,\u4e5f\u79f0\u4e3a\u65af\u6469\u68f1\u970d\u592b\u65af\u57fa\u6717\u4e4b\u4e07\u65b9\u7a0b:</p> \\[ m\\xi\\frac{dx}{dt} = -\\nabla U(x) + \\eta(t) \\]"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#22","title":"2.2 \u8fc1\u79fb\u7387\u3001\u6269\u6563\u4e0e\u7231\u56e0\u65af\u5766\u5173\u7cfb","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u65b9\u7a0b\u91cd\u65b0\u6574\u7406\u6210\u4e00\u4e2a\u66f4\u6807\u51c6\u7684\u5f62\u5f0f:</p> \\[ \\frac{dx}{dt} = -\\frac{1}{m\\xi}\\nabla U(x) + \\frac{1}{m\\xi}\\eta(t) = -\\mu\\nabla U(x) + \\xi(t) \\] <p>\u5728\u8fd9\u91cc,\u6211\u4eec\u5b9a\u4e49\u4e86\u8fc1\u79fb\u7387(mobility) \\(\\mu := \\frac{1}{m\\xi}\\)\u3002\u5b83\u4ee3\u8868\u4e86\u5355\u4f4d\u5916\u529b\u4f5c\u7528\u4e0b\u7c92\u5b50\u6240\u80fd\u8fbe\u5230\u7684\u7ec8\u7aef\u901f\u5ea6\u3002</p> <p>\u65b0\u7684\u566a\u58f0\u9879 \\(\\xi(t) = \\frac{1}{m\\xi}\\eta(t)\\) \u5177\u6709\u65b0\u7684\u7edf\u8ba1\u6027\u8d28\u3002\u5176\u534f\u65b9\u5dee\u4e3a:</p> \\[ \\langle\\xi_i(t)\\xi_j(t')\\rangle = \\frac{\\langle\\eta_i(t)\\eta_j(t')\\rangle}{(m\\xi)^2} = \\frac{2m\\xi k_B T}{(m\\xi)^2} \\delta_{ij}\\delta(t-t') = 2\\mu k_B T \\delta_{ij}\\delta(t-t') \\] <p>\u901a\u5e38,\u6211\u4eec\u901a\u8fc7\u566a\u58f0\u5f3a\u5ea6\u6765\u5b9a\u4e49\u6269\u6563\u7cfb\u6570 \\(D\\):\\(\\langle\\xi_i(t)\\xi_j(t')\\rangle = 2D\\delta_{ij}\\delta(t-t')\\)\u3002\u901a\u8fc7\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u8868\u8fbe\u5f0f,\u6211\u4eec\u5f97\u5230\u4e86\u8457\u540d\u7684\u7231\u56e0\u65af\u5766\u5173\u7cfb(Einstein Relation):</p> \\[ D = \\mu k_B T \\] <p>\u8fd9\u4e2a\u5173\u7cfb\u5f0f\u610f\u4e49\u975e\u51e1,\u5b83\u5c06\u4e00\u4e2a\u5b8f\u89c2\u7684\u8f93\u8fd0\u7cfb\u6570(\\(D\\),\u63cf\u8ff0\u7c92\u5b50\u6269\u6563\u7684\u901f\u5ea6)\u4e0e\u5fae\u89c2\u4e0a\u7c92\u5b50\u5bf9\u529b\u7684\u54cd\u5e94(\\(\\mu\\))\u4ee5\u53ca\u70ed\u80fd(\\(k_B T\\))\u8054\u7cfb\u4e86\u8d77\u6765\u3002</p> <p>\u7231\u56e0\u65af\u5766\u5173\u7cfb(Einstein Relation) \\(D = \\mu k_B T\\) \u7684\u63d0\u51fa\u6e90\u4e8e1905\u5e74\u7231\u56e0\u65af\u5766\u5bf9\u5e03\u6717\u8fd0\u52a8\u7684\u7406\u8bba\u7814\u7a76,\u4ee5\u53caMarian Smoluchowski\u57281906\u5e74\u7684\u72ec\u7acb\u63a8\u5bfc\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f:\u7c92\u5b50\u5728\u70ed\u5e73\u8861\u4e0b\u7684\u968f\u673a\u8fd0\u52a8(\u6269\u6563)\u4e0e\u5916\u90e8\u529b\u573a\u9a71\u52a8\u7684\u5b9a\u5411\u8fd0\u52a8(\u8fc1\u79fb)\u53d7\u540c\u4e00\u70ed\u529b\u5b66\u91cf \\(k_B T\\) \u8c03\u63a7\u3002\u8fd9\u4e00\u516c\u5f0f\u4e0d\u4ec5\u662f\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7684\u65e9\u671f\u4f53\u73b0,\u8fd8\u4e3a\u540e\u7eed\u7814\u7a76\u63d0\u4f9b\u4e86\u7406\u8bba\u57fa\u77f3\u3002\u7231\u56e0\u65af\u5766\u5173\u7cfb\u5c06\u5fae\u89c2\u6da8\u843d\u4e0e\u5b8f\u89c2\u54cd\u5e94\u7edf\u4e00,\u6210\u4e3a\u8fde\u63a5\u7edf\u8ba1\u7269\u7406\u4e0e\u5de5\u7a0b\u5e94\u7528\u7684\u5173\u952e\u6865\u6881\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#23","title":"2.3 \u65af\u6469\u68f1\u970d\u592b\u65af\u57fa\u65b9\u7a0b","text":"<p>\u73b0\u5728,\u6211\u4eec\u91cd\u590d\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u7684\u63a8\u5bfc\u8fc7\u7a0b,\u4f46\u8fd9\u6b21\u662f\u9488\u5bf9\u4f4d\u7f6e\u53d8\u91cf \\(x\\),\u5e76\u4f7f\u7528\u8fc7\u963b\u5c3c\u6717\u4e4b\u4e07\u65b9\u7a0b\u3002</p> <ul> <li>\u6f02\u79fb\u7cfb\u6570 \\(A_i\\):</li> </ul> \\[ A_i = \\lim_{\\Delta t \\to 0} \\frac{\\langle\\Delta x_i\\rangle}{\\Delta t} = \\langle-\\mu \\partial_i U\\rangle = -\\mu \\partial_i U = \\mu F_i \\] <p>\u6b64\u65f6\u7684\u6f02\u79fb\u662f\u7531\u4fdd\u5b88\u529b \\(F = -\\nabla U\\) \u51b3\u5b9a\u7684\u3002</p> <ul> <li>\u6269\u6563\u7cfb\u6570 \\(B_{ij}\\):</li> </ul> \\[ B_{ij} = \\lim_{\\Delta t \\to 0} \\frac{\\langle \\Delta x_i \\Delta x_j \\rangle}{\\Delta t} = \\frac{1}{\\Delta t} \\langle (\\Delta W_\\xi)_i (\\Delta W_\\xi)_j \\rangle = 2D \\delta_{ij} \\] <p>\u5728\u4f4d\u7f6e\u7a7a\u95f4\u4e2d\u7684\u6269\u6563\u662f\u6052\u5b9a\u7684(\u5982\u679c\\(D\\)\u662f\u5e38\u6570),\u5176\u5927\u5c0f\u7531\u6269\u6563\u7cfb\u6570 \\(D\\) \u7ed9\u51fa\u3002</p> <p>\u5c06\u8fd9\u4e9b\u7cfb\u6570\u7ec4\u5408\u8d77\u6765,\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u63cf\u8ff0\u4f4d\u7f6e\u6982\u7387\u5206\u5e03 \\(P(x,t)\\) \u7684\u65af\u6469\u68f1\u970d\u592b\u65af\u57fa\u65b9\u7a0b(Smoluchowski Equation),\u5b83\u6b63\u662f\u4f4d\u7f6e\u7a7a\u95f4\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b:</p> \\[ \\partial_t P(x, t) = \\nabla \\cdot [\\mu(\\nabla U)P(x, t)] + D\\nabla^2 P(x, t) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u4e5f\u53ef\u4ee5\u5199\u4f5c \\(\\partial_t P = \\nabla \\cdot [\\mu(\\nabla U)P + D\\nabla P]\\)\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#24","title":"2.4 \u52bf\u573a\u4e2d\u7684\u5e73\u8861\u6001","text":"<p>\u4e0e\u4e4b\u524d\u4e00\u6837,\u6211\u4eec\u901a\u8fc7\u8bbe\u7f6e \\(\\partial_t P = 0\\) \u6765\u6c42\u89e3\u7a33\u6001\u89e3\u3002\u8fd9\u610f\u5473\u7740\u6563\u5ea6\u9879\u5185\u90e8\u7684\u6982\u7387\u6d41\u5728\u7a33\u6001\u65f6\u5fc5\u987b\u4e3a\u96f6(\u5047\u8bbe\u5728\u65e0\u7a77\u8fdc\u5904\u6982\u7387\u6d41\u4e3a\u96f6)\u3002</p> <p>\u8fd9\u4e2a\u6761\u4ef6\u7684\u89e3\u4e3a:</p> \\[ P_{eq}(x) \\propto \\exp\\left(-\\frac{\\mu}{D}U(x)\\right) \\] <p>\u5229\u7528\u6211\u4eec\u521a\u521a\u5f97\u5230\u7684\u7231\u56e0\u65af\u5766\u5173\u7cfb \\(D = \\mu k_B T\\),\u53ef\u4ee5\u5f97\u5230 \\(\\frac{\\mu}{D} = \\frac{1}{k_B T}\\)\u3002\u4ee3\u5165\u4e0a\u5f0f,\u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u672c\u8bb2\u7684\u7b2c\u4e8c\u4e2a\u4e3b\u8981\u7ed3\u679c:</p> \\[ P_{eq}(x) \\propto \\exp\\left(-\\frac{U(x)}{k_B T}\\right) \\] <p>\u8fd9\u5c31\u662f\u73bb\u5c14\u5179\u66fc\u5206\u5e03(Boltzmann distribution),\u5b83\u662f\u6b63\u5219\u7cfb\u7efc\u7edf\u8ba1\u529b\u5b66\u7684\u57fa\u672c\u5047\u8bbe\u3002\u65af\u6469\u68f1\u970d\u592b\u65af\u57fa\u65b9\u7a0b\u4e3a\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u63d0\u4f9b\u4e86\u52a8\u529b\u5b66\u4e0a\u7684\u5408\u7406\u89e3\u91ca\u3002\u5b83\u544a\u8bc9\u6211\u4eec,\u4e00\u4e2a\u4e0e\u6e29\u5ea6\u4e3a \\(T\\) \u7684\u70ed\u6d74\u63a5\u89e6\u7684\u7cfb\u7edf,\u4e4b\u6240\u4ee5\u4f1a\u4ee5\u73bb\u5c14\u5179\u66fc\u56e0\u5b50\u7ed9\u51fa\u7684\u6982\u7387\u6765\u63a2\u7d22\u4e00\u4e2a\u52bf\u80fd\u666f\u89c2 \\(U(x)\\),\u662f\u56e0\u4e3a\u5b58\u5728\u4e00\u4e2a\u7cbe\u786e\u7684\u5e73\u8861:\u52bf\u573a \\(U(x)\\) \u4ea7\u751f\u4e86\u4e00\u4e2a\u4f7f\u7c92\u5b50\u8d8b\u5411\u80fd\u91cf\u6700\u5c0f\u5904\u7684\u6f02\u79fb,\u800c\u5f3a\u5ea6\u4e0e\u6e29\u5ea6\u6210\u6b63\u6bd4\u7684\u70ed\u566a\u58f0 \\(D\\) \u5219\u4ea7\u751f\u4e86\u4e00\u4e2a\u4f7f\u7c92\u5b50\u80fd\u591f\u9003\u79bb\u52bf\u9631\u3001\u63a2\u7d22\u6574\u4e2a\u76f8\u7a7a\u95f4\u7684\u6269\u6563\u3002\u7231\u56e0\u65af\u5766\u5173\u7cfb\u6070\u597d\u662f\u4fdd\u8bc1\u8fd9\u79cd\u80fd\u91cf\u6700\u5c0f\u5316\u6f02\u79fb\u4e0e\u71b5\u6700\u5927\u5316\u6269\u6563\u4e4b\u95f4\u8fbe\u5230\u5e73\u8861,\u5e76\u4ea7\u751f\u6b63\u786e\u7684\u73bb\u5c14\u5179\u66fc\u7edf\u8ba1\u7684\u7cbe\u786e\u6761\u4ef6\u3002</p> <p>\u73bb\u5c14\u5179\u66fc\u5206\u5e03 \\(P_{\\text{eq}}(x) \\propto \\exp\\left(-\\frac{U(x)}{k_B T}\\right)\\) \u662f\u7edf\u8ba1\u529b\u5b66\u7684\u57fa\u77f3\u6027\u7ed3\u679c,\u5176\u91cd\u8981\u6027\u8fdc\u8d85\u5355\u4e00\u7269\u7406\u6a21\u578b\u3002\u5b83\u7531\u8def\u5fb7\u7ef4\u5e0c\u00b7\u73bb\u5c14\u5179\u66fc\u57281870\u5e74\u4ee3\u63d0\u51fa,\u901a\u8fc7\u5c06\u9ea6\u514b\u65af\u97e6\u6c14\u4f53\u5206\u5b50\u901f\u5ea6\u5206\u5e03\u63a8\u5e7f\u81f3\u80fd\u91cf\u7a7a\u95f4,\u9996\u6b21\u4e3a\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u63d0\u4f9b\u4e86\u5fae\u89c2\u52a8\u529b\u5b66\u57fa\u7840\u2014\u2014\u7cfb\u7edf\u8d8b\u5411\u71b5\u6700\u5927\u5316\u7684\u72b6\u6001,\u672c\u8d28\u4e0a\u662f\u6982\u7387\u5206\u5e03\u7531\u80fd\u91cf\u4e3b\u5bfc\u7684\u5e73\u8861\u7ed3\u679c\u30021902\u5e74,\u7ea6\u897f\u4e9a\u00b7\u5409\u5e03\u65af\u5728\u7cfb\u7efc\u7406\u8bba\u4e2d\u5c06\u5176\u5f62\u5f0f\u5316\u4e3a\u6b63\u5219\u7cfb\u7efc,\u5960\u5b9a\u4e86\u73b0\u4ee3\u7edf\u8ba1\u7269\u7406\u7684\u6570\u5b66\u6846\u67b6;1905\u5e74,\u7231\u56e0\u65af\u5766\u901a\u8fc7\u5e03\u6717\u8fd0\u52a8\u7684\u6da8\u843d-\u8017\u6563\u5b9a\u7406(\\(D = \\mu k_B T\\))\u4ece\u52a8\u529b\u5b66\u89d2\u5ea6\u4e25\u683c\u9a8c\u8bc1\u4e86\u8be5\u5206\u5e03\u7684\u666e\u9002\u6027,\u63ed\u793a\u4e86\u80fd\u91cf\u6700\u5c0f\u5316\u6f02\u79fb\u4e0e\u71b5\u6700\u5927\u5316\u6269\u6563\u7684\u7cbe\u786e\u5e73\u8861\u673a\u5236\u3002</p> <p>\u5728\u5e94\u7528\u5c42\u9762,\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u5df2\u6e17\u900f\u81f3\u591a\u5b66\u79d1:\u5728\u5316\u5b66\u4e2d,\u5b83\u89e3\u91ca\u4e86\u963f\u4f26\u5c3c\u4e4c\u65af\u65b9\u7a0b\u7684\u6e29\u5ea6\u4f9d\u8d56\u6027,\u7528\u4e8e\u8ba1\u7b97\u53cd\u5e94\u901f\u7387\u548c\u5e73\u8861\u5e38\u6570;\u5728\u6750\u6599\u79d1\u5b66\u4e2d,\u5b83\u63cf\u8ff0\u4e86\u6676\u4f53\u4e2d\u7f3a\u9677(\u5982\u7a7a\u4f4d\u3001\u4f4d\u9519)\u7684\u6d53\u5ea6\u5206\u5e03,\u6307\u5bfc\u534a\u5bfc\u4f53\u63ba\u6742\u8bbe\u8ba1;\u5728\u751f\u7269\u7269\u7406\u5b66\u4e2d,\u5b83\u6210\u4e3a\u86cb\u767d\u8d28\u6298\u53e0\u80fd\u91cf\u666f\u89c2\u7684\u6838\u5fc3\u6a21\u578b,\u9884\u6d4b\u4e86\u9176\u6d3b\u6027\u4f4d\u70b9\u7684\u6784\u8c61\u6982\u7387;\u5728\u4fe1\u606f\u79d1\u5b66\u4e2d,\u73bb\u5c14\u5179\u66fc\u673a(Boltzmann machine)\u5229\u7528\u5176\u6982\u7387\u7ed3\u6784\u5f00\u53d1\u4e86\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u3002\u66f4\u6df1\u8fdc\u7684\u662f,\u5b83\u4e3a\u91cf\u5b50\u7edf\u8ba1(\u5982\u8d39\u7c73-\u72c4\u62c9\u514b\u548c\u73bb\u8272-\u7231\u56e0\u65af\u5766\u5206\u5e03\u7684\u9ad8\u6e29\u6781\u9650)\u63d0\u4f9b\u4e86\u7edf\u4e00\u6846\u67b6,\u5e76\u5728\u5b87\u5b99\u5b66\u4e2d\u7528\u4e8e\u5206\u6790\u661f\u7cfb\u56e2\u7684\u6697\u7269\u8d28\u5206\u5e03\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#-","title":"\u603b\u7ed3:\u901f\u5ea6\u7a7a\u95f4\u4e0e\u4f4d\u7f6e\u7a7a\u95f4\u798f\u514b-\u666e\u6717\u514b\u7cfb\u7edf\u7684\u5bf9\u6bd4","text":"<p>\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u672c\u8bb2\u7684\u4e24\u4e2a\u6838\u5fc3\u90e8\u5206,\u4e0b\u8868\u5c06\u5b83\u4eec\u5e76\u5217\u8fdb\u884c\u6bd4\u8f83,\u7a81\u51fa\u5b83\u4eec\u5728\u6570\u5b66\u7ed3\u6784\u4e0a\u7684\u76f8\u4f3c\u6027\u4ee5\u53ca\u5728\u7269\u7406\u53d8\u91cf\u548c\u89e3\u91ca\u4e0a\u7684\u5dee\u5f02\u3002</p> \u7279\u5f81 \u7b2c\u4e00\u90e8\u5206:\u901f\u5ea6\u7a7a\u95f4 \u7b2c\u4e8c\u90e8\u5206:\u4f4d\u7f6e\u7a7a\u95f4(\u8fc7\u963b\u5c3c) \u76f8\u5173\u53d8\u91cf \u901f\u5ea6 \\(v(t)\\) \u4f4d\u7f6e \\(x(t)\\) \u6717\u4e4b\u4e07\u65b9\u7a0b \\(m\\dot{v} = -m\\xi v + \\eta(t)\\) \\(\\dot{x} = -\\mu\\nabla U + \\xi(t)\\) \u6f02\u79fb\u7cfb\u6570 \\(A_i = -\\xi v_i\\) \\(A_i = -\\mu\\partial_i U\\) \u6269\u6563\u7cfb\u6570 \\(B_{ij} = \\frac{2k_B T\\xi}{m}\\delta_{ij}\\) \\(B_{ij} = 2D\\delta_{ij}\\) \u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b \\(\\partial_t p = \\nabla_v \\cdot (\\xi vp) + \\frac{k_B T\\xi}{m}\\nabla_v^2 p\\) \\(\\partial_t P = \\nabla \\cdot (\\mu(\\nabla U)P) + D\\nabla^2 P\\) \u5e73\u8861\u89e3 \u9ea6\u514b\u65af\u97e6-\u73bb\u5c14\u5179\u66fc\u5206\u5e03 \u73bb\u5c14\u5179\u66fc\u5206\u5e03 \u7269\u7406\u610f\u4e49 \u52a8\u80fd\u7684\u70ed\u5316 \u5728\u52bf\u573a\u4e2d\u7684\u7a7a\u95f4\u6392\u5e03"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#3","title":"3. \u53ef\u89c6\u5316\u65af\u6469\u68f1\u970d\u592b\u65af\u57fa\u8fc7\u7a0b","text":"<p>\u6848\u4f8b\u90e8\u5206,\u6211\u4eec\u5c06\u901a\u8fc7Python\u4ee3\u7801\u6765\u6a21\u62df\u591a\u4e2a\u7c92\u5b50\u5728\u4e8c\u7ef4\u52bf\u9631\u4e2d\u7684\u8fc7\u963b\u5c3c\u5e03\u6717\u8fd0\u52a8,\u5e76\u5c06\u5176\u5236\u4f5c\u6210\u52a8\u753b\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#31","title":"3.1 \u6570\u503c\u6311\u6218:\u6c42\u89e3\u968f\u673a\u5fae\u5206\u65b9\u7a0b","text":"<p>\u5bf9\u4e8e\u666e\u901a\u7684\u5e38\u5fae\u5206\u65b9\u7a0b(ODE),\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u7684\u6b27\u62c9\u6cd5 \\(x_{n+1} = x_n + f(x_n)\\Delta t\\) \u8fdb\u884c\u6570\u503c\u6c42\u89e3\u3002\u7136\u800c,\u5bf9\u4e8e\u968f\u673a\u5fae\u5206\u65b9\u7a0b(SDE),\u8fd9\u79cd\u6734\u7d20\u7684\u65b9\u6cd5\u662f\u9519\u8bef\u7684,\u56e0\u4e3a\u5b83\u6ca1\u6709\u6b63\u786e\u5730\u5904\u7406\u968f\u673a\u9879\u7684\u6807\u5ea6\u5173\u7cfb\u3002</p> <p>\u6b63\u786e\u7684\u3001\u4e5f\u662f\u6700\u7b80\u5355\u7684\u6570\u503c\u6c42\u89e3SDE\u7684\u683c\u5f0f\u662f\u6b27\u62c9-\u4e38\u5c71\u6cd5(Euler-Maruyama method)\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5f62\u5982 \\(dX = a(X)dt + b(X)dW\\) \u7684SDE,\u5176\u66f4\u65b0\u89c4\u5219\u4e3a:</p> \\[ X_{n+1} = X_n + a(X_n)\\Delta t + b(X_n)\\sqrt{\\Delta t} \\cdot \\mathcal{N}(0,1) \\] <p>\u5176\u4e2d \\(\\mathcal{N}(0,1)\\) \u662f\u4e00\u4e2a\u4ece\u5747\u503c\u4e3a0\u3001\u65b9\u5dee\u4e3a1\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u4e2d\u62bd\u53d6\u7684\u968f\u673a\u6570\u3002</p> <p>\u8fd9\u91cc\u7684\u5173\u952e\u533a\u522b\u5728\u4e8e\u968f\u673a\u589e\u91cf\u9879,\u5b83\u4e0e \\(\\sqrt{\\Delta t}\\) \u6210\u6b63\u6bd4,\u800c\u4e0d\u662f \\(\\Delta t\\)\u3002\u8fd9\u76f4\u63a5\u53cd\u6620\u4e86\u6211\u4eec\u4e4b\u524d\u4ece\u7406\u8bba\u4e0a\u63a8\u5bfc\u51fa\u7684\u7ed3\u8bba:\u566a\u58f0\u589e\u91cf\u7684\u65b9\u5dee\u4e0e \\(\\Delta t\\) \u6210\u6b63\u6bd4\u3002\u6b27\u62c9-\u4e38\u5c71\u6cd5\u6b63\u662f\u8fd9\u4e00\u7406\u8bba\u7ed3\u679c\u5728\u6570\u503c\u8ba1\u7b97\u4e0a\u7684\u76f4\u63a5\u5e94\u7528\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#32","title":"3.2 \u7cfb\u7edf\u8bbe\u7f6e:\u4e8c\u7ef4\u8c10\u632f\u5b50\u52bf\u9631\u4e2d\u7684\u7c92\u5b50","text":"<p>\u6211\u4eec\u5c06\u6a21\u62df\u591a\u4e2a\u975e\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u7684\u8fc7\u963b\u5c3c\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\u3002</p> <ul> <li> <p>\u52bf\u573a\u6a21\u578b:\u4e3a\u4e86\u6e05\u6670\u5730\u5c55\u793a\u6982\u5ff5,\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u7b80\u5355\u7684\u4e8c\u7ef4\u8c10\u632f\u5b50\u52bf\u9631,\u5176\u52bf\u80fd\u51fd\u6570\u4e3a \\(U(x,y) = \\frac{1}{2}k(x^2+y^2)\\)\u3002\u8fd9\u662f\u4e00\u4e2a\u4e2d\u5fc3\u7684\u675f\u7f1a\u52bf,\u5b83\u4ea7\u751f\u7684\u529b\u4e3a \\(F = -\\nabla U = -kr\\),\u603b\u662f\u6307\u5411\u539f\u70b9\u3002</p> </li> <li> <p>\u79bb\u6563\u5316\u65b9\u7a0b:\u5c06\u6b27\u62c9-\u4e38\u5c71\u6cd5\u5e94\u7528\u4e8e\u6211\u4eec\u7684\u4e8c\u7ef4\u7cfb\u7edf,\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u66f4\u65b0\u89c4\u5219:</p> </li> </ul> \\[ x_{n+1} = x_n - \\mu k x_n \\Delta t + \\sqrt{2D \\Delta t} \\cdot \\mathcal{N}_x(0,1) \\] \\[ y_{n+1} = y_n - \\mu k y_n \\Delta t + \\sqrt{2D \\Delta t} \\cdot \\mathcal{N}_y(0,1) \\] <p>\u5176\u4e2d \\(\\mathcal{N}_x\\) \u548c \\(\\mathcal{N}_y\\) \u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u6807\u51c6\u6b63\u6001\u968f\u673a\u6570\u3002</p> <ul> <li>\u6a21\u62df\u53c2\u6570:\u5728\u4ee3\u7801\u4e2d,\u6211\u4eec\u5c06\u5b9a\u4e49\u5fc5\u8981\u7684\u53c2\u6570,\u5305\u62ec\u7c92\u5b50\u6570\u91cf <code>num_particles</code>\u3001\u8fc1\u79fb\u7387 <code>mu</code>\u3001\u52bf\u9631\u5f3a\u5ea6 <code>k</code>\u3001\u6269\u6563\u7cfb\u6570 <code>D</code>(\u5b83\u901a\u8fc7\u7231\u56e0\u65af\u5766\u5173\u7cfb\u4e0e\u6e29\u5ea6 <code>kBT</code> \u76f8\u5173)\u3001\u65f6\u95f4\u6b65\u957f <code>dt</code> \u4ee5\u53ca\u603b\u6a21\u62df\u6b65\u6570 <code>num_steps</code>\u3002</li> </ul>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#33-python","title":"3.3 Python\u4ee3\u7801\u5b9e\u73b0\u4e0e\u53ef\u89c6\u5316","text":"<p>\u4e0b\u9762\u7684Python\u4ee3\u7801\u5c06\u5b9e\u73b0\u4e0a\u8ff0\u6a21\u62df\u8fc7\u7a0b,\u5e76\u751f\u6210\u4e00\u4e2aGIF\u52a8\u753b,\u5c55\u793a\u7c92\u5b50\u7cfb\u7efc\u7684\u6f14\u5316\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport os\nimport imageio\n\n# --- 0. Set plotting style ---\nplt.style.use('dark_background')\n\n# --- 1. Simulation parameter definition ---\nnum_particles = 500      # Increase number of particles for better statistics\nk = 1.0                  # Harmonic oscillator potential strength (U = 0.5*k*r^2)\nkBT = 0.5                # Thermal energy, k_B * T\nmu = 1.0                 # Mobility\n# Core relationship: Diffusion coefficient determined by fluctuation-dissipation theorem (Einstein relation)\nD = mu * kBT             \n\ndt = 0.01                # Time step\nnum_steps = 1000         # Total simulation steps\nsimulation_time = dt * num_steps\n\n# --- 2. Initialize particle positions ---\n# Initially distribute particles randomly within a disk\ninitial_radius = 4.0\ntheta = np.random.uniform(0, 2 * np.pi, num_particles)\nr = np.sqrt(np.random.uniform(0, initial_radius**2, num_particles))\npositions = np.zeros((num_particles, 2))\npositions[:, 0] = r * np.cos(theta)\npositions[:, 1] = r * np.sin(theta)\n\n# --- 3. Simulation main loop and GIF generation ---\nfig, ax = plt.subplots(figsize=(8, 8))\nax.set_aspect('equal')\n\n# Prepare folder to store image frames\noutput_folder = 'brownian_motion_frames'\nif not os.path.exists(output_folder):\n    os.makedirs(output_folder)\n\n# Pre-calculate coefficient for random term\nnoise_strength = np.sqrt(2 * D * dt)\n\n# Store filenames for each frame\nframe_files = []\n\nprint(\"Starting to generate GIF animation frames...\")\n# Simulation loop\nfor step in range(num_steps):\n    # This is the numerical solution of the overdamped Langevin equation (Euler-Maruyama method).\n    # This equation describes the trajectory of individual particles, and is the microscopic basis of the Fokker-Planck (Smoluchowski) equation.\n\n    # Calculate drift term (from harmonic oscillator potential F = -k*r)\n    drift = -mu * k * positions * dt\n\n    # Calculate random term (diffusion)\n    noise = noise_strength * np.random.randn(num_particles, 2)\n\n    # Update positions of all particles\n    positions += drift + noise\n\n    # Save a frame image every few steps to create GIF\n    if step % 10 == 0:\n        ax.clear()\n        # Use brighter colors to adapt to black background\n        ax.scatter(positions[:, 0], positions[:, 1], alpha=0.7, c='cyan', edgecolors='w', s=30, linewidths=0.5)\n        ax.set_xlim(-5, 5)\n        ax.set_ylim(-5, 5)\n        ax.set_title(f\"Overdamped Brownian Motion (Time = {step*dt:.2f})\", fontsize=14)\n        ax.set_xlabel(\"x position\")\n        ax.set_ylabel(\"y position\")\n\n        # Plot contour lines of theoretical equilibrium distribution\n        # Theoretical standard deviation sigma^2 = kBT/k\n        sigma_theory = np.sqrt(kBT / k)\n        circle1 = plt.Circle((0, 0), sigma_theory, color='r', fill=False, linestyle='--', label=r'$1\\sigma_{theory}$')\n        circle2 = plt.Circle((0, 0), 2*sigma_theory, color='r', fill=False, linestyle=':', label=r'$2\\sigma_{theory}$')\n        ax.add_artist(circle1)\n        ax.add_artist(circle2)\n        ax.legend()\n\n        filename = os.path.join(output_folder, f'frame_{step//10:04d}.png')\n        plt.savefig(filename)\n        frame_files.append(filename)\n\nplt.close(fig)\nprint(f\"Generated {len(frame_files)} image frames.\")\n\n# --- 4. Use imageio to combine image frames into GIF ---\nprint(\"Combining image frames into GIF...\")\ngif_path = 'overdamped_brownian_motion_dark.gif'\nwith imageio.get_writer(gif_path, mode='I', fps=20, loop=0) as writer:\n    for filename in frame_files:\n        image = imageio.imread(filename)\n        writer.append_data(image)\n\nprint(f\"GIF saved as '{gif_path}'\")\n\n# Clean up temporary image files\nfor filename in frame_files:\n    os.remove(filename)\nos.rmdir(output_folder)\nprint(\"Cleaned up temporary image files.\")\n\n\n# --- 5. Final distribution analysis: Comparison of simulation results with steady-state solution of Smoluchowski equation ---\nprint(\"Plotting final probability distribution...\")\nfig_dist, ax_dist = plt.subplots(figsize=(10, 8))\n\n# Plot 2D histogram (heatmap) of simulation results\n# This represents the particle probability distribution P(x, y) obtained from Langevin dynamics simulation\ncounts, xedges, yedges, im = ax_dist.hist2d(\n    positions[:, 0], positions[:, 1], \n    bins=50, density=True, cmap='inferno'\n)\nfig_dist.colorbar(im, ax=ax_dist, label='Simulated Probability Density')\n\n# Calculate and plot theoretical steady-state solution\n# The steady-state solution of the Smoluchowski equation is the Boltzmann distribution: P(x, y) ~ exp(-U(x,y)/kBT)\n# For harmonic oscillator potential U = 0.5*k*(x^2+y^2), this is a 2D Gaussian distribution\nsigma_theory = np.sqrt(kBT / k)\nx = np.linspace(-5, 5, 100)\ny = np.linspace(-5, 5, 100)\nX, Y = np.meshgrid(x, y)\nZ = (1.0 / (2 * np.pi * sigma_theory**2)) * np.exp(-(X**2 + Y**2) / (2 * sigma_theory**2))\n\n# Overlay theoretical solution as contour lines on heatmap\nax_dist.contour(X, Y, Z, levels=5, colors='lime', linewidths=1.5, linestyles='--')\n\n# Set chart title and labels\nax_dist.set_title(\"Final Distribution vs. Smoluchowski Equation Steady-State\", fontsize=16)\nax_dist.set_xlabel(\"x position\")\nax.set_aspect('equal')\nax_dist.set_ylabel(\"y position\")\n\n# Create a fake line object for legend\nfrom matplotlib.lines import Line2D\nlegend_elements = [Line2D([0], [0], color='lime', lw=2, linestyle='--', label='Theory (Boltzmann Distribution)')]\nax_dist.legend(handles=legend_elements)\nax_dist.set_aspect('equal', 'box')\n\nfinal_dist_path = 'final_distribution_comparison.png'\nplt.savefig(final_dist_path, dpi=150)\nprint(f\"Final distribution comparison plot saved as '{final_dist_path}'\")\nplt.show()\n</code></pre> <p></p> <p>\u4e0a\u56fe\u5c55\u793a\u4e86\u7c92\u5b50\u5982\u4f55\u4ece\u4e00\u4e2a\u8f83\u5927\u7684\u521d\u59cb\u533a\u57df,\u5728\u8c10\u632f\u5b50\u52bf\u7684\"\u5438\u5f15\"\u548c\u70ed\u566a\u58f0\u7684\"\u6270\u52a8\"\u4e0b,\u9010\u6e10\u5411\u4e2d\u5fc3\u805a\u96c6,\u6700\u7ec8\u5728\u4e00\u4e2a\u6838\u5fc3\u533a\u57df\u5185\u52a8\u6001\u5e73\u8861\u7684\u8fc7\u7a0b\u3002</p> <p></p> <p>\u4e0a\u56fe\u662f\u7531\u6a21\u62df\u7ed3\u675f\u65f6\u6240\u6709500\u4e2a\u7c92\u5b50\u7684\u6700\u7ec8\u4f4d\u7f6e\u751f\u6210\u7684\u4e8c\u7ef4\u76f4\u65b9\u56fe,\u4ee3\u8868\u4e86\u5b9e\u9a8c\u6216\u6a21\u62df\u6d4b\u91cf\u51fa\u7684\u7c92\u5b50\u6982\u7387\u5bc6\u5ea6\u3002\u53e0\u52a0\u5728\u70ed\u529b\u56fe\u4e0a\u7684\u662f\u51e0\u5708\u5e73\u6ed1\u7684\u7eff\u8272\u865a\u7ebf\u540c\u5fc3\u5706\u3002\u8fd9\u4ee3\u8868\u4e86\u7406\u8bba\u9884\u6d4b\u3002\u5b83\u662f\u6839\u636e\u65af\u83ab\u9c81\u970d\u592b\u65af\u57fa\u65b9\u7a0b\u7684\u7a33\u6001\u89e3\u2014\u2014\u73bb\u5c14\u5179\u66fc\u5206\u5e03 \\(P_{\\text{eq}}(x) \\propto \\exp\\left(-\\frac{U(x)}{k_B T}\\right)\\) \u2014\u2014\u7cbe\u786e\u8ba1\u7b97\u51fa\u7684\u4e8c\u7ef4\u9ad8\u65af\u5206\u5e03\u7684\u7b49\u9ad8\u7ebf\u3002\u57fa\u4e8e\u5355\u7c92\u5b50\u8f68\u8ff9\u7684\u6717\u4e4b\u4e07\u52a8\u529b\u5b66(\u5fae\u89c2\u6a21\u62df),\u5176\u957f\u65f6\u95f4\u6f14\u5316\u7684\u7edf\u8ba1\u7ed3\u679c(\u70ed\u529b\u56fe),\u7cbe\u786e\u5730\u6536\u655b\u4e8e\u798f\u514b-\u666e\u6717\u514b/\u65af\u83ab\u9c81\u970d\u592b\u65af\u57fa\u65b9\u7a0b\u6240\u63cf\u8ff0\u7684\u6982\u7387\u5206\u5e03\u7684\u7a33\u6001\u89e3(\u7eff\u8272\u7b49\u9ad8\u7ebf)\u3002</p>"},{"location":"zh/notes/18.%20%E7%A6%8F%E5%85%8B-%E6%99%AE%E6%9C%97%E5%85%8B%E6%96%B9%E7%A8%8B%E4%B8%8E%E6%96%AF%E6%91%A9%E6%A3%B1%E9%9C%8D%E5%A4%AB%E6%96%AF%E5%9F%BA%E6%96%B9%E7%A8%8B%EF%BC%9A%E4%BB%8E%E9%9A%8F%E6%9C%BA%E8%BD%A8%E8%BF%B9%E5%88%B0%E6%A6%82%E7%8E%87%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_2","title":"\u603b\u7ed3","text":"<p>\u8fd9\u8282\u8bfe\u662f\u5728\u63cf\u8ff0\u968f\u673a\u8fc7\u7a0b\u7684\u4e24\u79cd\u57fa\u672c\u89c6\u89d2\u4e4b\u95f4\u5efa\u7acb\u4e86\u4e00\u5ea7\u6865\u6881:\u4e00\u79cd\u662f\u57fa\u4e8e\u7c92\u5b50\u8f68\u8ff9\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b (Langevin Equation),\u53e6\u4e00\u79cd\u662f\u57fa\u4e8e\u6982\u7387\u5206\u5e03\u6f14\u5316\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b (Fokker-Planck Equation)\u3002\u8fd9\u4e24\u79cd\u89c6\u89d2\u867d\u7136\u5728\u6570\u5b66\u5f62\u5f0f\u4e0a\u622a\u7136\u4e0d\u540c\u2014\u2014\u524d\u8005\u662f\u968f\u673a\u5fae\u5206\u65b9\u7a0b,\u540e\u8005\u662f\u786e\u5b9a\u6027\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u2014\u2014\u4f46\u5b83\u4eec\u63cf\u8ff0\u7684\u662f\u540c\u4e00\u4e2a\u7269\u7406\u73b0\u5b9e,\u5e76\u4e14\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684\u3002</p> <ol> <li> <p>\u4ece\u901f\u5ea6\u7684\u968f\u673a\u6e38\u8d70\u5230\u7edf\u8ba1\u89c4\u5f8b:\u6211\u4eec\u4ece\u4e00\u4e2a\u5e03\u6717\u7c92\u5b50\u7684\u5b8c\u6574\u6717\u4e4b\u4e07\u65b9\u7a0b\u51fa\u53d1,\u5b83\u5305\u542b\u4e86\u60ef\u6027\u3001\u6469\u64e6\u529b\u548c\u968f\u673a\u529b\u3002\u901a\u8fc7\u5206\u6790\u901f\u5ea6\u5728\u5fae\u5c0f\u65f6\u95f4\u95f4\u9694\u5185\u7684\u53d8\u5316(\u5373\u8ba1\u7b97\u5176\u6f02\u79fb\u548c\u6269\u6563\u7cfb\u6570),\u6211\u4eec\u4e25\u683c\u5730\u63a8\u5bfc\u51fa\u4e86\u63cf\u8ff0\u901f\u5ea6\u6982\u7387\u5206\u5e03 \\(p(v,t)\\) \u6f14\u5316\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u3002\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7a33\u6001\u89e3,\u4e0d\u8d1f\u4f17\u671b\u5730,\u6b63\u662f\u70ed\u529b\u5b66\u5e73\u8861\u6001\u4e0b\u7684 \u9ea6\u514b\u65af\u97e6-\u73bb\u5c14\u5179\u66fc\u5206\u5e03 (Maxwell-Boltzmann distribution)\u3002\u8fd9\u9a8c\u8bc1\u4e86\u6717\u4e4b\u4e07\u6a21\u578b\u4e0e\u7edf\u8ba1\u529b\u5b66\u57fa\u672c\u539f\u7406\u7684\u4e00\u81f4\u6027\u3002</p> </li> <li> <p>\u9ad8\u963b\u5c3c\u4e0b\u7684\u7b80\u5316:\u65af\u83ab\u9c81\u970d\u592b\u65af\u57fa\u65b9\u7a0b:\u5728\u8bb8\u591a\u7269\u7406\u548c\u751f\u7269\u7cfb\u7edf\u4e2d(\u5982\u7ec6\u80de\u5185\u90e8),\u73af\u5883\u7684\u7c98\u6027\u6781\u5f3a,\u5bfc\u81f4\u7c92\u5b50\u7684\u60ef\u6027\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u5728\u8fd9\u4e2a\u8fc7\u963b\u5c3c\u6781\u9650 (overdamped limit) \u4e0b,\u6717\u4e4b\u4e07\u65b9\u7a0b\u88ab\u5927\u5927\u7b80\u5316,\u7c92\u5b50\u7684\u77ac\u65f6\u901f\u5ea6\u76f4\u63a5\u7531\u4f5c\u7528\u5728\u5b83\u4e0a\u9762\u7684\u529b\u51b3\u5b9a\u3002\u6211\u4eec\u5c06\u63a8\u5bfc\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u7684\u6570\u5b66\u5de5\u5177\u518d\u6b21\u5e94\u7528\u4e8e\u8fd9\u4e2a\u7b80\u5316\u7684\u3001\u63cf\u8ff0\u4f4d\u7f6e \\(x\\) \u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e0a,\u5f97\u5230\u4e86\u4e00\u4e2a\u53ea\u5173\u4e8e\u4f4d\u7f6e\u6982\u7387\u5bc6\u5ea6 \\(P(x,t)\\) \u7684\u6f14\u5316\u65b9\u7a0b\u2014\u2014\u65af\u83ab\u9c81\u970d\u592b\u65af\u57fa\u65b9\u7a0b (Smoluchowski Equation)\u3002</p> </li> <li> <p>\u52bf\u573a\u4e2d\u7684\u5e73\u8861\u6001:\u65af\u83ab\u9c81\u970d\u592b\u65af\u57fa\u65b9\u7a0b\u63cf\u8ff0\u4e86\u7c92\u5b50\u5728\u5916\u90e8\u52bf\u573a \\(U(x)\\) \u4e2d\u7684\u6269\u6563\u884c\u4e3a\u3002\u5b83\u7684\u7a33\u6001\u89e3\u662f\u7edf\u8ba1\u7269\u7406\u5b66\u4e2d\u53e6\u4e00\u4e2a\u57fa\u77f3\u6027\u7684\u7ed3\u679c\u2014\u2014\u73bb\u5c14\u5179\u66fc\u5206\u5e03 (Boltzmann distribution),\\(P_{eq}(x) \\propto e^{-U(x)/k_B T}\\)\u3002\u8fd9\u76f4\u89c2\u5730\u544a\u8bc9\u6211\u4eec,\u5728\u957f\u65f6\u95f4\u6f14\u5316\u540e,\u7c92\u5b50\u6700\u6709\u53ef\u80fd\u5728\u52bf\u80fd\u4f4e\u7684\u5730\u65b9\u88ab\u53d1\u73b0\u3002\u6211\u4eec\u7684Python\u6a21\u62df\u751f\u52a8\u5730\u518d\u73b0\u4e86\u8fd9\u4e00\u8fc7\u7a0b:\u7c92\u5b50\u7cfb\u7efc\u5982\u4f55\u5728\u8c10\u632f\u5b50\u52bf\u9631\u4e2d\u6f14\u5316,\u5e76\u6700\u7ec8\u5f62\u6210\u7b26\u5408\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u7684\u6784\u578b\u3002</p> </li> </ol> <p>\u8d2f\u7a7f\u6574\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u7684\u5185\u5728\u7269\u7406\u8054\u7cfb\u662f\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Fluctuation-Dissipation Theorem),\u5728\u672c\u8bb2\u4e2d\u5177\u4f53\u4f53\u73b0\u4e3a\u7231\u56e0\u65af\u5766\u5173\u7cfb \\(D = \\mu k_B T\\)\u3002\u5b83\u6df1\u523b\u5730\u63ed\u793a\u4e86\u9a71\u52a8\u7c92\u5b50\u968f\u673a\u8fd0\u52a8\u7684\"\u6da8\u843d\"(\u901a\u8fc7\u6269\u6563\u7cfb\u6570 \\(D\\) \u4f53\u73b0)\u4e0e\u7cfb\u7edf\u62b5\u6297\u8fd0\u52a8\u5e76\u8017\u6563\u80fd\u91cf\u7684\"\u8017\u6563\"(\u901a\u8fc7\u8fc1\u79fb\u7387 \\(\\mu\\) \u6216\u6469\u64e6\u7cfb\u6570 \\(\\xi\\) \u4f53\u73b0)\u4e4b\u95f4,\u5fc5\u987b\u7531\u73af\u5883\u6e29\u5ea6 \\(T\\) \u5efa\u7acb\u4e00\u4e2a\u786e\u5b9a\u7684\u6bd4\u4f8b\u5173\u7cfb,\u624d\u80fd\u4fdd\u8bc1\u7cfb\u7edf\u6700\u7ec8\u80fd\u591f\u6b63\u786e\u5730\u8fbe\u5230\u70ed\u529b\u5b66\u5e73\u8861\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/","title":"\u5f15\u8a00\uff1a\u968f\u673a\u52a8\u529b\u5b66\u7684\u65b0\u89c6\u89d2","text":"<p>\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86\u4e24\u79cd\u63cf\u8ff0\u968f\u673a\u8fc7\u7a0b\u7684\u4e3b\u8981\u65b9\u6cd5\uff1a\u6717\u4e4b\u4e07\u65b9\u7a0b\uff08Langevin Equations\uff09\u548c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff08Fokker-Planck Equations\uff09\u3002\u6717\u4e4b\u4e07\u65b9\u7a0b\u4ece\u5fae\u89c2\u89c6\u89d2\u51fa\u53d1\uff0c\u8ffd\u8e2a\u5355\u4e2a\u7c92\u5b50\u5728\u786e\u5b9a\u6027\u529b\u548c\u968f\u673a\u529b\u7684\u5171\u540c\u4f5c\u7528\u4e0b\u7684\u5177\u4f53\u8f68\u8ff9\uff1b\u800c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u5219\u91c7\u7528\u5b8f\u89c2\u7684\u7edf\u8ba1\u89c6\u89d2\uff0c\u63cf\u8ff0\u4e86\u5927\u91cf\u7c92\u5b50\u7ec4\u6210\u7684\u7cfb\u7efc\u7684\u6982\u7387\u5bc6\u5ea6\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u3002\u8fd9\u4e24\u79cd\u65b9\u6cd5\u5206\u522b\u5bf9\u5e94\u4e8e\u8ffd\u8e2a\"\u4e00\u68f5\u6811\"\u7684\u751f\u957f\u4e0e\u63cf\u7ed8\"\u6574\u7247\u68ee\u6797\"\u7684\u53d8\u8fc1\u3002</p> <p>\u8fd9\u8282\u8bfe\u5c06\u5f15\u5165\u4e00\u79cd\u5168\u65b0\u7684\u3001\u529f\u80fd\u5f3a\u5927\u7684\u7406\u8bba\u6846\u67b6\u2014\u2014\u8def\u5f84\u79ef\u5206\uff08Path Integral\uff09\u3002\u8fd9\u4e00\u65b9\u6cd5\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u7b2c\u4e09\u79cd\u770b\u5f85\u968f\u673a\u52a8\u529b\u5b66\u7684\u89c6\u89d2\u3002\u5b83\u4e0d\u518d\u5c40\u9650\u4e8e\u63cf\u8ff0\u7cfb\u7edf\u72b6\u6001\u4ece\u4e00\u4e2a\u77ac\u95f4\u5230\u4e0b\u4e00\u4e2a\u77ac\u95f4\u7684\u6f14\u53d8\uff0c\u800c\u662f\u7740\u773c\u4e8e\u6574\u4e2a\u65f6\u95f4\u6bb5\u5185\u7684\u5b8c\u6574\u5386\u53f2\u6216\u8f68\u8ff9 \\(x(\\tau)\\)\u3002\u8def\u5f84\u79ef\u5206\u7684\u6838\u5fc3\u601d\u60f3\u662f\u4e3a\u7cfb\u7edf\u53ef\u80fd\u7ecf\u5386\u7684\u6bcf\u4e00\u6761\u5b8c\u6574\u8def\u5f84\u8d4b\u4e88\u4e00\u4e2a\u6982\u7387\u6743\u91cd\u3002\u901a\u8fc7\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u8def\u5f84\u8fdb\u884c\"\u6c42\u548c\"\uff08\u5373\u6cdb\u51fd\u79ef\u5206\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5404\u79cd\u611f\u5174\u8da3\u7684\u7269\u7406\u91cf\uff0c\u4f8b\u5982\u4ece\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u7684\u603b\u6982\u7387\u3002</p> <p>\u8fd9\u79cd\u601d\u60f3\u4e0e\u91cf\u5b50\u529b\u5b66\u4e2d\u7684\u8d39\u66fc\u8def\u5f84\u79ef\u5206\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u3002\u5728\u91cf\u5b50\u529b\u5b66\u4e2d\uff0c\u4e00\u4e2a\u7c92\u5b50\u4ece\u70b9 \\(A\\) \u5230\u70b9 \\(B\\) \u7684\u8dc3\u8fc1\u632f\u5e45\u662f\u901a\u8fc7\u5bf9\u6240\u6709\u8fde\u63a5 \\(A\\) \u548c \\(B\\) \u7684\u53ef\u80fd\u8def\u5f84\u7684\u76f8\u4f4d\u56e0\u5b50 \\(e^{iS/\\hbar}\\) \u8fdb\u884c\u79ef\u5206\u5f97\u5230\u7684\uff0c\u5176\u4e2d \\(S\\) \u662f\u7ecf\u5178\u4f5c\u7528\u91cf\u3002\u5728\u968f\u673a\u52a8\u529b\u5b66\u4e2d\uff0c\u6211\u4eec\u5c06\u91c7\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u4f46\u79ef\u5206\u7684\u6743\u91cd\u4e0d\u518d\u662f\u590d\u6570\u7684\u76f8\u4f4d\u56e0\u5b50\uff0c\u800c\u662f\u4e00\u4e2a\u5b9e\u6570\u7684\u6982\u7387\uff0c\u5176\u5f62\u5f0f\u901a\u5e38\u4e3a \\(e^{-S}\\)\uff0c\u5176\u4e2d \\(S\\) \u662f\u4e00\u4e2a\u6211\u4eec\u79f0\u4e4b\u4e3a\"\u4f5c\u7528\u91cf\"\u7684\u6cdb\u51fd\uff0c\u5b83\u8861\u91cf\u4e86\u67d0\u6761\u7279\u5b9a\u8def\u5f84\u53d1\u751f\u7684\"\u4e0d\u53ef\u80fd\u6027\"\u6216\"\u4ee3\u4ef7\"\u3002</p> <p>\u901a\u8fc7\u6784\u5efa\u8fd9\u4e00\u6846\u67b6\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u4e0d\u4ec5\u56de\u7b54\"\u7c92\u5b50\u5728\u4e0b\u4e00\u65f6\u523b\u4f1a\u51fa\u73b0\u5728\u54ea\u91cc\uff1f\"\u8fd9\u7c7b\u95ee\u9898\uff0c\u66f4\u80fd\u56de\u7b54\"\u7c92\u5b50\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u6700\u53ef\u80fd\u9075\u5faa\u54ea\u6761\u8def\u5f84\u4ece \\(A\\) \u70b9\u5230\u8fbe \\(B\\) \u70b9\uff1f\"\u8fd9\u7c7b\u6df1\u523b\u7684\u95ee\u9898\u3002\u8fd9\u4e00\u89c6\u89d2\u4e0d\u4ec5\u5728\u7406\u8bba\u4e0a\u6781\u4e3a\u4f18\u7f8e\uff0c\u66f4\u5728\u73b0\u4ee3\u7269\u7406\u5b66\u7684\u8bb8\u591a\u524d\u6cbf\u9886\u57df\uff0c\u5982\u8f6f\u7269\u8d28\u7269\u7406\u3001\u751f\u7269\u7269\u7406\u4ee5\u53ca\u91d1\u878d\u5efa\u6a21\u4e2d\uff0c\u5c55\u73b0\u51fa\u5f3a\u5927\u7684\u5b9e\u7528\u4ef7\u503c\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#1","title":"1. \u56de\u987e\uff1a\u968f\u673a\u6a21\u578b\u7684\u7406\u8bba\u56fe\u666f","text":"<p>\u5728\u6b63\u5f0f\u8fdb\u5165\u8def\u5f84\u79ef\u5206\u7684\u6570\u5b66\u6784\u9020\u4e4b\u524d\uff0cErwin Frey \u6559\u6388\u5148\u56de\u987e\u4e86\u4e00\u4e0b\u5df2\u7ecf\u5b66\u8fc7\u7684\u63cf\u8ff0\u968f\u673a\u7cfb\u7edf\u7684\u51e0\u79cd\u6a21\u578b\uff0c\u4ee5\u660e\u786e\u8def\u5f84\u79ef\u5206\u5728\u6574\u4e2a\u7406\u8bba\u4f53\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002 </p> <p>\u6211\u4eec\u53ef\u4ee5\u4ece\u4e24\u4e2a\u7ef4\u5ea6\u6765\u5bf9\u8fd9\u4e9b\u6a21\u578b\u8fdb\u884c\u5206\u7c7b\uff1a\u7a7a\u95f4\u662f\u79bb\u6563\u7684\u8fd8\u662f\u8fde\u7eed\u7684\uff0c\u4ee5\u53ca\u6211\u4eec\u63cf\u8ff0\u7684\u662f\u7cfb\u7efc\u8fd8\u662f\u5355\u4e2a\u8f68\u8ff9\u3002</p> <ul> <li> <p>\u79bb\u6563\u4e0e\u8fde\u7eed\u7cfb\u7edf\uff1a</p> </li> <li> <p>\u683c\u70b9\u6c14\u6a21\u578b (Lattice Gas Models)\uff1a\u7c92\u5b50\u88ab\u9650\u5236\u5728\u79bb\u6563\u7684\u683c\u70b9\u4e0a\uff0c\u9002\u7528\u4e8e\u63cf\u8ff0\u6676\u4f53\u3001\u81ea\u65cb\u7cfb\u7edf\u7b49\u3002</p> </li> <li> <p>\u8fde\u7eed\u7cfb\u7edf (Continuum Systems)\uff1a\u7c92\u5b50\u53ef\u4ee5\u5728\u8fde\u7eed\u7684\u7a7a\u95f4\u4e2d\u8fd0\u52a8\uff0c\u901a\u8fc7\u78b0\u649e\u7b49\u76f8\u4e92\u4f5c\u7528\uff0c\u8fd9\u662f\u6211\u4eec\u66f4\u5e38\u9047\u5230\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u6eb6\u6db2\u4e2d\u7684\u80f6\u4f53\u9897\u7c92\u3002</p> </li> <li> <p>\u7cfb\u7efc\u4e0e\u8f68\u8ff9\u63cf\u8ff0\uff1a\u8fd9\u662f\u7406\u89e3\u4e0d\u540c\u968f\u673a\u6a21\u578b\u6838\u5fc3\u601d\u60f3\u7684\u5173\u952e\u533a\u522b\u3002</p> </li> <li> <p>\u7cfb\u7efc\u89c6\u89d2 (Ensemble View - \u63cf\u8ff0\u68ee\u6797)\uff1a\u8fd9\u7c7b\u65b9\u6cd5\u5173\u6ce8\u7684\u662f\u7cfb\u7edf\u72b6\u6001\u7684\u6982\u7387\u5206\u5e03 \\(P(x,t)\\) \u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u3002</p> <ul> <li> <p>\u4e3b\u65b9\u7a0b (Master Equations)\uff1a\u63cf\u8ff0\u7cfb\u7edf\u5728\u79bb\u6563\u72b6\u6001\u7a7a\u95f4\u4e2d\u8df3\u8f6c\u7684\u6982\u7387\u6f14\u5316\uff0c\u662f\u7cfb\u7efc\u63cf\u8ff0\u7684\u57fa\u77f3\u3002</p> </li> <li> <p>\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b (Fokker-Planck Equations)\uff1a\u5f53\u7cfb\u7edf\u72b6\u6001\u7a7a\u95f4\u53d8\u4e3a\u8fde\u7eed\u65f6\uff0c\u4e3b\u65b9\u7a0b\u5c31\u8fc7\u6e21\u4e3a\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u3002\u5b83\u662f\u63cf\u8ff0\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \\(P(x,t)\\) \u5728\u6f02\u79fb\u548c\u6269\u6563\u4f5c\u7528\u4e0b\u5982\u4f55\u6f14\u5316\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u3002</p> </li> </ul> </li> <li> <p>\u8f68\u8ff9\u89c6\u89d2 (Trajectory View - \u63cf\u8ff0\u4e00\u68f5\u6811)\uff1a\u8fd9\u7c7b\u65b9\u6cd5\u5173\u6ce8\u7684\u662f\u7cfb\u7edf\u5355\u4e2a\u5b9e\u73b0\uff08realization\uff09\u7684\u5177\u4f53\u8def\u5f84 \\(x(t)\\)\u3002</p> <ul> <li> <p>\u5409\u83b1\u65af\u76ae\u7b97\u6cd5 (Gillespie Algorithm)\uff1a\u4e00\u79cd\u7cbe\u786e\u7684\u968f\u673a\u6a21\u62df\u65b9\u6cd5\uff0c\u7528\u4e8e\u751f\u6210\u79bb\u6563\u72b6\u6001\u8df3\u8f6c\u7cfb\u7edf\u7684\u5355\u6761\u8f68\u8ff9\uff0c\u5e38\u7528\u4e8e\u5316\u5b66\u53cd\u5e94\u7f51\u7edc\u3002</p> </li> <li> <p>\u6717\u4e4b\u4e07\u65b9\u7a0b (Langevin Equations)\uff1a\u63cf\u8ff0\u8fde\u7eed\u53d8\u91cf\uff08\u5982\u7c92\u5b50\u4f4d\u7f6e\uff09\u5728\u786e\u5b9a\u6027\u529b\uff08\u6f02\u79fb\uff09\u548c\u968f\u673a\u529b\uff08\u566a\u58f0\uff09\u4f5c\u7528\u4e0b\u7684\u6f14\u5316\u3002\u5b83\u662f\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff0c\u5176\u89e3\u5c31\u662f\u4e00\u6761\u968f\u673a\u8f68\u8ff9\u3002</p> </li> <li> <p>\u5e03\u6717\u52a8\u529b\u5b66\u6a21\u62df (Brownian Dynamics Simulations)\uff1a\u57fa\u4e8e\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u8ba1\u7b97\u673a\u6a21\u62df\u65b9\u6cd5\uff0c\u7528\u4e8e\u751f\u6210\u7c92\u5b50\u7684\u8fd0\u52a8\u8f68\u8ff9\u3002</p> </li> </ul> </li> </ul> <p>\u8fd9\u8282\u8bfe\u7684\u51fa\u53d1\u70b9\u6b63\u662f\u6211\u4eec\u719f\u6089\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u3002\u8003\u8651\u4e00\u4e2a\u7531\u8fc7\u963b\u5c3c\u6717\u4e4b\u4e07\u65b9\u7a0b\u63cf\u8ff0\u7684\u4e00\u7ef4\u7cfb\u7edf\uff1a</p> \\[\\dot{x}(t)=A(x(t))+\\xi(t)\\] <p>\u5176\u4e2d\uff0c\\(x(t)\\) \u662f\u7c92\u5b50\u7684\u4f4d\u7f6e\uff0c\\(\\dot{x}(t)\\) \u662f\u5176\u901f\u5ea6\u3002\\(A(x(t))\\) \u4ee3\u8868\u786e\u5b9a\u6027\u7684\u6f02\u79fb\u9879\uff0c\u4f8b\u5982\u7531\u5916\u52bf\u573a \\(U(x)\\) \u4ea7\u751f\u7684\u529b \\(F(x)\\) \u6240\u5bfc\u81f4\uff0c\u5373 \\(A(x)=F(x)/\\gamma\\)\uff0c\u5176\u4e2d \\(\\gamma\\) \u662f\u6469\u64e6\u7cfb\u6570\u3002\u800c \\(\\xi(t)\\) \u662f\u968f\u673a\u566a\u58f0\u9879\uff0c\u5b83\u4ee3\u8868\u4e86\u6765\u81ea\u5468\u56f4\u73af\u5883\uff08\u5982\u6eb6\u5242\u5206\u5b50\uff09\u7684\u968f\u673a\u78b0\u649e\u3002</p> <p>\u5bf9\u4e8e\u6700\u7b80\u5355\u4e14\u6700\u5e38\u89c1\u7684\u9ad8\u65af\u767d\u566a\u58f0\uff0c\u5b83\u5177\u6709\u4ee5\u4e0b\u7edf\u8ba1\u6027\u8d28\uff1a</p> <ol> <li>\u96f6\u5747\u503c\uff1a\u5728\u4efb\u4f55\u65f6\u523b\uff0c\u566a\u58f0\u7684\u5e73\u5747\u6548\u5e94\u4e3a\u96f6\u3002</li> </ol> \\[\\langle \\xi(t) \\rangle=0\\] <ol> <li>Delta\u76f8\u5173\uff08\u65e0\u8bb0\u5fc6\u6027\uff09\uff1a\u566a\u58f0\u5728\u4e0d\u540c\u65f6\u523b\u662f\u5b8c\u5168\u4e0d\u76f8\u5173\u7684\u3002</li> </ol> \\[\\langle \\xi(t)\\xi(t') \\rangle=2D\\delta(t-t')\\] <p>\u8fd9\u91cc\u7684 \\(D\\) \u662f\u6269\u6563\u7cfb\u6570\uff0c\u5b83\u91cf\u5316\u4e86\u566a\u58f0\u7684\u5f3a\u5ea6\u3002\u6839\u636e\u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff0c\u5b83\u4e0e\u7cfb\u7edf\u7684\u6e29\u5ea6\u548c\u6469\u64e6\u7cfb\u6570\u76f8\u5173 (\\(D=k_B T/\\gamma\\))\u3002</p> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u63cf\u8ff0\u5355\u6761\u8f68\u8ff9\u5982\u4f55\u6f14\u5316\u7684\u89c4\u5219\uff08\u6717\u4e4b\u4e07\u65b9\u7a0b\uff09\u4ee5\u53ca\u9a71\u52a8\u8fd9\u79cd\u6f14\u5316\u7684\u968f\u673a\u529b\u7684\u7edf\u8ba1\u7279\u6027\u3002\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u95ee\u9898\u968f\u4e4b\u800c\u6765\uff1a\u6211\u4eec\u80fd\u5426\u5229\u7528\u5df2\u77e5\u7684\u566a\u58f0\u7edf\u8ba1\u7279\u6027\uff0c\u53bb\u63a8\u5bfc\u51fa\u4e00\u4e2a\u63cf\u8ff0\u7c92\u5b50\u5b8c\u6574\u8f68\u8ff9 \\(x(\\tau)\\)\uff08\u5728 \\(0 \\leq \\tau \\leq t\\) \u65f6\u95f4\u6bb5\u5185\uff09\u7684\u6982\u7387\u6cdb\u51fd \\(P[x(\\tau)]\\)\uff1f\u8fd9\u6b63\u662f\u8def\u5f84\u79ef\u5206\u8868\u8ff0\u8981\u89e3\u51b3\u7684\u95ee\u9898\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#2","title":"2. \u566a\u58f0\u7684\u6982\u7387\uff1a\u4ece\u79bb\u6563\u6b65\u5230\u8fde\u7eed\u8def\u5f84","text":"<p>\u6784\u5efa\u6574\u4e2a\u8def\u5f84\u79ef\u5206\u5f62\u5f0f\u7684\u7b2c\u4e00\u6b65\uff0c\u4e5f\u662f\u6700\u57fa\u7840\u7684\u4e00\u6b65\uff0c\u662f\u4e3a\u566a\u58f0\u672c\u8eab \\(\\xi(\\tau)\\) \u5efa\u7acb\u4e00\u4e2a\u6982\u7387\u6cdb\u51fd\u3002\u6211\u4eec\u7684\u7b56\u7565\u662f\"\u5148\u79bb\u6563\uff0c\u540e\u53d6\u8fde\u7eed\u6781\u9650\"\u3002</p> <p>\u6240\u8c13\u6cdb\u51fd\uff0c\u666e\u901a\u51fd\u6570\u662f\u201c\u6570\u7684\u51fd\u6570\u201d\uff0c\u800c\u6cdb\u51fd\u662f\u201c\u51fd\u6570\u7684\u51fd\u6570\u201d\u3002\u6211\u4eec\u719f\u6089\u7684\u51fd\u6570\uff0c\u662f\u8f93\u5165\u4e00\u4e2a\u6570\uff08\u6bd4\u5982\u65f6\u95f4 \\(t\\)\uff09\uff0c\u5f97\u5230\u53e6\u4e00\u4e2a\u6570\uff08\u6bd4\u5982\u6e29\u5ea6 \\(T(t)\\)\uff09\u3002\u800c\u6cdb\u51fd\uff0c\u662f\u8f93\u5165\u4e00\u6574\u4e2a\u51fd\u6570\uff08\u6bd4\u5982\u4e00\u6761\u5b8c\u6574\u7684\u66f2\u7ebf \\(T(t)\\)\uff09\uff0c\u5f97\u5230\u4e00\u4e2a\u6570\uff08\u6bd4\u5982\u8fd9\u6761\u66f2\u7ebf\u6240\u4ee3\u8868\u7684\u201c\u5e73\u5747\u80fd\u91cf\u201d\u6216\u201c\u603b\u8def\u5f84\u957f\u5ea6\u201d\uff09\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#21","title":"2.1. \u65f6\u95f4\u7684\u79bb\u6563\u5316","text":"<p>\u6211\u4eec\u5c06\u65f6\u95f4\u533a\u95f4 \\([0,t]\\) \u5206\u5272\u6210 \\(n\\) \u4e2a\u5fae\u5c0f\u7684\u65f6\u95f4\u6b65\u957f \\(\\Delta t\\)\uff0c\u4f7f\u5f97 \\(t=n\\Delta t\\)\u3002\u5728\u6bcf\u4e2a\u65f6\u95f4\u70b9 \\(\\tau_i=i\\Delta t\\)\uff08\u5176\u4e2d \\(i=0,1,\\ldots,n-1\\)\uff09\uff0c\u566a\u58f0\u7684\u503c\u4e3a \\(\\xi_i=\\xi(\\tau_i)\\)\u3002\u7531\u4e8e\u6211\u4eec\u5904\u7406\u7684\u662f\u767d\u566a\u58f0\uff0c\u4e0d\u540c\u65f6\u95f4\u70b9\u7684\u566a\u58f0\u662f\u7edf\u8ba1\u72ec\u7acb\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a \\(\\xi_i\\) \u89c6\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u3001\u670d\u4ece\u9ad8\u65af\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\u3002\u5176\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a</p> \\[p(\\xi_i) = \\frac{1}{\\sqrt{2\\pi\\sigma_\\xi^2}} \\exp\\left[-\\frac{\\xi_i^2}{2\\sigma_\\xi^2}\\right]\\] <p>\u5176\u4e2d \\(\\sigma_\\xi^2\\) \u662f\u5728\u5355\u4e2a\u65f6\u95f4\u6b65\u957f \\(\\Delta t\\) \u5185\u566a\u58f0\u7684\u65b9\u5dee\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#22","title":"2.2. \u79bb\u6563\u8def\u5f84\u7684\u8054\u5408\u6982\u7387","text":"<p>\u7531\u4e8e\u6bcf\u4e2a \\(\\xi_i\\) \u90fd\u662f\u72ec\u7acb\u540c\u5206\u5e03\u7684\uff08iid\uff09\uff0c\u90a3\u4e48\u89c2\u6d4b\u5230\u4e00\u6761\u7279\u5b9a\u7684\u79bb\u6563\u566a\u58f0\u8def\u5f84 \\((\\xi_0,\\xi_1,\\ldots,\\xi_{n-1})\\) \u7684\u8054\u5408\u6982\u7387\u5c31\u662f\u6240\u6709\u5355\u4e2a\u6982\u7387\u7684\u4e58\u79ef\uff1a</p> <p>$$ p(\\xi_0, \\xi_1, \\ldots, \\xi_{n-1}) = \\prod_{i=0}^{n-1} p(\\xi_i) = \\left( \\frac{1}{2\\pi\\sigma_\\xi^2} \\right)^{n/2} \\exp \\left( -\\sum_{i=0}^{n-1} \\frac{\\xi_i^2}{2\\sigma_\\xi^2} \\right) $$ \u6211\u4eec\u4e3b\u8981\u5173\u5fc3\u7684\u662f\u6307\u6570\u90e8\u5206\uff0c\u56e0\u4e3a\u5b83\u51b3\u5b9a\u4e86\u6982\u7387\u7684\u76f8\u5bf9\u5927\u5c0f\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#23","title":"2.3. \u8fde\u7eed\u6781\u9650","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u8fdb\u884c\u5173\u952e\u7684\u4e00\u6b65\uff1a\u8ba9\u65f6\u95f4\u6b65\u957f \\(\\Delta t \\to 0\\) \u5e76\u4e14\u6b65\u6570 \\(n \\to \\infty\\)\uff0c\u540c\u65f6\u4fdd\u6301\u603b\u65f6\u95f4 \\(t=n\\Delta t\\) \u4e0d\u53d8\u3002\u5728\u8fd9\u4e2a\u6781\u9650\u4e0b\uff0c\u79bb\u6563\u7684\u6c42\u548c\u5c06\u8fc7\u6e21\u5230\u8fde\u7eed\u7684\u79ef\u5206\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5efa\u7acb\u79bb\u6563\u65b9\u5dee \\(\\sigma_\\xi^2\\) \u548c\u8fde\u7eed\u6269\u6563\u7cfb\u6570 D \u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u6211\u4eec\u901a\u8fc7\u5339\u914d\u79bb\u6563\u548c\u8fde\u7eed\u5f62\u5f0f\u4e0b\u7684\u566a\u58f0\u81ea\u76f8\u5173\u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002</p> <p>\u79bb\u6563\u5f62\u5f0f\u4e0b\uff0c\u81ea\u76f8\u5173\u4e3a \\(\\langle\\xi_i\\xi_j\\rangle=\\sigma_\\xi^2\\delta_{ij}\\)\u3002</p> <p>\u8fde\u7eed\u5f62\u5f0f\u4e0b\uff0c\u81ea\u76f8\u5173\u4e3a \\(\\langle\\xi(t)\\xi(t')\\rangle=2D\\delta(t-t')\\)\u3002</p> <p>\u5c06\u8fde\u7eed\u5f62\u5f0f\u5728\u79bb\u6563\u65f6\u95f4\u70b9\u4e0a\u8fdb\u884c\u5e73\u5747\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[ \\langle \\xi_i \\xi_j \\rangle = \\int_{\\tau_i}^{\\tau_{i+1}} d\\tau \\int_{\\tau_j}^{\\tau_{j+1}} d\\tau' \\frac{\\langle \\xi(\\tau) \\xi(\\tau') \\rangle}{(\\Delta t)^2}\\approx \\frac{1}{(\\Delta t)^2} \\int_{\\tau_i}^{\\tau_{i+1}} d\\tau \\int_{\\tau_j}^{\\tau_{j+1}} d\\tau' 2D \\delta(\\tau - \\tau') = \\frac{2D \\Delta t}{(\\Delta t)^2} \\delta_{ij} = \\frac{2D}{\\Delta t} \\delta_{ij} \\] <p>\u6bd4\u8f83\u4e24\u79cd\u5f62\u5f0f\uff0c\u6211\u4eec\u5f97\u5230 \\(\\sigma_\\xi^2=2D/\\Delta t\\)\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u5173\u7cfb\u4ee3\u5165\u5230\u8054\u5408\u6982\u7387\u7684\u6307\u6570\u9879\u4e2d\uff1a</p> \\[- \\sum_{i=0}^{n-1} \\frac{\\xi_i^2}{2\\sigma_{\\xi}^2} = - \\sum_{i=0}^{n-1} \\frac{\\xi_i^2}{2(2D/\\Delta t)} = - \\frac{1}{4D} \\sum_{i=0}^{n-1} \\xi_i^2 \\Delta t\\] <p>\u5f53 \\(\\Delta t \\to 0\\) \u65f6\uff0c\u8fd9\u4e2a\u9ece\u66fc\u548c\uff08Riemann sum\uff09\u5c31\u53d8\u6210\u4e86\u79ef\u5206\uff1a</p> \\[\\sum_{i=0}^{n-1} \\xi_i^2 \\Delta t \\quad \\xrightarrow{\\Delta t \\to 0} \\quad \\int_0^t d\\tau \\, \\xi^2(\\tau)\\]"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#24","title":"2.4. \u566a\u58f0\u7684\u6982\u7387\u6cdb\u51fd","text":"<p>\u6700\u7ec8\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u63cf\u8ff0\u4e00\u6761\u8fde\u7eed\u566a\u58f0\u8def\u5f84 \u03be(\u03c4) \u7684\u6982\u7387\u6cdb\u51fd\u3002\u8fd9\u4e2a\u6982\u7387\u6b63\u6bd4\u4e8e\uff1a</p> \\[P[\\xi(\\tau)] \\sim \\exp\\left(-\\frac{1}{4D}\\int_0^t d\\tau\\, \\xi^2(\\tau)\\right)\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u8def\u5f84\u79ef\u5206\u8868\u8ff0\u7684\u57fa\u77f3\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u4e00\u6761\u566a\u58f0\u5386\u53f2\u8f68\u8ff9\u53d1\u751f\u7684\u6982\u7387\u7531\u5176\"\u80fd\u91cf\"\uff08\u5373 \\(\\xi^2\\) \u5bf9\u65f6\u95f4\u7684\u79ef\u5206\uff09\u6307\u6570\u8870\u51cf\u51b3\u5b9a\u3002\u566a\u58f0\u7684\u632f\u5e45\u8d8a\u5927\u3001\u6301\u7eed\u65f6\u95f4\u8d8a\u957f\uff0c\u8fd9\u6761\u8f68\u8ff9\u5c31\u8d8a\u4e0d\u53ef\u80fd\u53d1\u751f\u3002</p> <p>\u5728\u5f62\u5f0f\u4e0a\uff0c\u5b8c\u6574\u7684\u8def\u5f84\u79ef\u5206\u5199\u4f5c\uff1a</p> \\[\\langle \\mathcal{O}[\\xi(\\tau)] \\rangle = \\int \\mathcal{D}[\\xi(\\tau)] \\, \\mathcal{O}[\\xi(\\tau)] \\exp\\left(-\\frac{1}{4D}\\int_0^t d\\tau\\, \\xi^2(\\tau)\\right)\\] <p>\u5176\u4e2d\uff0c\\(\\mathcal{O}[\\xi(\\tau)]\\) \u662f\u4efb\u610f\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u566a\u58f0\u8def\u5f84\u7684\u89c2\u6d4b\u91cf\uff08\u6cdb\u51fd\uff09\u3002\\(\\mathcal{D}[\\xi(\\tau)]\\) \u662f\u6240\u8c13\u7684\"\u8def\u5f84\u79ef\u5206\u6d4b\u5ea6\"\uff0c\u5b83\u4ee3\u8868\u4e86\u5bf9\u6240\u6709\u53ef\u80fd\u8def\u5f84\u7684\u6c42\u548c\uff0c\u5f62\u5f0f\u4e0a\u53ef\u4ee5\u7406\u89e3\u4e3a \\(\\lim_{n\\to\\infty}\\prod_{i=0}^{n-1}\\frac{d\\xi_i}{\\sqrt{2\\pi\\sigma_\\xi^2}}\\)\uff0c\u5305\u542b\u4e86\u5f52\u4e00\u5316\u56e0\u5b50\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#3-","title":"3. \u4ece\u566a\u58f0\u5230\u7c92\u5b50\uff1a\u7fc1\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u4f5c\u7528\u91cf","text":"<p>\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u5730\u4e3a\u566a\u58f0\u8def\u5f84\u6784\u5efa\u4e86\u6982\u7387\u6cdb\u51fd\u3002\u73b0\u5728\uff0c\u6211\u4eec\u7684\u6838\u5fc3\u4efb\u52a1\u662f\u5229\u7528\u5b83\u6765\u627e\u5230\u7c92\u5b50\u8def\u5f84 \\(x(\\tau)\\) \u7684\u6982\u7387\u6cdb\u51fd \\(P[x(\\tau)]\\)\u3002\u8fd9\u91cc\u7684\u5173\u952e\u7b56\u7565\u662f\u5728\u6cdb\u51fd\u79ef\u5206\u4e2d\u8fdb\u884c\u53d8\u91cf\u66ff\u6362\uff0c\u4ece\u566a\u58f0\u8def\u5f84 \\(\\xi(\\tau)\\) \u53d8\u6362\u5230\u7c92\u5b50\u8def\u5f84 \\(x(\\tau)\\)\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#31","title":"3.1. \u53d8\u91cf\u53d8\u6362","text":"<p>\u6717\u4e4b\u4e07\u65b9\u7a0b\u672c\u8eab \\(\\dot{x}(\\tau)=A(x(\\tau))+\\xi(\\tau)\\) \u63d0\u4f9b\u4e86\u8fd9\u4e24\u4e2a\u8def\u5f84\u4e4b\u95f4\u7684\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\u3002\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u6392\u5217\u5b83\uff0c\u5f97\u5230\uff1a</p> \\[\\xi(\\tau)=\\dot{x}(\\tau)-A(x(\\tau))\\] <p>\u5c06\u8fd9\u4e2a\u5173\u7cfb\u4ee3\u5165\u6211\u4eec\u521a\u521a\u63a8\u5bfc\u51fa\u7684\u566a\u58f0\u6982\u7387\u6cdb\u51fd\u7684\u6307\u6570\u90e8\u5206\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[\\int_0^t d\\tau\\, \\xi^2(\\tau) = \\int_0^t d\\tau\\, (\\dot{x}(\\tau)-A(x(\\tau)))^2\\] <p>\u56e0\u6b64\uff0c\u7c92\u5b50\u8def\u5f84\u7684\u6982\u7387\u4f3c\u4e4e\u5e94\u8be5\u662f\uff1a</p> \\[P[x(\\tau)] \\stackrel{?}{\\sim} \\exp\\left(-\\frac{1}{4D}\\int_0^t d\\tau\\, (\\dot{x}(\\tau)-A(x(\\tau)))^2\\right)\\] <p>\u7136\u800c\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u5e76\u4e0d\u5b8c\u6574\u3002\u4efb\u4f55\u719f\u6089\u591a\u53d8\u91cf\u79ef\u5206\u7684\u4eba\u90fd\u77e5\u9053\uff0c\u53d8\u91cf\u66ff\u6362\u9700\u8981\u4e58\u4ee5\u4e00\u4e2a\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\uff08Jacobian determinant\uff09\u3002\u5728\u6cdb\u51fd\u79ef\u5206\u4e2d\uff0c\u8fd9\u4e2a\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u540c\u6837\u5b58\u5728\uff0c\u5e76\u4e14\u81f3\u5173\u91cd\u8981\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#32","title":"3.2. \u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\uff1a\u4e00\u4e2a\u5fae\u5999\u4f46\u5173\u952e\u7684\u56e0\u5b50","text":"<p>\u5728\u6cdb\u51fd\u79ef\u5206\u4e2d\uff0c\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u662f \\(\\det\\left(\\frac{\\delta \\xi(\\tau')}{\\delta x(\\tau)}\\right)\\)\u3002\u76f4\u63a5\u8ba1\u7b97\u8fd9\u4e2a\u6cdb\u51fd\u884c\u5217\u5f0f\u662f\u76f8\u5f53\u590d\u6742\u7684\u3002\u4e3a\u4e86\u7406\u89e3\u5b83\u7684\u6765\u6e90\u548c\u5f71\u54cd\uff0c\u6211\u4eec\u518d\u6b21\u56de\u5230\u79bb\u6563\u5316\u7684\u56fe\u50cf\u3002</p> <p>\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u79bb\u6563\u5f62\u5f0f\u53ef\u4ee5\u5199\u4f5c\uff1a</p> \\[\\frac{x_{i+1}-x_i}{\\Delta t} = \\theta A(x_{i+1})+(1-\\theta)A(x_i)+\\xi_i\\] <p>\u5176\u4e2d \\(\\theta \\in [0,1]\\) \u662f\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee3\u8868\u4e86\u6211\u4eec\u5728\u8bc4\u4f30\u6f02\u79fb\u9879 \\(A(x)\\) \u65f6\u6240\u9009\u62e9\u7684\u65f6\u95f4\u70b9\u3002</p> <ul> <li> <p>\\(\\theta=0\\) \u5bf9\u5e94\u4f0a\u4e1c (It\u00f4) \u8be0\u91ca\uff0c\u4f7f\u7528\u65f6\u95f4\u6b65\u5f00\u59cb\u65f6\u7684\u4f4d\u7f6e \\(x_i\\)\u3002</p> </li> <li> <p>\\(\\theta=1\\) \u5bf9\u5e94\u53cd\u4f0a\u4e1c (anti-It\u00f4) \u8be0\u91ca\uff0c\u4f7f\u7528\u7ed3\u675f\u65f6\u7684\u4f4d\u7f6e \\(x_{i+1}\\)\u3002</p> </li> <li> <p>\\(\\theta=1/2\\) \u5bf9\u5e94\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947 (Stratonovich) \u8be0\u91ca\uff0c\u4f7f\u7528\u4e2d\u70b9\u4f4d\u7f6e\u7684\u8fd1\u4f3c\u3002</p> </li> </ul> <p>\u5728\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u7684\u6570\u503c\u6c42\u89e3\u4e2d\uff0cIt\u00f4\u3001Stratonovich \u548c anti-It\u00f4 \u8be0\u91ca\u5bf9\u5e94\u4e8e\u5bf9\u6f02\u79fb\u9879 \\(A(x)\\) \u5728\u65f6\u95f4\u533a\u95f4 \\([t_i, t_{i+1}]\\) \u5185\u53d6\u503c\u4f4d\u7f6e\u7684\u4e0d\u540c\u9009\u62e9\u3002\u5177\u4f53\u800c\u8a00\uff0c\u5b83\u4eec\u7531\u53c2\u6570 \\(\\theta \\in [0,1]\\) \u63a7\u5236\uff1a\u5f53 \\(\\theta = 0\\) \u65f6\u4e3a It\u00f4 \u8be0\u91ca\uff0c\u8868\u793a\u5728\u65f6\u95f4\u6b65\u5f00\u59cb\u5904\uff08\\(x_i\\)\uff09\u8ba1\u7b97 \\(A(x)\\)\uff1b\u5f53 \\(\\theta = 1/2\\) \u65f6\u4e3a Stratonovich \u8be0\u91ca\uff0c\u8fd1\u4f3c\u5728\u4e2d\u70b9\u53d6\u503c\uff0c\u4fdd\u6301\u4e86\u7ecf\u5178\u94fe\u5f0f\u6cd5\u5219\u7684\u9002\u7528\u6027\uff0c\u9002\u7528\u4e8e\u7269\u7406\u7cfb\u7edf\u4e2d\u8fde\u7eed\u566a\u58f0\u7684\u6781\u9650\u60c5\u5f62\uff1b\u5f53 \\(\\theta = 1\\) \u65f6\u4e3a anti-It\u00f4 \u8be0\u91ca\uff0c\u5219\u5728\u65f6\u95f4\u6b65\u7ed3\u675f\u5904\uff08\\(x_{i+1}\\)\uff09\u53d6\u503c\u3002\u8fd9\u79cd\u79bb\u6563\u5316\u65b9\u5f0f\u7684\u9009\u62e9\u4e0d\u4ec5\u5f71\u54cd\u6570\u503c\u7a33\u5b9a\u6027\uff0c\u66f4\u5173\u952e\u7684\u662f\u51b3\u5b9a\u4e86\u8def\u5f84\u79ef\u5206\u4e2d\u7684\u96c5\u53ef\u6bd4\u4fee\u6b63\u9879\uff0c\u4ece\u800c\u5bfc\u81f4\u4e0d\u540c\u7684\u8fde\u7eed\u6781\u9650\u884c\u4e3a\u548c\u7269\u7406\u6216\u6570\u5b66\u89e3\u91ca\u3002</p> <p>\u901a\u4fd7\u5730\u8bf4\uff0c\u8fd9\u4e09\u79cd\u8be0\u91ca\u5c31\u50cf\u662f\u4f60\u5728\u5f00\u8f66\u65f6\u51b3\u5b9a\u201c\u770b\u54ea\u4e2a\u65f6\u523b\u7684\u65b9\u5411\u76d8\u4f4d\u7f6e\u201d\u6765\u9884\u6d4b\u8f66\u5b50\u4e0b\u4e00\u6b65\u7684\u4f4d\u7f6e\u3002It\u00f4 \u662f\u53ea\u770b\u73b0\u5728\u7684\u65b9\u5411\u76d8\uff08\u6700\u4fdd\u5b88\uff0c\u7528\u4e8e\u91d1\u878d\uff09\uff1bStratonovich \u662f\u4f30\u8ba1\u4e00\u4e0b\u4e2d\u95f4\u65f6\u523b\u7684\u65b9\u5411\u76d8\uff08\u66f4\u7b26\u5408\u7269\u7406\u76f4\u89c9\uff0c\u5982\u80fd\u91cf\u5b88\u6052\uff09\uff1b\u800c anti-It\u00f4 \u5219\u662f\u201c\u9884\u77e5\u672a\u6765\u201d\uff0c\u770b\u4e0b\u4e00\u523b\u7684\u65b9\u5411\u76d8\uff08\u73b0\u5b9e\u4e2d\u4e0d\u53ef\u80fd\uff0c\u4e3b\u8981\u7528\u4e8e\u7406\u8bba\u5bf9\u79f0\u6027\uff09\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u4ee3\u8868\u4e86\u5904\u7406\u968f\u673a\u8fc7\u7a0b\u4e2d\u201c\u4f55\u65f6\u91c7\u6837\u7cfb\u7edf\u72b6\u6001\u201d\u7684\u4e0d\u540c\u89c4\u5219\uff0c\u9009\u62e9\u54ea\u79cd\u53d6\u51b3\u4e8e\u4f60\u7814\u7a76\u7684\u95ee\u9898\u662f\u504f\u5411\u6570\u5b66\u4e25\u8c28\u6027\u8fd8\u662f\u7269\u7406\u771f\u5b9e\u6027\u3002</p> <p>\u4ece\u8fd9\u4e2a\u79bb\u6563\u65b9\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u89e3\u51fa \\(\\xi_i\\)\uff1a</p> \\[\\xi_i = \\frac{x_{i+1}-x_i}{\\Delta t} - [\\theta A(x_{i+1})+(1-\\theta)A(x_i)]\\] <p>\u53d8\u91cf\u53d8\u6362\u7684\u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u5143\u7d20\u662f \\(J_{ij}=\\frac{\\partial \\xi_i}{\\partial x_j}\\)\u3002\u8fd9\u662f\u4e00\u4e2a\u4e0b\u4e09\u89d2\u77e9\u9635\uff0c\u5176\u884c\u5217\u5f0f\u7b49\u4e8e\u5bf9\u89d2\u5143\u7d20\u7684\u4e58\u79ef\u3002\u5bf9\u89d2\u5143\u7d20\u4e3a\uff1a</p> \\[J_{ii} = \\frac{\\partial \\xi_i}{\\partial x_i} = -\\frac{1}{\\Delta t}-(1-\\theta)A'(x_i)\\] <p>\uff08\u6ce8\uff1a\u4e25\u683c\u7684\u63a8\u5bfc\u4f1a\u66f4\u590d\u6742\uff0c\u6d89\u53ca\u5230 \\(x_{i+1}\\) \u5bf9 \\(x_i\\) \u7684\u4f9d\u8d56\uff0c\u4f46\u6700\u7ec8\u7ed3\u679c\u7684\u5f62\u5f0f\u662f\u76f8\u4f3c\u7684\uff09\u3002\u5728\u8fde\u7eed\u6781\u9650\u4e0b\uff0c\u8fd9\u4e2a\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u7684\u5bf9\u6570\u4f1a\u7ed9\u4f5c\u7528\u91cf\u5e26\u6765\u4e00\u4e2a\u989d\u5916\u7684\u4fee\u6b63\u9879\u3002\u7ecf\u8fc7\u4e25\u8c28\u7684\u63a8\u5bfc\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u4fee\u6b63\u9879\u662f\uff1a</p> \\[\\ln(\\text{Jacobian}) = -\\theta \\int_0^t d\\tau\\, \\frac{dA(x(\\tau))}{dx} = -\\theta \\int_0^t d\\tau\\, A'(x(\\tau))\\] <p>\u8fd9\u4e2a\u9879\u7684\u51fa\u73b0\u610f\u5473\u7740\uff0c\u8def\u5f84\u7684\u6982\u7387\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u5b83\u4e0e\u786e\u5b9a\u6027\u8f68\u8ff9\u7684\u504f\u79bb\u7a0b\u5ea6\uff0c\u8fd8\u53d6\u51b3\u4e8e\u5b83\u6240\u7ecf\u8fc7\u533a\u57df\u7684\u6f02\u79fb\u573a\u7684\u68af\u5ea6\uff0c\u5e76\u4e14\u8fd9\u4e2a\u8d21\u732e\u7684\u5927\u5c0f\u4f9d\u8d56\u4e8e\u6211\u4eec\u6700\u521d\u9009\u62e9\u7684\u79bb\u6563\u5316\u65b9\u6848 \\(\\theta\\)\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#33-","title":"3.3. \u7fc1\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u4f5c\u7528\u91cf","text":"<p>\u5c06\u96c5\u53ef\u6bd4\u7684\u8d21\u732e\u4e0e\u4e4b\u524d\u7684\u6307\u6570\u9879\u7ed3\u5408\u8d77\u6765\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u7c92\u5b50\u8def\u5f84 \\(x(\u03c4)\\) \u7684\u5b8c\u6574\u6982\u7387\u6cdb\u51fd\uff1a</p> \\[P[x(\\tau)] \\sim \\exp(-S[x(\\tau)])\\] <p>\u5176\u4e2d\uff0c\\(S[x(\\tau)]\\) \u5c31\u662f\u8be5\u7cfb\u7edf\u7684\u4f5c\u7528\u91cf (Action)\uff0c\u5176\u5177\u4f53\u5f62\u5f0f\u4e3a\uff1a</p> \\[S[x(\\tau)] = \\int_0^t d\\tau \\left[\\frac{(\\dot{x}-A(x))^2}{4D} + \\theta A'(x)\\right]\\] <p>\u5bf9\u4e8e\u968f\u673a\u8fc7\u7a0b\uff0c\u7269\u7406\u4e0a\u6700\u81ea\u6d3d\u548c\u6700\u5e38\u7528\u7684\u8be0\u91ca\u662f\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\uff08Stratonovich\uff09\u8be0\u91ca\uff0c\u5b83\u5bf9\u5e94\u4e8e \\(\\theta=1/2\\)\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f5c\u7528\u91cf\u88ab\u79f0\u4e3a\u7fc1\u8428\u683c-\u9a6c\u8d6b\u5362\u666e (Onsager-Machlup, OM) \u4f5c\u7528\u91cf\uff1a</p> \\[S_{OM}[x(\\tau)] = \\int_0^t d\\tau \\left[\\frac{(\\dot{x}-A(x))^2}{4D} + \\frac{1}{2} A'(x)\\right]\\] <p>\u8fd9\u4e2a\u4f5c\u7528\u91cf\u6cdb\u51fd\u662f\u672c\u8bb2\u5ea7\u7684\u6838\u5fc3\u7ed3\u679c\u3002\u5b83\u4e3a\u4efb\u4f55\u4e00\u6761\u53ef\u80fd\u7684\u7c92\u5b50\u8f68\u8ff9 \\(x(\\tau)\\) \u5206\u914d\u4e86\u4e00\u4e2a\u6570\u503c\uff0c\u8fd9\u4e2a\u6570\u503c\u7684\u8d1f\u6307\u6570\u5c31\u6b63\u6bd4\u4e8e\u8be5\u8f68\u8ff9\u53d1\u751f\u7684\u6982\u7387\u3002\u4f5c\u7528\u91cf\u8d8a\u5c0f\uff0c\u8def\u5f84\u53d1\u751f\u7684\u6982\u7387\u5c31\u8d8a\u5927\u3002</p> <p>Onsager-Machlup \u7406\u8bba\u7531\u7269\u7406\u5b66\u5bb6 Lars Onsager \u548c Stefan Machlup \u4e8e 1953 \u5e74\u5728\u8bba\u6587 Fluctuations and Irreversible Processes \u4e2d\u63d0\u51fa\uff0c\u65e8\u5728\u5c06\u70ed\u529b\u5b66\u6da8\u843d\u8fc7\u7a0b\u8d4b\u4e88\u7c7b\u4f3c\u4e8e\u7ecf\u5178\u529b\u5b66\u201c\u6700\u5c0f\u4f5c\u7528\u91cf\u201d\u7684\u8def\u5f84\u63cf\u8ff0\uff1b\u5176\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u4e00\u4e2a\u5e03\u6717\u7c92\u5b50\u7684\u5b9e\u9645\u8f68\u8ff9\u867d\u7136\u968f\u673a\uff0c\u4f46\u6bcf\u6761\u53ef\u80fd\u8def\u5f84\u90fd\u6709\u4e00\u4e2a\u201c\u53d1\u751f\u6982\u7387\u201d\uff0c\u6b63\u6bd4\u4e8e \\(\\exp(-S_{OM}[x(\\tau)])\\)\uff0c\u5176\u4e2d\u4f5c\u7528\u91cf \\(S_{OM}\\) \u4e0d\u4ec5\u5305\u542b\u8def\u5f84\u504f\u79bb\u5e73\u5747\u8fd0\u52a8\u7684\u201c\u52a8\u80fd\u9879\u201d\uff0c\u8fd8\u5305\u542b\u6f02\u79fb\u573a\u68af\u5ea6\u7684\u4fee\u6b63\u9879\uff1b\u8fd9\u4e00\u7406\u8bba\u7684\u672c\u8d28\u5728\u4e8e\u63ed\u793a\u4e86\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u4e2d\u7684\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u7834\u7f3a\u4e0e\u8def\u5f84\u6743\u91cd\u7684\u5173\u7cfb\uff0c\u5e76\u4e3a\u4ece\u5fae\u89c2\u6da8\u843d\u63a8\u5bfc\u5b8f\u89c2\u4e0d\u53ef\u9006\u6027\u63d0\u4f9b\u4e86\u6865\u6881\uff1b\u5982\u4eca\uff0cOM \u4f5c\u7528\u91cf\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7269\u7406\u3001\u751f\u7269\u7269\u7406\uff08\u5982\u5355\u5206\u5b50\u8f68\u8ff9\u5206\u6790\uff09\u3001\u8f6f\u7269\u8d28\u52a8\u529b\u5b66\u3001\u8def\u5f84\u91c7\u6837\u7b97\u6cd5\u8bbe\u8ba1\u7b49\u9886\u57df\uff0c\u6210\u4e3a\u7406\u89e3\u566a\u58f0\u9a71\u52a8\u7cfb\u7edf\u4e2d\u6700\u6982\u7136\u8def\u5f84\u3001\u8fc7\u6e21\u6001\u3001\u71b5\u4ea7\u751f\u7b49\u5173\u952e\u6982\u5ff5\u7684\u57fa\u7840\u5de5\u5177\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#4","title":"4. \u7269\u7406\u610f\u4e49\uff1a\u6700\u6982\u7136\u8def\u5f84\u4e0e\u5b9e\u9a8c\u73b0\u5b9e","text":"<p>\u7fc1\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\uff08OM\uff09\u4f5c\u7528\u91cf\u7684\u8868\u8fbe\u5f0f\u5305\u542b\u4e86\u6df1\u523b\u7684\u7269\u7406\u610f\u4e49\uff0c\u5e76\u4e14\u6b63\u5982\u6559\u6388\u5728\u8bfe\u5802\u4e0a\u63d0\u5230\u7684\uff0c\u5b83\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7406\u8bba\u6784\u9020\uff0c\u5176\u6b63\u786e\u6027\u5df2\u7ecf\u5f97\u5230\u4e86\u73b0\u4ee3\u9ad8\u7cbe\u5ea6\u5b9e\u9a8c\u7684\u9a8c\u8bc1\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#41","title":"4.1. \u89e3\u6784\u4f5c\u7528\u91cf","text":"<p>OM\u4f5c\u7528\u91cf\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u6bcf\u4e00\u90e8\u5206\u90fd\u6709\u5176\u72ec\u7279\u7684\u7269\u7406\u8be0\u91ca\u3002</p> <ul> <li>\u7b2c\u4e00\u9879\uff1a\u5f17\u96f7\u5fb7\u6797-\u6e29\u7b56\u5c14 (Freidlin-Wentzell, FW) \u4f5c\u7528\u91cf</li> </ul> <p>$$   \\mathcal{L}_{FW} = \\frac{1}{4D}(\\dot{x} - A(x))^2   $$</p> <p>\u8fd9\u4e00\u9879\u4e5f\u88ab\u79f0\u4e3a\u5f17\u96f7\u5fb7\u6797-\u6e29\u7b56\u5c14\u4f5c\u7528\u91cf\u7684\u62c9\u683c\u6717\u65e5\u91cf\u3002\u5b83\u7684\u7269\u7406\u610f\u4e49\u975e\u5e38\u76f4\u89c2\uff1a\u5b83\u91cf\u5316\u4e86\u7c92\u5b50\u5b9e\u9645\u901f\u5ea6 \\(\\dot{x}\\) \u504f\u79bb\u786e\u5b9a\u6027\u6f02\u79fb\u901f\u5ea6 \\(A(x)\\) \u7684\"\u4ee3\u4ef7\"\u3002\u5982\u679c\u7c92\u5b50\u5b8c\u5168\u6309\u7167\u786e\u5b9a\u6027\u529b\u573a\u8fd0\u52a8\uff0c\u5373 \\(\\dot{x}=A(x)\\)\uff0c\u90a3\u4e48\u8fd9\u4e00\u9879\u4e3a\u96f6\uff0c\u4ee3\u4ef7\u6700\u5c0f\u3002\u4efb\u4f55\u7531\u566a\u58f0\u5f15\u8d77\u7684\u504f\u79bb\u90fd\u4f1a\u5bfc\u81f4\u8fd9\u4e00\u9879\u5927\u4e8e\u96f6\uff0c\u4ece\u800c\u4f7f\u5f97\u8def\u5f84\u7684\u6982\u7387\u964d\u4f4e\u3002\u5728\u5f31\u566a\u58f0\u6781\u9650 (\\(D \\to 0\\)) \u4e0b\uff0c\u7cfb\u7edf\u4e3a\u4e86\u4f7f\u603b\u4f5c\u7528\u91cf\u6700\u5c0f\u5316\uff0c\u4f1a\u503e\u5411\u4e8e\u9009\u62e9\u4f7f\u8fd9\u4e00\u9879\u4e3a\u96f6\u7684\u8def\u5f84\uff0c\u4e5f\u5c31\u662f\u7ecf\u5178\u786e\u5b9a\u6027\u8f68\u8ff9\u3002\u56e0\u6b64\uff0cFW\u4f5c\u7528\u91cf\u63cf\u8ff0\u4e86\u5728\u566a\u58f0\u5f88\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u7cfb\u7edf\u6700\u53ef\u80fd\u7684\u884c\u4e3a\u3002</p> <ul> <li>\u7b2c\u4e8c\u9879\uff1a\u96c5\u53ef\u6bd4/\u66f2\u7387\u4fee\u6b63\u9879</li> </ul> <p>$$ \\mathcal{L}_{corr} = \\frac{1}{2}A'(x)$$</p> <p>\u8fd9\u4e00\u9879\u662f\u533a\u5206OM\u4f5c\u7528\u91cf\u548cFW\u4f5c\u7528\u91cf\u7684\u5173\u952e\uff0c\u5b83\u6e90\u4e8e\u6cdb\u51fd\u79ef\u5206\u4e2d\u5fae\u5999\u7684\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u3002\u5b83\u7684\u7269\u7406\u610f\u4e49\u4e0e\u7c92\u5b50\u6240\u5904\u4f4d\u7f6e\u7684\u52bf\u80fd\u666f\u89c2\u7684\u66f2\u7387\u7d27\u5bc6\u76f8\u5173\u3002\u56de\u5fc6\u4e00\u4e0b\uff0c\u6f02\u79fb\u9879 \\(A(x)\\) \u4e0e\u52bf\u80fd \\(U(x)\\) \u7684\u5173\u7cfb\u662f \\(A(x)=F(x)/\\gamma=-U'(x)/\\gamma\\)\u3002\u56e0\u6b64\uff0c\u8fd9\u4e00\u9879\u53ef\u4ee5\u5199\u6210\uff1a</p> \\[ \\frac{1}{2}A'(x) = -\\frac{1}{2\\gamma}U''(x) \\] <ul> <li> <p>\u5f53\u7c92\u5b50\u5904\u4e8e\u52bf\u9631\u5e95\u90e8\uff08\u7a33\u5b9a\u70b9\uff09\u65f6\uff0c\u52bf\u80fd\u662f\u51f8\u7684\uff0c\\(U''(x)&gt;0\\)\u3002\u8fd9\u5bfc\u81f4\u4fee\u6b63\u9879 \\(A'(x)&lt;0\\)\uff0c\u4ece\u800c\u51cf\u5c0f\u4e86\u4f5c\u7528\u91cf\uff0c\u589e\u52a0\u4e86\u8def\u5f84\u7684\u6982\u7387\u3002\u8fd9\u610f\u5473\u7740\uff0c\u7c92\u5b50\u5728\u52bf\u9631\u4e2d\u9017\u7559\u7684\u8def\u5f84\u6bd4\u5728\u5176\u4ed6\u5730\u65b9\u66f4\u53ef\u80fd\u53d1\u751f\u3002</p> </li> <li> <p>\u5f53\u7c92\u5b50\u5904\u4e8e\u52bf\u5792\u9876\u90e8\uff08\u4e0d\u7a33\u5b9a\u70b9\uff09\u65f6\uff0c\u52bf\u80fd\u662f\u51f9\u7684\uff0c\\(U''(x)&lt;0\\)\u3002\u8fd9\u5bfc\u81f4\u4fee\u6b63\u9879 \\(A'(x)&gt;0\\)\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u4f5c\u7528\u91cf\uff0c\u6291\u5236\u4e86\u8def\u5f84\u7684\u6982\u7387\u3002\u8fd9\u610f\u5473\u7740\uff0c\u7c92\u5b50\u5728\u52bf\u5792\u9876\u90e8\u77ed\u6682\u505c\u7559\u7684\u8def\u5f84\u53d1\u751f\u7684\u53ef\u80fd\u6027\u88ab\u5927\u5927\u964d\u4f4e\u4e86\u3002</p> </li> </ul> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u96c5\u53ef\u6bd4\u4fee\u6b63\u9879\u8bf4\u660e\uff0c\u5728\u6709\u9650\u6e29\u5ea6\uff08\\(D&gt;0\\)\uff09\u4e0b\uff0c\u8def\u5f84\u7684\u6982\u7387\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u5b83\u662f\u5426\"\u542c\u4ece\"\u786e\u5b9a\u6027\u529b\u7684\u5f15\u5bfc\uff0c\u8fd8\u53d6\u51b3\u4e8e\u5b83\u6240\u63a2\u7d22\u7684\u52bf\u80fd\u666f\u89c2\u7684\u5c40\u90e8\u7a33\u5b9a\u6027\u3002\u7cfb\u7edf\u66f4\"\u559c\u6b22\"\u5728\u7a33\u5b9a\u7684\u533a\u57df\uff08\u52bf\u9631\uff09\u8fdb\u884c\u6da8\u843d\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#42-gladrow-2021","title":"4.2. \u4e0e\u5b9e\u9a8c\u7684\u8fde\u63a5\uff1aGladrow\u7b49\u4eba\u7684\u5de5\u4f5c (2021)","text":"<p>\u6559\u6388\u5728\u8bfe\u5802\u4e0a\u7279\u522b\u63d0\u53ca\u4e86Jannes Gladrow\u7b49\u4eba\u5728Physical Review X\u4e0a\u53d1\u8868\u7684\u4e00\u7bc7\u8bba\u6587\uff0c\u8be5\u8bba\u6587\u901a\u8fc7\u7cbe\u5de7\u7684\u5b9e\u9a8c\uff0c\u76f4\u63a5\"\u6d4b\u91cf\"\u4e86\u8def\u5f84\u7684\u6982\u7387\uff0c\u4e3a\u6211\u4eec\u521a\u624d\u8ba8\u8bba\u7684\u7406\u8bba\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u8bc1\u636e\u3002</p> <p>Gladrow, J., Keyser, U. F., Adhikari, R., &amp; Kappler, J. (2021). Experimental measurement of relative path probabilities and stochastic actions. Physical Review X, 11(3), 031022.</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#421","title":"4.2.1. \u5b9e\u9a8c\u6311\u6218\u4e0e\"\u9017\u7559\u6982\u7387\"","text":"<p>\u4e00\u4e2a\u6839\u672c\u6027\u7684\u96be\u9898\u662f\uff1a\u4efb\u4f55\u4e00\u6761\u7cbe\u786e\u7684\u8fde\u7eed\u8def\u5f84 \\(x(\\tau)\\)\uff0c\u5176\u53d1\u751f\u7684\u6982\u7387\u90fd\u662f\u65e0\u7a77\u5c0f\uff0c\u5373\u6982\u7387\u4e3a\u96f6\u3002\u8fd9\u4f7f\u5f97\u8def\u5f84\u79ef\u5206\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u7eaf\u7cb9\u7684\u6570\u5b66\u5f62\u5f0f\uff0c\u65e0\u6cd5\u76f4\u63a5\u6d4b\u91cf\u3002</p> <p>Gladrow\u7b49\u4eba\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5f15\u5165\u9017\u7559\u6982\u7387 (sojourn probability) \u7684\u6982\u5ff5\u3002\u4ed6\u4eec\u4e0d\u6d4b\u91cf\u7c92\u5b50\u5b8c\u5168\u9075\u5faa\u67d0\u6761\u7406\u8bba\u8def\u5f84 \\(\\varphi(t)\\) \u7684\u6982\u7387\uff0c\u800c\u662f\u6d4b\u91cf\u7c92\u5b50\u7684\u5b9e\u9645\u8f68\u8ff9\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u59cb\u7ec8\u4fdd\u6301\u5728\u4ee5 \\(\\varphi(t)\\) \u4e3a\u4e2d\u5fc3\u3001\u534a\u5f84\u4e3a \\(R\\) \u7684\u4e00\u4e2a\u5fae\u5c0f\"\u7ba1\u9053\"\u5185\u7684\u6982\u7387 \\(P_R^\\varphi(t)\\)\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u9650\u7684\u3001\u975e\u96f6\u7684\u3001\u53ef\u4ee5\u5728\u5b9e\u9a8c\u4e2d\u6d4b\u91cf\u7684\u91cf\u3002\u901a\u8fc7\u6d4b\u91cf\u4e24\u6761\u4e0d\u540c\u53c2\u8003\u8def\u5f84 \\(\\varphi_1\\) \u548c \\(\\varphi_2\\) \u7684\u9017\u7559\u6982\u7387\u4e4b\u6bd4\uff0c\u5e76\u5728\u5b9e\u9a8c\u540e\u901a\u8fc7\u6570\u636e\u5916\u63a8\u81f3\u7ba1\u9053\u534a\u5f84 \\(R \\to 0\\) \u7684\u6781\u9650\uff0c\u4ed6\u4eec\u5c31\u80fd\u591f\u5b9e\u9a8c\u6027\u5730\u786e\u5b9a\u7406\u8bba\u8def\u5f84\u6982\u7387\u4e4b\u6bd4 \\(e^{-S[\\varphi_1]}/e^{-S[\\varphi_2]}\\)\u3002\u8fd9\u4e00\u5de7\u5999\u7684\u8bbe\u8ba1\uff0c\u5c06\u62bd\u8c61\u7684\u8def\u5f84\u79ef\u5206\u6982\u5ff5\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u53ef\u64cd\u4f5c\u7684\u7269\u7406\u89c2\u6d4b\u91cf\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#422-om","title":"4.2.2. \u5b9e\u9a8c\u7684\u88c1\u51b3\uff1aOM\u4f5c\u7528\u91cf\u80dc\u51fa","text":"<p>\u8be5\u5b9e\u9a8c\u7684\u6838\u5fc3\u88c5\u7f6e\u662f\u4e00\u4e2a\u88ab\u6fc0\u5149\u5149\u954a\u6355\u83b7\u5728\u5fae\u901a\u9053\u4e2d\u7684\u80f6\u4f53\u9897\u7c92\uff0c\u6fc0\u5149\u5236\u9020\u4e86\u4e00\u4e2a\u53cc\u9631\u52bf\u3002\u901a\u8fc7\u9ad8\u901f\u6444\u50cf\u673a\u8ffd\u8e2a\u9897\u7c92\u7684\u4f4d\u7f6e\uff0c\u4ed6\u4eec\u83b7\u5f97\u4e86\u5927\u91cf\u7684\u968f\u673a\u8f68\u8ff9\u6570\u636e\u3002</p> <p></p> <p>\u5b9e\u9a8c\u7684\u5173\u952e\u53d1\u73b0\u662f\uff1a\u5728\u5ba4\u6e29\u4e0b\uff08\u4e00\u4e2a\u5178\u578b\u7684\u6709\u9650\u6e29\u5ea6\u73af\u5883\uff09\uff0c\u6d4b\u91cf\u5f97\u5230\u7684\u8def\u5f84\u6982\u7387\u6bd4\u4e0e\u4f7f\u7528\u7fc1\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\uff08OM\uff09\u4f5c\u7528\u91cf\u7684\u7406\u8bba\u9884\u6d4b\u5b8c\u7f8e\u543b\u5408\uff0c\u800c\u4e0e\u4f7f\u7528\u66f4\u7b80\u5355\u7684\u5f17\u96f7\u5fb7\u6797-\u6e29\u7b56\u5c14\uff08FW\uff09\u4f5c\u7528\u91cf\u7684\u9884\u6d4b\u5219\u5b58\u5728\u663e\u8457\u504f\u5dee\u3002</p> <p>\u8fd9\u8bc1\u660e\u4e86\u6211\u4eec\u63a8\u5bfc\u51fa\u7684\u96c5\u53ef\u6bd4\u4fee\u6b63\u9879 \\(\\frac{1}{2}A'(x)\\) \u5e76\u975e\u53ef\u6709\u53ef\u65e0\u7684\u6570\u5b66\u7ec6\u8282\uff0c\u5b83\u5177\u6709\u771f\u5b9e\u7684\u3001\u53ef\u6d4b\u91cf\u7684\u7269\u7406\u6548\u5e94\u3002\u5728\u6709\u9650\u6e29\u5ea6\u4e0b\uff0c\u5b83\u5bf9\u4e8e\u6b63\u786e\u63cf\u8ff0\u7cfb\u7edf\u7684\u6da8\u843d\u884c\u4e3a\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u8fd9\u573a\u7406\u8bba\u4e0e\u5b9e\u9a8c\u7684\u5bf9\u8bdd\uff0c\u5c06\u5173\u4e8e\u4f0a\u4e1c\u548c\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u8be0\u91ca\u7684\u9009\u62e9\uff0c\u4ece\u4e00\u4e2a\u7eaf\u7cb9\u7684\u6570\u5b66\u7ea6\u5b9a\u95ee\u9898\uff0c\u63d0\u5347\u5230\u4e86\u4e00\u4e2a\u7531\u7269\u7406\u73b0\u5b9e\u51b3\u5b9a\u7684\u57fa\u672c\u539f\u5219\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#423","title":"4.2.3. \u4f5c\u4e3a\u7269\u7406\u5b9e\u4f53\u7684\"\u6700\u6982\u7136\u8def\u5f84\"\uff08\u77ac\u5b50\uff09","text":"<p>\u7406\u8bba\u4e0a\uff0c\u4ece\u4e00\u4e2a\u7a33\u5b9a\u6001\uff08\u5982\u4e00\u4e2a\u52bf\u9631\uff09\u8dc3\u8fc1\u5230\u53e6\u4e00\u4e2a\u7a33\u5b9a\u6001\u662f\u4e00\u4e2a\u5c0f\u6982\u7387\u4e8b\u4ef6\u3002\u5728\u6240\u6709\u53ef\u80fd\u5b9e\u73b0\u8fd9\u4e00\u8dc3\u8fc1\u7684\u8def\u5f84\u4e2d\uff0c\u5b58\u5728\u4e00\u6761\u6216\u51e0\u6761\u6982\u7387\u6700\u5927\u7684\u8def\u5f84\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u6700\u6982\u7136\u8def\u5f84 (most probable path) \u6216\u77ac\u5b50 (instanton)\u3002\u7406\u8bba\u4e0a\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u6700\u5c0f\u5316\u4f5c\u7528\u91cf\u6cdb\u51fd \\(S[x(\\tau)]\\) \u5f97\u5230\u3002</p> <p>Gladrow\u7b49\u4eba\u7684\u5b9e\u9a8c\u8fdb\u4e00\u6b65\u5c06\u77ac\u5b50\u7684\u6982\u5ff5\u5b9e\u4f53\u5316\u4e86\u3002\u4ed6\u4eec\u901a\u8fc7\u5206\u6790\u5b9e\u9a8c\u6570\u636e\uff0c\u627e\u5230\u4e86\u4f7f\u5f97\"\u7ba1\u9053\"\u7684\u9003\u9038\u7387\u79ef\u5206\u6700\u5c0f\u7684\u8def\u5f84\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u5b9e\u9a8c\u6d4b\u5b9a\u7684\u77ac\u5b50\u3002\u7ed3\u679c\u663e\u793a\uff0c\u8fd9\u6761\u4ece\u5b9e\u9a8c\u6570\u636e\u4e2d\u63d0\u53d6\u51fa\u7684\u8def\u5f84\uff0c\u4e0e\u7406\u8bba\u4e0a\u901a\u8fc7\u6700\u5c0f\u5316OM\u4f5c\u7528\u91cf\u5f97\u5230\u7684\u77ac\u5b50\u8def\u5f84\u60ca\u4eba\u5730\u4e00\u81f4\u3002\u8fd9\u8868\u660e\uff0c\u77ac\u5b50\u5e76\u975e\u7eaf\u7cb9\u7684\u7406\u8bba\u89e3\uff0c\u5b83\u771f\u5b9e\u5730\u4ee3\u8868\u4e86\u7cfb\u7edf\u5728\u8fdb\u884c\u7a00\u6709\u4e8b\u4ef6\uff08\u5982\u8d8a\u8fc7\u52bf\u5792\uff09\u65f6\u6240\u9075\u5faa\u7684\"\u5178\u578b\"\u6216\"\u4e2d\u5fc3\"\u8def\u5f84\u3002</p> \u7279\u5f81 \u5f17\u96f7\u5fb7\u6797-\u6e29\u7b56\u5c14 (FW) \u4f5c\u7528\u91cf \u7fc1\u8428\u683c-\u9a6c\u8d6b\u5362\u666e (OM) \u4f5c\u7528\u91cf \u62c9\u683c\u6717\u65e5\u91cf \\(\\mathcal{L}_{FW} = \\frac{1}{4D}(\\dot{x} - A(x))^2\\) \\(\\mathcal{L}_{OM} = \\frac{1}{4D}(\\dot{x} - A(x))^2 + \\frac{1}{2}A'(x)\\) \u6765\u6e90 \u5728\u5f31\u566a\u58f0 (\\(D \\to 0\\)) \u6781\u9650\u4e0b\u81ea\u7136\u51fa\u73b0\uff1b\u5bf9\u5e94\u4f0a\u4e1c\u79bb\u6563\u5316 (\\(\\theta = 0\\)) \u6765\u81ea\u4e8e\u5305\u542b\u6b63\u786e\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u7684\u53d8\u91cf\u4ee3\u6362\uff1b\u5bf9\u5e94\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79bb\u6563\u5316 (\\(\\theta = 1/2\\)) \u7269\u7406\u9002\u7528\u8303\u56f4 \u4ec5\u5728\u6e10\u8fd1\u4f4e\u6e29\u6216\u6781\u5feb\u8f6c\u53d8\u8fc7\u7a0b\u4e2d\u80fd\u51c6\u786e\u63cf\u8ff0\u6700\u6982\u7136\u8def\u5f84\u3002 \u5728\u6709\u9650\u6e29\u5ea6\u4e0b\u51c6\u786e\u63cf\u8ff0\u8def\u5f84\u6982\u7387\u548c\u6700\u6982\u7136\u8def\u5f84\u3002 \u5b9e\u9a8c\u9a8c\u8bc1 \u4e0e\u5ba4\u6e29\u4e0b\u7684\u80f6\u4f53\u9897\u7c92\u5b9e\u9a8c\u6570\u636e\u4e0d\u7b26\u3002 \u4e0e\u5b9e\u9a8c\u6570\u636e\u9ad8\u5ea6\u543b\u5408\u3002 \u6838\u5fc3\u7269\u7406 \u6355\u6349\u4e86\u8f68\u8ff9\u504f\u79bb\u786e\u5b9a\u6027\u52a8\u529b\u5b66\u7684\u4ee3\u4ef7\u3002 \u540c\u65f6\u6355\u6349\u4e86\u504f\u79bb\u4ee3\u4ef7\u548c\u52bf\u80fd\u666f\u89c2\u66f2\u7387\u5bf9\u6da8\u843d\u7684\u5f71\u54cd\u3002"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#43-python1","title":"4.3. Python\u6a21\u62df1\uff1a\u53cc\u9631\u52bf\u4e2d\u7684\u77ac\u5b50","text":"<p>\u4e3a\u4e86\u76f4\u89c2\u5730\u7406\u89e3FW\u548cOM\u77ac\u5b50\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6570\u503c\u8ba1\u7b97\u6765\u627e\u5230\u5b83\u4eec\u3002\u6211\u4eec\u5c06\u4e00\u4e2a\u8def\u5f84\u79bb\u6563\u5316\u4e3a\u4e00\u7cfb\u5217\u70b9\uff0c\u7136\u540e\u4f7f\u7528\u4f18\u5316\u7b97\u6cd5\u5bfb\u627e\u80fd\u4f7f\u79bb\u6563\u5316\u7684\u4f5c\u7528\u91cf\u6700\u5c0f\u7684\u8def\u5f84\u3002</p> <p>\u4e0b\u9762\u7684Python\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53cc\u9631\u52bf\uff0c\u5e76\u8ba1\u7b97\u4e86\u8fde\u63a5\u4e24\u4e2a\u52bf\u9631\u7684FW\u548cOM\u77ac\u5b50\u3002</p> <ul> <li>\u76ee\u7684: \u8be5\u4ee3\u7801\u65e8\u5728\u6570\u503c\u8ba1\u7b97\u5e76\u53ef\u89c6\u5316\u4e00\u4e2a\u5728\u53cc\u9631\u52bf \\(U(x) = (x^2 - 1)^2\\) \u4e2d\uff0c\u4ece\u4e00\u4e2a\u52bf\u9631\u5e95\u90e8 (\\(x=-1\\)) \u8dc3\u8fc1\u5230\u53e6\u4e00\u4e2a\u52bf\u9631\u5e95\u90e8 (\\(x=1\\)) \u7684\u201c\u6700\u53ef\u51e0\u8def\u5f84\u201d\uff08\u4e5f\u79f0\u4e3a\u77ac\u5b50\uff0cInstanton\uff09\u3002</li> </ul> <p>\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u201c\u4f5c\u7528\u91cf\u201d\u6216\u201c\u4ee3\u4ef7\u51fd\u6570\u201d\uff1a</p> <ul> <li> <p>\u5f17\u96f7\u5fb7\u6797-\u6e29\u7b56\u5c14 (Freidlin-Wentzell, FW) \u4f5c\u7528\u91cf:</p> <p>\u5b9a\u4e49\u4e3a\uff1a\\(\\mathcal{S}_{\\text{FW}} = \\int \\frac{(\\dot{x} - A)^2}{4D}  dt\\)\uff0c\u5bf9\u5e94\u7684\u62c9\u683c\u6717\u65e5\u91cf\u4e3a\uff1a $$ \\text{Lagrangian_fw} = \\frac{(\\dot{x} - A)^2}{4D} $$ \u8fd9\u5bf9\u5e94\u4e8e\u7fc1\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u4f5c\u7528\u91cf\u4e2d\u7684\u4e3b\u9879\uff0c\u4ec5\u8003\u8651\u8def\u5f84\u504f\u79bb\u786e\u5b9a\u6027\u8f68\u8ff9\u7684\u4ee3\u4ef7\u3002</p> </li> <li> <p>\u7fc1\u8428\u683c-\u9a6c\u8d6b\u5362\u666e (Onsager-Machlup, OM) \u4f5c\u7528\u91cf:</p> <p>\u5728 FW \u4f5c\u7528\u91cf\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u4e00\u4e2a\u4fee\u6b63\u9879\uff0c\u5b8c\u6574\u5f62\u5f0f\u4e3a\uff1a $$ \\mathcal{S}_{\\text{OM}} = \\int \\left[ \\frac{(\\dot{x} - A)^2}{4D} + \\frac{1}{2} \\nabla A \\right] dt $$ \u5176\u4e2d\u4fee\u6b63\u9879\u4e3a \\(\\text{Lagrangian_om} = 0.5 \\times A'\\)\uff0c\\(A'\\) \u662f\u6f02\u79fb\u9879 \\(A(x)\\) \u7684\u7a7a\u95f4\u5bfc\u6570\uff08\u5373 \\(A' = \\frac{dA}{dx}\\)\uff09\u3002\u8fd9\u4e2a\u4fee\u6b63\u9879\u6765\u6e90\u4e8e\u4ece\u566a\u58f0\u8def\u5f84\u5230\u7c92\u5b50\u8def\u5f84\u7684\u5750\u6807\u53d8\u6362\uff08\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\uff09\uff0c\u5728\u7269\u7406\u4e0a\u81f3\u5173\u91cd\u8981\u3002</p> </li> </ul> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.optimize import minimize\n\n# Define physical parameters\ngamma = 1.0  # Friction coefficient\nD = 0.05     # Reduce diffusion coefficient to enhance differences\n\n# 1. Define double-well potential and its derivatives\ndef potential(x):\n    \"\"\"Double-well potential U(x) = (x^2 - 1)^2\"\"\"\n    return (x**2 - 1)**2\n\ndef force(x):\n    \"\"\"Force F(x) = -U'(x)\"\"\"\n    return -4 * x * (x**2 - 1)\n\ndef drift(x):\n    \"\"\"Drift term A(x) = F(x) / gamma\"\"\"\n    return force(x) / gamma\n\ndef drift_prime(x):\n    \"\"\"Derivative of drift term A'(x)\"\"\"\n    return (-12 * x**2 + 4) / gamma\n\n# 2. Discretized action\ndef get_action(path, dt, action_type='OM'):\n    \"\"\"Calculate discrete action of path\"\"\"\n    x = path\n    x_dot = np.diff(x) / dt\n    x_mid = (x[:-1] + x[1:]) / 2  # Midpoints for evaluating A(x) and A'(x)\n\n    A = drift(x_mid)\n    A_prime = drift_prime(x_mid)\n\n    # FW Lagrangian\n    lagrangian_fw = (x_dot - A)**2 / (4 * D)\n\n    if action_type == 'FW':\n        action = np.sum(lagrangian_fw * dt)\n    elif action_type == 'OM':\n        # OM correction term\n        lagrangian_om_corr = 0.5 * A_prime\n        action = np.sum((lagrangian_fw + lagrangian_om_corr) * dt)\n    else:\n        raise ValueError(\"action_type must be 'FW' or 'OM'\")\n\n    return action\n\n# 3. Numerical optimization to find instanton\n# Time and path settings\nT_total = 8.0  # Increase total time\nN_points = 201  # Increase number of path points\ndt = T_total / (N_points - 1)\ntime = np.linspace(0, T_total, N_points)\n\n# Initial path guess (straight line from -1 to +1)\ninitial_path = np.linspace(-1, 1, N_points)\n\n# Optimization functions\ndef objective_fw(p):\n    return get_action(p, dt, 'FW')\n\ndef objective_om(p):\n    return get_action(p, dt, 'OM')\n\n# Run optimization\n# Fix start and end points of path\ncons = ({'type': 'eq', 'fun': lambda x: x[0] + 1},\n        {'type': 'eq', 'fun': lambda x: x[-1] - 1})\n\nprint(\"Minimizing FW action...\")\nresult_fw = minimize(objective_fw, initial_path, constraints=cons, method='SLSQP', \n                     options={'maxiter': 1000, 'ftol': 1e-9})\npath_fw = result_fw.x\nprint(\"FW minimization successful:\", result_fw.success)\nprint(\"FW action value:\", result_fw.fun)\n\nprint(\"Minimizing OM action...\")\n# Use FW result as initial guess for OM\nresult_om = minimize(objective_om, path_fw, constraints=cons, method='SLSQP',\n                     options={'maxiter': 1000, 'ftol': 1e-9})\npath_om = result_om.x\nprint(\"OM minimization successful:\", result_om.success)\nprint(\"OM action value:\", result_om.fun)\n\n\n# 4. Plotting\nplt.figure(figsize=(10, 6))\nx_plot = np.linspace(-1.5, 1.5, 200)\nU_plot = potential(x_plot)\n\nplt.plot(x_plot, U_plot, 'k-', label='Potential $U(x)=(x^2-1)^2$')\nplt.plot(path_fw, potential(path_fw), 'r.--', label='FW Instanton')\nplt.plot(path_om, potential(path_om), 'b.--', label='OM Instanton')\n\nplt.title('Most Probable Paths (Instantons) in a Double-Well Potential')\nplt.xlabel('Position $x$')\nplt.ylabel('Potential Energy $U(x)$')\nplt.ylim(-0.2, 2)\nplt.legend()\nplt.grid(True)\nplt.show()\n\n# Plot path vs. time\nplt.figure(figsize=(10, 6))\nplt.plot(time, path_fw, 'r-', label='FW Instanton')\nplt.plot(time, path_om, 'b-', label='OM Instanton')\nplt.axhline(-1, color='k', linestyle='--', alpha=0.5)\nplt.axhline(1, color='k', linestyle='--', alpha=0.5)\nplt.title('Path vs. Time')\nplt.xlabel('Time $t$')\nplt.ylabel('Position $x(t)$')\nplt.legend()\nplt.grid(True)\nplt.show()\n</code></pre> </p> <p></p> <ul> <li> <p>\u6a21\u62df\u7ed3\u679c\uff1a\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u5230\u4e24\u6761\u77ac\u5b50\u8def\u5f84\u7684\u533a\u522b\u3002FW\u77ac\u5b50\uff08\u7ea2\u8272\uff09\u503e\u5411\u4e8e\u4ee5\u63a5\u8fd1\u6052\u5b9a\u7684\u901f\u5ea6\u76f4\u63a5\u4ece\u4e00\u4e2a\u52bf\u9631\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u52bf\u9631\uff0c\u56e0\u4e3a\u5b83\u53ea\u5173\u5fc3\u6700\u5c0f\u5316\u901f\u5ea6\u4e0e\u6f02\u79fb\u7684\u5dee\u5f02\u3002\u800cOM\u77ac\u5b50\uff08\u84dd\u8272\uff09\u5219\u8868\u73b0\u51fa\u4e0d\u540c\u7684\u884c\u4e3a\uff1a\u5b83\u4f1a\u66f4\u5feb\u5730\u79bb\u5f00\u521d\u59cb\u52bf\u9631\u7684\u5e95\u90e8\uff0c\u5feb\u901f\u7a7f\u8fc7\u52bf\u5792\u533a\u57df\uff0c\u7136\u540e\u82b1\u66f4\u591a\u65f6\u95f4\u7f13\u6162\u5730\u63a5\u8fd1\u5e76\u7a33\u5b9a\u5728\u76ee\u6807\u52bf\u9631\u7684\u5e95\u90e8\u3002</p> </li> <li> <p>\u7269\u7406\u5185\u6db5\uff1a\u8fd9\u79cd\u5dee\u5f02\u6b63\u662f \\(A'(x)\\) \u9879\u4f5c\u7528\u7684\u4f53\u73b0\u3002\u5728\u52bf\u9631\u5e95\u90e8\uff0c\\(A'(x)\\) \u4e3a\u8d1f\uff0c\u51cf\u5c0f\u4e86\u4f5c\u7528\u91cf\uff0c\u56e0\u6b64OM\u8def\u5f84\u66f4\"\u613f\u610f\"\u5728\u8fd9\u4e9b\u533a\u57df\u82b1\u8d39\u65f6\u95f4\u3002\u8fd9\u4e2a\u7b80\u5355\u7684\u6a21\u62df\u76f4\u89c2\u5730\u518d\u73b0\u4e86\u7406\u8bba\u7684\u6838\u5fc3\u601d\u60f3\uff0c\u5e76\u4e0eGladrow\u7b49\u4eba\u7684\u5b9e\u9a8c\u89c2\u5bdf\u5b9a\u6027\u4e00\u81f4\u3002</p> </li> </ul>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#5-msrjd","title":"5. \u9ad8\u7ea7\u5de5\u5177\uff1a\u54cd\u5e94\u573a (MSRJD) \u8868\u8ff0","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u63a8\u5bfc\u51fa\u7684\u7fc1\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u4f5c\u7528\u91cf\u5728\u7269\u7406\u4e0a\u662f\u5b8c\u5907\u7684\uff0c\u4f46\u5728\u8fdb\u884c\u5177\u4f53\u8ba1\u7b97\uff08\u4f8b\u5982\uff0c\u8ba1\u7b97\u89c2\u6d4b\u91cf\u5e73\u5747\u503c\uff09\u65f6\u53ef\u80fd\u5e76\u4e0d\u65b9\u4fbf\u3002\u539f\u56e0\u662f\u4f5c\u7528\u91cf \\(S_{OM}[x]\\) \u5bf9\u4e8e\u53d8\u91cf \\(x\\) \u901a\u5e38\u662f\u9ad8\u5ea6\u975e\u7ebf\u6027\u7684\uff08\u56e0\u4e3a \\(A(x)\\) \u548c \\(A'(x)\\) \u53ef\u80fd\u662f\u590d\u6742\u7684\u51fd\u6570\uff09\uff0c\u8fd9\u4f7f\u5f97\u6cdb\u51fd\u79ef\u5206\u96be\u4ee5\u89e3\u6790\u6c42\u89e3\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u7269\u7406\u5b66\u5bb6\u4eec\u4ece\u91cf\u5b50\u573a\u8bba\u4e2d\u501f\u9274\u4e86\u4e00\u79cd\u5f3a\u5927\u7684\u6570\u5b66\u6280\u5de7\uff0c\u53d1\u5c55\u51fa\u4e86\u6240\u8c13\u7684\u9a6c\u4e01-\u897f\u8d3e-\u7f57\u65af-\u8a79\u68ee-\u5fb7\u591a\u7c73\u5c3c\u897f\u65af (Martin-Siggia-Rose-Janssen-de Dominicis, MSRJD) \u8868\u8ff0\uff0c\u4e5f\u5e38\u88ab\u79f0\u4e3a\u54cd\u5e94\u573a (Response Field) \u6216\u52a8\u529b\u5b66\u4f5c\u7528\u91cf (Dynamical Action) \u8868\u8ff0\u3002</p> <p>\u5176\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u5f15\u5165\u4e00\u4e2a\u8f85\u52a9\u573a\uff08\u6216\u79f0\u54cd\u5e94\u573a\uff09\\(\\tilde{x}(\\tau)\\)\uff0c\u5c06\u539f\u6765\u5bf9 \\(x\\) \u975e\u7ebf\u6027\u7684\u4f5c\u7528\u91cf\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5bf9 \\(x\\) \u548c \\(\\tilde{x}\\) \u90fd\u662f\u7ebf\u6027\u7684\uff08\u6216\u81f3\u591a\u662f\u4e8c\u6b21\u7684\uff09\u65b0\u4f5c\u7528\u91cf\uff0c\u4ece\u800c\u7b80\u5316\u8ba1\u7b97\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#51-","title":"5.1. \u63a8\u5bfc\u601d\u8def (\u54c8\u4f2f\u5fb7-\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u53d8\u6362)","text":"<p>\u63a8\u5bfcMSRJD\u4f5c\u7528\u91cf\u7684\u6807\u51c6\u65b9\u6cd5\u662f\u5229\u7528\u9ad8\u65af\u79ef\u5206\u7684\u5085\u91cc\u53f6\u8868\u793a\uff0c\u8fd9\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u54c8\u4f2f\u5fb7-\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\uff08Hubbard-Stratonovich\uff09\u53d8\u6362\u3002\u6211\u4eec\u4ece\u79bb\u6563\u5316\u7684\u8def\u5f84\u6982\u7387\u51fa\u53d1\uff1a</p> \\[P[\\{x_i\\}] \\sim \\exp \\left(-\\frac{1}{4D}\\sum_i (x_{i+1}-x_i-\\Delta t A(x_i))^2\\right) \\times \\text{Jacobian}\\] <p>\u6211\u4eec\u5229\u7528\u4ee5\u4e0b\u9ad8\u65af\u79ef\u5206\u6052\u7b49\u5f0f\uff1a</p> \\[e^{-ay^2} = \\sqrt{\\frac{\\pi}{a}} \\int_{-\\infty}^{\\infty} \\frac{d\\tilde{y}}{2\\pi} e^{-\\tilde{y}^2/(4a) + i\\tilde{y}y}\\] <p>\u5c06\u8fd9\u4e2a\u6052\u7b49\u5f0f\u5e94\u7528\u4e8e\u6307\u6570\u9879\u4e2d\u7684\u5e73\u65b9\u9879\uff0c\u5176\u4e2d \\(y = (\\dot{x} - A(x))\\)\u3002\u5728\u79bb\u6563\u5f62\u5f0f\u4e2d\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u65f6\u95f4\u6b65 \\(i\\) \u90fd\u5f15\u5165\u4e00\u4e2a\u8f85\u52a9\u53d8\u91cf \\(\\tilde{x}_i\\)\u3002\u7ecf\u8fc7\u4e00\u7cfb\u5217\u4ee3\u6570\u8fd0\u7b97\u5e76\u53d6\u8fde\u7eed\u6781\u9650\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u91cf \\(S'[x, \\tilde{x}]\\)\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#52-msrjd","title":"5.2. MSRJD \u4f5c\u7528\u91cf","text":"<p>\u6839\u636e\u6559\u6388\u5728\u9ed1\u677f\u4e0a\u7684\u63a8\u5bfc\uff0c\u901a\u8fc7\u5f15\u5165\u4e00\u4e2a\u7eaf\u865a\u7684\u54cd\u5e94\u573a \\(i\\tilde{x}\\)\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u8def\u5f84\u6982\u7387\u53ef\u4ee5\u8868\u793a\u4e3a\u5bf9\u4e24\u4e2a\u573a \\(x(\\tau)\\) \u548c \\(\\tilde{x}(\\tau)\\) \u7684\u79ef\u5206\uff1a</p> \\[P \\sim \\int \\mathcal{D}[x]\\mathcal{D}[\\tilde{x}] \\exp(-S'[x, \\tilde{x}])\\] <p>\u5176\u4e2d\uff0cMSRJD\u4f5c\u7528\u91cf\uff08\u5728\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u8be0\u91ca\u4e0b\uff0c\\(\\theta=1/2\\)\uff09\u4e3a\uff1a</p> \\[S'[x, \\tilde{x}] = \\int_0^t d\\tau \\left[\\tilde{x}(\\dot{x}-A(x)) + iD\\tilde{x}^2\\right]\\] <p>\u8fd9\u4e2a\u65b0\u7684\u4f5c\u7528\u91cf\u6709\u51e0\u4e2a\u4f18\u70b9\uff1a</p> <ol> <li> <p>\u5bf9 \\(\\dot{x}\\) \u7ebf\u6027\uff1a\\(\\dot{x}\\) \u9879\u73b0\u5728\u53ea\u662f\u4e00\u6b21\u51fa\u73b0\uff0c\u8fd9\u5728\u5904\u7406\u65f6\u95f4\u5bfc\u6570\u65f6\u975e\u5e38\u65b9\u4fbf\u3002</p> </li> <li> <p>\u4e8c\u6b21\u578b\u7ed3\u6784\uff1a\u4f5c\u7528\u91cf\u5728 \\(\\tilde{x}\\) \u4e2d\u662f\u4e8c\u6b21\u7684\uff0c\u5728 \\(x\\) \u4e2d\u7684\u975e\u7ebf\u6027\u88ab\u9694\u79bb\u5728 \\(i\\tilde{x}A(x)\\) \u9879\u4e2d\u3002</p> </li> <li> <p>\u5fae\u6270\u7406\u8bba\u7684\u8d77\u70b9\uff1a\u8fd9\u79cd\u5f62\u5f0f\u662f\u5e94\u7528\u5fae\u6270\u7406\u8bba\uff08\u4f8b\u5982\uff0c\u8d39\u66fc\u56fe\u65b9\u6cd5\uff09\u7814\u7a76\u968f\u673a\u52a8\u529b\u5b66\u7684\u6807\u51c6\u51fa\u53d1\u70b9\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4f5c\u7528\u91cf\u5206\u4e3a\"\u81ea\u7531\"\u90e8\u5206\uff08\u4e8c\u6b21\u9879\uff09\u548c\"\u76f8\u4e92\u4f5c\u7528\"\u90e8\u5206\uff08\u9ad8\u6b21\u9879\uff09\uff0c\u7136\u540e\u8fdb\u884c\u7cfb\u7edf\u6027\u7684\u5c55\u5f00\u8ba1\u7b97\u3002</p> </li> </ol> <p>\u867d\u7136MSRJD\u8868\u8ff0\u5728\u6280\u672f\u4e0a\u66f4\u4e3a\u590d\u6742\uff0c\u4f46\u5b83\u4e3a\u5904\u7406\u5f3a\u76f8\u4e92\u4f5c\u7528\u6216\u975e\u7ebf\u6027\u968f\u673a\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u5957\u7cfb\u7edf\u5316\u7684\u3001\u5f3a\u5927\u7684\u8ba1\u7b97\u5de5\u5177\uff0c\u662f\u8fde\u63a5\u968f\u673a\u8fc7\u7a0b\u4e0e\u7edf\u8ba1\u573a\u8bba\u7684\u91cd\u8981\u6865\u6881\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#6","title":"6. \u6a21\u62df\u5b9e\u8df5\uff1a\u53ef\u89c6\u5316\u968f\u673a\u8def\u5f84","text":"<p>\u4e0b\u9762\u7684\u6a21\u62df\u5c06\u76f4\u63a5\u6c42\u89e3\u6717\u4e4b\u4e07\u65b9\u7a0b\uff0c\u751f\u6210\u5927\u91cf\u7684\u968f\u673a\u8f68\u8ff9\uff0c\u5e76\u4e0e\u6211\u4eec\u4e4b\u524d\u8ba1\u7b97\u51fa\u7684\u6700\u6982\u7136\u8def\u5f84\u8fdb\u884c\u6bd4\u8f83\u3002</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#61-python2","title":"6.1. Python\u6a21\u62df2\uff1a\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\u4e0e\u8def\u5f84\u5206\u5e03","text":"<p>\u6211\u4eec\u5c06\u4f7f\u7528\u7b80\u5355\u7684\u6b27\u62c9-\u4e38\u5c71\uff08Euler-Maruyama\uff09\u65b9\u6cd5\u6765\u6570\u503c\u6c42\u89e3\u53cc\u9631\u52bf\u4e2d\u7684\u8fc7\u963b\u5c3c\u6717\u4e4b\u4e07\u65b9\u7a0b\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# Use the same physical parameters and potential function as simulation 1\ngamma = 1.0\nD = 0.25     # Moderate diffusion coefficient, balancing transition rate and rarity\nT_total = 40.0  # Further increase total time to ensure complete equilibrium\nN_points = 801  # Further increase time resolution\ndt = T_total / (N_points - 1)\ntime = np.linspace(0, T_total, N_points)\n\ndef potential(x):\n    return (x**2 - 1)**2\n\ndef drift(x):\n    return -4 * x * (x**2 - 1) / gamma\n\ndef drift_prime(x):\n    \"\"\"Derivative of drift term A'(x)\"\"\"\n    return (-12 * x**2 + 4) / gamma\n\n# Simple calculation of OM instanton path (for plotting)\ndef get_simple_om_instanton():\n    \"\"\"Calculate simplified OM instanton path for visualization\"\"\"\n    from scipy.optimize import minimize\n\n    def get_action(path, dt):\n        x = path\n        x_dot = np.diff(x) / dt\n        x_mid = (x[:-1] + x[1:]) / 2\n        A = drift(x_mid)\n        A_prime = drift_prime(x_mid)\n        lagrangian_fw = (x_dot - A)**2 / (4 * D)\n        lagrangian_om_corr = 0.5 * A_prime\n        action = np.sum((lagrangian_fw + lagrangian_om_corr) * dt)\n        return action\n\n    # Simplified optimization\n    initial_path = np.linspace(-1, 1, N_points)\n    cons = ({'type': 'eq', 'fun': lambda x: x[0] + 1},\n            {'type': 'eq', 'fun': lambda x: x[-1] - 1})\n\n    try:\n        result = minimize(lambda p: get_action(p, dt), initial_path, \n                         constraints=cons, method='SLSQP', \n                         options={'maxiter': 1000, 'ftol': 1e-6})\n        if result.success:\n            return result.x\n    except:\n        pass\n\n    # If optimization fails, return a simple S-shaped curve\n    t_norm = np.linspace(0, 1, N_points)\n    return np.tanh(4 * (t_norm - 0.5))\n\n# 1. Langevin simulator\ndef langevin_trajectory(x0, T, dt):\n    \"\"\"Generate a Langevin trajectory\"\"\"\n    n_steps = int(T / dt)\n    t = np.linspace(0, T, n_steps + 1)\n    x = np.zeros(n_steps + 1)\n    x[0] = x0\n\n    # Pre-generate all random numbers\n    noise = np.random.normal(0, 1, n_steps)\n\n    for i in range(n_steps):\n        A = drift(x[i])\n        stochastic_term = np.sqrt(2 * D * dt) * noise[i]\n        x[i+1] = x[i] + A * dt + stochastic_term\n\n    return t, x\n\n# 2. Generate large number of trajectories\nnum_trajectories = 2000  # Increase total trajectories to get sufficient transition samples\ntrajectories = []\ntransition_paths = []\nprint(f\"Simulating {num_trajectories} trajectories...\")\nfor i in range(num_trajectories):\n    t, x = langevin_trajectory(x0=-1.0, T=T_total, dt=dt)\n    trajectories.append(x)\n    # Record successful transition paths (increase threshold for stricter definition of transition)\n    if x[-1] &gt; 0.3:  # Increase threshold to ensure truly reaching right potential well\n        transition_paths.append(x)\nprint(f\"Found {len(transition_paths)} transition paths.\")\nprint(f\"Transition rate: {len(transition_paths)/num_trajectories*100:.1f}%\")\n\ntrajectories = np.array(trajectories)\ntransition_paths = np.array(transition_paths)\n\n# 3. Plotting\nplt.figure(figsize=(12, 8))\n\n# Plot potential background\nx_plot = np.linspace(-2, 2, 200)\nU_plot = potential(x_plot)\nplt.plot(x_plot, U_plot, 'k-', alpha=0.3, label='Potential $U(x)$')\n\n# First plot transition trajectories (at bottom layer)\nif len(transition_paths) &gt; 0:\n    # Only plot some transition trajectories to avoid excessive density\n    num_to_plot = min(len(transition_paths), 25)  # Display at most 25 green trajectories\n    for i in range(num_to_plot):\n        plt.plot(transition_paths[i, :], potential(transition_paths[i, :]), color='green', alpha=0.5, linewidth=1)\n\n# Then plot sample trajectories (at upper layer, increase transparency)\nfor i in range(min(150, num_trajectories)):  # Display more gray trajectories but with higher transparency\n    plt.plot(trajectories[i, :], potential(trajectories[i, :]), color='gray', alpha=0.08, linewidth=0.8)\n\n# Finally plot important paths (top layer)\nif len(transition_paths) &gt; 0:\n    # Plot average transition path\n    avg_transition_path = np.mean(transition_paths, axis=0)\n    plt.plot(avg_transition_path, potential(avg_transition_path), 'g-', linewidth=3, label='Average Transition Path')\n\n# Overlay theoretical instanton path\nprint(\"Computing OM instanton path...\")\npath_om = get_simple_om_instanton()\nplt.plot(path_om, potential(path_om), 'b--', linewidth=3, label='OM Instanton (Theory)')\n\n\nplt.title('Langevin Trajectories and the Most Probable Path')\nplt.xlabel('Position $x$')\nplt.ylabel('Potential Energy $U(x)$')\nplt.ylim(-0.2, 2.5)\n# Create a custom legend\nfrom matplotlib.lines import Line2D\nlegend_elements = [Line2D([0], [0], color='k', alpha=0.3, lw=2, label='Potential U(x)'),\n                   Line2D([0], [0], color='gray', alpha=0.4, lw=2, label='Sample Trajectories'),\n                   Line2D([0], [0], color='green', alpha=0.6, lw=2, label='Transition Trajectories'),\n                   Line2D([0], [0], color='b', linestyle='--', lw=3, label='OM Instanton (Theory)')]\nplt.legend(handles=legend_elements)\nplt.show()\n\n# Plot evolution of probability distribution over time\nfig, axes = plt.subplots(1, 4, figsize=(24, 5), sharey=True)\n# Adjust time points, covering longer time range to observe complete equilibrium process\ntime_points = [int(0.01 * N_points), int(0.1 * N_points), int(0.3 * N_points), N_points - 1]\n\nfor i, t_idx in enumerate(time_points):\n    ax = axes[i]\n    if i &lt; 3:\n        time_label = f't = {time[t_idx]:.1f}'\n    else:\n        time_label = f't = {T_total:.1f} (Final Equilibrium)'\n\n    # Plot histogram of particle positions\n    ax.hist(trajectories[:, t_idx], bins=35, density=True, alpha=0.7, \n            color='skyblue', edgecolor='black', linewidth=0.5, label='Simulation')\n\n    # Plot theoretical equilibrium distribution (Boltzmann distribution)\n    x_theory = np.linspace(-2, 2, 200)\n    boltzmann_dist = np.exp(-potential(x_theory) / D)\n    boltzmann_dist /= np.trapz(boltzmann_dist, x_theory)\n    ax.plot(x_theory, boltzmann_dist, 'r-', linewidth=2, label='Boltzmann Distribution')\n\n    ax.set_title(time_label, fontsize=12, fontweight='bold')\n    ax.set_xlabel('Position $x$')\n    if i == 0:\n        ax.set_ylabel('Probability Density')\n    ax.legend()\n    ax.grid(True, alpha=0.3)\n    ax.set_xlim(-2, 2)\n\n    # Add text showing percentage of total time\n    if i &lt; 3:\n        percentage = time[t_idx] / T_total * 100\n        ax.text(0.02, 0.98, f'{percentage:.1f}% of total time', \n                transform=ax.transAxes, verticalalignment='top', \n                bbox=dict(boxstyle='round', facecolor='wheat', alpha=0.5))\n\nplt.suptitle('Evolution of Probability Distribution Towards Equilibrium (Extended Time)', \n             fontsize=16, fontweight='bold')\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code></pre> <p></p> <ol> <li>\u8f68\u8ff9\u4e91\u4e0e\u77ac\u5b50\uff1a\u5927\u91cf\u7684\u7070\u8272\u8f68\u8ff9\u5728\u521d\u59cb\u7684\u52bf\u9631\uff08\\(x=-1\\)\uff09\u9644\u8fd1\u6da8\u843d\uff0c\u5c11\u6570\u8f68\u8ff9\uff08\u7eff\u8272\uff09\u80fd\u591f\u83b7\u5f97\u8db3\u591f\u7684\u968f\u673a\"\u80fd\u91cf\"\u8d8a\u8fc7\u52bf\u5792\uff0c\u5230\u8fbe\u53e6\u4e00\u4e2a\u52bf\u9631\uff08\\(x=+1\\)\uff09\u3002\u8fd9\u4e9b\u6210\u529f\u7684\u8dc3\u8fc1\u8def\u5f84\u5f62\u6210\u4e86\u4e00\u4e2a\u6a21\u7cca\u7684\"\u7ba1\u9053\"\u3002\u5f53\u6211\u4eec\u628a\u7406\u8bba\u8ba1\u7b97\u51fa\u7684OM\u77ac\u5b50\uff08\u84dd\u8272\u865a\u7ebf\uff09\u53e0\u52a0\u5728\u4e0a\u9762\u65f6\uff0c\u4f1a\u53d1\u73b0\u5b83\u51e0\u4e4e\u5b8c\u7f8e\u5730\u7a7f\u8fc7\u4e86\u8fd9\u4e2a\"\u7ba1\u9053\"\u7684\u4e2d\u5fc3\u3002\u8fd9\u76f4\u89c2\u5730\u8bc1\u660e\u4e86\u77ac\u5b50\u786e\u5b9e\u662f\u7a00\u6709\u4e8b\u4ef6\u7684\u6700\u6982\u7136\u8def\u5f84\u3002</li> </ol> <p> 2. \u6982\u7387\u5206\u5e03\u7684\u6f14\u5316\uff1a\u7b2c\u4e8c\u7ec4\u56fe\u5c55\u793a\u4e86\u4ece\u8f68\u8ff9\u89c6\u89d2\u5230\u7cfb\u7efc\u89c6\u89d2\u7684\u8054\u7cfb\u3002\u5728\u521d\u59cb\u65f6\u523b\uff0c\u6240\u6709\u7c92\u5b50\u90fd\u96c6\u4e2d\u5728\\(x=-1\\)\u5904\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8fd9\u4e2a\u5c16\u9510\u7684\u5206\u5e03\u9010\u6e10\u5c55\u5bbd\u5e76\u5411\u53e6\u4e00\u4e2a\u52bf\u9631\u6e17\u900f\u3002\u6700\u7ec8\uff0c\u5728\u8db3\u591f\u957f\u7684\u65f6\u95f4\u540e\uff0c\u7cfb\u7edf\u9010\u6e10\u8fbe\u5230\u5e73\u8861\uff0c\u7c92\u5b50\u4f4d\u7f6e\u7684\u5206\u5e03\uff08\u76f4\u65b9\u56fe\uff09\u4e0e\u7406\u8bba\u4e0a\u7684\u73bb\u5c14\u5179\u66fc\u5206\u5e03 \\(P(x) \\propto e^{-U(x)/D}\\) \u543b\u5408\u3002\u8fd9\u8868\u660e\uff0c\u5c3d\u7ba1\u8def\u5f84\u79ef\u5206\u548c\u6717\u4e4b\u4e07\u65b9\u7a0b\u5173\u6ce8\u7684\u662f\u5355\u6761\u8f68\u8ff9\uff0c\u4f46\u5b83\u4eec\u6240\u63cf\u8ff0\u7684\u52a8\u529b\u5b66\u8fc7\u7a0b\u6700\u7ec8\u80fd\u591f\u6b63\u786e\u5730\u518d\u73b0\u7531\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u6240\u63cf\u8ff0</p>"},{"location":"zh/notes/19.%20%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E8%BF%B0/#_2","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u6211\u4eec\u63a2\u7d22\u4e86\u63cf\u8ff0\u968f\u673a\u52a8\u529b\u5b66\u7684\u7b2c\u4e09\u6761\u9053\u8def\u2014\u2014\u8def\u5f84\u79ef\u5206\u8868\u8ff0\u3002\u901a\u8fc7\u5c06\u968f\u673a\u8fc7\u7a0b\u89c6\u4e3a\u6240\u6709\u53ef\u80fd\u8def\u5f84\u7684\u52a0\u6743\u603b\u548c\uff0c\u6211\u4eec\u83b7\u5f97\u4e86\u4e00\u4e2a\u5168\u5c40\u7684\u3001\u529f\u80fd\u5f3a\u5927\u7684\u7406\u8bba\u6846\u67b6\u3002</p> <ul> <li> <p>\u6211\u4eec\u4ece\u9ad8\u65af\u767d\u566a\u58f0\u7684\u7edf\u8ba1\u7279\u6027\u51fa\u53d1\uff0c\u901a\u8fc7\"\u79bb\u6563\u5316-\u53d6\u8fde\u7eed\u6781\u9650\"\u7684\u65b9\u6cd5\uff0c\u6210\u529f\u5730\u4e3a\u566a\u58f0\u672c\u8eab\u548c\u53d7\u5176\u9a71\u52a8\u7684\u7c92\u5b50\u7684\u8fd0\u52a8\u8f68\u8ff9\u6784\u5efa\u4e86\u6982\u7387\u6cdb\u51fd\u3002</p> </li> <li> <p>\u6211\u4eec\u63a8\u5bfc\u51fa\u4e86\u6838\u5fc3\u7684\u7269\u7406\u91cf\u2014\u2014\u7fc1\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u4f5c\u7528\u91cf\u3002\u901a\u8fc7\u89e3\u6784\u5176\u7ec4\u6210\uff0c\u6211\u4eec\u7406\u89e3\u4e86\u5b83\u4e0d\u4ec5\u5305\u542b\u4e86\u7c92\u5b50\u504f\u79bb\u786e\u5b9a\u6027\u8f68\u8ff9\u7684\"\u4ee3\u4ef7\"\uff08FW\u9879\uff09\uff0c\u8fd8\u7cbe\u5999\u5730\u878d\u5165\u4e86\u52bf\u80fd\u666f\u89c2\u66f2\u7387\u5bf9\u6da8\u843d\u884c\u4e3a\u7684\u5f71\u54cd\uff08\u96c5\u53ef\u6bd4\u9879\uff09\u3002</p> </li> <li> <p>\u81f3\u5173\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u5c06\u8fd9\u4e00\u7406\u8bba\u6846\u67b6\u4e0e\u524d\u6cbf\u7684\u7269\u7406\u5b9e\u9a8c\u7d27\u5bc6\u8054\u7cfb\u8d77\u6765\u3002Gladrow\u7b49\u4eba\u7684\u5de5\u4f5c\u4e0d\u4ec5\u901a\u8fc7\"\u9017\u7559\u6982\u7387\"\u5de7\u5999\u5730\u89e3\u51b3\u4e86\u6d4b\u91cf\u8def\u5f84\u6982\u7387\u7684\u96be\u9898\uff0c\u66f4\u4ee5\u65e0\u53ef\u8fa9\u9a73\u7684\u6570\u636e\u8bc1\u5b9e\u4e86\u7fc1\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u4f5c\u7528\u91cf\u5728\u6709\u9650\u6e29\u5ea6\u4e0b\u7684\u6b63\u786e\u6027\uff0c\u4e3a\u7406\u8bba\u7684\u7269\u7406\u771f\u5b9e\u6027\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u652f\u6491\u3002</p> </li> <li> <p>\u6700\u540e\uff0c\u6211\u4eec\u7b80\u8981\u4ecb\u7ecd\u4e86MSRJD\u54cd\u5e94\u573a\u8868\u8ff0\uff0c\u5b83\u4f5c\u4e3a\u4e00\u79cd\u5148\u8fdb\u7684\u8ba1\u7b97\u5de5\u5177\uff0c\u4e3a\u4f7f\u7528\u7edf\u8ba1\u573a\u8bba\u7684\u5f3a\u5927\u6280\u672f\uff08\u5982\u5fae\u6270\u5c55\u5f00\u548c\u91cd\u6574\u5316\u7fa4\uff09\u6765\u5206\u6790\u590d\u6742\u7684\u975e\u5e73\u8861\u7cfb\u7edf\u6253\u5f00\u4e86\u5927\u95e8\u3002</p> </li> </ul> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u8def\u5f84\u79ef\u5206\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u4e00\u79cd\u6570\u5b66\u4e0a\u7b49\u4ef7\u4e8e\u6717\u4e4b\u4e07\u548c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u7684\u63cf\u8ff0\uff0c\u66f4\u5e26\u6765\u4e86\u4e00\u79cd\u5168\u65b0\u7684\u7269\u7406\u76f4\u89c9\u3002\u5b83\u8ba9\u6211\u4eec\u80fd\u591f\u601d\u8003\u548c\u8ba1\u7b97\u5173\u4e8e\"\u6574\u4e2a\u5386\u53f2\"\u7684\u95ee\u9898\uff0c\u4f8b\u5982\u7a00\u6709\u4e8b\u4ef6\u7684\u6700\u6982\u7136\u8def\u5f84\uff0c\u4ece\u800c\u6df1\u523b\u5730\u63ed\u793a\u4e86\u6da8\u843d\u4e16\u754c\u4e2d\u9690\u85cf\u7684\u79e9\u5e8f\u4e0e\u89c4\u5f8b\u3002</p>"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/","title":"\u5f15\u8a00:\u4ece\u968f\u673a\u6b65\u5230\u7269\u7406\u5b9a\u5f8b","text":"<p>\u968f\u673a\u8fc7\u7a0b(stochastic process)\u662f\u63cf\u8ff0\u90a3\u4e9b\u968f\u65f6\u95f4\u4ee5\u6982\u7387\u65b9\u5f0f\u6f14\u5316\u7684\u7cfb\u7edf\u7684\u6570\u5b66\u6846\u67b6\u3002\u5728\u4f17\u591a\u968f\u673a\u8fc7\u7a0b\u4e2d,\u968f\u673a\u6e38\u8d70(random walk)\u65e0\u7591\u662f\u6700\u5178\u578b\u3001\u6700\u57fa\u7840\u7684\u6a21\u578b\u3002\u5b83\u7684\u5e94\u7528\u65e0\u5904\u4e0d\u5728,\u4ece\u7ec6\u80de\u5185\u5206\u5b50\u7684\u6269\u6563,\u5230\u91d1\u878d\u5e02\u573a\u4e2d\u4ef7\u683c\u7684\u6ce2\u52a8,\u5176\u57fa\u672c\u601d\u60f3\u90fd\u626e\u6f14\u7740\u6838\u5fc3\u89d2\u8272\u3002\u672c\u7b14\u8bb0\u65e8\u5728\u6839\u636eErwin Frey\u6559\u6388\u7684\u8bb2\u5ea7\u5185\u5bb9,\u7cfb\u7edf\u6027\u5730\u68b3\u7406\u548c\u9610\u91ca\u4e00\u7ef4\u7b80\u5355\u968f\u673a\u6e38\u8d70\u6a21\u578b\u3002</p>"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/#_2","title":"\u5b9a\u4e49\u968f\u673a\u6e38\u8d70","text":"<p>\u6839\u636eFrey\u6559\u6388\u5728\u8bb2\u5ea7\u4f0a\u59cb\u7684\u677f\u4e66,\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u4e00\u7ef4\u968f\u673a\u6e38\u8d70\u7684\u57fa\u672c\u6a21\u578b\u3002</p> <p></p> <p>\u6a21\u578b\u57fa\u672c\u8981\u7d20:\u60f3\u8c61\u4e00\u4e2a\u7c92\u5b50(\u6216\u79f0\u4e3a\"\u6e38\u8d70\u8005\")\u5728\u4e00\u7ef4\u7684\u76f4\u7ebf\u4e0a\u8fd0\u52a8\u3002\u5b83\u7684\u8fd0\u52a8\u4e0d\u662f\u8fde\u7eed\u7684,\u800c\u662f\u5728\u79bb\u6563\u7684\u65f6\u95f4\u70b9 \\(t_k=k\\tau\\) \u4e0a\u53d1\u751f\u8df3\u8dc3,\u5176\u4e2d \\(k=1,2,3,\\ldots\\) \u662f\u6b65\u6570,\\(\\tau\\) \u662f\u6bcf\u6b21\u8df3\u8dc3\u7684\u65f6\u95f4\u95f4\u9694\u3002\u6211\u4eec\u5728\u4efb\u610f\u65f6\u523b \\(t_k\\) \u89c2\u5bdf\u5230\u7684\u7c92\u5b50\u4f4d\u7f6e,\u8bb0\u4e3a \\(X_k\\)\u3002</p> <p>\u6838\u5fc3\u968f\u673a\u53d8\u91cf:\u6b65\u957f \\(\\xi_k\\):\u6bcf\u6b21\u8df3\u8dc3\u7684\u4f4d\u79fb,\u5373\u6b65\u957f \\(\\xi_k\\),\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u3002\u8fd9\u4e2a\u6a21\u578b\u7684\u5173\u952e\u5047\u8bbe\u662f,\u6240\u6709\u7684\u6b65\u957f \\(\\xi_k\\) \u90fd\u662f\u72ec\u7acb\u540c\u5206\u5e03(Independent and Identically Distributed, IID)\u7684\u968f\u673a\u53d8\u91cf\u3002\"\u540c\u5206\u5e03\"\u610f\u5473\u7740\u6bcf\u6b21\u8df3\u8dc3\u90fd\u9075\u5faa\u76f8\u540c\u7684\u6982\u7387\u89c4\u5219;\"\u72ec\u7acb\"\u610f\u5473\u7740\u4efb\u4f55\u4e00\u6b65\u7684\u7ed3\u679c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u4efb\u4f55\u4e00\u6b65\u3002</p> <p>\u79bb\u6563\u6b65\u957f\u4e0e\u8fde\u7eed\u6b65\u957f:\u6b65\u957f\u7684\u5206\u5e03\u53ef\u4ee5\u662f\u79bb\u6563\u7684,\u4e5f\u53ef\u4ee5\u662f\u8fde\u7eed\u7684\u3002</p> <p>\u79bb\u6563\u60c5\u51b5:\u6b65\u957f\u53ea\u80fd\u53d6\u6709\u9650\u4e2a\u7279\u5b9a\u503c\u3002\u6700\u7b80\u5355\u7684\u60c5\u51b5\u662f,\u7c92\u5b50\u6bcf\u4e00\u6b65\u53ea\u80fd\u5411\u53f3\u79fb\u52a8\u8ddd\u79bb \\(a\\) \u6216\u5411\u5de6\u79fb\u52a8\u8ddd\u79bb \\(a\\)\u3002\u5373 \\(\\xi_k \\in \\{+a, -a\\}\\)\u3002\u5411\u53f3\u7684\u6982\u7387\u4e3a \\(p\\),\u5411\u5de6\u7684\u6982\u7387\u4e3a \\(q\\),\u4e14 \\(p+q=1\\)\u3002\u8fd9\u4fbf\u662f\u672c\u8bb2\u5ea7\u7684\u6838\u5fc3\u2014\u2014\u7b80\u5355\u968f\u673a\u6e38\u8d70(Simple Random Walk)\u3002</p> <p>\u8fde\u7eed\u60c5\u51b5:\u6b65\u957f\u53ef\u4ee5\u53d6\u4efb\u610f\u5b9e\u6570\u503c,\u5176\u6982\u7387\u7531\u4e00\u4e2a\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \\(W(\\xi)\\) \u63cf\u8ff0,\u5373\u6b65\u957f\u843d\u5728 \\([\\xi, \\xi+d\\xi]\\) \u533a\u95f4\u5185\u7684\u6982\u7387\u4e3a \\(W(\\xi)d\\xi\\).</p>"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/#_3","title":"\u6570\u5b66\u8868\u8ff0","text":"<p>\u8be5\u6a21\u578b\u7684\u52a8\u6001\u6f14\u5316\u53ef\u4ee5\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u9012\u63a8\u5173\u7cfb\u6765\u63cf\u8ff0:</p> <p>$$ X_k = X_{k-1} + \\xi_k $$ \u8fd9\u4e2a\u516c\u5f0f\u8868\u8fbe\u4e86\u6a21\u578b\"\u5c40\u90e8\"\u7684\u8fd0\u52a8\u89c4\u5219:\u65b0\u7684\u4f4d\u7f6e\u7b49\u4e8e\u65e7\u7684\u4f4d\u7f6e\u52a0\u4e0a\u4e00\u4e2a\u968f\u673a\u7684\u6b65\u957f\u3002</p> <p>\u5982\u679c\u6211\u4eec\u5047\u8bbe\u7c92\u5b50\u4ece\u539f\u70b9\u51fa\u53d1,\u5373 \\(X_0=0\\),\u90a3\u4e48\u901a\u8fc7\u8fed\u4ee3\u5c55\u5f00\u4e0a\u8ff0\u9012\u63a8\u5173\u7cfb,\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5728\u7b2c \\(k\\) \u6b65\u65f6\u7c92\u5b50\u4f4d\u7f6e\u7684\u663e\u5f0f\u89e3:</p> <p>$$ X_k = \\sum_{j=1}^{k} \\xi_j $$ \u8fd9\u4e2a\u516c\u5f0f\u63ed\u793a\u4e86\u8be5\u6a21\u578b\u6700\u6df1\u523b\u7684\u6570\u5b66\u7ed3\u6784:\u6211\u4eec\u6240\u89c2\u5bdf\u7684\u5b8f\u89c2\u7269\u7406\u91cf(\u4f4d\u7f6e \\(X_k\\)),\u672c\u8d28\u4e0a\u662f\u5927\u91cf\u5fae\u89c2\u3001\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf(\u6b65\u957f \\(\\xi_j\\))\u7684\u603b\u548c\u3002\u6b63\u662f\u8fd9\u4e2a\"\u52a0\u548c\"\u7684\u7ed3\u6784,\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u8fd0\u7528\u5f3a\u5927\u7684\u7edf\u8ba1\u5b66\u5de5\u5177,\u5982\u5927\u6570\u5b9a\u5f8b\u548c\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406,\u6765\u5206\u6790\u8fd9\u4e2a\u770b\u4f3c\u5b8c\u5168\u968f\u673a\u7684\u8fc7\u7a0b,\u5e76\u4ece\u4e2d\u53d1\u73b0\u786e\u5b9a\u6027\u7684\u3001\u53ef\u9884\u6d4b\u7684\u5b8f\u89c2\u89c4\u5f8b\u3002IID\u7684\u5047\u8bbe\u662f\u8fd9\u4e00\u5207\u5206\u6790\u7684\u57fa\u77f3,\u5b83\u4fdd\u8bc1\u4e86\u8fc7\u7a0b\u7684\u7edf\u8ba1\u6027\u8d28\u4e0d\u968f\u65f6\u95f4\u6539\u53d8,\u4ece\u800c\u5141\u8bb8\u6211\u4eec\u63a8\u5bfc\u51fa\u5982\u6f02\u79fb\u901f\u5ea6\u548c\u6269\u6563\u7cfb\u6570\u8fd9\u7c7b\u4e0d\u4f9d\u8d56\u4e8e\u65f6\u95f4\u7684\u7269\u7406\u5e38\u6570\u3002</p> <p>\u4e3a\u4e86\u6e05\u6670\u8d77\u89c1,\u6211\u4eec\u5c06\u6a21\u578b\u4e2d\u7684\u5173\u952e\u53d8\u91cf\u548c\u53c2\u6570\u603b\u7ed3\u5982\u4e0b\u3002</p> <p>\u88681:\u7b80\u5355\u968f\u673a\u6e38\u8d70\u6a21\u578b\u7684\u5173\u952e\u53d8\u91cf\u4e0e\u53c2\u6570</p> \u7b26\u53f7 \u63cf\u8ff0 \u5b9a\u4e49\u516c\u5f0f/\u503c \\(k\\) \u6b65\u6570 \u6574\u6570,\\(1, 2, 3, \\ldots\\) \\(\\tau\\) \u65f6\u95f4\u6b65\u957f \u6bcf\u6b21\u8df3\u8dc3\u7684\u6301\u7eed\u65f6\u95f4 \\(t_k\\) \u7269\u7406\u65f6\u95f4 \\(k\\tau\\) \\(a\\) \u6b65\u957f\u5927\u5c0f \u5355\u6b65\u79fb\u52a8\u7684\u56fa\u5b9a\u8ddd\u79bb \\(p\\) \u5411\u53f3\u8df3\u8dc3\u7684\u6982\u7387 \\(P(\\xi_k = +a)\\) \\(q\\) \u5411\u5de6\u8df3\u8dc3\u7684\u6982\u7387 \\(P(\\xi_k = -a), q = 1 - p\\) \\(\\xi_k\\) \u7b2c \\(k\\) \u6b65\u7684\u6b65\u957f \u968f\u673a\u53d8\u91cf,\u53d6\u503c\u4e3a \\(+a\\) \u6216 \\(-a\\) \\(X_k\\) \u7b2c \\(k\\) \u6b65\u540e\u7684\u4f4d\u7f6e \\(\\sum_{j=1}^{k} \\xi_j\\) (\u5047\u8bbe \\(X_0 = 0\\)) \\(v\\) \u6f02\u79fb\u901f\u5ea6 \\(\\frac{a(p-q)}{\\tau}\\) \\(D\\) \u6269\u6563\u7cfb\u6570 \\(\\frac{2a^2pq}{\\tau}\\)"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/#1","title":"1. \u7edf\u8ba1\u5e73\u5747\u4e0e\u7269\u7406\u5b9a\u5f8b\u7684\u6d8c\u73b0","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b,\u6211\u4eec\u65e0\u6cd5\u51c6\u786e\u9884\u6d4b\u5355\u6b21\u5b9e\u9a8c\u4e2d\u6e38\u8d70\u8005\u7684\u786e\u5207\u4f4d\u7f6e\u3002\u7136\u800c,\u901a\u8fc7\u5206\u6790\u5927\u91cf\u6b64\u7c7b\u8fc7\u7a0b\u7684\u7edf\u8ba1\u5e73\u5747\u884c\u4e3a,\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6\u51fa\u5177\u6709\u786e\u5b9a\u6027\u7684\u7269\u7406\u4fe1\u606f\u3002\u6211\u4eec\u4e0d\u518d\u95ee\"\u7c92\u5b50\u5728\u54ea\u91cc?\",\u800c\u662f\u95ee\"\u7c92\u5b50\u5e73\u5747\u5728\u54ea\u91cc?\"\u4ee5\u53ca\"\u7c92\u5b50\u7684\u53ef\u80fd\u4f4d\u7f6e\u6709\u591a\u5206\u6563?\"\u3002\u8fd9\u4e9b\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u968f\u673a\u53d8\u91cf\u7684\u77e9(\u5982\u5747\u503c\u548c\u65b9\u5dee)\u6765\u56de\u7b54\u3002</p>"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/#11","title":"1.1 \u5e73\u5747\u4f4d\u7f6e:\u63ed\u793a\u6f02\u79fb\u73b0\u8c61","text":"<p>\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u7ecf\u8fc7 \\(k\\) \u6b65\u540e,\u7c92\u5b50\u4f4d\u7f6e\u7684\u671f\u671b\u503c(\u6216\u5747\u503c),\u8bb0\u4e3a \\(\\langle X_k \\rangle\\)\u3002</p> <ul> <li>\u63a8\u5bfc\u8fc7\u7a0b:</li> </ul> <p>\u5229\u7528\u671f\u671b\u7684\u7ebf\u6027\u6027\u8d28,\u603b\u4f4d\u79fb\u7684\u671f\u671b\u7b49\u4e8e\u6bcf\u4e00\u6b65\u4f4d\u79fb\u671f\u671b\u7684\u603b\u548c:</p> \\[ \\langle X_k \\rangle = \\left\\langle \\sum_{j=1}^{k} \\xi_j \\right\\rangle = \\sum_{j=1}^{k} \\langle \\xi_j \\rangle \\] <p>\u8ba1\u7b97\u5355\u6b65\u4f4d\u79fb\u7684\u671f\u671b \\(\\langle \\xi_j \\rangle\\)\u3002\u6839\u636e\u671f\u671b\u7684\u5b9a\u4e49,\u5b83\u7b49\u4e8e\u6240\u6709\u53ef\u80fd\u53d6\u503c\u4e0e\u5176\u5bf9\u5e94\u6982\u7387\u7684\u4e58\u79ef\u4e4b\u548c:</p> \\[ \\langle \\xi_j \\rangle = (+a) \\cdot P(\\xi_j = a) + (-a) \\cdot P(\\xi_j = -a) = ap - aq = a(p-q) \\] <p>\u8fd9\u4e2a\u503c\u4ee3\u8868\u4e86\u6bcf\u4e00\u6b65\u7684\u5e73\u5747\u4f4d\u79fb\u3002</p> <p>\u7531\u4e8e\u6240\u6709\u6b65\u957f\u662f\u540c\u5206\u5e03\u7684,\u6bcf\u4e00\u6b65\u7684\u671f\u671b\u90fd\u76f8\u540c\u3002\u56e0\u6b64,\u603b\u4f4d\u79fb\u7684\u671f\u671b\u4e3a:</p> \\[ \\langle X_k \\rangle = \\sum_{j=1}^{k} a(p-q) = k \\cdot a(p-q) \\] <ul> <li>\u7269\u7406\u8be0\u91ca:</li> </ul> <p>\u8fd9\u4e2a\u6570\u5b66\u7ed3\u679c\u544a\u8bc9\u6211\u4eec,\u7c92\u5b50\u7684\u5e73\u5747\u4f4d\u7f6e\u4e0e\u6b65\u6570 \\(k\\) \u6210\u6b63\u6bd4\u3002\u5f15\u5165\u7269\u7406\u65f6\u95f4 \\(t_k = k\\tau\\),\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5e73\u5747\u901f\u5ea6,\u5373\u6f02\u79fb\u901f\u5ea6(drift velocity) \\(v\\):</p> \\[ v = \\frac{\\langle X_k \\rangle}{t_k} = \\frac{k a(p-q)}{k\\tau} = \\frac{a(p-q)}{\\tau} \\] <p>\u8fd9\u610f\u5473\u7740,\u5c3d\u7ba1\u5355\u4e2a\u7c92\u5b50\u7684\u8fd0\u52a8\u8f68\u8ff9\u662f\u66f2\u6298\u548c\u4e0d\u53ef\u9884\u6d4b\u7684,\u4f46\u4ece\u6574\u4f53\u4e0a\u770b,\u7c92\u5b50\u7fa4\u4f53\u4eff\u4f5b\u4ee5\u4e00\u4e2a\u6052\u5b9a\u7684\u901f\u5ea6 \\(v\\) \u5728\u8fdb\u884c\u5b9a\u5411\u8fd0\u52a8\u3002\u8fd9\u79cd\u7531\u6982\u7387\u4e0d\u5bf9\u79f0\u6027\u5f15\u8d77\u7684\u5b8f\u89c2\u5b9a\u5411\u8fd0\u52a8,\u5c31\u662f\u6f02\u79fb(drift)\u3002</p> <ul> <li>\u5bf9\u79f0\u4e0e\u975e\u5bf9\u79f0\u6e38\u8d70:</li> </ul> <p>\u5e73\u5747\u4f4d\u7f6e\u7684\u8868\u8fbe\u5f0f\u5b8c\u5168\u7531 \\((p-q)\\) \u8fd9\u4e00\u9879\u7684\u6027\u8d28\u51b3\u5b9a\u3002\u8fd9\u63ed\u793a\u4e86\u6a21\u578b\u884c\u4e3a\u7684\u4e24\u79cd\u57fa\u672c\u6a21\u5f0f:</p> <ol> <li> <p>\u5bf9\u79f0\u968f\u673a\u6e38\u8d70 \\((p=q=1/2)\\):\u6b64\u65f6 \\(p-q=0\\),\u56e0\u6b64 \\(\\langle X_k \\rangle = 0\\)\u3002\u7c92\u5b50\u5411\u5de6\u548c\u5411\u53f3\u7684\u6982\u7387\u76f8\u7b49,\u6ca1\u6709\u4efb\u4f55\u65b9\u5411\u4e0a\u7684\u504f\u597d\u3002\u5e73\u5747\u800c\u8a00,\u7c92\u5b50\u59cb\u7ec8\u505c\u7559\u5728\u539f\u70b9\u9644\u8fd1\u3002\u8fd9\u662f\u4e00\u79cd\u7eaf\u6269\u6563(pure diffusion)\u8fc7\u7a0b\u3002</p> </li> <li> <p>\u6709\u504f/\u975e\u5bf9\u79f0\u968f\u673a\u6e38\u8d70 \\((p \\neq q)\\):\u6b64\u65f6 \\(p-q \\neq 0\\),\u5bfc\u81f4\u6f02\u79fb\u901f\u5ea6\u4e0d\u4e3a\u96f6\u3002\u7c92\u5b50\u5728\u5e73\u5747\u610f\u4e49\u4e0a\u4f1a\u671d\u7740\u6982\u7387\u8f83\u5927\u7684\u65b9\u5411\u79fb\u52a8\u3002PPT\u5e7b\u706f\u7247(Image 4)\u4e2d,\u5e73\u5747\u4f4d\u7f6e \\(\\langle x \\rangle\\) \u968f\u65f6\u95f4\u7ebf\u6027\u589e\u52a0\u7684\u865a\u7ebf,\u6e05\u6670\u5730\u63cf\u7ed8\u4e86\u4e00\u4e2a \\(p&gt;q\\) \u7684\u6709\u504f\u968f\u673a\u6e38\u8d70\u3002</p> </li> </ol> <p>\u56e0\u6b64,\u53c2\u6570 \\(p\\) \u7684\u53d6\u503c\u5c06\u62bd\u8c61\u7684\u6570\u5b66\u6a21\u578b\u4e0e\u5177\u4f53\u7684\u7269\u7406\u60c5\u666f\u8054\u7cfb\u8d77\u6765\u3002\u4e00\u4e2a\u5728\u9759\u6b62\u6eb6\u5242\u4e2d\u6269\u6563\u7684\u67d3\u6599\u5206\u5b50\u53ef\u4ee5\u7528\u5bf9\u79f0\u6a21\u578b\u63cf\u8ff0,\u800c\u4e00\u4e2a\u5728\u5916\u7535\u573a\u4e2d\u8fd0\u52a8\u7684\u5e26\u7535\u7c92\u5b50(\u7535\u6cf3)\u6216\u5728\u6d41\u52a8\u6db2\u4f53\u4e2d\u60ac\u6d6e\u7684\u9897\u7c92,\u5219\u9700\u8981\u7528\u6709\u504f\u6a21\u578b\u6765\u63cf\u8ff0\u3002</p>"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/#12","title":"1.2 \u65b9\u5dee:\u6269\u6563\u73b0\u8c61\u7684\u6570\u5b66\u6307\u7eb9","text":"<p>\u63a5\u4e0b\u6765,\u6211\u4eec\u5206\u6790\u7c92\u5b50\u4f4d\u7f6e\u7684\u65b9\u5dee \\(\\mathrm{Var}[X_k]\\),\u5b83\u8861\u91cf\u4e86\u7c92\u5b50\u4f4d\u7f6e\u5206\u5e03\u7684\u79bb\u6563\u7a0b\u5ea6\u6216\u5bbd\u5ea6\u3002</p> <ul> <li>\u63a8\u5bfc\u8fc7\u7a0b:</li> </ul> <p>\u6839\u636e\u65b9\u5dee\u7684\u5b9a\u4e49:\\(\\mathrm{Var}[X_k] = \\langle X_k^2 \\rangle - \\langle X_k \\rangle^2\\)\u3002\u6211\u4eec\u5df2\u7ecf\u6c42\u5f97 \\(\\langle X_k \\rangle\\),\u73b0\u5728\u7684\u4efb\u52a1\u662f\u8ba1\u7b97\u4e8c\u9636\u77e9 \\(\\langle X_k^2 \\rangle\\)\u3002</p> <p>\u5c55\u5f00 \\(X_k^2\\):</p> \\[ \\langle X_k^2 \\rangle = \\left\\langle \\left( \\sum_{j=1}^{k} \\xi_j \\right)^2 \\right\\rangle = \\left\\langle \\left( \\sum_{i=1}^{k} \\xi_i \\right) \\left( \\sum_{j=1}^{k} \\xi_j \\right) \\right\\rangle = \\sum_{i=1}^{k} \\sum_{j=1}^{k} \\langle \\xi_i \\xi_j \\rangle \\] <p>\u5173\u952e\u6b65\u9aa4:\u5206\u79bb\u5bf9\u89d2\u9879\u4e0e\u975e\u5bf9\u89d2\u9879\u3002\u8fd9\u662f\u6c42\u89e3\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e2a\u6838\u5fc3\u6280\u5de7\u3002\u6211\u4eec\u5c06\u53cc\u91cd\u6c42\u548c\u62c6\u5206\u4e3a\u4e24\u90e8\u5206:</p> <ul> <li> <p>\u5bf9\u89d2\u9879 \\((i=j)\\):\\(\\sum_{j=1}^{k} \\langle \\xi_j^2 \\rangle\\)</p> </li> <li> <p>\u975e\u5bf9\u89d2\u9879 \\((i \\neq j)\\):\\(\\sum_{i \\neq j} \\langle \\xi_i \\xi_j \\rangle\\)</p> </li> </ul> <p>\u5e94\u7528IID\u6027\u8d28:</p> <p>\u5bf9\u4e8e\u975e\u5bf9\u89d2\u9879 \\((i \\neq j)\\),\u7531\u4e8e\u6b65\u957f \\(\\xi_i\\) \u548c \\(\\xi_j\\) \u662f\u76f8\u4e92\u72ec\u7acb\u7684,\u5b83\u4eec\u7684\u4e58\u79ef\u7684\u671f\u671b\u7b49\u4e8e\u5404\u81ea\u671f\u671b\u7684\u4e58\u79ef:</p> \\[ \\langle \\xi_i \\xi_j \\rangle = \\langle \\xi_i \\rangle \\langle \\xi_j \\rangle = (a(p-q))^2 \\] <p>\u5bf9\u4e8e\u5bf9\u89d2\u9879 \\((i=j)\\),\u6211\u4eec\u8ba1\u7b97\u6b65\u957f\u5e73\u65b9\u7684\u671f\u671b:</p> \\[ \\langle \\xi_j^2 \\rangle = (+a)^2 \\cdot p + (-a)^2 \\cdot q = a^2(p+q) = a^2 \\] <p>\u5408\u5e76\u8ba1\u7b97:\u603b\u5171\u6709 \\(k\\) \u4e2a\u5bf9\u89d2\u9879\u548c \\(k(k-1)\\) \u4e2a\u975e\u5bf9\u89d2\u9879\u3002\u56e0\u6b64,</p> \\[ \\langle X_k^2 \\rangle = k \\cdot a^2 + k(k-1) \\cdot (a(p-q))^2 \\] <p>\u6700\u7ec8\u8ba1\u7b97\u65b9\u5dee:\u5c06 \\(\\langle X_k^2 \\rangle\\) \u548c \\(\\langle X_k \\rangle^2 = (ka(p-q))^2\\) \u4ee3\u5165\u65b9\u5dee\u5b9a\u4e49\u5f0f:</p> \\[ \\mathrm{Var}[X_k] = (k a^2 + k(k-1)a^2(p-q)^2) - (k a(p-q))^2 \\] \\[ = k a^2 + (k^2-k)a^2(p-q)^2 - k^2 a^2(p-q)^2 \\] \\[ = k a^2 - k a^2(p-q)^2 = k a^2 (1 - (p-q)^2) \\] <p>\u5229\u7528 \\(p+q=1\\),\u6211\u4eec\u6709 \\(1-(p-q)^2 = (p+q)^2 - (p-q)^2 = 4pq\\)\u3002\u6240\u4ee5\u6700\u7ec8\u5f97\u5230:</p> \\[ \\mathrm{Var}[X_k] = 4k a^2 pq \\] <p>\u7269\u7406\u8be0\u91ca:</p> <p>\u8fd9\u4e2a\u7ed3\u679c\u6700\u91cd\u8981\u7684\u7279\u5f81\u662f,\u65b9\u5dee\u4e0e\u6b65\u6570 \\(k\\) \u6210\u6b63\u6bd4,\u56e0\u6b64\u4e5f\u4e0e\u7269\u7406\u65f6\u95f4 \\(t_k\\) \u6210\u6b63\u6bd4\u3002\u8fd9\u79cd\u65b9\u5dee\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u957f\u7684\u7279\u6027,\u6b63\u662f\u6269\u6563\u8fc7\u7a0b(diffusive process)\u7684\u6807\u5fd7\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5173\u7cfb\u5f0f \\(\\mathrm{Var}[X_k] = 2D t_k\\) \u6765\u5b9a\u4e49\u6269\u6563\u7cfb\u6570(diffusion coefficient) \\(D\\)\u3002\u901a\u8fc7\u6bd4\u8f83\u6211\u4eec\u63a8\u5bfc\u51fa\u7684\u7ed3\u679c,\u53ef\u4ee5\u5f97\u5230:</p> \\[ 2D = \\frac{4k a^2 pq}{t_k} = \\frac{4k a^2 pq}{k\\tau} = \\frac{4 a^2 pq}{\\tau} \\implies D = \\frac{2 a^2 pq}{\\tau} \\] <p>\u6269\u6563\u7cfb\u6570 \\(D\\) \u662f\u4e00\u4e2a\u8861\u91cf\u968f\u673a\u6269\u6563\u5feb\u6162\u7684\u7269\u7406\u91cf\u3002</p> <p>\"\u4e0d\u786e\u5b9a\u6027\u7684\u6f0f\u6597\"\u4e0e\u5e73\u65b9\u6839\u6807\u5ea6:</p> <p>\u65b9\u5dee\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u957f(\\(\\mathrm{Var} \\propto t\\))\u7684\u7269\u7406\u542b\u4e49\u662f,\u7c92\u5b50\u4f4d\u7f6e\u5206\u5e03\u7684\u5bbd\u5ea6,\u5373\u6807\u51c6\u5dee \\(\\sigma = \\sqrt{\\mathrm{Var}}\\),\u662f\u968f\u65f6\u95f4\u7684\u5e73\u65b9\u6839\u589e\u957f\u7684(\\(\\sigma \\propto \\sqrt{t}\\))\u3002\u8fd9\u79cd\u4e9a\u7ebf\u6027(sub-linear)\u7684\u589e\u957f\u65b9\u5f0f\u662f\u6269\u6563\u8fc7\u7a0b\u7684\u666e\u9002\u7279\u5f81,\u5b83\u4e0e\u5f39\u9053\u5f0f\u8fd0\u52a8(ballistic motion,\u4f4d\u7f6e \\(x \\propto t\\))\u6709\u7740\u672c\u8d28\u533a\u522b\u3002PPT\u4e2d\u7531 \\(\\langle x \\rangle \\pm \\sigma\\) \u6784\u6210\u7684\u9525\u5f62\u533a\u57df(\u6216\u79f0\u4e3a\"\u4e0d\u786e\u5b9a\u6027\u7684\u6f0f\u6597\")\u6b63\u662f\u8fd9\u4e00\u57fa\u672c\u6807\u5ea6\u5f8b\u7684\u7edd\u4f73\u53ef\u89c6\u5316\u5448\u73b0\u3002\\(\\sqrt{t}\\) \u6807\u5ea6\u89e3\u91ca\u4e86\u4e3a\u4f55\u6269\u6563\u5728\u5fae\u89c2\u5c3a\u5ea6(\u5982\u7ec6\u80de\u5185)\u662f\u9ad8\u6548\u7684,\u4f46\u5728\u5b8f\u89c2\u5c3a\u5ea6\u4e0a\u5374\u6781\u5176\u7f13\u6162\u3002</p> <p></p>"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/#13","title":"1.3 \u5e94\u7528\u5b9e\u4f8b:\u5927\u80a0\u6746\u83cc\u7684\u968f\u673a\u6e38\u8d70","text":"<p>\u4e3a\u4e86\u5c06\u62bd\u8c61\u7406\u8bba\u4e0e\u771f\u5b9e\u4e16\u754c\u8054\u7cfb\u8d77\u6765,Frey\u6559\u6388\u5728\u8bb2\u5ea7\u4e2d\u8fdb\u884c\u4e86\u4e00\u4e2a\u4f30\u7b97,\u8fd9\u5728\u7269\u7406\u5b66\u4e2d\u88ab\u79f0\u4e3a\"\u4fe1\u5c01\u80cc\u540e\u7684\u8ba1\u7b97\"(back-of-the-envelope calculation),\u7528\u4ee5\u68c0\u9a8c\u6a21\u578b\u7684\u5408\u7406\u6027\u3002</p> <p>\u95ee\u9898:\u4e00\u4e2a\u5206\u5b50\u8981\u901a\u8fc7\u6269\u6563\u7a7f\u8fc7\u4e00\u4e2a\u5927\u80a0\u6746\u83cc\u7ec6\u80de,\u5927\u7ea6\u9700\u8981\u591a\u957f\u65f6\u95f4?</p> <p>\u4f30\u7b97:\u6211\u4eec\u5df2\u77e5\u7ec6\u80de\u5c3a\u5bf8 \\(L \\approx 1\\,\\mu\\mathrm{m}\\),\u4ee5\u53ca\u7c7b\u4f3c\u5927\u5c0f\u5206\u5b50\u5728\u7ec6\u80de\u8d28\u4e2d\u7684\u6269\u6563\u7cfb\u6570 \\(D \\approx 10\\,\\mu\\mathrm{m}^2/\\mathrm{s}\\)\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee4\u4f4d\u7f6e\u5206\u5e03\u7684\u65b9\u5dee\u7ea6\u7b49\u4e8e\u8ddd\u79bb\u7684\u5e73\u65b9\u6765\u4f30\u7b97\u7279\u5f81\u65f6\u95f4 \\(t\\),\u5373 \\(L^2 \\approx 2Dt\\)\u3002</p> <p>\u8ba1\u7b97:</p> \\[ t \\approx \\frac{L^2}{2D} \\approx \\frac{(1\\,\\mu\\mathrm{m})^2}{2 \\cdot (10\\,\\mu\\mathrm{m}^2/\\mathrm{s})} = 0.05\\,\\mathrm{s} \\] <p>\u610f\u4e49:\u8fd9\u4e2a\u7b80\u5355\u7684\u8ba1\u7b97\u5c55\u793a\u4e86\u6269\u6563\u7cfb\u6570 \\(D\\) \u4f5c\u4e3a\u4e00\u4e2a\u5173\u952e\u7269\u7406\u53c2\u6570\u7684\u5f3a\u5927\u4e4b\u5904,\u5b83\u5c06\u5fae\u89c2\u7684\u968f\u673a\u6b65\u5c65\u4e0e\u5b8f\u89c2\u7684\u6269\u6563\u65f6\u95f4\u5c3a\u5ea6\u8054\u7cfb\u8d77\u6765,\u4f7f\u6211\u4eec\u80fd\u591f\u5bf9\u771f\u5b9e\u751f\u7269\u6216\u5316\u5b66\u7cfb\u7edf\u8fdb\u884c\u5b9a\u91cf\u9884\u6d4b\u3002</p>"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/#2","title":"2. \u5b8c\u6574\u6982\u7387\u5206\u5e03","text":"<p>\u5747\u503c\u548c\u65b9\u5dee\u63cf\u8ff0\u4e86\u5206\u5e03\u7684\u4e2d\u5fc3\u548c\u5bbd\u5ea6,\u4f46\u8981\u83b7\u5f97\u5173\u4e8e\u7c92\u5b50\u4f4d\u7f6e\u7684\u5168\u90e8\u4fe1\u606f,\u6211\u4eec\u9700\u8981\u6c42\u89e3\u5176\u5b8c\u6574\u7684\u6982\u7387\u5206\u5e03\u51fd\u6570 \\(P(X_k=x)\\)\u3002\u5b83\u56de\u7b54\u4e86\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898:\"\u7ecf\u8fc7 \\(k\\) \u6b65\u540e,\u5728\u4f4d\u7f6e \\(x\\) \u627e\u5230\u7c92\u5b50\u7684\u786e\u5207\u6982\u7387\u662f\u591a\u5c11?\"</p>"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/#21","title":"2.1 \u7ec4\u5408\u5b66\u65b9\u6cd5:\u4e8c\u9879\u5206\u5e03","text":"<p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ec4\u5408\u5b66\u7684\u65b9\u6cd5\u6765\u7cbe\u786e\u6c42\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u95ee\u9898\u8bbe\u5b9a:\u5047\u8bbe\u7c92\u5b50\u5728 \\(k\\) \u6b65\u4e2d,\u6709 \\(k_+\\) \u6b65\u5411\u53f3(\\(+a\\)),\u6709 \\(k_-\\) \u6b65\u5411\u5de6(\\(-a\\))\u3002\u90a3\u4e48\u603b\u6b65\u6570 \\(k = k_+ + k_-\\)\u3002\u6700\u7ec8\u7684\u4f4d\u7f6e\u4e3a \\(X_k = (k_+ - k_-)a\\)\u3002\u4e3a\u4e86\u65b9\u4fbf,\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u65e0\u91cf\u7eb2\u7684\u4f4d\u7f6e \\(n = k_+ - k_-\\),\u5219 \\(X_k = na\\)\u3002</p> <p>\u63a8\u5bfc\u8fc7\u7a0b:</p> <p>\u6c42\u89e3 \\(k_+\\) \u548c \\(k_-\\):\u6211\u4eec\u53ef\u4ee5\u7528\u5df2\u77e5\u7684 \\(k\\) \u548c \\(n\\) \u6765\u8868\u793a \\(k_+\\) \u548c \\(k_-\\):</p> \\[ k_+ = \\frac{k+n}{2}, k_- = \\frac{k-n}{2} \\] <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f,\u4e3a\u4e86\u4f7f \\(k_+\\) \u548c \\(k_-\\) \u4e3a\u6574\u6570,\\(k\\) \u548c \\(n\\) \u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u5947\u5076\u6027(\u540c\u4e3a\u5076\u6570\u6216\u540c\u4e3a\u5947\u6570),\u5426\u5219\u7c92\u5b50\u4e0d\u53ef\u80fd\u5230\u8fbe\u4f4d\u7f6e \\(na\\),\u5176\u6982\u7387\u4e3a\u96f6\u3002</p> <p>\u8ba1\u7b97\u5355\u6761\u8def\u5f84\u7684\u6982\u7387:\u4efb\u4f55\u4e00\u6761\u5305\u542b \\(k_+\\) \u6b21\u5411\u53f3\u548c \\(k_-\\) \u6b21\u5411\u5de6\u7684\u5177\u4f53\u8def\u5f84(\u4f8b\u5982\"\u53f3-\u53f3-\u5de6-\u53f3-...\"),\u7531\u4e8e\u6bcf\u4e00\u6b65\u90fd\u662f\u72ec\u7acb\u7684,\u5176\u53d1\u751f\u7684\u6982\u7387\u4e3a:</p> \\[ p^{k_+} q^{k_-} = p^{k_+} (1-p)^{k_-} \\] <p>\u8ba1\u7b97\u8def\u5f84\u603b\u6570:\u6240\u6709\u80fd\u591f\u5230\u8fbe\u6700\u7ec8\u4f4d\u7f6e \\(na\\) \u7684\u4e0d\u540c\u8def\u5f84\u6709\u591a\u5c11\u6761?\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u7ec4\u5408\u95ee\u9898:\u5728 \\(k\\) \u4e2a\u603b\u4f4d\u7f6e\u4e2d,\u9009\u62e9 \\(k_+\\) \u4e2a\u4f4d\u7f6e\u653e\u7f6e\"\u5411\u53f3\u7684\u6b65\",\u5176\u65b9\u6cd5\u6570\u7531\u4e8c\u9879\u5f0f\u7cfb\u6570\u7ed9\u51fa:</p> \\[ \\binom{k}{k_+} = \\frac{k!}{k_+!(k-k_+)!} = \\frac{k!}{k_+! k_-!} \\] <p>\u6700\u7ec8\u7ed3\u679c:\u5c06\u5355\u6761\u8def\u5f84\u7684\u6982\u7387\u4e0e\u8def\u5f84\u603b\u6570\u76f8\u4e58,\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u7c92\u5b50\u5728\u7b2c \\(k\\) \u6b65\u540e\u4f4d\u4e8e\u4f4d\u7f6e \\(na\\) \u7684\u603b\u6982\u7387,\u8fd9\u6b63\u662f\u4e8c\u9879\u5206\u5e03(Binomial Distribution):</p> \\[ P(X_k = na) = \\binom{k}{k_+} p^{k_+} (1-p)^{k_-} \\] <p>\u5fae\u89c2\u6001\u4e0e\u5b8f\u89c2\u6001\u7684\u8054\u7cfb: \u8fd9\u4e2a\u516c\u5f0f\u7684\u7ed3\u6784\u6df1\u523b\u5730\u4f53\u73b0\u4e86\u7edf\u8ba1\u529b\u5b66\u7684\u57fa\u672c\u601d\u60f3\u3002\u6bcf\u4e00\u4e2a\u5177\u4f53\u7684\u6b65\u4f10\u5e8f\u5217(\u5982 RRLR...)\u662f\u4e00\u4e2a\u5fae\u89c2\u6001(microstate)\u3002\u800c\u6700\u7ec8\u7684\u51c0\u4f4d\u79fb(\u5982 \\(n=2\\))\u662f\u4e00\u4e2a\u5b8f\u89c2\u6001(macrostate)\u3002\u516c\u5f0f\u8868\u660e,\u4e00\u4e2a\u5b8f\u89c2\u6001\u51fa\u73b0\u7684\u6982\u7387,\u7b49\u4e8e\u5bfc\u81f4\u8be5\u5b8f\u89c2\u6001\u7684\u5355\u4e2a\u5fae\u89c2\u6001\u7684\u6982\u7387(\\(p^{k_+} q^{k_-}\\))\u4e58\u4ee5\u8be5\u5b8f\u89c2\u6001\u7684\u7b80\u5e76\u5ea6\u6216\u591a\u91cd\u6027(\\(\\binom{k}{k_+}\\)),\u5373\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u5fae\u89c2\u6001\u53ef\u4ee5\u4ea7\u751f\u76f8\u540c\u7684\u5b8f\u89c2\u7ed3\u679c\u3002\u6700\u53ef\u80fd\u51fa\u73b0\u7684\u5b8f\u89c2\u6001,\u662f\u90a3\u4e9b\u5bf9\u5e94\u6700\u591a\u5fae\u89c2\u8def\u5f84\u7684\u6001\u3002\u8fd9\u91cc\u7684\u7ec4\u5408\u7cfb\u6570,\u626e\u6f14\u4e86\u7c7b\u4f3c\u4e8e\"\u71b5\"\u7684\u89d2\u8272\u3002</p>"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/#22","title":"2.2 \u8fde\u7eed\u6781\u9650:\u9ad8\u65af\u5206\u5e03\u7684\u6d8c\u73b0","text":"<p>\u4e8c\u9879\u5206\u5e03\u662f\u7cbe\u786e\u7684,\u4f46\u5f53\u6b65\u6570 \\(k\\) \u5f88\u5927\u65f6,\u5176\u8ba1\u7b97\u4f1a\u53d8\u5f97\u975e\u5e38\u7e41\u7410\u3002\u5728\u7269\u7406\u5b66\u4e2d,\u6211\u4eec\u5e38\u5e38\u66f4\u5173\u5fc3\u5927\u91cf\u6b65\u9aa4\u540e\u7684\u5b8f\u89c2\u884c\u4e3a\u3002</p> <p>\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406(Central Limit Theorem, CLT):</p> <p>\u6559\u6388\u7684\u6307\u51fa,\u5f53\u6b65\u6570 \\(k\\) \u975e\u5e38\u5927\u65f6(\\(k \\gg 1\\)),\u4e8c\u9879\u5206\u5e03\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03(Gaussian Distribution),\u4e5f\u79f0\u6b63\u6001\u5206\u5e03:</p> \\[ P(n) \\approx \\frac{1}{\\sqrt{2\\pi \\mathrm{Var}[n]}} \\exp\\left(-\\frac{(n-\\langle n \\rangle)^2}{2\\mathrm{Var}[n]}\\right) \\] <p>\u8fd9\u4e00\u8f6c\u53d8\u4e0d\u4ec5\u4ec5\u662f\u6570\u5b66\u4e0a\u7684\u8fd1\u4f3c(\u4f8b\u5982\u5bf9\u9636\u4e58\u4f7f\u7528\u65af\u7279\u6797\u516c\u5f0f),\u5b83\u662f\u4e00\u4e2a\u66f4\u6df1\u5c42\u6b21\u7269\u7406\u539f\u7406\u7684\u4f53\u73b0\u2014\u2014\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u3002\u8be5\u5b9a\u7406\u6307\u51fa:\u5927\u91cf\u72ec\u7acb\u540c\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\u4e4b\u548c(\u5728\u6211\u4eec\u7684\u6a21\u578b\u4e2d\u5373\u4e3a \\(X_k = \\sum \\xi_j\\)),\u5176\u5206\u5e03\u4f1a\u8d8b\u5411\u4e8e\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03,\u800c\u4e0e\u5355\u4e2a\u968f\u673a\u53d8\u91cf\u81ea\u8eab\u7684\u5206\u5e03\u5f62\u5f0f\u65e0\u5173(\u5728\u8fd9\u91cc,\u5355\u4e2a\u6b65\u957f\u7684\u5206\u5e03\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e24\u70b9\u4f2f\u52aa\u5229\u5206\u5e03)\u3002\u8fd9\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u5728\u81ea\u7136\u754c\u4e2d,\u51e1\u662f\u6d89\u53ca\u5927\u91cf\u968f\u673a\u56e0\u7d20\u7d2f\u52a0\u7684\u8fc7\u7a0b,\u5176\u7ed3\u679c\u5f80\u5f80\u90fd\u5448\u73b0\u51fa\u9ad8\u65af\u5206\u5e03\u3002</p> <p>\u9ad8\u65af\u5206\u5e03\u7684\u53c2\u6570:</p> <p>\u8fd9\u4e2a\u8fd1\u4f3c\u7684\u9ad8\u65af\u5206\u5e03\u7684\u5747\u503c\u548c\u65b9\u5dee,\u6070\u597d\u5c31\u662f\u6211\u4eec\u5728\u7b2c\u4e00\u5c0f\u8282\u4e2d\u76f4\u63a5\u8ba1\u7b97\u51fa\u7684\u5747\u503c\u548c\u65b9\u5dee\u3002</p> <p>\u5747\u503c:\\(\\langle n \\rangle = k(p-q)\\),\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5747\u503c\u4e3a \\(\\langle X_k \\rangle = a\\langle n \\rangle = ak(p-q)\\)\u3002</p> <p>\u65b9\u5dee:\\(\\mathrm{Var}[n] = 4kpq\\),\u5bf9\u5e94\u4f4d\u7f6e\u7684\u65b9\u5dee\u4e3a \\(\\mathrm{Var}[X_k] = a^2\\mathrm{Var}[n] = 4k a^2 pq\\)\u3002</p> <p>\u8fd9\u5b8c\u7f8e\u5730\u5c55\u793a\u4e86\u6a21\u578b\u7684\u81ea\u6d3d\u6027\u3002\u901a\u8fc7\u76f4\u63a5\u8ba1\u7b97\u77e9\u5f97\u5230\u7684\u7ed3\u679c,\u4e0e\u901a\u8fc7\u6c42\u89e3\u5b8c\u6574\u5206\u5e03\u518d\u53d6\u6781\u9650\u5f97\u5230\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\u3002\u8fd9\u4e00\u8fc7\u7a0b\u6e05\u6670\u5730\u5c55\u793a\u4e86\u5b8f\u89c2\u7684\u6269\u6563\u5b9a\u5f8b(\u5176\u89e3\u4e3a\u9ad8\u65af\u51fd\u6570)\u662f\u5982\u4f55\u4ece\u5fae\u89c2\u7684\u968f\u673a\u884c\u8d70\u89c4\u5219\u4e2d\"\u6d8c\u73b0\"\u51fa\u6765\u7684\u3002</p>"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/#3-python","title":"3. Python\u8ba1\u7b97\u6a21\u62df\u4e0e\u53ef\u89c6\u5316","text":"<p>\u4ee5\u4e0b\u5185\u5bb9\u4e3a\u4f5c\u8005\u5b66\u4e60\u8bfe\u7a0b\u540e\u64b0\u5199,\u975e\u8bb2\u5ea7\u5185\u5bb9</p> <p>\u7406\u8bba\u5206\u6790\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u6df1\u523b\u7684\u6d1e\u89c1,\u800c\u8ba1\u7b97\u6a21\u62df\u5219\u662f\u7269\u7406\u5b66\u7814\u7a76\u7684\"\u7b2c\u4e09\u79cd\u65b9\u6cd5\",\u5b83\u80fd\u5e2e\u52a9\u6211\u4eec\u5efa\u7acb\u76f4\u89c2\u7684\u7269\u7406\u56fe\u50cf,\u5e76\u9a8c\u8bc1\u7406\u8bba\u9884\u6d4b\u7684\u6b63\u786e\u6027\u3002</p>"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/#31","title":"3.1 \u6a21\u62df\u7b97\u6cd5","text":"<p>\u6a21\u62df\u5355\u4e2a\u968f\u673a\u6e38\u8d70\u8f68\u8ff9\u7684\u7b97\u6cd5\u975e\u5e38\u7b80\u5355:</p> <ol> <li> <p>\u521d\u59cb\u5316\u4f4d\u7f6e \\(x=0\\) \u548c\u65f6\u95f4 \\(t=0\\)\u3002</p> </li> <li> <p>\u8fdb\u884c \\(k\\) \u6b21\u5faa\u73af\u3002</p> </li> <li> <p>\u5728\u6bcf\u4e00\u6b65\u4e2d,\u751f\u6210\u4e00\u4e2a \\([0,1]\\) \u533a\u95f4\u5185\u7684\u968f\u673a\u6570\u3002\u5982\u679c\u8be5\u6570\u5c0f\u4e8e \\(p\\),\u5219\u5411\u53f3\u79fb\u52a8\u4e00\u6b65(\\(x \\leftarrow x+a\\));\u5426\u5219\u5411\u5de6\u79fb\u52a8\u4e00\u6b65(\\(x \\leftarrow x-a\\))\u3002</p> </li> <li> <p>\u8bb0\u5f55\u6bcf\u4e00\u6b65\u7684\u4f4d\u7f6e\u3002</p> </li> </ol> <p>\u8981\u5206\u6790\u7c92\u5b50\u7fa4\u7684\u6574\u4f53\u884c\u4e3a,\u6211\u4eec\u53ea\u9700\u5c06\u4e0a\u8ff0\u8fc7\u7a0b\u91cd\u590d\u6267\u884c \\(N_{\\text{walkers}}\\) \u6b21\u5373\u53ef\u3002</p> <p>\u4e0b\u9762\u63d0\u4f9b\u4e00\u6bb5\u5b8c\u6574\u7684Python\u4ee3\u7801,\u4f7f\u7528 <code>numpy</code> \u548c <code>matplotlib</code> \u5e93\u6765\u6a21\u62df\u7b80\u5355\u968f\u673a\u6e38\u8d70,\u5e76\u91cd\u73b0\u8bfe\u7a0b\u4e2dPPT\u5e7b\u706f\u7247\u4e2d\u7684\u4e24\u5e45\u56fe\u3002</p> <p></p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.special import comb\n\n# --- Simulation parameters (inferred from PPT) ---\np = 0.75  # Probability of moving right\nq = 1 - p # Probability of moving left\na = 1     # Step size\ntau = 1   # Time interval\n\n# --- Figure 1: Probability distribution (left plot) ---\nnum_steps_dist = 50       # Total number of steps\nnum_walkers_dist = 50000  # Number of simulated particles for statistical distribution\n\n# Simulation\n# Generate displacement for each step (+a or -a)\nsteps = np.random.choice([a, -a], size=(num_walkers_dist, num_steps_dist), p=[p, q])\n# Calculate final position of each particle\nfinal_positions = np.sum(steps, axis=1)\n\n# Plot histogram of simulation results\nplt.figure(figsize=(12, 5))\nplt.subplot(1, 2, 1)\n# Use bins to center on even or odd positions\nbins = np.arange(final_positions.min(), final_positions.max() + 2) - 0.5\nplt.hist(final_positions, bins=bins, density=True, color='blue', alpha=0.7, label=f'Simulation (N={num_walkers_dist})')\n\n# Calculate and plot theoretical binomial distribution\nn_values = np.arange(-num_steps_dist, num_steps_dist + 1, 2) # Possible final positions n = k+ - k-\nk_plus = (num_steps_dist + n_values) / 2\nprob_theory = comb(num_steps_dist, k_plus) * (p**k_plus) * (q**(num_steps_dist - k_plus))\nplt.plot(n_values * a, prob_theory, 'ko', label='Theoretical (Binomial)')\n\nplt.title(f'Probability Distribution at k={num_steps_dist}')\nplt.xlabel('Position x')\nplt.ylabel('Probability P(x, t)')\nplt.legend()\nplt.grid(True, linestyle='--', alpha=0.6)\n\n\n# --- Figure 2: Trajectories and statistical moments (right plot) ---\nnum_steps_traj = 80       # Total number of steps\nnum_walkers_traj_show = 10 # Number of displayed trajectories\nnum_walkers_traj_stat = 2000 # Number of particles for calculating mean and variance statistics\n\n# Simulation\nsteps_stat = np.random.choice([a, -a], size=(num_walkers_traj_stat, num_steps_traj), p=[p, q])\n# Calculate position of each particle at each step (cumulative sum)\ntrajectories = np.cumsum(steps_stat, axis=1)\n# Add initial position 0 before trajectories\ntrajectories = np.insert(trajectories, 0, 0, axis=1)\n\n# Plotting\nplt.subplot(1, 2, 2)\ntime_points = np.arange(num_steps_traj + 1) * tau\n\n# Plot sample trajectories\nfor i in range(num_walkers_traj_show):\n    plt.plot(time_points, trajectories[i, :], alpha=0.5)\n\n# Calculate and plot statistical mean (from simulation)\nmean_sim = np.mean(trajectories, axis=0)\n# Calculate and plot theoretical mean\nmean_theory = time_points * a * (p - q) / tau\nplt.plot(time_points, mean_theory, 'k:', linewidth=2, label=r'$\\langle x \\rangle$')\n\n# Calculate and plot theoretical standard deviation range\nvariance_theory = 4 * (time_points/tau) * (a**2) * p * q\nstd_theory = np.sqrt(variance_theory)\nplt.plot(time_points, mean_theory + std_theory, 'k--', linewidth=2, label=r'$\\langle x \\rangle \\pm \\sigma$')\nplt.plot(time_points, mean_theory - std_theory, 'k--', linewidth=2)\n\n\nplt.title('Random Walk Trajectories and Moments')\nplt.xlabel('Time')\nplt.ylabel('Position')\nplt.legend()\nplt.grid(True, linestyle='--', alpha=0.6)\n\nplt.tight_layout()\nplt.show()\n</code></pre> </p> <p>\u5de6\u4fa7\u7684\u6982\u7387\u5206\u5e03\u56fe,\u5b9e\u9645\u4e0a\u7b49\u4ef7\u4e8e\u5728\u53f3\u4fa7\u56fe\u4e2d\u67d0\u4e2a\u7279\u5b9a\u7684\u65f6\u95f4\u70b9(\u4f8b\u5982 \\(t=50\\))\u505a\u4e00\u6761\"\u7ad6\u76f4\u5207\u7247\",\u7136\u540e\u7edf\u8ba1\u8be5\u65f6\u523b\u6240\u6709\u6a21\u62df\u7c92\u5b50\u4f4d\u7f6e\u7684\u5206\u5e03\u60c5\u51b5\u3002</p>"},{"location":"zh/notes/2.%20%E7%AE%80%E5%8D%95%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0/#_4","title":"\u603b\u7ed3:\u4e00\u4e2a\u7b80\u5355\u6a21\u578b\u7684\u5f3a\u5927\u529b\u91cf","text":"<p>Erwin Frey\u6559\u6388\u7684\u8bb2\u5ea7\u4ee5\u4e00\u4e2a\u6781\u5176\u7b80\u5355\u7684\u6a21\u578b\u4e3a\u8d77\u70b9,\u5e26\u9886\u6211\u4eec\u9886\u7565\u4e86\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u6838\u5fc3\u601d\u60f3:\u5982\u4f55\u4ece\u5fae\u89c2\u4e16\u754c\u7684\u57fa\u672c\u968f\u673a\u89c4\u5219,\u63a8\u5bfc\u51fa\u5b8f\u89c2\u4e16\u754c\u4e2d\u53ef\u89c2\u6d4b\u5230\u7684\u3001\u786e\u5b9a\u6027\u7684\u7269\u7406\u5b9a\u5f8b\u3002</p> <p>\u6211\u4eec\u770b\u5230,\u7c92\u5b50\u4f4d\u7f6e\u7684\u5747\u503c\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u957f(\\(\\langle X_k \\rangle \\propto t\\)),\u8fd9\u662f\u6f02\u79fb\u7684\u5b8f\u89c2\u8868\u73b0;\u800c\u5176\u65b9\u5dee\u4e5f\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u957f(\\(\\mathrm{Var}[X_k] \\propto t\\)),\u8fd9\u662f\u6269\u6563\u7684\u666e\u9002\u7279\u5f81\u3002\u65b9\u5dee\u7684\u7ebf\u6027\u589e\u957f\u7b49\u4ef7\u4e8e\u6807\u51c6\u5dee\u968f\u65f6\u95f4\u7684\u5e73\u65b9\u6839\u589e\u957f(\\(\\sigma_k \\propto \\sqrt{t}\\)),\u8fd9\u662f\u533a\u5206\u6269\u6563\u4e0e\u5176\u4ed6\u8f93\u8fd0\u8fc7\u7a0b\u7684\u5173\u952e\u6807\u5ea6\u5f8b\u3002</p> <p>\u4ece\u5b9a\u4e49\u6700\u57fa\u672c\u7684\u968f\u673a\u6b65,\u5230\u8ba1\u7b97\u5176\u7edf\u8ba1\u77e9,\u518d\u5230\u6c42\u89e3\u5b8c\u6574\u7684\u6982\u7387\u5206\u5e03\u5e76\u63ed\u793a\u5176\u5728\u9ad8\u65af\u5206\u5e03\u4e2d\u7684\u666e\u9002\u6027,\u6574\u4e2a\u8fc7\u7a0b\u4e0d\u4ec5\u662f\u4e00\u6b21\u6570\u5b66\u63a8\u5bfc,\u66f4\u662f\u4e00\u5802\u5173\u4e8e\u7269\u7406\u4e16\u754c\u5982\u4f55\u4ece\u65e0\u5e8f\u4e2d\u6d8c\u73b0\u51fa\u6709\u5e8f\u7684\u7cbe\u5f69\u8bfe\u7a0b\u3002\u7b80\u5355\u968f\u673a\u6e38\u8d70\u6a21\u578b\u867d\u7b80,\u5374\u4e3a\u6211\u4eec\u7406\u89e3\u66f4\u590d\u6742\u7684\u968f\u673a\u73b0\u8c61\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u57fa\u77f3\u548c\u6df1\u523b\u7684\u7269\u7406\u76f4\u89c9\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/","title":"\u5f15\u8a00\uff1a\u4ece\u7269\u7406\u76f4\u89c9\u5230\u6570\u5b66\u4e25\u8c28","text":"<p>\u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff08\u7279\u522b\u662f\u7b2c16\u8bb2\uff09\uff0c\u6211\u4eec\u5df2\u7ecf\u63a5\u89e6\u4e86\u63cf\u8ff0\u5e03\u6717\u8fd0\u52a8\u7b49\u968f\u673a\u73b0\u8c61\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\uff08Langevin Equation\uff09\u3002\u6717\u4e4b\u4e07\u65b9\u7a0b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u76f4\u89c2\u7684\u7269\u7406\u56fe\u50cf\uff1a\u4e00\u4e2a\u7c92\u5b50\u7684\u8fd0\u52a8\u7531\u4e24\u90e8\u5206\u51b3\u5b9a\uff0c\u4e00\u90e8\u5206\u662f\u786e\u5b9a\u7684\u3001\u53ef\u9884\u6d4b\u7684\u529b\uff08\u5982\u6469\u64e6\u529b\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u5219\u662f\u7531\u5927\u91cf\u5fae\u89c2\u7c92\u5b50\u78b0\u649e\u4ea7\u751f\u7684\u3001\u5feb\u901f\u6da8\u843d\u7684\u968f\u673a\u529b \\(\\xi(t)\\) \u3002</p> <p>\u8fd9\u4e2a\u968f\u673a\u529b\uff0c\u5373\u767d\u566a\u58f0\uff08white noise\uff09\uff0c\u901a\u5e38\u88ab\u7406\u60f3\u5316\u5730\u5047\u8bbe\u4e3a\u5728\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u65f6\u523b\u90fd\u5b8c\u5168\u4e0d\u76f8\u5173\u3002\u8fd9\u79cd\"\u65e0\u8bb0\u5fc6\"\u7684\u7279\u6027\u5728\u6570\u5b66\u4e0a\u901a\u8fc7\u72c4\u62c9\u514b \\(\\delta\\) \u51fd\u6570\uff08Dirac delta function\uff09\u6765\u8868\u8fbe\uff1a</p> \\[\\langle\\xi(t)\\xi(t')\\rangle=2D\\delta(t-t')\\] <p>\u7136\u800c\uff0c\u8fd9\u79cd\u7406\u60f3\u5316\u5904\u7406\u867d\u7136\u5728\u7269\u7406\u4e0a\u5f88\u6709\u7528\uff0c\u4f46\u5728\u6570\u5b66\u4e0a\u5374\u5e26\u6765\u4e86\u9ebb\u70e6\u3002\u4e00\u4e2a\u5728\u4efb\u610f\u65f6\u523b\u90fd\u4e0e\u5176\u4ed6\u65f6\u523b\u4e0d\u76f8\u5173\u7684\"\u51fd\u6570\"\u5fc5\u7136\u5145\u6ee1\u4e86\u65e0\u7a77\u5927\u7684\u5c16\u5cf0\uff0c\u5176\u65b9\u5dee\u65e0\u7a77\u5927\uff0c\u56e0\u6b64\u5b83\u5e76\u4e0d\u662f\u4e00\u4e2a\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u51fd\u6570\u3002\u76f4\u63a5\u5bf9\u8fd9\u6837\u7684\u5bf9\u8c61\u8fdb\u884c\u5fae\u79ef\u5206\u8fd0\u7b97\uff0c\u4f1a\u9047\u5230\u4e25\u5cfb\u7684\u6570\u5b66\u6311\u6218\u3002</p> <p>\u4e3a\u4e86\u514b\u670d\u8fd9\u4e00\u56f0\u96be\uff0c\u6570\u5b66\u5bb6\u4eec\u53d1\u5c55\u51fa\u4e86\u4e00\u5957\u5168\u65b0\u7684\u8bed\u8a00\u2014\u2014\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff08Stochastic Differential Equations, SDEs\uff09\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u7b26\u53f7\u4e0a\u7684\u6539\u53d8\uff0c\u66f4\u662f\u601d\u60f3\u4e0a\u7684\u6839\u672c\u6027\u98de\u8dc3\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u907f\u5f00\u76f4\u63a5\u5904\u7406\u884c\u4e3a\u5947\u5f02\u7684\u767d\u566a\u58f0 \\(\\xi(t)\\)\uff0c\u8f6c\u800c\u7814\u7a76\u5176\u79ef\u5206\u3002\u767d\u566a\u58f0\u7684\u79ef\u5206\uff0c\u5373\u7ef4\u7eb3\u8fc7\u7a0b\uff08Wiener Process\uff09\\(W(t)\\)\uff0c\u662f\u4e00\u4e2a\u884c\u4e3a\u826f\u597d\u3001\u8def\u5f84\u8fde\u7eed\u7684\u968f\u673a\u8fc7\u7a0b\u3002\u8fd9\u8282\u8bfe\u7684\u76ee\u7684\uff0c\u5c31\u662f\u5efa\u7acb\u8fd9\u5957\u4e25\u8c28\u7684\u6570\u5b66\u5de5\u5177\uff0c\u4ece\u800c\u8ba9\u6211\u4eec\u80fd\u591f\u7cbe\u786e\u5730\u63cf\u8ff0\u548c\u5206\u6790\u7531\u968f\u673a\u6027\u9a71\u52a8\u7684\u7269\u7406\u3001\u751f\u7269\u4e43\u81f3\u91d1\u878d\u7cfb\u7edf\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#1","title":"1. \u968f\u673a\u5fae\u5206\u65b9\u7a0b\u7684\u8bed\u8a00","text":"<p>\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff08SDEs\uff09\u7684\u53d1\u5c55\u5386\u53f2\u6e90\u4e8e\u5bf9\u5e03\u6717\u8fd0\u52a8\u7684\u7406\u8bba\u63cf\u8ff0\uff0c\u6cd5\u56fd\u7269\u7406\u5b66\u5bb6\u4fdd\u7f57\u00b7\u6717\u4e4b\u4e07\u57281908\u5e74\u9996\u6b21\u63d0\u51fa\u6717\u4e4b\u4e07\u65b9\u7a0b\uff0c\u901a\u8fc7\u7ed3\u5408\u786e\u5b9a\u6027\u7684\u7c98\u6ede\u963b\u529b\u4e0e\u968f\u673a\u566a\u58f0\u529b\uff0c\u4e3a\u7edf\u8ba1\u529b\u5b66\u548c\u968f\u673a\u8fc7\u7a0b\u7814\u7a76\u5960\u5b9a\u4e86\u57fa\u7840\u3002\u8fd9\u4e00\u7269\u7406\u6a21\u578b\u540e\u6765\u5728\u6570\u5b66\u4e0a\u88ab\u8fdb\u4e00\u6b65\u4e25\u8c28\u5316\uff0c\u7279\u522b\u662f\u901a\u8fc7\u4f0a\u85e4\uff08It\u00f4\uff09\u548c\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\uff08Stratonovich\uff09\u7b49\u4eba\u53d1\u5c55\u51fa\u5b8c\u5584\u7684\u968f\u673a\u79ef\u5206\u7406\u8bba\uff0c\u89e3\u51b3\u4e86\u5982\u4f55\u6b63\u786e\u5904\u7406\u968f\u673a\u53d8\u91cf\u5fae\u79ef\u5206\u7684\u96be\u9898\u3002\u5982\u4eca\uff0cSDEs\u7684\u5e94\u7528\u6781\u4e3a\u5e7f\u6cdb\uff1a\u5728\u91d1\u878d\u9886\u57df\uff0c\u5b83\u662f\u98ce\u9669\u8bc4\u4f30\u3001\u80a1\u4ef7\u6ce2\u52a8\u6a21\u62df\u4ee5\u53ca\u8457\u540d\u7684\u5e03\u83b1\u514b-\u65af\u79d1\u5c14\u65af\u65b9\u7a0b\u7684\u57fa\u7840\uff1b\u5728\u7269\u7406\u5b66\u4e2d\uff0c\u5b83\u88ab\u7528\u4e8e\u5e03\u6717\u8fd0\u52a8\u548c\u5206\u5b50\u52a8\u529b\u5b66\u6a21\u62df\uff1b\u5728\u751f\u7269\u5b66\u4e2d\uff0c\u5219\u5e94\u7528\u4e8e\u79cd\u7fa4\u52a8\u529b\u5b66\u548c\u86cb\u767d\u8d28\u6298\u53e0\u5206\u6790\uff1b\u6b64\u5916\uff0c\u5b83\u8fd8\u4e3a\u5316\u5b66\u4e2d\u7684\u53cd\u5e94\u901f\u7387\u5efa\u6a21\u4ee5\u53ca\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u63d0\u4f9b\u4e86\u7406\u8bba\u6846\u67b6\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#11","title":"1.1 \u7ef4\u7eb3\u589e\u91cf\uff1a\u6355\u6349\u968f\u673a\u6027\u7684\u57fa\u672c\u5355\u5143","text":"<p>Erwin Frey \u6559\u6388\u4ece\u6700\u7b80\u5355\u7684\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u5165\u624b\uff0c\u5b83\u63cf\u8ff0\u4e86\u4e00\u4e2a\u53ea\u53d7\u968f\u673a\u529b\u9a71\u52a8\u7684\u7c92\u5b50\u7684\u8fd0\u52a8\uff1a</p> \\[\\dot{x}=\\xi(t)\\] <p>\u8fd9\u91cc\u7684 \\(\\xi(t)\\) \u5c31\u662f\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684\u767d\u566a\u58f0\uff0c\u5176\u5173\u8054\u51fd\u6570\u4e3a \\(\\langle\\xi(t)\\xi(t')\\rangle=2D\\delta(t-t')\\)\uff0c\u5176\u4e2d \\(D\\) \u662f\u6269\u6563\u7cfb\u6570\u3002</p> <p>\u4e3a\u4e86\u5728\u6570\u5b66\u4e0a\u5904\u7406\u8fd9\u4e2a\u65b9\u7a0b\uff0c\u6211\u4eec\u4e0d\u76f4\u63a5\u6c42\u89e3 \\(\\dot{x}\\)\uff0c\u800c\u662f\u8003\u5bdf\u5728\u4e00\u4e2a\u5fae\u5c0f\u65f6\u95f4\u95f4\u9694 \\(\\Delta t\\) \u5185\uff0c\u7c92\u5b50\u4f4d\u7f6e \\(x\\) \u7684\u53d8\u5316\u91cf\u3002\u901a\u8fc7\u5bf9\u4e0a\u5f0f\u8fdb\u884c\u79ef\u5206\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[x(t+\\Delta t)-x(t)=\\int_t^{t+\\Delta t}d\\tau\\xi(\\tau)\\equiv\\Delta W(t)\\] <p>\u8fd9\u4e2a\u79ef\u5206\u7ed3\u679c \\(\\Delta W(t)\\) \u88ab\u5b9a\u4e49\u4e3a\u7ef4\u7eb3\u589e\u91cf\uff08Wiener's increment\uff09\u3002\u5b83\u7684\u7269\u7406\u610f\u4e49\u975e\u5e38\u6e05\u6670\uff1a\u5728 \\(\\Delta t\\) \u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u7c92\u5b50\u53d7\u5230\u5468\u56f4\u4ecb\u8d28\u5206\u5b50\u7684\u65e0\u6570\u6b21\u3001\u5fae\u5c0f\u4e14\u72ec\u7acb\u7684\u968f\u673a\u78b0\u649e\uff0c\\(\\Delta W(t)\\) \u5c31\u662f\u8fd9\u4e9b\u78b0\u649e\u6548\u5e94\u7d2f\u79ef\u4ea7\u751f\u7684\u51c0\u4f4d\u79fb\u3002</p> <p>\u7ef4\u7eb3\u589e\u91cf\u5177\u6709\u4e24\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u7edf\u8ba1\u6027\u8d28\uff1a</p> <p>1. \u5747\u65b9\u503c\uff08Mean Square\uff09\uff1a</p> <p>\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97 \\(\\Delta W(t)\\) \u7684\u5e73\u65b9\u7684\u5e73\u5747\u503c\uff1a</p> <p>$$ \\langle\\Delta W^2(t)\\rangle=\\langle\\int_t^{t+\\Delta t}d\\tau\\xi(\\tau)\\int_t^{t+\\Delta t}d\\tau'\\xi(\\tau')\\rangle $$ \u5229\u7528\u671f\u671b\u548c\u79ef\u5206\u53ef\u4ee5\u4e92\u6362\u987a\u5e8f\u7684\u6027\u8d28\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> <p>$$ \\langle\\Delta W^2(t)\\rangle=\\int_t^{t+\\Delta t}d\\tau\\int_t^{t+\\Delta t}d\\tau'\\langle\\xi(\\tau)\\xi(\\tau')\\rangle $$ \u4ee3\u5165\u767d\u566a\u58f0\u7684\u5173\u8054\u51fd\u6570\uff1a</p> \\[ \\langle\\Delta W^2(t)\\rangle=\\int_t^{t+\\Delta t}d\\tau\\int_t^{t+\\Delta t}d\\tau'2D\\delta(\\tau-\\tau') \\] <p>\u7531\u4e8e \\(\\delta\\) \u51fd\u6570\u7684\u6027\u8d28\uff0c\u53ea\u6709\u5f53 \\(\\tau=\\tau'\\) \u65f6\u79ef\u5206\u624d\u6709\u503c\uff0c\u56e0\u6b64\u5bf9 \\(\\tau'\\) \u7684\u79ef\u5206\u7ed3\u679c\u4e3a1\uff08\u53ea\u8981\u79ef\u5206\u533a\u95f4\u5305\u542b \\(\\tau\\)\uff09\u3002\u6700\u7ec8\u5f97\u5230\uff1a</p> \\[ \\langle\\Delta W^2(t)\\rangle=\\int_t^{t+\\Delta t}d\\tau 2D=2D\\Delta t \\] <p>\u8fd9\u4e2a\u7ed3\u679c \\(\\langle\\Delta W^2(t)\\rangle=2D\\Delta t\\) \u662f\u6269\u6563\u8fc7\u7a0b\u7684\u6807\u5fd7\u6027\u7279\u5f81\uff1a\u5747\u65b9\u4f4d\u79fb\u4e0e\u65f6\u95f4\u95f4\u9694\u6210\u6b63\u6bd4\uff0c\u800c\u4e0d\u662f\u4e0e\u65f6\u95f4\u95f4\u9694\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff08\u540e\u8005\u662f\u5300\u901f\u76f4\u7ebf\u8fd0\u52a8\u7684\u7279\u5f81\uff09\u3002\u8fd9\u53cd\u6620\u4e86\u968f\u673a\u8fd0\u52a8\u7684\u672c\u8d28\u3002</p> <p>2. \u9ad8\u65af\u5206\u5e03\uff08Gaussian Distribution\uff09\uff1a</p> <p>\u7531\u4e8e\u7ef4\u7eb3\u589e\u91cf\u662f\u5927\u91cf\u72ec\u7acb\u968f\u673a\u78b0\u649e\u6548\u5e94\u7684\u53e0\u52a0\uff0c\u6839\u636e\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff08Central Limit Theorem\uff09\uff0c\u65e0\u8bba\u5355\u6b21\u78b0\u649e\u7684\u7ec6\u8282\u5982\u4f55\uff0c\u5b83\u4eec\u7684\u603b\u548c\u603b\u662f\u8d8b\u5411\u4e8e\u4e00\u4e2a\u9ad8\u65af\uff08\u6b63\u6001\uff09\u5206\u5e03\u3002\u56e0\u6b64\uff0c\\(\\Delta W(t)\\) \u7684\u6982\u7387\u5206\u5e03\u4e3a\uff1a</p> <p>$$ P(\\Delta W(t)) = \\frac{1}{\\sqrt{4\\pi D \\Delta t}} \\exp\\left(-\\frac{\\Delta W(t)^2}{4D\\Delta t}\\right) $$ \u8fd9\u662f\u4e00\u4e2a\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a \\(2D\\Delta t\\) \u7684\u9ad8\u65af\u5206\u5e03\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#12","title":"1.2 \u968f\u673a\u79ef\u5206\u4e0e\u7ef4\u7eb3\u8fc7\u7a0b","text":"<p>\u6709\u4e86\u57fa\u672c\u5355\u5143\u2014\u2014\u7ef4\u7eb3\u589e\u91cf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u5efa\u7c92\u5b50\u5728\u4efb\u610f\u65f6\u523b \\(t\\) \u7684\u4f4d\u7f6e \\(x(t)\\)\u3002\u6211\u4eec\u5c06\u65f6\u95f4 \\([0,t]\\) \u5206\u5272\u6210 \\(n\\) \u4e2a\u5fae\u5c0f\u7684\u95f4\u9694 \\(\\Delta t=t/n\\)\uff0c\u6bcf\u4e2a\u95f4\u9694\u5bf9\u5e94\u4e00\u4e2a\u72ec\u7acb\u7684\u7ef4\u7eb3\u589e\u91cf \\(\\Delta W_k\\)\u3002\u7c92\u5b50\u7684\u603b\u4f4d\u79fb\u5c31\u662f\u8fd9\u4e9b\u589e\u91cf\u7684\u603b\u548c\u3002\u5f53\u65f6\u95f4\u95f4\u9694\u8d8b\u4e8e\u65e0\u7a77\u5c0f\u65f6\uff08\\(n\\to\\infty\\)\uff09\uff0c\u8fd9\u4e2a\u6c42\u548c\u5c31\u53d8\u6210\u4e86\u79ef\u5206\uff1a</p> \\[x(t)=\\lim_{n\\to\\infty}\\sum_{k=0}^{n-1}\\Delta W_k\\equiv\\int_0^t dW(s)\\] <p>\u8fd9\u4e2a\u6781\u9650\u8fc7\u7a0b\u5b9a\u4e49\u7684\u79ef\u5206\u88ab\u79f0\u4e3a\u968f\u673a\u79ef\u5206\uff08Stochastic Integral\uff09\u3002\u800c\u8fd9\u4e2a\u79ef\u5206\u672c\u8eab\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u5173\u4e8e\u65f6\u95f4 \\(t\\) \u7684\u51fd\u6570\uff0c\u5c31\u5b9a\u4e49\u4e86\u7ef4\u7eb3\u8fc7\u7a0b\uff08Wiener Process\uff09\\(W(t)\\)\uff0c\u5b83\u4e5f\u88ab\u79f0\u4e3a\u5e03\u6717\u8fd0\u52a8\uff08Brownian Motion\uff09\u3002</p> <p>\u8fd9\u79cd\u4ece\u79bb\u6563\u7684\u3001\u72ec\u7acb\u7684\u968f\u673a\u6b65\uff08\\(\\Delta W_k\\)\uff09\u51fa\u53d1\uff0c\u901a\u8fc7\u6781\u9650\u6784\u9020\u51fa\u8fde\u7eed\u65f6\u95f4\u968f\u673a\u8fc7\u7a0b\uff08\\(W(t)\\)\uff09\u7684\u65b9\u6cd5\uff0c\u662f\u8fde\u63a5\u79bb\u6563\u968f\u673a\u6e38\u8d70\u548c\u8fde\u7eed\u968f\u673a\u8fc7\u7a0b\u7684\u6865\u6881\u3002</p> <p>\u7ef4\u7eb3\u8fc7\u7a0b \\(W(t)\\equiv x(t)\\) \u7684\u7edf\u8ba1\u6027\u8d28\u53ef\u4ee5\u4ece\u5176\u6784\u6210\u5355\u5143 \\(\\Delta W_k\\) \u7684\u6027\u8d28\u4e2d\u63a8\u5bfc\u51fa\u6765\uff1a</p> <ul> <li> <p>\u5747\u65b9\u4f4d\u79fb\uff1a\u7531\u4e8e\u5404\u4e2a \\(\\Delta W_k\\) \u662f\u72ec\u7acb\u540c\u5206\u5e03\u7684\uff08iid Gaussian\uff09\uff0c\u603b\u4f4d\u79fb\u5e73\u65b9\u7684\u671f\u671b\u7b49\u4e8e\u5404\u4e2a\u4f4d\u79fb\u5e73\u65b9\u671f\u671b\u4e4b\u548c\uff1a   $$   \\langle x^2(t)\\rangle=\\langle(\\sum_{k=0}^{n-1}\\Delta W_k)^2\\rangle=\\sum_{k=0}^{n-1}\\langle\\Delta W_k^2\\rangle=\\sum_{k=0}^{n-1}2D\\Delta t=n\\cdot(2D\\frac{t}{n})=2Dt   $$</p> </li> <li> <p>\u6982\u7387\u5206\u5e03\uff1a\u540c\u6837\u6839\u636e\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff0c\u591a\u4e2a\u9ad8\u65af\u968f\u673a\u53d8\u91cf\u7684\u548c\u4ecd\u7136\u662f\u9ad8\u65af\u968f\u673a\u53d8\u91cf\uff0c\u5176\u65b9\u5dee\u662f\u5404\u4e2a\u65b9\u5dee\u4e4b\u548c\u3002\u56e0\u6b64\uff0c\\(x(t)\\) \u7684\u6982\u7387\u5206\u5e03\u4e3a\uff1a   $$   P(x,t)=\\frac{1}{\\sqrt{4\\pi Dt}}\\exp\\left(-\\frac{x^2}{4Dt}\\right)   $$</p> </li> </ul> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u6982\u7387\u5206\u5e03 \\(P(x,t)\\) \u6b63\u662f\u6211\u4eec\u5728\u524d\u671f\u8bfe\u7a0b\u4e2d\u63a8\u5bfc\u51fa\u7684\u6269\u6563\u65b9\u7a0b\uff08\u6216\u70ed\u4f20\u5bfc\u65b9\u7a0b\uff09\u7684\u89e3\u3002\u8fd9\u63ed\u793a\u4e86\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff08\u5fae\u89c2\u8f68\u8ff9\u63cf\u8ff0\uff09\u548c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff08\u6982\u7387\u6f14\u5316\u63cf\u8ff0\uff09\u4e4b\u95f4\u7684\u6df1\u523b\u8054\u7cfb\u3002</p> <p>\u4ece \\(\\xi(t)\\) \u5230 \\(dW_t\\) \u7684\u8f6c\u53d8\uff0c\u662f\u6574\u4e2a\u968f\u673a\u5fae\u79ef\u5206\u7406\u8bba\u7684\u6838\u5fc3\u3002\u5b83\u5c06\u6211\u4eec\u7684\u7126\u70b9\u4ece\u4e00\u4e2a\u6570\u5b66\u4e0a\u96be\u4ee5\u5904\u7406\u7684\u5bf9\u8c61\uff08\u767d\u566a\u58f0\uff09\u8f6c\u79fb\u5230\u4e86\u4e00\u4e2a\u5b9a\u4e49\u826f\u597d\u3001\u8def\u5f84\u8fde\u7eed\uff08\u5c3d\u7ba1\u5904\u5904\u4e0d\u53ef\u5fae\uff09\u7684\u968f\u673a\u8fc7\u7a0b\uff08\u7ef4\u7eb3\u8fc7\u7a0b\uff09\u4e0a\u3002\u6717\u4e4b\u4e07\u65b9\u7a0b \\(\\dot{x}=\\cdots+\\xi(t)\\) \u5728\u7269\u7406\u4e0a\u76f4\u89c2\uff0c\u4f46\u6570\u5b66\u4e0a\u4e0d\u4e25\u8c28\u3002\u800c\u968f\u673a\u5fae\u5206\u65b9\u7a0b \\(dx=\\cdots+dW_t\\) \u5e76\u975e\u7b80\u5355\u7684\u7b26\u53f7\u66ff\u6362\uff0c\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u79ef\u5206\u65b9\u7a0b\u7684\u7b80\u5199\uff0c\u5373 \\(x(t)-x(0)=\\int_0^t\\cdots ds+\\int_0^t dW_s\\)\u3002\u53ea\u6709\u5728\u79ef\u5206\u5f62\u5f0f\u4e0b\uff0c\u6574\u4e2a\u7406\u8bba\u624d\u662f\u6570\u5b66\u4e0a\u81ea\u6d3d\u548c\u4e25\u8c28\u7684\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#13","title":"1.3 \u8ba1\u7b97\u6a21\u62df\uff1a\u7ef4\u7eb3\u8fc7\u7a0b","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u7ef4\u7eb3\u589e\u91cf\u7684\u6027\u8d28\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u8fed\u4ee3\u6765\u751f\u6210\u7ef4\u7eb3\u8fc7\u7a0b\u7684\u8f68\u8ff9\u3002\u5176\u6838\u5fc3\u7684\u79bb\u6563\u5316\u66f4\u65b0\u89c4\u5219\u662f\uff1a</p> \\[W(t_{i+1})=W(t_i)+\\Delta W_i\\] <p>\u5176\u4e2d \\(\\Delta W_i\\) \u662f\u4e00\u4e2a\u4ece\u5747\u503c\u4e3a0\u3001\u65b9\u5dee\u4e3a \\(2D\\Delta t\\) \u7684\u9ad8\u65af\u5206\u5e03\u4e2d\u62bd\u53d6\u7684\u968f\u673a\u6570\uff0c\u8fd9\u7b49\u4ef7\u4e8e \\(\\sqrt{2D\\Delta t}\\cdot N(0,1)\\)\uff0c\u5176\u4e2d \\(N(0,1)\\) \u662f\u6807\u51c6\u6b63\u6001\u5206\u5e03\u3002</p> <p>\u4e0b\u9762\u7684Python\u4ee3\u7801\u6a21\u62df\u5e76\u7ed8\u5236\u4e86\u591a\u6761\u7ef4\u7eb3\u8fc7\u7a0b\u7684\u8f68\u8ff9\uff0c\u5e76\u9a8c\u8bc1\u4e86\u5176\u5747\u65b9\u4f4d\u79fb\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u957f\u7684\u7279\u6027\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# --- Parameter settings ---\nT = 10.0          # Total time\nN = 1000          # Number of time steps\ndt = T / N        # Time step size\nD = 0.5           # Diffusion coefficient (2D = 1)\nnum_paths = 500   # Number of simulated trajectories\n\n# --- Simulate Wiener process ---\n# Create an array of shape (num_paths, N+1) to store all trajectories\n# N+1 because it includes the initial point at t=0\npaths = np.zeros((num_paths, N + 1))\n\n# Generate random increments for all time steps\n# np.random.normal(loc=mean, scale=std_dev, size=...)\n# std_dev = sqrt(variance) = sqrt(2*D*dt)\nincrements = np.random.normal(0, np.sqrt(2 * D * dt), (num_paths, N))\n\n# Build trajectories by accumulating increments\n# paths[:, 1:] means filling from the second time point onwards\n# np.cumsum(..., axis=1) performs cumulative sum along the time axis (columns)\npaths[:, 1:] = np.cumsum(increments, axis=1)\n\n# --- Plotting ---\n# 1. Plot several sample trajectories\nplt.figure(figsize=(14, 6))\ntime_axis = np.linspace(0, T, N + 1)\n\nplt.subplot(1, 2, 1)\nfor i in range(min(num_paths, 10)): # Only plot first 10 to maintain clarity\n    plt.plot(time_axis, paths[i, :], lw=1)\nplt.title(f'{min(num_paths, 10)} Sample Wiener Process Paths')\nplt.xlabel('Time $t$')\nplt.ylabel('$W(t)$')\nplt.grid(True)\n\n# 2. Verify mean squared displacement\n# Calculate mean squared displacement at each time point\n# np.mean(paths**2, axis=0) computes mean along the trajectory axis (rows)\nmean_squared_displacement = np.mean(paths**2, axis=0)\ntheoretical_msd = 2 * D * time_axis\n\nplt.subplot(1, 2, 2)\nplt.plot(time_axis, mean_squared_displacement, label='Simulated $\\\\langle W^2(t) \\\\rangle$')\nplt.plot(time_axis, theoretical_msd, 'r--', label='Theoretical $2Dt$')\nplt.title('Mean Squared Displacement')\nplt.xlabel('Time $t$')\nplt.ylabel('$\\\\langle W^2(t) \\\\rangle$')\nplt.legend()\nplt.grid(True)\n\nplt.tight_layout()\nplt.show()\n</code></pre> </p> <p>\u5de6\u56fe\u5c55\u793a\u4e8610\u6761\u6a21\u62df\u7684\u7ef4\u7eb3\u8fc7\u7a0b\u6837\u672c\u8f68\u8ff9\uff0c\u5b83\u4eec\u90fd\u4ece0\u70b9\u51fa\u53d1\uff0c\u8fdb\u884c\u968f\u673a\u6e38\u8d70\u3002\u53f3\u56fe\u5c06500\u6761\u8f68\u8ff9\u5728\u6bcf\u4e2a\u65f6\u95f4\u70b9\u7684\u4f4d\u79fb\u5e73\u65b9\u8fdb\u884c\u5e73\u5747\uff0c\u5f97\u5230\u7684\u5747\u65b9\u4f4d\u79fb\uff08\u84dd\u7ebf\uff09\u4e0e\u7406\u8bba\u503c \\(2Dt\\)\uff08\u7ea2\u8272\u865a\u7ebf\uff09\u543b\u5408\uff0c\u9a8c\u8bc1\u4e86\u6269\u6563\u8fc7\u7a0b\u7684\u6838\u5fc3\u7279\u6027\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#2","title":"2. \u968f\u673a\u5fae\u79ef\u5206\u7684\u60ca\u5947\u4e4b\u5904","text":"<p>\u8fdb\u5165\u968f\u673a\u5fae\u79ef\u5206\u7684\u6838\u5fc3\u9886\u57df\u540e\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5b83\u9075\u5faa\u7740\u4e00\u5957\u4e0e\u666e\u901a\u5fae\u79ef\u5206\u622a\u7136\u4e0d\u540c\u7684\u8fd0\u7b97\u6cd5\u5219\u3002\u8fd9\u4e9b\u5dee\u5f02\u7684\u6839\u6e90\u5728\u4e8e\u7ef4\u7eb3\u8fc7\u7a0b\u8def\u5f84\u7684\u5185\u5728\"\u7c97\u7cd9\u6027\"\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#21-dw_s2","title":"2.1 \u4f0a\u85e4\u5f15\u7406\u521d\u63a2\uff1a\\((dW_s)^2\\) \u7684\u79ef\u5206","text":"<p>\u6559\u6388\u5f15\u5165\u4e86\u4e00\u4e2a\u770b\u4f3c\u5947\u602a\u7684\u91cf\uff1a</p> \\[Y(t)=\\sum_{k=0}^{n-1}(\\Delta W_k)^2\\] <p>\u5728\u666e\u901a\u7684\u9ece\u66fc\u79ef\u5206\u4e2d\uff0c\u7c7b\u4f3c\u7684\u6c42\u548c \\(\\sum(\\Delta t_k)^2\\) \u4f1a\u968f\u7740 \\(\\Delta t\\to 0\\) \u800c\u8fc5\u901f\u6d88\u5931\uff0c\u56e0\u4e3a \\((\\Delta t)^2\\) \u662f\u6bd4 \\(\\Delta t\\) \u66f4\u9ad8\u9636\u7684\u65e0\u7a77\u5c0f\u3002\u4f46\u5728\u968f\u673a\u4e16\u754c\u91cc\uff0c\u60c5\u51b5\u622a\u7136\u4e0d\u540c\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u8ba1\u7b97\u8fd9\u4e2a\u91cf\u7684\u671f\u671b\u503c\u3002\u4e3a\u4e86\u7b80\u5316\uff0c\u6211\u4eec\u9075\u5faa\u8bb2\u5ea7\u7684\u8bbe\u5b9a\uff0c\u4ee4 \\(2D=1\\)\uff0c\u6b64\u65f6 \\(\\langle(\\Delta W_k)^2\\rangle=\\Delta t_k\\)\u3002</p> \\[\\langle Y(t)\\rangle=\\langle\\sum_{k=0}^{n-1}(\\Delta W_k)^2\\rangle=\\sum_{k=0}^{n-1}\\langle(\\Delta W_k)^2\\rangle=\\sum_{k=0}^{n-1}\\Delta t_k=t\\] <p>\u8fd9\u662f\u4e00\u4e2a\u60ca\u4eba\u7684\u7ed3\u679c\uff1a\u968f\u673a\u589e\u91cf\u5e73\u65b9\u548c\u7684\u671f\u671b\u503c\uff0c\u6070\u597d\u7b49\u4e8e\u603b\u7684\u65f6\u95f4\u957f\u5ea6 \\(t\\)\u3002\u8fd9\u4e2a\u6c42\u548c\u5728\u968f\u673a\u5206\u6790\u4e2d\u88ab\u79f0\u4e3a\u8fc7\u7a0b\u7684\u4e8c\u6b21\u53d8\u5206\uff08Quadratic Variation\uff09\u3002</p> <p>\u66f4\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5f53 \\(n\\to\\infty\\) \u65f6\uff0c\u8fd9\u4e2a\u548c\u4e0d\u4ec5\u4ec5\u662f\u671f\u671b\u503c\u4e3a \\(t\\)\uff0c\u5b83\u4f1a\u6536\u655b\u5230\u786e\u5b9a\u7684\u503c \\(t\\)\u3002\u8fd9\u4e00\u7ed3\u8bba\u662f\u4f0a\u85e4\u5fae\u79ef\u5206\uff08It\u00f4 Calculus\uff09\u7684\u57fa\u77f3\uff0c\u901a\u5e38\u7528\u4e00\u4e2a\u7b80\u6d01\u4f46\u6781\u5176\u5f3a\u5927\u7684\u7b26\u53f7\u89c4\u5219\u6765\u8868\u793a\uff1a</p> \\[(dW_t)^2=dt\\] <p>\u8fd9\u4e0e\u666e\u901a\u5fae\u79ef\u5206\u4e2d \\((dt)^2=0\\) \u7684\u89c4\u5219\u5f62\u6210\u4e86\u9c9c\u660e\u5bf9\u6bd4\uff0c\u4e5f\u662f\u6240\u6709\u968f\u673a\u5fae\u79ef\u5206\u4e0e\u666e\u901a\u5fae\u79ef\u5206\u5dee\u5f02\u7684\u6700\u7ec8\u6765\u6e90\u3002</p> <p></p> <p>\u8fd9\u79cd\u5dee\u5f02\u7684\u6839\u672c\u539f\u56e0\u5728\u4e8e\u6da8\u843d\u7684\u6807\u5ea6\u884c\u4e3a\u3002\u4e00\u4e2a\u5149\u6ed1\u3001\u53ef\u5fae\u7684\u51fd\u6570\uff0c\u5728\u5fae\u5c0f\u533a\u95f4 \\(\\Delta t\\) \u5185\u7684\u53d8\u5316 \\(\\Delta f\\) \u6b63\u6bd4\u4e8e \\(\\Delta t\\)\u3002\u56e0\u6b64\uff0c\u5b83\u7684\u5e73\u65b9 \\((\\Delta f)^2\\) \u6b63\u6bd4\u4e8e \\((\\Delta t)^2\\)\uff0c\u662f\u66f4\u9ad8\u9636\u7684\u65e0\u7a77\u5c0f\uff0c\u5728\u79ef\u5206\u4e2d\u53ef\u4ee5\u5ffd\u7565\u3002\u800c\u7ef4\u7eb3\u8fc7\u7a0b\u7684\u8def\u5f84\u662f\u8fde\u7eed\u4f46\u5904\u5904\u4e0d\u53ef\u5fae\u7684\uff0c\u5177\u6709\u5206\u5f62\u7279\u5f81\u3002\u5b83\u5728 \\(\\Delta t\\) \u65f6\u95f4\u5185\u7684\u5178\u578b\u6da8\u843d\u5927\u5c0f\u4e0d\u662f \\(\\Delta t\\)\uff0c\u800c\u662f \\(\\sqrt{\\Delta t}\\)\u3002\u56e0\u6b64\uff0c\u5b83\u7684\u5e73\u65b9\u6da8\u843d \\((\\Delta W)^2\\) \u7684\u91cf\u7ea7\u662f \\((\\sqrt{\\Delta t})^2=\\Delta t\\)\u3002\u8fd9\u610f\u5473\u7740\uff0c\u968f\u673a\u6da8\u843d\u7684\u5e73\u65b9\u4e0e\u786e\u5b9a\u6027\u6f02\u79fb\u9879\uff08\u5982 \\(A(x)\\Delta t\\)\uff09\u662f\u540c\u9636\u7684\u65e0\u7a77\u5c0f\uff0c\u7edd\u4e0d\u80fd\u88ab\u5ffd\u7565\u3002\u8fd9\u6b63\u662f\u4f0a\u85e4\u5f15\u7406\uff08Ito's Lemma\uff09\u2014\u2014\u968f\u673a\u8fc7\u7a0b\u7684\u94fe\u5f0f\u6cd5\u5219\u2014\u2014\u4e3a\u4f55\u4f1a\u6709\u4e00\u4e2a\u989d\u5916\u4fee\u6b63\u9879\u7684\u6839\u672c\u539f\u56e0\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#22","title":"2.2 \u65b9\u5dee\u4e0e\u5747\u65b9\u6536\u655b","text":"<p>\u4e3a\u4e86\u8bc1\u660e \\(\\sum(\\Delta W_k)^2\\) \u786e\u5b9e\u6536\u655b\u4e8e\u4e00\u4e2a\u786e\u5b9a\u503c \\(t\\)\uff0c\u6211\u4eec\u9700\u8981\u8bc1\u660e\u5b83\u7684\u65b9\u5dee\u5728 \\(n\\to\\infty\\) \u65f6\u8d8b\u4e8e\u96f6\u3002</p> <p></p> <p>1. \u8ba1\u7b97\u65b9\u5dee\uff1a</p> <p>\u7531\u4e8e\u5404 \\(\\Delta W_k\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u548c\u7684\u65b9\u5dee\u7b49\u4e8e\u65b9\u5dee\u7684\u548c\uff1a</p> <p>$$ \\text{Var} = \\text{Var}\\left[\\sum_{k=0}^{n-1}(\\Delta W_k)^2\\right] = \\sum_{k=0}^{n-1} \\text{Var}[(\\Delta W_k)^2] $$ 2. \u5355\u4e2a\u589e\u91cf\u5e73\u65b9\u7684\u65b9\u5dee\uff1a</p> <p>\u6839\u636e\u65b9\u5dee\u5b9a\u4e49 \\(\\text{Var}[Z]=\\langle Z^2\\rangle-(\\langle Z\\rangle)^2\\)\uff0c\u6211\u4eec\u6709\uff1a</p> <p>$$ \\text{Var}[(\\Delta W_k)^2]=\\langle(\\Delta W_k^2)^2\\rangle-(\\langle\\Delta W_k^2\\rangle)^2=\\langle\\Delta W_k^4\\rangle-(\\langle\\Delta W_k^2\\rangle)^2 $$ 3. \u9ad8\u65af\u53d8\u91cf\u7684\u56db\u9636\u77e9\uff1a</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a \\(\\sigma^2\\) \u7684\u9ad8\u65af\u968f\u673a\u53d8\u91cf \\(Z\\)\uff0c\u5176\u56db\u9636\u77e9\u4e3a \\(\\langle Z^4\\rangle=3(\\sigma^2)^2\\)\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff08\\(2D=1\\)\uff09\uff0c\\(\\sigma^2=\\langle\\Delta W_k^2\\rangle=\\Delta t\\)\u3002\u56e0\u6b64\uff1a</p> \\[ \\langle\\Delta W_k^4\\rangle=3(\\Delta t)^2 \\] <ol> <li>\u4ee3\u5165\u8ba1\u7b97\uff1a</li> </ol> <p>$$    \\text{Var}[(\\Delta W_k)^2]=3(\\Delta t)^2-(\\Delta t)^2=2(\\Delta t)^2    $$</p> <ol> <li>\u603b\u65b9\u5dee\uff1a</li> </ol> <p>\u5c06\u5355\u4e2a\u65b9\u5dee\u52a0\u8d77\u6765\uff0c\u5e76\u4ee3\u5165 \\(\\Delta t=t/n\\)\uff1a</p> \\[ \\text{Var}=\\sum_{k=0}^{n-1}2(\\Delta t)^2=n\\cdot 2(\\frac{t}{n})^2=\\frac{2t^2}{n} \\] <ol> <li>\u53d6\u6781\u9650\uff1a</li> </ol> <p>\u5f53\u65f6\u95f4\u5206\u5272\u65e0\u9650\u52a0\u5bc6\u65f6\uff0c\\(n\\to\\infty\\)\uff0c\u603b\u65b9\u5dee\u8d8b\u4e8e\u96f6\uff1a</p> <p>$$ \\lim_{n\\to\\infty}\\text{Var}=\\lim_{n\\to\\infty}\\frac{2t^2}{n}=0 $$ \u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5176\u671f\u671b\u4e3a \\(t\\)\uff0c\u65b9\u5dee\u4e3a0\uff0c\u610f\u5473\u7740\u8fd9\u4e2a\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u662f\u4e00\u4e2a\u5728 \\(t\\) \u70b9\u7684 \\(\\delta\\) \u51fd\u6570\u2014\u2014\u5b83\u4e0d\u518d\u968f\u673a\uff0c\u800c\u662f\u786e\u5b9a\u5730\u7b49\u4e8e \\(t\\)\u3002\u8fd9\u79cd\u6536\u655b\u65b9\u5f0f\u88ab\u79f0\u4e3a\u5747\u65b9\u6536\u655b\uff08convergence in mean square\uff09\u3002\u8fd9\u4e3a\u6211\u4eec\u5199\u4e0b\u5982\u4e0b\u79ef\u5206\u6052\u7b49\u5f0f\u63d0\u4f9b\u4e86\u4e25\u683c\u7684\u6570\u5b66\u4f9d\u636e\uff1a</p> \\[\\int_0^t(dW_s)^2=t=\\int_0^t ds\\]"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#23","title":"2.3 \u8ba1\u7b97\u6a21\u62df\uff1a\u9a8c\u8bc1\u4e8c\u6b21\u53d8\u5206","text":"<p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6570\u503c\u6a21\u62df\u6765\u76f4\u89c2\u5730\u9a8c\u8bc1\u4e8c\u6b21\u53d8\u5206\u7406\u8bba\u3002\u4e0b\u9762\u7684Python\u4ee3\u7801\u6a21\u62df\u4e86\u4e00\u6761\u7ef4\u7eb3\u8fc7\u7a0b\u8def\u5f84\uff0c\u5e76\u8ba1\u7b97\u5176\u4e8c\u6b21\u53d8\u5206 \\(\\sum(\\Delta W_k)^2\\)\u3002\u901a\u8fc7\u6539\u53d8\u65f6\u95f4\u6b65\u6570 \\(N\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u5176\u7ed3\u679c\u5982\u4f55\u6536\u655b\u5230\u603b\u65f6\u957f \\(T\\)\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef simulate_quadratic_variation(T=1.0, N_steps_list=[100, 1000, 10000, 100000], num_trials=1000):\n    \"\"\"\n    Simulate and demonstrate convergence of quadratic variation\n    \"\"\"\n    results_mean = []\n    results_std = []\n\n    print(\"N_steps\\t\\tMean(QV)\\tStd(QV)\")\n    print(\"-\" * 40)\n\n    for N in N_steps_list:\n        dt = T / N\n        qvs = []\n        for _ in range(num_trials):\n            # Generate increments of a Brownian motion path\n            # 2D=1, so variance = dt\n            dW = np.random.normal(0, np.sqrt(dt), N)\n\n            # Calculate quadratic variation\n            qv = np.sum(dW**2)\n            qvs.append(qv)\n\n        mean_qv = np.mean(qvs)\n        std_qv = np.std(qvs)\n        results_mean.append(mean_qv)\n        results_std.append(std_qv)\n        print(f\"{N:&lt;10}\\t{mean_qv:.6f}\\t{std_qv:.6f}\")\n\n    # Plotting\n    plt.figure(figsize=(12, 5))\n\n    # Mean convergence plot\n    plt.subplot(1, 2, 1)\n    plt.plot(N_steps_list, results_mean, 'o-', label='Mean of Simulated QV')\n    plt.axhline(T, color='r', linestyle='--', label=f'Theoretical Value T={T}')\n    plt.xscale('log')\n    plt.xlabel('Number of Steps (N)')\n    plt.ylabel('Mean of Quadratic Variation')\n    plt.title('Convergence of Mean QV')\n    plt.legend()\n    plt.grid(True)\n\n    # Standard deviation convergence plot\n    plt.subplot(1, 2, 2)\n    plt.plot(N_steps_list, results_std, 'o-', label='Std Dev of Simulated QV')\n    # Theoretically standard deviation is proportional to 1/sqrt(N)\n    # Var = 2T^2/N =&gt; Std = T*sqrt(2/N)\n    theoretical_std = T * np.sqrt(2 / np.array(N_steps_list))\n    plt.plot(N_steps_list, theoretical_std, 'r--', label=r'Theoretical scaling $\\propto 1/\\sqrt{N}$')\n    plt.xscale('log')\n    plt.yscale('log')\n    plt.xlabel('Number of Steps (N)')\n    plt.ylabel('Standard Deviation of QV')\n    plt.title('Convergence of Std Dev of QV')\n    plt.legend()\n    plt.grid(True)\n\n    plt.tight_layout()\n    plt.show()\n\n# Run simulation\nsimulate_quadratic_variation(T=1.0)\n</code></pre> \u8fd0\u884c\u4ee3\u7801\u8f93\u51fa <pre><code>N_steps          Mean(QV)        Std(QV)\n----------------------------------------\n100             0.989475        0.138506\n1000            1.000001        0.045184\n10000           1.000812        0.014119\n100000          0.999990        0.004668\n</code></pre></p> <p></p> <p>\u6570\u503c\u6a21\u62df\u9a8c\u8bc1\u4e8c\u6b21\u53d8\u5206\u7406\u8bba\u3002\u5de6\u56fe\u663e\u793a\uff0c\u968f\u7740\u65f6\u95f4\u6b65\u6570N\u7684\u589e\u52a0\uff0c\u6a21\u62df\u5f97\u5230\u7684\u4e8c\u6b21\u53d8\u5206\uff08QV\uff09\u7684\u5747\u503c\u8fc5\u901f\u6536\u655b\u4e8e\u7406\u8bba\u503c T=1\u3002\u53f3\u56fe\u4ee5\u5bf9\u6570\u5750\u6807\u5c55\u793a\uff0c\u6a21\u62df\u5f97\u5230\u7684\u6807\u51c6\u5dee\uff08\u84dd\u7ebf\uff09\u4e0e\u7406\u8bba\u9884\u6d4b\u7684 \\(1/\\sqrt{N}\\) \u6807\u5ea6\uff08\u7ea2\u7ebf\uff09\u4e00\u81f4\uff0c\u8868\u660e\u5176\u65b9\u5dee\u786e\u5b9e\u968f\u7740 \\(N\\to\\infty\\) \u800c\u8d8b\u4e8e\u96f6\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#3","title":"3. \u4e58\u6027\u566a\u58f0\u53ca\u5176\u540e\u679c","text":""},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#31","title":"3.1 \u5f53\u566a\u58f0\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u72b6\u6001","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u8ba8\u8bba\u7684\u566a\u58f0 \\(\\xi(t)\\) \u6216 \\(dW_t\\) \u7684\u5f3a\u5ea6\u662f\u6052\u5b9a\u7684\uff0c\u4e0d\u968f\u7cfb\u7edf\u72b6\u6001 \\(x\\) \u7684\u53d8\u5316\u800c\u53d8\u5316\u3002\u8fd9\u79cd\u566a\u58f0\u88ab\u79f0\u4e3a\u52a0\u6027\u566a\u58f0\uff08Additive Noise\uff09\u3002\u7136\u800c\uff0c\u5728\u8bb8\u591a\u73b0\u5b9e\u7cfb\u7edf\u4e2d\uff0c\u968f\u673a\u6270\u52a8\u7684\u5f3a\u5ea6\u672c\u8eab\u5c31\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u5f53\u524d\u7684\u72b6\u6001\u3002\u8fd9\u7c7b\u566a\u58f0\u88ab\u79f0\u4e3a\u4e58\u6027\u566a\u58f0\uff08Multiplicative Noise\uff09\u3002</p> <p>\u4e00\u4e2a\u5177\u6709\u4e58\u6027\u566a\u58f0\u7684\u901a\u7528\u6717\u4e4b\u4e07\u65b9\u7a0b\u53ef\u4ee5\u5199\u6210\uff1a</p> \\[\\frac{dx(t)}{dt}=A(x,t)+C(x,t)\\Lambda(t)\\] <p>\u5176\u4e2d\uff0c\u566a\u58f0\u9879\u88ab\u4e58\u4ee5\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u72b6\u6001 \\(x\\) \u548c\u65f6\u95f4 \\(t\\) \u7684\u51fd\u6570 \\(C(x,t)\\)\u3002</p> <p>\u4e58\u6027\u566a\u58f0\u5728\u5404\u4e2a\u9886\u57df\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\uff1a</p> <ul> <li> <p>\u79cd\u7fa4\u52a8\u529b\u5b66\uff1a\u4e00\u4e2a\u89c4\u6a21\u4e3a \\(N\\) \u7684\u79cd\u7fa4\uff0c\u5176\u51fa\u751f\u548c\u6b7b\u4ea1\u4e8b\u4ef6\u7684\u968f\u673a\u6ce2\u52a8\u6570\u91cf\uff0c\u81ea\u7136\u4e0e\u79cd\u7fa4\u89c4\u6a21 \\(N\\) \u6210\u6b63\u6bd4\u3002\u4e00\u4e2a\u5927\u79cd\u7fa4\u7684\u968f\u673a\u4e8b\u4ef6\u6570\u8fdc\u591a\u4e8e\u5c0f\u79cd\u7fa4\u3002</p> </li> <li> <p>\u91d1\u878d\u5b66\uff1a\u4e00\u652f\u80a1\u7968\u7684\u4ef7\u683c\u6ce2\u52a8\u7387\uff08volatility\uff09\uff0c\u901a\u5e38\u88ab\u8ba4\u4e3a\u4e0e\u5176\u81ea\u8eab\u4ef7\u683c\u6210\u6b63\u6bd4\u3002\u4ef7\u683c\u8d8a\u9ad8\u7684\u80a1\u7968\uff0c\u5176\u4ef7\u683c\u7684\u7edd\u5bf9\u6ce2\u52a8\u503c\u4e5f\u8d8a\u5927\u3002\u8fd9\u6b63\u662f\u8457\u540d\u7684\u51e0\u4f55\u5e03\u6717\u8fd0\u52a8\u6a21\u578b\u7684\u57fa\u7840\u3002</p> </li> <li> <p>\u7269\u7406\u5b66\uff1a\u5f53\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u7684\u67d0\u4e2a\u53c2\u6570\uff08\u5982\u6e29\u5ea6\u3001\u538b\u529b\uff09\u53d1\u751f\u968f\u673a\u6da8\u843d\uff0c\u800c\u8fd9\u4e2a\u53c2\u6570\u53c8\u5f71\u54cd\u7cfb\u7edf\u7684\u6f14\u5316\u901f\u7387\u65f6\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e58\u6027\u566a\u58f0\u3002</p> </li> </ul>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#32","title":"3.2 \u4ece\u4e58\u6027\u5230\u52a0\u6027\uff1a\u4e00\u4e2a\u53d8\u6362\u548c\u4e00\u4e2a\u610f\u5916","text":"<p>\u5904\u7406\u4e58\u6027\u566a\u58f0\u7684SDE\u901a\u5e38\u6bd4\u52a0\u6027\u566a\u58f0\u66f4\u590d\u6742\u3002\u8bfe\u7a0b\u4e2d\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5de7\u5999\u7684\u53d8\u91cf\u4ee3\u6362\u65b9\u6cd5\uff0c\u8bd5\u56fe\u5c06\u4e58\u6027\u566a\u58f0\u95ee\u9898\u8f6c\u5316\u4e3a\u6211\u4eec\u5df2\u7ecf\u719f\u6089\u7684\u52a0\u6027\u566a\u58f0\u95ee\u9898\u3002</p> <p>\u8003\u8651SDE \\(\\dot{x}=A(x)+C(x)\\Lambda(t)\\)\u3002\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u65b0\u53d8\u91cf \\(y\\)\uff0c\u4f7f\u5f97\u5b83\u7684\u53d8\u5316\u7387\u4e0e \\(x\\) \u7684\u53d8\u5316\u7387\u901a\u8fc7 \\(C(x)\\) \u8054\u7cfb\u8d77\u6765\uff1a</p> \\[ dy = \\frac{dx}{C(x)} \\] <p>\u5c06\u539fSDE\u4ee3\u5165\uff0c\u6211\u4eec\u5f97\u5230 \\(y\\) \u7684\u65b9\u7a0b\uff1a</p> \\[\\frac{dy}{dt}=\\frac{1}{C(x)}\\frac{dx}{dt}=\\frac{A(x)}{C(x)}+\\Lambda(t)\\] <p>\u5982\u679c\u6211\u4eec\u628a \\(A(x)/C(x)\\) \u5199\u6210 \\(y\\) \u7684\u51fd\u6570 \\(\\tilde{A}(y)\\)\uff0c\u90a3\u4e48 \\(y\\) \u7684\u65b9\u7a0b\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u6807\u51c6\u7684\u52a0\u6027\u566a\u58f0SDE\uff1a</p> \\[\\frac{dy}{dt}=\\tilde{A}(y)+\\Lambda(t)\\] <p>\u5bf9\u4e8e\u8fd9\u4e2a\u5173\u4e8e \\(y\\) \u7684\u52a0\u6027\u566a\u58f0\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5199\u51fa\u5176\u6982\u7387\u5bc6\u5ea6 \\(\\tilde{p}(y,t)\\) \u6240\u6ee1\u8db3\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff08\u56de\u987e\u7b2c17\u8bb2\uff0c\u5e76\u8bbe\u566a\u58f0\u5f3a\u5ea6\u4e3a1\uff09\uff1a</p> \\[\\partial_t\\tilde{p}(y,t)=-\\partial_y[\\tilde{A}(y)\\tilde{p}(y,t)]+\\frac{1}{2}\\partial_y^2\\tilde{p}(y,t)\\] <p>\u73b0\u5728\uff0c\u6700\u5173\u952e\u7684\u4e00\u6b65\u662f\u5c06\u8fd9\u4e2a\u65b9\u7a0b\u53d8\u6362\u56de\u539f\u6765\u7684\u53d8\u91cf \\(x\\)\u3002\u8fd9\u9700\u8981\u7528\u5230\u4e24\u4e2a\u53d8\u6362\u5173\u7cfb\uff1a</p> <ol> <li> <p>\u5bfc\u6570\u53d8\u6362\uff1a\u6839\u636e\u94fe\u5f0f\u6cd5\u5219\uff0c\\(dy=dx/C(x)\\implies\\partial_x=\\frac{dy}{dx}\\partial_y=\\frac{1}{C(x)}\\partial_y\\implies\\partial_y=C(x)\\partial_x\\)\u3002</p> </li> <li> <p>\u6982\u7387\u5bc6\u5ea6\u53d8\u6362\uff1a\u6982\u7387\u5b88\u6052\u8981\u6c42 \\(p(x,t)dx=\\tilde{p}(y,t)dy\\)\uff0c\u56e0\u6b64 \\(\\tilde{p}(y,t)=p(x,t)\\frac{dx}{dy}=C(x)p(x,t)\\)\u3002</p> </li> </ol> <p>\u5c06\u8fd9\u4e24\u4e2a\u5173\u7cfb\u4ee3\u5165\u4e0a\u9762\u5173\u4e8e \\(\\tilde{p}\\) \u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7e41\u7410\u4f46\u76f4\u63a5\u7684\u4ee3\u6570\u8fd0\u7b97\uff0c\u6700\u7ec8\u5f97\u5230 \\(p(x,t)\\) \u7684\u65b9\u7a0b (4)\uff1a</p> \\[\\partial_tp(x,t)=-\\partial_x[(A(x)+\\frac{1}{2}C(x)C'(x))p(x,t)]+\\frac{1}{2}\\partial_x^2[C^2(x)p(x,t)]\\] <p>\u5bf9\u6bd4\u8fd9\u4e2a\u7ed3\u679c\u548c\u6211\u4eec\"\u5929\u771f\"\u9884\u671f\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u6f02\u79fb\u9879\uff08drift term\uff09\u4e2d\u591a\u51fa\u4e86\u4e00\u9879\uff1a\\(\\frac{1}{2}C(x)C'(x)\\)\u3002\u8fd9\u4e2a\u9879\u88ab\u79f0\u4e3a\"\u4f2a\u6f02\u79fb\"\uff08spurious drift\uff09\u6216\"\u4f0a\u85e4\u6f02\u79fb\"\uff08Ito drift\uff09\u3002\u5b83\u770b\u8d77\u6765\u50cf\u662f\u51ed\u7a7a\u51fa\u73b0\u7684\u4e00\u4e2a\u989d\u5916\u7684\u786e\u5b9a\u6027\u529b\uff0c\u8fd9\u5e76\u975e\u8ba1\u7b97\u9519\u8bef\uff0c\u800c\u662f\u968f\u673a\u5fae\u79ef\u5206\u6df1\u523b\u5185\u6db5\u7684\u4f53\u73b0\u3002</p> <p>\u8fd9\u4e2a\u989d\u5916\u6f02\u79fb\u9879\u7684\u51fa\u73b0\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u51e0\u4f55\u6548\u5e94\u3002\u60f3\u8c61\u4e00\u4e2a\u7c92\u5b50\u5728\u4e00\u6761\u7ebf\u4e0a\u968f\u673a\u6e38\u8d70\u3002\u5982\u679c\u5b83\u7684\u6b65\u957f\u662f\u56fa\u5b9a\u7684\uff08\u52a0\u6027\u566a\u58f0\uff09\uff0c\u90a3\u4e48\u5b83\u6ca1\u6709\u51c0\u6f02\u79fb\u3002\u4f46\u5982\u679c\u6b65\u957f\u4f9d\u8d56\u4e8e\u4f4d\u7f6e \\(C(x)\\)\uff08\u4e58\u6027\u566a\u58f0\uff09\uff0c\u60c5\u51b5\u5c31\u4e0d\u540c\u4e86\u3002\u5047\u8bbe\u5f53 \\(x&gt;0\\) \u65f6\u6b65\u957f\u66f4\u5927\u3002\u90a3\u4e48\uff0c\u5f53\u7c92\u5b50\u4ece\u539f\u70b9\u968f\u673a\u5411\u53f3\u8fc8\u51fa\u4e00\u6b65\u540e\uff0c\u5b83\u7684\u4e0b\u4e00\u6b65\uff08\u65e0\u8bba\u5411\u5de6\u8fd8\u662f\u5411\u53f3\uff09\u7684\u5e73\u5747\u6b65\u957f\u4f1a\u53d8\u5927\uff1b\u53cd\u4e4b\uff0c\u5982\u679c\u5b83\u5411\u5de6\u8fc8\u51fa\u4e00\u6b65\uff0c\u4e0b\u4e00\u6b65\u7684\u5e73\u5747\u6b65\u957f\u4f1a\u53d8\u5c0f\u3002\u957f\u6b64\u4ee5\u5f80\uff0c\u7c92\u5b50\u5728\u6b65\u957f\u66f4\u5927\u7684\u533a\u57df\u8fdb\u884c\u7684\"\u63a2\u7d22\"\u8303\u56f4\u66f4\u5e7f\uff0c\u5bfc\u81f4\u5b83\u6709\u4e00\u79cd\u51c0\u7684\u8d8b\u52bf\uff0c\u4ece\u6b65\u957f\u5c0f\u7684\u533a\u57df\u6f02\u79fb\u5230\u6b65\u957f\u5927\u7684\u533a\u57df\u3002\u8fd9\u4e2a\u4f0a\u85e4\u6f02\u79fb\u9879 \\(\\frac{1}{2}C(x)C'(x)\\) \u6b63\u662f\u5bf9\u6b64\u6548\u5e94\u7684\u6570\u5b66\u91cf\u5316\uff0c\u5b83\u6b63\u6bd4\u4e8e\u566a\u58f0\u5f3a\u5ea6 \\(C(x)\\) \u548c\u566a\u58f0\u5f3a\u5ea6\u7684\u68af\u5ea6 \\(C'(x)\\)\u3002\u5b83\u4e0d\u662f\u4f20\u7edf\u610f\u4e49\u4e0a\u7684\u529b\uff0c\u800c\u662f\u7531\u566a\u58f0\u7684\u51e0\u4f55\u7ed3\u6784\u4ea7\u751f\u7684\u7edf\u8ba1\u6027\u504f\u597d\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#4","title":"4. \u4e0e\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u4e4b\u4e89","text":"<p>\u7b2c\u4e09\u90e8\u5206\u4e2d\u51fa\u73b0\u7684\u795e\u79d8\"\u4f0a\u85e4\u6f02\u79fb\"\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u968f\u673a\u79ef\u5206\u5b9a\u4e49\u7684\u6a21\u7cca\u6027\u3002\u8fd9\u5f15\u51fa\u4e86\u968f\u673a\u5fae\u79ef\u5206\u4e2d\u4e00\u4e2a\u6838\u5fc3\u4e14\u5fae\u5999\u7684\u8bae\u9898\uff1a\u4f0a\u85e4\uff08It\u00f4\uff09\u79ef\u5206\u4e0e\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\uff08Stratonovich\uff09\u79ef\u5206\u7684\u533a\u522b\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#41","title":"4.1 \u968f\u673a\u79ef\u5206\u7684\u6a21\u7cca\u6027","text":"<p>\u6211\u4eec\u73b0\u5728\u4f7f\u7528\u66f4\u4e25\u8c28\u7684SDE\u5fae\u5206\u5f62\u5f0f\u6765\u4e66\u5199\u65b9\u7a0b\uff1a</p> \\[dx_t=A(x_t,t)dt+C(x_t,t)dW_t\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u5176\u79ef\u5206\u5f62\u5f0f\u7684\u7b80\u5199\u3002\u5176\u4e2d\u7684\u968f\u673a\u90e8\u5206 \\(\\int C(x_\\tau,\\tau)dW_\\tau\\) \u5728\u5b9a\u4e49\u65f6\u9047\u5230\u4e86\u56f0\u96be\u3002\u6211\u4eec\u81ea\u7136\u5730\u4f1a\u60f3\u5230\u7528\u9ece\u66fc\u548c\uff08Riemann sum\uff09\u6765\u5b9a\u4e49\u5b83\uff1a</p> \\[\\int_{t_0}^t C(x_\\tau,\\tau)dW_\\tau=\\lim_{n\\to\\infty}\\sum_{i=1}^n C(x_{\\bar{t}_i},\\bar{t}_i)\\Delta W_i\\] <p>\u5176\u4e2d \\(\\Delta W_i=W(t_i)-W(t_{i-1})\\)\uff0c\u800c \\(\\bar{t}_i\\) \u662f\u5728\u5c0f\u533a\u95f4 \\([t_{i-1},t_i]\\) \u5185\u7684\u67d0\u4e2a\u53d6\u6837\u70b9\u3002</p> <p>\u5bf9\u4e8e\u666e\u901a\u7684\u9ece\u66fc-\u65af\u8482\u5c14\u6770\u65af\u79ef\u5206\uff08Riemann-Stieltjes integral\uff09\uff0c\u5982\u679c\u79ef\u5206\u51fd\u6570\u548c\u88ab\u79ef\u51fd\u6570\u90fd\u662f\"\u884c\u4e3a\u826f\u597d\"\u7684\uff08\u4f8b\u5982\uff0c\u88ab\u79ef\u51fd\u6570\u6709\u754c\u53d8\u5dee\uff09\uff0c\u90a3\u4e48\u65e0\u8bba \\(\\bar{t}_i\\) \u5728\u533a\u95f4\u5185\u5982\u4f55\u53d6\u503c\uff0c\u6781\u9650\u90fd\u662f\u552f\u4e00\u7684\u3002\u7136\u800c\uff0c\u7ef4\u7eb3\u8fc7\u7a0b \\(W_t\\) \u7684\u8def\u5f84\u867d\u7136\u8fde\u7eed\uff0c\u4f46\u5176\u603b\u53d8\u5dee\u662f\u65e0\u7a77\u5927\u7684\uff08\u8def\u5f84\u6781\u5176\u66f2\u6298\uff09\u3002\u8fd9\u5bfc\u81f4\u4e86\u4e00\u4e2a\u60ca\u4eba\u7684\u540e\u679c\uff1a</p> <p>\\(\\bar{t}_i\\) \u7684\u4e0d\u540c\u9009\u62e9\uff0c\u4f1a\u5bfc\u81f4\u79ef\u5206\u6536\u655b\u5230\u5b8c\u5168\u4e0d\u540c\u7684\u7ed3\u679c\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#42","title":"4.2 \u4e24\u79cd\u7ea6\u5b9a\uff0c\u4e24\u79cd\u5fae\u79ef\u5206","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u79cd\u6a21\u7cca\u6027\uff0c\u6570\u5b66\u5bb6\u548c\u7269\u7406\u5b66\u5bb6\u53d1\u5c55\u51fa\u4e86\u4e24\u79cd\u4e3b\u6d41\u7684\u79ef\u5206\u7ea6\u5b9a\uff0c\u5b83\u4eec\u5206\u522b\u5b9a\u4e49\u4e86\u4e00\u5957\u81ea\u6d3d\u7684\u5fae\u79ef\u5206\u4f53\u7cfb\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#ito-integral","title":"\u4f0a\u85e4\u79ef\u5206 (It\u00f4 Integral)","text":"<ul> <li>\u5b9a\u4e49\uff1a\u9009\u62e9\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4f5c\u4e3a\u53d6\u6837\u70b9\uff0c\u5373 \\(\\bar{t}_i=t_{i-1}\\)\u3002</li> </ul> <p>$$   \\int_{t_0}^t C(x_\\tau)dW_\\tau:=\\lim_{n\\to\\infty}\\sum_{i=1}^n C(x_{t_{i-1}})\\Delta W_i   $$</p> <ul> <li> <p>\u6838\u5fc3\u6027\u8d28\uff1a\u8fd9\u79cd\u5b9a\u4e49\u65b9\u5f0f\u5177\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7279\u6027\uff0c\u5373\u975e\u9884\u89c1\u6027\uff08non-anticipating\uff09\u3002\u5728\u6c42\u548c\u7684\u6bcf\u4e00\u9879\u4e2d\uff0c\u88ab\u79ef\u51fd\u6570 \\(C(x_{t_{i-1}})\\) \u7684\u503c\u662f\u5728\u968f\u673a\"\u8e22\u52a8\" \\(\\Delta W_i\\) \u53d1\u751f\u4e4b\u524d\u786e\u5b9a\u7684\u3002\u56e0\u6b64\uff0c\\(C(x_{t_{i-1}})\\) \u4e0e \\(\\Delta W_i\\) \u662f\u7edf\u8ba1\u4e0d\u76f8\u5173\u7684\uff0c\u5373 \\(\\langle C(x_{t_{i-1}})\\Delta W_i\\rangle=\\langle C(x_{t_{i-1}})\\rangle\\langle\\Delta W_i\\rangle=0\\)\u3002\u8fd9\u4f7f\u5f97\u4f0a\u85e4\u79ef\u5206\u5177\u6709\u9785\uff08martingale\uff09\u7684\u6027\u8d28\uff0c\u5373\u5176\u671f\u671b\u503c\u4e0d\u968f\u65f6\u95f4\u53d8\u5316\uff08\u5728\u6ca1\u6709\u6f02\u79fb\u9879\u7684\u60c5\u51b5\u4e0b\uff09\u3002\u8fd9\u4e2a\u6027\u8d28\u5728\u91d1\u878d\u6570\u5b66\u4e2d\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u7b26\u5408\"\u4e0d\u80fd\u5229\u7528\u672a\u6765\u7684\u4ef7\u683c\u4fe1\u606f\u6765\u51b3\u5b9a\u5f53\u524d\u7684\u4ea4\u6613\u7b56\u7565\"\u8fd9\u4e00\u57fa\u672c\u539f\u5219\u3002</p> </li> <li> <p>\u94fe\u5f0f\u6cd5\u5219\uff1a\u4f0a\u85e4\u79ef\u5206\u4e0d\u6ee1\u8db3\u7ecf\u5178\u7684\u94fe\u5f0f\u6cd5\u5219\uff0c\u9700\u8981\u4f7f\u7528\u4fee\u6b63\u540e\u7684\u4f0a\u85e4\u5f15\u7406\u3002</p> </li> </ul>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#stratonovich-integral","title":"\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206 (Stratonovich Integral)","text":"<ul> <li>\u5b9a\u4e49\uff1a\u9009\u62e9\u533a\u95f4\u7684\u4e2d\u70b9\u4f5c\u4e3a\u53d6\u6837\u70b9\uff0c\u5373 \\(\\bar{t}_i=(t_i+t_{i-1})/2\\)\u3002</li> </ul> <p>$$   \\int_{t_0}^t C(x_\\tau)\\circ dW_\\tau:=\\lim_{n\\to\\infty}\\sum_{i=1}^n C(x_{\\frac{t_i+t_{i-1}}{2}})\\Delta W_i   $$   \uff08\u901a\u5e38\u7528 \\(\\circ\\) \u7b26\u53f7\u8868\u793a\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206\uff09\u3002</p> <ul> <li> <p>\u6838\u5fc3\u6027\u8d28\uff1a\u8fd9\u79cd\u5bf9\u79f0\u7684\u53d6\u70b9\u65b9\u5f0f\uff0c\u4f7f\u5f97\u5176\u5fae\u79ef\u5206\u4f53\u7cfb\u6ee1\u8db3\u7ecf\u5178\u7684\u94fe\u5f0f\u6cd5\u5219\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u51fd\u6570 \\(f(W_t)\\)\uff0c\u5176\u5fae\u5206\u5c31\u662f \\(df=f'(W_t)\\circ dW_t\\)\u3002\u8fd9\u4f7f\u5f97\u5b83\u5bf9\u4e8e\u4e60\u60ef\u7ecf\u5178\u5fae\u79ef\u5206\u7684\u7269\u7406\u5b66\u5bb6\u6765\u8bf4\u66f4\u4e3a\u76f4\u89c2\uff0c\u5e76\u4e14\u5728\u5904\u7406\u6d41\u5f62\u4e0a\u7684\u968f\u673a\u8fd0\u52a8\u7b49\u51e0\u4f55\u95ee\u9898\u65f6\u5fc5\u4e0d\u53ef\u5c11\u3002</p> </li> <li> <p>\u7269\u7406\u6e0a\u6e90\uff1a\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u66f4\u771f\u5b9e\u7684\u7269\u7406\u8fc7\u7a0b\u7684\u6570\u5b66\u6781\u9650\u3002\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u566a\u58f0\uff08\u79f0\u4e3a\"\u6709\u8272\u566a\u58f0\"\uff09\u603b\u662f\u6709\u7740\u4e00\u4e2a\u6781\u77ed\u4f46\u975e\u96f6\u7684\u5173\u8054\u65f6\u95f4 \\(\\tau_c\\)\u3002\u8457\u540d\u7684\u738b-\u624e\u624d\u5b9a\u7406\uff08Wong-Zakai theorem\uff09\u8bc1\u660e\uff0c\u5f53\u8fd9\u4e2a\u5173\u8054\u65f6\u95f4 \\(\\tau_c\\to 0\\) \u65f6\uff0c\u7531\u6709\u8272\u566a\u58f0\u9a71\u52a8\u7684\u7cfb\u7edf\u7684\u89e3\u4f1a\u6536\u655b\u5230\u7531\u767d\u566a\u58f0\u9a71\u52a8\u7684\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947SDE\u7684\u89e3\u3002\u56e0\u6b64\uff0c\u5b83\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u66f4\"\u7269\u7406\"\u7684\u9009\u62e9\u3002</p> </li> </ul>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#43","title":"4.3 \u8fde\u63a5\u4e24\u79cd\u5fae\u79ef\u5206\uff0c\u89e3\u5f00\"\u4f2a\u6f02\u79fb\"\u4e4b\u8c1c","text":"<p>\u8fd9\u4e24\u79cd\u79ef\u5206\u5e76\u975e\u76f8\u4e92\u72ec\u7acb\uff0c\u5b83\u4eec\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u7cbe\u786e\u7684\u516c\u5f0f\u76f8\u4e92\u8f6c\u6362\uff1a</p> \\[\\int_0^t C(x_s)\\circ dW_s\\text{(Stratonovich)}=\\int_0^t C(x_s)dW_s\\text{(Ito)}+\\frac{1}{2}\\int_0^t C(x_s)\\frac{\\partial C(x_s)}{\\partial x}ds\\] <p>\u8c1c\u5e95\u5c31\u6b64\u63ed\u6653\uff01\u4e24\u79cd\u79ef\u5206\u7684\u5dee\uff0c\u6070\u597d\u5c31\u662f\u6211\u4eec\u5728\u7b2c\u4e09\u90e8\u5206\u9047\u5230\u7684\u90a3\u4e2a\"\u4f2a\u6f02\u79fb\"\u9879\u3002\u8fd9\u610f\u5473\u7740\uff1a</p> <ul> <li> <p>\u6211\u4eec\u5728\u7b2c\u4e09\u90e8\u5206\u901a\u8fc7\u53d8\u91cf\u4ee3\u6362\u63a8\u5bfc\u51fa\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff0c\u5b9e\u9645\u4e0a\u662f\u4e0e\u4f0a\u85e4SDE\u76f8\u5bf9\u5e94\u7684\u3002</p> </li> <li> <p>\u5982\u679c\u6211\u4eec\u4ece\u4e00\u4e2a\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947SDE\u51fa\u53d1\uff0c\u5373 \\(dx_t=A(x_t)dt+C(x_t)\\circ dW_t\\)\uff0c\u90a3\u4e48\u5b83\u5bf9\u5e94\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u7684\u6f02\u79fb\u9879\u5c31\u662f \\(A(x)\\)\uff0c\u4e0d\u5305\u542b\u989d\u5916\u7684 \\(\\frac{1}{2}C(x)C'(x)\\) \u9879\u3002</p> </li> </ul> <p>\u6240\u4ee5\uff0c\"\u4f0a\u85e4-\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u4e4b\u4e89\"\u5e76\u975e\u4e00\u4e2a\u6570\u5b66\u4e0a\u7684\u5bf9\u9519\u95ee\u9898\uff0c\u800c\u662f\u4e00\u4e2a\u7269\u7406\u5efa\u6a21\u7684\u9009\u62e9\u95ee\u9898\u3002\u4f60\u9009\u62e9\u54ea\u79cd\u5fae\u79ef\u5206\uff0c\u5c31\u7b49\u4e8e\u9009\u62e9\u4e86\u5982\u4f55\u89e3\u91ca\u566a\u58f0\u7684\u7269\u7406\u6765\u6e90\uff0c\u5e76\u51b3\u5b9a\u4e86\u7cfb\u7edf\u6982\u7387\u6f14\u5316\u4e2d\u7684\u6709\u6548\u6f02\u79fb\u9879\u3002</p> \u7279\u6027 \u4f0a\u85e4\u79ef\u5206 (It\u00f4 Integral) \u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206 (Stratonovich Integral) \u6c42\u548c\u53d6\u6837\u70b9 \u533a\u95f4\u5de6\u7aef\u70b9: \\(t_{i-1}\\) \u533a\u95f4\u4e2d\u70b9: \\((t_{i}+t_{i-1})/2\\) \u94fe\u5f0f\u6cd5\u5219 \u4fee\u6b63\u7684\u94fe\u5f0f\u6cd5\u5219 (\u4f0a\u85e4\u5f15\u7406) \u9075\u5b88\u7ecf\u5178\u94fe\u5f0f\u6cd5\u5219 \u9785\u6027\u8d28 \\(\\int C(x_{t})dW_{t}\\) \u662f\u9785 \u4e0d\u4e00\u5b9a\u662f\u9785 \u7269\u7406\u6a21\u578b \u7406\u60f3\u5316\u7684\u767d\u566a\u58f0\uff1b\u975e\u9884\u89c1\u6027\u7cfb\u7edf (\u5982\u91d1\u878d) \u6709\u9650\u5173\u8054\u65f6\u95f4\u7684\u6709\u8272\u566a\u58f0\u7684\u6781\u9650 (\u5982\u7269\u7406) F-P\u65b9\u7a0b\u6f02\u79fb\u9879 \\(A(x)+\\frac{1}{2} C(x)C^{\\prime}(x)\\) \\(A(x)\\) \u6570\u503c\u683c\u5f0f \u6b27\u62c9-\u4e38\u5c71\u6cd5 (Euler-Maruyama) \u6b27\u62c9-\u4f11\u6069\u6cd5 (Euler-Heun) / Milstein\u6cd5"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#44-sde","title":"4.4 \u8ba1\u7b97\u6a21\u62df\uff1a\u4f0a\u85e4\u4e0e\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947SDE\u7684\u8f68\u8ff9\u5dee\u5f02","text":"<p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6a21\u62df\u4e00\u4e2a\u7b80\u5355\u7684\u4e58\u6027\u566a\u58f0SDE\u6765\u76f4\u89c2\u611f\u53d7\u4e24\u79cd\u79ef\u5206\u7684\u533a\u522b\u3002\u91d1\u878d\u5b66\u4e2d\u7684\u51e0\u4f55\u5e03\u6717\u8fd0\u52a8\uff08Geometric Brownian Motion, GBM\uff09\u662f\u4e00\u4e2a\u7edd\u4f73\u7684\u4f8b\u5b50\uff1a</p> \\[dx_t=\\mu x_t dt+\\sigma x_t dW_t\\] <p>\u5176\u4e2d \\(\\mu\\) \u662f\u6f02\u79fb\u7387\uff0c\\(\\sigma\\) \u662f\u6ce2\u52a8\u7387\u3002</p> <ul> <li>\u4f0a\u85e4\u5f62\u5f0f\u6a21\u62df (\u6b27\u62c9-\u4e38\u5c71\u6cd5)\uff1a</li> </ul> <p>\u8fd9\u662f\u6700\u76f4\u63a5\u7684\u79bb\u6563\u5316\uff0c\u5bf9\u5e94\u4f0a\u85e4\u79ef\u5206\u7684\u5de6\u7aef\u70b9\u53d6\u6837\u3002</p> <p>$$   x_{i+1}=x_i+\\mu x_i\\Delta t+\\sigma x_i\\Delta W_i   $$</p> <ul> <li>\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u5f62\u5f0f\u6a21\u62df (\u6b27\u62c9-\u4f11\u6069\u6cd5)\uff1a</li> </ul> <p>\u8fd9\u662f\u4e00\u79cd\u9884\u6d4b-\u6821\u6b63\u683c\u5f0f\uff0c\u8fd1\u4f3c\u4e86\u4e2d\u70b9\u53d6\u6837\u7684\u6548\u679c\u3002</p> <ol> <li> <p>\u9884\u6d4b\u6b65 (Euler-Maruyama)\uff1a      $$      \\tilde{x}_{i+1}=x_i+\\mu x_i\\Delta t+\\sigma x_i\\Delta W_i      $$</p> </li> <li> <p>\u6821\u6b63\u6b65\uff1a      $$      x_{i+1}=x_i+\\mu x_i\\Delta t+\\frac{\\sigma}{2}(x_i+\\tilde{x}_{i+1})\\Delta W_i      $$</p> </li> </ol> <p>\u4e0b\u9762\u7684Python\u4ee3\u7801\u4f7f\u7528\u76f8\u540c\u7684\u968f\u673a\u6570\u5e8f\u5217\uff0c\u5206\u522b\u6a21\u62df\u4e86\u4f0a\u85e4\u548c\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u4e24\u79cd\u89e3\u91ca\u4e0b\u7684GBM\u8fc7\u7a0b\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n# Can use sdeint library for more complex SDE solving\n# import sdeint\n\n# --- Parameter settings ---\nx0 = 1.0          # Initial value\nT = 1.0           # Total time\nN = 1000          # Number of time steps\ndt = T / N        # Time step size\nmu = 0.1          # Drift rate\nsigma = 0.4       # Volatility\nnum_paths = 500   # Number of simulated trajectories\n\n# --- Simulation ---\n# Generate Wiener increments shared by all paths\ndW = np.random.normal(0, np.sqrt(dt), (num_paths, N))\n\n# Initialize path arrays\nx_ito = np.zeros((num_paths, N + 1))\nx_stratonovich = np.zeros((num_paths, N + 1))\nx_ito[:, 0] = x0\nx_stratonovich[:, 0] = x0\n\n# Iterative solving\nfor i in range(N):\n    # Ito (Euler-Maruyama)\n    x_ito[:, i+1] = x_ito[:, i] + mu * x_ito[:, i] * dt + sigma * x_ito[:, i] * dW[:, i]\n\n    # Stratonovich (Euler-Heun)\n    # Prediction step\n    x_pred = x_stratonovich[:, i] + mu * x_stratonovich[:, i] * dt + sigma * x_stratonovich[:, i] * dW[:, i]\n    # Correction step\n    g_avg = 0.5 * (sigma * x_stratonovich[:, i] + sigma * x_pred)\n    x_stratonovich[:, i+1] = x_stratonovich[:, i] + mu * x_stratonovich[:, i] * dt + g_avg * dW[:, i]\n\n# --- Plotting ---\ntime_axis = np.linspace(0, T, N + 1)\nmean_ito = np.mean(x_ito, axis=0)\nmean_stratonovich = np.mean(x_stratonovich, axis=0)\n\n# Theoretical mean\n# Ito interpretation: E[x(t)] = x0 * exp(mu * t)\n# Stratonovich interpretation: E[x(t)] = x0 * exp((mu + 0.5*sigma^2) * t)\ntheoretical_mean_ito = x0 * np.exp(mu * time_axis)\ntheoretical_mean_stratonovich = x0 * np.exp((mu + 0.5 * sigma**2) * time_axis)\n\nplt.figure(figsize=(10, 6))\nplt.plot(time_axis, mean_ito, label='Ito (Euler-Maruyama) Mean')\nplt.plot(time_axis, mean_stratonovich, label='Stratonovich (Euler-Heun) Mean')\nplt.plot(time_axis, theoretical_mean_ito, 'k--', label='Theoretical Ito Mean $x_0 e^{\\mu t}$')\n# plt.plot(time_axis, theoretical_mean_stratonovich, 'g:', label='Theoretical Stratonovich Mean')\nplt.title('Comparison of Ito and Stratonovich Simulations (Mean of 500 paths)')\nplt.xlabel('Time $t$')\nplt.ylabel('Mean value $\\langle x(t) \\\\rangle$')\nplt.legend()\nplt.grid(True)\nplt.show()\n</code></pre> <p></p> <p>\u5bf9\u540c\u4e00\u4e2a\u51e0\u4f55\u5e03\u6717\u8fd0\u52a8SDE\u8fdb\u884c\u6570\u503c\u6a21\u62df\uff0c\u5206\u522b\u91c7\u7528\u4f0a\u85e4\uff08\u84dd\u7ebf\uff09\u548c\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\uff08\u6a59\u7ebf\uff09\u7684\u6570\u503c\u683c\u5f0f\u3002\u56fe\u4e2d\u663e\u793a\u7684\u662f500\u6761\u8f68\u8ff9\u7684\u5e73\u5747\u8def\u5f84\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u89e3\u91ca\u4e0b\u7684\u8f68\u8ff9\u5e73\u5747\u503c\u7cfb\u7edf\u6027\u5730\u9ad8\u4e8e\u4f0a\u85e4\u89e3\u91ca\u4e0b\u7684\u8f68\u8ff9\uff0c\u540e\u8005\u4e0e\u7406\u8bba\u4e0a\u7684\u4f0a\u85e4\u89e3\u7684\u671f\u671b\u503c \\(x_0e^{\\mu t}\\)\uff08\u9ed1\u8272\u865a\u7ebf\uff09\u543b\u5408\u3002\u8fd9\u76f4\u89c2\u5730\u5c55\u793a\u4e86\u4e24\u79cd\u4e0d\u540c\u79ef\u5206\u7ea6\u5b9a\u5bfc\u81f4\u7684\u6709\u6548\u6f02\u79fb\u5dee\u5f02\u3002</p>"},{"location":"zh/notes/20.%20%E9%9A%8F%E6%9C%BA%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/#_2","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u6559\u6388\u5e26\u9886\u6211\u4eec\u5b8c\u6210\u4e86\u4e00\u6b21\u4ece\u7269\u7406\u76f4\u89c9\u5230\u6570\u5b66\u4e25\u8c28\u7684\u65c5\u7a0b\u3002\u6211\u4eec\u4ece\u76f4\u89c2\u4f46\u5b9a\u4e49\u6a21\u7cca\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u51fa\u53d1\uff0c\u901a\u8fc7\u5f15\u5165\u7ef4\u7eb3\u8fc7\u7a0b\uff0c\u5efa\u7acb\u4e86\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff08SDE\uff09\u8fd9\u5957\u4e25\u8c28\u7684\u6570\u5b66\u8bed\u8a00\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e2a\u7531\u968f\u673a\u6027\u4e3b\u5bfc\u7684\u65b0\u4e16\u754c\u9075\u5faa\u7740\u4e00\u5957\u5947\u7279\u7684\u6cd5\u5219\uff0c\u5176\u6838\u5fc3\u662f \\((dW_t)^2=dt\\)\u3002\u8fd9\u4e00\u89c4\u5219\u98a0\u8986\u4e86\u7ecf\u5178\u5fae\u79ef\u5206\u7684\u8ba4\u77e5\uff0c\u5e76\u76f4\u63a5\u50ac\u751f\u4e86\u968f\u673a\u5206\u6790\u7684\u57fa\u77f3\u2014\u2014\u4f0a\u85e4\u5f15\u7406\u3002</p> <p>\u8fdb\u4e00\u6b65\uff0c\u5728\u63a2\u8ba8\u66f4\u8d34\u8fd1\u73b0\u5b9e\u7684\u4e58\u6027\u566a\u58f0\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u63ed\u793a\u4e86\u968f\u673a\u79ef\u5206\u5b9a\u4e49\u672c\u8eab\u7684\u6a21\u7cca\u6027\u3002\u8fd9\u5bfc\u81f4\u4e86\u4f0a\u85e4\u548c\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u4e24\u79cd\u4e0d\u540c\u7684\u5fae\u79ef\u5206\u4f53\u7cfb\u3002\u6211\u4eec\u6700\u7ec8\u9610\u660e\uff0c\u8fd9\u4e24\u79cd\u4f53\u7cfb\u5e76\u65e0\u5bf9\u9519\u4e4b\u5206\uff0c\u800c\u662f\u5bf9\u5e94\u7740\u5bf9\u566a\u58f0\u6765\u6e90\u4e0d\u540c\u7684\u7269\u7406\u5efa\u6a21\u5047\u8bbe\u3002\u4f0a\u85e4\u79ef\u5206\u5f3a\u8c03\u4e25\u683c\u7684\u56e0\u679c\u5f8b\uff0c\u662f\u91d1\u878d\u7b49\u9886\u57df\u7684\u9996\u9009\uff1b\u800c\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206\u4fdd\u7559\u4e86\u7ecf\u5178\u5fae\u79ef\u5206\u7684\u5f62\u5f0f\uff0c\u5e76\u4e0e\u771f\u5b9e\u7269\u7406\u7cfb\u7edf\u4e2d\u7684\u6709\u8272\u566a\u58f0\u6781\u9650\u76f8\u5bf9\u5e94\u3002\u4e24\u8005\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u6070\u597d\u89e3\u91ca\u4e86\u4e58\u6027\u566a\u58f0\u4e2d\u51fa\u73b0\u7684\u795e\u79d8\"\u4f2a\u6f02\u79fb\"\u9879\u3002</p> <p>\u638c\u63e1\u4e86\u672c\u8bb2\u4ecb\u7ecd\u7684\u6570\u5b66\u5de5\u5177\uff0c\u5c31\u5982\u540c\u83b7\u5f97\u4e86\u4e00\u5f20\u8fdb\u5165\u968f\u673a\u52a8\u529b\u5b66\u4e16\u754c\u7684\u5730\u56fe\u3002\u5728\u540e\u7eed\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u8fd0\u7528\u8fd9\u5957\u5f3a\u5927\u7684\u8bed\u8a00\uff0c\u53bb\u5b9a\u91cf\u5730\u5206\u6790\u548c\u9884\u6d4b\u7269\u7406\u3001\u5316\u5b66\u3001\u751f\u7269\u7b49\u9886\u57df\u4e2d\u66f4\u4e3a\u590d\u6742\u7684\u968f\u673a\u7cfb\u7edf\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/","title":"\u5f15\u8a00","text":"<p>\u5728\u4e0a\u4e00\u8bb2(\u7b2c20\u8bb2)\u4e2d,Erwin Frey \u6559\u6388\u5df2\u7ecf\u6b63\u5f0f\u5f15\u5165\u4e86\u968f\u673a\u5fae\u5206\u65b9\u7a0b(SDEs)\u4f5c\u4e3a\u63cf\u8ff0\u53d7\u968f\u673a\u566a\u58f0\u5f71\u54cd\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u5f3a\u5927\u5de5\u5177\u3002\u6211\u4eec\u5b8c\u6210\u4e86\u4ece\u7269\u7406\u4e0a\u76f4\u89c2\u4f46\u6570\u5b66\u4e0a\u4e0d\u4e25\u8c28\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u5230\u5f62\u5f0f\u4e0a\u66f4\u4e25\u8c28\u7684SDE\u7684\u8fc7\u6e21,\u5176\u6838\u5fc3\u662f\u5c06\u884c\u4e3a\u5947\u5f02\u7684\u767d\u566a\u58f0 \\(\\xi(t)\\) \u66ff\u6362\u4e3a\u5176\u79ef\u5206\u2014\u2014\u884c\u4e3a\u826f\u597d\u7684\u7ef4\u7eb3\u8fc7\u7a0b \\(W(t)\\)\u3002 \u7136\u800c,\u8fd9\u4e5f\u7ed9\u6211\u4eec\u7559\u4e0b\u4e86\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u6838\u5fc3\u95ee\u9898:\u5982\u4f55\u5bf9\u5305\u542b\u968f\u673a\u589e\u91cf \\(dW_t\\) \u7684\u9879\u8fdb\u884c\u79ef\u5206?\u6211\u4eec\u521d\u6b65\u7aa5\u89c1\u4e86\u968f\u673a\u5fae\u79ef\u5206\u7684\u60ca\u5947\u4e4b\u5904,\u5373 \\((dW_t)^2 = dt\\),\u8fd9\u9884\u793a\u7740\u5b83\u5c06\u9075\u5faa\u4e00\u5957\u4e0e\u7ecf\u5178\u5fae\u79ef\u5206\u622a\u7136\u4e0d\u540c\u7684\u6cd5\u5219\u3002</p> <p>\u8fd9\u8282\u8bfe\u5c06\u8fdb\u4e00\u6b65\u4ecb\u7ecd\u4e0a\u4e00\u8282\u63d0\u53ca\u7684\u6838\u5fc3\u6570\u5b66\u5de5\u5177\u2014\u2014\u4f0a\u85e4\u5fae\u79ef\u5206 (Ito's Calculus)\u3002\u8fd9\u8282\u8bfe\u5c06\u4ece\u4e0a\u4e00\u8bb2\u5b9a\u4e49\u968f\u673a\u79ef\u5206\u7684\u6a21\u7cca\u4e4b\u5904\u51fa\u53d1,\u7cbe\u786e\u5730\u5efa\u7acb\u8d77\u4e00\u5957\u9002\u7528\u4e8e\u968f\u673a\u8fc7\u7a0b\u7684\u5fae\u79ef\u5206\u4f53\u7cfb\u3002\u4f0a\u85e4\u516c\u5f0f (Ito's Formula)\u5728\u968f\u673a\u5fae\u79ef\u5206\u4e2d\u7684\u5730\u4f4d\u582a\u6bd4\u7ecf\u5178\u5fae\u79ef\u5206\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219,\u5e76\u63ed\u793a\u968f\u673a\u6027\u5982\u4f55\u5f15\u5165\u4e00\u4e2a\u989d\u5916\u7684\"\u4fee\u6b63\u9879\"\u3002</p> <p>\u6b64\u5916,\u5229\u7528\u8fd9\u4e00\u5f3a\u5927\u5de5\u5177,\u8fd9\u8282\u8bfe\u5c06\u5efa\u7acb\u8d77\u4ece\u5fae\u89c2\u968f\u673a\u8f68\u8ff9(\u4f0a\u85e4SDE)\u5230\u5b8f\u89c2\u6982\u7387\u6f14\u5316(\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b Fokker-Planck Equation)\u7684\u6865\u6881\u3002\u6700\u540e,\u4e0a\u4e00\u8282\u8bfe\u5df2\u7ecf\u7b80\u8981\u63d0\u53ca\u4e24\u79cd\u968f\u673a\u79ef\u5206\u2014\u2014\u4f0a\u85e4\u79ef\u5206 (Ito integral) \u548c\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206 (Stratonovich integral),\u8fd9\u8282\u8bfe\u5c06\u8be6\u7ec6\u7406\u89e3\u5b83\u4eec\u7684\u7269\u7406\u80cc\u666f\u5dee\u5f02,\u5e76\u9610\u660e\u5b83\u4eec\u4e4b\u95f4\u7684\u7cbe\u786e\u8f6c\u6362\u5173\u7cfb\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#1","title":"1. \u56de\u987e:\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u4e0e\u4f0a\u85e4\u79ef\u5206","text":"<p>\u5728\u524d\u9762\u51e0\u8bb2\u4e2d,\u6211\u4eec\u5b66\u4e60\u4e86\u5982\u4f55\u63cf\u8ff0\u4e00\u4e2a\u968f\u673a\u53d8\u91cf \\(x_t\\) \u7684\u6f14\u5316\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f,\u5728\u4e00\u4e2a\u5fae\u5c0f\u7684\u65f6\u95f4\u6b65\u957f \\(dt\\) \u5185,\\(x_t\\) \u7684\u53d8\u5316 \\(dx_t\\) \u7531\u4e24\u90e8\u5206\u7ec4\u6210:\u4e00\u4e2a\u786e\u5b9a\u7684\u3001\u53ef\u9884\u6d4b\u7684\u6f02\u79fb\u9879 (drift) \u548c\u4e00\u4e2a\u968f\u673a\u7684\u3001\u4e0d\u53ef\u9884\u6d4b\u7684\u6269\u6563\u9879 (diffusion)\u3002\u63cf\u8ff0\u8fd9\u7c7b\u8fc7\u7a0b\u6700\u901a\u7528\u7684\u8bed\u8a00\u662f\u4e00\u7ef4\u968f\u673a\u5fae\u5206\u65b9\u7a0b(Stochastic Differential Equation, SDE):</p> \\[ dx_t = A(x_t, t)dt + C(x_t, t)dW_t \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u63cf\u8ff0\u4e86\u968f\u673a\u53d8\u91cf \\(x_t\\) \u5728\u4e00\u4e2a\u65e0\u7a77\u5c0f\u65f6\u95f4\u6b65\u957f \\(dt\\) \u5185\u7684\u6f14\u5316\u3002</p> <ul> <li> <p>\u6f02\u79fb\u9879 (Drift Term): \\(A(x_t, t)dt\\) \u4ee3\u8868\u4e86\u7cfb\u7edf\u7684\u786e\u5b9a\u6027\u6f14\u5316\u90e8\u5206\u3002\\(A(x_t, t)\\) \u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u7c92\u5b50\u5728\u65f6\u95f4 \\(t\\) \u4f4d\u4e8e\u4f4d\u7f6e \\(x\\) \u65f6\u6240\u611f\u53d7\u5230\u7684\u5e73\u5747\u901f\u5ea6\u6216\"\u529b\"\u3002</p> </li> <li> <p>\u6269\u6563\u9879 (Diffusion Term): \\(C(x_t, t)dW_t\\) \u4ee3\u8868\u4e86\u7cfb\u7edf\u7684\u968f\u673a\u6f14\u5316\u90e8\u5206\u3002\\(C(x_t, t)\\) \u662f\u6269\u6563\u7cfb\u6570\u6216\u566a\u58f0\u5f3a\u5ea6,\u5b83\u51b3\u5b9a\u4e86\u968f\u673a\u6ce2\u52a8\u7684\u5927\u5c0f\u3002</p> </li> <li> <p>\u7ef4\u7eb3\u8fc7\u7a0b\u589e\u91cf (Wiener Process Increment): \\(dW_t\\) \u662f\u7ef4\u7eb3\u8fc7\u7a0b\u7684\u65e0\u7a77\u5c0f\u589e\u91cf,\u5b83\u662f\u5bf9\u5e03\u6717\u8fd0\u52a8\u7684\u6570\u5b66\u5efa\u6a21\u3002\\(dW_t\\) \u672c\u8eab\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf,\u670d\u4ece\u5747\u503c\u4e3a0,\u65b9\u5dee\u4e3a \\(dt\\) \u7684\u9ad8\u65af\u5206\u5e03:</p> </li> </ul> \\[ P(dW_t) = \\frac{1}{\\sqrt{2\\pi dt}} \\exp\\left(-\\frac{dW_t^2}{2dt}\\right) \\]"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#11","title":"1.1 \u79ef\u5206\u5f62\u5f0f\u4e0e\u4f0a\u85e4\u79ef\u5206\u7684\u5b9a\u4e49","text":"<p>\u7ecf\u5178\u5fae\u79ef\u5206\u7684\u6cd5\u5219,\u5982\u94fe\u5f0f\u6cd5\u5219,\u5728\u5904\u7406\u968f\u673a\u8fc7\u7a0b\u7684\"\u7c97\u7cd9\"\u6216\"\u952f\u9f7f\u72b6\"\u8def\u5f84\u65f6\u4f1a\u5931\u6548\u3002\u8fd9\u4e9b\u8def\u5f84,\u4ee5\u7ef4\u7eb3\u8fc7\u7a0b\u4e3a\u5178\u578b\u4ee3\u8868,\u867d\u7136\u5904\u5904\u8fde\u7eed,\u4f46\u5374\u5904\u5904\u4e0d\u53ef\u5fae\u3002\u8fd9\u79cd\u72ec\u7279\u7684\u6570\u5b66\u6027\u8d28\u8981\u6c42\u6211\u4eec\u53d1\u5c55\u4e00\u5957\u5168\u65b0\u7684\u5fae\u79ef\u5206\u6846\u67b6\u2014\u2014\u4f0a\u7c50\u5fae\u79ef\u5206(Ito's Calculus)\u3002</p> <p>\u9700\u8981\u5f3a\u8c03\u7684\u662f,SDE\u7684\u5fae\u5206\u5f62\u5f0f\u5728\u6570\u5b66\u4e0a\u53ea\u662f\u4e00\u79cd\u7b80\u4fbf\u7684\u8bb0\u6cd5\u3002\u7531\u4e8e\u7ef4\u7eb3\u8fc7\u7a0b\u7684\u8def\u5f84\u5904\u5904\u4e0d\u53ef\u5fae,\u8868\u8fbe\u5f0f \"\\(dW_t/dt\\)\" \u662f\u6ca1\u6709\u4e25\u683c\u5b9a\u4e49\u7684\u3002\u56e0\u6b64,SDE\u7684\u4e25\u8c28\u5b9a\u4e49\u662f\u5176\u5bf9\u5e94\u7684\u79ef\u5206\u5f62\u5f0f:</p> \\[ x_t = x_{t_0} + \\int_{t_0}^{t} d\\tau A(x_\\tau, \\tau) + \\int_{t_0}^{t} C(x_\\tau, \\tau) dW_\\tau \\] <p>\u5176\u4e2d,\u7b2c\u4e00\u4e2a\u79ef\u5206\u662f\u6807\u51c6\u7684\u9ece\u66fc\u79ef\u5206(Riemann integral),\u800c\u7b2c\u4e8c\u4e2a\u79ef\u5206\u2014\u2014\u968f\u673a\u79ef\u5206(stochastic integral)\u2014\u2014\u7684\u5b9a\u4e49\u5219\u9700\u8981\u7279\u522b\u5c0f\u5fc3\u3002\u6839\u636e\u6559\u6388\u5728PPT\u4e0a\u7684\u5b9a\u4e49,\u8be5\u79ef\u5206\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u79bb\u6563\u6c42\u548c\u7684\u6781\u9650:</p> \\[ \\int_{t_0}^{t} G(\\tau) dW(\\tau) := \\lim_{n\\rightarrow\\infty} \\sum_{i=1}^{n} G(\\bar{t}_i) \\Delta W_i \\] <p>\u8fd9\u91cc,\u65f6\u95f4\u533a\u95f4 \\([t_0, t]\\) \u88ab\u5212\u5206\u4e3a \\(n\\) \u4e2a\u5c0f\u533a\u95f4,\\(\\Delta W_i = W(t_i) - W(t_{i-1})\\) \u662f\u5728\u7b2c \\(i\\) \u4e2a\u533a\u95f4\u4e0a\u7684\u7ef4\u7eb3\u8fc7\u7a0b\u589e\u91cf\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#12","title":"1.2 \u4f0a\u85e4\u7ea6\u5b9a:\u4e0d\u9884\u77e5\u672a\u6765\u7684\u79ef\u5206","text":"<p>\u968f\u673a\u79ef\u5206\u7684\u6570\u503c\u53d6\u51b3\u4e8e\u5728\u6bcf\u4e2a\u5c0f\u533a\u95f4 \\([\\tilde{t}_i]\\) \u4e0a\u5bf9\u88ab\u79ef\u51fd\u6570 \\(G(\\tau)\\) \u7684\u53d6\u6837\u70b9\u3002\u4e0d\u540c\u7684\u53d6\u6837\u7ea6\u5b9a\u4f1a\u5bfc\u81f4\u4e0d\u540c\u7c7b\u578b\u7684\u968f\u673a\u79ef\u5206\u3002\u8bfe\u5802\u4e0a\u9ed8\u8ba4\u91c7\u7528\u7684\u662f\u4f0a\u85e4\u7ea6\u5b9a(Ito convention),\u5373\u5728\u6bcf\u4e2a\u65f6\u95f4\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u8fdb\u884c\u53d6\u6837,\\(\\tilde{t}_i = t_{i-1}\\)\u3002</p> \\[ \\int_{t_0}^{t} G(\\tau) dW(\\tau) := \\lim_{n\\rightarrow\\infty} \\sum_{i=1}^{n} G(t_{i-1}) \\Delta W_i \\] <p>\u8fd9\u4e2a\u9009\u62e9\u5177\u6709\u6df1\u523b\u7684\u7269\u7406\u548c\u6570\u5b66\u610f\u4e49:\u5b83\u4f53\u73b0\u4e86\u4e0d\u53ef\u9884\u77e5\u6027(non-anticipation)\u539f\u5219\u3002\u5728\u65f6\u95f4 \\(t_{i-1}\\),\u6211\u4eec\u6839\u636e\u7cfb\u7edf\u5f53\u524d\u7684\u72b6\u6001 \\(G(t_{i-1})\\) \u6765\u51b3\u5b9a\u6211\u4eec\u5bf9\u672a\u6765\u968f\u673a\"\u8e22\u52a8\" \\(\\Delta W_i\\) \u7684\u6743\u91cd\u3002\u7cfb\u7edf\u5728 \\(t_{i-1}\\) \u65f6\u523b\u7684\u72b6\u6001\u65e0\u6cd5\"\u9884\u77e5\"\u5373\u5c06\u5728 \\((t_{i-1}, t_i]\\) \u533a\u95f4\u5185\u53d1\u751f\u7684\u968f\u673a\u6da8\u843d\u3002\u8fd9\u4e00\u7279\u6027\u4f7f\u5f97\u4f0a\u85e4\u79ef\u5206\u6210\u4e3a\u4e00\u79cd\u9785(martingale),\u8fd9\u610f\u5473\u7740\u79ef\u5206\u7684\u671f\u671b\u503c\u4e3a\u96f6,\u8fd9\u5728\u91d1\u878d\u6570\u5b66\u548c\u8bb8\u591a\u7269\u7406\u5e94\u7528\u4e2d\u662f\u4e00\u4e2a\u6781\u5176\u91cd\u8981\u7684\u6027\u8d28\u3002</p> <p>\u9785(martingale),\u539f\u6307\u4e00\u7c7b\u4e8e18\u4e16\u7eaa\u6d41\u884c\u4e8e\u6cd5\u56fd\u7684\u6295\u6ce8\u7b56\u7565,\u7528\u6765\u63cf\u8ff0\u50cf\"\u516c\u5e73\u8d4c\u535a\"\u4e00\u6837\u7684\u968f\u673a\u8fc7\u7a0b\u2014\u2014\u672a\u6765\u7684\u5e73\u5747\u7ed3\u679c\u6c38\u8fdc\u7b49\u4e8e\u73b0\u5728\u7684\u503c,\u6bd4\u5982\u629b\u786c\u5e01\u8d4c\u8f93\u8d62,\u957f\u671f\u6765\u770b\u4f60\u7684\u5e73\u5747\u6536\u76ca\u4e0d\u4f1a\u53d8,\u8fd9\u79cd\"\u4e0d\u504f\u4e0d\u501a\"\u7684\u7279\u6027\u5728\u91d1\u878d\u4e2d\u88ab\u7528\u6765\u5206\u6790\u80a1\u7968\u4ef7\u683c\u6216\u671f\u6743\u5b9a\u4ef7\u3002\u9785\u8bba\u662f\u6982\u7387\u8bba\u548c\u968f\u673a\u8fc7\u7a0b\u4e2d\u7684\u6838\u5fc3\u6982\u5ff5,\u7528\u4e8e\u63cf\u8ff0\u4e00\u79cd\u672a\u6765\u671f\u671b\u503c\u4e0e\u5f53\u524d\u4fe1\u606f\u65e0\u5173\u7684\u968f\u673a\u8fc7\u7a0b\u3002\u6570\u5b66\u4e0a,\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b \\(\\{X_t\\}\\) \u88ab\u79f0\u4e3a\u9785,\u82e5\u5176\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6: 1. \u9002\u5e94\u6027:\\(X_t\\) \u7684\u503c\u4ec5\u4f9d\u8d56\u4e8e\u5f53\u524d\u53ca\u8fc7\u53bb\u7684\u4fe1\u606f(\u5373 \\(\\mathcal{F}_t\\)-\u53ef\u6d4b)\u3002 2. \u671f\u671b\u5b88\u6052:\u5728\u5df2\u77e5\u5f53\u524d\u65f6\u523b \\(t\\) \u7684\u4fe1\u606f\u4e0b,\u672a\u6765\u4efb\u610f\u65f6\u523b \\(s &gt; t\\) \u7684\u671f\u671b\u503c\u7b49\u4e8e\u5f53\u524d\u503c,\u5373 \\(\\mathbb{E}[X_s \\mid \\mathcal{F}_t] = X_t\\)\u3002  </p> <p></p> <p>\u8fd9\u4e00\u6027\u8d28\u4f53\u73b0\u4e86\u4e0d\u53ef\u9884\u77e5\u6027:\u9785\u7684\u672a\u6765\u884c\u4e3a\u65e0\u6cd5\u901a\u8fc7\u5f53\u524d\u6216\u8fc7\u53bb\u7684\u4fe1\u606f\u9884\u6d4b,\u5176\u671f\u671b\u503c\u59cb\u7ec8\u4fdd\u6301\u4e0d\u53d8\u3002\u4f8b\u5982,\u5728\u4f0a\u85e4\u79ef\u5206\u4e2d,\u968f\u673a\u79ef\u5206 \\(\\int_{t_0}^t G(\\tau) dW_\\tau\\) \u662f\u4e00\u4e2a\u9785,\u5176\u671f\u671b\u503c\u4e3a\u96f6,\u53cd\u6620\u4e86\u5e03\u6717\u8fd0\u52a8(\u7ef4\u7eb3\u8fc7\u7a0b)\u7684\u65e0\u504f\u6027\u3002\u9785\u5728\u91d1\u878d\u6570\u5b66\u4e2d\u5c24\u4e3a\u91cd\u8981,\u5e38\u7528\u4e8e\u5efa\u6a21\u516c\u5e73\u6e38\u620f\u6216\u65e0\u5957\u5229\u5e02\u573a\u7684\u4ef7\u683c\u52a8\u6001\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#2","title":"2. \u4f0a\u85e4\u5fae\u79ef\u5206:\u968f\u673a\u4e16\u754c\u7684\u65b0\u6cd5\u5219","text":"<p>\u7ecf\u5178\u5fae\u79ef\u5206\u7684\u94fe\u5f0f\u6cd5\u5219\u544a\u8bc9\u6211\u4eec,\u5982\u679c \\(x(t)\\) \u662f\u4e00\u4e2a\u53ef\u5fae\u51fd\u6570,\u90a3\u4e48 \\(dF(x(t)) = F'(x)dx\\)\u3002\u7136\u800c,\u5bf9\u4e8e\u7531SDE\u63cf\u8ff0\u7684\u968f\u673a\u8fc7\u7a0b \\(x_t\\),\u7531\u4e8e\u5176\u8def\u5f84\u7684\"\u7c97\u7cd9\"\u548c\u4e0d\u53ef\u5fae\u6027,\u8fd9\u4e2a\u7b80\u5355\u7684\u6cd5\u5219\u4e0d\u518d\u6210\u7acb\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u6cd5\u5219\u6765\u5904\u7406\u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570,\u8fd9\u5c31\u662f\u4f0a\u85e4\u516c\u5f0f\u3002</p> <p>\u4f0a\u85e4\u5fae\u79ef\u5206\u7531\u65e5\u672c\u6570\u5b66\u5bb6\u4f0a\u85e4\u6e05\u4e8e20\u4e16\u7eaa40\u5e74\u4ee3\u521b\u7acb,\u6700\u521d\u7528\u4e8e\u63cf\u8ff0\u5e03\u6717\u8fd0\u52a8(\u7ef4\u7eb3\u8fc7\u7a0b)\u7684\u968f\u673a\u8def\u5f84\u7279\u6027\u3002\u5176\u6838\u5fc3\u5728\u4e8e\u5b9a\u4e49\u968f\u673a\u79ef\u5206(\u5982 \\(\\int G(t) dW_t\\)),\u901a\u8fc7\u5728\u65f6\u95f4\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u53d6\u6837(\u4f0a\u85e4\u7ea6\u5b9a),\u907f\u514d\u5bf9\u672a\u6765\u968f\u673a\u6da8\u843d\u7684\"\u9884\u77e5\",\u4ece\u800c\u6784\u5efa\u51fa\u4e25\u683c\u6570\u5b66\u6846\u67b6\u4e0b\u7684\u968f\u673a\u5fae\u5206\u65b9\u7a0b(SDE)\u3002\u5176\u7269\u7406\u672c\u8d28\u662f\u4e0d\u53ef\u9884\u77e5\u6027:\u7cfb\u7edf\u5728\u4efb\u610f\u65f6\u523b\u7684\u72b6\u6001\u4ec5\u4f9d\u8d56\u4e8e\u5f53\u524d\u4fe1\u606f,\u65e0\u6cd5\u901a\u8fc7\u8fc7\u53bb\u6216\u672a\u6765\u9884\u6d4b,\u8fd9\u4e00\u7279\u6027\u4f7f\u4f0a\u85e4\u79ef\u5206\u6210\u4e3a\u9785(\u671f\u671b\u503c\u5b88\u6052),\u53cd\u6620\u4e86\u81ea\u7136\u754c\u548c\u91d1\u878d\u7cfb\u7edf\u4e2d\u968f\u673a\u8fc7\u7a0b\u7684\u65e0\u504f\u6027\u3002\u5177\u4f53\u5e94\u7528\u5305\u62ec:\u91d1\u878d\u6570\u5b66(\u671f\u6743\u5b9a\u4ef7\u3001\u98ce\u9669\u5bf9\u51b2)\u3001\u91cf\u5b50\u529b\u5b66(\u8def\u5f84\u79ef\u5206\u8868\u8ff0)\u3001\u751f\u7269\u7edf\u8ba1(\u79cd\u7fa4\u52a8\u6001\u5efa\u6a21)\u3001\u5de5\u7a0b\u63a7\u5236(\u566a\u58f0\u73af\u5883\u4e0b\u7684\u7cfb\u7edf\u7a33\u5b9a\u6027\u5206\u6790)\u7b49,\u4e3a\u5904\u7406\"\u7c97\u7cd9\"\u968f\u673a\u8def\u5f84\u63d0\u4f9b\u4e86\u6570\u5b66\u5de5\u5177,\u6210\u4e3a\u73b0\u4ee3\u968f\u673a\u5206\u6790\u7684\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#21","title":"2.1 \u63a8\u5bfc\u4f0a\u85e4\u516c\u5f0f","text":"<p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u4e00\u4e2a\u5173\u4e8e\u968f\u673a\u53d8\u91cf \\(x_t\\) \u7684\u4efb\u610f(\u8db3\u591f\u5e73\u6ed1\u7684)\u51fd\u6570 \\(F(x_t)\\) \u7684\u65e0\u7a77\u5c0f\u53d8\u5316\u91cf \\(dF(x_t)\\)\u3002\u6211\u4eec\u4ece \\(F(x_t)\\) \u7684\u6cf0\u52d2\u5c55\u5f00\u5f0f\u5165\u624b,\u6b63\u5982\u6559\u6388\u5728\u9ed1\u677f\u4e0a\u6240\u6f14\u793a\u7684:</p> \\[ dF(x_t) = F(x_t + dx_t) - F(x_t) = F'(x_t)dx_t + \\frac{1}{2}F''(x_t)dx_t^2 + O(dx_t^3) \\] <p>\u63a5\u4e0b\u6765,\u6211\u4eec\u5c06SDE\u7684\u8868\u8fbe\u5f0f \\(dx_t = A dt + C dW_t\\) \u4ee3\u5165\u4e0a\u5f0f:</p> \\[ dF(x_t) = F'(x_t)(A dt + C dW_t) + \\frac{1}{2}F''(x_t)(A dt + C dW_t)^2 + \\cdots \\] <p>\u5c55\u5f00\u5e73\u65b9\u9879:</p> \\[ (A dt + C dW_t)^2 = A^2(dt)^2 + 2AC(dt dW_t) + C^2(dW_t)^2 \\]"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#22-dw_t2-dt","title":"2.2 \u968f\u673a\u5fae\u79ef\u5206\u7684\u4e58\u6cd5\u89c4\u5219\u4e0e\u6838\u5fc3\u6052\u7b49\u5f0f \\(dW_t^2 = dt\\)","text":"<p>\u4e3a\u4e86\u7b80\u5316\u4e0a\u8ff0\u8868\u8fbe\u5f0f,\u6211\u4eec\u9700\u8981\u786e\u5b9a\u5404\u4e2a\u65e0\u7a77\u5c0f\u91cf\u7684\u91cf\u7ea7\u3002\u57fa\u4e8e\u7ef4\u7eb3\u8fc7\u7a0b\u7684\u6027\u8d28,\u5373\u5176\u6807\u51c6\u5dee\u4e0e\u65f6\u95f4\u7684\u5e73\u65b9\u6839\u6210\u6b63\u6bd4(\\(\\Delta W \\sim \\sqrt{\\Delta t}\\)),\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u5957\"\u968f\u673a\u4e58\u6cd5\u89c4\u5219\":</p> <ul> <li>\\((dt)^2 \\sim O(dt^2)\\):\u53ef\u4ee5\u5ffd\u7565\u3002</li> <li>\\(dt dW_t \\sim O(dt^{3/2})\\):\u53ef\u4ee5\u5ffd\u7565\u3002</li> <li>\\((dW_t)^2 \\sim O(dt)\\):\u4e0d\u53ef\u5ffd\u7565\u3002</li> </ul> <p>\u5176\u4e2d,\u7b2c\u4e09\u6761\u89c4\u5219\u662f\u968f\u673a\u5fae\u79ef\u5206\u4e2d\u6700\u53cd\u76f4\u89c9\u4f46\u4e5f\u662f\u6700\u6838\u5fc3\u7684\u7ed3\u8bba\u3002\u5b83\u8868\u660e,\u7ef4\u7eb3\u8fc7\u7a0b\u589e\u91cf\u7684\u5e73\u65b9,\u5728\u65e0\u7a77\u5c0f\u6781\u9650\u4e0b,\u5176\u884c\u4e3a\u4e0d\u518d\u662f\u968f\u673a\u7684,\u800c\u662f\u8868\u73b0\u5f97\u50cf\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u91cf \\(dt\\)\u3002</p> <p>\u8fd9\u4e2a\u7ed3\u8bba\u5e76\u975e\u51ed\u7a7a\u731c\u6d4b,\u800c\u662f\u53ef\u4ee5\u5728\u4e25\u683c\u7684\u5747\u65b9\u6781\u9650(mean square limit)\u610f\u4e49\u4e0b\u8bc1\u660e\u7684\u3002\u8003\u8651\u79bb\u6563\u6c42\u548c \\(\\sum_i (\\Delta W_i^2 - \\Delta t_i)\\)\u3002\u6211\u4eec\u60f3\u8bc1\u660e\u5f53\u65f6\u95f4\u6b65\u957f\u8d8b\u4e8e\u96f6\u65f6,\u8fd9\u4e2a\u548c\u7684\u6da8\u843d\u4e5f\u8d8b\u4e8e\u96f6\u3002\u4e3a\u6b64,\u6211\u4eec\u8ba1\u7b97\u5176\u65b9\u5dee,\u5373\u6559\u6388\u5728\u9ed1\u677f\u4e0a\u5b9a\u4e49\u7684\u91cf \\(\\Delta I\\):</p> \\[ \\Delta I := \\lim_{n\\rightarrow\\infty} \\left\\langle \\left( \\sum_i G_{i-1}^2 (\\Delta W_i^2 - \\Delta t_i) \\right)^2 \\right\\rangle \\] <p>\u5c55\u5f00\u5e73\u65b9\u9879,\u6211\u4eec\u5f97\u5230\u5bf9\u89d2\u9879(\\(i=j\\))\u548c\u975e\u5bf9\u89d2\u9879(\\(i \\neq j\\))\u3002\u7531\u4e8e\u4e0d\u540c\u65f6\u95f4\u533a\u95f4\u7684\u7ef4\u7eb3\u589e\u91cf\u662f\u76f8\u4e92\u72ec\u7acb\u7684(\u5373 \\(\\langle \\Delta W_i \\Delta W_j \\rangle = 0\\) for \\(i \\neq j\\)),\u6240\u6709\u4ea4\u53c9\u9879\u7684\u671f\u671b\u5747\u4e3a\u96f6\u3002\u56e0\u6b64,\u53ea\u5269\u4e0b\u5bf9\u89d2\u9879\u7684\u548c:</p> \\[ \\Delta I = \\lim_{n \\to \\infty} \\sum_i \\left\\langle G_{i-1}^2 (\\Delta W_i^2 - \\Delta t_i)^2 \\right\\rangle \\] <p>\u5c55\u5f00\u62ec\u53f7\u5185\u7684\u5e73\u65b9,\u5e76\u5229\u7528\u7ef4\u7eb3\u8fc7\u7a0b\u589e\u91cf\u7684\u77e9\u7684\u6027\u8d28(\\(\\langle \\Delta W_i^2 \\rangle = \\Delta t_i\\) \u548c \\(\\langle \\Delta W_i^4 \\rangle = 3(\\Delta t_i)^2\\)),\u6211\u4eec\u5f97\u5230:</p> \\[ \\langle (\\Delta W_i^2 - \\Delta t_i)^2 \\rangle = \\langle \\Delta W_i^4 \\rangle - 2\\Delta t_i \\langle \\Delta W_i^2 \\rangle + (\\Delta t_i)^2 = 3(\\Delta t_i)^2 - 2(\\Delta t_i)^2 + (\\Delta t_i)^2 = 2(\\Delta t_i)^2 \\] <p>\u4ee3\u5165 \\(\\Delta I\\) \u7684\u8868\u8fbe\u5f0f:</p> \\[ \\Delta I = \\lim_{n\\rightarrow\\infty} \\sum_i \\langle G_{i-1}^2 \\rangle \\cdot 2(\\Delta t_i)^2 \\] <p>\u5047\u8bbe \\(G\\) \u662f\u6709\u754c\u7684,\u4e14\u65f6\u95f4\u6b65\u957f\u5747\u5300 \\(\\Delta t_i = t/n\\),\u5219:</p> \\[ \\Delta I \\leq 2G_{\\text{bound}}^2 \\lim_{n \\to \\infty} \\sum_{i=1}^{n} \\left( \\frac{t}{n} \\right)^2 = 2G_{\\text{bound}}^2 \\lim_{n \\to \\infty} n \\left( \\frac{t^2}{n^2} \\right) = 2G_{\\text{bound}}^2 \\lim_{n \\to \\infty} \\frac{t^2}{n} \\to 0 \\] <p>\u65b9\u5dee\u8d8b\u4e8e\u96f6,\u8fd9\u610f\u5473\u7740\u5728\u5747\u65b9\u610f\u4e49\u4e0b,\u968f\u673a\u79ef\u5206 \\(\\int G(\\tau) dW_\\tau^2\\) \u7b49\u4ef7\u4e8e\u666e\u901a\u79ef\u5206 \\(\\int G(\\tau) d\\tau\\)\u3002\u8fd9\u4e3a\u6211\u4eec\u7684\u6838\u5fc3\u6052\u7b49\u5f0f\u63d0\u4f9b\u4e86\u4e25\u683c\u7684\u6570\u5b66\u57fa\u7840 :</p> \\[ dW_t^2 = dt \\] <p>\u7269\u7406\u610f\u4e49: \u8fd9\u4e2a\u6052\u7b49\u5f0f\u662f\u7ef4\u7eb3\u8fc7\u7a0b\u6709\u9650\u4e8c\u6b21\u53d8\u5dee(finite quadratic variation)\u7684\u4f53\u73b0\u3002\u4e00\u4e2a\u666e\u901a\u7684\u5e03\u6717\u7c92\u5b50,\u5176\u4f4d\u79fb\u7684\u671f\u671b\u662f\u96f6,\u4f46\u5176\u4f4d\u79fb\u5e73\u65b9\u7684\u671f\u671b(\u4e0e\u65b9\u5dee\u6210\u6b63\u6bd4)\u662f\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u957f\u7684,\u5373 \\(\\langle (\\Delta x)^2 \\rangle \\propto \\Delta t\\)\u3002\\(dW_t^2 = dt\\) \u8fd9\u4e2a\u5173\u7cfb\u6b63\u662f\u5c06\u8fd9\u4e00\u5b8f\u89c2\u7edf\u8ba1\u6027\u8d28\u63d0\u5347\u5230\u4e86\u5fae\u79ef\u5206\u6cd5\u5219\u7684\u5c42\u9762\u3002\u5b83\u544a\u8bc9\u6211\u4eec,\u867d\u7136\u7c92\u5b50\u7684\u8def\u5f84\u662f\u968f\u673a\u7684,\u4f46\u5176\"\u7d2f\u79ef\u7684\u5e73\u65b9\u6da8\u843d\"\u5374\u4ee5\u4e00\u79cd\u786e\u5b9a\u7684\u3001\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u968f\u65f6\u95f4\u589e\u957f\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#23","title":"2.3 \u4f0a\u85e4\u516c\u5f0f\u7684\u6700\u7ec8\u5f62\u5f0f","text":"<p>\u5c06 \\(dW_t^2 = dt\\) \u4ee5\u53ca\u5176\u4ed6\u9ad8\u9636\u9879\u4e3a\u96f6\u7684\u89c4\u5219\u4ee3\u5165 \\(dF(x_t)\\) \u7684\u5c55\u5f00\u5f0f\u4e2d,\u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u6700\u7ec8\u7684\u4f0a\u85e4\u516c\u5f0f(\u4e5f\u79f0\u4e3a\u4f0a\u85e4\u5f15\u7406,Ito's Lemma):</p> \\[ dF(x_t) = \\left[ A(x_t, t) F'(x_t) + \\frac{1}{2} C^2(x_t, t) F''(x_t) \\right] dt + C(x_t, t) F'(x_t) dW_t \\] <p>\u5bf9\u6bd4\u7ecf\u5178\u5fae\u79ef\u5206\u7684\u94fe\u5f0f\u6cd5\u5219,\u6211\u4eec\u53d1\u73b0\u591a\u51fa\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u9879 \\(\\frac{1}{2} C^2 F'' dt\\)\u3002\u8fd9\u4e00\u9879\u88ab\u79f0\u4e3a\u4f0a\u85e4\u4fee\u6b63\u9879(Ito correction term)\u3002</p> <p>\u7269\u7406\u610f\u4e49: \u8fd9\u4e2a\u4fee\u6b63\u9879\u5b8c\u5168\u7531\u566a\u58f0\u4ea7\u751f,\u5b83\u662f\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u6f02\u79fb\u9879,\u5176\u5927\u5c0f\u53d6\u51b3\u4e8e\u566a\u58f0\u7684\u5f3a\u5ea6(\\(C^2\\))\u548c\u51fd\u6570 \\(F(x)\\) \u7684\u66f2\u7387(\\(F''\\))\u3002\u76f4\u89c2\u5730\u770b,\u5982\u679c\u51fd\u6570\u662f\u51f8\u7684(\\(F'' &gt; 0\\),\u50cf\u4e00\u4e2a\u7897),\u90a3\u4e48\u968f\u673a\u6ce2\u52a8\u4f1a\u4f7f\u5f97 \\(F(x_t)\\) \u7684\u671f\u671b\u503c\u7cfb\u7edf\u6027\u5730\u5411\u4e0a\u6f02\u79fb;\u53cd\u4e4b,\u5982\u679c\u51fd\u6570\u662f\u51f9\u7684(\\(F'' &lt; 0\\)),\u566a\u58f0\u5219\u4f1a\u4f7f\u5176\u671f\u671b\u503c\u5411\u4e0b\u6f02\u79fb\u3002\u8fd9\u53ef\u4ee5\u7c7b\u6bd4\u4e8e\u7434\u751f\u4e0d\u7b49\u5f0f(Jensen's inequality)\u3002\u4f0a\u85e4\u516c\u5f0f\u7cbe\u786e\u5730\u91cf\u5316\u4e86\u8fd9\u79cd\u7531\u566a\u58f0\u4e0e\u975e\u7ebf\u6027\u51fd\u6570\u76f8\u4e92\u4f5c\u7528\u6240\u4ea7\u751f\u7684\u6709\u6548\u6f02\u79fb\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#3","title":"3. \u5e94\u7528:\u4ece\u5355\u6761\u8f68\u8ff9\u5230\u6982\u7387\u52a8\u529b\u5b66","text":"<p>\u4f0a\u85e4\u516c\u5f0f\u6700\u5f3a\u5927\u7684\u5e94\u7528\u4e4b\u4e00,\u662f\u5efa\u7acb\u8d77\u5fae\u89c2\u7684SDE\u63cf\u8ff0\u548c\u5b8f\u89c2\u7684\u6982\u7387\u5bc6\u5ea6\u6f14\u5316\u65b9\u7a0b(\u5373\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b)\u4e4b\u95f4\u7684\u6865\u6881\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#31-sde-","title":"3.1 \u4ece\u4f0a\u85e4SDE\u63a8\u5bfc\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b","text":"<p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u63a8\u5bfc\u51fa\u4e00\u4e2a\u63cf\u8ff0\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \\(p(x, t)\\) \u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u3002\u4e3a\u6b64,\u6211\u4eec\u8003\u5bdf\u4e00\u4e2a\u4efb\u610f\u5149\u6ed1\u6d4b\u8bd5\u51fd\u6570 \\(F(x)\\) \u7684\u671f\u671b\u503c\u7684\u65f6\u95f4\u6f14\u5316\u3002</p> <p>\u9996\u5148,\u5199\u51fa\u671f\u671b\u503c\u7684\u5bfc\u6570:</p> \\[ \\frac{d}{dt}\\langle F(x_t) \\rangle = \\left\\langle \\frac{d}{dt} F(x_t) \\right\\rangle \\] <p>\u8fd9\u91cc,\u6211\u4eec\u5c06\u5fae\u5206\u5f62\u5f0f\u7684\u4f0a\u85e4\u516c\u5f0f\u4ee3\u5165\u671f\u671b\u503c\u5185\u90e8\u3002\u4f0a\u85e4\u516c\u5f0f\u7684 \\(dt\\) \u90e8\u5206\u7ed9\u51fa\u4e86\u786e\u5b9a\u6027\u7684\u6f14\u5316,\u800c \\(dW_t\\) \u90e8\u5206\u662f\u968f\u673a\u7684\u3002</p> \\[ \\frac{d}{dt}\\langle F(x_t) \\rangle = \\left\\langle A(x_t, t) F'(x_t) + \\frac{1}{2} C^2(x_t, t) F''(x_t) \\right\\rangle + \\left\\langle C(x_t, t) F'(x_t) \\frac{dW_t}{dt} \\right\\rangle \\] <p>\u7531\u4e8e\u4f0a\u85e4\u79ef\u5206\u7684\u4e0d\u53ef\u9884\u77e5\u6027,\u5728 \\(t\\) \u65f6\u523b\u7684\u7cfb\u7edf\u72b6\u6001 \\(x_t\\) \u4e0e\u7d27\u968f\u5176\u540e\u7684\u7ef4\u7eb3\u589e\u91cf \\(dW_t\\) \u662f\u4e0d\u76f8\u5173\u7684,\u4e14 \\(\\langle dW_t \\rangle = 0\\)\u3002\u56e0\u6b64,\u968f\u673a\u9879\u7684\u671f\u671b\u4e3a\u96f6:</p> \\[ \\left\\langle C(x_t, t) F'(x_t) dW_t \\right\\rangle = 0 \\] <p>\u4e8e\u662f,\u671f\u671b\u503c\u7684\u6f14\u5316\u5b8c\u5168\u7531\u786e\u5b9a\u6027\u9879\u51b3\u5b9a:</p> \\[ \\frac{d}{dt}\\langle F(x_t) \\rangle = \\left\\langle A(x_t, t) F'(x_t) + \\frac{1}{2} C^2(x_t, t) F''(x_t) \\right\\rangle \\] <p>\u73b0\u5728,\u6211\u4eec\u5c06\u671f\u671b\u503c\u7528\u6982\u7387\u5bc6\u5ea6 \\(p(x, t)\\) \u7684\u79ef\u5206\u5f62\u5f0f\u8868\u793a:</p> \\[ \\int dx F(x) \\frac{\\partial p(x, t)}{\\partial t} = \\int dx p(x, t) \\left[ A(x, t) F'(x) + \\frac{1}{2} C^2(x, t) F''(x) \\right] \\] <p>\u4e3a\u4e86\u5f97\u5230 \\(p(x, t)\\) \u7684\u65b9\u7a0b,\u6211\u4eec\u9700\u8981\u5c06\u53f3\u4fa7\u79ef\u5206\u4e2d\u7684\u5bfc\u6570\u4ece\u6d4b\u8bd5\u51fd\u6570 \\(F(x)\\) \u8f6c\u79fb\u5230 \\(p(x, t)\\) \u4e0a\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5206\u90e8\u79ef\u5206\u6cd5(integration by parts)\u6765\u5b9e\u73b0\u3002\u5047\u8bbe\u5728\u65e0\u7a77\u8fdc\u5904\u8fb9\u754c\u6761\u4ef6\u826f\u597d(\\(p(x, t)\\) \u548c\u5b83\u7684\u5bfc\u6570\u8d8b\u4e8e\u96f6)\u3002</p> <p>\u5bf9\u7b2c\u4e00\u9879\u8fdb\u884c\u5206\u90e8\u79ef\u5206:</p> \\[ \\int dx p(x, t) A(x, t) F'(x) = [pAF]_{-\\infty}^{\\infty} - \\int dx F(x) \\frac{\\partial}{\\partial x} [A(x, t) p(x, t)] = -\\int dx F(x) \\frac{\\partial}{\\partial x} [Ap] \\] <p>\u5bf9\u7b2c\u4e8c\u9879\u8fdb\u884c\u4e24\u6b21\u5206\u90e8\u79ef\u5206:</p> \\[ \\frac{1}{2} \\int dx p C^2 F'' = \\frac{1}{2} ([pC^2F']_{-\\infty}^{\\infty} - \\int dx F' \\frac{\\partial}{\\partial x} [pC^2]) = -\\frac{1}{2} \\int dx F' \\frac{\\partial}{\\partial x} [pC^2] \\] \\[ = -\\frac{1}{2} ([F \\frac{\\partial}{\\partial x} [pC^2]]_{-\\infty}^{\\infty} - \\int dx F \\frac{\\partial^2}{\\partial x^2} [pC^2]) = \\frac{1}{2} \\int dx F(x) \\frac{\\partial^2}{\\partial x^2} [C^2(x, t) p(x, t)] \\] <p>\u5c06\u5206\u90e8\u79ef\u5206\u540e\u7684\u7ed3\u679c\u4ee3\u56de\u539f\u5f0f:</p> \\[ \\int dx F(x) \\frac{\\partial p(x, t)}{\\partial t} = \\int dx F(x) \\left[ -\\frac{\\partial}{\\partial x}(A p) + \\frac{1}{2} \\frac{\\partial^2}{\\partial x^2}(C^2 p) \\right] \\] <p>\u7531\u4e8e\u8fd9\u4e2a\u7b49\u5f0f\u5bf9\u4efb\u610f\u7684\u6d4b\u8bd5\u51fd\u6570 \\(F(x)\\) \u90fd\u6210\u7acb,\u6240\u4ee5\u4e24\u4e2a\u79ef\u5206\u53f7\u4e0b\u7684\u88ab\u79ef\u51fd\u6570\u5fc5\u987b\u76f8\u7b49\u3002\u7531\u6b64,\u6211\u4eec\u5f97\u5230\u4e86\u5fc3\u5fc3\u5ff5\u5ff5\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b(Fokker-Planck Equation, FPE):</p> \\[ \\frac{\\partial p(x, t)}{\\partial t} = -\\frac{\\partial}{\\partial x}[A(x, t) p(x, t)] + \\frac{1}{2} \\frac{\\partial^2}{\\partial x^2}[C^2(x, t) p(x, t)] \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u662f\u4e00\u4e2a\u5173\u4e8e\u6982\u7387\u5bc6\u5ea6\u7684\u8fde\u7eed\u6027\u65b9\u7a0b,\u63cf\u8ff0\u4e86\u6982\u7387\"\u6d41\u4f53\"\u5982\u4f55\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\u6f02\u79fb\u548c\u6269\u6563\u3002\u6f02\u79fb\u901a\u91cf\u4e3a \\(J_{\\text{drift}} = Ap\\),\u6269\u6563\u901a\u91cf\u4e3a \\(J_{\\text{diff}} = -\\frac{1}{2} \\frac{\\partial}{\\partial x}(C^2 p)\\)\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#32-python-","title":"3.2 Python\u6a21\u62df:\u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b\u8fc7\u7a0b\u7684\u53ef\u89c6\u5316","text":"<p>\u8fd8\u8bb0\u5f97\u6211\u4eec\u572812. \u5e03\u6717\u8fd0\u52a8\u4e0e O-U \u8fc7\u7a0b\u6a21\u62df\u8fc7\u5355\u4e2a\u53d7\u675f\u7f1a\u7684\u7c92\u5b50\u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b\u8fc7\u7a0b(Ornstein-Uhlenbeck process, OU process),\u8fd9\u4e2a\u4e00\u4e2a\u5728\u7269\u7406\u5b66\u548c\u91d1\u878d\u5b66\u4e2d\u90fd\u975e\u5e38\u91cd\u8981\u7684\u6a21\u578b:\u5b83\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5728\u8c10\u632f\u5b50\u52bf\u9631\u4e2d\u8fd0\u52a8\u5e76\u53d7\u5230\u70ed\u566a\u58f0\u5f71\u54cd\u7684\u5e03\u6717\u7c92\u5b50,\u5176SDE\u4e3a:</p> \\[ dx_t = -\\theta (x_t - \\mu) dt + \\sigma dW_t \\] <p>\u5176\u4e2d,\\(\\theta &gt; 0\\) \u662f\u56de\u590d\u901f\u7387(\u51b3\u5b9a\u4e86\u7cfb\u7edf\u5411\u5747\u503c\u56de\u590d\u7684\u901f\u5ea6),\\(\\mu\\) \u662f\u957f\u671f\u5747\u503c(\u52bf\u9631\u7684\u4e2d\u5fc3),\\(\\sigma\\) \u662f\u566a\u58f0\u5f3a\u5ea6\u3002</p> <p></p> <p>\u4e3a\u4e86\u52a0\u6df1\u5370\u8c61,\u8fd9\u8282\u8bfe\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6b27\u62c9-\u4e38\u5c71(Euler-Maruyama)\u65b9\u6cd5\u5bf9\u8fd9\u4e2aIto SDE\u8fdb\u884c\u591a\u4e2a\u7c92\u5b50\u7684\u6570\u503c\u6a21\u62df,\u8fd9\u662f\u5bf9SDE\u6700\u76f4\u63a5\u7684\u79bb\u6563\u5316:</p> \\[ x_{i+1} = x_i - \\theta (x_i - \\mu) \\Delta t + \\sigma \\sqrt{\\Delta t} \\cdot Z_i \\] <p>\u5176\u4e2d \\(\\Delta t\\) \u662f\u65f6\u95f4\u6b65\u957f,\\(Z_i\\) \u662f\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03 \\(N(0,1)\\) \u4e2d\u62bd\u53d6\u7684\u72ec\u7acb\u968f\u673a\u6570\u3002</p> <p>\u4e0b\u9762\u7684Python\u4ee3\u7801\u6a21\u62df\u4e86\u591a\u6761OU\u8fc7\u7a0b\u7684\u8f68\u8ff9,\u5c55\u793a\u4e86\u5b83\u4eec\u5982\u4f55\u4ece\u4e0d\u540c\u7684\u521d\u59cb\u4f4d\u7f6e\u51fa\u53d1,\u6700\u7ec8\u56f4\u7ed5\u5747\u503c \\(\\mu\\) \u6ce2\u52a8\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# --- Parameter definition ---\ntheta = 0.5  # Reversion rate\nmu = 0.0     # Long-term mean\nsigma = 0.4  # Noise intensity\ndt = 0.01    # Time step\nT = 10.0     # Total time\nn = int(T / dt) # Total steps\nnum_paths = 5 # Number of simulated trajectories\n\n# --- Simulation process ---\nx = np.zeros((num_paths, n + 1))\nx[:, 0] = np.random.uniform(-2, 2, num_paths) # Random initial positions\n\n# Generate all random numbers\nZ = np.random.randn(num_paths, n)\n\nfor i in range(n):\n    # Euler-Maruyama method\n    dW = np.sqrt(dt) * Z[:, i]\n    dx = -theta * (x[:, i] - mu) * dt + sigma * dW\n    x[:, i+1] = x[:, i] + dx\n\n# --- Plotting ---\nt = np.linspace(0, T, n + 1)\nplt.figure(figsize=(12, 7))\n\nfor i in range(num_paths):\n    plt.plot(t, x[i, :], lw=1.5, label=f'Path {i+1}')\n\nplt.axhline(mu, color='r', linestyle='--', lw=2, label=f'Mean ($\\\\mu$={mu})')\nplt.title(\"Ornstein-Uhlenbeck Process Simulation\", fontsize=16)\nplt.xlabel(\"Time (t)\", fontsize=12)\nplt.ylabel(\"x(t)\", fontsize=12)\nplt.grid(True)\nplt.legend()\nplt.show()\n</code></pre> </p> <p>\u65e0\u8bba\u521d\u59cb\u4f4d\u7f6e\u5728\u54ea\u91cc,\u6240\u6709\u8f68\u8ff9\u90fd\u8d8b\u5411\u4e8e\u5728\u5747\u503c \\(\\mu\\) \u9644\u8fd1\u6ce2\u52a8,\u6ce2\u52a8\u7684\u5e45\u5ea6\u7531 \\(\\sigma\\) \u51b3\u5b9a\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#4-","title":"4. \u4f0a\u85e4-\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u4e4b\u4e89:\u4e24\u79cd\u79ef\u5206\u7684\u6545\u4e8b","text":"<p>\u4e0a\u4e00\u8282,\u6211\u4eec\u5df2\u7ecf\u7b80\u8981\u4ecb\u7ecd\u4e86\u4e24\u79cd\u79ef\u5206\u7ea6\u5b9a,\u5e76\u505a\u4e86\u4e00\u5f20\u8868\u683c\u8fdb\u884c\u533a\u5206\u3002\u5230\u76ee\u524d\u4e3a\u6b62,\u6211\u4eec\u4e00\u76f4\u91c7\u7528\u4f0a\u85e4\u7ea6\u5b9a\u6765\u5b9a\u4e49\u968f\u673a\u79ef\u5206\u3002\u7136\u800c,\u6211\u4eec\u77e5\u9053\u8fd9\u5e76\u975e\u552f\u4e00\u7684\u9009\u62e9\u3002\u53e6\u4e00\u79cd\u5728\u7269\u7406\u5b66\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u7684\u7ea6\u5b9a\u662f\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947(Stratonovich)\u7ea6\u5b9a\u3002\u8fd9\u4e24\u79cd\u7ea6\u5b9a\u53cd\u6620\u4e86\u5bf9\u968f\u673a\u8fc7\u7a0b\u5efa\u6a21\u7684\u4e0d\u540c\u54f2\u5b66\u601d\u60f3,\u6df1\u5165\u7406\u89e3\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u81f3\u5173\u91cd\u8981\u3002</p> \u7279\u6027 \u4f0a\u85e4\u79ef\u5206 (It\u00f4 Integral) \u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206 (Stratonovich Integral) \u6c42\u548c\u53d6\u6837\u70b9 \u533a\u95f4\u5de6\u7aef\u70b9: \\(t_{i-1}\\) \u533a\u95f4\u4e2d\u70b9: \\((t_{i}+t_{i-1})/2\\) \u94fe\u5f0f\u6cd5\u5219 \u4fee\u6b63\u7684\u94fe\u5f0f\u6cd5\u5219 (\u4f0a\u85e4\u5f15\u7406) \u9075\u5b88\u7ecf\u5178\u94fe\u5f0f\u6cd5\u5219 \u9785\u6027\u8d28 \\(\\int C(x_{t})dW_{t}\\) \u662f\u9785 \u4e0d\u4e00\u5b9a\u662f\u9785 \u7269\u7406\u6a21\u578b \u7406\u60f3\u5316\u7684\u767d\u566a\u58f0;\u975e\u9884\u89c1\u6027\u7cfb\u7edf (\u5982\u91d1\u878d) \u6709\u9650\u5173\u8054\u65f6\u95f4\u7684\u6709\u8272\u566a\u58f0\u7684\u6781\u9650 (\u5982\u7269\u7406) F-P\u65b9\u7a0b\u6f02\u79fb\u9879 \\(A(x)+\\frac{1}{2} C(x)C^{\\prime}(x)\\) \\(A(x)\\) \u6570\u503c\u683c\u5f0f \u6b27\u62c9-\u4e38\u5c71\u6cd5 (Euler-Maruyama) \u6b27\u62c9-\u4f11\u6069\u6cd5 (Euler-Heun) / Milstein\u6cd5"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#41","title":"4.1 \u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206\u7684\u5b9a\u4e49\u4e0e\u7269\u7406\u52a8\u673a","text":"<p>\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u968f\u673a\u79ef\u5206\u7684\u5b9a\u4e49\u4e0e\u4f0a\u85e4\u79ef\u5206\u975e\u5e38\u76f8\u4f3c,\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\u88ab\u79ef\u51fd\u6570\u7684\u53d6\u6837\u70b9\u3002\u5b83\u9009\u62e9\u5728\u65f6\u95f4\u533a\u95f4\u7684\u4e2d\u70b9\u8fdb\u884c\u53d6\u6837:</p> \\[ \\int C(x_t) \\circ dW_t := \\lim_{n\\rightarrow\\infty} \\sum_{i=1}^{n} C\\left(\\frac{x_i + x_{i-1}}{2}\\right) \\Delta W_i \\] <p>(\u8fd9\u91cc\u7684 \\(\\circ\\) \u7b26\u53f7\u662f\u7528\u6765\u533a\u5206\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206\u7684\u5e38\u7528\u6807\u8bb0)\u3002</p> <p>\u7269\u7406\u52a8\u673a: \u4e3a\u4ec0\u4e48\u7269\u7406\u5b66\u5bb6\u5e38\u5e38\u504f\u7231\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206?\u539f\u56e0\u5728\u4e8e,\u8bb8\u591a\u7269\u7406\u7cfb\u7edf\u4e2d\u7684\u566a\u58f0\u5e76\u975e\u7406\u60f3\u7684\"\u767d\u566a\u58f0\"(\u5373\u65f6\u95f4\u4e0a\u5b8c\u5168\u4e0d\u76f8\u5173),\u800c\u662f\u5177\u6709\u4e00\u4e2a\u5f88\u5c0f\u4f46\u6709\u9650\u7684\u76f8\u5173\u65f6\u95f4\u7684\"\u6709\u8272\u566a\u58f0\"\u3002\u5f53\u6211\u4eec\u5c06\u4e00\u4e2a\u7531\u6709\u8272\u566a\u58f0\u9a71\u52a8\u7684\u7269\u7406\u8fc7\u7a0b,\u901a\u8fc7\u53d6\u76f8\u5173\u65f6\u95f4\u8d8b\u4e8e\u96f6\u7684\u6781\u9650\u6765\u63a8\u5bfc\u5176\u5bf9\u5e94\u7684SDE\u65f6,\u5f97\u5230\u7684\u81ea\u7136\u7ed3\u679c\u5c31\u662f\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u5f62\u5f0f\u7684SDE\u3002</p> <p>\u66f4\u91cd\u8981\u7684\u662f,\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u5fae\u79ef\u5206\u4fdd\u7559\u4e86\u7ecf\u5178\u5fae\u79ef\u5206\u7684\u94fe\u5f0f\u6cd5\u5219\u3002\u4e5f\u5c31\u662f\u8bf4,\u5982\u679c \\(x_t\\) \u662f\u4e00\u4e2a\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u8fc7\u7a0b,\u90a3\u4e48 \\(dF(x_t) = F'(x_t) \\circ dx_t\\),\u5f62\u5f0f\u4e0a\u4e0e\u7ecf\u5178\u5fae\u79ef\u5206\u5b8c\u5168\u4e00\u6837\u3002\u8fd9\u4f7f\u5f97\u5b83\u5728\u57fa\u4e8e\u7ecf\u5178\u529b\u5b66\u6216\u70ed\u529b\u5b66\u539f\u7406\u5efa\u7acb\u6a21\u578b\u65f6\u66f4\u4e3a\u76f4\u89c2\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#42","title":"4.2 \u63a8\u5bfc\u4e24\u79cd\u8868\u8ff0\u7684\u8f6c\u6362\u5173\u7cfb","text":"<p>\u65e2\u7136\u540c\u4e00\u4e2a\u7269\u7406\u8fc7\u7a0b\u53ef\u4ee5\u7528\u4e24\u79cd\u4e0d\u540c\u7684\u6570\u5b66\u8bed\u8a00\u6765\u63cf\u8ff0,\u90a3\u4e48\u8fd9\u4e24\u79cd\u8bed\u8a00\u4e4b\u95f4\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\"\u7ffb\u8bd1\u8bcd\u5178\"\u3002\u73b0\u5728,\u6211\u4eec\u6765\u63a8\u5bfc\u8fd9\u4e2a\u8f6c\u6362\u516c\u5f0f,\u63a8\u5bfc\u8fc7\u7a0b\u5c06\u4e25\u683c\u9075\u5faa\u6559\u6388\u7684\u677f\u4e66\u3002</p> <p></p> <p>\u6211\u4eec\u4ece\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206\u7684\u79bb\u6563\u548c\u51fa\u53d1:</p> \\[ \\sum_i C\\left(\\frac{x_i + x_{i-1}}{2}\\right) \\Delta W_i = \\sum_i C\\left(x_{i-1} + \\frac{1}{2}\\Delta x_i\\right) \\Delta W_i \\] <p>\u6211\u4eec\u5c06\u88ab\u79ef\u51fd\u6570 \\(C\\) \u5728\u5de6\u7aef\u70b9 \\(x_{i-1}\\) \u5904\u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00:</p> \\[ C\\left(x_{i-1} + \\frac{1}{2}\\Delta x_i\\right) \\approx C(x_{i-1}) + \\frac{1}{2} C'(x_{i-1}) \\Delta x_i \\] <p>\u5c06\u5c55\u5f00\u5f0f\u4ee3\u56de\u6c42\u548c\u4e2d,\u5f97\u5230\u4e24\u9879:</p> \\[ \\sum_i C(x_{i-1}) \\Delta W_i + \\frac{1}{2} \\sum_i C'(x_{i-1}) \\Delta x_i \\Delta W_i \\] <ul> <li> <p>\u7b2c\u4e00\u9879 \\(\\sum_i C(x_{i-1}) \\Delta W_i\\) \u6b63\u662f\u4f0a\u85e4\u79ef\u5206\u7684\u5b9a\u4e49\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u9879\u662f\u4e24\u8005\u5dee\u5f02\u7684\u5173\u952e\u3002\u6211\u4eec\u5c06\u4f0a\u85e4SDE\u7684\u79bb\u6563\u5f62\u5f0f \\(\\Delta x_i = A_{i-1} \\Delta t_i + C_{i-1} \\Delta W_i\\) \u4ee3\u5165\u7b2c\u4e8c\u9879:</p> </li> </ul> \\[ \\frac{1}{2} \\sum_i C'_{i-1} (A_{i-1} \\Delta t_i + C_{i-1} \\Delta W_i) \\Delta W_i = \\frac{1}{2} \\sum_i (C'_{i-1} A_{i-1} \\Delta t_i \\Delta W_i + C'_{i-1} C_{i-1} (\\Delta W_i)^2) \\] <p>\u5728\u53d6\u6781\u9650 \\(n\\rightarrow\\infty\\) \u7684\u8fc7\u7a0b\u4e2d,\\(\\Delta t_i \\Delta W_i\\) \u9879\u662f\u9ad8\u9636\u65e0\u7a77\u5c0f,\u5c06\u6d88\u5931\u3002\u800c \\((\\Delta W_i)^2\\) \u9879\u6839\u636e\u6211\u4eec\u4e4b\u524d\u8bc1\u660e\u7684\u6838\u5fc3\u6052\u7b49\u5f0f,\u5c06\u53d8\u4e3a \\(\\Delta t_i\\)\u3002\u56e0\u6b64,\u7b2c\u4e8c\u9879\u6536\u655b\u4e8e\u4e00\u4e2a\u666e\u901a\u7684\u9ece\u66fc\u79ef\u5206:</p> \\[ \\lim_{n\\rightarrow\\infty} \\frac{1}{2} \\sum_i C'_{i-1} C_{i-1} \\Delta t_i = \\frac{1}{2} \\int C(x_t) C'(x_t) dt \\]"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#43","title":"4.3 \u6700\u7ec8\u7684\u8f6c\u6362\u516c\u5f0f","text":"<p>\u7efc\u5408\u4ee5\u4e0a\u63a8\u5bfc,\u6211\u4eec\u5f97\u5230\u4e86\u4f0a\u85e4\u79ef\u5206\u548c\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb:</p> \\[ \\text{(Stratonovich)} \\int C(x_s) \\circ dW_s = \\text{(Ito)} \\int C(x_s) dW_s + \\frac{1}{2} \\int dt \\, C(x_t) C'(x_t) \\] <p>\u8fd9\u4e2a\u79ef\u5206\u5173\u7cfb\u76f4\u63a5\u5bfc\u81f4\u4e86\u4e24\u79cdSDE\u8868\u8ff0\u4e4b\u95f4\u7684\u8f6c\u6362\u6cd5\u5219\u3002\u5047\u8bbe\u4e00\u4e2a\u7269\u7406\u8fc7\u7a0b\u53ef\u4ee5\u7528\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947SDE\u63cf\u8ff0\u4e3a:</p> \\[ dx_t = \\tilde{A}(x_t, t) dt + C(x_t, t) \\circ dW_t \\] <p>\u90a3\u4e48,\u4e0e\u4e4b\u5b8c\u5168\u7b49\u4ef7\u7684\u4f0a\u85e4SDE\u4e3a:</p> \\[ dx_t = A(x_t, t) dt + C(x_t, t) dW_t \\] <p>\u5176\u4e2d,\u6269\u6563\u7cfb\u6570 \\(C\\) \u4fdd\u6301\u4e0d\u53d8,\u800c\u6f02\u79fb\u7cfb\u6570\u4e4b\u95f4\u5b58\u5728\u5982\u4e0b\u5173\u7cfb:</p> \\[ A_{\\text{Ito}} = A_{\\text{Strat}} + \\frac{1}{2} C(x_t, t) C'(x_t, t) \\] <p>\u8fd9\u4e2a\u5173\u7cfb\u662f\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u6210\u679c\u4e4b\u4e00\u3002\u5b83\u8868\u660e,\u4f0a\u85e4\u5f62\u5f0f\u7684SDE\u6f02\u79fb\u9879\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u989d\u5916\u7684\"\u566a\u58f0\u8bf1\u5bfc\u6f02\u79fb\"(noise-induced drift)\u6216\"\u4f2a\u6f02\u79fb\"(spurious drift)\u3002\u8fd9\u4e2a\u6f02\u79fb\u9879\u7684\u51fa\u73b0,\u6b63\u662f\u4e3a\u4e86\u8865\u507f\u4f0a\u85e4\u79ef\u5206\u5728\u5b9a\u4e49\u4e2d\u5ffd\u7565\u7684\u88ab\u79ef\u51fd\u6570\u4e0e\u566a\u58f0\u589e\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002</p> <p></p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#44-python","title":"4.4 Python\u6a21\u62df:\u4e58\u6027\u566a\u58f0\u4e0b\u7684\u5dee\u5f02","text":"<p>\u5f53\u566a\u58f0\u5f3a\u5ea6 \\(C(x_t, t)\\) \u4f9d\u8d56\u4e8e\u7cfb\u7edf\u72b6\u6001 \\(x_t\\) \u65f6(\u5373\u6240\u8c13\u7684\u4e58\u6027\u566a\u58f0),\u4f0a\u85e4\u548c\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u8868\u8ff0\u7684\u5dee\u5f02\u53d8\u5f97\u81f3\u5173\u91cd\u8981\u3002\u6211\u4eec\u4ee5\u51e0\u4f55\u5e03\u6717\u8fd0\u52a8\u4e3a\u4f8b,\u8fd9\u662f\u91d1\u878d\u4e2d\u6a21\u62df\u80a1\u7968\u4ef7\u683c\u7684\u6807\u51c6\u6a21\u578b:</p> \\[ dx_t = \\mu x_t dt + \\sigma x_t dW_t \\quad \\text{(Ito)} \\] <p>\u5176\u5bf9\u5e94\u7684\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u5f62\u5f0f\u4e3a(\u4f7f\u7528\u8f6c\u6362\u516c\u5f0f \\(A_{\\text{Strat}} = A_{\\text{Ito}} - \\frac{1}{2} C C'\\),\u5176\u4e2d \\(C = \\sigma x\\), \\(C' = \\sigma\\)):</p> \\[ dx_t = (\\mu - \\frac{1}{2} \\sigma^2) x_t dt + \\sigma x_t \\circ dW_t \\quad \\text{(Stratonovich)} \\] <p>\u8be5SDE\u7684\u7cbe\u786e\u89e3\u4e3a \\(x_t = x_0 \\exp((\\mu - \\frac{1}{2} \\sigma^2) t + \\sigma W_t)\\)\u3002\u5176\u671f\u671b\u503c\u4e3a \\(E[x_t] = x_0 e^{\\mu t}\\)\u3002</p> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u4f7f\u7528\u4e24\u79cd\u6570\u503c\u65b9\u6cd5\u6a21\u62df\u8be5\u8fc7\u7a0b,\u5e76\u4e0e\u89e3\u6790\u671f\u671b\u503c\u8fdb\u884c\u6bd4\u8f83:</p> <ol> <li> <p>\u4f0a\u85e4\u6a21\u62df: \u4f7f\u7528\u6807\u51c6\u7684\u6b27\u62c9-\u4e38\u5c71\u6cd5\u3002</p> </li> <li> <p>\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u6a21\u62df: \u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u9884\u6d4b-\u6821\u6b63\u683c\u5f0f(Heun\u65b9\u6cd5)\u6765\u8fd1\u4f3c\u4e2d\u70b9\u89c4\u5219\u3002</p> </li> </ol> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# --- Parameter definition ---\nmu = 0.1      # True drift rate\nsigma = 0.3   # Volatility\nx0 = 1.0      # Initial value\ndt = 0.001    # Time step\nT = 2.0       # Total time\nn = int(T / dt) # Total steps\nnum_paths = 5000 # Simulate large number of trajectories to calculate expected values\n\n# --- Simulation process ---\nx_ito = np.zeros((num_paths, n + 1))\nx_strat = np.zeros((num_paths, n + 1))\nx_ito[:, 0] = x0\nx_strat[:, 0] = x0\n\n# Generate all random numbers\nZ = np.random.randn(num_paths, n)\ndW = np.sqrt(dt) * Z\n\n# Drift coefficient\nA_ito = mu\nA_strat = mu - 0.5 * sigma**2\n\nfor i in range(n):\n    # 1. Ito Simulation (Euler-Maruyama)\n    x_ito[:, i+1] = x_ito[:, i] + A_ito * x_ito[:, i] * dt + sigma * x_ito[:, i] * dW[:, i]\n\n    # 2. Stratonovich Simulation (Heun's method)\n    # Predictor step\n    x_pred = x_strat[:, i] + A_strat * x_strat[:, i] * dt + sigma * x_strat[:, i] * dW[:, i]\n    # Corrector step using midpoint approximation\n    C_mid = sigma * (x_strat[:, i] + x_pred) / 2.0\n    x_strat[:, i+1] = x_strat[:, i] + A_strat * x_strat[:, i] * dt + C_mid * dW[:, i]\n\n\n# --- Calculate expected values and plot ---\nt = np.linspace(0, T, n + 1)\nexpected_x_ito = np.mean(x_ito, axis=0)\nexpected_x_strat = np.mean(x_strat, axis=0)\nanalytical_expected_x = x0 * np.exp(mu * t)\n\nplt.figure(figsize=(12, 7))\nplt.plot(t, analytical_expected_x, 'r-', lw=3, label='Analytical Expectation $E[x_t]=x_0 e^{\\mu t}$')\nplt.plot(t, expected_x_ito, 'b--', lw=2, label='Mean of Ito Simulations')\nplt.plot(t, expected_x_strat, 'g:', lw=2, label='Mean of Stratonovich Simulations')\n\nplt.title(\"Ito vs. Stratonovich Simulation for Multiplicative Noise\", fontsize=16)\nplt.xlabel(\"Time (t)\", fontsize=12)\nplt.ylabel(\"E[x(t)]\", fontsize=12)\nplt.grid(True)\nplt.legend()\nplt.show()\n</code></pre> </p> <p>\u4e24\u79cd\u6570\u503c\u65b9\u6cd5\u5f97\u5230\u7684\u7cfb\u7efc\u5e73\u5747\u503c\u90fd\u6b63\u786e\u5730\u6536\u655b\u5230\u4e86\u89e3\u6790\u671f\u671b\u503c \\(x_0 e^{\\mu t}\\)\u3002\u8fd9\u6709\u529b\u5730\u8bc1\u660e\u4e86,\u53ea\u8981\u4e3a\u7ed9\u5b9a\u7684SDE\u5f62\u5f0f(\u4f0a\u85e4\u6216\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947)\u9009\u62e9\u4e0e\u4e4b\u5339\u914d\u7684\u6570\u503c\u79ef\u5206\u65b9\u6848,\u4e24\u8005\u662f\u63cf\u8ff0\u540c\u4e00\u7269\u7406\u73b0\u5b9e\u7684\u5b8c\u5168\u7b49\u4ef7\u7684\u8bed\u8a00\u3002</p> <p>\u5982\u679c\u9519\u8bef\u5730\u5c06\u6b27\u62c9-\u4e38\u5c71\u6cd5(\u4e00\u79cd\u4f0a\u85e4\u683c\u5f0f)\u7528\u4e8e\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u5f62\u5f0f\u7684SDE,\u5c06\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u671f\u671b\u503c\u6f14\u5316\u8f68\u8ff9\u3002\u8fd9\u4e2a\u5b9e\u8df5\u6027\u7684\u4f8b\u5b50\u6700\u7ec8\u5f3a\u8c03\u4e86\u7406\u89e3\u5e76\u6b63\u786e\u5e94\u7528\u4f0a\u85e4-\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u8f6c\u6362\u89c4\u5219\u7684\u6781\u7aef\u91cd\u8981\u6027(\u5c06\u5728\u4e0b\u4e00\u5c0f\u8282\u8fdb\u4e00\u6b65\u5f3a\u8c03)\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#5","title":"5. \u603b\u7ed3:\u7edf\u4e00\u7684\u968f\u673a\u8fc7\u7a0b\u6846\u67b6","text":"<p>\u6700\u540e,Erwin Frey \u6559\u6388\u5b83\u5c06\u672c\u8bb2\u4e43\u81f3\u524d\u51e0\u8bb2\u7684\u6838\u5fc3\u5185\u5bb9\u878d\u6c47\u8d2f\u901a,\u6784\u5efa\u4e86\u4e00\u4e2a\u63cf\u8ff0\u4e00\u7ef4\u968f\u673a\u8fc7\u7a0b\u7684\u7edf\u4e00\u7406\u8bba\u6846\u67b6\u3002\u8fd9\u4e2a\u6846\u67b6\u5305\u542b\u4e86\u56db\u79cd\u6570\u5b66\u4e0a\u7b49\u4ef7\u4f46\u7269\u7406\u89c6\u89d2\u5404\u5f02\u7684\u8868\u8ff0\u65b9\u5f0f,\u5e76\u63ed\u793a\u4e86\u5b83\u4eec\u4e4b\u95f4\u7cbe\u786e\u7684\u8f6c\u6362\u5173\u7cfb\u3002\u5c06\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b\u7684\u4e09\u4e2a\u4e0d\u540c\u5c42\u9762\u7684\u63cf\u8ff0\u2014\u2014\u5fae\u89c2\u77e9\u3001\u5b8f\u89c2\u6982\u7387\u6f14\u5316\u548c\u4e2d\u89c2\u8f68\u8ff9\u52a8\u529b\u5b66\u2014\u2014\u8054\u7cfb\u5728\u4e00\u8d77\u3002</p> <p></p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#_2","title":"\u8d77\u70b9:\u4ece\"\u79d1\u5b66\u95ee\u9898\"\u5230\u53ef\u6d4b\u91cf\u7684\"\u77e9\"","text":"<p>\u7406\u8bba\u7684\u6784\u5efa\u5f80\u5f80\u59cb\u4e8e\u4e00\u4e2a\u5177\u4f53\u7684\"\u79d1\u5b66\u95ee\u9898\" (scientific problem)\u3002\u8fd9\u53ef\u80fd\u662f\u4e00\u6b21\u5b9e\u9a8c\u89c2\u6d4b(\u5982\u8ffd\u8e2a\u5355\u4e2a\u80f6\u4f53\u9897\u7c92\u7684\u5e03\u6717\u8fd0\u52a8)\u3001\u4e00\u6b21\u8ba1\u7b97\u673a\u6a21\u62df(\u5982\u5206\u5b50\u52a8\u529b\u5b66\u6a21\u62df),\u6216\u4e00\u4e2a\u5fae\u89c2\u7406\u8bba\u6a21\u578b\u3002\u9762\u5bf9\u8fd9\u4e9b\u590d\u6742\u7684\u3001\u5145\u6ee1\u968f\u673a\u6027\u7684\u6570\u636e\u6216\u8f68\u8ff9,\u7b2c\u4e00\u6b65\u4fbf\u662f\u63d0\u53d6\u5176\u6700\u6838\u5fc3\u7684\u7edf\u8ba1\u7279\u5f81,\u5373\"\u77e9\" (Moments)\u3002</p> <p>\u6f02\u79fb\u7cfb\u6570 (Drift): \\(A(x, t) = \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} \\langle x_{t+\\Delta t} - x_t \\rangle\\)\u3002</p> <p>\u7269\u7406\u610f\u4e49: \u6f02\u79fb\u7cfb\u6570 \\(A\\) \u63cf\u8ff0\u4e86\u7cfb\u7edf\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u6240\u7ecf\u5386\u7684\u5e73\u5747\u7684\u3001\u786e\u5b9a\u6027\u7684\u4f4d\u79fb\u3002\u5b83\u4ee3\u8868\u4e86\u4f5c\u7528\u5728\u7c92\u5b50\u4e0a\u7684\u6240\u6709\u786e\u5b9a\u6027\"\u529b\"\u7684\u5408\u6548\u679c,\u4f8b\u5982\u6765\u81ea\u5916\u52bf\u573a\u7684\u529b\u3001\u6469\u64e6\u529b\u7b49\u3002\u5728\u5b8f\u89c2\u4e0a,\u5b83\u51b3\u5b9a\u4e86\u7c92\u5b50\u7cfb\u7efc(\u6982\u7387\u4e91)\u6574\u4f53\u7684\u8fd0\u52a8\u65b9\u5411\u548c\u901f\u5ea6\u3002</p> <p>\u6269\u6563\u7cfb\u6570 (Diffusion): \\(B(x, t) = \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} \\langle (x_{t+\\Delta t} - x_t)^2 \\rangle\\)\u3002</p> <p>\u7269\u7406\u610f\u4e49: \u6269\u6563\u7cfb\u6570 \\(B\\) \u63cf\u8ff0\u4e86\u7cfb\u7edf\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u5747\u65b9\u4f4d\u79fb,\u5b83\u91cf\u5316\u4e86\u968f\u673a\u6da8\u843d\u7684\u5f3a\u5ea6\u3002\u5b83\u4ee3\u8868\u4e86\u6765\u81ea\u73af\u5883(\u5982\u70ed\u6d74)\u7684\u65e0\u6570\u6b21\u5fae\u89c2\u78b0\u649e\u6240\u4ea7\u751f\u7684\u968f\u673a\"\u8e22\u52a8\"\u7684\u5267\u70c8\u7a0b\u5ea6\u3002\u5728\u5b8f\u89c2\u4e0a,\u5b83\u51b3\u5b9a\u4e86\u6982\u7387\u4e91\u6269\u6563\u3001\u5c55\u5bbd\u7684\u901f\u5ea6\u3002</p> <p>\u6f02\u79fb\u548c\u6269\u6563\u8fd9\u4e24\u4e2a\u77e9,\u662f\u4ece\u5fae\u89c2\u968f\u673a\u6027\u4e2d\u63d0\u70bc\u51fa\u7684\u3001\u6700\u57fa\u672c\u7684\u5b8f\u89c2\u52a8\u529b\u5b66\u53c2\u6570,\u662f\u8fde\u63a5\u5fae\u89c2\u8f68\u8ff9\u4e0e\u5b8f\u89c2\u7edf\u8ba1\u89c4\u5f8b\u7684\u6865\u6881\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#-","title":"\u4ece\u77e9\u5230\u5b8f\u89c2\u6f14\u5316:\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b","text":"<p>\u4e00\u65e6\u6211\u4eec\u901a\u8fc7\u5b9e\u9a8c\u6216\u5fae\u89c2\u6a21\u578b\u786e\u5b9a\u4e86\u6f02\u79fb\u7cfb\u6570 \\(A\\) \u548c\u6269\u6563\u7cfb\u6570 \\(B\\),\u6211\u4eec\u5c31\u53ef\u4ee5\u7acb\u5373\u5199\u4e0b\u63cf\u8ff0\u6574\u4e2a\u7cfb\u7edf\u6982\u7387\u5bc6\u5ea6 \\(p(x,t)\\) \u6f14\u5316\u7684\u5b8f\u89c2\u52a8\u529b\u5b66\u65b9\u7a0b\u2014\u2014\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b (Fokker-Planck Equation, FPE)\u3002</p> \\[ \\partial_t p(x,t) = -\\partial_x [A(x, t) p(x, t)] + \\frac{1}{2} \\partial_x^2 [B(x, t) p(x, t)] \\] <p>\u7269\u7406\u8fc7\u7a0b\u4e0e\u610f\u4e49: \u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u662f\u4e00\u4e2a\u63cf\u8ff0\u6982\u7387\u5b88\u6052\u7684\u8fde\u7eed\u6027\u65b9\u7a0b\u3002\u5b83\u63cf\u7ed8\u4e86\u4e00\u5e45\"\u6982\u7387\u6d41\u4f53\"\u5728\u76f8\u7a7a\u95f4\u4e2d\u6d41\u52a8\u7684\u56fe\u666f:</p> <p>\u6f02\u79fb\u9879 \\(-\\partial_x [A p]\\) \u5982\u540c\u4e00\u4e2a\u5e73\u6d41\u9879,\u63cf\u8ff0\u4e86\u6982\u7387\u4e91\u7684\u4e2d\u5fc3\u5982\u4f55\u88ab\u786e\u5b9a\u6027\u7684\u6f02\u79fb\u529b \\(A\\) \u6240\u63a8\u52a8\u3002</p> <p>\u6269\u6563\u9879 \\(\\frac{1}{2} \\partial_x^2 [Bp]\\) \u5982\u540c\u4e00\u4e2a\u6269\u6563\u9879,\u63cf\u8ff0\u4e86\u6982\u7387\u4e91\u5982\u4f55\u56e0\u968f\u673a\u6da8\u843d \\(B\\) \u800c\u4e0d\u65ad\u5c55\u5bbd\u548c\u5f25\u6563\u3002</p> <p>FPE \u672c\u8eab\u662f\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u3002\u5b83\u5b8c\u7f8e\u5730\u8be0\u91ca\u4e86\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u6838\u5fc3\u601d\u60f3:\u5c3d\u7ba1\u5355\u4e2a\u7c92\u5b50\u7684\u8f68\u8ff9\u662f\u4e0d\u53ef\u9884\u6d4b\u7684,\u4f46\u7531\u5927\u91cf\u7c92\u5b50\u7ec4\u6210\u7684\u7cfb\u7efc\u7684\u6982\u7387\u6f14\u5316\u89c4\u5f8b\u5374\u662f\u5b8c\u5168\u786e\u5b9a\u7684\u3002\u8fd9\u662f\u4ece\"\u4e00\u68f5\u6811\"\u7684\u968f\u673a\u751f\u957f\u5230\"\u6574\u7247\u68ee\u6797\"\u7684\u786e\u5b9a\u6027\u53d8\u8fc1\u7684\u89c6\u89d2\u8f6c\u6362\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#_3","title":"\u4ece\u5b8f\u89c2\u6f14\u5316\u5230\u5fae\u89c2\u8f68\u8ff9:\u7b49\u4ef7\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b","text":"<p>\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u6240\u63cf\u8ff0\u7684\u5b8f\u89c2\u6982\u7387\u6f14\u5316,\u5176\u80cc\u540e\u5fc5\u7136\u5bf9\u5e94\u7740\u4e00\u4e2a\u5fae\u89c2\u7684\u3001\u5355\u7c92\u5b50\u5c42\u9762\u7684\u968f\u673a\u52a8\u529b\u5b66\u3002\u8fd9\u4e2a\u5fae\u89c2\u52a8\u529b\u5b66\u6b63\u662f\u7531\u6717\u4e4b\u4e07\u65b9\u7a0b(Langevin Equation),\u4e5f\u5c31\u662f\u6211\u4eec\u672c\u8bb2\u5b66\u4e60\u7684\u968f\u673a\u5fae\u5206\u65b9\u7a0b (SDE) \u6240\u63cf\u8ff0\u7684\u3002FPE \u4e0e SDE \u4e4b\u95f4\u662f\u5b8c\u5168\u7b49\u4ef7\u7684,\u53ef\u4ee5\u76f8\u4e92\u63a8\u5bfc\u3002</p> <p>\u4f0a\u85e4\u5f62\u5f0f (Ito Formulation):</p> \\[ dx_t = A(x_t, t) dt + C(x_t, t) dW_t \\] <p>\u8fd9\u91cc\u7684\u566a\u58f0\u5e45\u5ea6 \\(C(x,t)\\) \u4e0e FPE \u4e2d\u7684\u6269\u6563\u7cfb\u6570\u6709\u76f4\u63a5\u5173\u7cfb:\\(B(x,t) = C^2(x,t)\\)\u3002\u8fd9\u4e2a\u5f62\u5f0f\u4e0e FPE \u7684\u7cfb\u6570 \\(A\\) \u548c \\(B\\) \u76f4\u63a5\u5bf9\u5e94,\u5e76\u4e14\u7531\u4e8e\u5176\u4f18\u79c0\u7684\u6570\u5b66\u6027\u8d28(\u9785\u6027\u8d28),\u6210\u4e3a\u7406\u8bba\u5206\u6790\u548c\u6570\u503c\u6a21\u62df(\u5982\u6b27\u62c9-\u4e38\u5c71\u6cd5)\u7684\u9996\u9009\u3002</p> <p>\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u5f62\u5f0f (Stratonovich Formulation):</p> \\[ dx_t = \\left(A(x_t, t) - \\frac{1}{2} C(x_t, t) C'(x_t, t) \\right) dt + C(x_t, t) dW_t \\] <p>(\u6ce8\u610f:PPT\u4e2d\u7684 \\(dW_t\\) \u5728\u6b64\u5e94\u7406\u89e3\u4e3a \\(\\circ dW_t\\))</p> <p>\u8fd9\u4e2a\u5f62\u5f0f\u63cf\u8ff0\u7684\u662f\u5b8c\u5168\u76f8\u540c\u7684\u7269\u7406\u8fc7\u7a0b,\u4f46\u91c7\u7528\u4e86\u4e0d\u540c\u7684\u6570\u5b66\u7ea6\u5b9a\u3002</p> <p>\u7269\u7406\u8fc7\u7a0b\u4e0e\u610f\u4e49: \u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u5f62\u5f0f\u7684\u8ff7\u4eba\u4e4b\u5904\u5728\u4e8e,\u5b83\u9075\u5faa\u7ecf\u5178\u5fae\u79ef\u5206\u7684\u94fe\u5f0f\u6cd5\u5219\u3002\u5b83\u901a\u5e38\u88ab\u8ba4\u4e3a\u66f4\"\u7269\u7406\",\u56e0\u4e3a\u5b83\u53ef\u4ee5\u88ab\u4e25\u683c\u8bc1\u660e\u662f\u5f53\u4e00\u4e2a\u7269\u7406\u7cfb\u7edf\u53d7\u5230\u5177\u6709\u6781\u77ed\u4f46\u975e\u96f6\u5173\u8054\u65f6\u95f4\u7684\"\u6709\u8272\u566a\u58f0\"\u9a71\u52a8\u65f6,\u5728\u5173\u8054\u65f6\u95f4\u8d8b\u4e8e\u96f6\u7684\u6781\u9650\u4e0b\u5f97\u5230\u7684\u6b63\u786e\u6570\u5b66\u5f62\u5f0f\u3002\u4e3a\u4e86\u4fdd\u6301\u7ecf\u5178\u5fae\u79ef\u5206\u6cd5\u5219\u7684\u4f18\u7f8e\u5f62\u5f0f,\u5b83\u5fc5\u987b\u5c06\u4f0a\u85e4\u5f62\u5f0f\u4e2d\u7531\u4e8e \\((dW_t)^2=dt\\) \u89c4\u5219\u4ea7\u751f\u7684\u4fee\u6b63\u6548\u5e94,\u663e\u5f0f\u5730\u5438\u6536\u8fdb\u6f02\u79fb\u9879\u4e2d\u3002\u8fd9\u4e2a\u4fee\u6b63\u9879 \\(-\\frac{1}{2}CC'\\) \u6b63\u662f\u6211\u4eec\u4e4b\u524d\u63a8\u5bfc\u51fa\u7684\u4f0a\u85e4\u6f02\u79fb\u7684\u53cd\u5411\u4f53\u73b0\u3002\u5b83\u5e76\u975e\u4e00\u4e2a\u771f\u5b9e\u7684\u7269\u7406\u529b,\u800c\u662f\u4e3a\u4e86\u5728\u4e0d\u540c\u7684\u6570\u5b66\u8bed\u8a00\u95f4\u8fdb\u884c\u7ffb\u8bd1\u6240\u4ed8\u51fa\u7684\"\u4ee3\u4ef7\"\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#_4","title":"\u7edf\u4e00\u7684\u968f\u673a\u8fc7\u7a0b\u6846\u67b6","text":"<p>\u8fd9\u5f20\u603b\u7ed3\u56fe\u63ed\u793a\u7684\u8fde\u901a\u6027\u4e0e\u7b49\u4ef7\u6027\u544a\u8bc9\u6211\u4eec,\u9762\u5bf9\u4e00\u4e2a\u968f\u673a\u52a8\u529b\u5b66\u95ee\u9898,\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u6c42,\u5728\u56db\u4e2a\u7b49\u4ef7\u7684\u63cf\u8ff0\u5c42\u6b21\u4e4b\u95f4\u81ea\u7531\u5207\u6362:</p> <ol> <li> <p>\u4ece\u5b9e\u9a8c\u6570\u636e\u51fa\u53d1,\u8ba1\u7b97\u77e9 \\(A\\) \u548c \\(B\\)\u3002</p> </li> <li> <p>\u6709\u4e86\u77e9,\u4fbf\u53ef\u6784\u5efaFPE,\u4ece\u5b8f\u89c2\u5c42\u9762\u5206\u6790\u6982\u7387\u5206\u5e03\u7684\u6f14\u5316\u3001\u7a33\u6001\u548c\u5f1b\u8c6b\u65f6\u95f4\u3002</p> </li> <li> <p>\u82e5\u60f3\u8fdb\u884c\u8ba1\u7b97\u673a\u6a21\u62df,\u53ef\u4ee5\u76f4\u63a5\u5c06 \\(A\\) \u548c \\(B\\) \u7ffb\u8bd1\u6210\u4f0a\u85e4SDE,\u751f\u6210\u5177\u4f53\u7684\u968f\u673a\u8f68\u8ff9\u3002</p> </li> <li> <p>\u5982\u679c\u7406\u8bba\u6a21\u578b\u66f4\u9002\u5408\u7528\u7ecf\u5178\u5fae\u79ef\u5206\u6cd5\u5219\u6765\u8868\u8ff0,\u53ef\u4ee5\u901a\u8fc7\u7cbe\u786e\u7684\u8f6c\u6362\u516c\u5f0f,\u5c06\u5176\u8f6c\u5316\u4e3a\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947SDE\u3002</p> </li> </ol> <p>\u6700\u7ec8,\u9009\u62e9\u54ea\u79cd\u8868\u8ff0(\u7279\u522b\u662f\u4f0a\u85e4 vs. \u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947)\u4e0d\u662f\u4e00\u4e2a\u7269\u7406\u5bf9\u9519\u7684\u95ee\u9898,\u800c\u662f\u4e00\u4e2a\u6570\u5b66\u5de5\u5177\u7684\u9009\u62e9\u95ee\u9898\u3002\u7269\u7406\u73b0\u5b9e\u662f\u552f\u4e00\u7684,\u4f46\u63cf\u8ff0\u5b83\u7684\u8bed\u8a00\u53ef\u4ee5\u4e0d\u540c\u3002\u53ea\u8981\u6211\u4eec\u638c\u63e1\u4e86\u5b83\u4eec\u4e4b\u95f4\u7684\u8f6c\u6362\u89c4\u5219,\u5c31\u80fd\u786e\u4fdd\u6211\u4eec\u5bf9\u540c\u4e00\u4e2a\u7269\u7406\u8fc7\u7a0b\u7684\u63cf\u8ff0\u662f\u81ea\u6d3d\u548c\u6b63\u786e\u7684\u3002\u8fd9\u4e2a\u7edf\u4e00\u7684\u6846\u67b6,\u662f\u73b0\u4ee3\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u5b66\u4e2d\u5206\u6790\u3001\u5efa\u6a21\u548c\u6a21\u62df\u968f\u673a\u73b0\u8c61\u7684\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#_5","title":"\u5165\u95e8\u8005\u6307\u5357:\u4f55\u65f6\u4f7f\u7528\u4f55\u79cd\u8868\u8ff0?","text":""},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#_6","title":"\u4f55\u65f6\u4f7f\u7528\u4f0a\u85e4\u8868\u8ff0?","text":"<ul> <li> <p>\u6570\u503c\u6a21\u62df: \u7edd\u5927\u591a\u6570\u6807\u51c6\u7684SDE\u6570\u503c\u79ef\u5206\u683c\u5f0f,\u5982\u6211\u4eec\u7528\u8fc7\u7684\u6b27\u62c9-\u4e38\u5c71\u6cd5,\u90fd\u662f\u57fa\u4e8e\u4f0a\u85e4\u79ef\u5206\u7684\u79bb\u6563\u5316\u3002\u56e0\u6b64,\u5728\u8fdb\u884c\u8ba1\u7b97\u673a\u6a21\u62df\u524d,\u901a\u5e38\u9700\u8981\u5c06SDE\u8f6c\u6362\u4e3a\u4f0a\u85e4\u5f62\u5f0f\u3002</p> </li> <li> <p>\u91d1\u878d\u6570\u5b66: \u4f0a\u85e4\u79ef\u5206\u7684\u9785\u6027\u8d28\u662f\u98ce\u9669\u4e2d\u6027\u5b9a\u4ef7\u7406\u8bba\u7684\u57fa\u77f3,\u56e0\u6b64\u5728\u91d1\u878d\u9886\u57df\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\u3002</p> </li> <li> <p>\u6570\u5b66\u5206\u6790: \u5f53\u9700\u8981\u5229\u7528\u9785\u7406\u8bba\u7b49\u5f3a\u5927\u6570\u5b66\u5de5\u5177\u8fdb\u884c\u4e25\u8c28\u5206\u6790\u65f6,\u4f0a\u85e4\u8868\u8ff0\u662f\u9996\u9009\u3002</p> </li> </ul>"},{"location":"zh/notes/21.%20%E4%BC%8A%E8%97%A4%E7%A7%AF%E5%88%86%E4%B8%8E%E7%BB%9F%E4%B8%80%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E6%A1%86%E6%9E%B6/#_7","title":"\u4f55\u65f6\u4f7f\u7528\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u8868\u8ff0?","text":"<ul> <li> <p>\u7269\u7406\u5efa\u6a21: \u5f53\u4ece\u9075\u5faa\u7ecf\u5178\u5fae\u79ef\u5206\u6cd5\u5219\u7684\u7269\u7406\u539f\u7406(\u5982\u53d8\u5206\u539f\u7406)\u51fa\u53d1\u6784\u5efa\u6a21\u578b\u65f6,\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u662f\u66f4\u81ea\u7136\u7684\u9009\u62e9\u3002</p> </li> <li> <p>\u6709\u8272\u566a\u58f0\u6781\u9650: \u5f53\u6a21\u578b\u662f\u4f5c\u4e3a\u6709\u8272\u566a\u58f0\u9a71\u52a8\u7cfb\u7edf\u7684\u767d\u566a\u58f0\u6781\u9650\u65f6,\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u8868\u8ff0\u662f\u6b63\u786e\u7684\u7ed3\u679c\u3002</p> </li> <li> <p>\u5750\u6807\u4e0d\u53d8\u6027: \u5728\u6d41\u5f62\u4e0a\u5904\u7406SDE\u65f6,\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u8868\u8ff0\u5177\u6709\u66f4\u597d\u7684\u5750\u6807\u53d8\u6362\u6027\u8d28\u3002</p> </li> </ul> <p>\u9ec4\u91d1\u6cd5\u5219: \u4e00\u4e2a\u6ca1\u6709\u660e\u786e\u6307\u5b9a\u79ef\u5206\u7ea6\u5b9a\u7684SDE\u662f\u4e0d\u660e\u786e\u7684\u3002\u5728\u4efb\u4f55\u5e94\u7528\u4e2d,\u90fd\u5fc5\u987b\u6e05\u6670\u5730\u6307\u660e\u4f60\u4f7f\u7528\u7684\u662f\u4f0a\u85e4\u79ef\u5206\u8fd8\u662f\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/","title":"\u5f15\u8a00\uff1a\u7406\u89e3\u968f\u673a\u8fd0\u52a8\u7684\u7b2c\u4e09\u79cd\u89c6\u89d2","text":"<p>\u5728\u4e4b\u524d\u7684\u8bb2\u5ea7\u4e2d\uff0cErwin Frey \u6559\u6388\u5df2\u7ecf\u63a2\u8ba8\u4e86\u4e24\u79cd\u63cf\u8ff0\u968f\u673a\u8fc7\u7a0b\u7684\u5f3a\u5927\u6846\u67b6\uff1a\u6717\u4e4b\u4e07\u65b9\u7a0b (Langevin equation) \u548c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b (Fokker-Planck equation)\u3002\u6717\u4e4b\u4e07\u65b9\u7a0b\u4ece\u5fae\u89c2\u89c6\u89d2\u51fa\u53d1\uff0c\u8ffd\u8e2a\u4e00\u4e2a\u7c92\u5b50\u5728\u968f\u673a\u529b\u7684\u4f5c\u7528\u4e0b\u6240\u5f62\u6210\u7684\u5355\u6761\u3001\u5177\u4f53\u7684\u3001\u5145\u6ee1\u566a\u58f0\u7684\u8f68\u8ff9\u3002\u800c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u5219\u91c7\u7528\u5b8f\u89c2\u7684\u7edf\u8ba1\u89c6\u89d2\uff0c\u63cf\u8ff0\u4e86\u7531\u65e0\u6570\u4e2a\u6b64\u7c7b\u7c92\u5b50\u7ec4\u6210\u7684\u7cfb\u7efc\u7684\u6982\u7387\u5bc6\u5ea6\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u3002\u8fd9\u4e24\u79cd\u65b9\u6cd5\u662f\u7b49\u4ef7\u7684\uff0c\u4f46\u5b83\u4eec\u63d0\u4f9b\u4e86\u770b\u5f85\u540c\u4e00\u95ee\u9898\u7684\u4e0d\u540c\u89d2\u5ea6\u3002</p> <p></p> <p>\u5728\u7b2c19\u8bb2\u4e2d\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u7b2c\u4e09\u79cd\u6846\u67b6\uff1a\u8def\u5f84\u79ef\u5206 (Path Integral)\u3002\u8def\u5f84\u79ef\u5206\u65b9\u6cd5\u6700\u521d\u7531\u8bfa\u4f2f\u7279\u00b7\u7ef4\u7eb3 (Norbert Wiener) \u5728\u7814\u7a76\u968f\u673a\u8fc7\u7a0b\u65f6\u63d0\u51fa\uff0c\u540e\u7531\u7406\u67e5\u5fb7\u00b7\u8d39\u66fc (Richard Feynman) \u53d1\u5c55\u5e76\u5e94\u7528\u4e8e\u91cf\u5b50\u529b\u5b66\uff0c\u6210\u4e3a\u73b0\u4ee3\u7269\u7406\u5b66\u7684\u57fa\u77f3\u4e4b\u4e00\u3002\u5b83\u63d0\u51fa\u4e86\u4e00\u79cd\u9769\u547d\u6027\u7684\u89c2\u70b9\uff1a\u8981\u8ba1\u7b97\u4e00\u4e2a\u7cfb\u7edf\u4ece\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\u6f14\u5316\u5230\u4e00\u4e2a\u6700\u7ec8\u72b6\u6001\u7684\u6982\u7387\uff0c\u6211\u4eec\u4e0d\u5e94\u53ea\u5173\u6ce8\u6700\u53ef\u80fd\u7684\u90a3\u6761\u8def\u5f84\uff0c\u800c\u5e94\u8be5\u8003\u8651\u5e76\"\u52a0\u548c\"\u7cfb\u7edf\u53ef\u80fd\u7ecf\u5386\u7684\u6240\u6709\u53ef\u80fd\u8def\u5f84\u3002</p> <p>\u8fd9\u4e2a\"\u5bf9\u6240\u6709\u5386\u53f2\u6c42\u548c (sum over histories)\"\u7684\u601d\u60f3\uff0c\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u8fde\u63a5\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u8f68\u8ff9\u89c6\u89d2\u548c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u7684\u6982\u7387\u5bc6\u5ea6\u89c6\u89d2\u7684\u6865\u6881\u3002\u6bcf\u4e00\u6761\u53ef\u80fd\u7684\u8def\u5f84\u90fd\u88ab\u8d4b\u4e88\u4e00\u4e2a\u7279\u5b9a\u7684\"\u6743\u91cd\"\uff0c\u8fd9\u4e2a\u6743\u91cd\u7684\u5927\u5c0f\u53cd\u6620\u4e86\u8be5\u8def\u5f84\u51fa\u73b0\u7684\u53ef\u80fd\u6027\u3002\u901a\u8fc7\u5bf9\u6240\u6709\u8def\u5f84\u7684\u6743\u91cd\u8fdb\u884c\u79ef\u5206\uff08\u4e00\u79cd\u5728\u65e0\u7a77\u7ef4\u51fd\u6570\u7a7a\u95f4\u4e0a\u7684\u79ef\u5206\uff09\uff0c\u6211\u4eec\u4fbf\u80fd\u5f97\u5230\u7cfb\u7edf\u603b\u7684\u8f6c\u79fb\u6982\u7387\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u4ec5\u5728\u6982\u5ff5\u4e0a\u6781\u4e3a\u4f18\u96c5\uff0c\u5728\u8ba1\u7b97\u4e0a\u4e5f\u5f02\u5e38\u5f3a\u5927\u3002\u5b83\u5c06\u4e00\u4e2a\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u95ee\u9898\uff0c\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u7edf\u8ba1\u529b\u5b66\u6216\u91cf\u5b50\u573a\u8bba\u4e2d\u7684\u6cdb\u51fd\u79ef\u5206\u95ee\u9898\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u501f\u9274\u540e\u8005\u7684\u8bb8\u591a\u6210\u719f\u6280\u672f\uff0c\u5982\u5fae\u6270\u7406\u8bba\u548c\u91cd\u6574\u5316\u7fa4\u65b9\u6cd5\uff0c\u6765\u5206\u6790\u590d\u6742\u7684\u968f\u673a\u7cfb\u7edf\uff0c\u5c24\u5176\u662f\u90a3\u4e9b\u7531\u4e8e\u4e58\u6027\u566a\u58f0 (multiplicative noise) \u800c\u96be\u4ee5\u76f4\u63a5\u6c42\u89e3\u7684\u7cfb\u7edf\u3002\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\uff0c\u5c31\u662f\u7cfb\u7edf\u5730\u63a8\u5bfc\u5e76\u7406\u89e3\u5982\u4f55\u4e3a\u542b\u4e58\u6027\u566a\u58f0\u7684\u968f\u673a\u8fc7\u7a0b\u6784\u5efa\u8def\u5f84\u79ef\u5206\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#1","title":"1. \u56de\u987e\uff1a\u591a\u53d8\u91cf\u7cfb\u7edf\u7684\u57fa\u7840\u63cf\u8ff0","text":"<p>\u5728\u6df1\u5165\u8def\u5f84\u79ef\u5206\u7684\u63a8\u5bfc\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u56de\u987e\u4e00\u4e0b\u4e0a\u4e00\u8282\u63cf\u8ff0\u591a\u53d8\u91cf\u968f\u673a\u7cfb\u7edf\u7684\u4e24\u4e2a\u7b49\u4ef7\u7684\u6570\u5b66\u6846\u67b6\u3002\u7406\u89e3\u8fd9\u4e24\u4e2a\u51fa\u53d1\u70b9\uff0c\u5bf9\u4e8e\u6784\u5efa\u8fde\u63a5\u5b83\u4eec\u7684\u8def\u5f84\u79ef\u5206\u4e4b\u6865\u81f3\u5173\u91cd\u8981\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#11","title":"1.1 \u6717\u4e4b\u4e07\u65b9\u7a0b (\u4f0a\u85e4\u5f62\u5f0f)\uff1a\u7c92\u5b50\u7684\u5fae\u89c2\u89c6\u89d2","text":"<p>\u591a\u53d8\u91cf\u7cfb\u7edf\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\uff08\u5728\u4f0a\u85e4 (Ito) \u8be0\u91ca\u4e0b\uff09\u63cf\u8ff0\u4e86\u7cfb\u7edf\u72b6\u6001\u5411\u91cf \\(x_t\\) \u968f\u65f6\u95f4\u7684\u6f14\u5316\uff0c\u5176\u5fae\u5206\u5f62\u5f0f\u5982\u4e0b\uff1a</p> \\[dx_t = A(x_t, t)dt + C(x_t, t)dW_t\\] <p>\u5176\u4e2d\uff1a</p> <ul> <li> <p>\\(x_t\\) \u662f\u4e00\u4e2a \\(d\\) \u7ef4\u5411\u91cf\uff0c\u4ee3\u8868\u7cfb\u7edf\u5728\u65f6\u523b \\(t\\) \u7684\u72b6\u6001\uff08\u4f8b\u5982\uff0c\u591a\u4e2a\u7c92\u5b50\u7684\u4f4d\u7f6e\u3001\u901f\u5ea6\u7b49\uff09\u3002</p> </li> <li> <p>\\(A(x_t, t)\\) \u662f\u6f02\u79fb\u5411\u91cf (drift vector)\uff0c\u4ee3\u8868\u4f5c\u7528\u5728\u7cfb\u7edf\u4e0a\u7684\u786e\u5b9a\u6027\u529b\u6216\u8d8b\u52bf\u3002\u5b83\u63cf\u8ff0\u4e86\u5728\u6ca1\u6709\u566a\u58f0\u7684\u60c5\u51b5\u4e0b\uff0c\u7cfb\u7edf\u7684\u5e73\u5747\u8fd0\u52a8\u65b9\u5411\u3002</p> </li> <li> <p>\\(dW_t\\) \u662f\u4e00\u4e2a \\(d\\) \u7ef4\u7ef4\u7eb3\u8fc7\u7a0b\uff08\u6216\u5e03\u6717\u8fd0\u52a8\uff09\u7684\u65e0\u7a77\u5c0f\u589e\u91cf\u5411\u91cf\u3002\u5b83\u7684\u6bcf\u4e00\u4e2a\u5206\u91cf\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u3001\u670d\u4ece\u9ad8\u65af\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\uff0c\u5176\u6982\u7387\u5206\u5e03\u4e3a\uff1a   $$   P(dW_t) = \\frac{1}{(2\\pi dt)^{d/2}} \\exp\\left(-\\frac{1}{2dt} dW_t^2\\right)   $$   \u8fd9\u610f\u5473\u7740 \\(dW_t\\) \u7684\u5747\u503c\u4e3a\u96f6\uff0c\u65b9\u5dee\u4e3a \\(dt\\)\u3002</p> </li> <li> <p>\\(C(x_t, t)\\) \u662f\u566a\u58f0\u77e9\u9635 (noise matrix) \u6216\u6269\u6563\u77e9\u9635\u3002\u5b83\u63cf\u8ff0\u4e86\u968f\u673a\u529b\u5982\u4f55\u4f5c\u7528\u4e8e\u7cfb\u7edf\u7684\u4e0d\u540c\u81ea\u7531\u5ea6\u3002</p> </li> </ul> <p>\u8fd9\u8282\u8bfe\u7684\u7126\u70b9\u662f\u4e58\u6027\u566a\u58f0\uff0c\u5176\u6570\u5b66\u7279\u5f81\u5728\u4e8e\u566a\u58f0\u77e9\u9635 \\(C\\) \u4f9d\u8d56\u4e8e\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001 \\(x_t\\)\u3002\u8fd9\u5177\u6709\u6df1\u523b\u7684\u7269\u7406\u610f\u4e49\uff1a\u968f\u673a\u6270\u52a8\u7684\u5f3a\u5ea6\u6216\u7279\u6027\u53d6\u51b3\u4e8e\u7cfb\u7edf\u6240\u5904\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u5728\u91d1\u878d\u6a21\u578b\u4e2d\uff0c\u80a1\u7968\u4ef7\u683c\u7684\u6ce2\u52a8\u5e45\u5ea6\u901a\u5e38\u4e0e\u5176\u81ea\u8eab\u4ef7\u683c\u6210\u6b63\u6bd4\uff1b\u5728\u751f\u7269\u79cd\u7fa4\u6a21\u578b\u4e2d\uff0c\u73af\u5883\u7684\u968f\u673a\u6ce2\u52a8\u5bf9\u79cd\u7fa4\u6570\u91cf\u7684\u5f71\u54cd\u4e5f\u4e0e\u79cd\u7fa4\u5927\u5c0f\u6709\u5173\u3002\u8fd9\u79cd\u72b6\u6001\u4f9d\u8d56\u7684\u566a\u58f0\u4f7f\u5f97\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u884c\u4e3a\u8fdc\u6bd4\u52a0\u6027\u566a\u58f0\uff08\\(C\\) \u4e3a\u5e38\u6570\uff09\u66f4\u4e3a\u590d\u6742\u548c\u4e30\u5bcc\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#12-","title":"1.2 \u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff1a\u7cfb\u7efc\u7684\u5b8f\u89c2\u89c6\u89d2","text":"<p>\u4e0e\u6717\u4e4b\u4e07\u65b9\u7a0b\u63cf\u8ff0\u5355\u6761\u8f68\u8ff9\u4e0d\u540c\uff0c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u63cf\u8ff0\u4e86\u5927\u91cf\u76f8\u540c\u7cfb\u7edf\u7ec4\u6210\u7684\u7cfb\u7efc\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \\(p(x, t)\\) \u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\uff1a</p> \\[\\partial_t p(\\mathbf{x}, t) = -\\sum_i \\partial_i \\left[ A_i(\\mathbf{x}, t) p(\\mathbf{x}, t) \\right] + \\frac{1}{2} \\sum_{i,j} \\partial_i \\partial_j \\left[ B_{ij}(\\mathbf{x}, t) p(\\mathbf{x}, t) \\right]\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\u7684\u6982\u7387\u5b88\u6052\u65b9\u7a0b\uff1a</p> <ul> <li> <p>\u7b2c\u4e00\u9879\u662f\u6f02\u79fb\u9879\uff0c\u63cf\u8ff0\u4e86\u6982\u7387\u5206\u5e03\u7684\"\u4e2d\u5fc3\"\u6216\u5cf0\u503c\u5982\u4f55\u968f\u7740\u786e\u5b9a\u6027\u7684\u6f02\u79fb\u573a \\(A\\) \u8fd0\u52a8\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u9879\u662f\u6269\u6563\u9879\uff0c\u63cf\u8ff0\u4e86\u6982\u7387\u5206\u5e03\u5982\u4f55\u968f\u7740\u65f6\u95f4\u9010\u6e10\u5c55\u5bbd\u6216\u5f25\u6563\u3002</p> </li> </ul> <p>\u8fd9\u4e24\u4e2a\u63cf\u8ff0\u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u8054\u7cfb\uff0c\u5373\u6269\u6563\u5f20\u91cf (diffusion tensor) \\(B\\) \u4e0e\u566a\u58f0\u77e9\u9635 \\(C\\) \u7684\u5173\u7cfb\uff1a</p> \\[B(x, t) = C(x, t) \\cdot C^T(x, t)\\] <p>\u8fd9\u4e2a\u5173\u7cfb\u5f0f\u7cbe\u786e\u5730\u7f16\u7801\u4e86\u5fae\u89c2\u566a\u58f0\u7684\u7edf\u8ba1\u7279\u6027\u5982\u4f55\u8f6c\u5316\u4e3a\u5b8f\u89c2\u6982\u7387\u5bc6\u5ea6\u7684\u6269\u6563\u884c\u4e3a\u3002\u77e9\u9635\u4e58\u79ef \\(C \\cdot C^T\\) \u5b9e\u8d28\u4e0a\u8ba1\u7b97\u4e86\u7531 \\(C\\) \u8f6c\u6362\u540e\u7684\u566a\u58f0\u7684\u534f\u65b9\u5dee\u77e9\u9635\u3002\u5982\u679c \\(C\\) \u662f\u5bf9\u89d2\u77e9\u9635\uff0c\u610f\u5473\u7740\u4e0d\u540c\u65b9\u5411\u7684\u566a\u58f0\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff1b\u5982\u679c \\(C\\) \u542b\u6709\u975e\u5bf9\u89d2\u5143\uff0c\u5219\u4e0d\u540c\u65b9\u5411\u7684\u968f\u673a\"\u8e22\u529b\"\u4e4b\u95f4\u5b58\u5728\u5173\u8054\u3002\u6269\u6563\u5f20\u91cf \\(B\\) \u5b8c\u7f8e\u5730\u6355\u6349\u4e86\u8fd9\u4e9b\u5173\u8054\uff0c\u5e76\u51b3\u5b9a\u4e86\u6982\u7387\u4e91\u5728\u591a\u7ef4\u7a7a\u95f4\u4e2d\u6269\u6563\u65f6\u7684\u5f62\u72b6\uff08\u4f8b\u5982\uff0c\u662f\u5706\u5f62\u8fd8\u662f\u692d\u5706\u5f62\uff09\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u516c\u5f0f\u662f\u8fde\u63a5\u5fae\u89c2\uff08\u6717\u4e4b\u4e07\uff09\u548c\u5b8f\u89c2\uff08\u798f\u514b-\u666e\u6717\u514b\uff09\u63cf\u8ff0\u7684\u5173\u952e.</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#2","title":"2. \u968f\u673a\u5fae\u5206\u65b9\u7a0b\u7684\u8def\u5f84\u79ef\u5206\u63a8\u5bfc","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u4ece\u6717\u4e4b\u4e07\u65b9\u7a0b\u51fa\u53d1\uff0c\u4e00\u6b65\u6b65\u6784\u5efa\u51fa\u7b49\u4ef7\u7684\u8def\u5f84\u79ef\u5206\u8868\u8ff0\u3002\u8fd9\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u5c06\u5c55\u793a\u8def\u5f84\u79ef\u5206\u662f\u5982\u4f55\u4ece\u79bb\u6563\u7684\u65f6\u95f4\u6b65\u4e2d\"\u751f\u957f\"\u51fa\u6765\u7684\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#21-","title":"2.1 \u4ece\u8fde\u7eed\u65f6\u95f4\u5230\u79bb\u6563\u6b65\u957f\uff1a\u6b27\u62c9-\u4e38\u5c71\u683c\u5f0f","text":"<p>\u6211\u4eec\u65e0\u6cd5\u76f4\u63a5\u5904\u7406\u8fde\u7eed\u65f6\u95f4\u7684\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff0c\u56e0\u6b64\u7b2c\u4e00\u6b65\u662f\u5c06\u5176\u79bb\u6563\u5316\u3002\u6211\u4eec\u5c06\u603b\u65f6\u95f4 \\(T\\) \u5206\u5272\u6210 \\(N\\) \u4e2a\u5fae\u5c0f\u7684\u65f6\u95f4\u6b65\u957f \\(\\Delta t = T/N\\)\u3002\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u65f6\u95f4\u6b65\uff0c\u4ece \\(t_i\\) \u5230 \\(t_{i+1}\\)\uff0c\u6717\u4e4b\u4e07\u65b9\u7a0b\u53ef\u4ee5\u8fd1\u4f3c\u5199\u4e3a\uff1a</p> \\[x_{i+1} - x_i = A(x_i) \\Delta t + C(x_i) \\Delta W_{i+1}\\] <p>\u8fd9\u91cc\uff0c\\(\\Delta W_{i+1} = W(t_{i+1}) - W(t_i)\\) \u662f\u4e00\u4e2a\u670d\u4ece\u5747\u503c\u4e3a0\u3001\u534f\u65b9\u5dee\u77e9\u9635\u4e3a \\(I \\Delta t\\) \u7684\u9ad8\u65af\u968f\u673a\u5411\u91cf\u3002\u8fd9\u79cd\u79bb\u6563\u5316\u65b9\u6cd5\u88ab\u79f0\u4e3a\u6b27\u62c9-\u4e38\u5c71 (Euler-Maruyama) \u65b9\u6cd5 \u3002</p> <p>\u6b27\u62c9-\u4e38\u5c71\uff08Euler-Maruyama\uff09\u65b9\u6cd5\u662f\u4e00\u79cd\u7528\u4e8e\u6570\u503c\u6c42\u89e3\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff08SDE\uff09\u7684\u7ecf\u5178\u7b97\u6cd5\uff0c\u5176\u53d1\u5c55\u6e90\u4e8e18\u4e16\u7eaa\u6b27\u62c9\u63d0\u51fa\u7684\u5e38\u5fae\u5206\u65b9\u7a0b\uff08ODE\uff09\u6570\u503c\u89e3\u6cd5\u2014\u2014\u6b27\u62c9\u6cd5\u3002\u6b27\u62c9\u6cd5\u901a\u8fc7\u79bb\u6563\u5316\u65f6\u95f4\u6b65\u957f\u5e76\u5229\u7528\u5411\u524d\u5dee\u5546\u8fd1\u4f3c\u5bfc\u6570\uff0c\u4e3a\u786e\u5b9a\u6027\u7cfb\u7edf\u7684\u6570\u503c\u8ba1\u7b97\u5960\u5b9a\u4e86\u57fa\u7840\u300220\u4e16\u7eaa50\u5e74\u4ee3\uff0c\u65e5\u672c\u6570\u5b66\u5bb6\u4e38\u5c71\u4eea\u56db\u90ce\u5c06\u5176\u63a8\u5e7f\u81f3\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u9886\u57df\uff0c\u63d0\u51fa\u4e86\u6b27\u62c9-\u4e38\u5c71\u65b9\u6cd5\uff0c\u901a\u8fc7\u5f15\u5165\u968f\u673a\u9879\uff08\u5982\u5e03\u6717\u8fd0\u52a8\u589e\u91cf\uff09\u6a21\u62df\u7cfb\u7edf\u7684\u968f\u673a\u6027\u6f14\u5316\u3002\u8be5\u65b9\u6cd5\u7684\u7269\u7406\u672c\u8d28\u5728\u4e8e\uff0c\u5b83\u5c06\u786e\u5b9a\u6027\u52a8\u529b\u5b66\u4e0e\u968f\u673a\u6270\u52a8\u76f8\u7ed3\u5408\uff0c\u901a\u8fc7\u8fed\u4ee3\u516c\u5f0f\u9010\u6b65\u903c\u8fd1SDE\u7684\u89e3\uff0c\u9002\u7528\u4e8e\u63cf\u8ff0\u53d7\u566a\u58f0\u5f71\u54cd\u7684\u52a8\u6001\u7cfb\u7edf\u3002\u5176\u5e94\u7528\u5e7f\u6cdb\uff0c\u5305\u62ec\u91d1\u878d\u9886\u57df\u7684\u671f\u6743\u5b9a\u4ef7\uff08\u5982\u51e0\u4f55\u5e03\u6717\u8fd0\u52a8\u6a21\u578b\uff09\u3001\u7269\u7406\u5b66\u4e2d\u7684\u5e03\u6717\u8fd0\u52a8\u6a21\u62df\u3001\u751f\u7269\u533b\u5b66\u4e2d\u7684\u968f\u673a\u8fc7\u7a0b\u5efa\u6a21\uff0c\u4ee5\u53ca\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u6269\u6563\u6a21\u578b\u91c7\u6837\uff08\u5982\u56fe\u50cf\u751f\u6210\uff09\u3002\u5c3d\u7ba1\u6b27\u62c9-\u4e38\u5c71\u65b9\u6cd5\u5177\u6709\u8ba1\u7b97\u7b80\u5355\u3001\u6613\u4e8e\u5b9e\u73b0\u7684\u4f18\u70b9\uff0c\u4f46\u5176\u6536\u655b\u9636\u8f83\u4f4e\u4e14\u5bf9\u6b65\u957f\u654f\u611f\uff0c\u901a\u5e38\u7528\u4e8e\u4f4e\u7cbe\u5ea6\u9700\u6c42\u6216\u590d\u6742\u7cfb\u7edf\u521d\u6b65\u5206\u6790\u3002</p> <p>\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u7ec6\u8282\u662f\uff0c\u6f02\u79fb\u9879 \\(A\\) \u548c\u566a\u58f0\u77e9\u9635 \\(C\\) \u90fd\u662f\u5728\u65f6\u95f4\u6b65\u7684\u8d77\u59cb\u70b9 \\(x_i\\) \u8fdb\u884c\u53d6\u503c\u7684\u3002\u8fd9\u79cd\"\u975e\u9884\u89c1\u6027 (non-anticipating)\"\u7684\u53d6\u503c\u65b9\u5f0f\uff0c\u662f\u4f0a\u85e4\u79ef\u5206\u7684\u6838\u5fc3\u7279\u5f81\u3002\u6b63\u662f\u8fd9\u4e2a\u5728\u63a8\u5bfc\u4e4b\u521d\u5c31\u505a\u51fa\u7684\u9009\u62e9\uff0c\u51b3\u5b9a\u4e86\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u7684\u5c06\u662f\u4e0e\u4f0a\u85e4\u8be0\u91ca\u76f8\u5bf9\u5e94\u7684\u8def\u5f84\u79ef\u5206\u3002\u5982\u679c\u9009\u62e9\u5728\u65f6\u95f4\u6b65\u7684\u4e2d\u70b9\u53d6\u503c\uff0c\u5219\u4f1a\u5bfc\u5411\u53e6\u4e00\u79cd\u968f\u673a\u5fae\u79ef\u5206\u2014\u2014\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947 (Stratonovich) \u79ef\u5206\uff0c\u6211\u4eec\u5c06\u5728\u8bfe\u7a0b\u7684\u672b\u5c3e\u8ba8\u8bba\u5176\u533a\u522b\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#22","title":"2.2 \u77ed\u65f6\u4f20\u64ad\u5b50\uff1a\u5355\u6b65\u8f6c\u79fb\u6982\u7387","text":"<p>\u73b0\u5728\u6211\u4eec\u6765\u8ba1\u7b97\u7cfb\u7edf\u5728\u5355\u4e2a\u65f6\u95f4\u6b65\u5185\uff0c\u4ece\u72b6\u6001 \\(x_i\\) \u8f6c\u79fb\u5230 \\(x_{i+1}\\) \u7684\u6761\u4ef6\u6982\u7387\uff0c\u5373\u77ed\u65f6\u4f20\u64ad\u5b50 \\(P(x_{i+1} | x_i)\\)\u3002</p> <p>\u4ece\u79bb\u6563\u5316\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u53ef\u4ee5\u770b\u51fa\uff0c\u7531\u4e8e \\(\\Delta W_{i+1}\\) \u662f\u9ad8\u65af\u968f\u673a\u53d8\u91cf\uff0c\u90a3\u4e48\u4f4d\u79fb \\(x_{i+1} - x_i\\) \u4e5f\u670d\u4ece\u9ad8\u65af\u5206\u5e03\u3002\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u5206\u5e03\u7684\u5747\u503c\u548c\u534f\u65b9\u5dee\uff1a</p> <ul> <li> <p>**\u5747\u503c (Mean):   $$   \\mu_i = x_i + A(x_i) \\Delta t   $$</p> </li> <li> <p>\u534f\u65b9\u5dee\u77e9\u9635 (Covariance Matrix):   $$   \\langle (C(x_i) \\Delta W_{i+1})(C(x_i) \\Delta W_{i+1})^T \\rangle = C(x_i) \\langle \\Delta W_{i+1} \\Delta W_{i+1}^T \\rangle C(x_i)^T = C(x_i) (I \\Delta t) C(x_i)^T = B(x_i) \\Delta t   $$</p> </li> </ul> <p>\u56e0\u6b64\uff0c\u5355\u6b65\u8f6c\u79fb\u6982\u7387\u662f\u4e00\u4e2a\u591a\u7ef4\u9ad8\u65af\u5206\u5e03\uff1a</p> \\[P(\\vec{x}_{i+1} | \\vec{x}_i) = \\frac{1}{\\sqrt{(2\\pi \\Delta t)^d \\det \\mathbf{B}(\\vec{x}_i)}} \\exp \\left[ -\\frac{1}{2\\Delta t} (\\vec{x}_{i+1} - \\vec{\\mu}_i)^T \\mathbf{B}^{-1}(\\vec{x}_i) (\\vec{x}_{i+1} - \\vec{\\mu}_i) \\right]\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u867d\u7136\u7cbe\u786e\uff0c\u4f46\u5728\u6307\u6570\u9879\u4e2d\u51fa\u73b0\u7684\u77e9\u9635\u9006 \\(\\mathbf{B}^{-1}\\) \u4f1a\u7ed9\u540e\u7eed\u7684\u8ba1\u7b97\u5e26\u6765\u5f88\u5927\u9ebb\u70e6\u3002\u6211\u4eec\u7684\u4e0b\u4e00\u6b65\u5c31\u662f\u5229\u7528\u6570\u5b66\u6280\u5de7\u6765\u6d88\u9664\u5b83\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#23","title":"2.3 \u5f15\u5165\u54cd\u5e94\u573a\uff1a\u5085\u91cc\u53f6\u7a7a\u95f4\u65b9\u6cd5","text":"<p>\u4e3a\u4e86\u5904\u7406\u6307\u6570\u9879\u4e2d\u7684\u77e9\u9635\u9006\uff0c\u6211\u4eec\u91c7\u7528\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u6570\u5b66\u5de5\u5177\uff1a\u9ad8\u65af\u79ef\u5206\u7684\u5085\u91cc\u53f6\u8868\u793a\u3002\u4efb\u4f55\u4e00\u4e2a\u9ad8\u65af\u51fd\u6570\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u5176\u5085\u91cc\u53f6\u53d8\u6362\u7684\u79ef\u5206\u5f62\u5f0f\u3002\u5229\u7528\u4e0b\u9762\u7684\u9ad8\u65af\u79ef\u5206\u6052\u7b49\u5f0f\uff1a</p> \\[\\exp \\left[ -\\frac{1}{2} \\vec{v}^T \\mathbf{M}^{-1} \\vec{v} \\right] = \\sqrt{\\frac{\\det \\mathbf{M}}{(2\\pi)^d}} \\int d^d\\vec{q} \\exp \\left[ -\\frac{1}{2} \\vec{q}^T \\mathbf{M} \\vec{q} + i \\vec{q}^T \\vec{v} \\right]\\] <p>\u5c06\u8fd9\u4e2a\u6052\u7b49\u5f0f\u5e94\u7528\u4e8e\u6211\u4eec\u7684\u77ed\u65f6\u4f20\u64ad\u5b50\uff0c\u4ee4 \\(\\vec{v} = \\vec{x}_{i+1} - \\vec{\\mu}_i\\) \u548c \\(\\mathbf{M} = \\mathbf{B}(\\vec{x}_i)\\Delta t\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 \\(P(\\vec{x}_{i+1} | \\vec{x}_i)\\) \u91cd\u5199\u4e3a\u4e00\u4e2a\u5bf9\u8f85\u52a9\u53d8\u91cf \\(\\vec{q}\\) \u7684\u79ef\u5206\uff1a</p> \\[P(\\vec{x}_{i+1} | \\vec{x}_i) = \\int \\frac{d^d \\vec{q}_{i+1}}{(2\\pi)^d} \\exp \\left[ -\\frac{1}{2} \\Delta t \\vec{q}_{i+1}^T \\mathbf{B}(\\vec{x}_i) \\vec{q}_{i+1} + i \\vec{q}_{i+1}^T (\\vec{x}_{i+1} - \\vec{x}_i - A(\\vec{x}_i)\\Delta t) \\right]\\] <p>\u8fd9\u4e2a\u53d8\u6362\u662f\u6574\u4e2a\u63a8\u5bfc\u7684\u5173\u952e\u4e00\u6b65\u3002\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u79ef\u5206\u53d8\u91cf \\(\\vec{q}\\)\uff0c\u5b83\u5728\u7269\u7406\u4e0a\u88ab\u79f0\u4e3a\u54cd\u5e94\u573a (response field)\u3002\u901a\u8fc7\u8fd9\u4e2a\u53d8\u6362\uff0c\u6211\u4eec\u6210\u529f\u5730\u5c06\u539f\u6765\u6307\u6570\u9879\u4e2d\u590d\u6742\u7684\u77e9\u9635\u9006 \\(\\mathbf{B}^{-1}\\) \u66ff\u6362\u6210\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4e8c\u6b21\u578b \\(\\vec{q}^T \\mathbf{B} \\vec{q}\\)\uff0c\u8fd9\u4e3a\u6211\u4eec\u5c06\u8bb8\u591a\u65f6\u95f4\u6b65\u4e32\u8054\u8d77\u6765\u94fa\u5e73\u4e86\u9053\u8def\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#24","title":"2.4 \u7ec4\u88c5\u8def\u5f84\uff1a\u4ece\u6b65\u957f\u5230\u8f68\u8ff9","text":"<p>\u4e00\u6761\u5b8c\u6574\u7684\u8def\u5f84\u662f\u4ece\u521d\u59cb\u72b6\u6001 \\(x_0\\) \u5728 \\(t_0\\) \u65f6\u523b\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u4e2d\u95f4\u72b6\u6001 \\(x_1, \\ldots, x_{N-1}\\)\uff0c\u6700\u7ec8\u5230\u8fbe\u672b\u6001 \\(x_N\\) \u5728 \\(t_N\\) \u65f6\u523b\u7684\u6f14\u5316\u8fc7\u7a0b\u3002\u5176\u603b\u7684\u8f6c\u79fb\u6982\u7387\u53ef\u4ee5\u901a\u8fc7\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u6027\u8d28\uff0c\u5c06\u6240\u6709\u5355\u6b65\u8f6c\u79fb\u6982\u7387\u76f8\u4e58\uff0c\u5e76\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u4e2d\u95f4\u72b6\u6001\u8fdb\u884c\u79ef\u5206\u5f97\u5230\uff08\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b Chapman-Kolmogorov equation\uff09\uff1a</p> \\[P(x_N, t_N | x_0, t_0) = \\int dx_1 \\cdots \\int dx_{N-1} \\prod_{i=0}^{N-1} P(x_{i+1} | x_i)\\] <p>\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u6bcf\u4e00\u6b65\u7684\u4f20\u64ad\u5b50 \\(P(x_{i+1} | x_i)\\) \u90fd\u7528\u5176\u5085\u91cc\u53f6\u8868\u793a\u4ee3\u5165\uff1a</p> \\[P(\\vec{x}_f, t_f | \\vec{x}_0, t_0) = \\int \\left( \\prod_{i=1}^{N-1} d\\vec{x}_i \\right) \\left( \\prod_{j=1}^{N} \\frac{d\\vec{q}_j}{(2\\pi)^d} \\right) \\exp \\left[ -\\frac{1}{2} \\sum_{k=1}^N \\Delta t \\vec{q}_k^T \\mathbf{B}(\\vec{x}_{k-1}) \\vec{q}_k + i \\sum_{k=1}^N \\vec{q}_k^T (\\vec{x}_k - \\vec{x}_{k-1} - \\vec{A}(\\vec{x}_{k-1})\\Delta t) \\right]\\] <p>\u5176\u4e2d \\(x_f = x_N\\)\u3002\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u770b\u8d77\u6765\u5f88\u590d\u6742\uff0c\u4f46\u5b83\u5df2\u7ecf\u5177\u5907\u4e86\u8def\u5f84\u79ef\u5206\u7684\u96cf\u5f62\uff1a\u6211\u4eec\u5bf9\u6240\u6709\u4e2d\u95f4\u65f6\u523b\u7684\u4f4d\u7f6e \\(\\vec{x}_i\\) \u548c\u6240\u6709\u8f85\u52a9\u573a \\(\\vec{q}_j\\) \u8fdb\u884c\u79ef\u5206\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#25-msrjd","title":"2.5 \u8fde\u7eed\u6781\u9650\u4e0e MSRJD \u4f5c\u7528\u91cf","text":"<p>\u6700\u540e\u4e00\u6b65\u662f\u53d6\u8fde\u7eed\u6781\u9650\uff0c\u5373\u8ba9\u65f6\u95f4\u6b65\u6570 \\(N \\to \\infty\\)\uff0c\u65f6\u95f4\u6b65\u957f \\(\\Delta t \\to 0\\)\u3002\u5728\u8fd9\u4e2a\u6781\u9650\u4e0b\uff1a</p> <ul> <li> <p>\u79bb\u6563\u7684\u6c42\u548c \\(\\sum_{k=1}^N \\Delta t (\\ldots)\\) \u53d8\u6210\u4e86\u65f6\u95f4\u7684\u79ef\u5206 \\(\\int_{t_0}^{t_f} dt (\\ldots)\\)\u3002</p> </li> <li> <p>\u5dee\u5206 \\((x_k - x_{k-1}) / \\Delta t\\) \u53d8\u6210\u4e86\u65f6\u95f4\u5bfc\u6570 \\(\\partial_t x\\)\u3002</p> </li> <li> <p>\u5bf9\u6240\u6709\u79bb\u6563\u53d8\u91cf \\(x_i\\) \u548c \\(q_j\\) \u7684\u65e0\u7a77\u4e58\u79ef\u79ef\u5206\uff0c\u88ab\u5f62\u5f0f\u4e0a\u8bb0\u4e3a\u6cdb\u51fd\u79ef\u5206 (functional integral) \u6216\u8def\u5f84\u79ef\u5206\uff0c\u8bb0\u4f5c \\(\\int \\mathcal{D}[x] \\mathcal{D}[q]\\)\u3002</p> </li> </ul> <p>\u7ecf\u8fc7\u6574\u7406\uff0c\u6211\u4eec\u5f97\u5230\u6700\u7ec8\u7684\u8def\u5f84\u79ef\u5206\u8868\u8fbe\u5f0f\uff1a</p> \\[P(x_f, t_f | x_0, t_0) = \\int_{x(t_0) = x_0}^{x(t_f) = x_f} \\mathcal{D}[x] \\mathcal{D}[q] \\exp(-S[x, iq])\\] <p>\u5176\u4e2d\uff0c\u6307\u6570\u4e0a\u7684 \\(S\\) \u88ab\u79f0\u4e3a\u4f5c\u7528\u91cf (action)\uff0c\u5176\u5177\u4f53\u5f62\u5f0f\u4e3a\uff1a</p> \\[S[\\vec{x}, i\\vec{q}] = \\int_{t_0}^{t_f} dt \\left[ i\\vec{q}^T(\\partial_t \\vec{x} - \\vec{A}(\\vec{x})) + \\frac{1}{2} (i\\vec{q})^T \\mathbf{B}(\\vec{x}) (i\\vec{q}) \\right]\\] <p>\u8fd9\u4e2a\u4f5c\u7528\u91cf\u5728\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u4e2d\u88ab\u79f0\u4e3a\u9a6c\u4e01-\u897f\u5409\u4e9a-\u7f57\u65af-\u8a79\u68ee-\u5fb7\u591a\u7c73\u5c3c\u897f\u65af (Martin-Siggia-Rose-Janssen-De Dominicis, MSRJD) \u4f5c\u7528\u91cf\uff0c\u6211\u4eec\u5728\u7b2c19\u8bb2\u7b80\u8981\u63d0\u8fc7\u3002\u5b83\u5b8c\u7f8e\u5730\u5c06\u4e00\u4e2a\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u95ee\u9898\uff0c\u91cd\u65b0\u8868\u8ff0\u4e3a\u4e86\u4e00\u4e2a\u573a\u8bba\u95ee\u9898\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#3","title":"3. \u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u7684\u7269\u7406\u89e3\u91ca","text":"<p>\u6211\u4eec\u5df2\u7ecf\u4ece\u6570\u5b66\u4e0a\u63a8\u5bfc\u51fa\u4e86 MSRJD \u4f5c\u7528\u91cf\uff0c\u73b0\u5728\u9700\u8981\u6df1\u5165\u7406\u89e3\u5176\u6bcf\u4e00\u9879\u7684\u7269\u7406\u610f\u4e49\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#31","title":"3.1 \"\u6f02\u79fb\"\u9879\uff1a\u5f3a\u5236\u65bd\u52a0\u52a8\u529b\u5b66\u89c4\u5219","text":"<p>\u4f5c\u7528\u91cf\u7684\u7b2c\u4e00\u9879\u662f \\(i\\vec{q}^T(\\partial_t \\vec{x} - \\vec{A}(\\vec{x}))\\)\u3002\u5728\u6cdb\u51fd\u79ef\u5206\u4e2d\uff0c\u5bf9\u54cd\u5e94\u573a \\(\\vec{q}(t)\\) \u5728\u6240\u6709\u51fd\u6570\u7a7a\u95f4\u4e0a\u8fdb\u884c\u79ef\u5206\uff0c\u5176\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u3002\u8fd9\u4e2a\u79ef\u5206\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6cdb\u51fd\u5fb7\u5c14\u5854\u51fd\u6570 (functional delta function)\uff1a</p> \\[ \\int \\mathcal{D}[q] \\exp \\left( - \\int dt \\, i q^T (\\partial_t x - \\mathbf{A}(x)) \\right) \\propto \\delta[\\partial_t x - \\mathbf{A}(x)] \\] <p>\u8fd9\u4e2a\u5fb7\u5c14\u5854\u51fd\u6570\u662f\u4e00\u4e2a\"\u786c\u7ea6\u675f\"\uff0c\u5b83\u5f3a\u5236\u8981\u6c42\u5728\u8def\u5f84\u79ef\u5206\u4e2d\u6240\u6709\u88ab\u6c42\u548c\u7684\u8def\u5f84 \\(x(t)\\) \u90fd\u5fc5\u987b\uff08\u5728\u6ca1\u6709\u566a\u58f0\u65f6\uff09\u6ee1\u8db3\u786e\u5b9a\u6027\u90e8\u5206\u7684\u52a8\u529b\u5b66\u65b9\u7a0b \\(\\partial_t x = A(x)\\)\u3002\u56e0\u6b64\uff0c\u8fd9\u4e00\u9879\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u7cfb\u7edf\u7684\u786e\u5b9a\u6027\u6f14\u5316\u89c4\u5219\"\u5d4c\u5165\"\u5230\u8def\u5f84\u79ef\u5206\u7684\u6846\u67b6\u4e2d\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#32","title":"3.2 \"\u566a\u58f0\u54cd\u5e94\u573a\"\u9879\uff1a\u7f16\u7801\u6da8\u843d\u7684\u7edf\u8ba1\u7279\u6027","text":"<p>\u4f5c\u7528\u91cf\u7684\u7b2c\u4e8c\u9879\u662f \\(\\frac{1}{2} (iq)^T \\mathbf{B}(x) (iq)\\)\u3002\u8fd9\u4e00\u9879\u662f\u54cd\u5e94\u573a \\(i\\vec{q}\\) \u7684\u4e8c\u6b21\u578b\u3002\u5b83\u7684\u5f62\u5f0f\u4e0e\u4e00\u4e2a\u5747\u503c\u4e3a\u96f6\u3001\u534f\u65b9\u5dee\u77e9\u9635\u4e3a \\(\\mathbf{B}(\\vec{x})\\) \u7684\u9ad8\u65af\u5206\u5e03\u7684\u6307\u6570\u90e8\u5206\u5b8c\u5168\u76f8\u540c\u3002</p> <p>\u56e0\u6b64\uff0c\u8fd9\u4e00\u9879\u7684\u7269\u7406\u610f\u4e49\u662f\u7f16\u7801\u4e86\u7cfb\u7edf\u6240\u53d7\u566a\u58f0\u7684\u5168\u90e8\u7edf\u8ba1\u4fe1\u606f\u2014\u2014\u5b83\u7684\u65b9\u5dee\u548c\u4e0d\u540c\u5206\u91cf\u4e4b\u95f4\u7684\u5173\u8054\u90fd\u5305\u542b\u5728\u6269\u6563\u5f20\u91cf \\(\\mathbf{B}(x)\\) \u4e2d\u3002\u54cd\u5e94\u573a \\(q\\) \u4e4b\u6240\u4ee5\u5f97\u540d\uff0c\u662f\u56e0\u4e3a\u5728\u66f4\u9ad8\u7b49\u7684\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bf9\u4f5c\u7528\u91cf\u52a0\u4e0a\u4e00\u4e2a\u4e0e \\(q\\) \u8026\u5408\u7684\u6e90\u9879\uff0c\u7136\u540e\u5bf9\u6e90\u9879\u6c42\u6cdb\u51fd\u5bfc\u6570\uff0c\u6765\u8ba1\u7b97\u7cfb\u7edf\u5bf9\u5916\u90e8\u5fae\u5c0f\u6270\u52a8\u7684\u7ebf\u6027\u54cd\u5e94\u51fd\u6570\u3002</p> <p>\u5c06\u968f\u673a\u8fc7\u7a0b\u91cd\u5199\u4e3a\u8def\u5f84\u79ef\u5206\uff0c\u5b9e\u9645\u4e0a\u662f\u5c06\u5176\u8f6c\u5316\u4e3a\u4e00\u4e2a\uff080+1\uff09\u7ef4\u7684\u573a\u8bba\uff08\u53ea\u6709\u65f6\u95f4\u7ef4\uff0c\u6ca1\u6709\u7a7a\u95f4\u7ef4\uff09\u3002\u5728\u8fd9\u4e2a\u7406\u8bba\u4e2d\uff0c\u7cfb\u7edf\u7684\u72b6\u6001 \\(x(t)\\) \u548c\u54cd\u5e94\u573a \\(q(t)\\) \u6210\u4e3a\u4e86\u52a8\u529b\u5b66\"\u573a\"\u53d8\u91cf\u3002\u8fd9\u4e2a\u89c6\u89d2\u6781\u4e3a\u5f3a\u5927\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u6211\u4eec\u5c06\u91cf\u5b50\u573a\u8bba\u4e2d\u53d1\u5c55\u51fa\u7684\u5f3a\u5927\u5de5\u5177\uff08\u5982\u8d39\u66fc\u56fe\u3001\u5fae\u6270\u7406\u8bba\u3001\u91cd\u6574\u5316\u7fa4\u7b49\uff09\"\u79fb\u690d\"\u8fc7\u6765\uff0c\u7528\u4e8e\u5206\u6790\u7ecf\u5178\u968f\u673a\u8fc7\u7a0b\uff0c\u8fd9\u5bf9\u4e8e\u7814\u7a76\u76f8\u53d8\u3001\u4e34\u754c\u73b0\u8c61\u7b49\u590d\u6742\u95ee\u9898\u5c24\u5176\u6709\u6548\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#4","title":"4. \u53e6\u4e00\u79cd\u89c6\u89d2\uff1a\u542f\u53d1\u5f0f\u63a8\u5bfc","text":"<p>\u9664\u4e86\u4e0a\u8ff0\u4ece\u79bb\u6563\u5316\u51fa\u53d1\u7684\u4e25\u683c\u63a8\u5bfc\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u66f4\u7269\u7406\u3001\u66f4\u542f\u53d1\u5f0f\u7684\u65b9\u6cd5\u5f97\u5230\u76f8\u540c\u7684\u4f5c\u7528\u91cf\u3002\u8fd9\u4e2a\u65b9\u6cd5\u80fd\u5e2e\u52a9\u6211\u4eec\u66f4\u76f4\u89c2\u5730\u7406\u89e3\u54cd\u5e94\u573a \\(q\\) \u7684\u6765\u6e90\u548c\u610f\u4e49\u3002</p> <p>1.\u4ece\u663e\u5f0f\u566a\u58f0\u51fa\u53d1\uff1a\u6211\u4eec\u5c06\u6717\u4e4b\u4e07\u65b9\u7a0b\u5199\u6210\u5305\u542b\u4e00\u4e2a\u6807\u51c6\u9ad8\u65af\u767d\u566a\u58f0\u6e90 \\(\\eta(t)\\) \u7684\u5f62\u5f0f\uff1a</p> \\[\\partial_t x = A(x) + C(x) \\eta(t)\\] <p>\u5176\u4e2d \\(\\langle \\eta_i(t) \\eta_j(t') \\rangle = \\delta_{ij} \\delta(t - t')\\)\u3002\u6240\u6709\u566a\u58f0\u8def\u5f84 \\(\\eta(t)\\) \u51fa\u73b0\u7684\u6982\u7387\u7531\u4e00\u4e2a\u9ad8\u65af\u6743\u91cd\u51b3\u5b9a\uff1a\\(\\mathcal{P}[\\eta] \\sim \\exp(-\\frac{1}{2} \\int dt\\, \\eta^2)\\)\u3002</p> <p>2.\u5bf9\u566a\u58f0\u8fdb\u884c\u5e73\u5747\uff1a\u4efb\u4f55\u4e00\u4e2a\u53ef\u89c2\u6d4b\u91cf \\(\\sigma(x)\\) \u7684\u671f\u671b\u503c\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u5148\u56fa\u5b9a\u4e00\u6761\u566a\u58f0\u8def\u5f84 \\(\\eta(t)\\) \u6c42\u89e3\u51fa\u5bf9\u5e94\u7684\u8f68\u8ff9 \\(x(t)\\)\uff0c\u8ba1\u7b97 \\(\\sigma(x)\\)\uff0c\u7136\u540e\u518d\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u566a\u58f0\u8def\u5f84\u8fdb\u884c\u52a0\u6743\u5e73\u5747\u5f97\u5230\uff1a</p> \\[\\langle \\sigma(x) \\rangle = \\int \\mathcal{D}[\\eta] \\sigma(x) \\mathcal{P}[\\eta]\\] <p>3.\u7528\u5fb7\u5c14\u5854\u51fd\u6570\u65bd\u52a0\u7ea6\u675f\uff1a\u4e3a\u4e86\u5728\u540c\u4e00\u4e2a\u79ef\u5206\u4e2d\u5904\u7406 \\(x\\) \u548c \\(\\eta\\)\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6cdb\u51fd\u5fb7\u5c14\u5854\u51fd\u6570\u6765\u5f3a\u5236\u8981\u6c42 \\(x(t)\\) \u5fc5\u987b\u662f\u7ed9\u5b9a \\(\\eta(t)\\) \u7684\u89e3\uff1a</p> \\[\\langle \\sigma(x) \\rangle = \\int \\mathcal{D}[x] \\mathcal{D}[\\eta] \\sigma(x) \\delta[\\partial_t x - A(x) - C(x)\\eta(t)] \\exp(-\\frac{1}{2} \\int dt\\, \\eta^2)\\] <p>4.\u5fb7\u5c14\u5854\u51fd\u6570\u7684\u5085\u91cc\u53f6\u8868\u793a\uff1a\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5fb7\u5c14\u5854\u51fd\u6570\u5199\u6210\u5b83\u7684\u5085\u91cc\u53f6\u79ef\u5206\u5f62\u5f0f\uff0c\u8fd9\u4fbf\u81ea\u7136\u5730\u5f15\u5165\u4e86\u54cd\u5e94\u573a \\(q\\)\uff1a</p> \\[\\delta[\\ldots] = \\int \\mathcal{D}[q] \\exp(i \\int dt\\, q^T(\\partial_t x - A(x) - C(x)\\eta(t)))\\] <p>5.\u5bf9\u566a\u58f0\u79ef\u5206\uff1a\u5c06\u6b64\u8868\u8fbe\u5f0f\u4ee3\u56de\uff0c\u73b0\u5728\u7684\u79ef\u5206\u6d89\u53ca \\(x, \\eta, q\\)\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u7269\u7406\u566a\u58f0 \\(\\eta(t)\\) \u8fdb\u884c\u79ef\u5206\u3002\u5173\u4e8e \\(\\eta\\) \u7684\u79ef\u5206\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u9ad8\u65af\u79ef\u5206\uff0c\u56e0\u4e3a\u5b83\u5728\u6307\u6570\u9879\u4e2d\u53ea\u51fa\u73b0\u4e86\u4e8c\u6b21\u9879\uff08\u6765\u81ea \\(\\mathcal{P}[\\eta]\\)\uff09\u548c\u7ebf\u6027\u9879\uff08\u6765\u81ea\u4e0e \\(q\\) \u7684\u8026\u5408\uff09\u3002\u901a\u8fc7\"\u914d\u65b9\u6cd5\"\u5b8c\u6210\u8fd9\u4e2a\u9ad8\u65af\u79ef\u5206\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[\\int \\mathcal{D}[\\vec{\\eta}] \\exp\\left(-\\int dt \\left[ \\frac{1}{2} \\vec{\\eta}^T \\vec{\\eta} + i\\vec{q}^T \\mathbf{C}\\vec{\\eta} \\right]\\right) = \\exp\\left(\\int dt \\frac{1}{2} (-i\\vec{q}^T \\mathbf{C})(\\mathbf{C}^T i\\vec{q})\\right) = \\exp\\left(-\\int dt \\frac{1}{2} \\vec{q}^T \\mathbf{C}\\mathbf{C}^T \\vec{q}\\right)\\] <p>\u5c06\u8fd9\u4e2a\u7ed3\u679c\u4e0e\u6307\u6570\u4e2d\u5269\u4e0b\u7684\u9879\u7ec4\u5408\u8d77\u6765\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u53ea\u4f9d\u8d56\u4e8e \\(x\\) \u548c \\(q\\) \u7684\u8def\u5f84\u79ef\u5206\uff0c\u5176\u4f5c\u7528\u91cf\u4e0e\u6211\u4eec\u4e4b\u524d\u4e25\u683c\u63a8\u5bfc\u5f97\u5230\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\u3002</p> <p>\u8fd9\u4e2a\u542f\u53d1\u5f0f\u63a8\u5bfc\u6e05\u6670\u5730\u63ed\u793a\u4e86\u54cd\u5e94\u573a \\(q\\) \u7684\u7269\u7406\u672c\u8d28\uff1a\u5b83\u662f\u52a8\u529b\u5b66\u7ea6\u675f \\((\\partial_t x - A - C\\eta)\\) \u7684\u5085\u91cc\u53f6\u5171\u8f6d\u573a\u3002\u5b83\u8bde\u751f\u4e8e\"\u8fd0\u52a8\u65b9\u7a0b\u5fc5\u987b\u88ab\u9075\u5b88\"\u8fd9\u4e00\u7269\u7406\u8981\u6c42\u7684\u6570\u5b66\u8868\u8fbe\u3002\u968f\u540e\uff0c\u901a\u8fc7\u5bf9\u7269\u7406\u566a\u58f0 \\(\\eta\\) \u7684\u79ef\u5206\uff0c\u566a\u58f0\u7684\u7edf\u8ba1\u7279\u6027\u88ab\"\u8f6c\u79fb\"\u5230\u4e86\u4f5c\u7528\u91cf\u4e2d\u5173\u4e8e \\(q\\) \u7684\u4e8c\u6b21\u9879\u4e0a\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u4f5c\u7528\u91cf\u4e2d\u7684\u54cd\u5e94\u573a\u90e8\u5206\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u90a3\u4e2a\u88ab\u79ef\u5206\u6389\u7684\u7269\u7406\u566a\u58f0\u6240\u7559\u4e0b\u7684\"\u5e7d\u7075\"\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#5-python","title":"5. \u6a21\u62df\u4e0e\u53ef\u89c6\u5316\uff1aPython\u4e2d\u7684\u51e0\u4f55\u5e03\u6717\u8fd0\u52a8","text":"<p>\u7406\u8bba\u63a8\u5bfc\u662f\u62bd\u8c61\u7684\uff0c\u901a\u8fc7\u6570\u503c\u6a21\u62df\u53ef\u4ee5\u76f4\u89c2\u5730\u611f\u53d7\u4e58\u6027\u566a\u58f0\u7684\u72ec\u7279\u6548\u5e94\u3002\u6211\u4eec\u5c06\u4ee5\u4e00\u4e2a\u5178\u578b\u7684\u4e58\u6027\u566a\u58f0\u7cfb\u7edf\u2014\u2014\u51e0\u4f55\u5e03\u6717\u8fd0\u52a8 (Geometric Brownian Motion, GBM) \u4e3a\u4f8b\u8fdb\u884c\u6f14\u793a\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#51","title":"5.1 \u4e58\u6027\u566a\u58f0\u7684\u5178\u578b\u8303\u4f8b\uff1a\u51e0\u4f55\u5e03\u6717\u8fd0\u52a8","text":"<p>\u51e0\u4f55\u5e03\u6717\u8fd0\u52a8\u7684\u968f\u673a\u5fae\u5206\u65b9\u7a0b (SDE) \u5982\u4e0b\uff1a</p> \\[dX_t = \\mu X_t dt + \\sigma X_t dW_t\\] <p>\u5176\u4e2d \\(\\mu\\) \u662f\u6f02\u79fb\u7387\uff0c\\(\\sigma\\) \u662f\u6ce2\u52a8\u7387\u3002\u8fd9\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u4e58\u6027\u566a\u58f0\u4f8b\u5b50\uff0c\u56e0\u4e3a\u65e0\u8bba\u662f\u786e\u5b9a\u6027\u7684\u6f02\u79fb\u9879 \\(\\mu X_t dt\\) \u8fd8\u662f\u968f\u673a\u7684\u6269\u6563\u9879 \\(\\sigma X_t dW_t\\)\uff0c\u5176\u5927\u5c0f\u90fd\u4e0e\u7cfb\u7edf\u5f53\u524d\u7684\u72b6\u6001 \\(X_t\\) \u6210\u6b63\u6bd4\u3002</p> <p>\u8fd9\u79cd\u6a21\u578b\u5728\u8bb8\u591a\u9886\u57df\u90fd\u6709\u5e7f\u6cdb\u5e94\u7528\uff0c\u4f8b\u5982\u5728\u91d1\u878d\u5b66\u4e2d\uff0c\u5b83\u88ab\u7528\u6765\u4e3a\u80a1\u7968\u4ef7\u683c\u5efa\u6a21\uff08\u4ef7\u683c\u8d8a\u9ad8\uff0c\u6ce2\u52a8\u7684\u7edd\u5bf9\u503c\u4e5f\u8d8a\u5927\uff0c\u4e14\u4ef7\u683c\u4e0d\u4f1a\u4e3a\u8d1f\uff09\uff1b\u5728\u751f\u7269\u5b66\u4e2d\uff0c\u5b83\u53ef\u4ee5\u63cf\u8ff0\u5728\u8d44\u6e90\u65e0\u9650\u73af\u5883\u4e0b\u7684\u79cd\u7fa4\u589e\u957f\uff0c\u5176\u589e\u957f\u548c\u6ce2\u52a8\u90fd\u4e0e\u73b0\u6709\u79cd\u7fa4\u89c4\u6a21\u6210\u6bd4\u4f8b\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#52-python","title":"5.2 \u4f7f\u7528\u6b27\u62c9-\u4e38\u5c71\u65b9\u6cd5\u7684Python\u5b9e\u73b0","text":"<p>\u6211\u4eec\u5c06\u4f7f\u7528\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684\u6b27\u62c9-\u4e38\u5c71\u65b9\u6cd5\u6765\u5b9e\u73b0GBM\u7684\u6570\u503c\u6a21\u62df\u3002\u5176\u79bb\u6563\u5f62\u5f0f\u4e3a\uff1a</p> \\[X_{n+1} = X_n + \\mu X_n \\Delta t + \\sigma X_n \\Delta W_n = X_n(1 + \\mu \\Delta t + \\sigma \\sqrt{\\Delta t} Z_n)\\] <p>\u5176\u4e2d \\(Z_n\\) \u662f\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff08\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\uff09\u4e2d\u62bd\u53d6\u7684\u968f\u673a\u6570\u3002</p> <p>\u4e0b\u9762\u662f\u5b9e\u73b0\u8be5\u6a21\u62df\u7684\u5b8c\u6574Python\u4ee3\u7801\uff1a</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef simulate_gbm(x0, mu, sigma, T, dt, num_paths):\n    \"\"\"\n    Simulate Geometric Brownian Motion (GBM) using the Euler-Maruyama method.\n\n    Parameters:\n    x0 : float\n        Initial value.\n    mu : float\n        Drift rate.\n    sigma : float\n        Volatility.\n    T : float\n        Total time.\n    dt : float\n        Time step.\n    num_paths : int\n        Number of paths to simulate.\n\n    Returns:\n    t : numpy.ndarray\n        Array of time points.\n    X : numpy.ndarray\n        Simulated GBM paths, shape (num_steps, num_paths).\n    \"\"\"\n    num_steps = int(T / dt)\n    t = np.linspace(0, T, num_steps + 1)\n\n    # Create an array to store paths\n    X = np.zeros((num_steps + 1, num_paths))\n    X[0, :] = x0\n\n    # Generate random numbers for all time steps\n    # Z is an array of shape (num_steps, num_paths), each element follows N(0, 1)\n    Z = np.random.standard_normal((num_steps, num_paths))\n\n    # Iteratively compute each step\n    for i in range(num_steps):\n        # dW = sqrt(dt) * Z\n        dW = np.sqrt(dt) * Z[i]\n        # Euler-Maruyama step\n        X[i+1] = X[i] + mu * X[i] * dt + sigma * X[i] * dW\n\n    return t, X\n\n# --- Simulation parameters ---\nx0 = 100.0      # Initial price\nmu = 0.05       # Annualized drift (5%)\nsigma = 0.2     # Annualized volatility (20%)\nT = 1.0         # Total time (1 year)\ndt = 0.004      # Time step (approximately one trading day)\nnum_paths = 50  # Number of paths to simulate\n\n# --- Run simulation ---\nt, X = simulate_gbm(x0, mu, sigma, T, dt, num_paths)\n\n# --- Visualization of results ---\nplt.style.use('seaborn-v0_8-whitegrid')\nfig, ax = plt.subplots(figsize=(10, 6))\n\nax.plot(t, X)\nax.set_title(f'{num_paths} Geometric Brownian Motion Simulation Paths', fontsize=16)\nax.set_xlabel('Time (years)', fontsize=12)\nax.set_ylabel('Price', fontsize=12)\nax.axhline(y=x0, color='r', linestyle='--', label=f'Initial Price = {x0}')\nax.legend()\n\nplt.show()\n</code></pre> </p> <p>\u4ece\u540c\u4e00\u70b9\u51fa\u53d1\u768450\u6761GBM\u8def\u5f84\uff0c\u6700\u663e\u8457\u7684\u7279\u5f81\u662f\u6240\u6709\u8f68\u8ff9\u5448\u73b0\u51fa\u4e00\u79cd\"\u6247\u5f62\u5c55\u5f00\" (fanning out) \u7684\u5f62\u6001\u3002\u8fd9\u6b63\u662f\u4e58\u6027\u566a\u58f0\u6700\u76f4\u89c2\u7684\u4f53\u73b0\uff1a</p> <ul> <li> <p>\u5f53\u4e00\u6761\u8f68\u8ff9\u7531\u4e8e\u968f\u673a\u6ce2\u52a8\u78b0\u5de7\u8d70\u5230\u4e86\u8f83\u9ad8\u7684\u503c\uff0c\u5176\u72b6\u6001 \\(X_t\\) \u53d8\u5927\u3002</p> </li> <li> <p>\u7531\u4e8e\u566a\u58f0\u9879 \\(\\sigma X_t dW_t\\) \u4e0e \\(X_t\\) \u6210\u6b63\u6bd4\uff0c\u4e00\u4e2a\u66f4\u5927\u7684 \\(X_t\\) \u4f1a\u5bfc\u81f4\u4e00\u4e2a\u66f4\u5927\u7684\u968f\u673a\u6ce2\u52a8\u5e45\u5ea6\u3002</p> </li> <li> <p>\u8fd9\u53cd\u8fc7\u6765\u53c8\u4f7f\u5f97\u8f68\u8ff9\u66f4\u5bb9\u6613\u51fa\u73b0\u5267\u70c8\u7684\u5411\u4e0a\u6216\u5411\u4e0b\u8df3\u8dc3\uff0c\u4ece\u800c\u8fdb\u4e00\u6b65\u62c9\u5f00\u4e0e\u5176\u4ed6\u8f68\u8ff9\u7684\u8ddd\u79bb\u3002</p> </li> </ul> <p>\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5bf9\u4e8e\u52a0\u6027\u566a\u58f0\uff08\u5982\u6807\u51c6\u7684\u5e03\u6717\u8fd0\u52a8\uff09\uff0c\u566a\u58f0\u5f3a\u5ea6\u662f\u6052\u5b9a\u7684\uff0c\u6240\u6709\u8f68\u8ff9\u7684\u5f25\u6563\u7a0b\u5ea6\u5728\u7edf\u8ba1\u4e0a\u662f\u5747\u5300\u7684\uff0c\u4f1a\u5f62\u6210\u4e00\u4e2a\u5bf9\u79f0\u6269\u5c55\u7684\u5206\u5e03\u3002\u800c\u51e0\u4f55\u5e03\u6717\u8fd0\u52a8\u7684\u4e58\u6027\u566a\u58f0\u5219\u5bfc\u81f4\u4e86\u4e00\u4e2a\u968f\u7740\u65f6\u95f4\u8d8a\u6765\u8d8a\u5bbd\uff0c\u5e76\u4e14\u5411\u53f3\u504f\u659c\uff08\u957f\u5c3e\uff09\u7684\u975e\u5bf9\u79f0\u5206\u5e03\u3002</p>"},{"location":"zh/notes/22.%20%E5%90%AB%E4%B9%98%E6%80%A7%E5%99%AA%E5%A3%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86/#_2","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u7cfb\u7edf\u5730\u5efa\u7acb\u4e86\u542b\u4e58\u6027\u566a\u58f0\u968f\u673a\u8fc7\u7a0b\u7684\u8def\u5f84\u79ef\u5206\u8868\u8ff0\u3002\u901a\u8fc7\u4ece\u79bb\u6563\u5316\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u51fa\u53d1\uff0c\u6211\u4eec\u63a8\u5bfc\u51fa\u4e86MSRJD\u4f5c\u7528\u91cf\uff0c\u5e76\u6df1\u5165\u63a2\u8ba8\u4e86\u5176\u5404\u9879\u7684\u7269\u7406\u610f\u4e49\u3002\u8def\u5f84\u79ef\u5206\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u4e00\u79cd\u5168\u65b0\u7684\u7406\u8bba\u89c6\u89d2\uff0c\u8fd8\u5c06\u968f\u673a\u8fc7\u7a0b\u4e0e\u7edf\u8ba1\u573a\u8bba\u8054\u7cfb\u8d77\u6765\uff0c\u4e3a\u89e3\u51b3\u590d\u6742\u95ee\u9898\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u8ba1\u7b97\u5de5\u5177\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u518d\u6b21\u56de\u5230\u4e0a\u8282\u8bfe\u8ba8\u8bba\u8fc7\u7684\uff1a\u4f0a\u85e4 (Ito) \u79ef\u5206\u4e0e\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947 (Stratonovich) \u79ef\u5206\u7684\u5fae\u5999\u533a\u522b\u3002\u8fd9\u4e2a\u533a\u522b\u53ea\u5728\u4e58\u6027\u566a\u58f0\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u51fa\u73b0\uff0c\u5bf9\u4e8e\u52a0\u6027\u566a\u58f0\uff0c\u4e24\u8005\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\u3002\u5173\u952e\u5728\u4e8e\uff0c\u5728\u5904\u7406\u4efb\u4f55\u4e00\u4e2a\u4e58\u6027\u566a\u58f0\u95ee\u9898\u65f6\uff0c\u5fc5\u987b\u660e\u786e\u81ea\u5df1\u4f7f\u7528\u7684\u662f\u54ea\u4e00\u79cd\u7ea6\u5b9a\uff0c\u5e76\u5728\u6574\u4e2a\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e00\u81f4\u3002\u8def\u5f84\u79ef\u5206\u7684\u63a8\u5bfc\u8fc7\u7a0b\uff0c\u5c31\u6e05\u6670\u5730\u5c55\u793a\u4e86\u4f0a\u85e4\u7ea6\u5b9a\u662f\u5982\u4f55\u5728\u7b2c\u4e00\u6b65\u79bb\u6563\u5316\u65f6\u5c31\u88ab\u9009\u5b9a\u7684\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/","title":"\u5f15\u8a00\uff1a\u4ece\u5fae\u89c2\u7c92\u5b50\u5230\u8fde\u7eed\u573a","text":"<p>\u8fd9\u8282\u8bfe\u662f\u6211\u4eec\u968f\u673a\u52a8\u529b\u5b66\u8bfe\u7a0b\u7684\u4e00\u4e2a\u5173\u952e\u8f6c\u6298\u70b9\u3002\u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff08\u7279\u522b\u662f\u7b2c17\u8bb2\u5230\u7b2c23\u8bb2\uff09\uff0c\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e00\u5957\u5f3a\u5927\u7684\u7406\u8bba\u5de5\u5177\uff0c\u5305\u62ec\u6717\u4e4b\u4e07\u65b9\u7a0b\u3001\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u4ee5\u53ca\u8def\u5f84\u79ef\u5206\u8868\u8ff0\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u8fd0\u7528\u8fd9\u4e9b\u5de5\u5177\u6765\u89e3\u51b3\u7269\u7406\u5b66\u4e2d\u7684\u4e00\u4e2a\u6838\u5fc3\u95ee\u9898\uff1a\u4e00\u4e2a\u591a\u4f53\u7cfb\u7edf\u7684\u96c6\u4f53\u884c\u4e3a\uff0c\u662f\u5982\u4f55\u4ece\u5176\u6784\u6210\u7c92\u5b50\u5404\u81ea\u7684\u968f\u673a\u52a8\u529b\u5b66\u4e2d\u6d8c\u73b0\u51fa\u6765\u7684\u3002</p> <p>\u56e0\u6b64\uff0c\u8fd9\u8282\u8bfe\u8981\u56de\u7b54\u7684\u6838\u5fc3\u95ee\u9898\u662f\uff1a\u6211\u4eec\u5982\u4f55\u63cf\u8ff0\u4e00\u4e2a\u7531\u5927\u91cf\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u7ec4\u6210\u7684\u7cfb\u7edf\uff08\u4f8b\u5982\u6eb6\u6db2\u4e2d\u7684\u80f6\u4f53\u9897\u7c92\u6216\u7ec6\u80de\u4e2d\u7684\u86cb\u767d\u8d28\uff09\u5728\u5176\u70ed\u529b\u5b66\u5e73\u8861\u6001\u9644\u8fd1\u7684\u6da8\u843d\u884c\u4e3a\uff1f </p> <p>\u4e3a\u4e86\u89e3\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0cErwin Frey \u6559\u6388\u4ecb\u7ecd\u4e86\u4e24\u79cd\u4e92\u8865\u7684\u5f3a\u5927\u89c6\u89d2\uff0c\u5c06\u5728\u8fd9\u8282\u8bfe\u4e2d\u6df1\u5165\u63a2\u8ba8\u5e76\u5efa\u7acb\u5b83\u4eec\u4e4b\u95f4\u7684\u8054\u7cfb \uff1a  </p> <ul> <li> <p>\uff08A\uff09\u5fae\u89c2\u7684\u201c\u81ea\u4e0b\u800c\u4e0a\u201d\uff08Bottom-Up\uff09\u65b9\u6cd5\uff1a\u6211\u4eec\u4ece\u63cf\u8ff0\u5355\u4e2a\u7c92\u5b50\u7684\u5df2\u77e5\u7269\u7406\u5b9a\u5f8b\uff08\u6717\u4e4b\u4e07\u65b9\u7a0b\uff09\u51fa\u53d1\uff0c\u901a\u8fc7\u4e00\u79cd\u79f0\u4e3a\u7c97\u7c92\u5316\uff08coarse-graining\uff09\u7684\u6b65\u9aa4\uff0c\u63a8\u5bfc\u51fa\u5b8f\u89c2\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u3002\u6211\u4eec\u5c06\u8fd9\u4e2a\u79bb\u6563\u7684\u3001\u57fa\u4e8e\u7c92\u5b50\u7684\u63cf\u8ff0\u8f6c\u5316\u4e3a\u4e00\u4e2a\u8fde\u7eed\u7684\u573a\u8bba\u63cf\u8ff0\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u63cf\u8ff0\u7c92\u5b50\u5bc6\u5ea6\u573a\u6f14\u5316\u7684\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u597d\u5904\u662f\u7269\u7406\u56fe\u50cf\u6e05\u6670\uff0c\u80fd\u8ba9\u6211\u4eec\u76f4\u89c2\u5730\u770b\u5230\u5b8f\u89c2\u884c\u4e3a\u5982\u4f55\u4ece\u5fae\u89c2\u89c4\u5219\u4e2d\u4ea7\u751f\u3002</p> </li> <li> <p>\uff08B\uff09\u5b8f\u89c2\u7684\u201c\u81ea\u4e0a\u800c\u4e0b\u201d\uff08Top-Down\uff09\u65b9\u6cd5\uff1a\u6211\u4eec\u76f4\u63a5\u4ece\u5b8f\u89c2\u5c42\u9762\u5165\u624b\uff0c\u5229\u7528\u70ed\u529b\u5b66\u548c\u5bf9\u79f0\u6027\u7684\u57fa\u672c\u539f\u7406\uff08\u7531Onsager\u7b49\u4eba\u5f00\u521b\uff09\u6765\u7ea6\u675f\u5b8f\u89c2\u52a8\u529b\u5b66\u65b9\u7a0b\u53ef\u80fd\u5177\u6709\u7684\u5f62\u5f0f\u3002\u5229\u7528\u70ed\u529b\u5b66\u548c\u5bf9\u79f0\u6027\u7684\u57fa\u672c\u539f\u7406\u6765\u6784\u5efa\u4e00\u4e2a\u5173\u4e8e\u6da8\u843d\u7684\u666e\u9002\u7406\u8bba\uff0c\u5176\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u5177\u4f53\u7684\u5fae\u89c2\u6a21\u578b\u7ec6\u8282\u3002\u53ea\u8981\u7cfb\u7edf\u63a5\u8fd1\u4e00\u4e2a\u7a33\u5b9a\u7684\u70ed\u5e73\u8861\u6001\uff0c\u5176\u6da8\u843d\u884c\u4e3a\u5c31\u5fc5\u987b\u9075\u5faa\u67d0\u4e9b\u666e\u9002\u7684\u89c4\u5f8b\u3002</p> </li> </ul> <p>\u9996\u5148\uff0c\u6559\u6388\u5c06\u5c55\u793a\u65b9\u6cd5\uff08A\uff09\u5982\u4f55\u4ece\u7c92\u5b50\u56fe\u50cf\u81ea\u7136\u5730\u8fc7\u6e21\u5230\u4e00\u4e2a\u8fde\u7eed\u7684\u573a\u8bba\u63cf\u8ff0\u3002\u63a5\u7740\uff0c\u53d1\u5c55\u65b9\u6cd5\uff08B\uff09\u7684\u666e\u9002\u6027\u6846\u67b6\uff0c\u7528\u4e8e\u63cf\u8ff0\u4efb\u4f55\u7cfb\u7edf\u5728\u5e73\u8861\u6001\u9644\u8fd1\u7684\u6da8\u843d\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u8fd0\u7528\u8fd9\u4e2a\u6846\u67b6\uff0c\u901a\u8fc7\u65f6\u95f4\u5173\u8054\u51fd\u6570\u548c\u57fa\u672c\u5bf9\u79f0\u6027\u7684\u89c6\u89d2\uff0c\u6765\u7406\u89e3\u8fd9\u4e9b\u6da8\u843d\u7684\u52a8\u529b\u5b66\u7279\u6027\u3002\u4ece\u5fae\u89c2\u7c92\u5b50\u5230\u8fde\u7eed\u573a\uff0c\u63cf\u8ff0\u7684\u662f\u5355\u4e2a\u7c92\u5b50\u8fd0\u52a8\u7684\u5fae\u89c2\u968f\u673a\u52a8\u529b\u5b66\u4e0e\u7cfb\u7edf\u7684\u5b8f\u89c2\u70ed\u529b\u5b66\u6027\u8d28\u3002\u6211\u4eec\u5c06\u770b\u5230\uff0c\u7cfb\u7edf\u7684\u96c6\u4f53\u884c\u4e3a\uff0c\u5982\u5bc6\u5ea6\u6da8\u843d\uff0c\u53ef\u4ee5\u4ece\u5e95\u5c42\u7684\u7c92\u5b50\u76f8\u4e92\u4f5c\u7528\u4e2d\u6d8c\u73b0\u51fa\u6765\uff0c\u5e76\u6700\u7ec8\u7531\u666e\u9002\u7684\u70ed\u529b\u5b66\u539f\u7406\u6240\u652f\u914d\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#1","title":"1. \u4ece\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u5230\u8fde\u7eed\u573a\u8bba","text":"<p>\u4ece\u63cf\u8ff0\u79bb\u6563\u7c92\u5b50\u7684\u65b9\u7a0b\u8fc7\u6e21\u5230\u63cf\u8ff0\u8fde\u7eed\u573a\u7684\u65b9\u7a0b\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u79cd\u6570\u5b66\u4e0a\u7684\u4fbf\u5229\uff0c\u5b83\u4f53\u73b0\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u7269\u7406\u6982\u5ff5\u2014\u2014\u7c97\u7c92\u5316\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u610f\u5730\u5ffd\u7565\u4e86\u7cfb\u7edf\u4e2d\u9ad8\u9891\u3001\u77ed\u6ce2\u957f\u7684\u5fae\u89c2\u4fe1\u606f\uff08\u4f8b\u5982\u6bcf\u4e2a\u7c92\u5b50\u7684\u7cbe\u786e\u4f4d\u7f6e\uff09\uff0c\u8f6c\u800c\u5173\u6ce8\u90a3\u4e9b\u51b3\u5b9a\u7cfb\u7edf\u5b8f\u89c2\u884c\u4e3a\u7684\u3001\u7f13\u6162\u53d8\u5316\u7684\u3001\u957f\u6ce2\u957f\u7684\u96c6\u4f53\u53d8\u91cf\uff08\u4f8b\u5982\u5c40\u57df\u7684\u7c92\u5b50\u5bc6\u5ea6\uff09\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u540d\u4e3a\u81ea\u7531\u80fd\u6cdb\u51fd\\(F[\\rho]\\) \u7684\u91cf\u4f1a\u81ea\u7136\u800c\u7136\u5730\u51fa\u73b0\uff0c\u5b83\u626e\u6f14\u4e86\u8fd9\u4e2a\u7c97\u7c92\u5316\u573a\u8bba\u7684\u6709\u6548\u201c\u54c8\u5bc6\u987f\u91cf\u201d\u6216\u201c\u4f5c\u7528\u91cf\u201d\u7684\u89d2\u8272\uff0c\u4e3b\u5bfc\u7740\u7cfb\u7edf\u7684\u5e73\u8861\u6001\u548c\u52a8\u529b\u5b66\u6f14\u5316\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5305\u542b \\(N\\) \u4e2a\u7c92\u5b50\u7684\u6717\u4e4b\u4e07\u7cfb\u7edf\uff0c\u5f53 \\(N\\) \u5f88\u5927\u65f6\uff0c\u76f4\u63a5\u6c42\u89e3\u662f\u8ba1\u7b97\u4e0a\u548c\u89e3\u6790\u4e0a\u90fd\u96be\u4ee5\u5904\u7406\u7684\uff0c\u56e0\u4e3a\u81ea\u7531\u5ea6\u592a\u591a\u4e86\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u8bb8\u591a\u7269\u7406\u73b0\u8c61\uff0c\u5982\u6269\u6563\u6216\u76f8\u5206\u79bb\uff0c\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u7b2c1,304,567\u53f7\u7c92\u5b50\u7684\u7cbe\u786e\u5750\u6807\u3002\u6211\u4eec\u5173\u5fc3\u7684\u662f\u5728\u4e00\u4e2a\u5c0f\u4f53\u79ef\u5185\u7684\u5e73\u5747\u5bc6\u5ea6\u3002\u5c06\u7c92\u5b50\u5750\u6807\u5728\u5c0f\u4f53\u79ef\u5185\u8fdb\u884c\u5e73\u5747\uff0c\u4ece\u800c\u5b9a\u4e49\u4e00\u4e2a\u8fde\u7eed\u7684\u5bc6\u5ea6\u573a \\(\\rho(\\mathbf{x}, t)\\)\uff0c\u8fd9\u6b63\u662f\u7c97\u7c92\u5316\u7684\u6838\u5fc3\u601d\u60f3\u3002</p> <p>\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u5bc6\u5ea6\u573a \\(\\rho\\)\uff0c\u539f\u6765\u57fa\u4e8e\u7c92\u5b50\u95f4\u76f8\u4e92\u4f5c\u7528\u52bf\u7684\u529b\u4e5f\u5fc5\u987b\u88ab\u67d0\u79cd\u4f5c\u7528\u5728\u573a\u4e0a\u7684\u7b49\u6548\u9a71\u52a8\u529b\u6240\u53d6\u4ee3\u3002\u5728\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e2d\uff0c\u6f02\u79fb\u9879 \\(-\\mu \\nabla V\\) \u662f\u7531\u52bf\u80fd\u68af\u5ea6\u9a71\u52a8\u7684\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u5bc6\u5ea6\u573a \\(\\rho\\) \u800c\u8a00\uff0c\u7b49\u6548\u7684\u9a71\u52a8\u529b\u662f\u4ec0\u4e48\u5462\uff1f\u70ed\u529b\u5b66\u544a\u8bc9\u6211\u4eec\uff0c\u7cfb\u7edf\u4f1a\u6f14\u5316\u4ee5\u4f7f\u5176\u81ea\u7531\u80fd\u6700\u5c0f\u5316\u3002\u56e0\u6b64\uff0c\\(\\rho\\) \u7684\u52a8\u529b\u5b66\u5fc5\u987b\u88ab\u4e00\u4e2a\u81ea\u7531\u80fd\u201c\u5730\u5f62\u201d\u7684\u201c\u4e0b\u5761\u201d\u65b9\u5411\u6240\u9a71\u52a8\u3002\u8fd9\u4e2a\u5730\u5f62\u4e0d\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\uff0c\u800c\u662f\u4e00\u4e2a\u6cdb\u51fd \\(F[\\rho]\\)\uff0c\u5b83\u4e3a\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u5bc6\u5ea6\u5206\u5e03\u51fd\u6570 \\(\\rho(\\mathbf{x}, t)\\) \u8d4b\u4e88\u4e00\u4e2a\u6807\u91cf\u503c\uff08\u5373\u7cfb\u7edf\u7684\u603b\u81ea\u7531\u80fd\uff09\u3002\u8fd9\u4e2a\u6cdb\u51fd\u7684\u5bfc\u6570\uff0c\\(\\frac{\\delta F}{\\delta \\rho}\\)\uff0c\u626e\u6f14\u4e86\u5e7f\u4e49\u529b\uff08\u5373\u5316\u5b66\u52bf\uff09\u7684\u89d2\u8272\uff0c\u9a71\u52a8\u7cfb\u7edf\u671d\u5411\u4f7f \\(F\\) \u6700\u5c0f\u5316\u7684\u90a3\u4e2a\u5bc6\u5ea6\u5206\u5e03\u6f14\u5316\u3002\u8fd9\u4e00\u8fc7\u7a0b\u4f18\u96c5\u5730\u5c06\u5fae\u89c2\u7684\u7c92\u5b50\u76f8\u4e92\u4f5c\u7528\u4e0e\u5b8f\u89c2\u7684\u70ed\u529b\u5b66\u9a71\u52a8\u529b\u8054\u7cfb\u5728\u4e86\u4e00\u8d77\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#11","title":"1.1 \u5fae\u89c2\u89c6\u89d2\uff1a\u76f8\u4e92\u4f5c\u7528\u7684\u5e03\u6717\u7c92\u5b50\u7cfb\u7edf","text":"<p>\u6211\u4eec\u4ece\u4e00\u4e2a\u7531 \\(N\\) \u4e2a\u5e03\u6717\u7c92\u5b50\u7ec4\u6210\u7684\u5177\u4f53\u6a21\u578b\u5f00\u59cb\u3002\u8fd9\u4e9b\u7c92\u5b50\u60ac\u6d6e\u4e8e\u4e00\u4e2a\u6052\u5b9a\u6e29\u5ea6 \\(T\\) \u7684\u7c98\u6027\u6d41\u4f53\uff08\u70ed\u5e93\uff09\u4e2d\u3002\u6211\u4eec\u8003\u8651\u7684\u662f\u8fc7\u963b\u5c3c\u6781\u9650\uff08overdamped limit\uff09\uff0c\u8fd9\u610f\u5473\u7740\u6d41\u4f53\u7684\u7c98\u6ede\u963b\u529b\u975e\u5e38\u5927\uff0c\u4ee5\u81f3\u4e8e\u7c92\u5b50\u7684\u60ef\u6027\uff08\\(m\\mathbf{a}\\)\uff09\u53ef\u4ee5\u5b8c\u5168\u5ffd\u7565\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7c92\u5b50\u7684\u901f\u5ea6 \\(d\\mathbf{x}/dt\\) \u77ac\u65f6\u5730\u4e0e\u5176\u53d7\u5230\u7684\u603b\u529b\u6210\u6b63\u6bd4\uff0c\u800c\u4e0d\u662f\u7531\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b\u63cf\u8ff0\u3002</p> <p>\u6bcf\u4e2a\u7c92\u5b50 \\(i\\) \u7684\u8fd0\u52a8\u8f68\u8ff9 \\(\\mathbf{x}_i(t)\\) \u7531\u4e00\u7ec4\u8026\u5408\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u63cf\u8ff0\uff1a</p> \\[ \\frac{d\\mathbf{x}_i}{dt} = \\mu \\sum_{j \\neq i} \\mathbf{F}_{ij} + \\boldsymbol{\\xi}_i(t) \\] <p>\u5176\u4e2d\uff1a</p> \\[ \\mathbf{F}_{ij} = -\\nabla_i V(\\mathbf{x}_i - \\mathbf{x}_j) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7cbe\u786e\u5730\u63cf\u8ff0\u4e86\u4e24\u79cd\u57fa\u672c\u7269\u7406\u8fc7\u7a0b\u7684\u5e73\u8861\uff1a</p> <p>\u786e\u5b9a\u6027\u6f02\u79fb (Deterministic Drift)\uff1a\u65b9\u7a0b\u7684\u7b2c\u4e00\u9879 \\(\\mu \\sum \\mathbf{F}_{ij}\\) \u4ee3\u8868\u7531\u7cfb\u7edf\u5185\u90e8\u4fdd\u5b88\u529b\u9a71\u52a8\u7684\u786e\u5b9a\u6027\u8fd0\u52a8\u3002</p> <ul> <li> <p>\\(\\mathbf{F}_{ij} = -\\nabla_i V(\\ldots)\\) \u662f\u7c92\u5b50 \\(j\\) \u5bf9\u7c92\u5b50 \\(i\\) \u65bd\u52a0\u7684\u529b\uff0c\u5b83\u7531\u4e00\u4e2a\u6210\u5bf9\u76f8\u4e92\u4f5c\u7528\u52bf \\(V(r)\\) \u7684\u8d1f\u68af\u5ea6\u7ed9\u51fa\u3002\u8fd9\u4e2a\u52bf\u80fd\u53ef\u4ee5\u662fLennard-Jones\u52bf\u3001\u5e93\u4ed1\u529b\u6216\u7b80\u5355\u7684\u786c\u7403\u6392\u65a5\u52bf\u3002</p> </li> <li> <p>\\(\\sum_{j \\neq i}\\) \u8868\u793a\u5bf9\u6240\u6709\u5176\u4ed6\u7c92\u5b50\u65bd\u52a0\u5728\u7c92\u5b50 \\(i\\) \u4e0a\u7684\u529b\u7684\u77e2\u91cf\u548c\u3002\u6b63\u662f\u8fd9\u4e00\u9879\u8026\u5408\u4e86\u6240\u6709\u7c92\u5b50\u7684\u8fd0\u52a8\uff0c\u4f7f\u5f97\u7cfb\u7edf\u6210\u4e3a\u4e00\u4e2a\u590d\u6742\u7684\u591a\u4f53\u95ee\u9898\u3002</p> </li> <li> <p>\\(\\mu\\) \u662f\u8fc1\u79fb\u7387 (mobility)\uff0c\u5b83\u91cf\u5316\u4e86\u7c92\u5b50\u5728\u5355\u4f4d\u529b\u9a71\u52a8\u4e0b\u7684\u901f\u5ea6\uff0c\u5373 \\(\\mathbf{v} = \\mu \\mathbf{F}\\)\u3002\u5b83\u4e0e\u6d41\u4f53\u7684\u7c98\u6ede\uff08\u6469\u64e6\uff09\u7cfb\u6570 \\(\\gamma\\) \u6210\u53cd\u6bd4\uff0c\\(\\mu = 1/\\gamma\\)\uff0c\u5b8c\u5168\u7531\u6eb6\u5242\u7684\u6027\u8d28\u51b3\u5b9a\u3002</p> </li> </ul> <p>\u968f\u673a\u529b (Stochastic Force)\uff1a\\(\\boldsymbol{\\xi}_i(t)\\)\uff0c\u4e5f\u79f0\u4e3a\u6717\u4e4b\u4e07\u529b\uff0c\u662f\u4e00\u4e2a\u968f\u673a\u9879\u3002\u5b83\u4ee3\u8868\u4e86\u6765\u81ea\u5468\u56f4\u6eb6\u5242\u5206\u5b50\u7684\u3001\u65e0\u6570\u6b21\u5feb\u901f\u4e14\u65e0\u89c4\u7684\u78b0\u649e\u7684\u96c6\u4f53\u6548\u5e94\u3002\u6211\u4eec\u65e0\u6cd5\u8ffd\u8e2a\u6bcf\u4e00\u6b21\u5fae\u89c2\u78b0\u649e\uff0c\u56e0\u6b64\u5c06\u5176\u5efa\u6a21\u4e3a\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_2","title":"\u566a\u58f0\u7684\u7edf\u8ba1\u6027\u8d28","text":"<p>\u6211\u4eec\u901a\u5e38\u5047\u8bbe\u968f\u673a\u529b \\(\\boldsymbol{\\xi}_i(t)\\) \u662f\u4e00\u4e2a\u9ad8\u65af\u767d\u566a\u58f0\uff0c\u5176\u7edf\u8ba1\u7279\u6027\u7531\u5176\u4e00\u9636\u77e9\u548c\u4e8c\u9636\u77e9\uff08\u5173\u8054\u51fd\u6570\uff09\u5b8c\u5168\u5b9a\u4e49\uff1a</p> <ol> <li> <p>\u96f6\u5747\u503c: \\(\\langle \\xi_{i\\alpha}(t) \\rangle = 0\\)</p> </li> <li> <p>\u7269\u7406\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u70ed\u5e93\u7684\u78b0\u649e\u5728\u4efb\u4f55\u65b9\u5411\u4e0a\u90fd\u6ca1\u6709\u504f\u597d\uff0c\u957f\u65f6\u95f4\u5e73\u5747\u7684\u5408\u529b\u4e3a\u96f6\u3002\u5426\u5219\uff0c\u7cfb\u7edf\u5c06\u5b58\u5728\u4e00\u4e2a\u51c0\u7684\u9a71\u52a8\u529b\uff0c\u8fd9\u4f1a\u8fdd\u53cd\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u3002</p> </li> <li> <p>\u65f6\u7a7a\u5173\u8054: \\(\\langle \\xi_i^\\alpha(t) \\xi_j^\\beta(t') \\rangle = 2 \\mu k_B T \\, \\delta_{ij} \\, \\delta^{\\alpha\\beta} \\, \\delta(t - t')\\)</p> </li> <li> <p>\\(\\delta(t - t')\\) \u4f53\u73b0\u4e86\u566a\u58f0\u5728\u65f6\u95f4\u4e0a\u7684\u201c\u767d\u201d\u7279\u6027\uff1a\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u65f6\u523b\u7684\u968f\u673a\u529b\u662f\u5b8c\u5168\u4e0d\u76f8\u5173\u7684\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u6548\u7684\u8fd1\u4f3c\uff0c\u5176\u5047\u8bbe\u662f\u6eb6\u5242\u5206\u5b50\u78b0\u649e\u7684\u65f6\u95f4\u5c3a\u5ea6\u8fdc\u5c0f\u4e8e\u5e03\u6717\u7c92\u5b50\u4f4d\u7f6e\u53d1\u751f\u663e\u8457\u53d8\u5316\u7684\u65f6\u95f4\u5c3a\u5ea6\u3002</p> </li> <li> <p>\\(\\delta_{ij}\\) \u548c \\(\\delta^{\\alpha\\beta}\\) \u5206\u522b\u8868\u793a\u4e0d\u540c\u7c92\u5b50\u4e4b\u95f4\u3001\u4ee5\u53ca\u540c\u4e00\u7c92\u5b50\u4e0d\u540c\u7a7a\u95f4\u5206\u91cf\uff08\u5982x, y, z\uff09\u4e0a\u7684\u968f\u673a\u529b\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002\u8fd9\u53cd\u6620\u4e86\u70ed\u5e93\u7684\u78b0\u649e\u662f\u5c40\u57df\u4e14\u5404\u5411\u540c\u6027\u7684\u3002</p> </li> </ol>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#-","title":"\u7269\u7406\u6838\u5fc3\uff1a\u6da8\u843d-\u8017\u6563\u5b9a\u7406","text":"<p>\u566a\u58f0\u5173\u8054\u51fd\u6570\u4e2d\u7684\u7cfb\u6570 \\(2\\mu k_B T\\) \u5e76\u975e\u4efb\u610f\u9009\u62e9\uff0c\u5b83\u662f\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Fluctuation-Dissipation Theorem, FDT) \u7684\u76f4\u63a5\u4f53\u73b0\uff0c\u662f\u8fde\u63a5\u5fae\u89c2\u968f\u673a\u6027\u4e0e\u5b8f\u89c2\u70ed\u529b\u5b66\u7684\u6865\u6881\u3002</p> <p>\u8be5\u5b9a\u7406\u6307\u51fa\uff0c\u6eb6\u5242\u5bf9\u5e03\u6717\u7c92\u5b50\u6709\u4e24\u4e2a\u770b\u4f3c\u5bf9\u7acb\u7684\u4f5c\u7528\uff1a</p> <ol> <li> <p>\u8017\u6563 (Dissipation)\uff1a\u5f53\u7c92\u5b50\u8fd0\u52a8\u65f6\uff0c\u6eb6\u5242\u4f1a\u4ea7\u751f\u7c98\u6ede\u963b\u529b\uff0c\u4f7f\u7c92\u5b50\u7684\u52a8\u80fd\u8017\u6563\u6210\u70ed\u91cf\u3002\u8fd9\u79cd\u6548\u5e94\u7684\u5f3a\u5ea6\u7531\u6469\u64e6\u7cfb\u6570 \\(\\gamma\\) \u6216\u5176\u5012\u6570\u8fc1\u79fb\u7387 \\(\\mu\\) \u6765\u91cf\u5316\u3002</p> </li> <li> <p>\u6da8\u843d (Fluctuation)\uff1a\u7531\u4e8e\u6eb6\u5242\u5206\u5b50\u81ea\u8eab\u5728\u8fdb\u884c\u70ed\u8fd0\u52a8\uff08\u6e29\u5ea6 \\(T\\) \u7684\u4f53\u73b0\uff09\uff0c\u5b83\u4eec\u4f1a\u5bf9\u7c92\u5b50\u8fdb\u884c\u6c38\u4e0d\u505c\u6b47\u7684\u968f\u673a\u78b0\u649e\uff0c\u5bfc\u81f4\u7c92\u5b50\u505a\u65e0\u89c4\u7684\u5e03\u6717\u8fd0\u52a8\u3002\u8fd9\u79cd\u6548\u5e94\u7684\u5f3a\u5ea6\u7531\u566a\u58f0\u5173\u8054\u51fd\u6570\u7684\u5927\u5c0f\u6765\u91cf\u5316\u3002</p> </li> </ol> <p>FDT\u7684\u6df1\u523b\u5185\u6db5\u662f\uff1a\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\u6e90\u81ea\u540c\u4e00\u79cd\u5fae\u89c2\u7269\u7406\u673a\u5236\uff08\u4e0e\u6eb6\u5242\u5206\u5b50\u7684\u76f8\u4e92\u4f5c\u7528\uff09\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u5f3a\u5ea6\u5fc5\u987b\u4e25\u683c\u76f8\u5173\u3002 \u4e00\u4e2a\u5177\u6709\u5f3a\u8017\u6563\uff08\u9ad8\u7c98\u6ede\u6027\uff09\u7684\u7cfb\u7edf\uff0c\u5fc5\u7136\u4e5f\u7ecf\u5386\u7740\u5f3a\u70c8\u7684\u70ed\u6da8\u843d\u3002</p> <p>\u8fd9\u4e2a\u5b9a\u7406\u786e\u4fdd\u4e86\u7cfb\u7edf\u5728\u6ca1\u6709\u5916\u529b\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u81ea\u53d1\u5730\u6f14\u5316\u5230\u4e00\u4e2a\u70ed\u529b\u5b66\u5e73\u8861\u6001\u3002\u968f\u673a\u529b\u7684\u201c\u8e22\u52a8\u201d\u4e0d\u65ad\u5730\u4e3a\u7cfb\u7edf\u6ce8\u5165\u80fd\u91cf\uff0c\u800c\u7c98\u6ede\u963b\u529b\u5219\u4e0d\u65ad\u5730\u5c06\u80fd\u91cf\u8017\u6563\u6389\u3002\u5728\u5e73\u8861\u6001\u4e0b\uff0c\u8fd9\u4e24\u79cd\u8fc7\u7a0b\u8fbe\u5230\u52a8\u6001\u5e73\u8861\uff0c\u4f7f\u5f97\u7cfb\u7edf\u7684\u5e73\u5747\u52a8\u80fd\u4e0e\u6e29\u5ea6 \\(T\\) \u4fdd\u6301\u4e00\u81f4\uff0c\u6700\u7ec8\u7c92\u5b50\u7684\u7a7a\u95f4\u5206\u5e03\u9075\u5faa\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u3002\u5982\u679c\u8fd9\u4e2a\u5173\u7cfb\u4e0d\u6210\u7acb\uff0c\u7cfb\u7edf\u8981\u4e48\u4f1a\u65e0\u9650\u5347\u6e29\uff0c\u8981\u4e48\u4f1a\u201c\u51bb\u7ed3\u201d\u5230\u7edd\u5bf9\u96f6\u5ea6\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_3","title":"\u4ece\u7c92\u5b50\u5230\u573a\u7684\u6f14\u5316\u65b9\u7a0b","text":"<p>\u7ecf\u8fc7\u7c97\u7c92\u5316\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u5f97\u5230\u4e00\u4e2a\u63cf\u8ff0\u5bc6\u5ea6\u573a \\(\\rho(\\mathbf{x}, t)\\) \u6f14\u5316\u7684\u65b9\u7a0b\u3002\u7531\u4e8e\u7c92\u5b50\u603b\u6570\u662f\u5b88\u6052\u7684\uff0c\u8fd9\u4e2a\u65b9\u7a0b\u5fc5\u987b\u662f\u4e00\u4e2a\u8fde\u7eed\u6027\u65b9\u7a0b\u7684\u5f62\u5f0f\uff1a $$ \\frac{\\partial \\rho}{\\partial t} = -\\nabla \\cdot \\mathbf{J} $$</p> <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7269\u7406\u610f\u4e49\u662f\uff1a\u67d0\u4e2a\u533a\u57df\u5185\u5bc6\u5ea6\u7684\u53d8\u5316\u7387\uff0c\u7b49\u4e8e\u6d41\u5165\u8be5\u533a\u57df\u7684\u51c0\u7c92\u5b50\u6d41 \\(\\mathbf{J}\\)\u3002\u56e0\u6b64\uff0c\u95ee\u9898\u7684\u6838\u5fc3\u5c31\u53d8\u6210\u4e86\uff1a\u8fd9\u4e2a\u5b8f\u89c2\u7684\u7c92\u5b50\u6d41 \\(\\mathbf{J}\\) \u662f\u7531\u4ec0\u4e48\u51b3\u5b9a\u7684\uff1f</p> <p>\u901a\u8fc7\u5bf9\u5e95\u5c42\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u8fdb\u884c\u7cfb\u7edf\u6027\u7684\u7c97\u7c92\u5316\u63a8\u5bfc\uff0c\u53ef\u4ee5\u5f97\u5230 \\(\\mathbf{J}\\) \u7684\u8868\u8fbe\u5f0f\uff0c\u8fdb\u800c\u5f97\u5230\u5bc6\u5ea6\u573a\u7684\u5b8c\u6574\u6f14\u5316\u65b9\u7a0b\uff0c\u5373\u4e00\u4e2a\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b (SPDE)\uff1a</p> \\[ \\frac{\\partial \\rho}{\\partial t} = \\nabla \\cdot \\left[ \\mu \\rho \\nabla \\left( \\int d\\mathbf{y} \\, V(\\mathbf{x} - \\mathbf{y}) \\rho(\\mathbf{y}, t) \\right) \\right] + D \\nabla^2 \\rho + \\nabla \\cdot \\left( \\sqrt{2 D \\rho} \\, \\boldsymbol{\\eta}(\\mathbf{x}, t) \\right) \\] <p>\u5176\u4e2d \\(D = \\mu k_B T\\) \u662f\u6269\u6563\u7cfb\u6570\uff0c\\(\\boldsymbol{\\eta}\\) \u662f\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u65f6\u7a7a\u9ad8\u65af\u767d\u566a\u58f0\u3002</p> <p>\u4e0a\u9762\u8fd9\u4e2a\u65b9\u7a0b\u901a\u5e38\u88ab\u79f0\u4e3a\u8fea\u6069-\u5ddd\u5d0e\u65b9\u7a0b (Dean-Kawasaki equation)\uff0c\u5b83\u628a\u5fae\u89c2\u4e16\u754c\u91cc\u5355\u4e2a\u7c92\u5b50\u7684\u968f\u673a\u8fd0\u52a8\uff08\u6717\u4e4b\u4e07\u65b9\u7a0b\u63cf\u8ff0\u7684\uff09\u548c\u5b8f\u89c2\u4e16\u754c\u91cc\u6211\u4eec\u80fd\u89c2\u5bdf\u5230\u7684\u5bc6\u5ea6\u53d8\u5316\u8fde\u63a5\u4e86\u8d77\u6765\u3002</p> <ul> <li> <p>\u7b2c\u4e00\u9879\uff1a\u76f8\u4e92\u4f5c\u7528\u9879 (Drift Term)</p> \\[ \\nabla \\cdot \\left[ \\mu \\rho(x, t) \\nabla \\left( \\int dy \\, V(x - y) \\rho(y, t) \\right) \\right] \\] <p>\u8fd9\u90e8\u5206\u63cf\u8ff0\u7684\u662f\u7c92\u5b50\u4e4b\u95f4\u7684\u201c\u793e\u4ea4\u884c\u4e3a\u201d\u3002\\(\\nabla\\) \u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u529b\uff08\u6bd4\u5982\u662f\u4e92\u76f8\u6392\u65a5\u8fd8\u662f\u4e92\u76f8\u5438\u5f15\uff09\u3002\u8fd9\u4e00\u6574\u9879\u8bf4\u660e\u4e86\u7c92\u5b50\u4f1a\u56e0\u4e3a\u5468\u56f4\u5176\u4ed6\u7c92\u5b50\u7684\u4f5c\u7528\u529b\u800c\u79fb\u52a8\uff0c\u4ece\u800c\u5bfc\u81f4\u5bc6\u5ea6\u53d1\u751f\u53d8\u5316\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u9879\uff1a\u6269\u6563\u9879 (Diffusion Term)</p> \\[ D \\nabla^2 \\rho(x, t) \\] <p>\u662f\u7ecf\u5178\u7684\u83f2\u514b\u6269\u6563\u5b9a\u5f8b\u3002\u5b83\u63cf\u8ff0\u7684\u662f\u7c92\u5b50\u56e0\u4e3a\u65e0\u89c4\u5219\u7684\u70ed\u8fd0\u52a8\uff0c\u4f1a\u81ea\u53d1\u5730\u4ece\u5bc6\u5ea6\u9ad8\u7684\u5730\u65b9\u8dd1\u5230\u5bc6\u5ea6\u4f4e\u7684\u5730\u65b9\uff0c\u5c31\u50cf\u4e00\u6ef4\u58a8\u6c34\u5728\u6e05\u6c34\u4e2d\u6563\u5f00\u4e00\u6837\u3002</p> </li> <li> <p>\u7b2c\u4e09\u9879\uff1a\u6da8\u843d\u9879/\u566a\u58f0\u9879 (Noise Term)</p> \\[ \\nabla \\cdot \\left( \\sqrt{2D\\rho(x,t)} \\eta(x,t) \\right) \\] <p>\u8fd9\u6b63\u662f\u8fd9\u4e2a\u65b9\u7a0b\u201c\u968f\u673a\u201d\u7684\u7075\u9b42\u6240\u5728\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u5bc6\u5ea6\u7684\u53d8\u5316\u4e0d\u662f\u5b8c\u5168\u5e73\u6ed1\u548c\u786e\u5b9a\u7684\uff0c\u800c\u662f\u6709\u968f\u673a\u7684\u201c\u6296\u52a8\u201d\u6216\u201c\u6da8\u843d\u201d\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u63cf\u8ff0\u7684\u7cfb\u7edf\u662f\u7531\u4e00\u4e2a\u4e2a\u5206\u7acb\u7684\u7c92\u5b50\u7ec4\u6210\u7684\uff0c\u800c\u4e0d\u662f\u771f\u6b63\u8fde\u7eed\u7684\u201c\u5bc6\u5ea6\u818f\u201d\u3002\u8fd9\u4e2a\u566a\u58f0\u9879\u7684\u5927\u5c0f\u548c\u5c40\u90e8\u5bc6\u5ea6 \\(\\rho\\) \u7684\u5e73\u65b9\u6839\u6709\u5173\uff0c\u8fd9\u4e5f\u5f88\u76f4\u89c2\uff1a\u6ca1\u6709\u7c92\u5b50\u7684\u5730\u65b9 (\\(\\rho=0\\))\uff0c\u5f53\u7136\u4e5f\u5c31\u6ca1\u6709\u7c92\u5b50\u6570\u76ee\u7684\u968f\u673a\u6da8\u843d\u5566\uff01</p> </li> </ul> <p>\u6ce8\u610f\\(\\frac{\\partial \\rho}{\\partial t}\\)\u7ecf\u5e38\u5199\u4e3a\\(\\partial_t \\rho(\\vec{x}, t)\\)\uff0c\\(\\frac{\\partial \\rho}{\\partial t}\\)\u662f\u66f4\u7ecf\u5178\u3001\u66f4\u6b63\u5f0f\u7684\u5199\u6cd5\uff0c\u53eb\u505a\u83b1\u5e03\u5c3c\u8328\u8868\u793a\u6cd5 (Leibniz's notation)\u3002\u5b83\u975e\u5e38\u6e05\u6670\u5730\u8868\u660e\u4e86\u201c\u5bf9 \\(\\rho\\) \u8fd9\u4e2a\u91cf\u6c42\u5173\u4e8e\u65f6\u95f4 \\(t\\) \u7684\u504f\u5bfc\u6570\u201d\u3002</p> <p>\\(\\partial_t \\rho(\\vec{x}, t)\\)\uff1a\u8fd9\u662f\u4e00\u79cd\u66f4\u7b80\u6d01\u7684\u5199\u6cd5\uff0c\u5728\u7269\u7406\u5b66\uff0c\u5c24\u5176\u662f\u573a\u8bba\u548c\u8fde\u7eed\u4ecb\u8d28\u529b\u5b66\u4e2d\u975e\u5e38\u6d41\u884c\uff0c\u53eb\u505a\u4e0b\u6807\u8868\u793a\u6cd5 (Subscript notation)\u3002\u8fd9\u91cc\u7684\u4e0b\u6807 \\(t\\) \u5c31\u4ee3\u8868\u4e86\u5bf9\u65f6\u95f4\u6c42\u504f\u5bfc\u3002\u5199\u6210 \\(\\rho(\\vec{x}, t)\\) \u662f\u4e3a\u4e86\u65f6\u523b\u63d0\u9192\u6211\u4eec\uff0c\u5bc6\u5ea6 \\(\\rho\\) \u4e0d\u4ec5\u548c\u65f6\u95f4 \\(t\\) \u6709\u5173\uff0c\u8fd8\u548c\u7a7a\u95f4\u4f4d\u7f6e \\(\\vec{x}\\) \u6709\u5173\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#12","title":"1.2 \u81ea\u7531\u80fd\u6cdb\u51fd\uff1a\u4e00\u4e2a\u66f4\u6df1\u523b\u7684\u7ec4\u7ec7\u539f\u5219","text":"<p>\u4e0a\u9762\u7684SPDE\u770b\u8d77\u6765\u975e\u5e38\u590d\u6742\uff0c\u5404\u4e2a\u9879\u4f3c\u4e4e\u6765\u6e90\u4e0d\u540c\u3002\u7136\u800c\uff0c\u7269\u7406\u5b66\u7684\u7f8e\u5999\u4e4b\u5904\u5728\u4e8e\uff0c\u8fd9\u4e9b\u770b\u4f3c\u65e0\u5173\u7684\u786e\u5b9a\u6027\u9879\u53ef\u4ee5\u88ab\u4e00\u4e2a\u66f4\u6df1\u523b\u3001\u66f4\u7edf\u4e00\u7684\u539f\u5219\u6240\u652f\u914d\u2014\u2014\u7cfb\u7edf\u603b\u662f\u5411\u7740\u603b\u81ea\u7531\u80fd \\(F\\) \u51cf\u5c0f\u7684\u65b9\u5411\u6f14\u5316\u3002</p> <p></p> <p>\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u81ea\u7531\u80fd\u6cdb\u51fd (Free Energy Functional) \\(F[\\rho]\\)\uff0c\u5b83\u4e3a\u6bcf\u4e00\u79cd\u53ef\u80fd\u7684\u5bc6\u5ea6\u5206\u5e03 \\(\\rho(\\mathbf{x})\\) \u8d4b\u4e88\u4e00\u4e2a\u6570\u503c\u2014\u2014\u5373\u8be5\u5206\u5e03\u4e0b\u7cfb\u7edf\u7684\u603b\u81ea\u7531\u80fd\u3002\u5bf9\u4e8e\u6211\u4eec\u6240\u8003\u8651\u7684\u7cfb\u7edf\uff0c\u5176\u81ea\u7531\u80fd\u6cdb\u51fd\u7531\u4e24\u90e8\u5206\u6784\u6210\uff1a</p> \\[ \\begin{aligned} F[\\rho] &amp;= \\underbrace{\\frac{1}{2} \\int d\\mathbf{x} \\int d\\mathbf{y} \\, \\rho(\\mathbf{x}) V(\\mathbf{x} - \\mathbf{y}) \\rho(\\mathbf{y})}_{\\text{\u80fd\u91cf\u9879 } E[\\rho] \\text{ (\u7c7b\u7113)}} - \\underbrace{T S[\\rho]}_{\\text{\u71b5\u8d21\u732e}} \\\\ &amp;= \\frac{1}{2} \\int d\\mathbf{x} \\int d\\mathbf{y} \\, \\rho(\\mathbf{x}) V(\\mathbf{x} - \\mathbf{y}) \\rho(\\mathbf{y}) + k_B T \\int d\\mathbf{x} \\, [\\rho(\\mathbf{x}) \\ln \\rho(\\mathbf{x}) - \\rho(\\mathbf{x})] \\end{aligned} \\] <p>\u6211\u4eec\u6765\u56de\u5fc6\u4e00\u4e0b\uff0c\u5728\u70ed\u529b\u5b66\u91cc\uff0c\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u81ea\u7531\u80fd\u2014\u2014\u5409\u5e03\u65af\u81ea\u7531\u80fd (Gibbs Free Energy) \\(G\\) \u7684\u5b9a\u4e49\u662f\uff1a\\(G = H - TS\\)\u3002\\(H\\) \u662f\u7113\uff0c\u4ee3\u8868\u4e86\u7cfb\u7edf\u7684\u603b\u80fd\u91cf\u5185\u5bb9\uff08\u5305\u62ec\u5185\u80fd\u548c\u4e3a\u4e86\u7ef4\u6301\u4f53\u79ef\u4e0e\u538b\u5f3a\u6240\u505a\u7684\u529f\uff09\u3002\u5b83\u662f\u4e00\u4e2a\u80fd\u91cf\u9879\u3002\\(TS\\) \u662f\u71b5\u8d21\u732e\u9879\uff0c\u4ee3\u8868\u4e86\u7cfb\u7edf\u7684\u6df7\u4e71\u7a0b\u5ea6\u6216\u4e0d\u786e\u5b9a\u6027\u3002\u4e0a\u9762\u7684\u6cdb\u51fd\u548c\u5409\u5e03\u65af\u81ea\u7531\u80fd\u76f8\u4f3c\u3002</p> <p>\\(F[\\rho]\\) \u7684\u7269\u7406\u8be0\u91ca\u2014\u2014\u4e00\u573a\u80fd\u91cf\u4e0e\u71b5\u7684\u201c\u62d4\u6cb3\u201d\uff1a</p> <ol> <li> <p>\u80fd\u91cf\u9879 \\(E[\\rho]\\)\uff1a\u8fd9\u662f\u7cfb\u7edf\u4e2d\u6240\u6709\u7c92\u5b50\u5bf9\u4e4b\u95f4\u76f8\u4e92\u4f5c\u7528\u80fd\u7684\u5e73\u5747\u503c\u3002</p> </li> <li> <p>\u5982\u679c\u76f8\u4e92\u4f5c\u7528 \\(V\\) \u662f\u5438\u5f15\u7684\uff08\u5982\u8303\u5fb7\u534e\u529b\uff09\uff0c\u8fd9\u4e00\u9879\u4f1a\u503e\u5411\u4e8e\u8ba9\u7c92\u5b50\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u9ad8\u5bc6\u5ea6\u56e2\u7c07\uff0c\u4ee5\u964d\u4f4e\u603b\u80fd\u91cf\u3002</p> </li> <li> <p>\u5982\u679c\u76f8\u4e92\u4f5c\u7528 \\(V\\) \u662f\u6392\u65a5\u7684\uff08\u5982\u5e93\u4ed1\u529b\uff09\uff0c\u8fd9\u4e00\u9879\u4f1a\u503e\u5411\u4e8e\u8ba9\u7c92\u5b50\u5f7c\u6b64\u8fdc\u79bb\uff0c\u4fdd\u6301\u5747\u5300\u5206\u5e03\u3002</p> </li> <li> <p>\u71b5\u9879 \\(-TS[\\rho]\\)\uff1a\u8fd9\u4e00\u9879\u6e90\u4e8e\u7edf\u8ba1\u529b\u5b66\u4e2d\u7684\u6784\u578b\u71b5\u3002\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u544a\u8bc9\u6211\u4eec\uff0c\u7cfb\u7edf\u603b\u662f\u503e\u5411\u4e8e\u71b5\u589e\u7684\u65b9\u5411\u3002</p> </li> <li> <p>\u71b5\u4ee3\u8868\u4e86\u7cfb\u7edf\u7684\u201c\u65e0\u5e8f\u5ea6\u201d\u3002\u5bf9\u4e8e\u5927\u91cf\u7c92\u5b50\u6765\u8bf4\uff0c\u5c06\u5b83\u4eec\u5747\u5300\u5730\u6563\u5e03\u5728\u7a7a\u95f4\u4e2d\u7684\u5fae\u89c2\u72b6\u6001\u6570\u91cf\u8fdc\u8fdc\u591a\u4e8e\u5c06\u5b83\u4eec\u805a\u96c6\u5728\u67d0\u4e2a\u89d2\u843d\u7684\u72b6\u6001\u6570\u91cf\u3002</p> </li> <li> <p>\u56e0\u6b64\uff0c\u71b5\u7684\u8d21\u732e\u603b\u662f\u503e\u5411\u4e8e\u5c06\u4efb\u4f55\u5bc6\u5ea6\u4e0d\u5747\u5300\u6027\u201c\u62b9\u5e73\u201d\uff0c\u4f7f\u7cfb\u7edf\u8d8b\u5411\u4e8e\u4e00\u4e2a\u5b8c\u5168\u5747\u5300\u7684\u5bc6\u5ea6\u5206\u5e03\uff0c\u4ee5\u6700\u5927\u5316\u5176\u65e0\u5e8f\u5ea6\u3002</p> </li> </ol> <p>\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\uff0c\u6b63\u662f\u5728\u8fd9\u573a\u80fd\u91cf\u6700\u5c0f\u5316\u548c\u71b5\u6700\u5927\u5316\u4e4b\u95f4\u7684\u7ade\u4e89\u4e2d\u5c55\u5f00\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#13","title":"1.3 \u7528\u81ea\u7531\u80fd\u91cd\u5199\u52a8\u529b\u5b66\u65b9\u7a0b","text":"<p>\u6709\u4e86\u81ea\u7531\u80fd\u6cdb\u51fd\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u786e\u5b9a\u6027\u7684\u7c92\u5b50\u6d41 \\(\\mathbf{J}_{\\text{det}}\\) \u5199\u6210\u4e00\u4e2a\u975e\u5e38\u7b80\u6d01\u4f18\u7f8e\u7684\u5f62\u5f0f\uff1a</p> \\[ \\mathbf{J}_{\\text{det}} = -\\mu \\rho(\\mathbf{x}, t) \\nabla \\left( \\frac{\\delta F[\\rho]}{\\delta \\rho(\\mathbf{x}, t)} \\right) \\] <p>\u8fd9\u91cc\u7684\u6cdb\u51fd\u5bfc\u6570 \\(\\frac{\\delta F[\\rho]}{\\delta \\rho}\\) \u6b63\u662f\u7cfb\u7edf\u7684\u5c40\u57df\u5316\u5b66\u52bf\u3002\u5316\u5b66\u52bf\u7684\u68af\u5ea6 \\(\\nabla (\\delta F/\\delta \\rho)\\) \u6784\u6210\u4e86\u9a71\u52a8\u7c92\u5b50\u6d41\u52a8\u7684\u5e7f\u4e49\u70ed\u529b\u5b66\u529b\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u5bf9\u6211\u4eec\u5b9a\u4e49\u7684 \\(F[\\rho]\\) \u6c42\u6cdb\u51fd\u5bfc\u6570\uff0c\u7136\u540e\u4ee3\u5165\u4e0a\u5f0f\uff0c\u6070\u597d\u5c31\u80fd\u5f97\u5230SPDE\u4e2d\u7684\u524d\u4e24\u9879\uff08\u76f8\u4e92\u4f5c\u7528\u6d41\u548c\u6269\u6563\u6d41\uff09\u3002</p> <p>\u6700\u7ec8\uff0c\u5305\u542b\u968f\u673a\u9879\u5728\u5185\u7684\u603b\u7c92\u5b50\u6d41\u53ef\u4ee5\u5199\u4e3a\uff1a</p> \\[ \\mathbf{J} = -\\mu \\rho \\nabla \\left( \\frac{\\delta F[\\rho]}{\\delta \\rho} \\right) + \\sqrt{2 \\mu k_B T \\rho} \\, \\boldsymbol{\\eta}(\\mathbf{x}, t) \\] <p>\u8fd9\u4e2a\u5f62\u5f0f\u6e05\u6670\u5730\u63ed\u793a\u4e86\u7269\u7406\u56fe\u50cf\uff1a\u5bc6\u5ea6\u573a\u7684\u6f14\u5316\uff0c\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f \\(\\rho(\\mathbf{x}, t)\\) \u5728\u7531 \\(F[\\rho]\\) \u6784\u6210\u7684\u65e0\u7a77\u7ef4\u201c\u81ea\u7531\u80fd\u5730\u8c8c\u201d\u4e0a\uff0c\u6cbf\u7740\u6700\u9661\u5ced\u7684\u201c\u4e0b\u5761\u201d\u65b9\u5411\u6eda\u52a8\uff0c\u540c\u65f6\u88ab\u6c38\u4e0d\u505c\u6b47\u7684\u70ed\u566a\u58f0\u6240\u201c\u6447\u6643\u201d\u3002\u7cfb\u7edf\u7684\u6700\u7ec8\u5e73\u8861\u6001 \\(\\rho_{\\text{eq}}(\\mathbf{x})\\)\uff0c\u5c31\u662f\u8fd9\u4e2a\u81ea\u7531\u80fd\u5730\u8c8c\u7684\u6700\u4f4e\u70b9\u3002</p> <p>\u800c\uff0c\u201c\u8fd1\u70ed\u5e73\u8861\u201d(near-equilibrium)\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u7cfb\u7edf\u5904\u4e8e\u5176\u6700\u7a33\u5b9a\u3001\u6700\u201c\u5e73\u9759\u201d\u7684\u5e73\u8861\u72b6\u6001\u9644\u8fd1\uff0c\u4f46\u53c8\u5b58\u5728\u7740\u5fae\u5c0f\u3001\u6c38\u4e0d\u505c\u6b47\u7684\u968f\u673a\u201c\u6296\u52a8\u201d\u6216\u201c\u6da8\u843d\u201d\u7684\u60c5\u666f\u3002\u4f60\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u4e00\u9897\u5b89\u9759\u5730\u5f85\u5728\u7897\u5e95\u7684\u5f39\u73e0\uff0c\u5f53\u4f60\u975e\u5e38\u8f7b\u5fae\u5730\u6643\u52a8\u7897\u65f6\uff0c\u5f39\u73e0\u5e76\u4e0d\u4f1a\u98de\u51fa\u53bb\uff0c\u800c\u53ea\u662f\u5728\u7897\u5e95\u9644\u8fd1\u6765\u56de\u6eda\u52a8\u3002\u5728\u8fd9\u4e2a\u72b6\u6001\u4e0b\uff0c\u7cfb\u7edf\u7684\u5b8f\u89c2\u6027\u8d28\uff08\u5982\u5bc6\u5ea6\u3001\u6e29\u5ea6\uff09\u4e0d\u662f\u7edd\u5bf9\u4e0d\u53d8\u7684\uff0c\u800c\u662f\u5728\u5176\u5e73\u8861\u5e73\u5747\u503c\u9644\u8fd1\u5fae\u5c0f\u5730\u6ce2\u52a8\u3002\u6700\u5173\u952e\u7684\u662f\uff0c\u56e0\u4e3a\u7cfb\u7edf\u79bb\u201c\u7897\u5e95\u201d\u5f88\u8fd1\uff0c\u6240\u4ee5\u5b83\u603b\u80fd\u611f\u53d7\u5230\u4e00\u80a1\u5f3a\u5927\u7684\u6062\u590d\u529b\uff0c\u65f6\u523b\u5c06\u5b83\u62c9\u5411\u6700\u7a33\u5b9a\u7684\u4e2d\u5fc3\u70b9\uff0c\u8fd9\u4f7f\u5f97\u8fd9\u4e9b\u5fae\u5c0f\u7684\u6da8\u843d\u884c\u4e3a\u9075\u5faa\u7740\u975e\u5e38\u666e\u9002\u548c\u7b80\u6d01\u7684\u89c4\u5f8b\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#2","title":"2. \u8fd1\u70ed\u5e73\u8861\u6da8\u843d\u7684\u666e\u9002\u6846\u67b6","text":"<p>\u4e0a\u4e00\u8282\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u201c\u81ea\u4e0b\u800c\u4e0a\u201d\u7684\u65c5\u7a0b\uff1a\u4ece\\(N\\)\u4e2a\u76f8\u4e92\u4f5c\u7528\u7684\u5e03\u6717\u7c92\u5b50\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u51fa\u53d1\uff0c\u901a\u8fc7\u201c\u7c97\u7c92\u5316\u201d\u8fd9\u4e00\u7565\u663e\u590d\u6742\u7684\u6570\u5b66\u63a8\u5bfc\uff0c\u6700\u7ec8\u5f97\u5230\u4e86\u4e00\u4e2a\u63cf\u8ff0\u5bc6\u5ea6\u573a \\(\u03c1\\) \u6f14\u5316\u7684\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b(SPDE)\u3002\u8fd9\u4e2a\u65b9\u7a0b\u867d\u7136\u7cbe\u786e\uff0c\u4f46\u5f62\u5f0f\u590d\u6742\uff0c\u5e76\u4e14\u5b83\u7684\u63a8\u5bfc\u4f9d\u8d56\u4e8e\u6211\u4eec\u5bf9\u5fae\u89c2\u76f8\u4e92\u4f5c\u7528\u52bf \\(V\\) \u7684\u4e86\u89e3\u3002\u6838\u5fc3\u95ee\u9898\u662f\uff1a \u5047\u8bbe\u6211\u4eec\u5bf9\u5fae\u89c2\u7ec6\u8282\u4e00\u65e0\u6240\u77e5\uff0c\u80fd\u5426\u4ec5\u51ed\u70ed\u529b\u5b66\u7684\u57fa\u672c\u539f\u7406\uff0c\u5c31\u6784\u5efa\u4e00\u4e2a\u7406\u8bba\u6765\u63cf\u8ff0\u4efb\u4f55\u7cfb\u7edf\u5728\u7a33\u5b9a\u5e73\u8861\u6001\u9644\u8fd1\u7684\u6da8\u843d\u884c\u4e3a\uff1f</p> <p>\u8fd9\u4e00\u8282\u6211\u4eec\u8f6c\u5411\u66f4\u666e\u9002\u7684\u89c6\u89d2\u2014\u2014\u201c\u81ea\u4e0a\u800c\u4e0b\u201d\u7684\u65b9\u6cd5\u3002\u8fd9\u4e00\u90e8\u5206\u7684\u6838\u5fc3\u601d\u60f3\u5728\u4e8e\u5176\u666e\u9002\u6027\u3002\u901a\u8fc7\u4ece\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u7684\u5177\u4f53\u7ec6\u8282\u4e2d\u62bd\u79bb\u51fa\u6765\uff0c\u8f6c\u800c\u5173\u6ce8\u4e00\u7ec4\u901a\u7528\u7684\u3001\u6f14\u5316\u7f13\u6162\u7684\u201c\u4ecb\u89c2\u53d8\u91cf\u201d \\(\\phi_a\\)</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#21-phi_a","title":"2.1 \u4ece\u5bc6\u5ea6\u573a\u5230\u666e\u9002\u7684\u4ecb\u89c2\u53d8\u91cf\\(\\{\\phi_a\\}\\)","text":"<p>\u5728\u7b2c\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u5b8f\u89c2\u91cf\u662f\u5bc6\u5ea6\u573a \\(\\rho(\\mathbf{x}, t)\\)\u3002\u4e3a\u4e86\u548c\u73b0\u5728\u8fd9\u4e2a\u66f4\u666e\u9002\u7684\u6846\u67b6\u8054\u7cfb\u8d77\u6765\uff0c\u4f60\u53ef\u4ee5\u60f3\u8c61\u628a\u7a7a\u95f4\u5212\u5206\u6210\u8bb8\u591a\u5c0f\u683c\u5b50\uff0c\u6bcf\u4e2a\u683c\u5b50\u91cc\u7684\u5bc6\u5ea6 \\(\\rho(\\mathbf{x}, t)\\) \u5c31\u662f\u4e00\u4e2a\u5b8f\u89c2\u53d8\u91cf\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5bc6\u5ea6\u573a\u5c31\u53ef\u4ee5\u770b\u4f5c\u662f\u65e0\u6570\u4e2a\u5b8f\u89c2\u53d8\u91cf\u7684\u96c6\u5408\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u8fdb\u884c\u63a8\u5e7f\u3002\u6211\u4eec\u4e0d\u518d\u5c40\u9650\u4e8e\u7c92\u5b50\u5bc6\u5ea6\uff0c\u800c\u662f\u8003\u8651\u4efb\u4f55\u4e00\u7ec4\u80fd\u591f\u63cf\u8ff0\u4ecb\u89c2\u5c3a\u5ea6\u7cfb\u7edf\u72b6\u6001\u7684\u3001\u6f14\u5316\u7f13\u6162\u7684\u5b8f\u89c2\u53d8\u91cf\uff0c\u8bb0\u4e3a \\(\\{\\phi_a\\}\\)\u3002\u8fd9\u4e9b \\(\\phi_a\\) \u4ee3\u8868\u4e86\u7cfb\u7edf\u72b6\u6001\u5bf9\u5176\u5e73\u8861\u5e73\u5747\u503c\u7684\u504f\u79bb\uff0c\u56e0\u6b64\u5728\u5e73\u8861\u6001\u7cfb\u7efc\u5e73\u5747\u4e0b \\(\\langle \\phi_a \\rangle_{\\text{eq}} = 0\\)\u3002\u8fd9\u4e9b\\(\\{\\phi_a\\}\\) \u53ef\u4ee5\u662f\u78c1\u4f53\u4e2d\u7684\u5c40\u57df\u78c1\u5316\u5f3a\u5ea6\uff0c \u5143\u6df7\u5408\u6db2\u4f53\u4e2d\u7684\u6d53\u5ea6\u5dee\uff0c\u53d1\u751f\u76f8\u53d8\u65f6\u63cf\u8ff0\u6709\u5e8f\u7a0b\u5ea6\u7684\u5e8f\u53c2\u91cf</p> <p>\u6b64\u6846\u67b6\u7684\u6838\u5fc3\u5047\u8bbe\u662f\u5c40\u57df\u70ed\u5e73\u8861\uff1a\u5c3d\u7ba1\u6574\u4e2a\u7cfb\u7edf\u53ef\u80fd\u5904\u4e8e\u8f7b\u5fae\u7684\u975e\u5e73\u8861\u6001\uff08\u5373\u67d0\u4e9b \\(\\phi_a \\neq 0\\)\uff09\uff0c\u4f46\u7cfb\u7edf\u7684\u4efb\u4f55\u4e00\u4e2a\u8db3\u591f\u5c0f\u7684\u90e8\u5206\u90fd\u8fd1\u4f3c\u5904\u4e8e\u5c40\u57df\u7684\u5e73\u8861\u4e2d\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u6807\u51c6\u7684\u70ed\u529b\u5b66\u53d8\u91cf\u6765\u63cf\u8ff0\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#22","title":"2.2 \u4f5c\u4e3a\u7ec4\u7ec7\u539f\u5219\u7684\u71b5\uff1a\u6784\u5efa\u6da8\u843d\u7684\u201c\u52bf\u80fd\u5730\u8c8c\u201d","text":"<p>\u5728\u7b2c1\u8282\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u81ea\u7531\u80fd\u6cdb\u51fd \\(F[\u03c1]\\) \u626e\u6f14\u4e86\u9a71\u52a8\u7cfb\u7edf\u6f14\u5316\u7684\u201c\u52bf\u80fd\u201d\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5b8f\u89c2\u7684\u5b64\u7acb\u7cfb\u7edf\uff0c\u626e\u6f14\u8fd9\u4e2a\u89d2\u8272\u7684\u666e\u9002\u7684\u70ed\u529b\u5b66\u91cf\u662f\u71b5 \\(S\\)\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#-_1","title":"\u7231\u56e0\u65af\u5766-\u73bb\u5c14\u5179\u66fc\u5173\u7cfb","text":"<p>\u7cfb\u7edf\u7684\u57fa\u672c\u516c\u8bbe\u662f\uff0c\u5728\u5e73\u8861\u6001\u4e0b\uff0c\u89c2\u6d4b\u5230\u4e00\u7ec4\u7279\u5b9a\u6da8\u843d \\(\\{\\phi_a\\}\\) \u7684\u6982\u7387\u7531\u7231\u56e0\u65af\u5766\u5bf9\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u7684\u63a8\u5e7f\u7ed9\u51fa\uff1a</p> \\[ P_{\\text{eq}}(\\{\\phi_a\\}) \\propto \\exp \\left( \\frac{S(\\{\\phi_a\\})}{k_B} \\right) \\] <p>\u7269\u7406\u610f\u4e49\uff1a \u8fd9\u4e2a\u516c\u5f0f\u662f\u8fde\u63a5\u5b8f\u89c2\u70ed\u529b\u5b66\uff08\u71b5 \\(S\\)\uff09\u548c\u7edf\u8ba1\u529b\u5b66\uff08\u6982\u7387 \\(P\\)\uff09\u7684\u6865\u6881\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u71b5\u8d8a\u5927\u7684\u5b8f\u89c2\u6001\uff0c\u51fa\u73b0\u7684\u6982\u7387\u4e5f\u8d8a\u9ad8\u3002\u7cfb\u7edf\u7684\u5e73\u8861\u6001\uff0c\u6b63\u662f\u90a3\u4e2a\u71b5\u6700\u5927\u3001\u6700\u53ef\u80fd\u51fa\u73b0\u7684\u5b8f\u89c2\u6001\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_4","title":"\u71b5\u7684\u9ad8\u65af\u8fd1\u4f3c","text":"<p>\u5982\u524d\u6240\u8ff0\uff0c\u4efb\u4f55\u5904\u4e8e\u70ed\u529b\u5b66\u5e73\u8861\u7684\u5b64\u7acb\u7cfb\u7edf\uff0c\u5176\u71b5 \\(S\\) \u5fc5\u7136\u5904\u4e8e\u6781\u5927\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u56f4\u7ed5\u8fd9\u4e2a\u6781\u5927\u503c\u70b9\uff08\u5b9a\u4e49\u4e3a \\(\\phi = 0\\)\uff09\u5bf9\u71b5\u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\u3002\u7531\u4e8e\\(\\phi = 0\\)\u662f\u6781\u5927\u503c\u70b9\uff0c\u71b5\u7684\u4e00\u9636\u5bfc\u6570\u4e3a\u96f6\u3002\u56f4\u7ed5\u8fd9\u4e2a\u71b5\u7684\u6781\u5927\u503c\u70b9\u5bf9 \\(S\\) \u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\uff1a</p> \\[ S(\\{\\phi_a\\}) = S_0 + \\left.\\frac{\\partial S}{\\partial \\phi_a}\\right|_{\\phi=0} \\phi_a + \\frac{1}{2} \\left.\\frac{\\partial^2 S}{\\partial \\phi_a \\partial \\phi_b}\\right|_{\\phi=0} \\phi_a \\phi_b + \\ldots \\] <p>\u7531\u4e8e\u7cfb\u7edf\u5728 \\(\\phi = 0\\) \u5904\u8fbe\u5230\u71b5\u7684\u6781\u5927\u503c\uff0c\u4e00\u9636\u5bfc\u6570\u9879 \\(\\left.\\frac{\\partial S}{\\partial \\phi_a}\\right|_{\\phi=0}\\) \u5fc5\u7136\u4e3a\u96f6\u3002\u5bf9\u4e8e\u5fae\u5c0f\u7684\u6da8\u843d\uff0c\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565 \\(\\phi^3\\) \u53ca\u66f4\u9ad8\u9636\u7684\u9879\u3002\u8fd9\u6837\uff0c\u71b5\u5c31\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u4e8c\u6b21\u578b\uff1a</p> \\[ S(\\{\\phi_a\\}) \\approx S_0 - \\frac{1}{2} \\Gamma_{ab} \\phi_a \\phi_b \\] <p>\u5176\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u77e9\u9635 \\(\\Gamma_{ab} = -\\left.\\frac{\\partial^2 S}{\\partial \\phi_a \\partial \\phi_b}\\right|_{\\phi=0}\\)\u3002</p> <p>\u8fd9\u91cc\uff0c\\(S_0\\) \u662f\u5e73\u8861\u6001\u65f6\u7684\u6700\u5927\u71b5\uff0c\u6211\u4eec\u91c7\u7528\u4e86\u7231\u56e0\u65af\u5766\u6c42\u548c\u7ea6\u5b9a\uff08\u5bf9\u91cd\u590d\u51fa\u73b0\u7684\u6307\u6807\u6c42\u548c\uff09\u3002</p> <p>\u7269\u7406\u610f\u4e49\uff1a \u8fd9\u4e2a\u516c\u5f0f\u7684\u542b\u4e49\u662f\uff0c\u5728\u4efb\u4f55\u7a33\u5b9a\u5e73\u8861\u70b9\u9644\u8fd1\uff0c\u70ed\u529b\u5b66\u7684\u201c\u71b5\u5730\u8c8c\u201d\u5c40\u90e8\u90fd\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\u4e00\u4e2a\u5012\u6263\u7684\u629b\u7269\u9762\uff08\u4e8c\u6b21\u578b\uff09\u3002\u8fd9\u4e2a\u8fd1\u4f3c\u7684\u666e\u9002\u6027\uff0c\u6b63\u662f\u6574\u4e2a\u7406\u8bba\u6846\u67b6\u5f3a\u5927\u5a01\u529b\u7684\u6765\u6e90\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#gamma_ab","title":"\u7a33\u5b9a\u6027\u77e9\u9635 \\(\\Gamma_{ab}\\)","text":"<p>\u77e9\u9635 \\(\\Gamma_{ab} = -\\left.\\frac{\\partial^2 S}{\\partial \\phi_a \\partial \\phi_b}\\right|_{\\phi=0}\\) \u88ab\u79f0\u4e3a\u7a33\u5b9a\u6027\u77e9\u9635\u6216\u70ed\u529b\u5b66\u7a33\u5b9a\u6027\u77e9\u9635\u3002</p> <p>\u5b83\u63cf\u8ff0\u4e86\u71b5\u5730\u8c8c\u5728\u5e73\u8861\u70b9\u5904\u7684 \u66f2\u7387\uff0c\u8861\u91cf\u4e86\u71b5\u201c\u5c71\u5cf0\u201d\u7684\u9661\u5ced\u7a0b\u5ea6\u3002</p> <p>\u5b83\u662f\u4e00\u4e2a\u5bf9\u79f0\u77e9\u9635\uff08\\(\\Gamma_{ab} = \\Gamma_{ba}\\)\uff09\uff0c\u5e76\u4e14\u662f\u6b63\u5b9a\u7684\uff0c\u8fd9\u786e\u4fdd\u4e86 \\(\\phi = 0\\) \u786e\u5b9e\u662f\u71b5\u7684\u6781\u5927\u503c\u70b9\uff08\u800c\u4e0d\u662f\u978d\u70b9\uff09\uff0c\u4ece\u800c\u662f\u4e00\u4e2a \u7a33\u5b9a \u7684\u5e73\u8861\u6001\u3002\u5982\u679c\u5b83\u4e0d\u6b63\u5b9a\uff0c\u7cfb\u7edf\u5c31\u4f1a\u201c\u6eda\u4e0b\u5c71\u5761\u201d\uff0c\u4e0d\u4f1a\u505c\u7559\u5728\u5e73\u8861\u70b9\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#23","title":"2.3 \u70ed\u529b\u5b66\u529b\u3001\u611f\u53d7\u7387\u4e0e\u5e73\u8861\u5173\u8054\uff1a\u4ece\u5730\u8c8c\u5230\u52a8\u529b\u5b66\u54cd\u5e94","text":"<p>\u6709\u4e86\u71b5\u5730\u8c8c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e49\u51fa\u9a71\u52a8\u7cfb\u7edf\u56de\u5f52\u5e73\u8861\u7684\u201c\u529b\u201d\uff0c\u5e76\u8861\u91cf\u7cfb\u7edf\u5bf9\u8fd9\u4e2a\u529b\u7684\u201c\u54cd\u5e94\u201d\uff0c\u6700\u7ec8\u63ed\u793a\u6da8\u843d\u672c\u8eab\u7684\u6027\u8d28\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#mu_a","title":"\u5e7f\u4e49\u6062\u590d\u529b\\(\\mu_a\\)","text":"<p>\u4e0e\u53d8\u91cf \\(\\phi_a\\) \u5171\u8f6d\u7684\u70ed\u529b\u5b66\u529b\u88ab\u5b9a\u4e49\u4e3a\u71b5\u7684\u68af\u5ea6\uff1a</p> \\[ \\mu_a = \\frac{\\partial S}{\\partial \\phi_a} \\] <p>\u8fd9\u4e2a \\(\\mu_a\\) \u626e\u6f14\u4e86\u5e7f\u4e49\u6062\u590d\u529b\u7684\u89d2\u8272\u3002\u5b83\u603b\u662f\u8bd5\u56fe\u5c06\u7cfb\u7edf\u62c9\u56de\u5230\u71b5\u6700\u5927\u7684\u5e73\u8861\u72b6\u6001\u3002\u5728\u6211\u4eec\u5bf9\u71b5\u7684\u4e8c\u6b21\u8fd1\u4f3c\u4e0b\uff0c\u8fd9\u4e2a\u529b\u4e0e\u504f\u79bb\u4f4d\u79fb \\(\\phi\\) \u5448\u7ebf\u6027\u5173\u7cfb\uff1a</p> \\[ \\mu_a = -\\Gamma_{ab} \\phi_b \\] <p>\u7269\u7406\u610f\u4e49\uff1a\u8fd9\u5c31\u662f\u5e7f\u4e49\u7684 \u80e1\u514b\u5b9a\u5f8b (\\(F = -kx\\))\uff01\u5b83\u8868\u660e\uff0c\u7cfb\u7edf\u504f\u79bb\u5e73\u8861\u8d8a\u8fdc\uff08 \\(\\phi_a\\)  \u8d8a\u5927\uff09\uff0c\u628a\u5b83\u62c9\u56de\u6765\u7684\u6062\u590d\u529b \\(\\mu_a\\) \u5c31\u8d8a\u5f3a\u3002\u7a33\u5b9a\u6027\u77e9\u9635 \\(\\Gamma\\) \u5728\u6b64\u626e\u6f14\u4e86\u5f39\u7c27\u52b2\u5ea6\u7cfb\u6570\u77e9\u9635\u7684\u89d2\u8272\u3002\u4e00\u4e2a\u975e\u5e38\u7a33\u5b9a\u7684\u7cfb\u7edf\uff08\\(\\Gamma\\) \u5f88\u5927\uff09\uff0c\u5c31\u50cf\u4e00\u4e2a\u5f88\u786c\u7684\u5f39\u7c27\uff0c\u4f1a\u4ea7\u751f\u5de8\u5927\u7684\u6062\u590d\u529b\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#chi_ab","title":"\u611f\u53d7\u7387\u77e9\u9635 \\(\\chi_{ab}\\)","text":"<p>\u6709\u201c\u529b\u201d\u548c\u201c\u4f4d\u79fb\u201d\uff0c\u81ea\u7136\u5c31\u53ef\u4ee5\u5b9a\u4e49\u201c\u54cd\u5e94\u201d\u3002\u7a33\u5b9a\u6027\u77e9\u9635\u7684\u9006\u77e9\u9635\u88ab\u79f0\u4e3a \u611f\u53d7\u7387\u77e9\u9635 (susceptibility matrix)\uff1a</p> \\[\\chi = \\Gamma^{-1}\\] <p>\u5b83\u53ef\u4ee5\u4ece \\(\\mu = -\\Gamma\\phi\\) \u53cd\u89e3\u51fa \\(\\phi = -\\Gamma\u207b^{-1}\\mu = -\\chi \\mu\\)\u3002</p> <p>\u7269\u7406\u610f\u4e49\uff1a \u611f\u53d7\u7387 \\(\\chi\\) \u8861\u91cf\u4e86\u7cfb\u7edf\u5bf9\u5916\u754c\u6270\u52a8\uff08\u7531 \\(\\mu_a\\) \u4f53\u73b0\uff09\u7684\u201c\u67d4\u987a\u6027\u201d\u6216\u54cd\u5e94\u80fd\u529b\u3002\u4e00\u4e2a\u611f\u53d7\u7387\u5f88\u5927\u7684\u7cfb\u7edf\uff0c\u5c31\u50cf\u4e00\u6839\u5f88\u8f6f\u7684\u5f39\u7c27\uff0c\u4e00\u70b9\u70b9\u529b\u5c31\u80fd\u8ba9\u5b83\u4ea7\u751f\u5f88\u5927\u7684\u5f62\u53d8\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_5","title":"\u5e73\u8861\u5173\u8054\u51fd\u6570","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u5229\u7528\u5229\u7528\u9ad8\u65af\u5f62\u5f0f\u7684\u5e73\u8861\u6982\u7387\u5206\u5e03 \\(P_{\\text{eq}} \\propto \\exp\\left(-\\frac{1}{2} \\Gamma_{ab} \\phi_a \\phi_b\\right)\\)\uff0c\u6da8\u843d\u81ea\u8eab\u7684\u7edf\u8ba1\u6027\u8d28\uff08\u5373\u65b9\u5dee\u548c\u534f\u65b9\u5dee\uff09\uff0c\u5947\u8ff9\u5373\u5c06\u53d1\u751f\uff1a</p> \\[ \\langle \\phi_a \\phi_b \\rangle_{\\text{eq}} = (\\Gamma^{-1})_{ab} \\equiv \\chi_{ab} \\] <p>\u7269\u7406\u610f\u4e49\uff1a \u8fd9\u662f\u4e00\u4e2a\u6781\u4e3a\u6df1\u523b\u548c\u7f8e\u5999\u7684\u7ed3\u679c\uff01\u5b83\u6784\u6210\u4e86\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7684\u53c8\u4e00\u79cd\u6838\u5fc3\u8868\u73b0\u5f62\u5f0f\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff1a</p> <p>\u8861\u91cf\u7cfb\u7edf\u5bf9\u4e00\u4e2a\u786e\u5b9a\u6027\u5916\u529b\u54cd\u5e94\u7684\u201c\u67d4\u987a\u5ea6\u201d\uff08\u611f\u53d7\u7387 \\(chi\\)\uff09\uff0c\u7adf\u7136\u5b8c\u5168\u7b49\u540c\u4e8e\u7cfb\u7edf\u5728\u6ca1\u6709\u5916\u529b\u65f6\uff0c\u81ea\u53d1\u70ed\u6da8\u843d\u7684\u5e45\u5ea6\uff08\u5173\u8054\u51fd\u6570 \\(\u27e8\\phi\\phi\u27e9\\)\uff09\u3002\u4e00\u4e2a\u5728\u5185\u90e8\u201c\u6d3b\u8e66\u4e71\u8df3\u201d\uff08\u6da8\u843d\u5927\uff09\u7684\u7cfb\u7edf\uff0c\u5728\u5916\u90e8\u201c\u63a8\u201d\u5b83\u4e00\u4e0b\u65f6\uff0c\u4e5f\u5fc5\u7136\u4f1a\u201c\u6447\u6643\u201d\u5f97\u5f88\u5389\u5bb3\uff08\u54cd\u5e94\u5927\uff09\u3002</p> <p>\u5176\u4ed6\u91cd\u8981\u7684\u5173\u8054\u51fd\u6570\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5bfc\u51fa\uff1a</p> \\[ \\langle \\phi_a \\mu_b \\rangle_{\\text{eq}} = \\langle \\phi_a (-\\Gamma_{bc} \\phi_c) \\rangle = -\\Gamma_{bc} \\langle \\phi_a \\phi_c \\rangle = -\\Gamma_{bc} (\\Gamma^{-1})_{ac} = -\\delta_{ab} \\] <p>\u7269\u7406\u610f\u4e49\uff1a \u4e00\u4e2a\u6da8\u843d\u4f4d\u79fb \\(\\phi_a\\) \u4e0e\u5176\u81ea\u8eab\u7684\u6062\u590d\u529b \\(\\mu_a\\) \u662f\u5b8c\u5168\u53cd\u76f8\u5173\u7684\uff08\\(a=b\\) \u65f6\u7ed3\u679c\u4e3a-1\uff09\uff0c\u4f46\u4e0e\u5176\u4ed6\u65b9\u5411\u7684\u6062\u590d\u529b \\(\\mu_{b\u2260a}\\) \u4e0d\u76f8\u5173\u3002\u8fd9\u975e\u5e38\u76f4\u89c2\uff1a\u4f60\u5f80\u4e1c\u504f\u79bb\uff0c\u6062\u590d\u529b\u5c31\u628a\u4f60\u5f80\u897f\u62c9\u3002</p> \\[ \\langle \\mu_a \\mu_b \\rangle_{\\text{eq}} = \\langle (-\\Gamma_{ac}\\phi_c)(-\\Gamma_{bd}\\phi_d) \\rangle = \\Gamma_{ac}\\Gamma_{bd} \\langle \\phi_c \\phi_d \\rangle = \\Gamma_{ac}\\Gamma_{bd} (\\Gamma^{-1})_{cd} = \\Gamma_{ab} \\] <p>\u7269\u7406\u610f\u4e49\uff1a \u6062\u590d\u529b\u81ea\u8eab\u7684\u6da8\u843d\u5e45\u5ea6\u7531\u7a33\u5b9a\u6027\u77e9\u9635 \\(\\Gamma\\) \u51b3\u5b9a\u3002\u5728\u4e00\u4e2a\u975e\u5e38\u7a33\u5b9a\u7684\u7cfb\u7edf\u91cc\uff08\\(\\Gamma\\) \u5f88\u5927\uff0c\u71b5\u5c71\u5cf0\u5f88\u9661\uff09\uff0c\u5373\u4f7f\u4f4d\u79fb\u6da8\u843d \\(\\phi_a\\) \u5f88\u5c0f\uff0c\u6062\u590d\u529b \\(\\mu\\) \u7684\u6da8\u843d\u4e5f\u4f1a\u975e\u5e38\u5267\u70c8\u3002</p> <p>\u7531\u6b64\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u4e00\u4e2a\u9002\u7528\u4e8e\u5404\u79cd\u8fd1\u5e73\u8861\u7cfb\u7edf\uff08\u4f8b\u5982\u78c1\u4f53\u4e2d\u7684\u78c1\u5316\u5f3a\u5ea6\u3001\u6df7\u5408\u7269\u4e2d\u7684\u6d53\u5ea6\u5dee\u3001\u76f8\u53d8\u8fc7\u7a0b\u4e2d\u7684\u5e8f\u53c2\u91cf\u7b49\uff09\u7684\u7edf\u4e00\u7406\u8bba\u6846\u67b6\u3002\u5176\u6838\u5fc3\u662f\uff0c\u5728\u4efb\u4f55\u7a33\u5b9a\u5e73\u8861\u70b9\u9644\u8fd1\uff0c\u70ed\u529b\u5b66\u201c\u5730\u8c8c\u201d\uff08\u7531\u71b5 \\(S\\) \u63cf\u8ff0\uff09\u5c40\u90e8\u603b\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\u4e00\u4e2a\u4e8c\u6b21\u578b\u3002\u71b5 \\(S\\) \u626e\u6f14\u7740\u52bf\u80fd\u7684\u89d2\u8272\uff0c\u800c\u5176\u66f2\u7387\u2014\u2014\u7a33\u5b9a\u6027\u77e9\u9635 \\(\\Gamma\\)\u2014\u2014\u5219\u5b9a\u4e49\u4e86\u5c06\u7cfb\u7edf\u62c9\u56de\u5e73\u8861\u7684\u6062\u590d\u529b\u4ee5\u53ca\u6da8\u843d\u7684\u5e45\u5ea6\u3002\u5c06\u8fd9\u4e2a\u4e8c\u6b21\u578b\u7684\u71b5\u4ee3\u5165\u73bb\u5c14\u5179\u66fc\u5206\u5e03 \\(P_{\\text{eq}} \\propto \\exp(S/k_B)\\)\uff0c\u6211\u4eec\u7acb\u5373\u53d1\u73b0\uff0c\u6da8\u843d\u53d8\u91cf \\(\\{\\phi_a\\}\\) \u7684\u5e73\u8861\u6982\u7387\u5206\u5e03\u662f\u4e00\u4e2a\u591a\u53d8\u91cf\u9ad8\u65af\u5206\u5e03\u3002**\u8fd9\u662f\u4e00\u4e2a\u5bf9\u4e8e\u4efb\u4f55\u5904\u5728\u7a33\u5b9a\u5e73\u8861\u6001\u9644\u8fd1\u7684\u7cfb\u7edf\u90fd\u6210\u7acb\u7684\u666e\u9002\u6027\u7ed3\u8bba\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#3","title":"3. \u6da8\u843d\u7684\u52a8\u529b\u5b66\uff1a\u65f6\u95f4\u5173\u8054\u51fd\u6570","text":"<p>\u6211\u4eec\u5230\u76ee\u524d\u901a\u8fc7\u71b5 \\(S\\) \u6784\u5efa\u4e86\u4e00\u4e2a\u63cf\u8ff0\u5e73\u8861\u6001\u6da8\u843d\u7684\u666e\u9002\u9759\u6001\u6846\u67b6\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u7ed3\u8bba\uff1a\u7cfb\u7edf\u5728\u67d0\u4e00\u65f6\u523b\u7684\u6da8\u843d\u5173\u8054\\(\u27e8\\phi_a(0)\\phi_b(0)\u27e9\\)\u7b49\u4e8e\u5176\u5bf9\u5916\u754c\u6270\u52a8\u7684\u54cd\u5e94\uff08\u611f\u53d7\u7387 \\(\\chi_{ab}\\)\uff09\u3002\u4f46\u76ee\u524d\u83b7\u5f97\u7684\u7edf\u8ba1\u89c4\u5f8b\u65e0\u6cd5\u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898\uff1a</p> <p>\u5982\u679c\u4e00\u4e2a\u6da8\u843d\u6b64\u523b\u51fa\u73b0\uff0c\u5b83\u5c06\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u3001\u6700\u7ec8\u6d88\u5931\uff1f</p> <p>\u7cfb\u7edf\u7684\u201c\u8bb0\u5fc6\u201d\u80fd\u6301\u7eed\u591a\u4e45\uff1f\u6b64\u523b\u7684\u6da8\u843d\u4e0e\u4e00\u79d2\u949f\u540e\u7684\u6da8\u843d\u4e4b\u95f4\u6709\u4f55\u5173\u8054\uff1f</p> <p>\u4e3a\u4e86\u56de\u7b54\u8fd9\u4e9b\u5173\u4e8e\u52a8\u529b\u5b66 (dynamics) \u7684\u95ee\u9898\uff0c\u9700\u8981\u5f15\u5165\u4e00\u4e2a\u5f3a\u5927\u7684\u65b0\u5de5\u5177\u2014\u2014\u65f6\u95f4\u5173\u8054\u51fd\u6570\u3002\u8fd9\u4e9b\u51fd\u6570\u7684\u6027\u8d28\u5e76\u975e\u968f\u610f\uff0c\u5b83\u4eec\u8eab\u4e0a\u6df1\u523b\u5730\u70d9\u5370\u7740\u5fae\u89c2\u4e16\u754c\u6700\u57fa\u672c\u7684\u5bf9\u79f0\u6027\uff0c\u5c24\u5176\u662f\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#31","title":"3.1 \u65f6\u95f4\u5173\u8054\u51fd\u6570\uff1a\uff1a\u8861\u91cf\u7cfb\u7edf\u7684\u201c\u8bb0\u5fc6\u201d","text":""},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_6","title":"\u5b9a\u4e49","text":"<p>\u4e3a\u4e86\u523b\u753b\u6da8\u843d\u7684\u52a8\u529b\u5b66\u7279\u5f81\uff0c\u6211\u4eec\u5f15\u5165\u65f6\u95f4\u5173\u8054\u51fd\u6570\uff1a</p> \\[ C_{ab}(t - t') := \\langle \\phi_a(t) \\phi_b(t') \\rangle \\] <p>\u8fd9\u91cc\u7684\u7cfb\u7efc\u5e73\u5747 \\(\\langle \\ldots \\rangle\\) \u662f\u5728\u70ed\u5e73\u8861\u6001\u4e0b\u8fdb\u884c\u7684\u3002\u5b83\u8861\u91cf\u4e86\u5728 \\(t'\\) \u65f6\u523b\u7684\u6da8\u843d \\(\\phi_b\\) \u4e0e\u5728\u7a0d\u665a\u7684 \\(t\\) \u65f6\u523b\u7684\u6da8\u843d \\(\\phi_a\\) \u4e4b\u95f4\u7684\u7edf\u8ba1\u5173\u8054\u6027\u3002</p> <p>\u7269\u7406\u610f\u4e49\uff1a \u8fd9\u4e2a\u51fd\u6570\u662f\u8861\u91cf\u7cfb\u7edf\u201c\u8bb0\u5fc6\u80fd\u529b\u201d\u7684\u6807\u5c3a\u3002\u5b83\u56de\u7b54\u4e86\u4e00\u4e2a\u6838\u5fc3\u95ee\u9898\uff1a\u201c\u5982\u679c\u6211\u57280\u65f6\u523b\u89c2\u6d4b\u5230\u4e86\u4e00\u4e2a\u503c\u4e3a \\(\\phi_b(0)\\) \u7684\u6da8\u843d\uff0c\u90a3\u4e48\u5728 \\(t\\) \u65f6\u523b\u4e4b\u540e\uff0c\u6211\u671f\u671b\u89c2\u6d4b\u5230\u7684\u6da8\u843d \\(\\phi_a(t)\\) \u7684\u5e73\u5747\u503c\u4f1a\u662f\u591a\u5c11\uff1f\u201d</p> <p>\u5982\u679c \\(t\\) \u5f88\u5c0f\uff0c\u7cfb\u7edf\u201c\u8bb0\u5fc6\u72b9\u65b0\u201d\uff0c\\(C_{ab}(t)\\) \u7684\u503c\u5c31\u53ef\u80fd\u5f88\u5927\u3002</p> <p>\u5982\u679c \\(t\\) \u5f88\u5927\uff0c\u7cfb\u7edf\u65e9\u5df2\u201c\u5fd8\u8bb0\u201d\u4e86\u6700\u521d\u7684\u6da8\u843d\uff0c\u56de\u5f52\u5230\u4e86\u968f\u673a\u7684\u5e73\u8861\u6001\uff0c\u90a3\u4e48 \\(\\phi_a(t)\\) \u548c \\(\\phi_b(0)\\) \u5c06\u53d8\u5f97\u6beb\u4e0d\u76f8\u5173\uff0c\\(C_{ab}(t)\\) \u4f1a\u8d8b\u5411\u4e8e \\(\u27e8\\phi_a\u27e9\u27e8\\phi_b\u27e9 = 0\\)\u3002</p> <p>\u91cd\u8981\u8fde\u63a5\uff1a \u8fd9\u4e2a\u51fd\u6570\u662f\u7b2c2\u8282\u9759\u6001\u5173\u8054\u7684\u81ea\u7136\u63a8\u5e7f\u3002\u5f53\u65f6\u95f4\u5dee\u4e3a\u96f6\u65f6\uff0c\u5b83\u5c31\u9000\u5316\u4e3a\u6211\u4eec\u719f\u6089\u7684\u611f\u53d7\u7387\uff1a</p> \\[ C_{ab}(0) = \\langle \\phi_a(0) \\phi_b(0) \\rangle = \\chi_{ab} \\]"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#stationarity","title":"\u5b9a\u5e38\u6027 (Stationarity)","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5904\u4e8e\u5b9a\u5e38\u6001\uff08\u5e73\u8861\u6001\uff09\u7684\u7cfb\u7edf\uff0c\u5b83\u7684\u7edf\u8ba1\u6027\u8d28\u4e0d\u5e94\u968f\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u6539\u53d8\u3002\u8fd9\u610f\u5473\u7740\u5173\u8054\u51fd\u6570\u53ea\u4f9d\u8d56\u4e8e\u65f6\u95f4\u5dee \\(\\tau = t - t'\\)\uff0c\u800c\u4e0e\u8d77\u59cb\u65f6\u523b \\(0\\) \u7684\u9009\u62e9\u65e0\u5173\u56e0\u6b64\u8fd9\u4e2a\u6027\u8d28\u88ab\u79f0\u4e3a\u5b9a\u5e38\u6027(Stationarity)\u3002\u6211\u4eec\u53ef\u4ee5\u4ee4 \\(t' = 0\\)\uff1a</p> <p>\u7531\u5b9a\u5e38\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u63a8\u5bfc\uff1a $$ C_{ab}(t) = \\langle \\phi_a(t) \\phi_b(0) \\rangle $$</p> <p>\u7531\u4e8e\u7edf\u8ba1\u89c4\u5f8b\u4e0d\u968f\u65f6\u95f4\u5e73\u79fb\u800c\u6539\u53d8\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6574\u4e2a\u7cfb\u7edf\u7684\u65f6\u95f4\u8f74\u5411\u524d\u79fb\u52a8 \\(t\\)\uff1a $$ \\langle \\phi_a(t) \\phi_b(0) \\rangle = \\langle \\phi_a(0) \\phi_b(-t) \\rangle $$ \u800c \\(\\langle \\phi_a(0) \\phi_b(-t) \\rangle\\)\u6309\u7167\u5b9a\u4e49\u5c31\u662f \\(C_ba(-t)\\)\u3002\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u7b2c\u4e00\u4e2a\u91cd\u8981\u7684\u5bf9\u79f0\u5173\u7cfb\uff1a $$ C_{ab}(t) = C_{ba}(-t) $$</p> <p>\u7269\u7406\u610f\u4e49\uff1a \u8fd9\u4e2a\u5173\u7cfb\u544a\u8bc9\u6211\u4eec\uff0c\u6d4b\u91cf \\(b\\) \u4e8b\u4ef6\u53d1\u751f \\(t\\) \u65f6\u95f4\u540e \\(a\\) \u4e8b\u4ef6\u7684\u5173\u8054\uff0c\u4e0e\u6d4b\u91cf \\(a\\) \u4e8b\u4ef6\u53d1\u751f \\(t\\) \u65f6\u95f4\u524d \\(b\\) \u4e8b\u4ef6\u7684\u5173\u8054\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002\u8fd9\u662f\u5e73\u8861\u6001\u7cfb\u7edf\u65f6\u95f4\u5e73\u79fb\u4e0d\u53d8\u6027\u7684\u76f4\u63a5\u4f53\u73b0\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#32","title":"3.2 \u65f6\u95f4\u5bf9\u79f0\u6027\u7684\u70d9\u5370\uff1a\u5fae\u89c2\u53ef\u9006\u6027","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u66f4\u6df1\u523b\u3001\u66f4\u60ca\u4eba\u7684\u5bf9\u79f0\u6027\uff0c\u5b83\u6e90\u4e8e\u4e00\u4e2a\u770b\u4f3c\u77db\u76fe\u7684\u4e8b\u5b9e\uff1a\u6211\u4eec\u751f\u6d3b\u7684\u5b8f\u89c2\u4e16\u754c\u91cc\u201c\u65f6\u95f4\u4e4b\u7bad\u201d\u662f\u5355\u5411\u7684\uff08\u6bd4\u5982\u8986\u6c34\u96be\u6536\uff09\uff0c\u4f46\u652f\u914d\u6240\u6709\u7c92\u5b50\u8fd0\u52a8\u7684\u5fae\u89c2\u7269\u7406\u5b9a\u5f8b\u5374\u662f\u65f6\u95f4\u5bf9\u79f0\u7684\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_7","title":"\u5fae\u89c2\u53ef\u9006\u6027\u539f\u7406","text":"<p>\u5fae\u89c2\u4e16\u754c\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\uff08\u65e0\u8bba\u662f\u725b\u987f\u529b\u5b66\u8fd8\u662f\u54c8\u5bc6\u987f\u529b\u5b66\uff09\u5728\u65f6\u95f4\u53cd\u6f14\u53d8\u6362\uff08\\(t \\rightarrow -t\\)\uff0c\u540c\u65f6\u53cd\u8f6c\u6240\u6709\u7c92\u5b50\u7684\u52a8\u91cf\\(\\vec{p} \\rightarrow -\\vec{p}\\)\uff09\u4e0b\u4fdd\u6301\u5f62\u5f0f\u4e0d\u53d8\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u4f60\u5f55\u4e0b\u4e00\u6bb5\u4e24\u4e2a\u5206\u5b50\u78b0\u649e\u7684\u89c6\u9891\u7136\u540e\u5012\u7740\u64ad\u653e\uff0c\u770b\u5230\u7684\u666f\u8c61\u5b8c\u5168\u7b26\u5408\u7269\u7406\u5b9a\u5f8b\uff0c\u662f\u53ef\u80fd\u53d1\u751f\u7684\u3002\u8fd9\u5c31\u662f\u5fae\u89c2\u53ef\u9006\u6027\u539f\u7406(microscopic reversibility)\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#epsilon_a","title":"\u53d8\u91cf\u7684\u5b87\u79f0 (\\(\\epsilon_a\\))","text":"<p>\u5f53\u5fae\u89c2\u65f6\u95f4\u5012\u6d41\u65f6\uff0c\u7531\u5927\u91cf\u7c92\u5b50\u6784\u6210\u7684\u5b8f\u89c2\u53d8\u91cf \\(\\phi_a\\) \u4e5f\u4f1a\u4ee5\u7279\u5b9a\u7684\u65b9\u5f0f\u53d8\u6362\uff0c\u6709\u7684\u53d8\u91cf\u4e0d\u53d8\uff0c\u6709\u7684\u53d8\u91cf\u4f1a\u53cd\u53f7\u3002\u5176\u53d8\u6362\u6027\u8d28\u7531\u5b87\u79f0 (parity) \\(\\epsilon_a = \\pm 1\\) \u6765\u523b\u753b\uff1a</p> \\[ \\phi_a(t) \\xrightarrow{\\text{Time Reversal}} \\epsilon_a \\phi_a(-t) \\] <p>\u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u4e3a\u5076\u5b87\u79f0\uff08\\(\\epsilon_a = +1\\)\uff09\u7684\u53d8\u91cf\u5305\u62ec\u4f4d\u7f6e\u3001\u5bc6\u5ea6\u3001\u80fd\u91cf\u7b49\u3002\u4e3a\u5947\u5b87\u79f0\uff08\\(\\epsilon_a = -1\\)\uff09\u7684\u53d8\u91cf\u5305\u62ec\u901f\u5ea6\u3001\u52a8\u91cf\u3001\u89d2\u52a8\u91cf\u7b49\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#-onsager-casimir-reciprocal-relations","title":"\u6602\u8428\u683c-\u5361\u897f\u7c73\u5c14\u5012\u6613\u5173\u7cfb (Onsager-Casimir Reciprocal Relations)","text":"<p>\u65e2\u7136\u5fae\u89c2\u52a8\u529b\u5b66\u662f\u65f6\u95f4\u53ef\u9006\u7684\uff0c\u90a3\u4e48\u4e00\u4e2a\u5b8f\u89c2\u5173\u8054\u51fd\u6570\u7684\u7edf\u8ba1\u5e73\u5747\u503c\uff0c\u5e94\u8be5\u548c\u5176\u6240\u6709\u7ec4\u5206\u90fd\u7ecf\u5386\u4e86\u65f6\u95f4\u53cd\u6f14\u540e\u7684\u7edf\u8ba1\u5e73\u5747\u503c\u5b8c\u5168\u76f8\u7b49\uff1a</p> <p>\u65e2\u7136\u5fae\u89c2\u52a8\u529b\u5b66\u662f\u65f6\u95f4\u53ef\u9006\u7684\uff0c\u90a3\u4e48\u4e00\u4e2a\u5b8f\u89c2\u5173\u8054\u51fd\u6570\u7684\u7edf\u8ba1\u5e73\u5747\u503c\uff0c\u5e94\u8be5\u548c\u5176\u6240\u6709\u7ec4\u5206\u90fd\u7ecf\u5386\u4e86\u65f6\u95f4\u53cd\u6f14\u540e\u7684\u7edf\u8ba1\u5e73\u5747\u503c\u5b8c\u5168\u76f8\u7b49\u3002\u636e\u6b64\uff0c\u6211\u4eec\u6709\uff1a</p> \\[ \\langle \\phi_a(t) \\phi_b(0) \\rangle = \\langle (T\\text{-reversed } \\phi_a(t)) (T\\text{-reversed } \\phi_b(0)) \\rangle \\] <p>\u4ee3\u5165\u5b87\u79f0\u7684\u5b9a\u4e49\uff0c\u4e0a\u5f0f\u53d8\u4e3a\uff1a</p> \\[ \\langle \\phi_a(t) \\phi_b(0) \\rangle = \\langle \\epsilon_a \\phi_a(-t) \\epsilon_b \\phi_b(0) \\rangle = \\epsilon_a \\epsilon_b \\langle \\phi_a(-t) \\phi_b(0) \\rangle \\] <p>\u4e8e\u662f\u6211\u4eec\u5f97\u5230</p> \\[ ( C_{ab}(t) = \\epsilon_a \\epsilon_b C_{ab}(-t) \\] <p>\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u65b0\u5173\u7cfb\u4e0e\u4e0a\u4e00\u8282\u7684\u5b9a\u5e38\u6027\u5173\u7cfb \\(C_{ab}(-t) = C_{ba}(t)\\)  \u7ed3\u5408\u8d77\u6765\uff0c\u4fbf\u5f97\u5230\u4e86\u7269\u7406\u5b66\u4e2d\u4e00\u4e2a\u6781\u5176\u91cd\u8981\u7684\u5bf9\u79f0\u6027\u539f\u7406\u2014\u2014\u6602\u8428\u683c-\u5361\u897f\u7c73\u5c14\u5012\u6613\u5173\u7cfb\uff1a</p> \\[ C_{ab}(t) = \\epsilon_a \\epsilon_b C_{ba}(t) \\] <p>\u7269\u7406\u610f\u4e49\uff1a \u8fd9\u4e2a\u5173\u7cfb\u5f0f\u5982\u540c\u4e00\u5ea7\u6865\u6881\uff0c\u5b83\u5c06\u5b8f\u89c2\u5c42\u9762\u4e0d\u53ef\u9006\u7684\u201c\u65f6\u95f4\u4e4b\u7bad\u201d\uff08\u4f53\u73b0\u5728\u5173\u8054\u51fd\u6570 \\(C(t)\\) \u901a\u5e38\u968f\u65f6\u95f4\u8870\u51cf\uff09\u4e0e\u5fae\u89c2\u5c42\u9762\u53ef\u9006\u7684\u65f6\u95f4\u5bf9\u79f0\u6027\uff08\u4f53\u73b0\u5728\u5b87\u79f0 \\(\\epsilon\\) \uff09\u8054\u7cfb\u4e86\u8d77\u6765\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u5373\u4f7f\u6211\u4eec\u65e0\u6cd5\u770b\u5230\u5fae\u89c2\u4e16\u754c\u7684\u7ec6\u8282\uff0c\u5fae\u89c2\u4e16\u754c\u7684\u5bf9\u79f0\u6027\u4e5f\u5fc5\u7136\u4f1a\u4ee5\u8fd9\u79cd\u4e25\u683c\u7684\u65b9\u5f0f\uff0c\u4e3a\u6211\u4eec\u80fd\u5728\u5b8f\u89c2\u4e0a\u6d4b\u91cf\u7684\u52a8\u529b\u5b66\u5173\u8054\u65bd\u52a0\u4e00\u4e2a\u5f3a\u5927\u7684\u3001\u4e0d\u53ef\u8fdd\u80cc\u7684\u7ea6\u675f\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u8ba9\u6211\u4eec\u8003\u8651\u4f4d\u7f6e \\(\\mathbf{r}\\) \uff08\u5b87\u79f0 \\(\\epsilon_{\\mathbf{r}} = +1\\) \uff09\u548c\u901f\u5ea6 \\(\\mathbf{v}\\) \uff08\u5b87\u79f0 \\(\\epsilon_{\\mathbf{v}} = -1\\) \uff09\u7684\u5173\u8054\u3002\u6839\u636e\u5012\u6613\u5173\u7cfb\uff1a</p> \\[ C_{\\mathbf{r}\\mathbf{v}}(t) = (+1)(-1) C_{\\mathbf{v}\\mathbf{r}}(t) = -C_{\\mathbf{v}\\mathbf{r}}(t) \\] \\[ \\langle \\mathbf{r}(t) \\mathbf{v}(0) \\rangle = -\\langle \\mathbf{v}(t) \\mathbf{r}(0) \\rangle \\] <p>\u8fd9\u662f\u4e00\u4e2a\u975e\u5e73\u5eb8\u7684\u7269\u7406\u9884\u8a00\uff1a\u77e5\u9053\u7c92\u5b50\u6b64\u523b\u7684\u901f\u5ea6\uff0c\u53bb\u9884\u6d4b\u5b83\u672a\u6765\u7684\u4f4d\u7f6e\uff0c\u5f97\u5230\u7684\u5173\u8054\u503c\uff1b\u4e0e\u77e5\u9053\u7c92\u5b50\u6b64\u523b\u7684\u4f4d\u7f6e\uff0c\u53bb\u9884\u6d4b\u5b83\u672a\u6765\u7684\u901f\u5ea6\uff0c\u5f97\u5230\u7684\u5173\u8054\u503c\uff0c\u4e24\u8005\u7adf\u662f\u76f8\u53cd\u6570\uff01\u56e0\u4e3a\u901f\u5ea6\u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u4f1a\u53d8\u53f7\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a\u5173\u8054\u7684\u6570\u503c\u5c31\u5fc5\u987b\u662f\u76f8\u53cd\u6570\u3002</p> <p>\u6b63\u7740\u653e\u7684\u201c\u7269\u7406\u8fc7\u7a0b\u7535\u5f71\u201d\u548c\u5012\u7740\u653e\u7684\u201c\u7269\u7406\u8fc7\u7a0b\u7535\u5f71\u201d\uff0c\u5728\u7edf\u8ba1\u4e0a\u662f\u65e0\u6cd5\u533a\u5206\u7684\u3002\u6602\u8428\u683c\u5173\u7cfb \\(\\langle \\mathbf{r}(t) \\mathbf{v}(0) \\rangle = -\\langle \\mathbf{v}(t) \\mathbf{r}(0) \\rangle\\) \u6b63\u662f\u8fd9\u4e2a\u6df1\u523b\u7684\u65f6\u95f4\u5bf9\u79f0\u6027\u5728\u5b8f\u89c2\u7edf\u8ba1\u6570\u636e\u4e0a\u7559\u4e0b\u7684\u4e00\u4e2a\u201c\u6570\u5b66\u6307\u7eb9\u201d\u3002\u5b83\u672c\u8d28\u4e0a\u8bf4\u7684\u662f\uff0c\u7cfb\u7edf\u201c\u5fd8\u8bb0\u201d\u8fc7\u53bb\u7684\u65b9\u5f0f\uff0c\u548c\u7cfb\u7edf\u201c\u8d70\u5411\u201d\u672a\u6765\u7684\u65b9\u5f0f\uff0c\u88ab\u540c\u4e00\u4e2a\u5e95\u5c42\u7684\u3001\u65f6\u95f4\u5bf9\u79f0\u7684\u7269\u7406\u5b66\u6240\u652f\u914d\uff0c\u4f46\u7b26\u53f7\u4f1a\u53d1\u751f\u6539\u53d8\u3002</p> <p>\u88681\uff1a\u5e38\u89c1\u7269\u7406\u91cf\u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u7684\u5b87\u79f0</p> <p>\u4e3a\u4e86\u5c06\u62bd\u8c61\u7684\u5b87\u79f0\u56e0\u5b50 \\(\\epsilon_a\\) \u5177\u4f53\u5316\uff0c\u4e0b\u8868\u5217\u51fa\u4e86\u4e00\u4e9b\u5e38\u89c1\u7269\u7406\u91cf\u5728\u65f6\u95f4\u53cd\u6f14\u53d8\u6362\u4e0b\u7684\u884c\u4e3a\u3002\u8fd9\u5bf9\u4e8e\u5c06\u6602\u8428\u683c\u5173\u7cfb\u5e94\u7528\u4e8e\u5177\u4f53\u7269\u7406\u95ee\u9898\u81f3\u5173\u91cd\u8981\u3002</p> \u7269\u7406\u91cf \u7b26\u53f7 \u65f6\u95f4\u53cd\u6f14\u4e0b\u7684\u884c\u4e3a \\((t \\to -t)\\) \u5b87\u79f0 \\((\\epsilon)\\) \u4f4d\u7f6e \\(\\vec{r}\\) \\(\\vec{r}(-t) = \\vec{r}(t)\\) \\(+1\\) (\u5076) \u901f\u5ea6 \\(\\vec{v}\\) \\(\\vec{v}(-t) = -\\vec{v}(t)\\) \\(-1\\) (\u5947) \u52a8\u91cf \\(\\vec{p}\\) \\(\\vec{p}(-t) = -\\vec{p}(t)\\) \\(-1\\) (\u5947) \u52a0\u901f\u5ea6 \\(\\vec{a}\\) \\(\\vec{a}(-t) = \\vec{a}(t)\\) \\(+1\\) (\u5076) \u529b \\(\\vec{F}\\) \\(\\vec{F}(-t) = \\vec{F}(t)\\) \\(+1\\) (\u5076) \u80fd\u91cf \\(E\\) \\(E(-t) = E(t)\\) \\(+1\\) (\u5076) \u7c92\u5b50\u5bc6\u5ea6 \\(\\rho\\) \\(\\rho(-t) = \\rho(t)\\) \\(+1\\) (\u5076) \u89d2\u52a8\u91cf \\(\\vec{L}\\) \\(\\vec{L}(-t) = -\\vec{L}(t)\\) \\(-1\\) (\u5947) \u7535\u573a \\(\\vec{E}\\) \\(\\vec{E}(-t) = \\vec{E}(t)\\) \\(+1\\) (\u5076) \u78c1\u573a \\(\\vec{B}\\) \\(\\vec{B}(-t) = -\\vec{B}(t)\\) \\(-1\\) (\u5947)"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#4","title":"\uff14\uff0e\u52a8\u6001\u6a21\u62df\u7c97\u7c92\u5316","text":"<p>\u4e0b\u9762\u5c06\u6a21\u62df\u4e00\u4e2a\u7531\u3000\\(N\\)\u3000\u4e2a\u76f8\u4e92\u4f5c\u7528\u7684\u3001\u5904\u5728\u8fc7\u963b\u5c3c\u6781\u9650\u4e0b\u7684\u5e03\u6717\u7c92\u5b50\u7ec4\u6210\u7684\u7cfb\u7edf\u3002\u901a\u8fc7\u201c\u6b27\u62c9-\u4e38\u5c71\u6cd5\u201d (Euler-Maruyama method)\u3000\u8fdb\u884c\u6570\u503c\u79bb\u6563\u5316\u3002</p> <p>\u5728\u6bcf\u4e2a\u5fae\u5c0f\u7684\u65f6\u95f4\u6b65 \\(dt\\) \u91cc\uff0c\u4e00\u4e2a\u7c92\u5b50\u7684\u79fb\u52a8\u90fd\u7531\u4e24\u90e8\u5206\u53e0\u52a0\u800c\u6210\uff1a</p> <p>\u786e\u5b9a\u6027\u7684\u6f02\u79fb (Deterministic Drift): \u5b83\u6765\u81ea\u4e8e\u5468\u56f4\u6240\u6709\u5176\u4ed6\u7c92\u5b50\u5bf9\u5b83\u7684\u63a8\u529b\u3002\u6211\u4eec\u5c06\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u6392\u65a5\u52bf\u6765\u8ba1\u7b97\u8fd9\u4e2a\u529b\uff0c\u9632\u6b62\u7c92\u5b50\u4eec\u4e92\u76f8\u201c\u7a7f\u8d8a\u201d\u3002</p> <p>\u968f\u673a\u7684\u8e22\u52a8 (Stochastic Kick):\u3000\u5b83\u6a21\u62df\u4e86\u6765\u81ea\u6052\u6e29\u70ed\u5e93\u7684\u3001\u6c38\u4e0d\u505c\u6b47\u7684\u968f\u673a\u78b0\u649e\u3002\u6211\u4eec\u5c06\u7528\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03\u7684\u968f\u673a\u6570\u6765\u751f\u6210\u8fd9\u4e2a\u8e22\u52a8\uff0c\u5176\u5f3a\u5ea6\u7531\u6211\u4eec\u8bbe\u5b9a\u7684\u6e29\u5ea6 T \u51b3\u5b9a\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_8","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>\"\"\"\nPython script to simulate interacting Brownian particles (Langevin dynamics)\nand visualize their microscopic motion alongside the coarse-grained macroscopic density field.\nThe final output is a GIF animation.\n\"\"\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\nfrom scipy.ndimage import gaussian_filter\n\n# --- 1. Simulation Parameters ---\n\n# System parameters\nN = 100          # Number of particles\nL = 20.0         # Size of the simulation box (2D)\nT = 1.0          # Temperature (we set Boltzmann constant k_B=1)\nmu = 1.0         # Mobility\nD = mu * T       # Diffusion coefficient, from Einstein relation\n\n# Simulation parameters\ndt = 0.02        # Timestep length\nn_steps = 1000   # Total simulation steps\nsave_interval = 10 # Save trajectory every 'save_interval' steps for animation\n\n# Interaction parameters (Weeks-Chandler-Andersen potential, a purely repulsive force)\nsigma = 1.0      # Characteristic size of a particle\nepsilon = 1.0    # Interaction strength\nrcut = sigma * (2**(1/6)) # Cutoff distance for the force\n\n# Visualization parameters\ngrid_bins = 50   # Number of bins for the density grid\nblur_sigma = 1.5 # Sigma for the Gaussian filter to smooth the density field\n\n\n# --- 2. Core Functions ---\n\ndef calculate_forces(positions, box_size, eps, sig, r_cut):\n    \"\"\"\n    Calculates the total force on each particle using the WCA potential\n    and applies periodic boundary conditions (minimum image convention).\n    \"\"\"\n    forces = np.zeros_like(positions)\n    r_cut2 = r_cut**2\n\n    for i in range(N):\n        for j in range(i + 1, N):\n            # Displacement vector between particle i and j\n            dr = positions[i] - positions[j]\n\n            # Apply periodic boundary conditions\n            dr = dr - box_size * np.round(dr / box_size)\n\n            r_sq = np.sum(dr**2)\n\n            # Calculate force only if particles are closer than the cutoff distance\n            if r_sq &lt; r_cut2:\n                r_sq_inv = 1.0 / r_sq\n                sig_r6 = (sig**2 * r_sq_inv)**3\n\n                # Force magnitude from the derivative of the WCA potential\n                force_mag = 48 * eps * r_sq_inv * (sig_r6**2 - 0.5 * sig_r6)\n                force_vec = force_mag * dr\n\n                # Apply force according to Newton's third law\n                forces[i] += force_vec\n                forces[j] -= force_vec\n\n    return forces\n\n# --- 3. Initialization ---\n\n# Set a random seed for reproducibility\nnp.random.seed(42)\n\n# Initialize particle positions randomly within the box [0, L] x [0, L]\npos = np.random.rand(N, 2) * L\n\n# --- 4. Run Simulation &amp; Store Trajectory ---\n\nprint(\"Running simulation to generate trajectory...\")\n# Store the trajectory for the animation\n# We pre-calculate the trajectory to make the animation rendering smoother\ntrajectory = [pos.copy()]\nnum_frames = n_steps // save_interval\n\nfor step in range(n_steps):\n    # Calculate deterministic forces\n    F = calculate_forces(pos, L, epsilon, sigma, rcut)\n\n    # Calculate drift and random kick terms\n    drift = mu * F * dt\n    random_kick = np.sqrt(2 * D * dt) * np.random.randn(N, 2)\n\n    # Update particle positions\n    pos += drift + random_kick\n\n    # Enforce periodic boundary conditions on positions\n    pos = pos % L\n\n    # Store the current frame in the trajectory\n    if (step + 1) % save_interval == 0:\n        trajectory.append(pos.copy())\n\ntrajectory = np.array(trajectory)\nprint(f\"Simulation finished. Trajectory shape: {trajectory.shape}\")\n\n\n# --- 5. Animation Setup ---\n\nprint(\"Setting up animation...\")\n# Create the figure and subplots\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 6))\n\n# Setup for the left subplot (Microscopic View)\nax1.set_title('Microscopic View: Particle Dynamics')\nax1.set_xlabel('X position')\nax1.set_ylabel('Y position')\nax1.set_xlim(0, L)\nax1.set_ylim(0, L)\nax1.set_aspect('equal', adjustable='box')\nscatter = ax1.scatter(trajectory[0, :, 0], trajectory[0, :, 1], s=50, c='royalblue')\n\n# Setup for the right subplot (Macroscopic View)\nax2.set_title('Macroscopic View: Coarse-Grained Density')\nax2.set_xlabel('X position')\nax2.set_ylabel('Y position')\nax2.set_aspect('equal', adjustable='box')\n\n# Create the grid for the heatmap\ngrid_x = np.linspace(0, L, grid_bins)\ngrid_y = np.linspace(0, L, grid_bins)\n\n# Initial density field\nhist, _, _ = np.histogram2d(\n    trajectory[0, :, 0], trajectory[0, :, 1],\n    bins=[grid_x, grid_y]\n)\ndensity_field = gaussian_filter(hist.T, sigma=blur_sigma)\nheatmap = ax2.imshow(density_field, origin='lower', extent=[0, L, 0, L], cmap='viridis')\nfig.colorbar(heatmap, ax=ax2, label='Particle Density')\n\n# Add a time display\ntime_text = ax1.text(0.05, 0.95, '', transform=ax1.transAxes, ha='left', va='top',\n                     bbox=dict(boxstyle='round,pad=0.5', fc='wheat', alpha=0.7))\n\n\n# --- 6. Animation Update Function ---\n\ndef update(frame):\n    \"\"\"\n    This function is called for each frame of the animation.\n    \"\"\"\n    # Get current positions from the pre-computed trajectory\n    current_pos = trajectory[frame]\n\n    # --- Update Microscopic View ---\n    scatter.set_offsets(current_pos)\n\n    # --- Update Macroscopic View ---\n    # 1. Coarse-graining: create a histogram\n    hist, _, _ = np.histogram2d(\n        current_pos[:, 0], current_pos[:, 1],\n        bins=[grid_x, grid_y]\n    )\n    # 2. Smoothing: apply Gaussian filter\n    density_field = gaussian_filter(hist.T, sigma=blur_sigma)\n\n    # 3. Update heatmap data\n    heatmap.set_data(density_field)\n\n    # Update the color limits to match the new data range for better contrast\n    heatmap.set_clim(vmin=density_field.min(), vmax=density_field.max())\n\n    # Update time text\n    time_text.set_text(f'Step: {frame * save_interval}')\n\n    return scatter, heatmap, time_text\n\n\n# --- 7. Create and Save Animation ---\n\nprint(\"Creating and saving animation... This may take a few minutes.\")\n# Create the animation object\n\nanim = FuncAnimation(\n    fig,\n    update,\n    frames=num_frames,\n    interval=50, # milliseconds between frames\n    blit=True\n)\n\n# Save the animation as a GIF\ntry:\n    anim.save('particle_dynamics.gif', writer='imagemagick', fps=15)\n    print(\"\\nAnimation successfully saved as 'particle_dynamics.gif'!\")\nexcept Exception as e:\n    print(f\"\\nError saving GIF: {e}\")\n</code></pre> <p>\u5728\u4e00\u4e2a\u6052\u6e29\u70ed\u5e93\u4e2d\uff0c\\(N\\) \u4e2a\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u7684\u8fc7\u963b\u5c3c\u6717\u4e4b\u4e07\u52a8\u529b\u5b66 (overdamped Langevin dynamics)\u3002\u6bcf\u4e2a\u7c92\u5b50\u7684\u65e0\u89c4\u5219\u8fd0\u52a8\u662f\u4e24\u79cd\u529b\u7684\u53e0\u52a0\uff1a\u4e00\u662f\u6765\u81ea\u5468\u56f4\u6eb6\u5242\u5206\u5b50\u7684\u6c38\u6052\u968f\u673a\u529b (stochastic force)\uff0c\u5bfc\u81f4\u4e86\u5e03\u6717\u8fd0\u52a8\uff1b\u4e8c\u662f\u6765\u81ea\u5176\u4ed6\u7c92\u5b50\u7684\u786e\u5b9a\u6027\u6392\u65a5\u529b (deterministic force)\uff0c\u8fd9\u963b\u6b62\u4e86\u7c92\u5b50\u95f4\u7684\u91cd\u53e0\u5e76\u4ea7\u751f\u4e86\u6db2\u4f53\u822c\u7684\u7ed3\u6784\u3002\u6574\u4e2a\u7cfb\u7edf\u6b63\u5728\u70ed\u5e73\u8861\u6001\u9644\u8fd1\u4e0d\u65ad\u5730\u63a2\u7d22\u5176\u6240\u6709\u53ef\u80fd\u7684\u5fae\u89c2\u6784\u578b\u3002</p> <p>\u53f3\u4fa7\u7684\u201c\u5b8f\u89c2\u89c6\u89d2\u201d\u9762\u677f \u662f\u5de6\u4fa7\u5fae\u89c2\u4e16\u754c\u7684\u7c97\u7c92\u5316 (coarse-graining) \u7ed3\u679c\uff0c\u5b83\u5c55\u793a\u4e86\u6f14\u5316\u4e2d\u7684\u8fde\u7eed\u5bc6\u5ea6\u573a \\(\\rho(\\mathbf{x}, t)\\)\u3002\u56fe\u4e0a\u4e0d\u65ad\u51fa\u73b0\u3001\u53d8\u5316\u548c\u6d88\u5931\u7684\u4eae\u9ec4\u8272\u201c\u70ed\u70b9\u201d\uff0c\u6b63\u662f\u7406\u8bba\u4e2d\u63cf\u8ff0\u7684\u70ed\u529b\u5b66\u5bc6\u5ea6\u6da8\u843d (thermal density fluctuations)\u3002\u8fd9\u4e9b\u6da8\u843d\u662f\u7cfb\u7edf\u56f4\u7ed5\u5176\u5747\u5300\u7684\u5e73\u5747\u5bc6\u5ea6\uff08\u5373\u5e73\u8861\u6001\uff09\u53d1\u751f\u7684\u3001\u81ea\u53d1\u7684\u3001\u6682\u65f6\u7684\u5c40\u90e8\u5bc6\u5ea6\u504f\u79bb\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_9","title":"\u7ed3\u8bba\uff1a\u7c97\u7c92\u5316\u4e0e\u91cd\u6574\u5316\u7fa4","text":"<p>\u8fd9\u8282\u8bfe\u4ece\u63cf\u8ff0 \\(N\\) \u4e2a\u76f8\u4e92\u4f5c\u7528\u5e03\u6717\u7c92\u5b50\u7684\u5177\u4f53\u6717\u4e4b\u4e07\u6a21\u578b\u51fa\u53d1\uff0c\u901a\u8fc7\u7c97\u7c92\u5316\u65b9\u6cd5\uff0c\u5c06\u5176\u6f14\u5316\u4e3a\u4e00\u4e2a\u7531\u81ea\u7531\u80fd\u6cdb\u51fd\u4e3b\u5bfc\u7684\u8fde\u7eed\u573a\u8bba\u3002\u968f\u540e\uff0c\u6211\u4eec\u4ece\u4e2d\u63d0\u70bc\u51fa\u6838\u5fc3\u539f\u7406\uff0c\u6784\u5efa\u4e86\u4e00\u4e2a\u57fa\u4e8e\u71b5\u7684\u3001\u9002\u7528\u4e8e\u4efb\u4f55\u8fd1\u5e73\u8861\u7cfb\u7edf\u7684\u666e\u9002\u6027\u6da8\u843d\u7406\u8bba\u3002\u6700\u540e\uff0c\u6211\u4eec\u5229\u7528\u65f6\u95f4\u5173\u8054\u51fd\u6570\u8fd9\u4e00\u5de5\u5177\uff0c\u5206\u6790\u4e86\u8fd9\u4e9b\u6da8\u843d\u7684\u52a8\u529b\u5b66\u884c\u4e3a\uff0c\u5e76\u63ed\u793a\u4e86\u5b83\u4eec\u5982\u4f55\u53d7\u5230\u5fae\u89c2\u4e16\u754c\u57fa\u672c\u5bf9\u79f0\u6027\uff08\u5982\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\uff09\u7684\u6df1\u523b\u5236\u7ea6\u3002</p> <p>\u672c\u8bb2\u6240\u5efa\u7acb\u7684\u7406\u8bba\u6846\u67b6\u662f\u73b0\u4ee3\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u57fa\u77f3\u4e4b\u4e00\u3002\u5b83\u6e05\u6670\u5730\u5c55\u793a\u4e86\u5b8f\u89c2\u4e16\u754c\u4e2d\u4e0d\u53ef\u9006\u7684\u5f1b\u8c6b\u8fc7\u7a0b\u548c\u6709\u8272\uff08\u975e\u767d\u566a\u58f0\uff09\u7684\u6da8\u843d\uff0c\u662f\u5982\u4f55\u4ece\u65f6\u95f4\u5bf9\u79f0\u7684\u5fae\u89c2\u52a8\u529b\u5b66\u5b9a\u5f8b\u4e2d\u6d8c\u73b0\u51fa\u6765\u7684\u3002</p> <p>\u521d\u5b66\u8005\u53ef\u80fd\u4f1a\u5c06\u7c97\u7c92\u5316\uff08Coarse-Graining\uff09 \u4e0e\u7edf\u8ba1\u7269\u7406\u4e00\u4e2a\u91cd\u8981\u7684\u7406\u8bba \u91cd\u6574\u5316\u7fa4\uff08Renormalization Group, RG\uff09 \u76f8\u8054\u7cfb\u3002\u8fd9\u4e24\u8005\u5728\u601d\u60f3\u4e0a\u6709\u7740\u975e\u5e38\u7d27\u5bc6\u7684\u8054\u7cfb\uff0c\u4f46\u4e00\u4e2a\u662f\u65b9\u6cd5\u4e00\u4e2a\u662f\u7406\u8bba\u6846\u67b6\u3002</p> <p>\u672c\u8d28\u4e0a\uff0c\u5b83\u4eec\u90fd\u9075\u5faa\u7740\u4e00\u4e2a\u6838\u5fc3\u601d\u60f3\uff1a\u901a\u8fc7\u7cfb\u7edf\u5730\u5ffd\u7565\uff08\u6216\u79ef\u5206\u6389\uff09\u5c0f\u5c3a\u5ea6\uff08\u9ad8\u80fd\u91cf\uff09\u7684\u81ea\u7531\u5ea6\uff0c\u6765\u5f97\u5230\u4e00\u4e2a\u53ea\u63cf\u8ff0\u5927\u5c3a\u5ea6\uff08\u4f4e\u80fd\u91cf\uff09\u7269\u7406\u884c\u4e3a\u7684\u6709\u6548\u7406\u8bba\u3002</p>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_10","title":"\u8054\u7cfb\uff1a\u5171\u540c\u7684\u54f2\u5b66\u2014\u2014\u5c3a\u5ea6\u5206\u79bb","text":"<ol> <li> <p>\u6d88\u9664\u5fae\u89c2\u7ec6\u8282\uff1a\u4e24\u8005\u90fd\u65e8\u5728\u4ece\u4e00\u4e2a\u590d\u6742\u7684\u3001\u5305\u542b\u6240\u6709\u5fae\u89c2\u7ec6\u8282\u7684\u7406\u8bba\u51fa\u53d1\uff0c\u63a8\u5bfc\u51fa\u4e00\u4e2a\u66f4\u7b80\u5355\u3001\u53ea\u63cf\u8ff0\u5b8f\u89c2\u6216\u957f\u6ce2\u884c\u4e3a\u7684\u7406\u8bba\u3002\u201c\u7c97\u7c92\u5316\u201d\u5c31\u662f\u5c06\u5927\u91cf\u5206\u7acb\u7684\u7c92\u5b50\u5750\u6807 \\(\\mathbf{x}_i\\) \u66ff\u6362\u4e3a\u5e73\u6ed1\u7684\u8fde\u7eed\u5bc6\u5ea6\u573a \\(\\rho(\\mathbf{x})\\)\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u201c\u5fd8\u8bb0\u201d\u4e86\u6bcf\u4e2a\u7c92\u5b50\u7684\u8eab\u4efd\u548c\u7cbe\u786e\u4f4d\u7f6e\u3002\u91cd\u6574\u5316\u7fa4\u5728\u52a8\u91cf\u7a7a\u95f4\u4e2d\u505a\u7684\u4e5f\u662f\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff1a\u5b83\u4f1a\u79ef\u5206\u6389\uff08\u5e73\u5747\u6389\uff09\u9ad8\u52a8\u91cf\uff08\u77ed\u6ce2\u957f\uff09\u7684\u6da8\u843d\u6a21\u5f0f\u3002</p> </li> <li> <p>\u6709\u6548\u7406\u8bba\u7684\u4ea7\u751f\uff1a\u7ecf\u8fc7\u64cd\u4f5c\u540e\uff0c\u5f97\u5230\u7684\u90fd\u662f\u4e00\u4e2a\u201c\u6709\u6548\u7406\u8bba\u201d\u3002\u5728\u7c97\u7c92\u5316\u4e2d\uff0c\u4f60\u5f97\u5230\u4e86\u4e00\u4e2a\u5173\u4e8e\u5bc6\u5ea6\u573a \\(\\rho\\) \u7684\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\uff0c\u5176\u4e2d\u7684\u53c2\u6570\uff08\u5982\u6269\u6563\u7cfb\u6570\u3001\u8fc1\u79fb\u7387\uff09\u4ee5\u53ca\u81ea\u7531\u80fd\u6cdb\u51fd \\(F[\\rho]\\) \u7684\u5f62\u5f0f\uff0c\u90fd\u662f\u4ece\u5e95\u5c42\u7c92\u5b50\u76f8\u4e92\u4f5c\u7528\u4e2d\u201c\u6d8c\u73b0\u201d\u51fa\u6765\u7684\u3002\u5728\u91cd\u6574\u5316\u7fa4\u4e2d\uff0c\u6bcf\u4e00\u6b65\u53d8\u6362\u540e\uff0c\u4e5f\u4f1a\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u54c8\u5bc6\u987f\u91cf\uff08\u6216\u4f5c\u7528\u91cf\uff09\uff0c\u5b83\u7684\u8026\u5408\u5e38\u6570\u4f1a\u53d1\u751f\u6539\u53d8\uff08\u5373\u6240\u8c13\u7684\u201c\u91cd\u6574\u5316\u201d\uff09\uff0c\u8fd9\u4e2a\u65b0\u7684\u54c8\u5bc6\u987f\u91cf\u5c31\u662f\u63cf\u8ff0\u4e0b\u4e00\u4e2a\u66f4\u5927\u5c3a\u5ea6\u7684\u6709\u6548\u7406\u8bba\u3002</p> </li> </ol>"},{"location":"zh/notes/23.%20%E4%BB%8E%E7%B2%97%E7%B2%92%E5%8C%96%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA%E6%B6%A8%E8%90%BD%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_11","title":"\u533a\u522b\uff1a\u76ee\u6807\u4e0e\u65b9\u6cd5\u7684\u4e0d\u540c","text":"\u7279\u5f81 \u7c97\u7c92\u5316 (Coarse-Graining) \u91cd\u6574\u5316\u7fa4 (Renormalization Group) \u4e3b\u8981\u76ee\u6807 \u4ece\u4e00\u4e2a\u5177\u4f53\u7684\u5fae\u89c2\u6a21\u578b\uff08\u5982\u6717\u4e4b\u4e07\u65b9\u7a0b\uff09\u63a8\u5bfc\u51fa\u4e00\u4e2a\u5b8f\u89c2\u52a8\u529b\u5b66\u65b9\u7a0b\uff08\u5982\u5173\u4e8e\u5bc6\u5ea6\u7684SPDE\uff09\u3002\u91cd\u70b9\u5728\u4e8e\u8fde\u63a5\u5fae\u89c2\u4e0e\u5b8f\u89c2\u3002 \u7814\u7a76\u7cfb\u7edf\u5728\u4e0d\u540c\u5c3a\u5ea6\u4e0b\u7684\u884c\u4e3a\uff0c\u7279\u522b\u662f\u5bfb\u627e\u7269\u7406\u91cf\u5982\u4f55\u968f\u89c2\u6d4b\u5c3a\u5ea6\u53d8\u5316\u7684\u89c4\u5f8b\uff08\u6807\u5ea6\u5f8b\uff09\uff0c\u4ee5\u53ca\u5bfb\u627e\u7406\u8bba\u7684\u4e0d\u52a8\u70b9\uff08\u901a\u5e38\u5bf9\u5e94\u76f8\u53d8\u70b9\uff09\u3002 \u64cd\u4f5c\u65b9\u5f0f \u901a\u5e38\u662f\u4e00\u6b21\u6027\u7684\u3001\u56fa\u5b9a\u7684\u7a7a\u95f4\u6216\u65f6\u95f4\u5e73\u5747\u3002\u6bd4\u5982\uff0c\u628a\u76d2\u5b50\u5212\u5206\u6210 \\(10 \\times 10\\) \u7684\u7f51\u683c\uff0c\u7136\u540e\u5c31\u4e0d\u518d\u6539\u53d8\u8fd9\u4e2a\u7f51\u683c\u5927\u5c0f\u3002 \u4e00\u4e2a\u8fed\u4ee3\u548c\u52a8\u6001\u7684\u8fc7\u7a0b\u3002\u5b83\u5305\u542b\u4e24\u4e2a\u5173\u952e\u6b65\u9aa4\uff1a1. \u7c97\u7c92\u5316\uff08\u79ef\u5206\u6389\u9ad8\u52a8\u91cf\u6a21\u5f0f\uff09\uff1b2. \u5c3a\u5ea6\u91cd\u6807\uff08\u5c06\u7cfb\u7edf\u201c\u653e\u5927\u201d\u56de\u539f\u6765\u7684\u5927\u5c0f\u4ee5\u4fbf\u6bd4\u8f83\uff09\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u53cd\u590d\u8fdb\u884c\uff0c\u5f62\u6210\u4e00\u4e2a\u201c\u6d41\u201d\uff08RG flow\uff09\u3002 \u6838\u5fc3\u95ee\u9898 \u201c\u8fd9\u4e2a\u591a\u7c92\u5b50\u7cfb\u7edf\u7684\u5b8f\u89c2\u884c\u4e3a\u662f\u4ec0\u4e48\u6837\u7684\uff1f\u201d \u201c\u5f53\u7cfb\u7edf\u63a5\u8fd1\u4e34\u754c\u70b9\uff08\u76f8\u53d8\u70b9\uff09\u65f6\uff0c\u5b83\u7684\u7269\u7406\u6027\u8d28\uff08\u5982\u6bd4\u70ed\u3001\u78c1\u5316\u7387\uff09\u662f\u5982\u4f55\u968f\u6e29\u5ea6\u53d1\u6563\u7684\uff1f\u8fd9\u79cd\u53d1\u6563\u884c\u4e3a\u80cc\u540e\u6709\u4ec0\u4e48\u666e\u9002\u7684\u89c4\u5f8b\uff1f\u201d \u5e94\u7528\u573a\u666f \u8f6f\u7269\u8d28\u7269\u7406\u3001\u6d41\u4f53\u529b\u5b66\u3001\u5316\u5b66\u52a8\u529b\u5b66\u7b49\uff0c\u7528\u4e8e\u63a8\u5bfc\u5b8f\u89c2\u8fde\u7eed\u4ecb\u8d28\u6a21\u578b\u3002 \u4e34\u754c\u73b0\u8c61\uff08\u76f8\u53d8\u7406\u8bba\uff09\u3001\u91cf\u5b50\u573a\u8bba\u3001\u9ad8\u80fd\u7269\u7406\u3002RG\u662f\u7406\u89e3\u666e\u9002\u6027\uff08Universality\uff09\u2014\u2014\u5373\u4e0d\u540c\u5fae\u89c2\u7cfb\u7edf\u5728\u4e34\u754c\u70b9\u9644\u8fd1\u8868\u73b0\u51fa\u76f8\u540c\u884c\u4e3a\u2014\u2014\u7684\u5173\u952e\u5de5\u5177\u3002 <p>\u7efc\u4e0a\uff0c\u7c97\u7c92\u5316 \u5c31\u50cf\u662f\u7528\u4e00\u53f0\u56fa\u5b9a\u5206\u8fa8\u7387\u7684\u76f8\u673a\u53bb\u62cd\u6444\u4e00\u5f20\u975e\u5e38\u9ad8\u6e05\u7684\u753b\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u5206\u8fa8\u7387\u8f83\u4f4e\u4f46\u4f9d\u7136\u80fd\u770b\u6e05\u8f6e\u5ed3\u7684\u56fe\u50cf\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ea\u505a\u4e86\u4e00\u6b21\u3002</p> <p>\u91cd\u6574\u5316\u7fa4 \u5c31\u50cf\u7528\u4e00\u4e2a\u53d8\u7126\u955c\u5934\u3002\u5148\u79bb\u5f97\u5f88\u8fdc\u62cd\u4e00\u5f20\uff08\u7c97\u7c92\u5316\uff09\uff0c\u7136\u540e\u5411\u524d\u8d70\u4e00\u6b65\u5e76\u8c03\u6574\u7126\u8ddd\uff0c\u4f7f\u5f97\u7167\u7247\u91cc\u7684\u7269\u4f53\u770b\u8d77\u6765\u548c\u7b2c\u4e00\u5f20\u4e00\u6837\u5927\uff08\u5c3a\u5ea6\u91cd\u6807\uff09\u3002\u7136\u540e\u518d\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff1a\u518d\u79bb\u8fdc\u4e00\u70b9\u62cd\uff0c\u518d\u8d70\u8fd1\u5e76\u53d8\u7126... \u901a\u8fc7\u89c2\u5bdf\u5728\u53cd\u590d\u201c\u53d8\u7126-\u8d70\u8fd1\u201d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u56fe\u50cf\u7684\u54ea\u4e9b\u7279\u5f81\u4fdd\u6301\u4e0d\u53d8\uff0c\u54ea\u4e9b\u7279\u5f81\u53d8\u5f97\u6a21\u7cca\u6216\u9510\u5229\uff0c\u5c31\u80fd\u7406\u89e3\u8fd9\u5e45\u753b\u7684\u5185\u5728\u7ed3\u6784\u548c\u5c3a\u5ea6\u5bf9\u79f0\u6027\u3002</p> <p>\u7c97\u7c92\u5316\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5177\u4f53\u7684\u6570\u5b66\u6b65\u9aa4\uff0c\u7528\u6765\u4ece\u5df2\u77e5\u7684\u7c92\u5b50\u52a8\u529b\u5b66\u63a8\u5bfc\u573a\u8bba\u65b9\u7a0b\u3002\u800c\u91cd\u6574\u5316\u7fa4\u5219\u662f\u4e00\u4e2a\u66f4\u62bd\u8c61\u3001\u66f4\u5f3a\u5927\u7684\u7406\u8bba\u6846\u67b6\uff0c\u5b83\u672c\u8eab\u5c31\u5305\u542b\u201c\u7c97\u7c92\u5316\u201d\u8fd9\u4e00\u601d\u60f3\u4f5c\u4e3a\u5176\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u4e00\uff0c\u4f46\u5176\u6700\u7ec8\u76ee\u7684\u662f\u7814\u7a76\u7cfb\u7edf\u5728\u8de8\u8d8a\u591a\u4e2a\u5c3a\u5ea6\u65f6\u7684\u5bf9\u79f0\u6027\u548c\u666e\u9002\u89c4\u5f8b\uff0c\u5c24\u5176\u662f\u5728\u76f8\u53d8\u70b9\u9644\u8fd1\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/","title":"\u5f15\u8a00","text":"<p>\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e00\u5957\u5f3a\u5927\u7684\u7406\u8bba\u5de5\u5177\u6765\u7406\u89e3\u968f\u673a\u8fc7\u7a0b\u3002\u6211\u4eec\u4ece\u7b2c17\u8bb2\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u51fa\u53d1\uff0c\u5b83\u4ece\u5fae\u89c2\u89c6\u89d2\u63cf\u8ff0\u4e86\u5355\u4e2a\u7c92\u5b50\u5177\u4f53\u7684\u3001\u5608\u6742\u7684\u8fd0\u52a8\u8f68\u8ff9\u3002\u63a5\u7740\uff0c\u6211\u4eec\u8f6c\u5411\u4e86\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u548c\u8def\u5f84\u79ef\u5206\uff0c\u4ece\u5b8f\u89c2\u7edf\u8ba1\u7684\u89d2\u5ea6\u63cf\u7ed8\u4e86\u6982\u7387\u7684\u6f14\u5316\u3002</p> <p>\u800c\u5728\u4e0a\u4e00\u8bb2\uff08\u7b2c23\u8bb2\uff09\uff0c\u8bfe\u7a0b\u5230\u8fbe\u4e86\u4e00\u4e2a\u5173\u952e\u7684\u8f6c\u6298\uff0c\u63a2\u8ba8\u4e86\u4e24\u79cd\u6784\u5efa\u5b8f\u89c2\u7406\u8bba\u7684\u5f3a\u5927\u601d\u8def\uff1a</p> <ul> <li> <p>\u201c\u81ea\u4e0b\u800c\u4e0a\u201d\uff08Bottom-Up\uff09\uff1a\u901a\u8fc7\u7c97\u7c92\u5316\uff0c\u4ece\u5df2\u77e5\u7684\u5fae\u89c2\u7c92\u5b50\u52a8\u529b\u5b66\u89c4\u5219\uff08\u5982\u7c92\u5b50\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u52bf\uff09\u51fa\u53d1\uff0c\u4e00\u6b65\u6b65\u63a8\u5bfc\u51fa\u63cf\u8ff0\u96c6\u4f53\u884c\u4e3a\u7684\u8fde\u7eed\u573a\u8bba\u3002\u8fd9\u79cd\u65b9\u6cd5\u7269\u7406\u56fe\u50cf\u6e05\u6670\uff0c\u4f46\u4f9d\u8d56\u4e8e\u6211\u4eec\u5bf9\u5fae\u89c2\u7ec6\u8282\u7684\u4e86\u89e3\u3002</p> </li> <li> <p>\u201c\u81ea\u4e0a\u800c\u4e0b\u201d\uff08Top-Down\uff09\uff1a\u76f4\u63a5\u4ece\u5b8f\u89c2\u5c42\u9762\u5165\u624b\uff0c\u5047\u8bbe\u6211\u4eec\u5bf9\u5fae\u89c2\u7ec6\u8282\u4e00\u65e0\u6240\u77e5\uff0c\u8f6c\u800c\u5229\u7528\u70ed\u529b\u5b66\u548c\u5bf9\u79f0\u6027\u7b49\u6700\u57fa\u672c\u7684\u7269\u7406\u539f\u7406\uff0c\u6765\u6784\u5efa\u4e00\u4e2a\u5173\u4e8e\u6da8\u843d\u7684\u666e\u9002\u7406\u8bba\u3002</p> </li> </ul> <p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u7684\u8ba8\u8bba\u5927\u591a\u96c6\u4e2d\u5728\u7531\u5355\u4e2a\u53d8\u91cf\u63cf\u8ff0\u7684\u7cfb\u7edf\u4e0a\uff08\u4f8b\u5982\u5355\u4e2a\u5e03\u6717\u7c92\u5b50\u7684\u4f4d\u7f6e\uff09\u3002\u7136\u800c\uff0c\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u7269\u7406\u7cfb\u7edf\uff0c\u4ece\u5316\u5b66\u53cd\u5e94\u7f51\u7edc\u5230\u751f\u7269\u7ec6\u80de\uff0c\u518d\u5230\u51dd\u805a\u6001\u7269\u8d28\uff0c\u5176\u72b6\u6001\u901a\u5e38\u9700\u8981\u7531\u591a\u4e2a\u76f8\u4e92\u8026\u5408\u7684\u5b8f\u89c2\u53d8\u91cf\uff08\u6211\u4eec\u8bb0\u4e3a \\(\\phi_a\\)\uff09\u6765\u5171\u540c\u63cf\u8ff0\u3002\u8fd9\u5c31\u5f15\u51fa\u4e86\u672c\u8bb2\u8981\u89e3\u51b3\u7684\u6838\u5fc3\u95ee\u9898\uff1a</p> <ul> <li>\u5f53\u4e00\u4e2a\u7cfb\u7edf\u63a5\u8fd1\u4f46\u5c1a\u672a\u5b8c\u5168\u8fbe\u5230\u70ed\u529b\u5b66\u5e73\u8861\u65f6\uff0c\u6211\u4eec\u5982\u4f55\u63cf\u8ff0\u8fd9\u4e9b\u8026\u5408\u7684\u5b8f\u89c2\u53d8\u91cf \\(\\phi_a\\) \u7684\u6da8\u843d\u52a8\u529b\u5b66\uff1f</li> <li>\u662f\u5426\u5b58\u5728\u666e\u9002\u7684\u7269\u7406\u5b9a\u5f8b\uff0c\u80fd\u591f\u4e0d\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u5177\u4f53\u7684\u3001\u590d\u6742\u7684\u5fae\u89c2\u7ec6\u8282\uff0c\u6765\u652f\u914d\u8fd9\u79cd\u8fd1\u5e73\u8861\u6001\u7684\u884c\u4e3a\uff1f</li> </ul> <p>\u4e3a\u4e86\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff0cErwin Frey \u6559\u6388\u5c06\u4ecb\u7ecd\u4e24\u4e2a\u5f3a\u5927\u7684\u7406\u8bba\u6846\u67b6\uff0c\u8fd9\u4e24\u4e2a\u7406\u8bba\u5728\u524d\u9762\u7684\u8bfe\u7a0b\u90fd\u5df2\u6709\u63d0\u53ca\uff0c\u5b83\u4eec\u5171\u540c\u6784\u6210\u4e86\u8fd1\u5e73\u8861\u6001\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u7684\u57fa\u77f3\uff1a</p> <ol> <li> <p>\u6602\u8428\u683c\u7406\u8bba (Onsager's Theory): \u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e\u57fa\u672c\u5bf9\u79f0\u6027\u539f\u7406\uff08\u7279\u522b\u662f\u5fae\u89c2\u53ef\u9006\u6027\uff09\u7684\u5b8f\u4f1f\u6846\u67b6\uff0c\u4e0a\u8282\u8bfe\u5df2\u7ecf\u4ecb\u7ecd\uff0c\u5b83\u53ef\u4ee5\u5bfc\u51fa\u8457\u540d\u7684\u6602\u8428\u683c\u5012\u6613\u5173\u7cfb (reciprocity relations)\uff0c \u63ed\u793a\u4e86\u4e0d\u540c\u8f93\u8fd0\u8fc7\u7a0b\u4e4b\u95f4\u7684\u5185\u5728\u8054\u7cfb\u3002</p> </li> <li> <p>\u52a8\u6001\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Dynamic Fluctuation-Dissipation Theorem, FDT): \u8fd9\u662f\u6211\u4eec\u5728\u7b2c17\u8bb2\u4e2d\u5b66\u5230\u7684\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7684\u63a8\u5e7f\u3002\u5b83\u4e0d\u518d\u5c40\u9650\u4e8e\u9759\u6001\u6216\u96f6\u9891\u60c5\u51b5\uff0c\u800c\u662f\u5728\u6574\u4e2a\u9891\u7387\u57df\u5185\uff0c\u5c06\u7cfb\u7edf\u81ea\u53d1\u7684\u70ed\u6da8\u843d\u8c31\u4e0e\u7cfb\u7edf\u5bf9\u5916\u754c\u6270\u52a8\u7684\u8017\u6563\u54cd\u5e94\u7cbe\u786e\u5730\u8054\u7cfb\u8d77\u6765\u3002</p> </li> </ol> <p></p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#1","title":"1. \u56de\u987e\uff1a\u8fd1\u5e73\u8861\u6da8\u843d\u7684\u70ed\u529b\u5b66\u6846\u67b6","text":"<p>\u5728\u4e0a\u4e00\u8282\u8bfe\u4e2d\uff0c\u6559\u6388\u786e\u7acb\u4e86\u201c\u81ea\u4e0a\u800c\u4e0b\u201d\u7684\u7814\u7a76\u601d\u8def\uff1a\u5373\u4e0d\u4f9d\u8d56\u4e8e\u5fae\u89c2\u7ec6\u8282\uff0c\u4ec5\u4ece\u666e\u9002\u7684\u70ed\u529b\u5b66\u539f\u7406\u51fa\u53d1\uff0c\u6784\u5efa\u5b8f\u89c2\u6da8\u843d\u7406\u8bba\u3002\u8fd9\u4e00\u8282\uff0c\u6211\u4eec\u5c06\u7cfb\u7edf\u5730\u642d\u5efa\u8fd9\u4e2a\u7406\u8bba\u7684\u9759\u6001\u6846\u67b6\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u5c06\u71b5 \\(S\\) \u89c6\u4e3a\u4e00\u4e2a\u63cf\u8ff0\u7cfb\u7edf\u7a33\u5b9a\u6027\u7684\u201c\u52bf\u80fd\u5730\u8c8c\u201d\uff0c\u6240\u6709\u8fd1\u5e73\u8861\u6001\u7684\u9759\u6001\u6027\u8d28\uff0c\u90fd\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u5730\u8c8c\u7684\u51e0\u4f55\u5f62\u72b6\u4e2d\u63a8\u5bfc\u51fa\u6765\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#11","title":"1.1 \u5c40\u57df\u5e73\u8861\u5047\u8bbe","text":"<p>\u6602\u8428\u683c\u7406\u8bba\u7684\u57fa\u77f3\u662f\u5c40\u57df\u70ed\u529b\u5b66\u5e73\u8861\u5047\u8bbe (local equilibrium hypothesis)\u3002\u8fd9\u4e2a\u5047\u8bbe\u6307\u51fa\uff0c\u5373\u4f7f\u4e00\u4e2a\u7cfb\u7edf\u5728\u6574\u4f53\u4e0a\u5904\u4e8e\u975e\u5e73\u8861\u6001\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u8ba4\u4e3a\u5728\u8db3\u591f\u5c0f\u7684\u65f6\u7a7a\u5c3a\u5ea6\u5185\uff0c\u7cfb\u7edf\u7684\u6bcf\u4e2a\u5c0f\u90e8\u5206\uff08\u6216\u5b50\u7cfb\u7edf\uff09\u90fd\u5904\u4e8e\u5176\u81ea\u8eab\u7684\u5c40\u57df\u5e73\u8861\u6001\u3002\u8fd9\u4e2a\u770b\u4f3c\u7b80\u5355\u7684\u5047\u8bbe\u5177\u6709\u5f3a\u5927\u7684\u5a01\u529b\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u6211\u4eec\u8fd0\u7528\u5e73\u8861\u6001\u7edf\u8ba1\u529b\u5b66\u7684\u5168\u90e8\u7406\u8bba\u5de5\u5177\uff0c\u7279\u522b\u662f\u71b5\uff0c\u6765\u63cf\u8ff0\u7cfb\u7edf\u7684\u72b6\u6001\u3002</p> <p>\u57fa\u4e8e\u8fd9\u4e2a\u5047\u8bbe\uff0c\u4e00\u4e2a\u5b8f\u89c2\u72b6\u6001\uff08\u7531\u4e00\u7ec4\u53d8\u91cf \\(\\{\\phi_a\\}\\) \u63cf\u8ff0\uff09\u51fa\u73b0\u7684\u6982\u7387\uff0c\u4e0e\u8be5\u72b6\u6001\u7684\u71b5 \\(S(\\{\\phi_a\\})\\) \u76f4\u63a5\u76f8\u5173\uff0c\u5176\u5f62\u5f0f\u7c7b\u4f3c\u4e8e\u73bb\u5c14\u5179\u66fc\u5206\u5e03\uff1a</p> \\[P_{\\text{eq}}(\\{\\phi_a\\}) \\propto \\exp \\left(\\frac{S(\\{\\phi_a\\})}{k_B}\\right)\\] <p>\u8fd9\u4e2a\u516c\u5f0f\u662f\u8fde\u63a5\u5b8f\u89c2\u70ed\u529b\u5b66\u4e0e\u7edf\u8ba1\u6da8\u843d\u7684\u6865\u6881\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u7cfb\u7edf\u7684\u6da8\u843d\u884c\u4e3a\uff0c\u672c\u8d28\u4e0a\u662f\u5728\u71b5\u6784\u6210\u7684\u201c\u5730\u8c8c\u201d\u4e0a\u8fdb\u884c\u7684\u63a2\u7d22\u3002\u4e00\u4e2a\u7cfb\u7edf\u603b\u662f\u5728\u5176\u6700\u6982\u7136\u72b6\u6001\uff08\u5373\u71b5\u6700\u5927\u7684\u72b6\u6001\uff09\u9644\u8fd1\u6da8\u843d\u3002\u56e0\u6b64\uff0c\u89c2\u5bdf\u5230\u4e00\u4e2a\u504f\u79bb\u5e73\u8861\u6001\u7684\u6da8\u843d\u7684\u6982\u7387\uff0c\u5fc5\u7136\u4e0e\u8fd9\u4e2a\u6da8\u843d\u5bfc\u81f4\u71b5\u51cf\u5c11\u7684\u7a0b\u5ea6\u6709\u5173\u3002\u4e0a\u8ff0\u516c\u5f0f\u6b63\u662f\u8fd9\u4e00\u7269\u7406\u539f\u7406\u7684\u6570\u5b66\u4f53\u73b0\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#12","title":"1.2 \u71b5\u7684\u9ad8\u65af\u8fd1\u4f3c","text":"<p>\u4e0a\u8282\u5df2\u7ecf\u8bb2\u8fc7\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u662f\u7cfb\u7edf\u5728\u7a33\u5b9a\u5e73\u8861\u6001\uff08\u71b5\u7684\u6781\u5927\u503c\u70b9\uff0c\u6211\u4eec\u5b9a\u4e49\u4e3a \\(\\phi_{\\text{eq}}=0\\)\uff09\u9644\u8fd1\u7684\u5fae\u5c0f\u6da8\u843d\u3002\u5728\u4efb\u4f55\u51fd\u6570\u7684\u6781\u5927\u503c\u70b9\u9644\u8fd1\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u6b21\u51fd\u6570\uff08\u629b\u7269\u7ebf\uff09\u6765\u8fd1\u4f3c\u5b83\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u71b5 \\(S\\) \u5728\u5728\u5e73\u8861\u70b9\u9644\u8fd1\u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\uff0c\u5e76\u4fdd\u7559\u5230\u4e8c\u9636\u9879\uff0c\u5f97\u5230\u4e00\u4e2a\u9ad8\u65af\u8fd1\u4f3c\uff1a</p> \\[S \\approx S_0-\\frac{1}{2}\\tau_{ab}\\phi_a\\phi_b\\] <p>\u8fd9\u91cc\u91c7\u7528\u4e86\u7231\u56e0\u65af\u5766\u6c42\u548c\u7ea6\u5b9a\uff0c\u4e14\u77e9\u9635 \\(\\tau_{ab}\\) \u6b63\u662f\u6211\u4eec\u5728\u4e0a\u4e00\u8bb2\u5b9a\u4e49\u7684\u7a33\u5b9a\u6027\u77e9\u9635 \\(\\Gamma_{ab} = -\\left.\\frac{\\partial^2 S}{\\partial \\phi_a \\partial \\phi_b}\\right|_{\\phi=0}\\)\u3002\u4e4b\u6240\u4ee5\u672c\u8bb2\u7528\\(\\tau_{ab}\\) \u8868\u793a\u662f\u4e0e\u4e0b\u4e00\u8282\u7684\u52a8\u529b\u5b66\u77e9\u9635\u8fdb\u884c\u533a\u5206</p> <ul> <li>\\(S_0\\) \u662f\u5e73\u8861\u6001\u7684\u6700\u5927\u71b5\u3002</li> <li>\u5bf9\u79f0\u4e14\u6b63\u5b9a\u7684\u77e9\u9635 \\(\\tau_{ab}\\) \u5728\u6b64\u626e\u6f14\u4e86\u6838\u5fc3\u89d2\u8272\u3002\u5b83\u63cf\u8ff0\u4e86\u71b5\u201c\u5c71\u5cf0\u201d\u7684\u66f2\u7387\uff0c\u4ee3\u8868\u4e86\u7cfb\u7edf\u7684\u70ed\u529b\u5b66\u521a\u5ea6 (thermodynamic stiffness)\u3002\\(\\tau_{ab}\\) \u7684\u503c\u8d8a\u5927\uff0c\u610f\u5473\u7740\u71b5\u201c\u5c71\u5cf0\u201d\u8d8a\u9661\u5ced\uff0c\u7cfb\u7edf\u5c31\u8d8a\u201c\u4e0d\u613f\u610f\u201d\u504f\u79bb\u5e73\u8861\u6001\uff0c\u6da8\u843d\u4e5f\u5c31\u8d8a\u5c0f\u3002</li> </ul> <p>\u901a\u8fc7\u8fd9\u4e2a\u8fd1\u4f3c\uff0c\u6211\u4eec\u5c06\u62bd\u8c61\u7684\u201c\u71b5\u5730\u8c8c\u201d\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u5177\u4f53\u7684\u3001\u6570\u5b66\u4e0a\u6613\u4e8e\u5904\u7406\u7684\u5012\u6263\u629b\u7269\u9762\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#13","title":"1.3  \u9759\u6001\u6027\u8d28\uff1a\u8bfb\u53d6\u201c\u5730\u8c8c\u201d\u7684\u4fe1\u606f","text":"<p>\u4e00\u65e6\u6211\u4eec\u77e5\u9053\u4e86\u71b5\u5730\u8c8c\u7684\u5f62\u72b6\uff08\u7531 \\(\\tau_{ab}\\) \u51b3\u5b9a\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7acb\u5373\u201c\u8bfb\u53d6\u201d\u51fa\u7cfb\u7edf\u7684\u6240\u6709\u9759\u6001\u70ed\u529b\u5b66\u6027\u8d28\u3002</p> <ul> <li>\u9759\u6001\u5173\u8054/\u6da8\u843d\u5e45\u5ea6:  \u5c06\u9ad8\u65af\u5f62\u5f0f\u7684\u71b5\u4ee3\u5165\u6982\u7387\u516c\u5f0f\uff0c\u7531\u4e8e\u6982\u7387\u5206\u5e03 \\(P_{\\text{eq}} \\sim \\exp(-\\frac{1}{2}\\tau_{ab}\\phi_a\\phi_b)\\) \u662f\u4e00\u4e2a\u591a\u7ef4\u9ad8\u65af\u5206\u5e03\uff0c\u5176\u534f\u65b9\u5dee\u77e9\u9635\uff08\u5373\u6da8\u843d\u7684\u5e45\u5ea6\uff09\u5c31\u662f \\(\\tau\\) \u77e9\u9635\u7684\u9006\u77e9\u9635\uff1a</li> </ul> \\[\\langle \\phi_a\\phi_b \\rangle = (\\tau^{-1})_{ab}\\] <p>\u8fd9\u975e\u5e38\u76f4\u89c2\uff1a\u71b5\u5730\u8c8c\u8d8a\u9661\u5ced\uff08\\(\\tau\\) \u8d8a\u5927\uff09\uff0c\u6da8\u843d\u7684\u8303\u56f4\uff08\\(\\tau^{-1}\\)\uff09\u5c31\u8d8a\u5c0f\u3002 - \u70ed\u529b\u5b66\u6062\u590d\u529b: \u9a71\u52a8\u7cfb\u7edf\u56de\u5f52\u5e73\u8861\u7684\u201c\u529b\u201d\u662f\u4ec0\u4e48\uff1f\u6b63\u662f\u71b5\u201c\u5730\u8c8c\u201d\u7684\u5761\u5ea6\u3002\u6211\u4eec\u5b9a\u4e49\u5e7f\u4e49\u70ed\u529b\u5b66\u529b (generalized thermodynamic forces)\u4e3a\u71b5\u7684\u68af\u5ea6\uff1a</p> \\[ \\mu_a = \\frac{\\partial S}{\\partial \\phi_a} = -\\tau_{ab} \\phi_b \\] <p>\u8fd9\u4e2a\u7ebf\u6027\u5173\u7cfb\u53ef\u4ee5\u770b\u4f5c\u662f\u8fd1\u5e73\u8861\u7cfb\u7edf\u7684\u201c\u70ed\u529b\u5b66\u80e1\u514b\u5b9a\u5f8b\u201d (\\(F = -kx\\))\u3002\u5b83\u8868\u660e\uff0c\u7cfb\u7edf\u504f\u79bb\u5e73\u8861\u8d8a\u8fdc\uff08\\(\\phi_b\\) \u8d8a\u5927\uff09\uff0c\u5c06\u5b83\u62c9\u56de\u71b5\u6700\u5927\u70b9\u7684\u6062\u590d\u529b \\(\\mu_a\\) \u5c31\u8d8a\u5f3a\u3002</p> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u5168\u5efa\u7acb\u4e86\u4e00\u4e2a\u9759\u6001\u7684\u6846\u67b6\u3002\u7136\u800c\uff0c\u8fd9\u4e2a\u6846\u67b6\u65e0\u6cd5\u544a\u8bc9\u6211\u4eec\u4e00\u4e2a\u6da8\u843d\u662f\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u7684\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5f15\u5165\u6700\u540e\u4e00\u4e2a\uff0c\u4e5f\u662f\u6700\u5173\u952e\u7684\u7269\u7406\u539f\u7406\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#14","title":"1.4 \u5f15\u5165\u52a8\u529b\u5b66\uff1a\u5fae\u89c2\u53ef\u9006\u6027\u7684\u70d9\u5370","text":"<p>\u4e3a\u4e86\u63cf\u8ff0\u52a8\u529b\u5b66\uff0c\u6211\u4eec\u8003\u8651\u542b\u65f6\u5173\u8054\u51fd\u6570 \\(C_{ab}(t) = \\langle \\phi_a(t) \\phi_b(0) \\rangle\\)\u3002\u8fd9\u4e2a\u51fd\u6570\u8861\u91cf\u4e86\u7cfb\u7edf\u7684\u201c\u8bb0\u5fc6\u201d\uff1a\u57280\u65f6\u523b\u89c2\u6d4b\u5230\u6da8\u843d \\(\\phi_b\\)\uff0c\u5728 \\(t\\) \u65f6\u523b\u8fd8\u80fd\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u201c\u611f\u53d7\u201d\u5230\u5b83\u7684\u5f71\u54cd\u3002</p> <p>\u6602\u8428\u683c\u7406\u8bba\u6700\u6df1\u523b\u7684\u6d1e\u89c1\u5728\u4e8e\uff0c\u8fd9\u4e2a\u5b8f\u89c2\u7684\u3001\u901a\u5e38\u968f\u65f6\u95f4\u8870\u51cf\u7684\u51fd\u6570\uff0c\u5fc5\u987b\u670d\u4ece\u4e00\u4e2a\u6e90\u81ea\u5fae\u89c2\u4e16\u754c\u57fa\u672c\u5bf9\u79f0\u6027\u7684\u4e25\u683c\u7ea6\u675f\u2014\u2014\u5fae\u89c2\u65f6\u95f4\u53cd\u6f14\u4e0d\u53d8\u6027 (microscopic time-reversal invariance)\u3002</p> <p>\u5e95\u5c42\u7684\u5fae\u89c2\u52a8\u529b\u5b66\uff08\u65e0\u8bba\u662f\u725b\u987f\u529b\u5b66\u8fd8\u662f\u54c8\u5bc6\u987f\u529b\u5b66\uff09\u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u662f\u5bf9\u79f0\u7684\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5c06\u4efb\u4f55\u5fae\u89c2\u8fc7\u7a0b\u5f55\u50cf\u5e76\u5012\u5e26\u64ad\u653e\uff0c\u770b\u5230\u7684\u666f\u8c61\u5728\u7269\u7406\u4e0a\u90fd\u662f\u53ef\u80fd\u53d1\u751f\u7684\u3002\u5f53\u8fd9\u4e2a\u5fae\u89c2\u5bf9\u79f0\u6027\u539f\u7406\u88ab\u5e94\u7528\u5230\u5b8f\u89c2\u6da8\u843d\u53d8\u91cf\u7684\u7edf\u8ba1\u5e73\u5747\u4e0a\u65f6\uff0c\u4fbf\u5f97\u5230\u4e86\u4e00\u4e2a\u5173\u4e8e\u5173\u8054\u51fd\u6570\u7684\u666e\u9002\u5173\u7cfb\uff1a</p> \\[ C_{ab}(t) = \\epsilon_a \\epsilon_b C_{ba}(-t) \\] <p>\u5176\u4e2d\uff0c\\(\\epsilon_a = \\pm 1\\) \u662f\u5b8f\u89c2\u53d8\u91cf \\(\\phi_a\\) \u5728\u65f6\u95f4\u53cd\u6f14\u64cd\u4f5c (\\(t \\to -t\\)) \u4e0b\u7684\u5b87\u79f0 (parity)\u3002 - \u5bf9\u4e8e\u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u4e0d\u53d8\u7684\u53d8\u91cf\uff08\u5982\u4f4d\u7f6e\u3001\u5bc6\u5ea6\u3001\u80fd\u91cf\uff09\uff0c\\(\\epsilon = +1\\)\u3002 - \u5bf9\u4e8e\u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u53cd\u53f7\u7684\u53d8\u91cf\uff08\u5982\u901f\u5ea6\u3001\u52a8\u91cf\u3001\u78c1\u573a\uff09\uff0c\\(\\epsilon = -1\\)\u3002</p> <p>\u8fd9\u4e2a\u5bf9\u79f0\u6027\u5173\u7cfb\u662f\u6574\u4e2a\u5012\u6613\u5173\u7cfb\u7406\u8bba\u7684\u57fa\u77f3\u3002\u5b83\u5982\u540c\u4e00\u5ea7\u6865\u6881\uff0c\u5c06\u5b8f\u89c2\u4e16\u754c\u4e0d\u53ef\u9006\u7684\u201c\u65f6\u95f4\u4e4b\u7bad\u201d\uff08\u5173\u8054\u51fd\u6570\u968f\u65f6\u95f4\u8870\u51cf\uff09\u4e0e\u5fae\u89c2\u4e16\u754c\u53ef\u9006\u7684\u65f6\u95f4\u5bf9\u79f0\u6027\u6df1\u523b\u5730\u8054\u7cfb\u5728\u4e86\u4e00\u8d77\u3002\u4e00\u4e2a\u770b\u4e0d\u89c1\u7684\u5fae\u89c2\u5bf9\u79f0\u6027\uff0c\u4e3a\u6211\u4eec\u53ef\u6d4b\u91cf\u7684\u5b8f\u89c2\u52a8\u529b\u5b66\u884c\u4e3a\uff0c\u65bd\u52a0\u4e86\u4e00\u4e2a\u4e0d\u53ef\u8fdd\u80cc\u7684\u6cd5\u5219\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#2","title":"2. \u7ebf\u6027\u52a8\u529b\u5b66\u4e0e\u6602\u8428\u683c\u56de\u5f52\u5047\u8bbe","text":"<p>\u5728\u7b2c\u4e00\u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u5229\u7528\u71b5 \\(S\\) \u6784\u5efa\u4e86\u4e00\u4e2a\u9759\u6001\u7684\u201c\u70ed\u529b\u5b66\u5730\u8c8c\u201d\uff0c\u5e76\u4ece\u5b83\u7684\u5f62\u72b6\uff08\u7531\u70ed\u529b\u5b66\u77e9\u9635 \\(\\tau_{ab}\\) \u63cf\u8ff0\uff09\u63a8\u5bfc\u51fa\u4e86\u6da8\u843d\u7684\u5e45\u5ea6\u548c\u6062\u590d\u529b\u3002\u73b0\u5728\uff0c\u6211\u4eec\u8981\u56de\u7b54\u4e0b\u4e00\u4e2a\u5173\u952e\u95ee\u9898\uff1a\u7cfb\u7edf\u662f\u5982\u4f55\u5728\u8fd9\u4e2a\u5730\u8c8c\u4e0a\u201c\u79fb\u52a8\u201d\u7684\uff1f\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u4e3a\u6da8\u843d\u53d8\u91cf \\(\\phi_a\\) \u5f15\u5165\u4e00\u4e2a\u52a8\u529b\u5b66\u6f14\u5316\u65b9\u7a0b\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#21","title":"2.1 \u591a\u53d8\u91cf\u6717\u4e4b\u4e07\u65b9\u7a0b\uff1a\u4e00\u4e2a\u5408\u7406\u7684\u52a8\u529b\u5b66\u6a21\u578b","text":"<p>\u63cf\u8ff0\u8fd1\u5e73\u8861\u7cfb\u7edf\u52a8\u529b\u5b66\u6700\u81ea\u7136\u3001\u6700\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u5c31\u662f\u5c06\u6211\u4eec\u5728\u7b2c17\u8bb2\u5b66\u5230\u7684\u5355\u53d8\u91cf\u6717\u4e4b\u4e07\u65b9\u7a0b\u8fdb\u884c\u63a8\u5e7f\u3002\u6211\u4eec\u5047\u8bbe\u6da8\u843d\u7684\u6f14\u5316\u7531\u4e24\u90e8\u5206\u9a71\u52a8\uff1a\u4e00\u4e2a\u5c06\u7cfb\u7edf\u62c9\u56de\u5e73\u8861\u7684\u786e\u5b9a\u6027\u6062\u590d\u529b\uff0c\u548c\u4e00\u4e2a\u4ee3\u8868\u5fae\u89c2\u70ed\u8fd0\u52a8\u7684\u968f\u673a\u529b\u3002\u7531\u6b64\uff0c\u6211\u4eec\u5199\u4e0b\u7ebf\u6027\u7684\u591a\u53d8\u91cf\u6717\u4e4b\u4e07\u65b9\u7a0b\uff1a</p> \\[ \\partial_t \\phi_a(t) = -\\Gamma_{ab} \\phi_b(t) + \\xi_a(t) \\] <p>\u786e\u5b9a\u6027\u6062\u590d\u9879 (\\(-\\Gamma_{ab} \\phi_b(t)\\)): \u8fd9\u4e00\u9879\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5982\u4f55\u786e\u5b9a\u6027\u5730\u5411\u5e73\u8861\u70b9 (\\(\\phi = 0\\)) \u56de\u5f52\u3002</p> <ul> <li> <p>\u65b0\u5f15\u5165\u7684\u77e9\u9635 \\(\\Gamma_{ab}\\) \u662f\u4e00\u4e2a\u52a8\u529b\u5b66\u77e9\u9635 (kinetic matrix)\u3002\u5b83\u63cf\u8ff0\u4e86\u6da8\u843d \\(\\phi_b\\) \u7684\u5b58\u5728\uff0c\u4f1a\u4ee5\u591a\u5feb\u7684\u901f\u7387\u5f15\u8d77\u53d8\u91cf \\(\\phi_a\\) \u7684\u53d8\u5316\u3002</p> </li> <li> <p>\u5173\u952e\u533a\u522b\uff1a\u8fd9\u4e2a\u52a8\u529b\u5b66\u77e9\u9635 \\(\\Gamma\\) \u4e0e\u4e0a\u4e00\u8282\u7684\u70ed\u529b\u5b66\u77e9\u9635 \\(\\tau\\) \u662f\u5b8c\u5168\u4e0d\u540c\u7684\u6982\u5ff5\u3002\\(\\tau\\) \u63cf\u8ff0\u7684\u662f\u9759\u6001\u7684\u6062\u590d\u529b\u5927\u5c0f\uff08\u5730\u8c8c\u9661\u5ced\u7a0b\u5ea6\uff09\uff0c\u800c \\(\\Gamma\\) \u63cf\u8ff0\u7684\u662f\u52a8\u6001\u7684\u54cd\u5e94\u901f\u7387\uff08\u4e0b\u6ed1\u901f\u5ea6\uff09\u3002\u6b64\u5916\uff0c\u4e0e\u5fc5\u987b\u5bf9\u79f0\u7684 \\(\\tau\\) \u4e0d\u540c\uff0c\\(\\Gamma\\) \u4e0d\u4e00\u5b9a\u662f\u5bf9\u79f0\u7684\u3002</p> </li> <li> <p>\u968f\u673a\u566a\u58f0\u9879 (\\(\\xi_a(t)\\)): \u8fd9\u4e00\u9879\u4ee3\u8868\u4e86\u6765\u81ea\u7cfb\u7edf\u5185\u90e8\u7684\u5fae\u89c2\u81ea\u7531\u5ea6\u7684\u3001\u6c38\u4e0d\u505c\u6b47\u7684\u968f\u673a\u201c\u8e22\u52a8\u201d\u3002\u6211\u4eec\u5047\u8bbe\u5b83\u662f\u4e00\u4e2a\u9ad8\u65af\u767d\u566a\u58f0\uff0c\u5176\u7edf\u8ba1\u6027\u8d28\u7531\u5176\u5747\u503c\u548c\u534f\u65b9\u5dee\u5b9a\u4e49\uff1a</p> </li> </ul> <p>$$ \\langle \\xi_a(t) \\rangle = 0 $$ $$ \\langle \\xi_a(t) \\xi_b(t') \\rangle = N_{ab} \\delta(t - t') $$</p> <p>\u5176\u4e2d \\(N_{ab}\\) \u662f\u566a\u58f0\u5173\u8054\u77e9\u9635\uff0c\u5b83\u63cf\u8ff0\u4e86\u566a\u58f0\u7684\u5f3a\u5ea6\u3002\u6211\u4eec\u6682\u65f6\u5c06\u5176\u89c6\u4e3a\u4e00\u4e2a\u672a\u77e5\u91cf\uff0c\u7a0d\u540e\u4f1a\u53d1\u73b0\u5b83\u5e76\u975e\u72ec\u7acb\u53c2\u6570\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#22","title":"2.2 \u6602\u8428\u683c\u56de\u5f52\u5047\u8bbe\uff1a\u4ece\u968f\u673a\u5230\u786e\u5b9a\u7684\u6865\u6881","text":"<p>\u4e0a\u9762\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u662f\u968f\u673a\u7684\uff0c\u5b83\u7684\u89e3\u662f\u4e00\u6761\u6761\u5145\u6ee1\u566a\u58f0\u7684\u8f68\u8ff9\u3002\u4f46\u6211\u4eec\u5173\u5fc3\u7684\u5173\u8054\u51fd\u6570 \\(C_{ab}(t) = \\langle \\phi_a(t) \\phi_b(0) \\rangle\\) \u662f\u4e00\u4e2a\u5149\u6ed1\u3001\u786e\u5b9a\u7684\u51fd\u6570\u3002\u6211\u4eec\u5982\u4f55\u4ece\u4e00\u4e2a\u968f\u673a\u65b9\u7a0b\u5f97\u5230\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u7ed3\u679c\u5462\uff1f</p> <p>\u8fd9\u91cc\uff0c\u6602\u8428\u683c\u63d0\u51fa\u4e86\u4e00\u4e2a\u5929\u624d\u822c\u7684\u7269\u7406\u6d1e\u89c1\uff0c\u88ab\u79f0\u4e3a\u6602\u8428\u683c\u56de\u5f52\u5047\u8bbe (Onsager's regression hypothesis)\u3002</p> <p>\u6602\u8428\u683c\u56de\u5f52\u5047\u8bbe\uff08Onsager Reciprocal Relations\uff09\u662f\u7531\u7f8e\u56fd\u7269\u7406\u5316\u5b66\u5bb6\u62c9\u5c14\u65af\u00b7\u6602\u8428\u683c\uff08Lars Onsager\uff09\u4e8e1931\u5e74\u63d0\u51fa\u7684\u975e\u5e73\u8861\u70ed\u529b\u5b66\u6838\u5fc3\u7406\u8bba\u4e4b\u4e00\u3002\u5176\u7269\u7406\u672c\u8d28\u5728\u4e8e\u63ed\u793a\u4e86\u5728\u63a5\u8fd1\u70ed\u529b\u5b66\u5e73\u8861\u7684\u7ebf\u6027\u54cd\u5e94\u8303\u56f4\u5185\uff0c\u4e0d\u540c\u4e0d\u53ef\u9006\u8fc7\u7a0b\uff08\u5982\u70ed\u4f20\u5bfc\u3001\u6269\u6563\u3001\u7535\u5316\u5b66\u7b49\uff09\u4e4b\u95f4\u7684\u8026\u5408\u7cfb\u6570\u5177\u6709\u5bf9\u79f0\u6027\u3002\u62c9\u5c14\u65af\u00b7\u6602\u8428\u683c\uff081903-1976\uff09\u51fa\u751f\u4e8e\u632a\u5a01\uff0c\u540e\u79fb\u5c45\u7f8e\u56fd\uff0c\u5728\u5eb7\u5948\u5c14\u5927\u5b66\u4efb\u6559\u3002\u4ed6\u4ee5\u89e3\u51b3\u4e8c\u7ef4\u4f0a\u8f9b\u6a21\u578b\uff08Ising Model\uff09\u548c\u975e\u5e73\u8861\u70ed\u529b\u5b66\u95ee\u9898\u95fb\u540d\uff0c1968\u5e74\u56e0\u201c\u5bf9\u70ed\u529b\u5b66\u4e0d\u53ef\u9006\u8fc7\u7a0b\u7684\u5012\u6613\u5173\u7cfb\u7684\u53d1\u73b0\u201d\u83b7\u5f97\u8bfa\u8d1d\u5c14\u5316\u5b66\u5956\u3002</p> <p>\u6602\u8428\u683c\u56de\u5f52\u5047\u8bbe\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u4e00\u4e2a\u7531\u70ed\u8fd0\u52a8\u81ea\u53d1\u4ea7\u751f\u7684\u5fae\u5c0f\u6da8\u843d\uff0c\u5176\u5e73\u5747\u8870\u9000\u884c\u4e3a\uff0c\u4e0e\u4e00\u4e2a\u7531\u5916\u90e8\u5fae\u5c0f\u6270\u52a8\uff08\u6bd4\u5982\u6211\u4eec\u7528\u954a\u5b50\u8f7b\u8f7b\u62e8\u4e00\u4e0b\u7cfb\u7edf\uff09\u5f15\u8d77\u7684\u5b8f\u89c2\u5f1b\u8c6b\u884c\u4e3a\uff0c\u9075\u5faa\u5b8c\u5168\u76f8\u540c\u7684\u52a8\u529b\u5b66\u89c4\u5f8b\u3002</p> <p>\u8fd9\u80cc\u540e\u7684\u7269\u7406\u76f4\u89c9\u662f\uff0c\u65e0\u8bba\u6da8\u843d\u662f\u5982\u4f55\u4ea7\u751f\u7684\uff0c\u7cfb\u7edf\u672c\u8eab\u201c\u5e76\u4e0d\u77e5\u9053\u201d\u3002\u4e00\u65e6\u6da8\u843d\u51fa\u73b0\uff0c\u7cfb\u7edf\u5e95\u5c42\u7684\u52a8\u529b\u5b66\u673a\u5236\uff08\u7531 \\(\\Gamma\\) \u63cf\u8ff0\uff09\u5c31\u4f1a\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u5c06\u5176\u201c\u62b9\u5e73\u201d\u3002</p> <p>\u8fd9\u4e2a\u5047\u8bbe\u7684\u6570\u5b66\u5a01\u529b\u5728\u4e8e\uff0c\u5f53\u6211\u4eec\u8ba1\u7b97\u4e00\u4e2a\u6761\u4ef6\u5e73\u5747\u2014\u2014\u5373\u56fa\u5b9a\u521d\u59cb\u6da8\u843d\u4e3a \\(\\phi(0)\\)\uff0c\u7136\u540e\u89c2\u5bdf\u5176\u540e\u7684\u5e73\u5747\u6f14\u5316\u8def\u5f84 \\(\\bar{\\phi}_a(t) = \\langle \\phi_a(t) \\rangle_{\\phi(0)}\\) \u65f6\u2014\u2014\u968f\u673a\u566a\u58f0\u9879\u7684\u5e73\u5747\u6548\u679c\u4e3a\u96f6 (\\(\\langle \\xi_a(t) \\rangle_{\\phi(0)} = 0\\))\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u5e73\u5747\u8def\u5f84\u7684\u6f14\u5316\u4e0d\u518d\u662f\u968f\u673a\u7684\uff0c\u800c\u662f\u9075\u5faa\u4e00\u4e2a\u7eaf\u7cb9\u786e\u5b9a\u6027\u7684\u65b9\u7a0b\uff1a</p> \\[ \\partial_t \\bar{\\phi}_a(t) = -\\Gamma_{ab} \\bar{\\phi}_b(t) \\quad (\\text{for } t &gt; 0) \\]"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#23","title":"2.3 \u5173\u8054\u51fd\u6570\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\uff1a\u7406\u8bba\u7684\u7ed3\u5408","text":"<p>\u6602\u8428\u683c\u7684\u5047\u8bbe\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u5ea7\u6865\u6881\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u5b83\u4e0e\u5173\u8054\u51fd\u6570\u7684\u5b9a\u4e49\u7ed3\u5408\u8d77\u6765\u3002\u901a\u8fc7\u5bf9\u5173\u8054\u51fd\u6570 \\(C_{ab}(t)\\) \u6c42\u65f6\u95f4\u5bfc\u6570\uff0c\u5e76\u5e94\u7528\u56de\u5f52\u5047\u8bbe\uff0c\u6211\u4eec\u7acb\u5373\u5f97\u5230\u4e00\u4e2a\u5173\u4e8e\u5173\u8054\u51fd\u6570\u672c\u8eab\u7684\u3001\u7eaf\u7cb9\u786e\u5b9a\u6027\u7684\u5fae\u5206\u65b9\u7a0b\uff1a</p> \\[ \\partial_t C_{ab}(t) = -\\Gamma_{ad} C_{db}(t) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u9700\u8981\u4e00\u4e2a\u521d\u59cb\u6761\u4ef6\uff0c\u800c\u8fd9\u4e2a\u521d\u59cb\u6761\u4ef6\u6070\u6070\u662f\u6211\u4eec\u5728\u7b2c\u4e00\u8282\u4e2d\u7528\u9759\u6001\u70ed\u529b\u5b66\u63a8\u5bfc\u51fa\u7684\u7ed3\u679c\uff01</p> \\[ C_{ab}(0) = \\langle \\phi_a(0) \\phi_b(0) \\rangle = (\\tau^{-1})_{ab} \\] <p>\u8fd9\u662f\u4e00\u4e2a\u91cc\u7a0b\u7891\u5f0f\u7684\u6210\u679c\uff01\u6211\u4eec\u6210\u529f\u5730\u5c06\u4e00\u4e2a\u968f\u673a\u52a8\u529b\u5b66\u95ee\u9898\uff0c\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u6211\u4eec\u975e\u5e38\u719f\u6089\u7684\u3001\u786e\u5b9a\u6027\u7684\u7ebf\u6027\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\u3002\u5b83\u7684\u89e3\u5b8c\u7f8e\u5730\u4f53\u73b0\u4e86\u9759\u529b\u5b66\u4e0e\u52a8\u529b\u5b66\u7684\u878d\u5408\uff1a</p> \\[ C(t) = e^{-\\Gamma t} \\cdot C(0) = e^{-\\Gamma t} \\cdot \\tau^{-1} \\] <p>\u8fd9\u4e2a\u89e3\u544a\u8bc9\u6211\u4eec\u4e00\u4e2a\u6e05\u6670\u7684\u7269\u7406\u56fe\u50cf\uff1a - \u6da8\u843d\u7684\u521d\u59cb\u5e45\u5ea6 \\(C(0)\\)\uff0c\u7531\u70ed\u529b\u5b66\u5730\u8c8c\u7684\u5f62\u72b6\uff08\\(\\tau\\)\uff09\u51b3\u5b9a\u3002 - \u6da8\u843d\u968f\u65f6\u95f4\u7684\u8870\u51cf\u65b9\u5f0f \\(e^{-\\Gamma t}\\)\uff0c\u7531\u7cfb\u7edf\u7684\u5185\u5728\u52a8\u529b\u5b66\uff08\\(\\Gamma\\)\uff09\u51b3\u5b9a\u3002</p> <p>\u5c31\u8fd9\u6837\uff0c\u6211\u4eec\u628a\u9759\u6001\u7684\u70ed\u529b\u5b66\u6846\u67b6\u548c\u52a8\u6001\u7684\u6f14\u5316\u6a21\u578b\u65e0\u7f1d\u5730\u8fde\u63a5\u5728\u4e86\u4e00\u8d77\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#3","title":"3. \u6602\u8428\u683c\u5012\u6613\u5173\u7cfb\uff1a\u52a8\u529b\u5b66\u4e2d\u9690\u85cf\u7684\u5bf9\u79f0\u6027","text":"<p>\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u63cf\u8ff0\u6da8\u843d\u5982\u4f55\u968f\u65f6\u95f4\u8870\u51cf\u7684\u5b8c\u6574\u52a8\u529b\u5b66\u65b9\u7a0b \\(C(t) = e^{-\\Gamma t} \\tau^{-1}\\)\u3002\u8fd9\u4e2a\u7ed3\u679c\u867d\u7136\u5b8c\u5907\uff0c\u4f46\u5f62\u5f0f\u8fd8\u6bd4\u8f83\u62bd\u8c61\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u5b83\u201c\u7ffb\u8bd1\u201d\u6210\u975e\u5e73\u8861\u70ed\u529b\u5b66\u4e2d\u66f4\u5e38\u7528\u3001\u7269\u7406\u610f\u4e49\u66f4\u76f4\u89c2\u7684\u8bed\u8a00\u2014\u2014\u201c\u6d41 (flux)\u201d\u4e0e\u201c\u529b (force)\u201d \u7684\u8bed\u8a00\u3002\u901a\u8fc7\u8fd9\u6b21\u89c6\u89d2\u8f6c\u6362\uff0c\u6211\u4eec\u5c06\u63ed\u793a\u51fa\u52a8\u529b\u5b66\u77e9\u9635 \\(\\Gamma\\) \u4e2d\u9690\u85cf\u7684\u4e00\u4e2a\u6df1\u523b\u7684\u5bf9\u79f0\u6027\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#31-l","title":"3.1 \u6602\u8428\u683c\u52a8\u529b\u5b66\u7cfb\u6570 \\(L\\)\uff1a\u8f93\u8fd0\u73b0\u8c61\u7684\u8bed\u8a00","text":"<p>\u5728\u975e\u5e73\u8861\u70ed\u529b\u5b66\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4e0d\u76f4\u63a5\u8ba8\u8bba\u6da8\u843d\u53d8\u91cf \\(\\phi_a\\)\uff0c\u800c\u662f\u8ba8\u8bba\u5b83\u4eec\u7684\u53d8\u5316\u7387\uff0c\u8fd9\u88ab\u79f0\u4e3a\u70ed\u529b\u5b66\u6d41 (flux)\uff0c\u8bb0\u4e3a \\(J_a \\equiv \\partial_t \\bar{\\phi}_a\\)\u3002\u6bd4\u5982\uff0c\u5b83\u53ef\u4ee5\u662f\u5355\u4f4d\u65f6\u95f4\u901a\u8fc7\u67d0\u4e2a\u754c\u9762\u7684\u70ed\u91cf\uff08\u70ed\u6d41\uff09\u3001\u7c92\u5b50\u6570\uff08\u7c92\u5b50\u6d41\uff09\u6216\u7535\u8377\uff08\u7535\u6d41\uff09\u3002</p> <p>\u540c\u65f6\uff0c\u9a71\u52a8\u8fd9\u4e9b\u201c\u6d41\u201d\u7684\uff0c\u6b63\u662f\u6211\u4eec\u5728\u7b2c\u4e00\u8282\u4e2d\u5b9a\u4e49\u7684\u5e7f\u4e49\u70ed\u529b\u5b66\u529b (force)\uff0c\\(\\mu_d = -\\tau_{db}\\phi_b\\)\u3002\u8fd9\u4e2a\u529b\u4ee3\u8868\u4e86\u7cfb\u7edf\u504f\u79bb\u5e73\u8861\u7684\u7a0b\u5ea6\uff0c\u6bd4\u5982\u6e29\u5ea6\u68af\u5ea6\u3001\u5316\u5b66\u52bf\u68af\u5ea6\u6216\u7535\u52bf\u5dee\u3002</p> <p>\u5728\u5e73\u8861\u70b9\u9644\u8fd1\uff0c\u4e00\u4e2a\u81ea\u7136\u7684\u5047\u8bbe\u662f\uff1a\u201c\u6d41\u201d\u7684\u5927\u5c0f\u4e0e\u9a71\u52a8\u5b83\u7684\u201c\u529b\u201d\u6210\u7ebf\u6027\u5173\u7cfb\u3002\u8fd9\u5c31\u50cf\u7535\u8def\u4e2d\u7684\u6b27\u59c6\u5b9a\u5f8b\uff08\u7535\u6d41\u6b63\u6bd4\u4e8e\u7535\u538b\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4e0b\u5b8f\u89c2\u8f93\u8fd0\u8fc7\u7a0b\u7684\u4e2d\u5fc3\u65b9\u7a0b\uff1a</p> \\[J_a = -L_{ad}\\mu_d\\] <p>\u8fd9\u91cc\u7684\u77e9\u9635 \\(L_{ad}\\) \u5c31\u662f\u5927\u540d\u9f0e\u9f0e\u7684\u6602\u8428\u683c\u52a8\u529b\u5b66\u7cfb\u6570 (Onsager kinetic coefficients)\u3002\u5b83\u662f\u4e00\u4e2a\u8f93\u8fd0\u7cfb\u6570\u77e9\u9635\uff0c\u5176\u5bf9\u89d2\u5143 \\(L_{aa}\\) \u63cf\u8ff0\u4e86\u529b \\(\\mu_a\\) \u5982\u4f55\u9a71\u52a8\u5176\u5171\u8f6d\u6d41 \\(J_a\\)\uff08\u4f8b\u5982\uff0c\u7535\u5bfc\u7387\uff09\uff0c\u800c\u975e\u5bf9\u89d2\u5143 \\(L_{ad}\\) \u5219\u63cf\u8ff0\u4e86\u4e0d\u540c\u8fc7\u7a0b\u4e4b\u95f4\u7684\u4ea4\u53c9\u6548\u5e94\uff08\u4f8b\u5982\uff0c\u6e29\u5ea6\u68af\u5ea6\u5982\u4f55\u5f15\u8d77\u7535\u6d41\uff0c\u5373\u70ed\u7535\u6548\u5e94\uff09\u3002</p> <p>\u8fd9\u4e2a\u7269\u7406\u4e0a\u76f4\u89c2\u7684 \\(L\\) \u77e9\u9635\uff0c\u4e0e\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49\u7684\u62bd\u8c61\u77e9\u9635 \\(\\Gamma\\) \u548c \\(\\tau\\) \u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u901a\u8fc7\u7b80\u5355\u7684\u4ee3\u6570\u66ff\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5730\u5efa\u7acb\u8d77\u5b83\u4eec\u4e4b\u95f4\u7684\u6865\u6881\uff1a</p> \\[J_a = \\partial_t \\bar{\\phi}_a = -\\Gamma_{ab}\\bar{\\phi}_b = -\\Gamma_{ab}(\\tau^{-1})_{bd}(-\\tau_{dk}\\bar{\\phi}_k) = \\underbrace{\\Gamma_{ab}(\\tau^{-1})_{bd}}_{L_{ad}} \\mu_d\\] <p>\u56e0\u6b64\uff0c\u6211\u4eec\u627e\u5230\u4e86\u5b83\u4eec\u4e4b\u95f4\u7684\u7cbe\u786e\u5173\u7cfb\uff1a</p> \\[L = \\Gamma \\tau^{-1}\\] <p>\u901a\u8fc7\u8fd9\u6b21\u201c\u7ffb\u8bd1\u201d\uff0c\u6211\u4eec\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\uff1a\u8fd9\u4e2a\u7269\u7406\u4e0a\u53ef\u6d4b\u91cf\u7684\u8f93\u8fd0\u77e9\u9635 \\(L\\) \u662f\u5426\u5177\u6709\u4ec0\u4e48\u666e\u9002\u7684\u6027\u8d28\uff1f</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#32","title":"3.2 \u5012\u6613\u5173\u7cfb\u7684\u63a8\u5bfc\uff1a\u6c47\u96c6\u6240\u6709\u7ebf\u7d22","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u8fce\u6765\u4e86\u672c\u8bb2\u63a8\u5bfc\u7684\u9876\u70b9\u3002\u6211\u4eec\u5c06\u6c47\u96c6\u524d\u9762\u6240\u6709\u7684\u5173\u952e\u6210\u679c\uff0c\u6765\u8bc1\u660e \\(L\\) \u77e9\u9635\u5fc5\u987b\u670d\u4ece\u4e00\u4e2a\u60ca\u4eba\u7684\u5bf9\u79f0\u6027\u3002</p> <p>\u6211\u4eec\u7684\u63a8\u5bfc\u8fc7\u7a0b\u5c31\u50cf\u4e00\u4e2a\u903b\u8f91\u5b8c\u7f8e\u7684\u8bc1\u660e\uff0c\u9700\u8981\u4e09\u4e2a\u5173\u952e\u8f93\u5165\uff1a</p> <ol> <li> <p>\u8f93\u5165\u4e00 (\u6765\u81ea 1.4\u8282)\uff1a\u6e90\u4e8e\u5fae\u89c2\u53ef\u9006\u6027\u7684\u5173\u8054\u51fd\u6570\u5bf9\u79f0\u6027 \\(C_{ab}(t) = \\epsilon_a\\epsilon_b C_{ba}(-t)\\)\u3002</p> </li> <li> <p>\u8f93\u5165\u4e8c (\u6765\u81ea 2.3\u8282)\uff1a\u6e90\u4e8e\u6602\u8428\u683c\u56de\u5f52\u5047\u8bbe\u7684\u5173\u8054\u51fd\u6570\u52a8\u529b\u5b66\u65b9\u7a0b \\(\\partial_t C(t) = -\\Gamma C(t)\\)\u3002</p> </li> <li> <p>\u8f93\u5165\u4e09 (\u6765\u81ea 1.3\u8282)\uff1a\u6e90\u4e8e\u70ed\u529b\u5b66\u7684\u521d\u59cb\u6761\u4ef6 \\(C(0) = \\tau^{-1}\\)\u3002</p> </li> </ol>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#_2","title":"\u63a8\u5bfc\u5f00\u59cb\uff1a","text":"<p>1.\u6211\u4eec\u4ece\u5fae\u89c2\u53ef\u9006\u6027\u5173\u7cfb\u51fa\u53d1\uff0c\u5bf9\u5176\u4e24\u8fb9\u5173\u4e8e\u65f6\u95f4 \\(t\\) \u6c42\u5bfc\uff0c\u7136\u540e\u8003\u5bdf \\(t \\to 0^+\\) \u7684\u77ac\u95f4\uff1a</p> \\[\\left.\\frac{dC_{ab}(t)}{dt}\\right|_{t=0^+} = \\epsilon_a\\epsilon_b \\left.\\frac{dC_{ba}(-t)}{dt}\\right|_{t=0^+} = -\\epsilon_a\\epsilon_b \\left.\\frac{dC_{ba}(s)}{ds}\\right|_{s=0^-}\\] <p>\u7531\u4e8e\u5173\u8054\u51fd\u6570\u5728 \\(t=0\\) \u5904\u662f\u8fde\u7eed\u53ef\u5bfc\u7684\uff08\u5bf9\u4e8e \\(t&gt;0\\) \u548c \\(t&lt;0\\)\uff09\uff0c\u5de6\u53f3\u5bfc\u6570\u76f8\u7b49\uff0c\u56e0\u6b64\uff1a</p> \\[\\left.\\frac{dC_{ab}(t)}{dt}\\right|_{t=0^+} = \\epsilon_a\\epsilon_b \\left.\\frac{dC_{ba}(t)}{dt}\\right|_{t=0^+}\\] <p>2.\u73b0\u5728\uff0c\u6211\u4eec\u7528\u52a8\u529b\u5b66\u65b9\u7a0b\u6765\u8ba1\u7b97\u8fd9\u4e2a\u5bfc\u6570\uff1a</p> \\[\\left.\\frac{dC(t)}{dt}\\right|_{t=0^+} = -\\Gamma C(0) = -\\Gamma\\tau^{-1} = -L\\] <p>3.\u5c06\u7b2c2\u6b65\u7684\u7ed3\u679c\u4ee3\u5165\u7b2c1\u6b65\u7684\u7b49\u5f0f\u4e2d\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[(-L)_{ab} = \\epsilon_a\\epsilon_b (-L)_{ba}\\] <p>4.\u6574\u7406\u540e\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6700\u7ec8\u7684\u6602\u8428\u683c\u5012\u6613\u5173\u7cfb (Onsager Reciprocity Relation)\uff1a</p> \\[L_{ab} = \\epsilon_a\\epsilon_b L_{ba}\\] <p>\u8fd9\u662f\u4e00\u4e2a\u6781\u5176\u6df1\u523b\u548c\u5f3a\u5927\u7684\u7ed3\u8bba\uff01\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u4e00\u4e2a\u63cf\u8ff0\u201c\u529b b \u5982\u4f55\u9a71\u52a8\u6d41 a\u201d\u7684\u8f93\u8fd0\u7cfb\u6570 \\(L_{ab}\\)\uff0c\u4e0e\u4e00\u4e2a\u63cf\u8ff0\u201c\u529b a \u5982\u4f55\u9a71\u52a8\u6d41 b\u201d\u7684\u7cfb\u6570 \\(L_{ba}\\)\uff0c\u4e24\u8005\u4e4b\u95f4\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u7531\u65f6\u95f4\u53cd\u6f14\u5b87\u79f0\u51b3\u5b9a\u7684\u7b80\u5355\u5bf9\u79f0\u5173\u7cfb\u3002</p> <p>\u8fd9\u5982\u540c\u7269\u7406\u5b66\u4e2d\u7684\u4e00\u9996\u8bd7\uff1a\u4e00\u4e2a\u9690\u85cf\u5728\u5fae\u89c2\u4e16\u754c\u3001\u51e1\u4eba\u65e0\u6cd5\u770b\u89c1\u7684\u65f6\u95f4\u5bf9\u79f0\u6027\uff0c\u5374\u5728\u5b8f\u89c2\u4e16\u754c\u4e2d\u53ef\u6d4b\u91cf\u7684\u8f93\u8fd0\u7cfb\u6570\u77e9\u9635\u4e0a\uff0c\u7559\u4e0b\u4e86\u5b83\u4f18\u7f8e\u7684\u5bf9\u79f0\u201c\u6307\u7eb9\u201d\u3002 \u6bd4\u5982\uff0c\u5b83\u9884\u8a00\u4e86\u52a0\u70ed\u4e00\u6839\u91d1\u5c5e\u68d2\u7684\u4e00\u7aef\u4f1a\u5728\u53e6\u4e00\u7aef\u4ea7\u751f\u7535\u538b\uff0c\u53cd\u8fc7\u6765\uff0c\u5728\u8fd9\u6839\u91d1\u5c5e\u68d2\u4e0a\u65bd\u52a0\u7535\u538b\u4e5f\u4f1a\u5bfc\u81f4\u70ed\u91cf\u7684\u8f93\u8fd0\uff0c\u5e76\u4e14\u8fd9\u4e24\u79cd\u4ea4\u53c9\u6548\u5e94\u7684\u5f3a\u5ea6\u662f\u4e25\u683c\u76f8\u5173\u7684\u3002\u8fd9\u4e00\u5b9a\u5f8b\u5b8c\u5168\u4e0d\u4f9d\u8d56\u4e8e\u91d1\u5c5e\u7684\u79cd\u7c7b\u6216\u5fae\u89c2\u7ed3\u6784\uff0c\u662f\u6240\u6709\u8fd1\u5e73\u8861\u7cfb\u7edf\u7684\u666e\u9002\u6cd5\u5219\u3002</p> <p>\u4e3a\u4e86\u6e05\u6670\u5730\u533a\u5206\u672c\u8bb2\u4e2d\u51fa\u73b0\u7684\u591a\u4e2a\u77e9\u9635\uff08\\(\\tau\\), \\(\\Gamma\\), \\(L\\), \\(N\\)\uff09\uff0c\u5b83\u4eec\u867d\u7136\u5f62\u5f0f\u76f8\u4f3c\u4f46\u7269\u7406\u89d2\u8272\u8fe5\u5f02\uff0c\u6211\u4eec\u603b\u7ed3\u5982\u4e0b\u8868\uff1a</p> \u7b26\u53f7 \u540d\u79f0 \u5b9a\u4e49 \u7269\u7406\u610f\u4e49\u4e0e\u6027\u8d28 \\(\\phi_a\\) \u70ed\u529b\u5b66\u53d8\u91cf \u5b8f\u89c2\u72b6\u6001\u53d8\u91cf \u63cf\u8ff0\u7cfb\u7edf\u5bf9\u5e73\u8861\u6001\u7684\u504f\u79bb\u3002 \\(\\mu_a\\) \u70ed\u529b\u5b66\u529b \\(\\mu_a = -\\tau_{ab} \\phi_b\\) \u9a71\u52a8\u7cfb\u7edf\u56de\u5f52\u5e73\u8861\u7684\u5e7f\u4e49\u529b\u3002 \\(\\tau_{ab}\\) \u70ed\u529b\u5b66\u77e9\u9635 \\(S = S_0 - \\frac{1}{2} \\tau_{ab} \\phi_a \\phi_b\\) \u5b9a\u4e49\u71b5\u201c\u52bf\u5792\u201d\u7684\u521a\u5ea6\u3002\u5bf9\u79f0\u77e9\u9635\uff1a\\(\\tau_{ab} = \\tau_{ba}\\)\uff0c\u4e14\u6b63\u5b9a\u3002 \\(\\Gamma_{ab}\\) \u52a8\u529b\u5b66\u77e9\u9635 \\(\\partial_t \\bar{\\phi}_a = -\\Gamma_{ab} \\bar{\\phi}_b\\) \u5173\u8054\u53d8\u91cf\u7684\u53d8\u5316\u7387\u4e0e\u5176\u5f53\u524d\u503c\u3002\u4e0d\u4e00\u5b9a\u5bf9\u79f0\u3002 \\(L_{ab}\\) \u6602\u8428\u683c\u7cfb\u6570\u77e9\u9635 \\(J_a = -L_{ad} \\mu_d\\) (\\(L = \\Gamma \\tau^{-1}\\)) \u8fde\u63a5\u70ed\u529b\u5b66\u6d41 (\\(J_a\\)) \u4e0e\u529b (\\(\\mu_d\\))\u3002\u7f16\u7801\u4e86\u7cfb\u7edf\u7684\u7ebf\u6027\u54cd\u5e94\u3002\u670d\u4ece\u5012\u6613\u5173\u7cfb \\(L_{ab} = \\epsilon_a \\epsilon_b L_{ba}\\)\u3002 \\(N_{ab}\\) \u566a\u58f0\u5173\u8054\u77e9\u9635 \\(\\langle \\xi_a(t) \\xi_b(t') \\rangle = N_{ab} \\delta(t - t')\\) \u89c4\u5b9a\u4e86\u5fae\u89c2\u968f\u673a\u529b\u7684\u5f3a\u5ea6\u548c\u5173\u8054\u3002\u5bf9\u79f0\u77e9\u9635\u3002"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#4","title":"4. \u71b5\u4ea7\u751f\u4e0e\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u68c0\u9a8c","text":"<p>\u6211\u4eec\u4ece\u5fae\u89c2\u65f6\u95f4\u5bf9\u79f0\u6027\u51fa\u53d1\uff0c\u63a8\u5bfc\u51fa\u4e86\u8f93\u8fd0\u77e9\u9635 \\(L\\) \u7684\u5bf9\u79f0\u6027\u3002\u73b0\u5728\uff0c\u6211\u4eec\u8981\u4ece\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u3001\u540c\u6837\u662f\u57fa\u672c\u7269\u7406\u539f\u7406\u7684\u89d2\u5ea6\u2014\u2014\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u2014\u2014\u6765\u8003\u5bdf \\(L\\) \u77e9\u9635\uff0c\u770b\u770b\u5b83\u8fd8\u5fc5\u987b\u6ee1\u8db3\u4ec0\u4e48\u5176\u4ed6\u7ea6\u675f\u3002\u8fd9\u4e2a\u68c0\u9a8c\u5c06\u4e3a\u6211\u4eec\u7684\u7406\u8bba\u8d4b\u4e88\u575a\u5b9e\u7684\u5b8f\u89c2\u70ed\u529b\u5b66\u57fa\u7840\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#41","title":"4.1 \u71b5\u4ea7\u751f\u7387\uff1a\u4e0d\u53ef\u9006\u8fc7\u7a0b\u7684\u201c\u5f15\u64ce\u201d","text":"<p>\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u6838\u5fc3\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b64\u7acb\u7cfb\u7edf\u81ea\u53d1\u5730\u5411\u5e73\u8861\u6001\u6f14\u5316\u7684\u8fc7\u7a0b\uff0c\u5176\u603b\u71b5\u5fc5\u987b\u589e\u52a0\uff08\u6216\u4fdd\u6301\u4e0d\u53d8\uff09\uff0c\u5373 \\(\\partial_t S \\geq 0\\)\u3002\u6211\u4eec\u6765\u8ba1\u7b97\u4e00\u4e0b\u5728\u6211\u4eec\u7406\u8bba\u6846\u67b6\u4e0b\u71b5\u7684\u53d8\u5316\u7387\u3002</p> <p>\u5229\u7528\u94fe\u5f0f\u6cd5\u5219\uff0c\u71b5\u968f\u65f6\u95f4\u7684\u6f14\u5316\u7387\u53ef\u4ee5\u5199\u6210\uff1a</p> \\[\\partial_t S(\\{\\bar{\\phi}_a(t)\\}) = \\frac{\\partial S}{\\partial \\bar{\\phi}_b} \\partial_t \\bar{\\phi}_b\\] <p>\u6211\u4eec\u7acb\u523b\u8ba4\u51fa\uff0c\u8fd9\u4e24\u9879\u6b63\u662f\u5728\u7b2c\u4e09\u8282\u4e2d\u5b9a\u4e49\u7684\u70ed\u529b\u5b66\u529b (\\(\\mu_b = \\frac{\\partial S}{\\partial \\phi_b}\\)) \u548c\u70ed\u529b\u5b66\u6d41 (\\(J_b = \\frac{\\partial \\phi_b}{\\partial t}\\))\uff01\u56e0\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u5728\u975e\u5e73\u8861\u70ed\u529b\u5b66\u4e2d\u6781\u4e3a\u91cd\u8981\u7684\u8868\u8fbe\u5f0f\uff1a</p> \\[\\partial_t S = \\sum_b \\mu_b J_b\\] <p>\u8fd9\u4e2a\u516c\u5f0f\u7684\u7269\u7406\u610f\u4e49\uff1a\u7cfb\u7edf\u7684\u603b\u71b5\u4ea7\u751f\u7387\uff0c\u7b49\u4e8e\u6240\u6709\uff08\u5e7f\u4e49\u7684\uff09\u201c\u529b\u201d\u4e0e\u5b83\u4eec\u5171\u8f6d\u7684\u201c\u6d41\u201d\u7684\u4e58\u79ef\u4e4b\u548c\u3002\u8fd9\u5c31\u50cf\u7535\u8def\u4e2d\u6d88\u8017\u7684\u603b\u529f\u7387\u7b49\u4e8e\u6240\u6709\u5143\u4ef6\u7684\uff08\u7535\u538b \u00d7 \u7535\u6d41\uff09\u4e4b\u548c\u4e00\u6837\u3002\u5b83\u91cf\u5316\u4e86\u7cfb\u7edf\u5185\u90e8\u4e0d\u53ef\u9006\u8fc7\u7a0b\u201c\u71c3\u70e7\u201d\u80fd\u91cf\u3001\u4ea7\u751f\u71b5\u7684\u901f\u5ea6\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u4e0a\u4e00\u8282\u7684\u7ebf\u6027\u5173\u7cfb \\(J_b = L_{bd}\\mu_d\\) \u4ee3\u5165\uff0c\u5f97\u5230\uff1a</p> \\[\\partial_t S = \\mu_b L_{bd} \\mu_d\\]"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#42-l","title":"4.2 \\(L\\) \u77e9\u9635\u7684\u6b63\u5b9a\u6027\uff1a\u7a33\u5b9a\u6027\u7684\u4fdd\u8bc1","text":"<p>\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u8981\u6c42\uff0c\u5bf9\u4e8e\u4efb\u4f55\u975e\u5e73\u8861\u72b6\u6001\uff08\u5373\u4efb\u4f55\u975e\u96f6\u7684\u70ed\u529b\u5b66\u529b \\(\\mu_a\\)\uff09\uff0c\u71b5\u4ea7\u751f\u7387\u5fc5\u987b\u4e3a\u6b63\uff1a\\(\\partial_t S &gt; 0\\)\u3002\u5c06\u8fd9\u4e2a\u7269\u7406\u8981\u6c42\u65bd\u52a0\u5230\u6211\u4eec\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u4e0a\uff1a</p> \\[\\mu_b L_{bd} \\mu_d &gt; 0 \\quad (\\text{for any } \\mu \\neq 0)\\] <p>\u8fd9\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u4e8c\u6b21\u578b\u8868\u8fbe\u5f0f\u3002\u5728\u7ebf\u6027\u4ee3\u6570\u4e2d\uff0c\u4e00\u4e2a\u77e9\u9635 \\(L\\) \u80fd\u591f\u4f7f\u5f97\u4e8c\u6b21\u578b \\(x^TLx\\) \u5bf9\u4efb\u4f55\u975e\u96f6\u5411\u91cf \\(x\\) \u90fd\u4e3a\u6b63\uff0c\u8fd9\u4e2a\u77e9\u9635\u5c31\u88ab\u5b9a\u4e49\u4e3a\u6b63\u5b9a\u77e9\u9635 (positive-definite matrix)\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u5f3a\u6709\u529b\u7684\u7ed3\u8bba\uff1a\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u8981\u6c42\u6602\u8428\u683c\u7cfb\u6570\u77e9\u9635 \\(L\\) \u5fc5\u987b\u662f\u6b63\u5b9a\u7684\u3002</p> <p>\u8fd9\u4e2a\u7ed3\u8bba\u7684\u7269\u7406\u610f\u4e49\u662f\uff1a * \u4fdd\u8bc1\u5e73\u8861\u6001\u7684\u7a33\u5b9a\u6027\uff1a\\(L\\) \u7684\u6b63\u5b9a\u6027\u786e\u4fdd\u4e86\u7cfb\u7edf\u4e00\u65e6\u504f\u79bb\u5e73\u8861\uff0c\u71b5\u4e00\u5b9a\u4f1a\u589e\u52a0\uff0c\u4ece\u800c\u9a71\u52a8\u7cfb\u7edf\u5fc5\u7136\u5730\u5411\u7740\u5e73\u8861\u6001\u56de\u5f52\uff0c\u800c\u4e0d\u4f1a\u81ea\u53d1\u5730\u8dd1\u5411\u66f4\u8fdc\u79bb\u5e73\u8861\u7684\u72b6\u6001\u3002 * \u6392\u9664\u201c\u6c38\u52a8\u673a\u201d\uff1a\u5b83\u7981\u6b62\u4e86\u4efb\u4f55\u51c0\u6548\u5e94\u4e3a\u71b5\u51cf\u5c11\u7684\u5b8f\u89c2\u8fc7\u7a0b\u7684\u53d1\u751f\u3002</p> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u4ece\u4e24\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u3001\u7b2c\u4e00\u6027\u7684\u7269\u7406\u539f\u7406\u4e2d\uff0c\u4e3a\u8f93\u8fd0\u7cfb\u6570\u77e9\u9635 \\(L\\) \u65bd\u52a0\u4e86\u4e24\u4e2a\u5f3a\u5927\u7684\u6570\u5b66\u7ea6\u675f\uff1a 1. \u6765\u81ea\u5fae\u89c2\u53ef\u9006\u6027 (\u7b2c3\u8282) \u2192 \\(L\\) \u5177\u6709\u5bf9\u79f0\u6027 (\\(L_{ab} = \\epsilon_a \\epsilon_b L_{ba}\\))</p> <ol> <li>\u6765\u81ea\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b (\u7b2c4\u8282) \u2192 \\(L\\) \u5fc5\u987b\u662f\u6b63\u5b9a\u7684</li> </ol> <p>\u8fd9\u4e24\u4e2a\u7ea6\u675f\u6761\u4ef6\u5171\u540c\u6784\u6210\u4e86\u6602\u8428\u683c\u7406\u8bba\u7684\u6838\u5fc3\uff0c\u5b83\u4eec\u6781\u5927\u5730\u9650\u5236\u4e86\u4efb\u4f55\u8fd1\u5e73\u8861\u7cfb\u7edf\u7684\u5b8f\u89c2\u52a8\u529b\u5b66\u884c\u4e3a\u53ef\u80fd\u5177\u6709\u7684\u5f62\u5f0f\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#5-","title":"5. \u52a8\u6001\u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff1a\u4e3a\u566a\u58f0\u5b9a\u4ef7","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u6784\u5efa\u4e86\u4e00\u4e2a\u76f8\u5f53\u5b8c\u6574\u7684\u8fd1\u5e73\u8861\u52a8\u529b\u5b66\u7406\u8bba\u3002\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u63cf\u8ff0\u7cfb\u7edf\u9759\u6001\u7a33\u5b9a\u6027\u7684\u70ed\u529b\u5b66\u77e9\u9635 \\(\\tau\\)\uff0c\u4e00\u4e2a\u63cf\u8ff0\u7cfb\u7edf\u52a8\u6001\u5f1b\u8c6b\u901f\u7387\u7684\u52a8\u529b\u5b66\u77e9\u9635 \\(\\Gamma\\)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u63cf\u8ff0\u5b8f\u89c2\u8f93\u8fd0\u7684\u6602\u8428\u683c\u77e9\u9635 \\(L\\)\u3002</p> <p>\u7136\u800c\uff0c\u5728\u6211\u4eec\u7684\u7406\u8bba\u6838\u5fc3\u2014\u2014\u6717\u4e4b\u4e07\u65b9\u7a0b \\(\\partial_t\\phi = -\\Gamma\\phi + \\xi\\) \u4e2d\uff0c\u8fd8\u6709\u4e00\u4e2a\u5173\u952e\u53c2\u6570\u7684\u8eab\u4efd\u662f\u672a\u77e5\u7684\uff1a\u566a\u58f0\u5173\u8054\u77e9\u9635 \\(N\\)\u3002\u5b83\u63cf\u8ff0\u4e86\u5fae\u89c2\u968f\u673a\u529b\u7684\u5f3a\u5ea6\uff0c\u4f46\u622a\u81f3\u76ee\u524d\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u6211\u4eec\u51ed\u7a7a\u5f15\u5165\u7684\u53c2\u6570\u3002\u8fd9\u663e\u7136\u4e0d\u80fd\u4ee4\u4eba\u6ee1\u610f\u3002\u4e00\u4e2a\u5b8c\u5907\u7684\u7406\u8bba\u5fc5\u987b\u80fd\u591f\u89e3\u91ca\u566a\u58f0\u7684\u6765\u6e90\u548c\u5927\u5c0f\u3002</p> <p>\u672c\u8282\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u5c31\u662f\u4e3a\u566a\u58f0 \\(N\\)\u201c\u5b9a\u4ef7\u201d\u3002\u6211\u4eec\u5c06\u8bc1\u660e\uff0c\\(N\\) \u5e76\u975e\u4e00\u4e2a\u9700\u8981\u989d\u5916\u6d4b\u91cf\u7684\u72ec\u7acb\u53c2\u6570\uff0c\u800c\u662f\u5b8c\u5168\u7531\u6211\u4eec\u5df2\u77e5\u7684\u3001\u63cf\u8ff0\u7cfb\u7edf\u5b8f\u89c2\u8017\u6563\u6027\u8d28\u7684\u77e9\u9635\uff08\\(L\\) \u6216 \\(\\Gamma\\) \u548c \\(\\tau\\)\uff09\u6240\u51b3\u5b9a\u3002\u8fd9\u4e2a\u6df1\u523b\u7684\u8054\u7cfb\uff0c\u5c31\u662f\u52a8\u6001\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Dynamic Fluctuation-Dissipation Theorem)\u3002</p> <p>\u6211\u4eec\u7684\u7b56\u7565\u662f\uff1a\u7528\u4e24\u79cd\u5b8c\u5168\u4e0d\u540c\u7684\u89c6\u89d2\u6765\u8ba1\u7b97\u540c\u4e00\u4e2a\u7269\u7406\u91cf\u2014\u2014\u6da8\u843d\u7684\u9891\u8c31\u5bc6\u5ea6 \\(C_{ab}(\\omega)\\)\u3002\u4e00\u6761\u8def\u4ece\u5b8f\u89c2\u54cd\u5e94\u51fa\u53d1\uff0c\u53e6\u4e00\u6761\u8def\u4ece\u5fae\u89c2\u566a\u58f0\u51fa\u53d1\u3002\u4ee4\u4e24\u8005\u6b8a\u9014\u540c\u5f52\uff0c\u6211\u4eec\u5c31\u80fd\u89e3\u5f00 \\(N\\) \u7684\u79d8\u5bc6\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#51","title":"5.1 \u89c6\u89d2\u4e00\uff1a\u4ece\u5b8f\u89c2\u54cd\u5e94\u8ba1\u7b97\u6da8\u843d\u8c31","text":"<p>\u7b2c\u4e00\u79cd\u65b9\u6cd5\u4ece\u7cfb\u7edf\u7684\u5b8f\u89c2\u54cd\u5e94\u884c\u4e3a\u51fa\u53d1\u3002\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u4e00\u4e2a\u6da8\u843d\u7684\u5e73\u5747\u8870\u51cf\u884c\u4e3a\u7531\u786e\u5b9a\u6027\u65b9\u7a0b \\(\\partial_t C(t) = -\\Gamma C(t)\\) \u63cf\u8ff0\u3002\u8fd9\u4e2a\u65b9\u7a0b\u63cf\u8ff0\u4e86\u7cfb\u7edf\u662f\u5982\u4f55\u8017\u6563 (dissipate) \u6389\u4e00\u4e2a\u6da8\u843d\u7684\u3002</p> <p>\u901a\u8fc7\u5bf9\u8fd9\u4e2a\u65f6\u57df\u65b9\u7a0b\u8fdb\u884c\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5728\u9891\u57df\u4e2d\uff0c\u6da8\u843d\u7684\u529f\u7387\u8c31\u5bc6\u5ea6 (power spectral density) \\(C(\\omega)\\)\u3002\u8fd9\u4e2a\u8c31\u5bc6\u5ea6\u544a\u8bc9\u6211\u4eec\uff0c\u7cfb\u7edf\u7684\u201c\u6da8\u843d\u80fd\u91cf\u201d\u662f\u5982\u4f55\u5728\u4e0d\u540c\u9891\u7387\uff08\u6216\u65f6\u95f4\u5c3a\u5ea6\uff09\u4e0a\u5206\u5e03\u7684\u3002\u7ecf\u8fc7\u8ba1\u7b97\uff08\u5982\u4f60\u539f\u6587\u6240\u793a\uff09\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[C(\\omega) = G(\\omega)\\tau^{-1} + (G(-\\omega)\\tau^{-1})^T\\] <p>\u5176\u4e2d\uff0c\\(G(\\omega) = (-i\\omega I + \\Gamma)^{-1}\\) \u662f\u7cfb\u7edf\u7684\u4f20\u64ad\u5b50\u6216\u54cd\u5e94\u51fd\u6570\u3002\u5b83\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5bf9\u4e00\u4e2a\u9891\u7387\u4e3a \\(\\omega\\) \u7684\u5916\u90e8\u6270\u52a8\u7684\u54cd\u5e94\u5f3a\u5ea6\u3002</p> <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7269\u7406\u56fe\u50cf\u662f\uff1a\u7cfb\u7edf\u7684\u6da8\u843d\u8c31\uff0c\u5b8c\u5168\u7531\u5b83\u7684\u5b8f\u89c2\u54cd\u5e94 (<code>G</code>) \u548c\u9759\u6001\u70ed\u529b\u5b66\u521a\u5ea6 (<code>\u03c4</code>) \u6240\u51b3\u5b9a\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#52","title":"5.2 \u89c6\u89d2\u4e8c\uff1a\u4ece\u5fae\u89c2\u566a\u58f0\u8ba1\u7b97\u6da8\u843d\u8c31","text":"<p>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5219\u76f4\u6363\u9ec4\u9f99\uff0c\u4ece\u5fae\u89c2\u566a\u58f0\u7684\u6e90\u5934\u51fa\u53d1\u3002\u6211\u4eec\u76f4\u63a5\u5bf9\u6717\u4e4b\u4e07\u65b9\u7a0b\u672c\u8eab\u8fdb\u884c\u5085\u91ccl\u00e9\u53d8\u6362\uff1a</p> \\[-i\\omega \\phi_a(\\omega) = -\\Gamma_{ab}\\phi_b(\\omega) + \\xi_a(\\omega)\\] <p>\u89e3\u51fa \\(\\phi(\\omega)\\)\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u6781\u5176\u6e05\u6670\u7684\u7269\u7406\u56fe\u50cf\uff1a</p> \\[\\phi(\\omega) = G(\\omega) \\xi(\\omega)\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u610f\u4e49\u662f\uff1a\u7cfb\u7edf\u53ef\u89c2\u6d4b\u7684\u3001\u5177\u6709\u590d\u6742\u9891\u7387\u7ed3\u6784\u7684\u6da8\u843d \\(\\phi(\\omega)\\)\uff0c\u53ea\u4e0d\u8fc7\u662f\u6765\u81ea\u5fae\u89c2\u4e16\u754c\u7684\u6700\u7eaf\u7cb9\u7684\u767d\u566a\u58f0 \\(\\xi(\\omega)\\)\uff0c\u7ecf\u8fc7\u7cfb\u7edf\u81ea\u8eab\u52a8\u529b\u5b66\u7279\u6027\uff08\u7531\u54cd\u5e94\u51fd\u6570 <code>G(\u03c9)</code> \u63cf\u8ff0\uff09\u201c\u6ee4\u6ce2\u201d\u4e4b\u540e\u7684\u7ed3\u679c\u3002 \u7cfb\u7edf\u5c31\u50cf\u4e00\u4e2a\u6ee4\u6ce2\u5668\uff0c\u5b83\u4f1a\u653e\u5927\u67d0\u4e9b\u9891\u7387\u7684\u566a\u58f0\uff0c\u540c\u65f6\u6291\u5236\u53e6\u4e00\u4e9b\u9891\u7387\u7684\u566a\u58f0\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u5229\u7528\u8fd9\u4e2a\u5173\u7cfb\u6765\u8ba1\u7b97\u6da8\u843d\u8c31 \\(C(\\omega)\\)\uff0c\u5b83\u76f4\u63a5\u4e0e\u566a\u58f0\u7684\uff08\u672a\u77e5\uff09\u5f3a\u5ea6 \\(N\\) \u76f8\u5173\uff1a</p> \\[C(\\omega) = \\langle \\phi(\\omega) \\phi(-\\omega)^T \\rangle = G(\\omega) \\langle \\xi(\\omega) \\xi(-\\omega)^T \\rangle G(-\\omega)^T = G(\\omega) N G^\\dagger(\\omega)\\]"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#53-","title":"5.3 \u5bf9\u51b3\uff1a\u63a8\u5bfc\u52a8\u6001\u6da8\u843d-\u8017\u6563\u5b9a\u7406","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u8fce\u6765\u4e86\u7406\u8bba\u7684\u51b3\u80dc\u65f6\u523b\u3002\u6211\u4eec\u6709\u4e86\u4e24\u4e2a\u5173\u4e8e\u540c\u4e00\u4e2a\u7269\u7406\u91cf \\(C(\\omega)\\) \u7684\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3002\u4e00\u4e2a\u662f\u4ece\u5b8f\u89c2\u8017\u6563\u7684\u89d2\u5ea6\u63a8\u5bfc\u7684\uff0c\u53e6\u4e00\u4e2a\u662f\u4ece\u5fae\u89c2\u6da8\u843d\u7684\u89d2\u5ea6\u63a8\u5bfc\u7684\u3002\u7269\u7406\u5b66\u7684\u81ea\u6d3d\u6027\u8981\u6c42\u8fd9\u4e24\u8005\u5fc5\u987b\u76f8\u7b49\uff1a</p> \\[G(\\omega)\\tau^{-1} + (G(-\\omega)\\tau^{-1})^T = G(\\omega) N G^\\dagger(\\omega)\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u5c31\u50cf\u4e00\u4e2a\u201c\u4fa6\u63a2\u6e38\u620f\u201d\uff0c\u552f\u4e00\u7684\u672a\u77e5\u6570\u5c31\u662f \\(N\\)\u3002\u7ecf\u8fc7\u4e00\u7cfb\u5217\u77e9\u9635\u4ee3\u6570\u8fd0\u7b97\uff08\u5229\u7528 \\(G^{-1} = -i\\omega I + \\Gamma\\)\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e2d\u552f\u4e00\u5730\u89e3\u51fa \\(N\\)\uff0c\u5f97\u5230\u672c\u8bb2\u7684\u6700\u7ec8\u6838\u5fc3\u7ed3\u679c\u2014\u2014\u52a8\u6001\u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff1a</p> \\[N = \\Gamma\\tau^{-1} + (\\Gamma\\tau^{-1})^T = L + L^T\\] <p>\u8fd9\u4e2a\u5b9a\u7406\u662f\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u5dc5\u5cf0\u6210\u5c31\u4e4b\u4e00\u3002\u5b83\u5728\u5fae\u89c2\u6da8\u843d\u548c\u5b8f\u89c2\u8017\u6563\u4e4b\u95f4\u5efa\u7acb\u4e86\u4e00\u4e2a\u666e\u9002\u7684\u3001\u5b9a\u91cf\u7684\u3001\u5728\u6240\u6709\u65f6\u95f4\u5c3a\u5ea6\u4e0a\u90fd\u6210\u7acb\u7684\u8054\u7cfb\uff1a</p> <ul> <li> <p>\u6da8\u843d (Fluctuation): \u7b49\u5f0f\u5de6\u8fb9\u7684\u566a\u58f0\u5173\u8054\u77e9\u9635 \\(N\\)\uff0c\u5b83\u523b\u753b\u4e86\u7cfb\u7edf\u5185\u90e8\u5fae\u89c2\u968f\u673a\u529b\u7684\u5f3a\u5ea6\u548c\u5173\u8054\u3002\u5b83\u662f\u7cfb\u7edf\u201c\u8e81\u52a8\u4e0d\u5b89\u201d\u7684\u91cf\u5ea6\u3002</p> </li> <li> <p>\u8017\u6563 (Dissipation): \u7b49\u5f0f\u53f3\u8fb9\u7684\u6602\u8428\u683c\u77e9\u9635\u7684\u5bf9\u79f0\u90e8\u5206 \\(L + L^T\\)\u3002\u6602\u8428\u683c\u77e9\u9635 \\(L\\) \u63cf\u8ff0\u4e86\u7cfb\u7edf\u5728\u53d7\u5230\u5916\u90e8\u9a71\u52a8\u65f6\u5982\u4f55\u54cd\u5e94\u548c\u8017\u6563\u80fd\u91cf\uff0c\u662f\u7cfb\u7edf\u201c\u963b\u5c3c\u548c\u6469\u64e6\u201d\u7684\u91cf\u5ea6\u3002</p> </li> </ul> <p>\u8fd9\u4e00\u5b9a\u7406\u5ba3\u544a\uff1a\u9a71\u52a8\u7cfb\u7edf\u6da8\u843d\u7684\u5fae\u89c2\u566a\u58f0\uff0c\u5176\u5f3a\u5ea6\u5e76\u975e\u4e00\u4e2a\u72ec\u7acb\u7684\u795e\u79d8\u53c2\u6570\uff0c\u800c\u662f\u5b8c\u5168\u7531\u7cfb\u7edf\u5b8f\u89c2\u7684\u3001\u53ef\u6d4b\u91cf\u7684\u8017\u6563\u6027\u8d28\uff08\u5982\u7535\u5bfc\u7387\u3001\u7c98\u6ede\u7cfb\u6570\u7b49\uff09\u6240\u51b3\u5b9a\u3002\u4e00\u4e2a\u7cfb\u7edf\u7684\u201c\u5185\u5728\u5608\u6742\u7a0b\u5ea6\u201d\u4e0e\u5b83\u201c\u5bf9\u5916\u6765\u5e72\u6270\u7684\u963b\u788d\u7a0b\u5ea6\u201d\u662f\u540c\u4e00\u679a\u786c\u5e01\u7684\u4e24\u9762\u3002</p> <p>\u5bf9\u4e8e\u6240\u6709\u53d8\u91cf\u90fd\u662f\u5076\u5b87\u79f0\u7684\u7b80\u5355\u60c5\u51b5\uff0c\\(L\\) \u662f\u5bf9\u79f0\u7684\uff0c\u8be5\u5b9a\u7406\u7b80\u5316\u4e3a \\(N = 2L\\)\u3002\u8fd9\u53ef\u4ee5\u770b\u4f5c\u662f\u6211\u4eec\u65e9\u5df2\u719f\u6089\u7684\u7231\u56e0\u65af\u5766\u5173\u7cfb\uff08\\(D = \\mu k_B T\\)\uff09\u5411\u591a\u53d8\u91cf\u3001\u542b\u65f6\u7cfb\u7edf\u7684\u6700\u5b8f\u4f1f\u7684\u63a8\u5e7f\u3002\u81f3\u6b64\uff0c\u6211\u4eec\u7684\u7406\u8bba\u6846\u67b6\u5b8c\u5168\u95ed\u5408\u4e14\u81ea\u6d3d\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#6-python","title":"6. \u5b9e\u8df5\u73af\u8282\uff1a\u7528Python\u6a21\u62df\u8026\u5408\u6da8\u843d","text":"<p>\u6211\u4eec\u5c06\u6a21\u62df\u4e00\u4e2a\u4e8c\u7ef4\u8026\u5408\u7684\u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b\u8fc7\u7a0b\uff08Ornstein-Uhlenbeck process\uff09\uff0c\u8fd9\u662f\u8fd9\u8282\u8bfe\u8ba8\u8bba\u7684\u7ebf\u6027\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\u7684\u5178\u578b\u4f8b\u5b50\u3002\u901a\u8fc7\u6a21\u62df\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u6570\u503c\u9a8c\u8bc1\u6211\u4eec\u5bf9\u5173\u8054\u51fd\u6570\u7684\u7406\u8bba\u9884\u6d4b\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#61","title":"6.1 \u6a21\u578b\u7cfb\u7edf","text":"<p>\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u7531\u4e24\u4e2a\u53d8\u91cf \\(\\phi_1\\) \u548c \\(\\phi_2\\) \u63cf\u8ff0\u7684\u7cfb\u7edf\uff0c\u5176\u52a8\u529b\u5b66\u7531\u4ee5\u4e0b\u65b9\u7a0b\u7ed9\u51fa\uff1a</p> \\[\\partial_t \\begin{pmatrix} \\phi_1 \\\\ \\phi_2 \\end{pmatrix} = -\\begin{pmatrix} \\Gamma_{11} &amp; \\Gamma_{12} \\\\ \\Gamma_{21} &amp; \\Gamma_{22} \\end{pmatrix} \\begin{pmatrix} \\phi_1 \\\\ \\phi_2 \\end{pmatrix} + \\begin{pmatrix} \\xi_1 \\\\ \\xi_2 \\end{pmatrix}\\] <p>\u7cfb\u7edf\u7684\u71b5\u7531\u4e0b\u5f0f\u7ed9\u51fa\uff1a</p> \\[S = -\\frac{1}{2} (\\tau_{11}\\phi_1^2 + \\tau_{22}\\phi_2^2 + 2\\tau_{12}\\phi_1\\phi_2)\\]"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#62","title":"6.2 \u4ee3\u7801\u5b9e\u73b0","text":""},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#_3","title":"\u8bbe\u7f6e\u7269\u7406\u53c2\u6570","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u5bfc\u5165\u5fc5\u8981\u7684\u5e93\u5e76\u5b9a\u4e49\u7cfb\u7edf\u7684\u7269\u7406\u53c2\u6570\uff1a\u70ed\u529b\u5b66\u77e9\u9635 \\(\\tau\\) \u548c\u52a8\u529b\u5b66\u77e9\u9635 \\(\\Gamma\\)\u3002\u4e3a\u4e86\u8ba9\u4f8b\u5b50\u66f4\u6709\u8da3\uff0c\u6211\u4eec\u5c06\u9009\u62e9\u4e00\u4e2a\u975e\u5bf9\u79f0\u7684 \\(\\Gamma\\) \u77e9\u9635\uff0c\u8fd9\u610f\u5473\u7740 \\(L\\) \u4e5f\u5c06\u662f\u975e\u5bf9\u79f0\u7684\uff0c\u8fd9\u5728\u5b58\u5728\u78c1\u573a\u6216\u65cb\u8f6c\u7684\u7cfb\u7edf\u4e2d\u5f88\u5e38\u89c1\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#_4","title":"\u63a8\u5bfc\u4f9d\u8d56\u53c2\u6570","text":"<p>\u6839\u636e\u52a8\u6001\u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff0c\u566a\u58f0\u7684\u6027\u8d28\u4e0d\u662f\u4efb\u610f\u7684\uff0c\u5b83\u5fc5\u987b\u7531\u7cfb\u7edf\u7684\u8017\u6563\u6027\u8d28\u51b3\u5b9a\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u6602\u8428\u683c\u77e9\u9635 \\(L = \\Gamma\\tau^{-1}\\)\uff0c\u7136\u540e\u5229\u7528FDT\u8ba1\u7b97\u51fa\u566a\u58f0\u5173\u8054\u77e9\u9635 \\(N = L + L^T\\)\u3002\u8fd9\u662f\u81f3\u5173\u91cd\u8981\u7684\u4e00\u6b65\uff1a\u6211\u4eec\u4e0d\u662f\u731c\u6d4b\u566a\u58f0\uff0c\u800c\u662f\u4ece\u8017\u6563\u4e2d\u63a8\u5bfc\u51fa\u566a\u58f0\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#_5","title":"\u6570\u503c\u79ef\u5206\u4e0e\u5173\u8054\u566a\u58f0\u7684\u751f\u6210","text":"<p>\u6211\u4eec\u5c06\u4f7f\u7528\u6b27\u62c9-\u4e38\u5c71 (Euler-Maruyama) \u65b9\u6cd5\u6765\u5bf9\u8fd9\u4e2a\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u7ec4\u8fdb\u884c\u6570\u503c\u79ef\u5206\u3002\u5bf9\u4e8e\u4e00\u4e2a\u65f6\u95f4\u6b65\u957f \\(dt\\)\uff0c\u66f4\u65b0\u89c4\u5219\u662f\uff1a</p> \\[ \\phi(t + dt) = \\phi(t) - \\Gamma \\phi(t) dt + \\sqrt{dt} \\cdot \\eta(t) \\] <p>\u8fd9\u91cc\u7684 \\(\\eta(t)\\) \u662f\u4e00\u4e2a\u5747\u503c\u4e3a\u96f6\u7684\u4e8c\u7ef4\u9ad8\u65af\u968f\u673a\u6570\u5411\u91cf\uff0c\u5176\u534f\u65b9\u5dee\u77e9\u9635\u4e3a \\(N\\)\u3002\u4e3a\u4e86\u751f\u6210\u5177\u6709\u8fd9\u79cd\u7279\u5b9a\u534f\u65b9\u5dee\u7684\u968f\u673a\u6570\uff0c\u6211\u4eec\u9996\u5148\u5bf9 \\(N\\) \u8fdb\u884c\u4e54\u83b1\u65af\u57fa\u5206\u89e3 (Cholesky decomposition)\uff0c\u5f97\u5230\u4e00\u4e2a\u4e0b\u4e09\u89d2\u77e9\u9635 \\(C\\) \u4f7f\u5f97 \\(N = C C^T\\)\u3002\u7136\u540e\uff0c\u6211\u4eec\u751f\u6210\u4e00\u4e2a\u7531\u4e24\u4e2a\u72ec\u7acb\u6807\u51c6\u6b63\u6001\u5206\u5e03\u968f\u673a\u6570\u7ec4\u6210\u7684\u5411\u91cf \\(z\\)\uff0c\u90a3\u4e48 \\(C z\\) \u5c31\u662f\u6211\u4eec\u6240\u9700\u8981\u7684\u5177\u6709\u534f\u65b9\u5dee \\(N\\) \u7684\u968f\u673a\u5411\u91cf\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#_6","title":"\u7cfb\u7efc\u6a21\u62df\u4e0e\u5173\u8054\u51fd\u6570\u8ba1\u7b97","text":"<p>\u4e3a\u4e86\u5f97\u5230\u5177\u6709\u7edf\u8ba1\u610f\u4e49\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u6a21\u62df\u5927\u91cf\u7684\u72ec\u7acb\u8f68\u8ff9\uff08\u4e00\u4e2a\u7cfb\u7efc\uff09\u3002\u7136\u540e\uff0c\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u542b\u65f6\u5173\u8054\u51fd\u6570 \\(C_{ab}(t) = \\langle \\phi_a(t_0+t)\\phi_b(t_0) \\rangle\\)\uff0c\u8ba1\u7b97\u65b9\u6cd5\u662f\u5728\u6240\u6709\u8f68\u8ff9\u548c\u6240\u6709\u53ef\u80fd\u7684\u8d77\u59cb\u65f6\u95f4 \\(t_0\\) \u4e0a\u8fdb\u884c\u5e73\u5747\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#_7","title":"\u9a8c\u8bc1\u4e0e\u53ef\u89c6\u5316","text":"<p>\u6700\u540e\uff0c\u6211\u4eec\u5c06\u6a21\u62df\u7ed3\u679c\u4e0e\u7406\u8bba\u9884\u6d4b\u8fdb\u884c\u6bd4\u8f83\u3002\u5173\u8054\u77e9\u9635\u7684\u7cbe\u786e\u89e3\u6790\u89e3\u662f \\(C(t) = e^{-\\Gamma t}\\tau^{-1}\\)\uff0c\u5176\u4e2d \\(e^{-\\Gamma t}\\) \u662f\u77e9\u9635\u6307\u6570\u3002\u6211\u4eec\u5c06\u628a\u6a21\u62df\u5f97\u5230\u7684\u56db\u4e2a\u5173\u8054\u51fd\u6570\uff08\\(C_{11}, C_{12}, C_{21}, C_{22}\\)\uff09\u4e0e\u5b83\u4eec\u7684\u7406\u8bba\u66f2\u7ebf\u7ed8\u5236\u5728\u540c\u4e00\u5f20\u56fe\u4e0a\u8fdb\u884c\u5bf9\u6bd4\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.linalg import expm, cholesky\n\n# --- 1. Set physical parameters ---\n# Define thermodynamic matrix tau (must be symmetric and positive definite)\n# tau_11 and tau_22 determine the \"cost\" of fluctuations of each variable\n# tau_12 describes the thermodynamic coupling between the two variables\ntau = np.array([[2.0, 0.5],\n                [0.5, 1.0]])\n\n# Define kinetic matrix Gamma (can be asymmetric)\n# Gamma_11, Gamma_22 are the relaxation rates of each variable\n# Gamma_12, Gamma_21 are the kinetic coupling coefficients\nGamma = np.array([[1.0, 0.8],\n                  [-0.2, 0.5]])\n\nprint(\"--- System Matrices ---\")\nprint(\"Thermodynamic Matrix (tau):\\n\", tau)\nprint(\"Kinetic Matrix (Gamma):\\n\", Gamma)\n\n# --- 2. Derive dependent parameters (apply theory) ---\n# Calculate the inverse of tau, which is the equal-time correlation function C(0)\ntau_inv = np.linalg.inv(tau)\nC0 = tau_inv\n\n# Calculate Onsager matrix L = Gamma * tau_inv\nL = Gamma @ tau_inv\n\n# Apply dynamic fluctuation-dissipation theorem to compute noise matrix N = L + L^T\nN = L + L.T\n\nprint(\"\\n--- Derived Matrices ---\")\nprint(\"Onsager Matrix (L):\\n\", L)\nprint(\"Noise Covariance Matrix (N):\\n\", N)\n\n# Check if L satisfies reciprocity relations (here epsilon_a=epsilon_b=1, so L should be symmetric)\n# Note: We intentionally chose an asymmetric Gamma, so L is asymmetric here.\n# This corresponds to situations where time-reversal symmetry is broken (e.g., by a magnetic field).\n# If Gamma were symmetric, L would also be symmetric.\n\n# --- 3. Numerical simulation setup ---\ndt = 0.01  # Time step\nn_steps = 500000  # Total steps\nn_trajectories = 10  # Number of simulated trajectories\n\n# Perform Cholesky decomposition of noise matrix N for generating correlated noise\n# N = C * C^T, where C is a lower triangular matrix\ntry:\n    C_noise = cholesky(N, lower=True)\n    print(\"\\nCholesky decomposition of N successful.\")\nexcept np.linalg.LinAlgError:\n    print(\"\\nError: Noise matrix N is not positive definite. Cannot proceed.\")\n    exit()\n\n# --- 4. Run ensemble simulation ---\nprint(f\"\\nRunning simulation for {n_trajectories} trajectories...\")\ntrajectories = np.zeros((n_trajectories, n_steps, 2))\n\nfor i in range(n_trajectories):\n    phi = np.zeros((n_steps, 2))\n    # Sample initial conditions from equilibrium distribution\n    # phi[0, :] = cholesky(C0, lower=True) @ np.random.randn(2)\n\n    for j in range(1, n_steps):\n        # Generate two independent standard normal random numbers\n        z = np.random.randn(2)\n        # Generate correlated noise through Cholesky factor\n        correlated_noise = C_noise @ z\n\n        # Euler-Maruyama integration step\n        drift = -Gamma @ phi[j-1, :]\n        stochastic = correlated_noise / np.sqrt(dt) # Note the dt scaling of the noise term\n\n        phi[j, :] = phi[j-1, :] + drift * dt + stochastic * dt\n\n    trajectories[i, :, :] = phi\n\nprint(\"Simulation finished.\")\n\n# --- 5. Calculate correlation functions ---\ndef calculate_correlation_function(data, max_lag):\n    \"\"\"Calculate autocorrelation and cross-correlation functions for multiple trajectories\"\"\"\n    n_traj, n_t, n_var = data.shape\n    corr = np.zeros((max_lag, n_var, n_var))\n\n    # Use FFT for efficient computation\n    for i in range(n_var):\n        for j in range(n_var):\n            for k in range(n_traj):\n                traj_i = data[k, :, i] - np.mean(data[k, :, i])\n                traj_j = data[k, :, j] - np.mean(data[k, :, j])\n\n                # Calculate cross-correlation\n                conv = np.correlate(traj_i, traj_j, mode='full')\n                corr[:, i, j] += conv[n_t-1:n_t-1+max_lag]\n\n    # Fix broadcasting error: properly normalize for each time delay\n    normalization = n_traj * (n_t - np.arange(max_lag))[:, np.newaxis, np.newaxis]\n    corr /= normalization\n    return corr\n\nmax_lag = 500  # Maximum time lag for calculating correlation functions\ntime_lags = np.arange(max_lag) * dt\nC_sim = calculate_correlation_function(trajectories, max_lag)\n\nprint(\"Correlation functions calculated.\")\n\n# --- 6. Calculate theoretical predictions and plot ---\nC_theory = np.zeros((max_lag, 2, 2))\nfor i, t in enumerate(time_lags):\n    # C(t) = exp(-Gamma * t) * C(0)\n    C_theory[i, :, :] = expm(-Gamma * t) @ C0\n\nfig, axes = plt.subplots(2, 2, figsize=(12, 10), sharex=True)\nfig.suptitle(\"Coupled Fluctuations: Simulation vs. Theory\", fontsize=16)\nlabels = [r'$C_{11}(t)$', r'$C_{12}(t)$', r'$C_{21}(t)$', r'$C_{22}(t)$']\npositions = [(0, 0), (0, 1), (1, 0), (1, 1)]\n\nfor i, pos in enumerate(positions):\n    ax = axes[pos]\n    r, c = pos\n    # Simulation results\n    ax.plot(time_lags, C_sim[:, r, c], 'o', markersize=4, alpha=0.6, label='Simulation')\n    # Theoretical curve\n    ax.plot(time_lags, C_theory[:, r, c], 'r-', linewidth=2, label='Theory')\n\n    ax.set_title(labels[i])\n    ax.set_ylabel('Correlation')\n    ax.grid(True, linestyle='--', alpha=0.6)\n    ax.legend()\n\naxes[1, 0].set_xlabel('Time lag t')\naxes[1, 1].set_xlabel('Time lag t')\n\nplt.tight_layout(rect=[0, 0, 1, 0.96])\n\nplt.savefig('Coupled_Fluctuations.png')\nplt.show()\n\n# Check the relationship between C12(t) and C21(t)\n# Since L is not symmetric, we do not expect C(t) to be symmetric.\n# C(t)^T = (expm(-Gamma*t) * C0)^T = C0^T * expm(-Gamma^T*t) = C0 * expm(-Gamma^T*t)\n# This is generally not equal to C(t). Our plots also confirm that C12(t) != C21(t).\n</code></pre> <p></p> <p>\u4ece\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6a21\u62df\u5f97\u5230\u7684\u7cfb\u7efc\u5e73\u5747\u6570\u636e\u70b9\u4e0e\u7406\u8bba\u66f2\u7ebf\u5b8c\u7f8e\u543b\u5408\u3002\u81ea\u5173\u8054\u51fd\u6570 \\(C_11(t)\\) \u548c \\(C_22(t)\\) \u5c55\u793a\u4e86\u9884\u671f\u7684\u6307\u6570\u8870\u51cf\u884c\u4e3a\u3002\u800c\u4e92\u5173\u8054\u51fd\u6570 \\(C_12(t)\\) \u548c \\(C_21(t)\\) \u5219\u5c55\u793a\u4e86\u53d8\u91cf\u4e4b\u95f4\u590d\u6742\u7684\u8026\u5408\u52a8\u6001\uff1a\u4e00\u4e2a\u53d8\u91cf\u7684\u6da8\u843d\u786e\u5b9e\u4f1a\u5f15\u53d1\u53e6\u4e00\u4e2a\u53d8\u91cf\u7684\u975e\u77ac\u65f6\u54cd\u5e94\u3002\\(C_12(t)\\) \u548c \\(C_21(t)\\) \u7684\u4e0d\u5bf9\u79f0\u6027\u3002\u8fd9\u5e76\u975e\u8bef\u5dee\uff0c\u800c\u662f\u7531\u6211\u4eec\u9009\u62e9\u7684\u975e\u5bf9\u79f0 \\(\u0393\\) \u77e9\u9635\u5bfc\u81f4\u7684\u771f\u5b9e\u7269\u7406\u6548\u5e94\u3002\u5b83\u76f4\u89c2\u5730\u5c55\u793a\u4e86\u6602\u8428\u683c-\u5361\u897f\u7c73\u5c14\u5012\u6613\u5173\u7cfb\u7684\u6df1\u523b\u5185\u6db5\uff1a\u53d8\u91cf1\u5bf9\u53d8\u91cf2\u7684\u56e0\u679c\u5f71\u54cd\uff0c\u4e0d\u4e00\u5b9a\u7b49\u4e8e\u53d8\u91cf2\u5bf9\u53d8\u91cf1\u7684\u5f71\u54cd\u3002</p>"},{"location":"zh/notes/24.%20%E6%98%82%E8%90%A8%E6%A0%BC%E7%B3%BB%E6%95%B0%E3%80%81%E5%80%92%E6%98%93%E5%85%B3%E7%B3%BB%E4%B8%8E%E5%8A%A8%E6%80%81%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%AE%9A%E7%90%86/#_8","title":"\u7ed3\u8bba\uff1a\u8fd1\u5e73\u8861\u52a8\u529b\u5b66\u7684\u7edf\u4e00\u56fe\u666f","text":"<p>\u8fd9\u8282\u8bfe\u6784\u5efa\u4e86\u4e00\u4e2a\u7528\u4e8e\u63cf\u8ff0\u4efb\u4f55\u7cfb\u7edf\u5728\u70ed\u529b\u5b66\u5e73\u8861\u6001\u9644\u8fd1\u52a8\u529b\u5b66\u884c\u4e3a\u7684\u666e\u9002\u6846\u67b6\u3002</p> <ul> <li> <p>\u6602\u8428\u683c\u5012\u6613\u5173\u7cfb\uff1a\uff0c\u6e90\u4e8e\u5fae\u89c2\u65f6\u95f4\u53ef\u9006\u6027\u7684\u57fa\u672c\u5bf9\u79f0\u539f\u7406\uff0c\u5bf9\u5b8f\u89c2\u8f93\u8fd0\u7cfb\u6570\u65bd\u52a0\u4e86\u4e25\u683c\u7684\u5bf9\u79f0\u6027\u7ea6\u675f\u3002\u8fd9\u4f7f\u5f97\u770b\u4f3c\u65e0\u5173\u7684\u7269\u7406\u8fc7\u7a0b\uff08\u5982\u70ed\u4f20\u5bfc\u548c\u7535\u4f20\u5bfc\uff09\u88ab\u6df1\u523b\u5730\u8054\u7cfb\u5728\u4e00\u8d77\u3002</p> </li> <li> <p>\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u52a8\u529b\u5b66\u4f53\u73b0\uff1a \u6211\u70ed\u529b\u5b66\u5e73\u8861\u6001\u7684\u7a33\u5b9a\u6027\u8981\u6c42\u6602\u8428\u683c\u7cfb\u6570\u77e9\u9635\u5fc5\u987b\u662f\u6b63\u5b9a\u7684\uff0c\u8fd9\u4e3a\u5b8f\u89c2\u8017\u6563\u8fc7\u7a0b\u7684\u65b9\u5411\u6027\u63d0\u4f9b\u4e86\u52a8\u529b\u5b66\u57fa\u7840\u3002</p> </li> <li> <p>\u52a8\u6001\u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff1a \u6da8\u843d\u4e0e\u8017\u6563\u4e4b\u95f4\u5728\u6574\u4e2a\u9891\u7387\u57df\u5185\u7684\u5b9a\u91cf\u5173\u7cfb \\(N = L + L^T\\)\u3002\u8fd9\u4e00\u5b9a\u7406\u662f\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u6838\u5fc3\u6210\u679c\u4e4b\u4e00\uff0c\u5b83\u5c06\u5fae\u89c2\u4e16\u754c\u7684\u968f\u673a\u6da8\u843d\u4e0e\u5b8f\u89c2\u4e16\u754c\u7684\u786e\u5b9a\u6027\u8017\u6563\u5b8c\u7f8e\u5730\u7edf\u4e00\u8d77\u6765\u3002</p> </li> </ul> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u6602\u8428\u683c\u7406\u8bba\u548c\u52a8\u6001\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u5171\u540c\u63cf\u7ed8\u4e86\u4e00\u5e45\u7269\u7406\u56fe\u666f\u3002\u5b83\u4eec\u63ed\u793a\u4e86\u5728\u968f\u673a\u7684\u5fae\u89c2\u6da8\u843d\u4e0e\u786e\u5b9a\u7684\u5b8f\u89c2\u8017\u6563\u4e4b\u95f4\uff0c\u5b58\u5728\u7740\u4e00\u79cd\u7531\u5bf9\u79f0\u6027\u4e0e\u70ed\u529b\u5b66\u539f\u7406\u6240\u652f\u914d\u7684\u3001\u6df1\u523b\u800c\u548c\u8c10\u7684\u5185\u5728\u8054\u7cfb\uff0c\u5c06\u7edf\u8ba1\u3001\u52a8\u529b\u5b66\u548c\u70ed\u529b\u5b66\u878d\u5408\u6210\u4e00\u4e2a\u5355\u4e00\u3001\u81ea\u6d3d\u7684\u7406\u8bba\u4f53\u7cfb\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/","title":"\u5f15\u8a00\uff1a\u8fc8\u5411\u52a8\u6001\u7684\u6f14\u5316\u8fc7\u7a0b\u2014\u2014\u5f1b\u8c6b\u52a8\u529b\u5b66","text":"<p>\u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0cErwin Frey \u6559\u6388\u901a\u8fc7\u6602\u8428\u683c\u7406\u8bba (Onsager's Theory) \u548c\u52a8\u6001\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Dynamic Fluctuation-Dissipation Theorem)\uff0c\u4e3a\u6211\u4eec\u5efa\u7acb\u4e86\u4e00\u5957\u5b8f\u4f1f\u4e14\u666e\u9002\u7684\u7406\u8bba\u6846\u67b6\uff0c\u5b83\u5229\u7528\u5bf9\u79f0\u6027\u548c\u70ed\u529b\u5b66\u57fa\u672c\u539f\u7406\uff0c\u4e3a\u4efb\u4f55\u63a5\u8fd1\u5e73\u8861\u7684\u7cfb\u7edf\u6240\u5fc5\u987b\u9075\u5faa\u7684\u6da8\u843d\u548c\u8017\u6563\u89c4\u5f8b\u6784\u5efa\u4e86\u7edf\u4e00\u7684\u7269\u7406\u56fe\u666f\u3002\u6211\u4eec\u63cf\u7ed8\u4e86\u4e00\u5e45\u9759\u6001\u7684\u81ea\u7531\u80fd\u666f\u89c2 (free energy landscape) \u56fe\uff1a\u7cfb\u7edf\u4f1a\u7a33\u5b9a\u5730\u5904\u4e8e\u666f\u89c2\u7684\u201c\u5c71\u8c37\u201d\u4e4b\u4e2d\u3002</p> <p>\u7136\u800c\uff0c\u4e00\u4e2a\u6839\u672c\u6027\u7684\u95ee\u9898\u4f9d\u7136\u60ac\u800c\u672a\u51b3\uff1a\u5982\u679c\u7cfb\u7edf\u6700\u521d\u5e76\u4e0d\u5728\u81ea\u7531\u80fd\u7684\u6700\u4f4e\u70b9\uff0c\u5b83\u5982\u4f55\u5230\u8fbe\u90a3\u91cc\uff1f\u7cfb\u7edf\u662f\u6cbf\u7740\u600e\u6837\u7684\u8def\u5f84\u3001\u4ee5\u591a\u5feb\u7684\u901f\u7387\u201c\u6ed1\u5411\u201d\u5e73\u8861\u6001\u7684\uff1f</p> <p>\u8fd9\u8282\u8bfe\u5c06\u8fd0\u7528\u4e0a\u4e00\u8bb2\u5efa\u7acb\u7684\u666e\u9002\u539f\u5219\uff0c\u4ece\u9759\u6001\u7684\u5e73\u8861\u6001\u63cf\u8ff0\uff0c\u8fc8\u5411\u52a8\u6001\u7684\u6f14\u5316\u8fc7\u7a0b\u3002\u6211\u4eec\u5c06\u63a2\u7d22\u7cfb\u7edf\u662f\u5982\u4f55\u5728\u81ea\u7531\u80fd\u7684\u9a71\u52a8\u4e0b\uff0c\u968f\u7740\u65f6\u95f4\u63a8\u79fb\uff0c\u9010\u6e10\u6f14\u5316\u81f3\u5e73\u8861\u7684\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u5f1b\u8c6b (relaxation)\u3002</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u63cf\u8ff0\u5f1b\u8c6b\u8fc7\u7a0b\u7684\u6700\u7b80\u6d01\u3001\u6700\u57fa\u7840\u7684\u52a8\u529b\u5b66\u6a21\u578b\u3002\u6839\u636e\u6838\u5fc3\u7269\u7406\u91cf\u2014\u2014\u5e8f\u53c2\u91cf (order parameter)\u2014\u2014\u662f\u5426\u5b88\u6052\uff0c\u8fd9\u7c7b\u6a21\u578b\u88ab\u5206\u4e3a\u4e24\u79cd\uff1a</p> <p>\u6a21\u578bA (Model A)\uff1a\u63cf\u8ff0\u975e\u5b88\u6052 (non-conserved) \u5e8f\u53c2\u91cf\u7684\u52a8\u529b\u5b66\uff0c\u8fd9\u662f\u8fd9\u8282\u8bfe\u7684\u7126\u70b9\u3002</p> <p>\u6a21\u578bB (Model B)\uff1a\u63cf\u8ff0\u5b88\u6052 (conserved) \u5e8f\u53c2\u91cf\u7684\u52a8\u529b\u5b66\uff0c\u5c06\u5728\u4e0b\u4e00\u8282\u8bfe\u63a2\u8ba8\u3002</p> <p>Erwin Frey \u6559\u6388\u5c06\u4ecb\u7ecd\uff0c\u5982\u4f55\u4ece\u51e0\u4e2a\u666e\u9002\u7684\u7269\u7406\u539f\u5219\u51fa\u53d1\uff0c\u6784\u5efa\u51fa\u4e00\u4e2a\u5f3a\u5927\u7684\u7406\u8bba\u65b9\u7a0b\u2014\u2014\u542b\u65f6\u91d1\u5179\u5821-\u6717\u9053\u65b9\u7a0b (Time-Dependent Ginzburg-Landau Equation)\u3002\u5b83\u4e0d\u4ec5\u80fd\u63cf\u8ff0\u7cfb\u7edf\u6cbf\u7740\u81ea\u7531\u80fd\u68af\u5ea6\u786e\u5b9a\u6027\u7684\u201c\u4e0b\u6ed1\u201d\uff0c\u8fd8\u80fd\u5c06\u6e29\u5ea6\u5e26\u6765\u7684\u6c38\u4e0d\u505c\u6b47\u7684\u968f\u673a\u201c\u8e22\u52a8\u201d\u4e5f\u56ca\u62ec\u5176\u4e2d\u3002\u6211\u4eec\u5c06\u770b\u5230\uff0c\u5982\u4f55\u4ece\u51e0\u4e2a\u666e\u9002\u7684\u7269\u7406\u539f\u5219\u51fa\u53d1\uff0c\u6784\u5efa\u51fa\u4e00\u4e2a\u5f3a\u5927\u7684\u7406\u8bba\uff0c\u8fd9\u4e2a\u6a21\u578b\u5c06\u6210\u4e3a\u6211\u4eec\u7406\u89e3\u66f4\u590d\u6742\u7684\u975e\u5e73\u8861\u73b0\u8c61\u7684\u57fa\u77f3\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u63cf\u8ff0\u8fde\u7eed\u76f8\u53d8\u4e34\u754c\u70b9\u9644\u8fd1\u7684\u52a8\u529b\u5b66\u884c\u4e3a\u3002</p> <p></p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#1-","title":"1. \u7406\u8bba\u57fa\u7840\u2014\u2014\u68af\u5ea6\u52a8\u529b\u5b66\u4e0e\u91d1\u5179\u5821-\u6717\u9053\u6846\u67b6","text":"<p>\u5728\u6b63\u5f0f\u6784\u5efa\u63cf\u8ff0\u7cfb\u7edf\u201c\u5982\u4f55\u201d\u5f1b\u8c6b\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u4e00\u4e2a\u5f3a\u5927\u7684\u5de5\u5177\u6765\u63cf\u7ed8\u7cfb\u7edf\u201c\u662f\u4ec0\u4e48\u201d\uff0c\u5373\u7cfb\u7edf\u5728\u5e73\u8861\u6001\u9644\u8fd1\u7684\u9759\u6001\u5c5e\u6027\u3002\u8fd9\u4e2a\u5de5\u5177\uff0c\u5c31\u662f\u51dd\u805a\u6001\u7269\u7406\u548c\u7edf\u8ba1\u529b\u5b66\u4e2d\u7684\u57fa\u77f3\u6027\u7406\u8bba\u2014\u2014\u91d1\u5179\u5821-\u6717\u9053\u7406\u8bba (Ginzburg-Landau Theory)\u3002</p> <p>\u8be5\u7406\u8bba\u7531\u82cf\u8054\u7269\u7406\u5b66\u5bb6\u7ef4\u5854\u5229\u00b7\u91d1\u5179\u5821\u548c\u5217\u592b\u00b7\u6717\u9053\u4e8e1950\u5e74\u4e3a\u63cf\u8ff0\u8d85\u5bfc\u73b0\u8c61\u800c\u63d0\u51fa\uff08\u8fd9\u9879\u6210\u5c31\u6700\u7ec8\u5e2e\u52a9\u4ed6\u4eec\u8d62\u5f97\u4e86\u8bfa\u8d1d\u5c14\u7269\u7406\u5b66\u5956\uff09\uff0c\u4f46\u5176\u601d\u60f3\u7684\u666e\u9002\u6027\u8fdc\u8d85\u4e8e\u6b64\u3002\u91d1\u5179\u5821-\u6717\u9053\u7406\u8bba\u7684\u672c\u8d28\uff0c\u662f\u4e00\u79cd\u7814\u7a76\u76f8\u53d8\u7684\u552f\u8c61\u7406\u8bba\u3002\u5b83\u7684\u6838\u5fc3\u601d\u60f3\u6781\u4e3a\u4f18\u96c5\uff1a\u5728\u8fde\u7eed\u76f8\u53d8\u70b9\u9644\u8fd1\uff0c\u7cfb\u7edf\u7684\u5b8f\u89c2\u72b6\u6001\u53ef\u4ee5\u7531\u4e00\u4e2a\u53d8\u5316\u7f13\u6162\u7684\u5e8f\u53c2\u91cf\u573a\u6765\u63cf\u8ff0\uff0c\u800c\u7cfb\u7edf\u7684\u603b\u81ea\u7531\u80fd\u53ef\u4ee5\u6839\u636e\u5bf9\u79f0\u6027\u539f\u5219\uff0c\u5c55\u5f00\u6210\u8fd9\u4e2a\u5e8f\u53c2\u91cf\u53ca\u5176\u68af\u5ea6\u7684\u5e42\u7ea7\u6570\u3002</p> <p>\u8fd9\u79cd\u201c\u4e0d\u95ee\u5fae\u89c2\u7ec6\u8282\uff0c\u53ea\u6293\u5b8f\u89c2\u5bf9\u79f0\u6027\u201d\u7684\u65b9\u6cd5\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u6210\u529f\uff0c\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u63cf\u8ff0\u94c1\u78c1\u4f53\u3001\u6db2\u6676\u3001\u8d85\u6d41\u3001\u751a\u81f3\u5b87\u5b99\u5b66\u4e2d\u7684\u76f8\u53d8\u8fc7\u7a0b\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#11","title":"1.1 \u56de\u987e\u6307\u5bfc\u539f\u5219\uff1a\u201c\u534a\u552f\u8c61\u201d\u65b9\u6cd5","text":"<p>\u5728\u6784\u5efa\u4efb\u4f55\u52a8\u529b\u5b66\u7406\u8bba\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u660e\u786e\u6307\u5bfc\u601d\u60f3\u3002\u6b63\u5982Frey\u6559\u6388\u5728\u8bb2\u5ea7\u5f00\u5934\u6240\u56de\u987e\u7684\uff0c\u6211\u4eec\u5c06\u91c7\u7528\u4e00\u79cd\u201c\u534a\u552f\u8c61 (semiphenomenological)\u201d\u65b9\u6cd5\u3002\u8fd9\u79cd\u65b9\u6cd5\u5e76\u975e\u4ece\u5fae\u89c2\u7b2c\u4e00\u6027\u539f\u7406\u51fa\u53d1\u8fdb\u884c\u63a8\u5bfc\uff0c\u800c\u662f\u5de7\u5999\u5730\u5229\u7528\u7269\u7406\u5b66\u4e2d\u6700\u6839\u672c\u7684\u666e\u9002\u539f\u5219\uff0c\u4f5c\u4e3a\u4e09\u5927\u201c\u94c1\u5f8b\u201d\u6765\u7ea6\u675f\u6211\u4eec\u7406\u8bba\u7684\u6570\u5b66\u5f62\u5f0f\u3002</p> <p>\u7ea6\u675f\u4e00\uff1a\u5c40\u57df\u70ed\u5e73\u8861 (Local Thermal Equilibrium)\uff1a \u8fd9\u662f\u6574\u4e2a\u6846\u67b6\u7684\u57fa\u77f3\u3002\u6211\u4eec\u5047\u8bbe\u7cfb\u7edf\u5728\u5b8f\u89c2\u4e0a\u867d\u7136\u5c1a\u672a\u5e73\u8861\uff0c\u4f46\u5728\u6bcf\u4e2a\u8db3\u591f\u5c0f\u7684\u65f6\u7a7a\u533a\u57df\u5185\uff0c\u5df2\u7ecf\u8fbe\u5230\u4e86\u5c40\u90e8\u7684\u70ed\u529b\u5b66\u5e73\u8861\u3002\u8fd9\u4e00\u5047\u8bbe\u7684\u5a01\u529b\u5728\u4e8e\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u5e73\u8861\u6001\u70ed\u529b\u5b66\u7684\u5f3a\u5927\u7406\u8bba\u2014\u2014\u7279\u522b\u662f\u81ea\u7531\u80fd (Free Energy)\u2014\u2014\u6765\u63cf\u8ff0\u7cfb\u7edf\u7684\u5c40\u57df\u72b6\u6001\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u7a7a\u95f4\u4f4d\u7f6e\u7684\u5c40\u57df\u81ea\u7531\u80fd\u5bc6\u5ea6\u3002</p> <p>\u7ea6\u675f\u4e8c\uff1a\u7ec6\u81f4\u5e73\u8861\u4e0e\u6602\u8428\u683c\u5173\u7cfb (Detailed Balance and Onsager Relations)\uff1a\u7ec6\u81f4\u5e73\u8861\u662f\u5e73\u8861\u6001\u7684\u4e00\u4e2a\u5f3a\u6709\u529b\u7279\u5f81\uff0c\u5b83\u8981\u6c42\u4efb\u4f55\u5fae\u89c2\u8fc7\u7a0b\u4e0e\u5176\u9006\u8fc7\u7a0b\u7684\u901f\u7387\u76f8\u7b49\u3002\u5728\u63a5\u8fd1\u5e73\u8861\u7684\u7ebf\u6027\u54cd\u5e94\u533a\u57df\uff0c\u8fd9\u4e00\u539f\u5219\u4f53\u73b0\u4e3a\u6602\u8428\u683c\u5012\u6613\u5173\u7cfb (Onsager reciprocity relations)\u3002\u5982\u679c\u6211\u4eec\u7528\u4e00\u7ec4\u5e7f\u4e49\u6d41 \\(J_a\\) \u548c\u5e7f\u4e49\u529b \\(X_b\\) \u6765\u63cf\u8ff0\u7cfb\u7edf\u7684\u5f1b\u8c6b\u8fc7\u7a0b\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\u7531\u52a8\u529b\u5b66\u7cfb\u6570\u77e9\u9635 \\(L_{ab}\\) \uff08\u5373\u6602\u8428\u683c\u7cfb\u6570\uff09\u7ed9\u51fa\uff1a\\(J_a = \\sum_b L_{ab} X_b\\)\u3002\u6602\u8428\u683c\u5173\u7cfb\u6307\u51fa\uff0c\u5728\u6ca1\u6709\u78c1\u573a\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u77e9\u9635\u662f\u5bf9\u79f0\u7684\uff0c\u5373 \\(L_{ab} = L_{ba}\\)\u3002\u8fd9\u662f\u5fae\u89c2\u53ef\u9006\u6027\u5728\u5b8f\u89c2\u52a8\u529b\u5b66\u65b9\u7a0b\u4e0a\u7684\u6df1\u523b\u4f53\u73b0\uff0c\u4e3a\u6211\u4eec\u7684\u6a21\u578b\u63d0\u4f9b\u4e86\u5f3a\u6709\u529b\u7684\u7ea6\u675f\u3002</p> <p>\u7ea6\u675f\u4e09\uff1a\u5bf9\u79f0\u6027\u4e0e\u5b88\u6052\u5f8b (Symmetries and Conservation Laws)\uff1a\u8fd9\u662f\u7269\u7406\u5b66\u4e2d\u6700\u6839\u672c\u7684\u6cd5\u5219\u3002\u6211\u4eec\u6784\u5efa\u7684\u4efb\u4f55\u52a8\u529b\u5b66\u65b9\u7a0b\u90fd\u5fc5\u987b\u201c\u5c0a\u91cd\u201d\u7cfb\u7edf\u5185\u7980\u7684\u5bf9\u79f0\u6027\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u7ecf\u5178\u7684\u4f0a\u8f9b\u6a21\u578b (Ising model)\uff0c\u5176\u80fd\u91cf\u5728\u6240\u6709\u81ea\u65cb\u53cd\u5411\uff08\\(\\phi \\to -\\phi\\)\uff09\u7684\u53d8\u6362\u4e0b\u4fdd\u6301\u4e0d\u53d8\uff0c\u6211\u4eec\u7684\u7406\u8bba\u5fc5\u987b\u53cd\u6620\u8fd9\u4e00\u70b9\u3002\u540c\u6837\uff0c\u5b88\u6052\u5f8b\u81f3\u5173\u91cd\u8981\uff0c\u4e00\u4e2a\u7269\u7406\u91cf\uff08\u5e8f\u53c2\u91cf\uff09\u662f\u5426\u5b88\u6052\uff0c\u5c06\u76f4\u63a5\u51b3\u5b9a\u5176\u52a8\u529b\u5b66\u65b9\u7a0b\u7684\u5f62\u5f0f\uff0c\u8fd9\u4e5f\u662f\u533a\u5206\u6a21\u578bA\uff08\u975e\u5b88\u6052\uff09\u548c\u6a21\u578bB\uff08\u5b88\u6052\uff09\u7684\u6838\u5fc3\u6240\u5728\u3002</p> <p>\u8fd9\u79cd\u534a\u552f\u8c61\u65b9\u6cd5\u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u7528\u4e00\u4e2a\u7edf\u4e00\u7684\u7406\u8bba\u6846\u67b6\u6765\u63cf\u8ff0\u4e00\u5927\u7c7b\u5728\u4e34\u754c\u70b9\u9644\u8fd1\u884c\u4e3a\u666e\u9002\u7684\u7269\u7406\u7cfb\u7edf\uff08\u4f8b\u5982\u78c1\u94c1\u3001\u6db2-\u6c14\u76f8\u53d8\u3001\u4e8c\u5143\u5408\u91d1\u7b49\uff09\uff0c\u800c\u65e0\u9700\u7ea0\u7f20\u4e8e\u6bcf\u4e2a\u7cfb\u7edf\u9519\u7efc\u590d\u6742\u7684\u5fae\u89c2\u7ec6\u8282\u3002\u6211\u4eec\u5229\u7528\u666e\u9002\u539f\u5219\u786e\u5b9a\u65b9\u7a0b\u7684\u5f62\u5f0f\uff0c\u800c\u65b9\u7a0b\u4e2d\u5177\u4f53\u7684\u53c2\u6570\uff08\u5982\u52a8\u529b\u5b66\u7cfb\u6570\uff09\u5219\u7559\u7ed9\u5b9e\u9a8c\u6765\u786e\u5b9a\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#12-","title":"1.2 \u91d1\u5179\u5821-\u6717\u9053\u81ea\u7531\u80fd\u6cdb\u51fd\uff1a\u63cf\u7ed8\u53ef\u80fd\u6027\u7684\u666f\u89c2","text":"<p>\u9075\u5faa\u6307\u5bfc\u539f\u5219\u4e00\uff0c\u63cf\u8ff0\u7cfb\u7edf\uff08\u7b49\u6e29\uff09\u5e73\u8861\u6001\u7684\u6838\u5fc3\u7269\u7406\u91cf\u662f\u91d1\u5179\u5821-\u6717\u9053 (Ginzburg-Landau, GL) \u81ea\u7531\u80fd\u6cdb\u51fd \\(F[\\phi]\\)\u3002\u5b83\u662f\u4e00\u4e2a\u4ee5\u5e8f\u53c2\u91cf (order parameter) \u573a \\(\\phi(\\mathbf{x})\\) \u4e3a\u53d8\u91cf\u7684\u201c\u51fd\u6570\u7684\u51fd\u6570\u201d\u3002\u5e8f\u53c2\u91cf\u662f\u4e00\u4e2a\u7c97\u7c92\u5316\u7684\u7269\u7406\u91cf\uff0c\u7528\u4e8e\u8861\u91cf\u7cfb\u7edf\u7684\u6709\u5e8f\u7a0b\u5ea6\uff0c\u4f8b\u5982\uff0c\u5728\u78c1\u6027\u7cfb\u7edf\u4e2d\uff0c\\(\\phi(\\mathbf{x})\\) \u53ef\u4ee5\u4ee3\u8868\u5728 \\(\\mathbf{x}\\) \u70b9\u9644\u8fd1\u7684\u5e73\u5747\u78c1\u5316\u5f3a\u5ea6\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u8fd0\u7528\u6307\u5bfc\u539f\u5219\u4e09\uff08\u5bf9\u79f0\u6027\uff09\uff0c\u6765\u6784\u5efa\u8fd9\u4e2a\u6cdb\u51fd\u7684\u5177\u4f53\u5f62\u5f0f\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5404\u5411\u540c\u6027\u7684\u7cfb\u7edf\uff0c\u5176\u81ea\u7531\u80fd\u6cdb\u51fd\u6700\u4e00\u822c\u7684\u5f62\u5f0f\u53ef\u4ee5\u5199\u6210\u5bf9\u6574\u4e2a\u7a7a\u95f4\u79ef\u5206\u7684\u5f62\u5f0f\uff1a</p> \\[F[\\phi] = \\int d^d x \\left[ f(\\phi) + \\frac{c}{2}(\\nabla \\phi)^2 + \\ldots \\right] \\quad \\text{}\\] <p>\u8fd9\u4e2a\u6cdb\u51fd\u7531\u4e24\u90e8\u5206\u5173\u952e\u8d21\u732e\u6784\u6210\uff1a</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#1-fphi","title":"1. \u5c40\u57df\u52bf\u80fd \\(f(\\phi)\\) \u4e0e\u81ea\u53d1\u5bf9\u79f0\u6027\u7834\u7f3a","text":"<p>\u7b2c\u4e00\u9879 \\(f(\\phi)\\) \u662f\u5c40\u57df\u81ea\u7531\u80fd\u5bc6\u5ea6 (local free energy density)\uff0c\u5b83\u53ea\u4f9d\u8d56\u4e8e\u8be5\u70b9\u7684\u5e8f\u53c2\u91cf\u503c \\(\\phi\\)\u3002\u4e3a\u4e86\u6ee1\u8db3\u4f0a\u8f9b\u6a21\u578b\u7684 \\(\\phi \\to -\\phi\\) \u5bf9\u79f0\u6027\uff0c\u5bf9 \\(f(\\phi)\\) \u7684\u6cf0\u52d2\u5c55\u5f00\u5f0f\u4e2d\u5fc5\u987b\u53ea\u5305\u542b\\(\\phi\\)\u7684\u5076\u6b21\u9879\u3002\u53d6\u5230\u6700\u5173\u952e\u7684\u56db\u6b21\u9879\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[f(\\phi) = \\frac{r}{2} \\phi^2 + \\frac{u}{4} \\phi^4 \\] <p>\u8fd9\u91cc\u7684\u53c2\u6570\u5177\u6709\u6df1\u523b\u7684\u7269\u7406\u610f\u4e49\uff1a</p> <ul> <li>\\(u &gt; 0\\)\uff1a\u8fd9\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u6b63\uff0c\u4ee5\u4fdd\u8bc1\u5f53 \\(\\phi\\) \u5f88\u5927\u65f6\u81ea\u7531\u80fd\u6709\u4e0b\u754c\uff0c\u4ece\u800c\u786e\u4fdd\u7cfb\u7edf\u7684\u70ed\u529b\u5b66\u7a33\u5b9a\u6027\u3002</li> <li>\\(r\\)\uff1a\u8fd9\u662f\u6700\u5173\u952e\u7684\u63a7\u5236\u53c2\u6570\u3002\u5b83\u901a\u5e38\u4e0e\u6e29\u5ea6 \\(T\\) \u79bb\u4e34\u754c\u6e29\u5ea6 \\(T_c\\) \u7684\u8ddd\u79bb\u6210\u6b63\u6bd4\uff0c\u5373 \\(r \\propto (T-T_c)\\)\u3002\\(r\\) \u7684\u7b26\u53f7\u51b3\u5b9a\u4e86\u81ea\u7531\u80fd\u666f\u89c2\u7684\u5f62\u72b6\uff0c\u4ece\u800c\u51b3\u5b9a\u4e86\u7cfb\u7edf\u7684\u5b8f\u89c2\u76f8\u6001\uff1a</li> <li>\u5f53 \\(r &gt; 0\\) (\u9ad8\u6e29\u533a, \\(T &gt; T_c\\))\uff1a\u6b64\u65f6 \\(f(\\phi)\\) \u7684\u56fe\u50cf\u662f\u4e00\u4e2a\u5355\u9631\u52bf\uff0c\u552f\u4e00\u7684\u6700\u5c0f\u503c\u70b9\u5728 \\(\\phi = 0\\)\u3002\u8fd9\u610f\u5473\u7740\u7cfb\u7edf\u6700\u7a33\u5b9a\u7684\u72b6\u6001\u662f\u65e0\u5e8f\u76f8\uff0c\u4f8b\u5982\u987a\u78c1\u76f8\uff0c\u5b8f\u89c2\u5e73\u5747\u78c1\u5316\u4e3a\u96f6\u3002</li> <li>\u5f53 \\(r &lt; 0\\) (\u4f4e\u6e29\u533a, \\(T &lt; T_c\\))\uff1a\u6b64\u65f6 \\(\\phi^2\\) \u9879\u7684\u7cfb\u6570\u4e3a\u8d1f\uff0c\u4f7f\u5f97 \\(f(\\phi)\\) \u5728 \\(\\phi = 0\\) \u5904\u53d8\u6210\u4e00\u4e2a\u5c40\u57df\u6781\u5927\u503c\u70b9\u3002\\(f(\\phi)\\) \u7684\u5f62\u72b6\u53d8\u4e3a\u4e00\u4e2a\"\u58a8\u897f\u54e5\u5e3d\"\u6216\"\u53cc\u9631\u52bf\"\uff0c\u5176\u6700\u5c0f\u503c\u70b9\u51fa\u73b0\u5728 \\(\\phi_0 = \\pm \\sqrt{-r/u}\\)\u3002\u7cfb\u7edf\u4e3a\u4e86\u964d\u4f4e\u81ea\u7531\u80fd\uff0c\u5fc5\u987b\u81ea\u53d1\u5730\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u6781\u5c0f\u503c\u70b9\uff0c\u5bfc\u81f4\u5b8f\u89c2\u4e0a\u51fa\u73b0\u975e\u96f6\u7684\u5e8f\u53c2\u91cf\uff08\u4f8b\u5982\uff0c\\(\\phi_0\\) \u6216 \\(-\\phi_0\\) \u7684\u81ea\u53d1\u78c1\u5316\uff09\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u8457\u540d\u7684\u81ea\u53d1\u5bf9\u79f0\u6027\u7834\u7f3a (spontaneous symmetry breaking)\u3002\u7cfb\u7edf\u539f\u672c\u7684 \\(\\phi \\to -\\phi\\) \u5bf9\u79f0\u6027\u5728\u54c8\u5bc6\u987f\u91cf\uff08\u6216\u81ea\u7531\u80fd\uff09\u4e2d\u4f9d\u7136\u5b58\u5728\uff0c\u4f46\u5728\u7cfb\u7edf\u7684\u57fa\u6001\u4e2d\u88ab\u7834\u574f\u4e86\u3002</li> </ul> <p>\u81ea\u53d1\u5bf9\u79f0\u6027\u7834\u7f3a (spontaneous symmetry breaking) \u7684\u7269\u7406\u672c\u8d28\u5728\u4e8e\uff0c\u4e00\u4e2a\u7269\u7406\u7cfb\u7edf\u6240\u9075\u5faa\u7684\u57fa\u672c\u5b9a\u5f8b\u6216\u54c8\u5bc6\u987f\u91cf\u672c\u8eab\u662f\u9ad8\u5ea6\u5bf9\u79f0\u7684\uff0c\u4f46\u7cfb\u7edf\u4e3a\u4e86\u5bfb\u6c42\u80fd\u91cf\u6700\u4f4e\u7684\u57fa\u6001\uff08\u6216\u771f\u7a7a\u6001\uff09\uff0c\u5374\u81ea\u53d1\u5730\u9009\u62e9\u4e86\u4e00\u4e2a\u7834\u574f\u8fd9\u79cd\u5bf9\u79f0\u6027\u7684\u7279\u5b9a\u72b6\u6001\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u5f62\u8c61\u5730\u6bd4\u4f5c\u4e00\u4e2a\u201c\u58a8\u897f\u54e5\u5e3d\u201d\uff1a\u5e3d\u5b50\u672c\u8eab\u662f\u5b8c\u7f8e\u7684\u8f74\u5bf9\u79f0\uff0c\u4f46\u4e00\u4e2a\u5c0f\u7403\u4e3a\u4e86\u7a33\u5b9a\uff0c\u5fc5\u987b\u4ece\u5e3d\u5b50\u9876\u7aef\u6eda\u843d\u5230\u5e3d\u6a90\u7684\u67d0\u4e00\u4e2a\u5177\u4f53\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u9009\u62e9\u5c31\u7834\u574f\u4e86\u539f\u6709\u7684\u8f74\u5bf9\u79f0\u6027\u3002\u8fd9\u4e00\u601d\u60f3\u8d77\u6e90\u4e8e\u51dd\u805a\u6001\u7269\u7406\uff08\u4f8b\u5982\u89e3\u91ca\u94c1\u78c1\u6027\uff09\uff0c\u540e\u572820\u4e16\u7eaa60\u5e74\u4ee3\u88ab\u5357\u90e8\u9633\u4e00\u90ce\u7b49\u4eba\u5f00\u521b\u6027\u5730\u5f15\u5165\u7c92\u5b50\u7269\u7406\u5b66\uff0c\u5e76\u6700\u7ec8\u6210\u4e3a\u73b0\u4ee3\u7269\u7406\u5b66\u7684\u57fa\u77f3\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u88ab\u7528\u4e8e\u89e3\u91ca\u8d85\u5bfc\u3001\u6676\u4f53\u5f62\u6210\u4ee5\u53ca\u5b87\u5b99\u65e9\u671f\u7684\u76f8\u53d8\u7b49\u6df1\u523b\u7684\u7269\u7406\u73b0\u8c61\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#2-fracc2nabla-phi2","title":"2. \u68af\u5ea6\u80fd\u91cf\u9879 \\(\\frac{c}{2}(\\nabla \\phi)^2\\)","text":"<p>\u7b2c\u4e8c\u9879\u662f\u68af\u5ea6\u80fd\u91cf\u9879\u3002\u4e3a\u4e86\u6ee1\u8db3\u7a7a\u95f4\u7684\u5e73\u79fb\u548c\u65cb\u8f6c\u5bf9\u79f0\u6027\uff0c\u8fd9\u4e00\u9879\u5fc5\u987b\u7531\u68af\u5ea6\u7684\u6807\u91cf\u5f62\u5f0f\u6784\u6210\uff0c\u6700\u4f4e\u9636\u975e\u96f6\u9879\u5c31\u662f \\((\\nabla \\phi)^2\\)\u3002\u5b83\u7684\u7269\u7406\u6765\u6e90\u662f\uff0c\u5728\u7a7a\u95f4\u4e2d\u4ea7\u751f\u5e8f\u53c2\u91cf\u7684\u4e0d\u5747\u5300\u5206\u5e03\u9700\u8981\u4ed8\u51fa\u80fd\u91cf\u4ee3\u4ef7\u3002\u4f8b\u5982\uff0c\u5728\u78c1\u6027\u7cfb\u7edf\u4e2d\uff0c\u5f62\u6210\u4e00\u4e2a\u201c\u81ea\u65cb\u5411\u4e0a\u201d\u533a\u57df\u548c\u4e00\u4e2a\u201c\u81ea\u65cb\u5411\u4e0b\u201d\u533a\u57df\u4e4b\u95f4\u7684\u7574\u58c1 (domain wall) \u662f\u9700\u8981\u6d88\u8017\u80fd\u91cf\u7684\u3002\u7cfb\u6570 \\(c &gt; 0\\) \u8861\u91cf\u4e86\u5e8f\u53c2\u91cf\u7684\u201c\u521a\u5ea6 (stiffness)\u201d\uff0c\\(c\\) \u8d8a\u5927\uff0c\u5f62\u6210\u4e0d\u5747\u5300\u7ed3\u6784\u7684\u80fd\u91cf\u4ee3\u4ef7\u5c31\u8d8a\u9ad8\uff0c\u7cfb\u7edf\u5c31\u8d8a\u503e\u5411\u4e8e\u4fdd\u6301\u5747\u5300\u3002</p> <p>\\((\\nabla \\phi)^2\\) \u8fd9\u4e2a\u5f62\u5f0f\u662f\u6765\u81ea\u5bf9\u79f0\u6027\u7684\u201c\u94c1\u5f8b\u201d\u5bf9\u4e8e\u4e00\u4e2a\u5747\u5300\u7684\u7cfb\u7edf\uff08\u6bd4\u5982\u4e00\u5757\u7eaf\u94c1\uff09\uff0c\u7269\u7406\u89c4\u5f8b\u4e0d\u5e94\u8be5\u56e0\u4e3a\u6211\u4eec\u5e73\u79fb\u6216\u65cb\u8f6c\u4e86\u5750\u6807\u7cfb\u800c\u6539\u53d8\u3002\u81ea\u7531\u80fd\u4f5c\u4e3a\u4e00\u4e2a\u63cf\u8ff0\u7cfb\u7edf\u6574\u4f53\u6027\u8d28\u7684\u6807\u91cf\uff0c\u4e5f\u5fc5\u987b\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\uff1a</p> <ul> <li>\u5e73\u79fb\u4e0d\u53d8\u6027\uff1a\u81ea\u7531\u80fd\u53ea\u80fd\u4f9d\u8d56\u4e8e\u5e8f\u53c2\u91cf\u7684\u53d8\u5316\uff0c\u800c\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u7edd\u5bf9\u7684\u7a7a\u95f4\u5750\u6807\\(\\vec{x}\\)\u3002</li> <li>\u65cb\u8f6c\u4e0d\u53d8\u6027\uff1a\u81ea\u7531\u80fd\u5fc5\u987b\u662f\u4e00\u4e2a\u6807\u91cf\uff0c\u4e0d\u80fd\u6709\u65b9\u5411\u3002</li> </ul> <p>\u6211\u4eec\u80fd\u7528\u6765\u63cf\u8ff0\u7a7a\u95f4\u53d8\u5316\u7684\u201c\u79ef\u6728\u201d\u5c31\u662f\u5e8f\u53c2\u91cf\u7684\u68af\u5ea6 \\(\\nabla \\phi\\)\u3002\u7136\u800c\uff0c\\(\\nabla \\phi\\) \u672c\u8eab\u662f\u4e00\u4e2a\u77e2\u91cf\uff0c\u5b83\u6709\u65b9\u5411\u3002\u5982\u679c\u6211\u4eec\u76f4\u63a5\u628a\u5b83\u653e\u8fdb\u81ea\u7531\u80fd\uff0c\u5c31\u4f1a\u7834\u574f\u65cb\u8f6c\u4e0d\u53d8\u6027\u3002\u90a3\u4e48\uff0c\u5982\u4f55\u7528\u4e00\u4e2a\u77e2\u91cf\u6784\u9020\u51fa\u6700\u7b80\u5355\u7684\u6807\u91cf\u5462\uff1f\u7b54\u6848\u5c31\u662f\u5c06\u5b83\u4e0e\u81ea\u8eab\u505a\u70b9\u4e58\uff1a\\((\\nabla \\phi) \\cdot (\\nabla \\phi) = (\\nabla \\phi)^2\\)\u3002\u8fd9\u5c31\u662f\u6ee1\u8db3\u5bf9\u79f0\u6027\u8981\u6c42\u7684\u3001\u6700\u4f4e\u9636\u7684\u975e\u96f6\u68af\u5ea6\u9879\u3002</p> <p>\u6559\u6388\u63d0\u5230\u7684\u4f0a\u8f9b\u6a21\u578b (Ising model)\uff0c\u5176\u80fd\u91cf\u7531\u54c8\u5bc6\u987f\u91cf \\(\\mathcal{H} = -J \\sum_{\\langle ij \\rangle} \\sigma_i \\sigma_j\\) \u63cf\u8ff0\u3002</p> <ul> <li>\u5b8c\u7f8e\u6709\u5e8f\uff1a\u5728\u4e00\u4e2a\u5168\u90fd\u662f\u201c\u81ea\u65cb\u5411\u4e0a\u201d\u7684\u533a\u57df\uff0c\u6240\u6709\u76f8\u90bb\u81ea\u65cb\u5bf9 \\((\\sigma_i, \\sigma_j)\\) \u7684\u4e58\u79ef\u90fd\u662f \\((+1)(+1)=1\\)\uff0c\u5bf9\u80fd\u91cf\u7684\u8d21\u732e\u662f \\(-J\\)\u3002\u8fd9\u662f\u80fd\u91cf\u6700\u4f4e\u7684\u72b6\u6001\u3002</li> <li>\u7574\u58c1 (Domain Wall)\uff1a\u73b0\u5728\u60f3\u8c61\u4e00\u6761\u7ebf\uff0c\u7ebf\u7684\u5de6\u8fb9\u5168\u662f\u201c\u81ea\u65cb\u5411\u4e0a\u201d\uff0c\u53f3\u8fb9\u5168\u662f\u201c\u81ea\u65cb\u5411\u4e0b\u201d\u3002\u5728\u8fd9\u6761\u7ebf\u4e0a\uff0c\u4f1a\u6709\u5f88\u591a\u76f8\u90bb\u7684\u81ea\u65cb\u5bf9\u662f\u201c\u4e0a\u201d\u548c\u201c\u4e0b\u201d\u6328\u5728\u4e00\u8d77\u7684\u3002\u8fd9\u65f6\uff0c\u5b83\u4eec\u7684\u4e58\u79ef\u662f \\((+1)(-1)=-1\\)\uff0c\u5bf9\u80fd\u91cf\u7684\u8d21\u732e\u53d8\u6210\u4e86\\(+J\\)\u3002</li> <li>\u4ece\u5fae\u89c2\u5230\u5b8f\u89c2\uff1a\u6bcf\u4e00\u5bf9\u201c\u53cd\u5411\u201d\u7684\u76f8\u90bb\u81ea\u65cb\uff0c\u90fd\u4f7f\u5f97\u7cfb\u7edf\u7684\u80fd\u91cf\u6bd4\u5b8c\u7f8e\u6709\u5e8f\u65f6\u66f4\u9ad8\u3002\u4e00\u4e2a\u5feb\u901f\u53d8\u5316\u7684\u7a7a\u95f4\u5206\u5e03\uff08\u5373\u5927\u7684 \\(\\nabla \\phi\\)\uff09\uff0c\u5c31\u5bf9\u5e94\u7740\u5728\u5fae\u89c2\u5c42\u9762\u5b58\u5728\u7740\u5927\u91cf\u7684\u8fd9\u79cd\u201c\u53cd\u5411\u201d\u90bb\u5c45\u3002\u56e0\u6b64\uff0c\u68af\u5ea6\u80fd\u91cf\u9879 \\((\\nabla \\phi)^2\\) \u6b63\u662f\u8fd9\u79cd\u5fae\u89c2\u76f8\u4e92\u4f5c\u7528\u80fd\u91cf\u4ee3\u4ef7\u5728\u5b8f\u89c2\u8fde\u7eed\u573a\u8bba\u4e2d\u7684\u4f53\u73b0\u3002</li> </ul> <p>\u7cfb\u6570 \\(c\\) \u8861\u91cf\u4e86\u7cfb\u7edf\u62b5\u6297\u7a7a\u95f4\u53d8\u5316\u7684\u201c\u610f\u613f\u201d\u3002\u4f60\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u4e00\u5757\u5e03\u6599\u7684\u633a\u62ec\u7a0b\u5ea6\uff1a</p> <ul> <li>\\(c\\) \u5f88\u5927\uff1a\u50cf\u4e00\u5757\u786c\u8d28\u5e06\u5e03\u3002\u5b83\u6781\u529b\u60f3\u4fdd\u6301\u5e73\u6574\uff08\\(\\phi\\) \u5747\u5300\uff09\uff0c\u5f62\u6210\u4e00\u4e2a\u8936\u76b1\uff08\u7574\u58c1\uff09\u9700\u8981\u8017\u8d39\u5f88\u5927\u7684\u80fd\u91cf\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u7cfb\u7edf\u4e2d\uff0c\u5f62\u6210\u7684\u201c\u78c1\u7574\u201d\u4f1a\u975e\u5e38\u5927\uff0c\u7574\u58c1\u4e5f\u4f1a\u5f88\u5bbd\u3001\u5f88\u5e73\u6ed1\u3002</li> <li>\\(c\\) \u5f88\u5c0f\uff1a\u50cf\u4e00\u5757\u67d4\u8f6f\u7684\u4e1d\u7ef8\u3002\u5b83\u53ef\u4ee5\u8f7b\u6613\u5730\u5f62\u6210\u5404\u79cd\u590d\u6742\u7684\u8936\u76b1\u56fe\u6848\uff08\\(\\phi\\) \u5267\u70c8\u53d8\u5316\uff09\u3002\u5728\u8fd9\u79cd\u7cfb\u7edf\u4e2d\uff0c\u78c1\u7574\u53ef\u4ee5\u5f88\u5c0f\uff0c\u7574\u58c1\u4e5f\u53ef\u4ee5\u5f88\u7a84\u3001\u5f88\u5c16\u9510\u3002</li> </ul> <p>\u6240\u4ee5\uff0c\u8fd9\u4e2a\u68af\u5ea6\u80fd\u91cf\u9879\u4e0d\u4ec5\u662f\u6570\u5b66\u4e0a\u6ee1\u8db3\u5bf9\u79f0\u6027\u7684\u9700\u8981\uff0c\u5b83\u66f4\u662f\u5fae\u89c2\u76f8\u4e92\u4f5c\u7528\u5728\u5b8f\u89c2\u5c3a\u5ea6\u4e0a\u7684\u7269\u7406\u4f53\u73b0\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#_2","title":"\u7701\u7565\u7684\u9879\u662f\u4ec0\u4e48\uff1f","text":"<p>\u503c\u5f97\u8bf4\u660e\u7684\u662f\uff0c\\(F[\\phi]\\)\u516c\u5f0f\u4e2d\u7684\u7701\u7565\u53f7 \"...\" \u4ee3\u8868\u4e86\u6211\u4eec\u5728\u8fd9\u4e2a\u552f\u8c61\u7406\u8bba\u4e2d\u5ffd\u7565\u6389\u7684\u6240\u6709\u66f4\u9ad8\u9636\u7684\u9879\u3002</p> <p>\u91d1\u5179\u5821-\u6717\u9053\u7406\u8bba\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u5728\u5e8f\u53c2\u91cf \\(\\phi\\) \u53ca\u5176\u68af\u5ea6 \\(\\nabla \\phi\\) \u90fd\u5f88\u5c0f\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u7684\u6cf0\u52d2\u5c55\u5f00\u3002\u6211\u4eec\u53ea\u4fdd\u7559\u4e86\u5bf9\u63cf\u8ff0\u76f8\u53d8\u73b0\u8c61\u6700\u91cd\u8981\u3001\u6700\u4f4e\u9636\u7684\u51e0\u9879\u3002\u7701\u7565\u53f7\u4ee3\u8868\u7684\u9879\u5305\u62ec\uff1a</p> <ul> <li>\u66f4\u9ad8\u6b21\u7684\u5e8f\u53c2\u91cf\u9879\uff1a\u5982 \\(\\phi^6\\), \\(\\phi^8\\) \u7b49\u3002</li> <li>\u66f4\u9ad8\u6b21\u7684\u68af\u5ea6\u9879\uff1a\u5982 \\((\\nabla \\phi)^4\\), \\((\\nabla^2 \\phi)^2\\) (\u8fd9\u4ee3\u8868\u4e86\u201c\u5f2f\u66f2\u201d\u80fd\u91cf) \u7b49\u3002</li> <li>\u6df7\u5408\u9879\uff1a\u5982 \\(\\phi^2 (\\nabla \\phi)^2\\) \u7b49\u3002</li> </ul> <p>\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u5fc3\u5b89\u7406\u5f97\u5730\u5ffd\u7565\u5b83\u4eec\u5462\uff1f\u8fd9\u80cc\u540e\u662f\u91d1\u5179\u5821-\u6717\u9053\u7406\u8bba\u7684\u6838\u5fc3\u9002\u7528\u8303\u56f4\uff1a\u8fde\u7eed\u76f8\u53d8\uff08\u6216\u79f0\u4e8c\u9636\u76f8\u53d8\uff09\u7684\u4e34\u754c\u70b9\u9644\u8fd1\u3002</p> <ul> <li>\u5728\u4e34\u754c\u70b9\u9644\u8fd1\uff0c\u5e8f\u53c2\u91cf \\(\\phi\\) \u7684\u503c\u672c\u8eab\u5c31\u662f\u65e0\u7a77\u5c0f\u7684\u3002\u56e0\u6b64\uff0c\\(\\phi^6\\) \u9879\u4f1a\u6bd4 \\(\\phi^4\\) \u9879\u5c0f\u5f97\u591a\u5f97\u591a\uff0c\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002</li> <li>\u6211\u4eec\u8fd8\u5047\u8bbe\u5e8f\u53c2\u91cf\u5728\u7a7a\u95f4\u4e0a\u662f\u7f13\u6162\u53d8\u5316\u7684\u3002\u8fd9\u610f\u5473\u7740\u68af\u5ea6 \\(\\nabla \\phi\\) \u4e5f\u5f88\u5c0f\u3002\u56e0\u6b64\uff0c\u66f4\u9ad8\u9636\u7684\u68af\u5ea6\u9879\uff0c\u5982 \\((\\nabla \\phi)^4\\)\uff0c\u4e5f\u8fdc\u5c0f\u4e8e \\((\\nabla \\phi)^2\\) \u9879\uff0c\u540c\u6837\u53ef\u4ee5\u5ffd\u7565\u3002</li> </ul> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u4fdd\u7559\u7684 \\(f(\\phi) = \\frac{r}{2}\\phi^2 + \\frac{u}{4}\\phi^4\\) \u548c \\(\\frac{c}{2}(\\nabla \\phi)^2\\) \u662f\u6293\u4f4f\u76f8\u53d8\u7269\u7406\u672c\u8d28\u7684\u6700\u7b80\u5316\u3001\u6700\u76f8\u5173\u7684\u9879\u3002\u7701\u7565\u53f7\u63d0\u9192\u6211\u4eec\uff0c\u8fd9\u662f\u4e00\u4e2a\u8fd1\u4f3c\u7406\u8bba\uff0c\u4f46\u6b63\u56e0\u4e3a\u8fd9\u4e2a\u5de7\u5999\u7684\u8fd1\u4f3c\uff0c\u6211\u4eec\u624d\u80fd\u6784\u5efa\u51fa\u4e00\u4e2a\u666e\u9002\u4e14\u53ef\u89e3\u7684\u6a21\u578b\uff0c\u6210\u529f\u63cf\u8ff0\u4e00\u5927\u7c7b\u4e0d\u540c\u7269\u7406\u7cfb\u7edf\u7684\u4e34\u754c\u884c\u4e3a\u3002</p> <p>\u88681\uff1a\u91d1\u5179\u5821-\u6717\u9053\u53c2\u6570\u7269\u7406\u610f\u4e49\u6c47\u603b</p> \u7b26\u53f7 \u540d\u79f0 \u7269\u7406\u610f\u4e49/\u4f5c\u7528 \\(\\phi(x)\\) \u5e8f\u53c2\u91cf\u573a \u8861\u91cf\u7cfb\u7edf\u5728\u7a7a\u95f4\u70b9 \\(x\\) \u7684\u5c40\u57df\u6709\u5e8f\u7a0b\u5ea6\uff0c\u5982\u5c40\u57df\u78c1\u5316\u5f3a\u5ea6\u3002 \\(F[\\phi]\\) GL\u81ea\u7531\u80fd\u6cdb\u51fd \u7cfb\u7edf\u7684\u603b\u81ea\u7531\u80fd\uff0c\u662f\u5e8f\u53c2\u91cf\u573a\u7684\u51fd\u6570\u3002\u5176\u6700\u5c0f\u503c\u5bf9\u5e94\u7cfb\u7edf\u7684\u5e73\u8861\u6001\u3002 \\(f(\\phi)\\) \u5c40\u57df\u81ea\u7531\u80fd\u5bc6\u5ea6 \u81ea\u7531\u80fd\u4e2d\u4e0d\u4f9d\u8d56\u4e8e\u7a7a\u95f4\u53d8\u5316\u7684\u90e8\u5206\uff0c\u5176\u5f62\u72b6\u51b3\u5b9a\u4e86\u7cfb\u7edf\u7684\u76f8\u6001\u3002 \\(r\\) \u6e29\u5ea6\u53c2\u6570 \u63a7\u5236\u76f8\u53d8\u7684\u5173\u952e\u53c2\u6570\uff0c\u901a\u5e38 \\(r \\propto (T - T_c)\\)\u3002\\(r &gt; 0\\) \u5bf9\u5e94\u65e0\u5e8f\u76f8, \\(r &lt; 0\\) \u5bf9\u5e94\u6709\u5e8f\u76f8\u3002 \\(u\\) \u7a33\u5b9a\u6027\u53c2\u6570 \u4fdd\u8bc1\u7cfb\u7edf\u7a33\u5b9a\u6027\u7684\u56db\u6b21\u9879\u7cfb\u6570\uff0c\u5fc5\u987b\u4e3a\u6b63\u3002 \\(c\\) \u521a\u5ea6\u7cfb\u6570 \u68af\u5ea6\u80fd\u91cf\u9879\u7684\u7cfb\u6570\uff0c\u60e9\u7f5a\u5e8f\u53c2\u91cf\u7684\u7a7a\u95f4\u4e0d\u5747\u5300\u6027\uff0c\u4e0e\u7574\u58c1\u80fd\u91cf\u76f8\u5173\u3002 \\(T_c\\) \u4e34\u754c\u6e29\u5ea6 \u53d1\u751f\u8fde\u7eed\u76f8\u53d8\u7684\u6e29\u5ea6\u70b9\uff0c\u5bf9\u5e94 \\(r = 0\\)\u3002"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#1","title":"\u4ee3\u7801\u5b9e\u73b01\uff1a\u53ef\u89c6\u5316\u81ea\u7531\u80fd\u666f\u89c2","text":"<p>\u4e3a\u4e86\u66f4\u76f4\u89c2\u5730\u7406\u89e3\u81ea\u53d1\u5bf9\u79f0\u6027\u7834\u7f3a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Python\u6765\u7ed8\u5236\u5c40\u57df\u81ea\u7531\u80fd\u5bc6\u5ea6 \\(f(\\phi)\\) \u7684\u56fe\u50cf\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u5728 \\(r &gt; 0\\) \u548c \\(r &lt; 0\\) \u4e24\u79cd\u60c5\u51b5\u4e0b \\(f(\\phi)\\) \u7684\u4e0d\u540c\u5f62\u6001\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# Set matplotlib to support Chinese display\nplt.rcParams['font.sans-serif'] = ['SimHei', 'FangSong', 'Microsoft YaHei']  # Specify default font\nplt.rcParams['axes.unicode_minus'] = False  # Solve the problem that the minus sign '-' is displayed as a square when saving the image\n\ndef gld_potential(phi, r, u):\n    \"\"\"\n    Calculate the Ginzburg-Landau local free energy density f(\u03c6).\n\n    Parameters:\n    phi (np.ndarray): Order parameter values\n    r (float): Temperature parameter\n    u (float): Stability parameter\n\n    Returns:\n    np.ndarray: Free energy density f(\u03c6)\n    \"\"\"\n    return 0.5 * r * phi**2 + 0.25 * u * phi**4\n\n# Define parameters\nu = 1.0  # Stability parameter, kept positive\nphi_range_3d = np.linspace(-2.5, 2.5, 100)\n\n# Create a 3D figure with dark background\nfig = plt.figure(figsize=(14, 10), facecolor='black')\nax = fig.add_subplot(111, projection='3d')\nax.xaxis.pane.fill = True\nax.yaxis.pane.fill = True\nax.zaxis.pane.fill = True\nax.xaxis.pane.set_color('black')\nax.yaxis.pane.set_color('black')\nax.zaxis.pane.set_color('black')\nax.xaxis.pane.set_edgecolor('white')\nax.yaxis.pane.set_edgecolor('white')\nax.zaxis.pane.set_edgecolor('white')\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\nax.tick_params(axis='z', colors='white')\n\n# Set title and axis labels with detailed information\nax.set_title('3D Ginzburg-Landau Free Energy Landscape $f(\\\\phi, r)$\\nHigh Temperature (r &gt; 0) \u2192 Low Temperature (r &lt; 0)', \n             color='white', fontsize=14, pad=20)\nax.set_xlabel('Order Parameter $\\\\phi$\\n(-2.5 to 2.5)', color='white', labelpad=10)\nax.set_ylabel('Parameter $r$\\n(Positive: T &gt; T$_c$ | Negative: T &lt; T$_c$)', color='white', labelpad=10)\nax.set_zlabel('Free Energy Density $f(\\\\phi, r)$', color='white', labelpad=10)\n\n# Create two separate surfaces for r &gt; 0 and r &lt; 0 cases\n# r &gt; 0 (High temperature, disordered phase)\nr_range_positive = np.linspace(0.1, 2.0, 50)\nPhi_3d_pos, R_3d_pos = np.meshgrid(phi_range_3d[::2], r_range_positive)\nF_3d_positive = 0.5 * R_3d_pos * Phi_3d_pos**2 + 0.25 * u * Phi_3d_pos**4\n\n# r &lt; 0 (Low temperature, ordered phase)\nr_range_negative = np.linspace(-2.0, -0.1, 50)\nPhi_3d_neg, R_3d_neg = np.meshgrid(phi_range_3d[::2], r_range_negative)\nF_3d_negative = 0.5 * R_3d_neg * Phi_3d_neg**2 + 0.25 * u * Phi_3d_neg**4\n\n# Plot both surfaces\nsurf1 = ax.plot_surface(Phi_3d_pos, R_3d_pos, F_3d_positive, cmap='viridis', alpha=0.8, label='r &gt; 0 (T &gt; T_c) - Disordered Phase')\nsurf2 = ax.plot_surface(Phi_3d_neg, R_3d_neg, F_3d_negative, cmap='plasma', alpha=0.8, label='r &lt; 0 (T &lt; T_c) - Ordered Phase')\n\n# Add annotations for key features\n# For r &gt; 0 case: single minimum at phi = 0\nax.plot([0], [1.0], [0], 'ro', markersize=10)\nax.text(0.8, 1.5, 0.4, 'Unique minimum\\n$\\\\phi = 0$\\n(Disordered Phase)', color='white', fontsize=10,\n        bbox=dict(boxstyle=\"round,pad=0.3\", facecolor='black', edgecolor='white'))\n\n# Add critical point indicator\nax.plot([0], [0], [0], 'wo', markersize=8)\nax.text(0.9, 0.6, 0.8, 'Critical Point\\nr = 0\\nPhase Transition', \n        color='white', fontsize=9,\n        bbox=dict(boxstyle=\"round,pad=0.3\", facecolor='black', edgecolor='yellow'))\n\n# For r &lt; 0 case: degenerate minima at phi = \u00b1\u221a(-r/u)\nphi_min_pos = np.sqrt(-(-1.0) / u)  # For r = -1.0\nphi_min_neg = -phi_min_pos\nf_min = 0.5 * (-1.0) * phi_min_pos**2 + 0.25 * u * phi_min_pos**4\nax.plot([phi_min_pos, phi_min_neg], [-1.0, -1.0], [f_min, f_min], 'co', markersize=10)\nax.text(phi_min_pos+0.5, -1.5, f_min+0.5, 'Degenerate minima\\n$\\\\phi = \\\\pm\\\\sqrt{-r/u}$\\n(Ordered Phase)', \n        color='white', fontsize=10, bbox=dict(boxstyle=\"round,pad=0.3\", facecolor='black', edgecolor='white'))\n\nplt.tight_layout()\nplt.show()\n</code></pre> </p> <p>\u4e09\u4e2a\u7ef4\u5ea6\uff1a \u8be5\u56fe\u7684\u4e09\u4e2a\u5750\u6807\u8f74\u5206\u522b\u4ee3\u8868\u4e86\u5e8f\u53c2\u91cf \\(\\phi\\)\uff08\u7cfb\u7edf\u7684\u6709\u5e8f\u7a0b\u5ea6\uff09\u3001\u63a7\u5236\u53c2\u6570\uff08 \\(r\\)\u4e0e\u6e29\u5ea6\u76f8\u5173\uff09\u4ee5\u53ca\u81ea\u7531\u80fd\u5bc6\u5ea6 \\(f(\\phi, r)\\)\u3002\u6574\u4e2a\u5f69\u8272\u66f2\u9762\u5c31\u662f\u7cfb\u7edf\u7684\u201c\u81ea\u7531\u80fd\u5730\u8c8c\u201d\uff0c\u5728\u4efb\u4f55\u7ed9\u5b9a\u7684\u6e29\u5ea6\uff08\u5373\u7ed9\u5b9a\u7684\\(r\\)\u503c\uff09\u4e0b\uff0c\u7cfb\u7edf\u603b\u662f\u4f1a\u5411\u7740\u80fd\u91cf\u6700\u4f4e\u7684\u201c\u5c71\u8c37\u201d\u6f14\u5316\u3002</p> <ul> <li> <p>\u9ad8\u6e29\u65e0\u5e8f\u533a (\\(r &gt; 0\\))\uff1a\u7eff\u8272-\u9ec4\u8272\u66f2\u9762\uff0c\u5bf9\u5e94\u4e8e\u9ad8\u6e29\u533a\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a \\(r&gt;0\\) \u7684\u5207\u7247\uff0c\u81ea\u7531\u80fd\u5730\u8c8c\u90fd\u5448\u73b0\u4e3a\u4e00\u4e2a\u5355\u9631\u52bf\uff0c\u5176\u552f\u4e00\u7684\u6700\u4f4e\u70b9\uff08\u7ea2\u8272\u5706\u70b9\u6807\u6ce8\uff09\u59cb\u7ec8\u4f4d\u4e8e \\(\\phi = 0\\)\u3002\u8fd9\u4ee3\u8868\u4e86\u7cfb\u7edf\u7684\u65e0\u5e8f\u76f8 (disordered phase)\uff0c\u5b8f\u89c2\u4e0a\u6ca1\u6709\u51c0\u5e8f\u53c2\u91cf\u4ea7\u751f\u3002</p> </li> <li> <p>\u4f4e\u6e29\u6709\u5e8f\u533a (\\(r &lt; 0\\))\uff1a\u7d2b\u8272-\u84dd\u8272\u66f2\u9762\uff0c\u5bf9\u5e94\u4e8e\u4f4e\u6e29\u533a\u3002\u5f53\\(r\\)\u7a7f\u8fc70\u70b9\u53d8\u4e3a\u8d1f\u503c\u540e\uff0c\u666f\u89c2\u7684\u62d3\u6251\u7ed3\u6784\u53d1\u751f\u4e86\u6839\u672c\u6027\u7684\u6539\u53d8\uff1a\u4e2d\u5fc3\u70b9 \\(\\phi = 0\\) \u4ece\u4e00\u4e2a\u7a33\u5b9a\u7684\u201c\u5c71\u8c37\u201d\u9686\u8d77\u4e3a\u4e00\u4e2a\u4e0d\u7a33\u5b9a\u7684\u201c\u5c71\u5cf0\u201d\uff0c\u800c\u5728\u5176\u4e24\u4fa7\u5219\u5bf9\u79f0\u5730\u51fa\u73b0\u4e86\u4e24\u4e2a\u65b0\u7684\u3001\u80fd\u91cf\u66f4\u4f4e\u7684\u201c\u5c71\u8c37\u201d\uff08\u9752\u8272\u5706\u70b9\u6807\u6ce8\uff09\u3002\u8fd9\u4ee3\u8868\u4e86\u7cfb\u7edf\u7684\u6709\u5e8f\u76f8 (ordered phase)\u3002</p> </li> <li> <p>\u76f8\u53d8\u4e0e\u81ea\u53d1\u5bf9\u79f0\u6027\u7834\u7f3a\uff1a\u4e34\u754c\u70b9 \\(r = 0\\) \u6807\u5fd7\u7740\u76f8\u53d8 (phase transition) \u7684\u4e34\u754c\u72b6\u6001\u3002\u5f53\u7cfb\u7edf\u5904\u4e8e\u4f4e\u6e29\u533a (\\(r &lt; 0\\)) \u65f6\uff0c\u5b83\u5fc5\u987b\u4ece\u4e24\u4e2a\u80fd\u91cf\u5b8c\u5168\u76f8\u540c\u7684\u201c\u5c71\u8c37\u201d\uff08\\(\\phi = \\pm\\sqrt{-r/u}\\)\uff09\u4e2d\u9009\u62e9\u4e00\u4e2a\u6765\u5b89\u8eab\u3002\u4e00\u65e6\u505a\u51fa\u9009\u62e9\uff08\u6bd4\u5982\u7cfb\u7edf\u843d\u5165\u4e86\u53f3\u4fa7\u7684\u5c71\u8c37\uff09\uff0c\u7cfb\u7edf\u7684\u72b6\u6001\u5c31\u4e0d\u518d\u662f\u5de6\u53f3\u5bf9\u79f0\u7684\u4e86\uff0c\u5c3d\u7ba1\u652f\u914d\u5b83\u7684\u7269\u7406\u5b9a\u5f8b\uff08\u5373\u6574\u4e2a\u81ea\u7531\u80fd\u5730\u8c8c\uff09\u4f9d\u7136\u662f\u5b8c\u7f8e\u5bf9\u79f0\u7684\u3002\u8fd9\u5c31\u662f\u81ea\u53d1\u5bf9\u79f0\u6027\u7834\u7f3a (spontaneous symmetry breaking) \u3002</p> </li> </ul>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#2-a","title":"2. \u6a21\u578bA\u2014\u2014\u5f1b\u8c6b\u7684\u8fd0\u52a8\u65b9\u7a0b","text":"<p>\u6709\u4e86\u63cf\u8ff0\u7cfb\u7edf\u72b6\u6001\u7684\u81ea\u7531\u80fd\u666f\u89c2\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u6784\u5efa\u63cf\u8ff0\u7cfb\u7edf\u5982\u4f55\u5728\u8fd9\u7247\u666f\u89c2\u4e0a\"\u8fd0\u52a8\"\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u4e86\u3002\u6a21\u578bA \u63cf\u8ff0\u7684\u662f\u6700\u7b80\u5355\u7684\u4e00\u79cd\u60c5\u51b5\uff1a\u4e00\u4e2a\u975e\u5b88\u6052\u5e8f\u53c2\u91cf\u7684\u5f1b\u8c6b\u52a8\u529b\u5b66\u3002</p> <p>\u975e\u5b88\u6052\u610f\u5473\u7740\u7cfb\u7edf\u4e2d\u5e8f\u53c2\u91cf\u7684\u603b\u79ef\u5206\u503c \\(\\int \\phi(\\mathbf{x}, t) d^d x\\) \u4e0d\u662f\u4e00\u4e2a\u5fc5\u987b\u4fdd\u6301\u4e0d\u53d8\u7684\u91cf\uff08\u4f8b\u5982\uff0c\u603b\u78c1\u5316\u5f3a\u5ea6\u53ef\u4ee5\u5728\u5916\u573a\u4f5c\u7528\u4e0b\u6539\u53d8\uff09\u3002\u8fd9\u80cc\u540e\u7684\u5fae\u89c2\u673a\u5236\u662f\uff0c\u7cfb\u7edf\u7684\u5e8f\u53c2\u91cf\u53ef\u4ee5\u4e0e\u5916\u90e8\u7684\u201c\u70ed\u5e93\u201d\u8fdb\u884c\u4ea4\u6362\u3002\u5728\u94c1\u78c1\u4f53\u4e2d\uff0c\u5355\u4e2a\u539f\u5b50\u7684\u81ea\u65cb\u7ffb\u8f6c\uff0c\u5176\u89d2\u52a8\u91cf\u662f\u4e0e\u6676\u683c\u7684\u632f\u52a8\uff08\u58f0\u5b50\uff09\u8fdb\u884c\u4ea4\u6362\u7684\uff0c\u56e0\u6b64\u603b\u78c1\u5316\u5f3a\u5ea6\u5e76\u975e\u5b64\u7acb\u7cfb\u7edf\u7684\u5b88\u6052\u91cf\u3002\u8fd9\u4e0e\u4e0b\u4e00\u8282\u8bfe\u8981\u8ba8\u8bba\u7684\u6a21\u578bB\u5f62\u6210\u9c9c\u660e\u5bf9\u6bd4\uff0c\u540e\u8005\u63cf\u8ff0\u7684\u5b88\u6052\u573a\uff08\u5982\u4e8c\u5143\u5408\u91d1\u4e2d\u7684\u7c92\u5b50\u6d53\u5ea6\uff09\u4e0d\u80fd\u51ed\u7a7a\u4ea7\u751f\u6216\u6d88\u5931\uff0c\u53ea\u80fd\u5728\u7cfb\u7edf\u5185\u90e8\u91cd\u65b0\u5206\u5e03\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#21","title":"2.1. \u975e\u5b88\u6052\u573a\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b","text":"<p>\u6a21\u578bA\u7684\u52a8\u529b\u5b66\u7531\u4e00\u4e2a\u6717\u4e4b\u4e07\u65b9\u7a0b (Langevin equation) \u63cf\u8ff0\uff0c\u8fd9\u662f\u672c\u8bb2\u7684\u6838\u5fc3\u65b9\u7a0b\uff1a</p> \\[\\frac{\\partial \\phi_\\alpha(\\mathbf{x}, t)}{\\partial t} = -L_{\\alpha\\beta} \\frac{\\delta F[\\phi]}{\\delta \\phi_\\beta(\\mathbf{x}, t)} + \\xi_\\alpha(\\mathbf{x}, t)\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u5e76\u975e\u51ed\u7a7a\u5199\u51fa\uff0c\u5b83\u6b63\u662f\u6211\u4eec\u5728\u4e0a\u4e00\u8bb2\u5efa\u7acb\u7684\u6602\u8428\u683c\u7406\u8bba\u6846\u67b6\u7684\u76f4\u63a5\u5e94\u7528\u3002\u56de\u5fc6\u4e00\u4e0b\uff0c\u4e0a\u4e00\u8bb2\u6211\u4eec\u5f97\u5230\uff0c\u70ed\u529b\u5b66\u201c\u6d41\u201d\\(J_a\\) \u4e0e\u201c\u529b\u201d\\(\\mu_b\\) \u4e4b\u95f4\u5b58\u5728\u7ebf\u6027\u5173\u7cfb \\(J_a = L_{ab} \\mu_b\\)\u3002\u5728\u8fd9\u91cc\uff1a</p> <p>\u6d41 (Flux) \\(J_\\alpha\\) \u5c31\u662f\u5e8f\u53c2\u91cf\u968f\u65f6\u95f4\u7684\u53d8\u5316\u7387 \\(\\frac{\\partial \\phi_\\alpha}{\\partial t}\\)\u3002</p> <p>\u529b (Force) \\(\\mu_\\beta\\) \u662f\u4e0e\u5e8f\u53c2\u91cf \\(\\phi_\\beta\\) \u5171\u8f6d\u7684\u70ed\u529b\u5b66\u529b\u3002\u5bf9\u4e8e\u7b49\u6e29\u7cfb\u7edf\uff0c\u5b83\u6b63\u6bd4\u4e8e\u81ea\u7531\u80fd\u7684\u8d1f\u6cdb\u51fd\u5bfc\u6570\uff0c\u5373 \\(\\mu_\\beta \\propto -\\frac{\\delta F}{\\delta \\phi_\\beta}\\)\u3002</p> <p>\u56e0\u6b64\uff0c\u8fd9\u4e2a\u65b9\u7a0b\u7684\u786e\u5b9a\u6027\u90e8\u5206\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u6602\u8428\u683c\u7ebf\u6027\u5173\u7cfb \\(J = L \\mu\\) \u5728\u8fde\u7eed\u573a\u8bba\u4e2d\u7684\u5177\u4f53\u4f53\u73b0\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u65b9\u7a0b\u5206\u89e3\u4e3a\u4e24\u4e2a\u90e8\u5206\u6765\u7406\u89e3\uff1a</p> <p>\u786e\u5b9a\u6027\u9879\uff1a \\(-L \\frac{\\delta F}{\\delta \\phi}\\)</p> <ul> <li> <p>\u8fd9\u4e00\u9879\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5728\u81ea\u7531\u80fd\u666f\u89c2\u9a71\u52a8\u4e0b\u7684\u786e\u5b9a\u6027\u6f14\u5316\uff0c\u4f53\u73b0\u4e86\u68af\u5ea6\u52a8\u529b\u5b66 (gradient dynamics) \u7684\u6838\u5fc3\u601d\u60f3\u3002\u8fd9\u610f\u5473\u7740\u7cfb\u7edf\u7684\u6f14\u5316\u8def\u5f84\u6ca1\u6709\u4efb\u4f55\u201c\u60ef\u6027\u201d\uff0c\u5176\u201c\u901f\u5ea6\u201d(\\(\\partial_t \\phi\\))\u5728\u4efb\u610f\u65f6\u523b\u90fd\u76f4\u63a5\u6b63\u6bd4\u4e8e\u5f53\u524d\u4f4d\u7f6e\u7684\u201c\u5761\u5ea6\u201d(\\(-\\delta F/\\delta \\phi\\))\u3002\u8fd9\u662f\u4e00\u79cd\u5178\u578b\u7684\u8fc7\u963b\u5c3c\u52a8\u529b\u5b66\uff0c\u4e0e\u6211\u4eec\u5728\u7b2c18\u8bb2\u4e2d\u5b66\u4e60\u7684\u65af\u6469\u68f1\u970d\u592b\u65af\u57fa\u65b9\u7a0b (Smoluchowski Equation) \u601d\u60f3\u4e00\u81f4\u3002</p> </li> <li> <p>\\(\\frac{\\delta F}{\\delta \\phi}\\) \u662f\u81ea\u7531\u80fd\u6cdb\u51fd \\(F\\) \u5bf9\u573a \\(\\phi\\) \u7684\u6cdb\u51fd\u5bfc\u6570\u3002\u5728\u7269\u7406\u4e0a\uff0c\u5b83\u626e\u6f14\u7740\u9a71\u52a8\u7cfb\u7edf\u6f14\u5316\u7684\u70ed\u529b\u5b66\u529b\u6216\u5316\u5b66\u52bf \\(\\mu\\) \u7684\u89d2\u8272\u3002\u5982\u679c\u5728\u573a\u7684\u67d0\u4e2a\u4f4d\u7f6e \\(\\mathbf{x}\\) \u5904\u5bf9 \\(\\phi\\) \u505a\u4e00\u4e2a\u5fae\u5c0f\u7684\u6270\u52a8\uff0c\u603b\u81ea\u7531\u80fd \\(F\\) \u4f1a\u56e0\u6b64\u53d1\u751f\u591a\u5927\u7684\u53d8\u5316\u3002\u5b83\u8861\u91cf\u4e86\u81ea\u7531\u80fd\u666f\u89c2\u5728\u65e0\u7a77\u7ef4\u51fd\u6570\u7a7a\u95f4\u4e2d\u7684\u201c\u5c40\u90e8\u5761\u5ea6\u201d\u3002</p> </li> <li> <p>\u65b9\u7a0b\u4e2d\u7684\u8d1f\u53f7\u8868\u793a\uff0c\u7cfb\u7edf\u5e8f\u53c2\u91cf\u7684\u53d8\u5316\u65b9\u5411\u4e0e\u81ea\u7531\u80fd\u7684\u68af\u5ea6\u65b9\u5411\u76f8\u53cd\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7cfb\u7edf\u603b\u662f\u671d\u7740\u4f7f\u81ea\u7531\u80fd\u4e0b\u964d\u6700\u5feb\u7684\u65b9\u5411\u6f14\u5316\uff0c\u5c31\u50cf\u4e00\u4e2a\u6eda\u73e0\u5728\u5c71\u5761\u4e0a\u4f1a\u6cbf\u7740\u6700\u9661\u5ced\u7684\u8def\u5f84\u6eda\u4e0b\u4e00\u6837\u3002</p> </li> <li> <p>\\(L_{\\alpha\\beta}\\) \u662f\u6602\u8428\u683c\u52a8\u529b\u5b66\u7cfb\u6570\u77e9\u9635\uff0c\u5b83\u662f\u4e00\u4e2a\u6b63\u5b9a\u77e9\u9635\uff0c\u63cf\u8ff0\u4e86\u7cfb\u7edf\u7684\u8fc1\u79fb\u7387 (mobility) \u3002\u5b83\u51b3\u5b9a\u4e86\u5728\u76f8\u540c\u7684\u70ed\u529b\u5b66\u529b\u9a71\u52a8\u4e0b\uff0c\u5e8f\u53c2\u91cf\u5f1b\u8c6b\u7684\u5feb\u6162\uff0c\u5373\u8bbe\u5b9a\u4e86\u7cfb\u7edf\u6f14\u5316\u7684\u65f6\u95f4\u5c3a\u5ea6\u3002</p> </li> </ul> <p>\u968f\u673a\u9879\uff1a \\(\\xi(\\mathbf{x}, t)\\)</p> <ul> <li> <p>\u8fd9\u4e00\u9879\u4ee3\u8868\u4e86\u6765\u81ea\u70ed\u5e93\u7684\u70ed\u566a\u58f0 (thermal noise)\u3002\u5b83\u7684\u7269\u7406\u8d77\u6e90\u662f\uff0c\u7cfb\u7edf\uff08\u7531\u7c97\u7c92\u5316\u7684\u5e8f\u53c2\u91cf \\(\\phi\\) \u63cf\u8ff0\uff09\u65f6\u523b\u5728\u4e0e\u6784\u6210\u70ed\u5e93\u7684\u5927\u91cf\u5fae\u89c2\u81ea\u7531\u5ea6\uff08\u5982\u539f\u5b50\u632f\u52a8\u3001\u5206\u5b50\u78b0\u649e\uff09\u8fdb\u884c\u7740\u80fd\u91cf\u4ea4\u6362\u3002\u8fd9\u4e9b\u5fae\u89c2\u76f8\u4e92\u4f5c\u7528\u5728\u5b8f\u89c2\u5c3a\u5ea6\u4e0a\u8868\u73b0\u4e3a\u5bf9\u5e8f\u53c2\u91cf\u7684\u968f\u673a\"\u8e22\u52a8\"\u3002</p> </li> <li> <p>\u8fd9\u4e2a\u566a\u58f0\u9879\u901a\u5e38\u88ab\u5efa\u6a21\u4e3a\u9ad8\u65af\u767d\u566a\u58f0 (Gaussian white noise)\uff0c\u5176\u7edf\u8ba1\u6027\u8d28\u7531\u4ee5\u4e0b\u4e24\u5f0f\u5b9a\u4e49\uff1a</p> </li> <li> <p>\u5747\u503c\u4e3a\u96f6\uff1a\\(\\langle \\xi_\\alpha(\\mathbf{x}, t) \\rangle = 0\\)\u3002\u8fd9\u610f\u5473\u7740\u566a\u58f0\u7684\u968f\u673a\u8e22\u52a8\u5728\u5e73\u5747\u610f\u4e49\u4e0a\u6ca1\u6709\u504f\u5411\u4efb\u4f55\u7279\u5b9a\u65b9\u5411\u3002</p> </li> <li> <p>\u65f6\u7a7a delta \u5173\u8054\uff1a\\(\\langle \\xi_\\alpha(\\mathbf{x}, t) \\xi_\\beta(\\mathbf{x}', t') \\rangle = N_{\\alpha\\beta} \\delta_{\\alpha\\beta} \\delta(\\mathbf{x} - \\mathbf{x}') \\delta(t-t')\\)\u3002\u8fd9\u8868\u793a\u5728\u4e0d\u540c\u65f6\u95f4\u6216\u4e0d\u540c\u7a7a\u95f4\u70b9\u7684\u566a\u58f0\u662f\u5b8c\u5168\u4e0d\u76f8\u5173\u7684\u3002\\(N_{\\alpha\\beta}\\) \u662f\u4e00\u4e2a\u5e38\u6570\u77e9\u9635\uff0c\u51b3\u5b9a\u4e86\u566a\u58f0\u7684\u5f3a\u5ea6\u3002\u7a7a\u95f4\u4e0a\u7684 \\(\\delta(\\mathbf{x} - \\mathbf{x}')\\) \u5173\u8054\u662f\u4e00\u4e2a\u7406\u60f3\u5316\u5047\u8bbe\uff0c\u5176\u7269\u7406\u524d\u63d0\u662f\u4ea7\u751f\u566a\u58f0\u7684\u5fae\u89c2\u8fc7\u7a0b\uff08\u5982\u5206\u5b50\u78b0\u649e\uff09\u7684\u5173\u8054\u5c3a\u5ea6\u8fdc\u5c0f\u4e8e\u6211\u4eec\u5173\u5fc3\u7684\u5e8f\u53c2\u91cf \\(\\phi\\) \u7684\u53d8\u5316\u5c3a\u5ea6\u3002</p> </li> </ul>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#22","title":"2.2. \u65f6\u95f4\u4e4b\u7bad\uff1a\u81ea\u7531\u80fd\u4f5c\u4e3a\u674e\u96c5\u666e\u8bfa\u592b\u51fd\u6570","text":"<p>\u6211\u4eec\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u662f\u5426\u6b63\u786e\u5730\u63cf\u8ff0\u4e86\u7cfb\u7edf\u8d8b\u5411\u5e73\u8861\u7684\u8fc7\u7a0b\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8003\u5bdf\u603b\u81ea\u7531\u80fd \\(F\\) \u968f\u65f6\u95f4\u7684\u53d8\u5316\u7387\u6765\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002\u5728\u4e0d\u8003\u8651\u566a\u58f0\u9879\u7684\u786e\u5b9a\u6027\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u6709\uff1a</p> \\[\\frac{dF}{dt} = \\int d^d x \\frac{\\delta F}{\\delta \\phi_{\\alpha}} \\frac{\\partial \\phi_{\\alpha}}{\\partial t} = \\int d^d x \\frac{\\delta F}{\\delta \\phi_{\\alpha}} \\left( -L_{\\alpha\\beta} \\frac{\\delta F}{\\delta \\phi_{\\beta}} \\right)\\] \\[= - \\int d^d x \\left( \\frac{\\delta F}{\\delta \\phi_{\\alpha}} \\right) L_{\\alpha\\beta} \\left( \\frac{\\delta F}{\\delta \\phi_{\\beta}} \\right)\\] <p>\u7531\u4e8e\u6602\u8428\u683c\u7cfb\u6570\u77e9\u9635 \\(L\\) \u662f\u6b63\u5b9a\u7684\uff0c\u4e0a\u5f0f\u62ec\u53f7\u4e2d\u7684\u4e8c\u6b21\u578b \\((\\cdot)L(\\cdot)\\) \u603b\u662f\u975e\u8d1f\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u7ed3\u8bba\uff1a</p> \\[\\frac{dF}{dt} \\le 0\\] <p>\u8fd9\u4e2a\u7ed3\u679c\u8868\u660e\uff0c\u5728\u6a21\u578bA\u7684\u52a8\u529b\u5b66\u6f14\u5316\u4e2d\uff0c\u7cfb\u7edf\u7684\u603b\u81ea\u7531\u80fd\u6c38\u4e0d\u589e\u52a0\uff0c\u53ea\u4f1a\u5355\u8c03\u4e0b\u964d\uff0c\u76f4\u5230\u8fbe\u5230\u81ea\u7531\u80fd\u7684\u6700\u5c0f\u503c\u70b9\uff08\u6b64\u65f6\u70ed\u529b\u5b66\u529b \\(\\frac{\\delta F}{\\delta \\phi} = 0\\)\uff0c\u6f14\u5316\u505c\u6b62\uff09\u3002\u5728\u52a8\u529b\u7cfb\u7edf\u7406\u8bba\u4e2d\uff0c\u6ee1\u8db3\u8fd9\u79cd\u6027\u8d28\u7684\u51fd\u6570\u88ab\u79f0\u4e3a\u674e\u96c5\u666e\u8bfa\u592b\u51fd\u6570 (Lyapunov function)\u3002</p> <p>\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6570\u5b66\u4e0a\u7684\u4f18\u7f8e\u6027\u8d28\uff0c\u5b83\u6709\u7740\u6df1\u523b\u7684\u7269\u7406\u5185\u6db5\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5b64\u7acb\u7cfb\u7edf\uff0c\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u8868\u73b0\u4e3a\u71b5\u6c38\u4e0d\u51cf\u5c11\uff08\\(dS/dt \\ge 0\\)\uff09\u3002\u800c\u5bf9\u4e8e\u6211\u4eec\u7814\u7a76\u7684\u8fd9\u79cd\u4e0e\u6052\u6e29\u70ed\u5e93\u63a5\u89e6\u7684\u7b49\u6e29\u7cfb\u7edf\uff0c\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u7b49\u4ef7\u8868\u8ff0\u5c31\u662f\u5176\u81ea\u7531\u80fd\u6c38\u4e0d\u589e\u52a0\uff08\\(dF/dt \\le 0\\)\uff09\u3002\u56e0\u6b64\uff0c\u8bc1\u660e\u81ea\u7531\u80fd\u662f\u4e00\u4e2a\u674e\u96c5\u666e\u8bfa\u592b\u51fd\u6570\uff0c\u5c31\u662f\u7528\u52a8\u529b\u5b66\u7684\u8bed\u8a00\u4e25\u683c\u8bc1\u660e\u4e86\u6211\u4eec\u7684\u6a21\u578b\u65b9\u7a0b\u5185\u7980\u5730\u6ee1\u8db3\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u3002\u5b83\u4e3a\u6211\u4eec\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u5d4c\u5165\u4e86\u4e0d\u53ef\u9006\u7684\"\u65f6\u95f4\u4e4b\u7bad\"\uff0c\u6570\u5b66\u4e0a\u4fdd\u8bc1\u4e86\u7cfb\u7edf\u603b\u662f\u671d\u5411\u5e73\u8861\u6001\u6f14\u5316\uff0c\u800c\u4e0d\u662f\u8fdc\u79bb\u5b83\u3002</p> <p>\u674e\u96c5\u666e\u8bfa\u592b\u51fd\u6570\u7531\u4fc4\u56fd\u5929\u624d\u6570\u5b66\u5bb6\u3001\u7269\u7406\u5b66\u5bb6\u4e9a\u5386\u5c71\u5927\u00b7\u674e\u96c5\u666e\u8bfa\u592b (Aleksandr Lyapunov) \u5728\u51761892\u5e74\u7684\u535a\u58eb\u8bba\u6587 General Problem of the Stability Of Motion \u4e2d\u5f00\u521b\u6027\u5730\u63d0\u51fa\u3002\u5728\u674e\u96c5\u666e\u8bfa\u592b\u4e4b\u524d\uff0c\u5224\u65ad\u4e00\u4e2a\u975e\u7ebf\u6027\u7cfb\u7edf\u662f\u5426\u7a33\u5b9a\uff0c\u901a\u5e38\u9700\u8981\u5c1d\u8bd5\u53bb\u6c42\u89e3\u5176\u590d\u6742\u7684\u5fae\u5206\u65b9\u7a0b\uff0c\u8fd9\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u674e\u96c5\u666e\u8bfa\u592b\u7684\u5929\u624d\u4e4b\u5904\u5728\u4e8e\uff0c\u4ed6\u627e\u5230\u4e86\u4e00\u79cd\u65e0\u9700\u76f4\u63a5\u6c42\u89e3\u65b9\u7a0b\u5c31\u80fd\u4e25\u683c\u8bc1\u660e\u5176\u7a33\u5b9a\u6027\u7684\u65b9\u6cd5\u3002\u4ed6\u7684\u7075\u611f\u6765\u6e90\u4e8e\u4e00\u4e2a\u7b80\u5355\u7684\u7269\u7406\u76f4\u89c9\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6709\u6469\u64e6\u7684\u529b\u5b66\u7cfb\u7edf\uff0c\u5176\u603b\u80fd\u91cf\u4f1a\u4e0d\u65ad\u8017\u6563\u51cf\u5c11\uff0c\u6700\u7ec8\u7cfb\u7edf\u5fc5\u7136\u4f1a\u9759\u6b62\u5728\u80fd\u91cf\u6700\u4f4e\u70b9\u3002\u674e\u96c5\u666e\u8bfa\u592b\u51fd\u6570\u6b63\u662f\u5c06\u8fd9\u4e2a\u201c\u80fd\u91cf\u201d\u7684\u6982\u5ff5\u8fdb\u884c\u4e86\u6570\u5b66\u4e0a\u7684\u63a8\u5e7f\u3002\u5982\u679c\u6211\u4eec\u80fd\u4e3a\u67d0\u4e2a\u5e73\u8861\u70b9\u627e\u5230\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5728\u8be5\u5e73\u8861\u70b9\u5904\u53d6\u5f97\u6700\u5c0f\u503c\uff0c\u5e76\u4e14\u5176\u503c\u4f1a\u6cbf\u7740\u7cfb\u7edf\u7684\u4efb\u4f55\u8fd0\u52a8\u8f68\u8ff9\u5355\u8c03\u51cf\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e25\u683c\u8bc1\u660e\u4e86\u8fd9\u4e2a\u5e73\u8861\u70b9\u662f\u7a33\u5b9a\u7684\u3002\u674e\u96c5\u666e\u8bfa\u592b\u51fd\u6570\u662f\u73b0\u4ee3\u63a7\u5236\u7406\u8bba\u7684\u57fa\u77f3\uff0c\u8fd0\u7528\u5728\u5de5\u7a0b\u7a33\u5b9a\u6027\u5206\u6790\u3001\u673a\u5668\u4eba\u5b66\u3001\u8bc1\u660e\u7cfb\u7edf\u6536\u655b\u3002</p> <p>\u521d\u5b66\u8005\u53ef\u80fd\u4f1a\u5c06\u674e\u96c5\u666e\u8bfa\u592b\u51fd\u6570\u4e0e\u674e\u96c5\u666e\u8bfa\u592b\u51fd\u6570\u674e\u96c5\u666e\u8bfa\u592b\u6307\u6570 (Lyapunov exponent)\u641e\u6df7\u3002\u4e24\u8005\u63cf\u8ff0\u7684\u662f\u7cfb\u7edf\u4e24\u79cd\u622a\u7136\u76f8\u53cd\u7684\u52a8\u529b\u5b66\u884c\u4e3a\uff1a\u7a33\u5b9a\u4e0e\u6df7\u6c8c\u3002\u674e\u96c5\u666e\u8bfa\u592b\u6307\u6570\u662f\u8861\u91cf\u7cfb\u7edf\u6df7\u6c8c (chaos) \u7a0b\u5ea6\u7684\u201c\u6807\u5c3a\u201d\u3002\u5b83\u7cbe\u786e\u5730\u91cf\u5316\u4e86\u8457\u540d\u7684\u201c\u8774\u8776\u6548\u5e94\u201d\u2014\u2014\u5373\u7cfb\u7edf\u5bf9\u521d\u59cb\u6761\u4ef6\u7684\u6781\u7aef\u654f\u611f\u6027\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u674e\u96c5\u666e\u8bfa\u592b\u6307\u6570\u56de\u7b54\u4e86\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u201c\u5982\u679c\u6211\u5728\u7cfb\u7edf\u7684\u521d\u59cb\u72b6\u6001\u4e0a\u65bd\u52a0\u4e00\u4e2a\u6781\u5176\u5fae\u5c0f\u7684\u6270\u52a8\uff0c\u8fd9\u4e2a\u6270\u52a8\u4f1a\u968f\u65f6\u95f4\u4ee5\u591a\u5feb\u7684\u901f\u5ea6\u88ab\u653e\u5927\u6216\u7f29\u5c0f\uff1f\u201d\u88ab\u5e7f\u6cdb\u8fd0\u7528\u5728\u6df7\u6c8c\u7406\u8bba\u3001\u5929\u6c14\u9884\u62a5\u3001\u6d41\u4f53\u529b\u5b66\u3001\u7814\u7a76\u7cfb\u7edf\u7684\u957f\u671f\u4e0d\u53ef\u9884\u6d4b\u6027\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#23-","title":"2.3. \u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff1a\u566a\u58f0\u7684\u7269\u7406\u5185\u6db5","text":"<p>\u73b0\u5728\u6211\u4eec\u56de\u5230\u566a\u58f0\u9879 \\(\\xi\\)\u3002\u5b83\u5e76\u975e\u4e00\u4e2a\u53ef\u6709\u53ef\u65e0\u7684\u9644\u52a0\u9879\uff0c\u800c\u662f\u5728\u63cf\u8ff0\u4e00\u4e2a\u6709\u9650\u6e29\u5ea6 \\(T\\) \u4e0b\u7684\u7cfb\u7edf\u65f6\u7269\u7406\u4e0a\u4e0d\u53ef\u6216\u7f3a\u7684\u3002\u70ed\u5e93\u5bf9\u7cfb\u7edf\u6709\u4e24\u4e2a\u770b\u4f3c\u77db\u76fe\u7684\u4f5c\u7528\uff1a\u4e00\u65b9\u9762\uff0c\u5b83\u901a\u8fc7\u6469\u64e6\u6216\u7c98\u6ede\u6548\u5e94\u8017\u6563\u7cfb\u7edf\u7684\u80fd\u91cf\uff0c\u4f7f\u7cfb\u7edf\u80fd\u591f\u5f1b\u8c6b\u5230\u5e73\u8861\u6001\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u901a\u8fc7\u968f\u673a\u7684\u78b0\u649e\u6270\u52a8\u7cfb\u7edf\uff0c\u4f7f\u5176\u4ea7\u751f\u6da8\u843d\u3002</p> <p>\u8fd9\u4e24\u4e2a\u4f5c\u7528\u2014\u2014\u6da8\u843d \u548c \u8017\u6563 \u2014\u2014\u5e76\u975e\u5f7c\u6b64\u72ec\u7acb\uff0c\u800c\u662f\u540c\u4e00\u79cd\u5fae\u89c2\u76f8\u4e92\u4f5c\u7528\u7684\u4e00\u4f53\u4e24\u9762\u3002\u5c06\u5b83\u4eec\u8054\u7cfb\u8d77\u6765\u7684\uff0c\u5c31\u662f\u8457\u540d\u7684\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u3002</p> <p></p> <p>\u5728\u8bb2\u5ea7\u4e2d\uff0cFrey\u6559\u6388\u901a\u8fc7\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b (Fokker-Planck equation) \u7684\u5206\u6790\u6765\u63a8\u5bfc\u8fd9\u4e00\u5b9a\u7406\u3002\u5176\u903b\u8f91\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u4ece\u63cf\u8ff0\u5355\u4e2a\u8f68\u8ff9\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u51fa\u53d1\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u63cf\u8ff0\u7cfb\u7edf\u72b6\u6001\u6982\u7387\u5206\u5e03 \\(P[\\phi, t]\\) \u6f14\u5316\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u3002\u5176\u4e00\u822c\u5f62\u5f0f\u4e3a \\(\\partial_t P = \\int d^d x \\frac{\\delta}{\\delta \\phi_\\alpha} [-\\text{\u6f02\u79fb\u9879} \\cdot P + \\frac{1}{2} \\text{\u6269\u6563\u9879} \\cdot \\frac{\\delta P}{\\delta \\phi_\\beta}]\\)\u3002\u5c06\u6211\u4eec\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u4ee3\u5165\uff0c\u6f02\u79fb\u9879\u5373\u4e3a\u786e\u5b9a\u6027\u6f14\u5316\u90e8\u5206\uff0c\u6269\u6563\u9879\u5219\u4e0e\u566a\u58f0\u5f3a\u5ea6 \\(N\\) \u76f8\u5173\u3002</p> </li> <li> <p>\u6211\u4eec\u77e5\u9053\uff0c\u5f53\u7cfb\u7edf\u8fbe\u5230\u70ed\u5e73\u8861\u65f6\uff0c\u5176\u6982\u7387\u5206\u5e03\u5fc5\u987b\u662f\u7edf\u8ba1\u7269\u7406\u7ed9\u51fa\u7684\u73bb\u5c14\u5179\u66fc\u5206\u5e03 (Boltzmann distribution) \uff0c\u5373 \\(P_{eq}[\\phi] \\propto e^{-F[\\phi]/k_B T}\\)\u3002\u8fd9\u662f\u6211\u4eec\u201c\u5c40\u57df\u70ed\u5e73\u8861\u201d\u5047\u8bbe\u7684\u5fc5\u7136\u7ed3\u679c\u3002</p> </li> <li> <p>\u6211\u4eec\u5c06\u8fd9\u4e2a\u5df2\u77e5\u7684\u5e73\u8861\u89e3\u4ee3\u5165\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff0c\u5e76\u8981\u6c42\u5b83\u662f\u65b9\u7a0b\u7684\u4e00\u4e2a\u9759\u6001\u89e3\uff08\u5373 \\(\\partial_t P = 0\\)\uff09\u3002</p> </li> <li> <p>\u5f53\u628a\\(P_{eq}\\)\u4ee3\u5165\u540e\uff0c\u5bf9\u5b83\u7684\u6cdb\u51fd\u6c42\u5bfc\u4f1a\u4ea7\u751f\u4e00\u9879 \\(\\frac{\\delta P_{eq}}{\\delta \\phi_\\beta} \\propto (-\\frac{1}{k_B T}) \\frac{\\delta F}{\\delta \\phi_\\beta} P_{eq}\\)\u3002\u8fd9\u4f7f\u5f97\u65b9\u7a0b\u4e2d\u6f02\u79fb\u548c\u6269\u6563\u4e24\u90e8\u5206\u90fd\u51fa\u73b0\u4e86\u516c\u56e0\u5b50 \\(\\frac{\\delta F}{\\delta \\phi_\\beta} P_{eq}\\)\u3002\u4e3a\u4e86\u8ba9\u65b9\u7a0b\u6052\u7b49\u4e8e\u96f6\uff0c\u8fd9\u4e24\u4e2a\u90e8\u5206\u7684\u7cfb\u6570\u5fc5\u987b\u7cbe\u786e\u62b5\u6d88\u3002\u8fd9\u4e2a\u62b5\u6d88\u6761\u4ef6\u7ed9\u51fa\u4e86\u566a\u58f0\u5f3a\u5ea6 \\(N\\) \u548c\u52a8\u529b\u5b66\u7cfb\u6570 \\(L\\) \u4e4b\u95f4\u5fc5\u987b\u6ee1\u8db3\u7684\u4e25\u683c\u5173\u7cfb\u3002\u5728\u6559\u6388\u4f7f\u7528\u7684\u5355\u4f4d\u5236\u4e2d\uff08\\(k_B = 1\\)\uff09\uff0c\u8fd9\u4e2a\u5173\u7cfb\u5c31\u662f\uff1a</p> \\[N = 2LT\\] </li> </ol> <p>\u8fd9\u4e2a\u5173\u7cfb\u5c31\u662f\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u5728\u6a21\u578bA\u4e2d\u7684\u5177\u4f53\u4f53\u73b0\u3002\u5b83\u6df1\u523b\u5730\u63ed\u793a\u4e86\u70ed\u5e93\u7684\u53cc\u91cd\u89d2\u8272\uff1a\u8017\u6563\uff08\u7531 \\(L\\) \u4f53\u73b0\uff09\u548c\u6da8\u843d\uff08\u7531 \\(N\\) \u4f53\u73b0\uff09\u7684\u5927\u5c0f\u662f\u4e25\u683c\u5173\u8054\u7684\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u6bd4\u4f8b\u7531\u7cfb\u7edf\u7684\u6e29\u5ea6 \\(T\\) \u51b3\u5b9a\u3002\u4e00\u4e2a\u7c98\u6ede\u6027\u66f4\u5f3a\uff08\u8017\u6563\u66f4\u5f3a\uff0c\u5373 \\(L\\) \u8f83\u5c0f\uff09\u7684\u4ecb\u8d28\uff0c\u5176\u4ea7\u751f\u7684\u70ed\u566a\u58f0\u4e5f\u4f1a\u76f8\u5e94\u5730\u66f4\u5f31\u3002\u8fd9\u4e2a\u5b9a\u7406\u662f\u4fdd\u8bc1\u6211\u4eec\u7684\u52a8\u529b\u5b66\u6a21\u578b\u5728\u957f\u65f6\u95f4\u6f14\u5316\u540e\uff0c\u80fd\u591f\u6b63\u786e\u5730\u8fbe\u5230\u5e76\u7ef4\u6301\u5728\u70ed\u529b\u5b66\u5e73\u8861\u6001\u7684\u5173\u952e\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#3-a","title":"3. \u6a21\u578bA\u7684\u5e94\u7528\u4e0e\u5206\u6790","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u524d\u9762\u5efa\u7acb\u7684\u666e\u9002\u6846\u67b6\u5e94\u7528\u5230\u5177\u4f53\u7684\u91d1\u5179\u5821-\u6717\u9053\u6a21\u578b\u4e0a\uff0c\u5e76\u5206\u6790\u5176\u52a8\u529b\u5b66\u884c\u4e3a\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#31-","title":"3.1. \u542b\u65f6\u91d1\u5179\u5821-\u6717\u9053\uff08\u827e\u4f26-\u5361\u6069\uff09\u65b9\u7a0b","text":"<p>\u6211\u4eec\u5c06GL\u81ea\u7531\u80fd\u6cdb\u51fd\u4ee3\u5165\u6a21\u578bA\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u4e2d\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5177\u4f53\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u8ba1\u7b97GL\u6cdb\u51fd\u7684\u6cdb\u51fd\u5bfc\u6570\uff1a</p> <p>\u6cdb\u51fd\u5bfc\u6570\u7684\u8ba1\u7b97\u7c7b\u4f3c\u4e8e\u53d8\u5206\u6cd5\u3002\u5bf9\u4e8e\u6cdb\u51fd \\(F[\\phi] = \\int d^d x \\, \\mathcal{L}(\\phi, \\nabla\\phi)\\)\uff0c\u5176\u6cdb\u51fd\u5bfc\u6570\u4e3a \\(\\frac{\\delta F}{\\delta \\phi} = \\frac{\\partial \\mathcal{L}}{\\partial \\phi} - \\nabla \\cdot \\frac{\\partial \\mathcal{L}}{\\partial (\\nabla\\phi)}\\)\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d, </p> \\[\\mathcal{L} = \\frac{r}{2}\\phi^2 + \\frac{u}{4}\\phi^4 + \\frac{c}{2}(\\nabla\\phi)^2\\] <p>\u5bf9 \\(\\phi\\) \u7684\u666e\u901a\u5bfc\u6570\u90e8\u5206\u7ed9\u51fa\uff1a\\(\\frac{\\partial \\mathcal{L}}{\\partial \\phi} = r\\phi + u\\phi^3\\)\u3002</p> <p>\u5bf9 \\(\\nabla\\phi\\) \u7684\u5bfc\u6570\u90e8\u5206\u7ed9\u51fa\uff1a\\(\\frac{\\partial \\mathcal{L}}{\\partial (\\nabla\\phi)} = c\\nabla\\phi\\)\u3002</p> <p>\u518d\u5bf9\u4e0a\u5f0f\u6c42\u6563\u5ea6\uff0c\u5e76\u901a\u8fc7\u5206\u90e8\u79ef\u5206\u5c06\u4f5c\u7528\u5728\u6d4b\u8bd5\u51fd\u6570\u4e0a\u7684\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u8f6c\u79fb\u5230 \\(\\phi\\) \u4e0a\uff0c\u6211\u4eec\u5f97\u5230\u7b2c\u4e8c\u90e8\u5206\u8d21\u732e\u4e3a \\(-c\\nabla^2\\phi\\)\u3002</p> <p>\u7efc\u5408\u8d77\u6765\uff0c\u4fbf\u5f97\u5230\u5b8c\u6574\u7684\u6cdb\u51fd\u5bfc\u6570\uff1a</p> \\[\\frac{\\delta F}{\\delta \\phi} = r\\phi + u\\phi^3 - c\\nabla^2\\phi\\] <p>\u5c06\u6b64\u7ed3\u679c\u4ee3\u5165\u6a21\u578bA\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\uff08\u8003\u8651\u6807\u91cf\u573a\uff0c\u5373 \\(L_{\\alpha\\beta} \\to L\\)\uff09\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[\\frac{\\partial \\phi}{\\partial t} = -L(r\\phi + u\\phi^3 - c\\nabla^2\\phi) + \\xi(\\mathbf{x}, t)\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u88ab\u79f0\u4e3a\u542b\u65f6\u91d1\u5179\u5821-\u6717\u9053 (Time-Dependent Ginzburg-Landau, TDGL) \u65b9\u7a0b\u3002\u5728\u6750\u6599\u79d1\u5b66\u9886\u57df\uff0c\u5b83\u6709\u53e6\u4e00\u4e2a\u66f4\u5e7f\u4e3a\u4eba\u77e5\u7684\u540d\u5b57\u2014\u2014\uff08\u542b\u566a\uff09\u827e\u4f26-\u5361\u6069 (Allen-Cahn) \u65b9\u7a0b\u3002\u8be5\u65b9\u7a0b\u7531Sam Allen\u548cJohn Cahn\u4e8e1979\u5e74\u63d0\u51fa\uff0c\u6700\u521d\u7528\u4e8e\u63cf\u8ff0\u6709\u5e8f\u5408\u91d1\u4e2d\u53cd\u76f8\u7574\u754c (antiphase domain boundaries) \u7684\u8fd0\u52a8\uff0c\u662f\u7814\u7a76\u76f8\u5206\u79bb\u548c\u754c\u9762\u52a8\u529b\u5b66\u7684\u7ecf\u5178\u6a21\u578b\u3002</p> <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7269\u7406\u56fe\u50cf\u975e\u5e38\u6e05\u6670\uff1a\u5b83\u662f\u4e00\u4e2a\u53cd\u5e94-\u6269\u6563\u65b9\u7a0b (reaction-diffusion equation) \u3002</p> <ul> <li>\u201c\u53cd\u5e94\u201d\u9879\uff1a\\(-L(r\\phi + u\\phi^3)\\) \u63cf\u8ff0\u4e86\u5c40\u57df\u7684\u6f14\u5316\u8d8b\u52bf\u3002\u5b83\u662f\u4e00\u4e2a\u7eaf\u7cb9\u5c40\u57df\u7684\u201c\u529b\u201d\uff0c\u53ea\u4f9d\u8d56\u4e8e\u8be5\u70b9\u81ea\u8eab\u7684 \\(\\phi\\) \u503c\u3002\u5b83\u9a71\u52a8\u5e8f\u53c2\u91cf \\(\\phi\\) \u5411\u7740\u5c40\u57df\u81ea\u7531\u80fd \\(f(\\phi)\\) \u7684\u6781\u5c0f\u503c\u70b9\u5f1b\u8c6b\u3002</li> <li>\u201c\u6269\u6563\u201d\u9879\uff1a\\(+Lc\\nabla^2\\phi\\) \u63cf\u8ff0\u4e86\u7a7a\u95f4\u8026\u5408\u6548\u5e94\u3002\u62c9\u666e\u62c9\u65af\u7b97\u5b50 \\(\\nabla^2\\phi\\) \u7684\u672c\u8d28\u662f\u67d0\u70b9\u7684\u503c\u4e0e\u5176\u5468\u56f4\u90bb\u57df\u5e73\u5747\u503c\u4e4b\u5dee\u3002\u56e0\u6b64\uff0c\u8fd9\u4e00\u9879\u503e\u5411\u4e8e\u62b9\u5e73\u5e8f\u53c2\u91cf\u7684\u7a7a\u95f4\u4e0d\u5747\u5300\u6027\uff0c\u964d\u4f4e\u68af\u5ea6\u80fd\u91cf\uff0c\u5176\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u754c\u9762\u4e0a\u7684\u8868\u9762\u5f20\u529b\u3002</li> </ul> <p>\u8fd9\u4e2a\u65b9\u7a0b\u4f18\u96c5\u5730\u63cf\u8ff0\u4e86\u4e24\u79cd\u7269\u7406\u503e\u5411\u7684\u7ade\u4e89\uff1a\u4e00\u65b9\u9762\uff0c\u5c40\u57df\u52bf\u80fd\uff08\u53cd\u5e94\u9879\uff09\u8bd5\u56fe\u5728\u5404\u5904\u90fd\u5f62\u6210\u5747\u5300\u7684\u6709\u5e8f\u76f8\uff08\u5728 \\(r &lt; 0\\) \u65f6\uff0c\u8ba9\\(\\phi\\)\u53d8\u4e3a\\(\\pm\\phi_0\\)\uff09\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u68af\u5ea6\u80fd\u91cf\uff08\u6269\u6563\u9879\uff09\u5219\u60e9\u7f5a\u76f8\u4e0e\u76f8\u4e4b\u95f4\u7684\u8fb9\u754c\uff0c\u8bd5\u56fe\u8ba9\u8fb9\u754c\u5c3d\u53ef\u80fd\u5730\u5c11\u3001\u5c3d\u53ef\u80fd\u5730\u5e73\u6ed1\u3002\u8fd9\u4e24\u8005\u7684\u7ade\u4e89\u6700\u7ec8\u5bfc\u81f4\u4e86\u4e30\u5bcc\u7684\u65f6\u7a7a\u6591\u56fe\u5f62\u6210\u3002</p> <p>\u8bfe\u5802\u64ad\u653e\u7684\u8fd9\u4e2a\u52a8\u753b\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u81ea\u65cb\u7cfb\u7edf\u5feb\u7167\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u201c\u683c\u70b9\u6c14\u4f53\u6a21\u578b (lattice gas model)\u201d\u3002\u56fe\u4e2d\u7684\u9ed1\u8272\u548c\u767d\u8272\u533a\u57df\u5206\u522b\u5bf9\u5e94\u7740\u4e24\u79cd\u4e0d\u540c\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u201c\u81ea\u65cb\u5411\u4e0a\u201d\u548c\u201c\u81ea\u65cb\u5411\u4e0b\u201d\u7684\u78c1\u7574\u3002\u76f4\u89c2\u5730\u5c55\u793a\u4e86\u7531\u542b\u65f6\u91d1\u5179\u5821-\u6717\u9053\uff08\u827e\u4f26--\u5361\u6069\uff09\u65b9\u7a0b\u6240\u63cf\u8ff0\u7684\u7574\u7c97\u5316 (domain coarsening) \u8fc7\u7a0b\u3002\u52a8\u753b\u5f00\u59cb\u65f6\uff0c\u7cfb\u7edf\u88ab\u4ece\u9ad8\u6e29\u201c\u6dec\u706b (quench)\u201d\u5230\u4f4e\u6e29\uff0c\u201c\u53cd\u5e94\u9879\u201d \\(-L(r\\phi + u\\phi^3)\\) \u8fc5\u901f\u5c06\u968f\u673a\u7684\u521d\u59cb\u72b6\u6001\u5206\u79bb\u6210\u9ed1\u767d\u5206\u660e\u7684\u4e24\u79cd\u6709\u5e8f\u76f8\uff0c\u5f62\u6210\u7ec6\u788e\u7684\u7574\u7ed3\u6784\u3002\u968f\u540e\uff0c\u52a8\u529b\u5b66\u7531\u201c\u6269\u6563\u9879\u201d \\(+Lc\\nabla^2\\phi\\) \u4e3b\u5bfc\uff0c\u8be5\u9879\u5982\u540c\u4e00\u79cd\u754c\u9762\u5f20\u529b\uff0c\u4e0d\u65ad\u201c\u62c9\u5e73\u201d\u7574\u4e0e\u7574\u4e4b\u95f4\u7684\u8fb9\u754c\u3002\u4e3a\u4e86\u964d\u4f4e\u603b\u7684\u754c\u9762\u80fd\u91cf\uff0c\u9ad8\u5ea6\u5f2f\u66f2\u7684\u5c0f\u7574\u4f1a\u4e0d\u65ad\u6536\u7f29\u76f4\u81f3\u6d88\u5931\uff0c\u800c\u8f83\u5927\u7684\u3001\u76f8\u5bf9\u5e73\u5766\u7684\u7574\u5219\u4f1a\u6269\u5f20\u957f\u5927\u3002\u6574\u4e2a\u8fc7\u7a0b\u5448\u73b0\u51fa\u201c\u5927\u9c7c\u5403\u5c0f\u9c7c\u201d\u7684\u666f\u8c61\uff0c\u7cfb\u7edf\u7684\u5e73\u5747\u7ed3\u6784\u5c3a\u5ea6\u968f\u65f6\u95f4\u4e0d\u65ad\u589e\u957f\uff0c\u5b8c\u7f8e\u8be0\u91ca\u4e86\u975e\u5e73\u8861\u7cfb\u7edf\u5728\u8ffd\u6c42\u80fd\u91cf\u6700\u5c0f\u5316\u8fc7\u7a0b\u4e2d\u7684\u6591\u56fe\u6f14\u5316\u89c4\u5f8b\u3002</p> <p></p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#32","title":"3.2. \u65e0\u5e8f\u76f8\u4e2d\u7684\u5206\u6790\uff1a\u4e34\u754c\u73b0\u8c61\u7684\u5148\u5146","text":"<p>\u4e3a\u4e86\u89e3\u6790\u5730\u7814\u7a76\u8fd9\u4e2a\u975e\u7ebf\u6027\u65b9\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u60c5\u51b5\u5165\u624b\uff1a\u5728\u4e34\u754c\u6e29\u5ea6\u4ee5\u4e0a\uff08\\(r &gt; 0\\)\uff09\u7684\u65e0\u5e8f\u76f8\u4e2d\uff0c\u5206\u6790\u7cfb\u7edf\u56f4\u7ed5\u5e73\u8861\u6001 \\(\\phi = 0\\) \u7684\u5c0f\u6da8\u843d\u3002 </p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#_3","title":"\u9ad8\u65af\u8fd1\u4f3c","text":"<p>\u5728 \\(r &gt; 0\\) \u65f6\uff0c\u7cfb\u7edf\u7684\u552f\u4e00\u5e73\u8861\u6001\u662f \\(\\phi = 0\\)\u3002\u6da8\u843d\u7684\u5e45\u5ea6\u5f88\u5c0f\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u81ea\u7531\u80fd\u4e2d\u7684\u975e\u7ebf\u6027\u9879 \\(u\\phi^4\\) \u548c\u52a8\u529b\u5b66\u65b9\u7a0b\u4e2d\u7684 \\(u\\phi^3\\) \u9879\u3002\u8fd9\u88ab\u79f0\u4e3a\u9ad8\u65af\u8fd1\u4f3c (Gaussian approximation) \uff0c\u56e0\u4e3a\u6b64\u65f6\u7684\u81ea\u7531\u80fd\u6cdb\u51fd\u662f \\(\\phi\\) \u7684\u4e8c\u6b21\u578b\uff0c\u5bf9\u5e94\u7684\u5e73\u8861\u6982\u7387\u5206\u5e03\u662f\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#_4","title":"\u5085\u91cc\u53f6\u5206\u6790\uff1a\u63a2\u7d22\u7a7a\u95f4\u5173\u8054\u7684\u663e\u5fae\u955c","text":"<p>\u7814\u7a76\u7a7a\u95f4\u6da8\u843d\u548c\u5173\u8054\u7684\u6700\u6709\u529b\u5de5\u5177\u662f\u5085\u91cc\u53f6\u5206\u6790 (Fourier analysis) \u3002\u6211\u4eec\u5c06\u5e8f\u53c2\u91cf\u573a\u4ece\u5b9e\u7a7a\u95f4 \\(\\phi(\\mathbf{x}, t)\\) \u53d8\u6362\u5230\u5012\u6613\u7a7a\u95f4\uff08\u6216\u79f0 \\(\\mathbf{q}\\) \u7a7a\u95f4\uff09\\(\\phi(\\mathbf{q}, t)\\)\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u7a7a\u95f4\u5bfc\u6570 \\(\\nabla\\) \u5728\u5085\u91cc\u53f6\u7a7a\u95f4\u4e2d\u4f1a\u53d8\u6210\u7b80\u5355\u7684\u4ee3\u6570\u4e58\u79ef \\(i\\mathbf{q}\\)\u3002\u6ce2\u77e2 \\(\\mathbf{q}\\) \u7684\u5927\u5c0f\u4e0e\u7a7a\u95f4\u5c3a\u5ea6\u6210\u53cd\u6bd4\uff08\\(|\\mathbf{q}| \\sim 1/\\lambda\\)\uff09\uff0c\u56e0\u6b64\u5206\u6790\u4e0d\u540c \\(\\mathbf{q}\\) \u5206\u91cf\u7684\u884c\u4e3a\uff0c\u5c31\u7b49\u540c\u4e8e\u5728\u7814\u7a76\u4e0d\u540c\u7a7a\u95f4\u5c3a\u5ea6\u4e0a\u7684\u6da8\u843d\u3002</p> <p>\u5728\u7ebf\u6027\u5316\u7684\u9ad8\u65af\u8fd1\u4f3c\u4e0b\uff0c\u827e\u4f26-\u5361\u6069\u65b9\u7a0b\u7684\u5085\u91cc\u53f6\u53d8\u6362\u5f62\u5f0f\u4e3a\uff1a</p> \\[\\frac{\\partial \\phi(\\mathbf{q}, t)}{\\partial t} = -L(r + c q^2) \\phi(\\mathbf{q}, t) + \\xi(\\mathbf{q}, t)\\] <p>\u539f\u672c\u590d\u6742\u7684\u3001\u5404\u4e2a\u7a7a\u95f4\u70b9\u76f8\u4e92\u8026\u5408\u7684\u504f\u5fae\u5206\u65b9\u7a0b\uff0c\u73b0\u5728\u88ab\u6210\u529f\u5730\u89e3\u8026\u6210\u4e86\u4e00\u7ec4\u5173\u4e8e\u6bcf\u4e2a\u5085\u91cc\u53f6\u6a21\u5f0f \\(\\phi(\\mathbf{q}, t)\\) \u7684\u3001\u5f7c\u6b64\u72ec\u7acb\u7684\u7b80\u5355\u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b\u8fc7\u7a0b (Ornstein-Uhlenbeck process) \u3002\u6bcf\u4e2a\u6a21\u5f0f \\(\\mathbf{q}\\) \u90fd\u50cf\u4e00\u4e2a\u72ec\u7acb\u7684\u5e03\u6717\u7c92\u5b50\uff0c\u88ab\u62c9\u5411\u5e73\u8861\u70b9 \\(\\phi(\\mathbf{q})=0\\) \u7684\u201c\u56de\u590d\u529b\u201d\u5927\u5c0f\u4e3a \\(L(r+cq^2)\\)\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#-","title":"\u5965\u6069\u65af\u5766-\u6cfd\u5c3c\u514b\u5173\u8054\u51fd\u6570","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u7b80\u5316\u7684\u65b9\u7a0b\u6765\u8ba1\u7b97\u7cfb\u7edf\u7684\u9759\u6001\u7ed3\u6784\u56e0\u5b50 (static structure factor) \uff0c\u5373\u4e0d\u540c\u5085\u91cc\u53f6\u6a21\u5f0f\u6da8\u843d\u4e4b\u95f4\u7684\u5173\u8054\u51fd\u6570 \\(\\langle |\\phi(\\mathbf{q})|^2 \\rangle = \\langle \\phi(\\mathbf{q}) \\phi(-\\mathbf{q}) \\rangle\\)\u3002</p> <p>\u5bf9\u4e8e\u4e0a\u8ff0\u7684\u5965\u6069\u65af\u5766-\u4e4c\u4f26\u8d1d\u514b(O-U)\u8fc7\u7a0b\uff0c\u5176\u7a33\u6001\u6982\u7387\u5206\u5e03\u662f\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03 \\(P_{eq}(\\phi_q) \\propto \\exp(-\\frac{1}{2\\langle |\\phi_q|^2 \\rangle} |\\phi_q|^2)\\)\u3002\u6839\u636e\u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff0c\u8be5\u5206\u5e03\u7684\u65b9\u5dee\uff08\u5373\u6211\u4eec\u8981\u6c42\u7684\u5173\u8054\u51fd\u6570\uff09\u7b49\u4e8e\u566a\u58f0\u5f3a\u5ea6\u9664\u4ee5\u56de\u590d\u529b\u3002</p> <p>\u56de\u590d\u529b\u4e3a \\(\\Gamma_q = L(r+cq^2)\\)\u3002</p> <p>\u5085\u91cc\u53f6\u7a7a\u95f4\u4e2d\u7684\u566a\u58f0\u5f3a\u5ea6\uff08\u5173\u8054\u51fd\u6570\uff09\u4e3a \\(\\langle \\xi(\\mathbf{q},t)\\xi(\\mathbf{q}',t') \\rangle = 2LT (2\\pi)^d \\delta(\\mathbf{q}+\\mathbf{q}')\\delta(t-t')\\)\u3002\u56e0\u6b64\u5355\u6a21\u5f0f\u7684\u566a\u58f0\u5f3a\u5ea6\u4e3a\\(2LT\\)\u3002 &gt; \u4e8e\u662f\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[\\langle |\\phi(\\mathbf{q})|^2 \\rangle = \\frac{2LT}{2\\Gamma_q} = \\frac{LT}{L(r+cq^2)} = \\frac{T}{r+cq^2}\\] <p>\u8fd9\u4e2a\u6d1b\u4f26\u5179\u5f62\u5f0f\u7684\u5173\u8054\u51fd\u6570\u88ab\u79f0\u4e3a\u5965\u6069\u65af\u5766-\u6cfd\u5c3c\u514b (Ornstein-Zernike) \u5173\u8054\u51fd\u6570\u3002\u8be5\u516c\u5f0f\u6700\u65e9\u7531Ornstein\u548cZernike\u4e8e1914\u5e74\u4e3a\u89e3\u91ca\u6db2\u4f53\u5728\u4e34\u754c\u70b9\u9644\u8fd1\u7684\u201c\u4e34\u754c\u4e73\u5149\u201d\u73b0\u8c61\u800c\u63d0\u51fa\uff0c\u662f\u7edf\u8ba1\u7269\u7406\u4e2d\u63cf\u8ff0\u5173\u8054\u7684\u6838\u5fc3\u516c\u5f0f\u4e4b\u4e00\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#xi","title":"\u53d1\u6563\u7684\u5173\u8054\u4e0e\u5173\u8054\u957f\u5ea6 \\(\\xi\\)","text":"<p>\u8fd9\u4e2a\u5173\u8054\u51fd\u6570\u5305\u542b\u4e86\u5173\u4e8e\u76f8\u53d8\u7684\u5168\u90e8\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u6539\u5199\u4e3a\uff1a</p> \\[\\langle |\\phi(\\mathbf{q})|^2 \\rangle = \\frac{T/c}{q^2 + r/c} = \\frac{T/c}{q^2 + \\xi^{-2}}\\] <p>\u8fd9\u91cc\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u7684\u3001\u5177\u6709\u957f\u5ea6\u91cf\u7eb2\u7684\u7269\u7406\u91cf\u5173\u8054\u957f\u5ea6 (correlation length) \\(\\xi\\)\uff1a</p> \\[\\xi = \\sqrt{\\frac{c}{r}}\\] <p>\u5173\u8054\u957f\u5ea6 \\(\\xi\\) \u63cf\u8ff0\u4e86\u7cfb\u7edf\u4e2d\u6da8\u843d\u7684\u7a7a\u95f4\u5173\u8054\u8303\u56f4\u3002\u5728\u8fdc\u79bb\u4e34\u754c\u70b9\u65f6\uff0c\\(r\\) \u8f83\u5927\uff0c\\(\\xi\\) \u5f88\u5c0f\uff0c\u610f\u5473\u7740\u6da8\u843d\u53ea\u5728\u5f88\u5c0f\u7684\u5c40\u90e8\u8303\u56f4\u5185\u5f7c\u6b64\u76f8\u5173\u3002</p> <p>\u5f53\u7cfb\u7edf\u4ece\u9ad8\u6e29\u533a\u903c\u8fd1\u4e34\u754c\u70b9\u65f6\uff0c\u5373 \\(T \\to T_c^+\\)\uff0c\u6211\u4eec\u6709 \\(r \\propto (T-T_c) \\to 0^+\\)\u3002\u6b64\u65f6\uff0c\u4e00\u4e2a\u60ca\u4eba\u7684\u73b0\u8c61\u53d1\u751f\u4e86\uff1a</p> \\[\\xi = \\sqrt{\\frac{c}{r}} \\to \\infty\\] <p>\u5173\u8054\u957f\u5ea6\u53d1\u6563\u4e86\uff01 \u8fd9\u610f\u5473\u7740\u5728\u4e34\u754c\u70b9\uff0c\u7cfb\u7edf\u4e2d\u7684\u6da8\u843d\u53d8\u5f97\u957f\u7a0b\u76f8\u5173\uff0c\u4e00\u4e2a\u5730\u65b9\u7684\u5fae\u5c0f\u6270\u52a8\u4f1a\u5f71\u54cd\u5230\u4efb\u610f\u9065\u8fdc\u7684\u5730\u65b9\u3002\u7cfb\u7edf\u5931\u53bb\u4e86\u5176\u7279\u5f81\u957f\u5ea6\u5c3a\u5ea6\uff0c\u5448\u73b0\u51fa\u6807\u5ea6\u4e0d\u53d8\u6027 (scale invariance)\u3002\u8fd9\u6b63\u662f\u6559\u6388\u5728\u8bfe\u5802\u4e0a\u5c55\u793a\u7684\u4f0a\u8f9b\u6a21\u578b\u5728\u4e34\u754c\u70b9\u7684\u201c\u653e\u5927\u201d\u56fe\u50cf \u6240\u63ed\u793a\u7684\u6df1\u523b\u7269\u7406\uff1a\u65e0\u8bba\u4f60\u5982\u4f55\u653e\u5927\u6216\u7f29\u5c0f\uff0c\u770b\u5230\u7684\u7edf\u8ba1\u6591\u56fe\u90fd\u957f\u5f97\u4e00\u6837\u3002</p> <p>\u8fd9\u79cd\u5173\u8054\u957f\u5ea6\u7684\u53d1\u6563\uff0c\u5728\u5012\u6613\u7a7a\u95f4\u4e2d\u4f53\u73b0\u4e3a\uff0c\u5728\u957f\u6ce2\u6781\u9650\u4e0b\uff08\\(\\mathbf{q} \\to 0\\)\uff09\uff0c\u5173\u8054\u51fd\u6570\u672c\u8eab\u4e5f\u53d1\u6563\u4e86\uff1a\\(\\langle |\\phi(\\mathbf{q} \\to 0)|^2 \\rangle \\propto T/r \\to \\infty\\)\u3002\u8bb2\u4e49\u4e2d\u660e\u786e\u6307\u51fa\u7684\"\u53d1\u6563\u7684\u5173\u8054 (DIVERGENT CORRELATIONS)\" \u6b63\u662f\u8fd9\u4e00\u4e34\u754c\u73b0\u8c61\u7684\u6570\u5b66\u6807\u5fd7\u3002\u8fd9\u6b63\u662f\u8bf8\u5982\u4e34\u754c\u4e73\u5149\uff08\u6db2\u4f53\u5728\u4e34\u754c\u70b9\u9644\u8fd1\u56e0\u5bc6\u5ea6\u6da8\u843d\u5267\u70c8\u800c\u53d8\u5f97\u6d51\u6d4a\uff09\u7b49\u5b8f\u89c2\u4e34\u754c\u73b0\u8c61\u7684\u5fae\u89c2\u6839\u6e90\u3002\u901a\u8fc7\u5bf9\u6a21\u578bA\u7684\u7b80\u5355\u5206\u6790\uff0c\u6211\u4eec\u5df2\u7ecf\u89e6\u6478\u5230\u4e86\u73b0\u4ee3\u76f8\u53d8\u7406\u8bba\u7684\u6838\u5fc3\u3002</p>"},{"location":"zh/notes/25.%20%E6%A2%AF%E5%BA%A6%E5%8A%A8%E5%8A%9B%E5%AD%A6%E3%80%81%E7%9B%B8%E5%8F%98%E4%B8%8E%E5%BC%9B%E8%B1%AB/#_5","title":"\u7ed3\u8bba","text":"<p>\u4ece\u4e0a\u4e00\u8bb2\u5efa\u7acb\u7684\u6602\u8428\u683c\u7406\u8bba\u7b49\u666e\u9002\u6982\u5ff5\u51fa\u53d1\uff0c\u6211\u4eec\u6210\u529f\u5730\u4e3a\u4e00\u7c7b\u91cd\u8981\u7684\u7269\u7406\u8fc7\u7a0b\u2014\u2014\u975e\u5b88\u6052\u5e8f\u53c2\u91cf\u7684\u5f1b\u8c6b\u2014\u2014\u6784\u5efa\u4e86\u5176\u52a8\u529b\u5b66\u7684\u5177\u4f53\u6846\u67b6\uff0c\u5373\u6a21\u578bA (Model A) \u3002\u6574\u4e2a\u8fc7\u7a0b\u8d2f\u7a7f\u4e86\u4e09\u5927\u6838\u5fc3\u6982\u5ff5\u652f\u67f1\uff1a</p> <ol> <li> <p>\u68af\u5ea6\u52a8\u529b\u5b66 (Gradient Dynamics) \uff1a\u6211\u4eec\u660e\u786e\u4e86\u7cfb\u7edf\u5f1b\u8c6b\u7684\u9a71\u52a8\u529b\u6765\u81ea\u4e8e\u81ea\u7531\u80fd\u6cdb\u51fd\u7684\u68af\u5ea6\u3002\u7cfb\u7edf\u901a\u8fc7\u6cbf\u7740\u81ea\u7531\u80fd\u666f\u89c2\"\u4e0b\u5c71\"\u7684\u65b9\u5f0f\u8d70\u5411\u5e73\u8861\uff0c\u5176\u6f14\u5316\u901f\u7387\u7531\u5c40\u57df\u7684\u81ea\u7531\u80fd\u68af\u5ea6\u51b3\u5b9a\u3002\u81ea\u7531\u80fd\u672c\u8eab\u5219\u626e\u6f14\u4e86\u674e\u96c5\u666e\u8bfa\u592b\u51fd\u6570\u7684\u89d2\u8272\uff0c\u786e\u4fdd\u4e86\u8fd9\u6761\u201c\u4e0b\u5c71\u201d\u4e4b\u8def\u662f\u5355\u5411\u7684\u3001\u4e0d\u53ef\u9006\u7684\uff0c\u6700\u7ec8\u5fc5\u7136\u7a33\u5b9a\u5728\u80fd\u91cf\u7684\u6700\u4f4e\u70b9\u3002</p> </li> <li> <p>\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Fluctuation-Dissipation Theorem) \uff1a\u70ed\u5e93\u7684\u6da8\u843d\uff08\u566a\u58f0\u9879 \\(\\xi\\)\uff09\u548c\u8017\u6563\uff08\u6602\u8428\u683c\u7cfb\u6570 \\(L\\)\uff09\u4f5c\u7528\u662f\u540c\u4e00\u5fae\u89c2\u8fc7\u7a0b\u7684\u4e00\u4f53\u4e24\u9762\u3002\u5b83\u4eec\u4e4b\u95f4\u7531\u6e29\u5ea6 \\(T\\) \u51b3\u5b9a\u7684\u4e25\u683c\u5173\u7cfb \\(N = 2LT\\)\uff0c\u662f\u4fdd\u8bc1\u6211\u4eec\u7684\u52a8\u529b\u5b66\u6a21\u578b\u80fd\u591f\u6b63\u786e\u6f14\u5316\u5230\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u6240\u63cf\u8ff0\u7684\u70ed\u529b\u5b66\u5e73\u8861\u6001\u7684\u5173\u952e\u3002</p> </li> <li> <p>\u4e34\u754c\u73b0\u8c61 (Critical Phenomena) \uff1a\u901a\u8fc7\u5728\u9ad8\u65af\u8fd1\u4f3c\u4e0b\u6c42\u89e3\u6a21\u578b\uff0c\u6211\u4eec\u89e6\u6478\u5230\u4e86\u73b0\u4ee3\u76f8\u53d8\u7406\u8bba\u7684\u6838\u5fc3\u3002\u5f53\u7cfb\u7edf\u903c\u8fd1\u8fde\u7eed\u76f8\u53d8\u70b9\uff08\\(r \\to 0\\)\uff09\u65f6\uff0c\u5176\u5173\u8054\u957f\u5ea6 (\\(\\xi = \\sqrt{c/r}\\)) \u4f1a\u53d1\u6563\uff0c\u5bfc\u81f4\u957f\u7a0b\u5173\u8054\u548c\u5267\u70c8\u7684\u6da8\u843d\u3002\u8fd9\u662f\u5bf9\u5965\u6069\u65af\u5766-\u6cfd\u5c3c\u514b (Ornstein-Zernike) \u5173\u8054\u51fd\u6570\u7684\u5206\u6790\u6240\u63ed\u793a\u7684\u666e\u9002\u884c\u4e3a\uff0c\u5b83\u5b8c\u7f8e\u5730\u89e3\u91ca\u4e86\u4e34\u754c\u70b9\u6807\u5ea6\u4e0d\u53d8\u6027\u7684\u8d77\u6e90\u3002</p> </li> </ol> <p>\u6211\u4eec\u5c06\u8fd9\u4e9b\u601d\u60f3\u878d\u5408\uff0c\u6700\u7ec8\u63a8\u5bfc\u51fa\u7684\u542b\u65f6\u91d1\u5179\u5821-\u6717\u9053\uff08\u827e\u4f26-\u5361\u6069\uff09\u65b9\u7a0b\uff0c\u662f\u63cf\u8ff0\u975e\u5b88\u6052\u5e8f\u53c2\u91cf\u52a8\u529b\u5b66\u7684\u5178\u8303\u6a21\u578b\u3002\u5b83\u6210\u529f\u5730\u5c06\u5c40\u57df\u7684\u76f8\u5206\u79bb\u8d8b\u52bf\uff08\u201c\u53cd\u5e94\u201d\u9879\uff09\u548c\u975e\u5c40\u57df\u7684\u754c\u9762\u5f20\u529b\uff08\u201c\u6269\u6563\u201d\u9879\uff09\u7edf\u4e00\u5728\u540c\u4e00\u4e2a\u65b9\u7a0b\u4e2d\uff0c\u5728\u7269\u7406\u5b66\u548c\u6750\u6599\u79d1\u5b66\u7684\u8bf8\u591a\u9886\u57df\uff08\u5982\u5408\u91d1\u4e2d\u7684\u7574\u7c97\u5316\uff09\u90fd\u6709\u7740\u5e7f\u6cdb\u5e94\u7528\u3002</p> <p>\u7136\u800c\uff0c\u6a21\u578bA\u5904\u7406\u7684\u662f\u6700\u7b80\u5355\u7684\u60c5\u51b5\u3002\u5728\u8bb8\u591a\u7269\u7406\u7cfb\u7edf\u4e2d\uff0c\u5e8f\u53c2\u91cf\u662f\u5b88\u6052\u7684\uff0c\u4f8b\u5982\u4e8c\u5143\u5408\u91d1\u4e2d\u4e24\u79cd\u7ec4\u5206\u7684\u603b\u539f\u5b50\u6570\u662f\u56fa\u5b9a\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5e8f\u53c2\u91cf\u4e0d\u80fd\u5728\u67d0\u5904\u51ed\u7a7a\u6d88\u5931\uff0c\u5b83\u7684\u51cf\u5c11\u5fc5\u987b\u4f34\u968f\u7740\u5728\u53e6\u4e00\u5904\u7684\u589e\u52a0\uff0c\u8fd9\u610f\u5473\u7740\u52a8\u529b\u5b66\u5fc5\u987b\u7531\u4e00\u4e2a\u201c\u6d41\u201d\u6216\u201c\u901a\u91cf\u201d\u6765\u63cf\u8ff0\u3002\u8fd9\u79cd\u5b88\u6052\u5f8b\u7684\u7ea6\u675f\u5c06\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u52a8\u529b\u5b66\u65b9\u7a0b\u7684\u5f62\u5f0f\uff0c\u5f15\u51fa\u6211\u4eec\u5c06\u4e8e\u4e0b\u4e00\u8bb2\u63a2\u8ba8\u7684\u6a21\u578bB\uff08Cahn-Hilliard\u65b9\u7a0b\uff09\u3002\u5b83\u5c06\u4e3a\u6211\u4eec\u63ed\u793a\u66f4\u591a\u5173\u4e8e\u975e\u5e73\u8861\u4e16\u754c\u4e2d\u7ed3\u6784\u5f62\u6210\u7684\u5965\u79d8\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/","title":"\u5f15\u8a00","text":"<p>\u5728\u4e0a\u4e00\u8bb2\u4e2d\uff0c\u6211\u4eec\u501f\u52a9\u5f3a\u5927\u7684\u91d1\u5179\u5821-\u6717\u9053\u7406\u8bba\uff0c\u63cf\u7ed8\u4e86\u4e00\u5e45\u9759\u6001\u7684\u81ea\u7531\u80fd\u666f\u89c2 (free energy landscape) \u56fe\uff1a\u7cfb\u7edf\u4f1a\u901a\u8fc7\u68af\u5ea6\u52a8\u529b\u5b66\uff0c\u7a33\u5b9a\u5730\u201c\u6ed1\u5411\u201d\u5e76\u505c\u7559\u5728\u666f\u89c2\u7684\u201c\u5c71\u8c37\u201d\u4e4b\u4e2d\u3002\u8fd9\u5f15\u5bfc\u6211\u4eec\u5f97\u5230\u4e86\u6a21\u578b A (Model A)\uff0c\u5b83\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5e73\u8861\u6001\u7684\u9759\u6001\u5c5e\u6027\u3002</p> <p>\u7136\u800c\uff0c\u4e00\u4e2a\u6839\u672c\u6027\u7684\u95ee\u9898\u4f9d\u7136\u60ac\u800c\u672a\u51b3\uff1a\u7cfb\u7edf\u201c\u4e0b\u5c71\u201d\u7684\u901f\u5ea6\u6709\u591a\u5feb\uff1f \u8fd9\u8282\u8bfe\uff0c\u6211\u4eec\u7684\u7126\u70b9\u5c06\u4ece\u7cfb\u7edf\u662f\u5426\u8fbe\u5230\u5e73\u8861\uff0c\u8f6c\u79fb\u5230\u5b83\u5982\u4f55\u4ee5\u53ca\u591a\u5feb\u8fbe\u5230\u5e73\u8861\u3002\u6211\u4eec\u5c06\u6df1\u5165\u7814\u7a76\u6da8\u843d\u7684\u65f6\u95f4\u7279\u6027\uff0c\u7279\u522b\u662f\u5728\u4e34\u754c\u70b9\u9644\u8fd1\uff0c\u6b64\u65f6\u81ea\u7531\u80fd\u666f\u89c2\u53d8\u5f97\u5f02\u5e38\u5e73\u5766\u3002\u8fd9\u4e00\u63a2\u7d22\u5c06\u63ed\u793a\u4e34\u754c\u73b0\u8c61\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u52a8\u6001\u7279\u5f81\u4e4b\u4e00\uff1a\u4e34\u754c\u6162\u5316 (critical slowing down) \u3002</p> <p>\u968f\u540e\uff0cErwin Frey \u6559\u6388\u5c06\u4ecb\u7ecd\u4e00\u5957\u5f3a\u5927\u7684\u5206\u6790\u5de5\u5177\u2014\u2014\u54cd\u5e94\u51fd\u6570 (response function) \u548c\u52a8\u6001\u78c1\u5316\u7387 (dynamic susceptibility)\u2014\u2014\u6765\u4e3b\u52a8\u201c\u63a2\u6d4b\u201d\u8fd9\u4e9b\u52a8\u529b\u5b66\u8fc7\u7a0b\u3002\u8fd9\u5c06\u63ed\u793a\u4e00\u4e2a\u6df1\u523b\u7684\u5185\u5728\u8054\u7cfb\uff1a\u7cfb\u7edf\u5185\u90e8\u7684\u81ea\u53d1\u6da8\u843d\u4e0e\u5176\u5bf9\u5916\u573a\u54cd\u5e94\u7684\u8017\u6563\u4e4b\u95f4\u662f\u5982\u4f55\u88ab\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7edf\u4e00\u8d77\u6765\u7684\u3002</p> <p>\u6700\u540e\uff0c\u8bfe\u7a0b\u5c06\u5f15\u5165\u4e00\u7c7b\u65b0\u7684\u52a8\u529b\u5b66\u6a21\u578b\u2014\u2014\u6a21\u578b B (Model B)\u3002\u5b83\u4e0e\u6a21\u578bA\u7684\u6839\u672c\u533a\u522b\u5728\u4e8e\uff0c\u5b83\u4e13\u95e8\u7528\u4e8e\u63cf\u8ff0\u5e8f\u53c2\u91cf\u662f\u5b88\u6052\u91cf\u7684\u7cfb\u7edf\uff0c\u4e3a\u6211\u4eec\u540e\u7eed\u7406\u89e3\u76f8\u5206\u79bb\u548c\u6591\u56fe\u5f62\u6210\u7b49\u66f4\u4e3a\u590d\u6742\u7684\u73b0\u8c61\u5960\u5b9a\u575a\u5b9e\u7684\u57fa\u7840\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#1-a","title":"1. \u6a21\u578b A \u7684\u52a8\u529b\u5b66\u4e0e\u4e34\u754c\u6162\u5316","text":"<p>\u5728\u4e0a\u4e00\u8282\u8bfe\u4e2d\uff0c\u6a21\u578bA\u6784\u5efa\u4e86\u4e00\u5e45\u9759\u6001\u7684\u201c\u81ea\u7531\u80fd\u5730\u8c8c\u56fe\u201d\u3002\u8fd9\u5e45\u56fe\u666f\u867d\u7136\u6210\u529f\u5730\u9884\u6d4b\u4e86\u7cfb\u7edf\u5728\u4e0d\u540c\u6e29\u5ea6\u4e0b\u7684\u5e73\u8861\u76f8\u6001\uff0c\u4f46\u5b83\u672c\u8eab\u662f\u9759\u6b62\u7684\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u4e3a\u8fd9\u5e45\u9759\u6001\u7684\u753b\u5377\u6ce8\u5165\u65f6\u95f4\u7684\u7ef4\u5ea6\uff0c\u63a2\u8ba8\u7cfb\u7edf\u662f\u5982\u4f55\u5728\u8fd9\u7247\u5730\u8c8c\u4e0a\u52a8\u6001\u6f14\u5316\u7684\u3002\u6211\u4eec\u5c06\u4ece\u6700\u57fa\u672c\u7684\u95ee\u9898\u5165\u624b\uff1a\u4e00\u4e2a\u504f\u79bb\u4e86\u5e73\u8861\u201c\u5c71\u8c37\u201d\u7684\u6da8\u843d\uff0c\u4f1a\u4ee5\u591a\u5feb\u7684\u901f\u5ea6\u8870\u51cf\u56de\u53bb\uff1f\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u63a2\u7d22\uff0c\u5c06\u5f15\u5bfc\u6211\u4eec\u53d1\u73b0\u4e34\u754c\u70b9\u9644\u8fd1\u4e00\u4e2a\u666e\u9002\u7684\u52a8\u529b\u5b66\u73b0\u8c61\u2014\u2014\u4e34\u754c\u6162\u5316\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#11-a","title":"1.1 \u56de\u987e\u6a21\u578b A \u7684\u8fd0\u52a8\u65b9\u7a0b","text":"<p>\u4ece\u6a21\u578b A \u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u51fa\u53d1\uff0c\u5728\u5e73\u5747\u573a\uff08\u6216\u9ad8\u65af\u8fd1\u4f3c\uff09\u7684\u6846\u67b6\u4e0b\uff0c\u6211\u4eec\u5ffd\u7565\u4e86\u81ea\u7531\u80fd\u4e2d\u7684\u56db\u6b21\u9879\uff0c\u53ea\u8003\u8651\u6da8\u843d\u7684\u4e8c\u6b21\u8d21\u732e\u3002\u5bf9\u4e8e\u5e8f\u53c2\u91cf \\(\\phi\\) \u7684\u6da8\u843d\uff0c\u5176\u5728\u5085\u91cc\u53f6\u7a7a\u95f4\u4e2d\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u53ef\u4ee5\u7ebf\u6027\u5316\u4e3a\uff1a</p> \\[\\partial_t\\phi(\\mathbf{q},t) = -L(r+cq^2)\\phi(\\mathbf{q},t) + Lh(\\mathbf{q},t) + \\xi(\\mathbf{q},t)\\] <ul> <li> <p>\u5de6\u4fa7\u9879 \\(\\partial_t \\phi(\\mathbf{q}, t)\\) \uff1a\u4ee3\u8868\u4e86\u6ce2\u77e2 (wave vector)\u4e3a \\(\\mathbf{q}\\) \u7684\u6da8\u843d\u6a21\u5f0f\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u7a7a\u95f4\u5c3a\u5ea6 \\(\\lambda \\sim 1/|\\mathbf{q}|\\) \u7684\u4e00\u79cd\u201c\u6ce2\u7eb9\u201d\uff09\u5176\u632f\u5e45\u968f\u65f6\u95f4\u7684\u53d8\u5316\u7387\u3002</p> </li> <li> <p>\u6062\u590d\u529b\u9879 \\(-L(r + cq^2)\\phi(\\mathbf{q}, t)\\) \uff1a\u8fd9\u662f\u9a71\u52a8\u7cfb\u7edf\u56de\u5f52\u5e73\u8861\u7684\u786e\u5b9a\u6027\u201c\u6062\u590d\u529b\u201d\u3002</p> <ul> <li>\\(L\\) \u662f\u6602\u8428\u683c\u52a8\u529b\u5b66\u7cfb\u6570\uff0c\u5b83\u8bbe\u5b9a\u4e86\u7cfb\u7edf\u5f1b\u8c6b\u7684\u6574\u4f53\u65f6\u95f4\u5c3a\u5ea6\uff0c\u8861\u91cf\u4e86\u7cfb\u7edf\u201c\u4e0b\u6ed1\u201d\u7684\u901f\u5ea6\u3002</li> <li>\u62ec\u53f7\u4e2d\u7684\u9879 \\((r + cq^2)\\) \u6b63\u662f\u6211\u4eec\u5728\u7b2c25\u8bb2\u4e2d\u63a8\u5bfc\u51fa\u7684\u9759\u6001\u5173\u8054\u51fd\u6570\u7684\u5012\u6570\uff08\u5ffd\u7565\u6e29\u5ea6\u56e0\u5b50 \\(T\\)\uff09\uff0c\u5373 \\(\\langle \\phi(\\mathbf{q}) \\phi(-\\mathbf{q}) \\rangle_0 = \\frac{T}{r + cq^2}\\)\u3002\u8fd9\u4e00\u8054\u7cfb\u544a\u8bc9\u6211\u4eec\uff1a\u4e00\u4e2a\u9759\u6001\u65f6\u5173\u8054\u8d8a\u5f3a\u7684\u6a21\u5f0f\uff08\u5206\u6bcd\u8d8a\u5c0f\uff09\uff0c\u5b83\u5728\u52a8\u6001\u6f14\u5316\u4e2d\u611f\u53d7\u5230\u7684\u6062\u590d\u529b\u5c31\u8d8a\u5fae\u5f31\u3002</li> </ul> </li> <li> <p>\u5916\u573a\u9a71\u52a8\u9879 \\(Lh(\\mathbf{q}, t)\\) \uff1a\u4ee3\u8868\u6765\u81ea\u4e0e\u5e8f\u53c2\u91cf \\(\\phi\\) \u5171\u8f6d\u7684\u5916\u90e8\u573a \\(h\\) \u7684\u9a71\u52a8\u529b\u3002\u4f8b\u5982\uff0c\u5728\u78c1\u6027\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u5c31\u662f\u5916\u90e8\u78c1\u573a\u3002</p> </li> <li> <p>\u70ed\u566a\u58f0\u9879 \\(\\xi(\\mathbf{q}, t)\\)\uff1a\u4ee3\u8868\u7cfb\u7edf\u4e0e\u70ed\u5e93\u8026\u5408\u4ea7\u751f\u7684\u3001\u6c38\u4e0d\u505c\u6b47\u7684\u968f\u673a\u201c\u8e22\u52a8\u201d\u3002\u5b83\u662f\u4e00\u4e2a\u65f6\u7a7a\u9ad8\u65af\u767d\u566a\u58f0\uff0c\u5176\u5f3a\u5ea6\u7531\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u4e25\u683c\u786e\u5b9a\u4e3a \\(\\langle \\xi(\\mathbf{q}, t) \\xi(\\mathbf{q}', t') \\rangle = 2LT(2\\pi)^d \\delta(\\mathbf{q} + \\mathbf{q}') \\delta(t - t')\\)\u3002</p> </li> </ul>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#12-tau_q","title":"1.2 \u63a8\u5bfc\u7279\u5f81\u5f1b\u8c6b\u65f6\u95f4 \\(\\tau_q\\)","text":"<p>\u4e3a\u4e86\u7406\u89e3\u7cfb\u7edf\u7684\u672c\u5f81\u52a8\u529b\u5b66\uff08intrinsic dynamics\uff09\uff0c\u5373\u7cfb\u7edf\u81ea\u8eab\u7684\u201c\u4e2a\u6027\u201d\uff0c\u6211\u4eec\u9700\u8981\u5265\u79bb\u5916\u90e8\u7684\u5e72\u6270\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u8003\u5bdf\u5728\u6ca1\u6709\u5916\u573a (\\(h=0\\)) \u5e76\u4e14\u5ffd\u7565\u77ac\u65f6\u566a\u58f0\uff08\u6216\u8005\u8bf4\uff0c\u5bf9\u566a\u58f0\u8fdb\u884c\u7cfb\u7efc\u5e73\u5747\uff0c\\(\\langle\\xi\\rangle=0\\)\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u6da8\u843d\u662f\u5982\u4f55\u81ea\u884c\u8870\u51cf\u7684\u3002\u6b64\u65f6\uff0c\u5e73\u5747\u503c \\(\\langle\\phi(\\mathbf{q},t)\\rangle\\) \u7684\u6f14\u5316\u9075\u5faa\u4e00\u4e2a\u7eaf\u7cb9\u786e\u5b9a\u6027\u7684\u65b9\u7a0b\uff1a</p> \\[\\frac{d}{dt}\\langle\\phi(\\mathbf{q},t)\\rangle = -L(r+cq^2)\\langle\\phi(\\mathbf{q},t)\\rangle\\] <p>\u8fd9\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u4e00\u9636\u7ebf\u6027\u5e38\u5fae\u5206\u65b9\u7a0b\uff0c\u5176\u89e3\u4e3a\u6211\u4eec\u975e\u5e38\u719f\u6089\u7684\u6307\u6570\u8870\u51cf\u5f62\u5f0f\uff1a</p> \\[\\langle\\phi(\\mathbf{q},t)\\rangle = \\phi(\\mathbf{q},0)e^{-t/\\tau_q}\\] <p>\u5176\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u6ce2\u77e2\u4e3a \\(\\mathbf{q}\\) \u7684\u6a21\u5f0f\u7684\u7279\u5f81\u5f1b\u8c6b\u65f6\u95f4 (characteristic relaxation time) \\(\\tau_q\\) \uff1a</p> \\[\\tau_q = \\frac{1}{L(r+cq^2)}\\] <p>\u8fd9\u4e2a \\(\\tau_q\\) \u7684\u7269\u7406\u610f\u4e49\u975e\u5e38\u76f4\u89c2\uff1a\u5b83\u5c31\u662f\u6ce2\u77e2\u4e3a \\(\\mathbf{q}\\) \u7684\u6da8\u843d\u6a21\u5f0f\u4ece\u4e00\u4e2a\u975e\u5e73\u8861\u6001\u6062\u590d\u5230\u5e73\u8861\u6001\u6240\u9700\u8981\u7684\u7279\u5f81\u65f6\u95f4\u3002\\(\\tau_q\\) \u8d8a\u957f\uff0c\u610f\u5473\u7740\u8be5\u6a21\u5f0f\u7684\u201c\u8bb0\u5fc6\u201d\u8d8a\u6301\u4e45\uff0c\u8870\u51cf\u5f97\u8d8a\u6162\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#13-critical-slowing-down","title":"1.3 \u4e34\u754c\u6162\u5316\u7684\u7269\u7406\u5185\u6db5 (Critical Slowing Down)","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u5230\u8fbe\u4e86\u8fd9\u8282\u8bfe\u7684\u7b2c\u4e00\u4e2a\u6838\u5fc3\u3002\u8ba9\u6211\u4eec\u8003\u5bdf\u5f53\u7cfb\u7edf\u63a5\u8fd1\u4e34\u754c\u70b9\u65f6\uff0c\u8fd9\u4e2a\u5f1b\u8c6b\u65f6\u95f4\u4f1a\u53d1\u751f\u4ec0\u4e48\u620f\u5267\u6027\u7684\u53d8\u5316\u3002\u4e34\u754c\u70b9\u7531 \\(r \\to 0\\) \u6765\u6807\u5fd7\u3002\u4ece \\(\\tau_q\\) \u7684\u8868\u8fbe\u5f0f\u4e2d\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u5230\uff1a</p> <p>\u5f53 \\(r \\to 0\\) \uff08\u63a5\u8fd1\u4e34\u754c\u6e29\u5ea6\uff09\u4e14 \\(\\mathbf{q} \\to 0\\) \uff08\u8003\u8651\u5b8f\u89c2\u5927\u5c3a\u5ea6\u6da8\u843d\uff09\u65f6\uff0c\\(\\tau_q \\to \\infty\\)\uff01</p> <p>\u8fd9\u79cd\u5f1b\u8c6b\u65f6\u95f4\u5728\u4e34\u754c\u70b9\u9644\u8fd1\u7684\u53d1\u6563\u73b0\u8c61\uff0c\u5c31\u662f\u6240\u8c13\u7684\u4e34\u754c\u6162\u5316 (critical slowing down) \u3002\u5b83\u7684\u7269\u7406\u6839\u6e90\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u6211\u4eec\u4e4b\u524d\u5efa\u7acb\u7684\u81ea\u7531\u80fd\u666f\u89c2\u56fe\u4e2d\u5f97\u5230\u6df1\u523b\u7684\u7406\u89e3\uff1a</p> <ul> <li> <p>\u53c2\u6570 \\(r\\) \u7684\u4f5c\u7528\uff08\u5730\u8c8c\u7684\u5e73\u5766\u5316\uff09\uff1a\u53c2\u6570 \\(r \\propto (T-T_c)\\) \u8861\u91cf\u7cfb\u7edf\u79bb\u4e34\u754c\u6e29\u5ea6 \\(T_c\\) \u7684\u8ddd\u79bb\u3002\u5f53 \\(r \\to 0\\) \u65f6\uff0c\u7cfb\u7edf\u8d8b\u8fd1 \\(T_c\\)\uff0c\u81ea\u7531\u80fd\u666f\u89c2 \\(f(\\phi) = \\frac{r}{2}\\phi^2 + \\dots\\) \u5728\u539f\u70b9\u9644\u8fd1\u7684\u66f2\u7387\uff08\u4e8c\u6b21\u9879\u7cfb\u6570\uff09\u6d88\u5931\uff0c\u53d8\u5f97\u6781\u4e3a\u5e73\u5766\u3002\u5728\u4e00\u4e2a\u5e73\u5766\u7684\u52bf\u80fd\u9762\u4e0a\uff0c\u7cfb\u7edf\u51e0\u4e4e\u4e0d\u53d7\u6062\u590d\u529b\u7684\u4f5c\u7528\uff0c\u56e0\u6b64\u5728\u53d7\u5230\u70ed\u6270\u52a8\u540e\uff0c\u9700\u8981\u6781\u957f\u7684\u65f6\u95f4\u624d\u80fd\u201c\u6eda\u56de\u201d\u5e73\u8861\u4f4d\u7f6e\u3002</p> </li> <li> <p>\u53c2\u6570 \\(\\mathbf{q}\\) \u7684\u4f5c\u7528\uff08\u5927\u5c3a\u5ea6\u6da8\u843d\u7684\u4f4e\u6210\u672c\uff09 \uff1a\u6ce2\u77e2 \\(\\mathbf{q}\\) \u53cd\u6620\u4e86\u6da8\u843d\u7684\u7a7a\u95f4\u5c3a\u5ea6\uff0c\u5373 \\(\\lambda \\sim 1/|\\mathbf{q}|\\)\u3002\u5f53 \\(\\mathbf{q} \\to 0\\) \u65f6\uff0c\u6211\u4eec\u8003\u8651\u7684\u662f\u6ce2\u957f\u6781\u957f\u3001\u7a7a\u95f4\u5c3a\u5ea6\u975e\u5e38\u5927\u7684\u6da8\u843d\u3002\\(c|\\mathbf{q}|^2\\) \u9879\u4ee3\u8868\u4e86\u4ea7\u751f\u7a7a\u95f4\u68af\u5ea6\uff08\u5373\u5e8f\u53c2\u91cf\u7684\u4e0d\u5747\u5300\u6027\uff09\u7684\u80fd\u91cf\u4ee3\u4ef7\u3002\u5bf9\u4e8e\u5e73\u7f13\u7684\u5927\u5c3a\u5ea6\u6da8\u843d\uff0c\u8fd9\u4e2a\u80fd\u91cf\u4ee3\u4ef7\u975e\u5e38\u5c0f\u3002</p> </li> <li> <p>\u7efc\u5408\u6548\u5e94\uff1a\u5728\u4e34\u754c\u70b9\uff08\\(r=0\\)\uff09\uff0c\u957f\u6ce2\u6da8\u843d\uff08\\(\\mathbf{q} \\to 0\\)\uff09\u7684\u6062\u590d\u529b\u5b8c\u5168\u6d88\u5931\uff0c\u5bfc\u81f4\u5176\u5f1b\u8c6b\u65f6\u95f4\u53d1\u6563\u3002\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u884c\u4e3a\u4eff\u4f5b\u88ab\u201c\u51bb\u7ed3\u201d\u4e86\uff0c\u5bf9\u6270\u52a8\u7684\u54cd\u5e94\u53d8\u5f97\u65e0\u9650\u7f13\u6162\u3002</p> </li> </ul> <p>\u8fd9\u79cd\u201c\u6162\u5316\u201d\u5e76\u4e0d\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u53d1\u6563\uff0c\u5b83\u9075\u5faa\u7740\u666e\u9002\u7684\u6807\u5ea6\u5f8b\u3002\u5728\u52a8\u6001\u4e34\u754c\u73b0\u8c61\u7406\u8bba\u4e2d\uff0c\u4eba\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u666e\u9002\u7684\u52a8\u6001\u4e34\u754c\u6307\u6570 \\(z\\)\uff0c\u5b83\u63cf\u8ff0\u4e86\u7279\u5f81\u5f1b\u8c6b\u65f6\u95f4 \\(\\tau_\\xi\\) \u4e0e\u5173\u8054\u957f\u5ea6 \\(\\xi\\) \u4e4b\u95f4\u7684\u6807\u5ea6\u5173\u7cfb\uff1a\\(\\tau_\\xi \\sim \\xi^z\\)\u3002\u5728\u6211\u4eec\u7684\u5e73\u5747\u573a\u6a21\u578b A \u4e2d\uff0c\u5173\u8054\u957f\u5ea6 \\(\\xi \\sim r^{-1/2}\\)\u3002\u5bf9\u4e8e\u4e0e\u5173\u8054\u5c3a\u5ea6\u76f8\u5f53\u7684\u6a21\u5f0f\uff0c\u5176\u6ce2\u77e2 \\(q \\sim 1/\\xi\\)\uff0c\u5176\u5f1b\u8c6b\u65f6\u95f4\u4e3a \\(\\tau_\\xi \\approx \\frac{1}{L(r+c\\xi^{-2})} \\sim \\frac{1}{L(r+cr)} \\sim r^{-1}\\)\u3002\u5c06 \\(\\xi \\sim r^{-1/2}\\) \u4ee3\u5165\uff0c\u6211\u4eec\u5f97\u5230 \\(\\tau_\\xi \\sim (\\xi^{-2})^{-1} = \\xi^2\\)\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6a21\u578b A\uff0c\u5176\u52a8\u6001\u4e34\u754c\u6307\u6570 \\(z=2\\) \u3002\u8fd9\u8868\u660e\u4e34\u754c\u6162\u5316\u662f\u4e00\u79cd\u5177\u6709\u7279\u5b9a\u5e42\u5f8b\u884c\u4e3a\u7684\u3001\u6df1\u523b\u7684\u666e\u9002\u73b0\u8c61\u3002</p> <p>\u4e34\u754c\u6162\u5316\uff08Critical slowing down\uff09\u8fd9\u4e00\u6982\u5ff5\u6e90\u4e8e19\u4e16\u7eaa\u5bf9\u6db2\u4f53-\u6c14\u4f53\u76f8\u53d8\u4e2d\u201c\u4e34\u754c\u4e73\u5149\u201d\u73b0\u8c61\u7684\u89c2\u5bdf\uff0c\u7531\u6bd4\u5229\u65f6\u7269\u7406\u5b66\u5bb6L\u00e9on Van Hove (\u83b1\u6602\u00b7\u8303\u970d\u592b) \u57281954\u5e74\u6b63\u5f0f\u63d0\u51fa\u7684\uff0c\u4ed6\u9884\u6d4b\uff0c\u5f53\u7cfb\u7edf\u63a5\u8fd1\u4e34\u754c\u70b9\u65f6\uff0c\u5176\u52a8\u529b\u5b66\u5c06\u6025\u5267\u51cf\u6162\u3002\u5176\u7269\u7406\u672c\u8d28\u5728\u4e8e\uff0c\u5f53\u4e00\u4e2a\u7cfb\u7edf\u65e0\u9650\u8d8b\u8fd1\u4e8e\u8fde\u7eed\u76f8\u53d8\u7684\u4e34\u754c\u70b9\u65f6\uff0c\u5176\u5bf9\u5e94\u7684\u81ea\u7531\u80fd\u666f\u89c2\u4f1a\u53d8\u5f97\u5f02\u5e38\u5e73\u5766\uff0c\u5bfc\u81f4\u5c06\u7cfb\u7edf\u4ece\u6da8\u843d\u4e2d\u62c9\u56de\u5e73\u8861\u6001\u7684\u6062\u590d\u529b\u51e0\u4e4e\u6d88\u5931\u3002\u56e0\u6b64\uff0c\u7cfb\u7edf\u5185\u90e8\u7684\u6da8\u843d\u53ef\u4ee5\u5728\u7a7a\u95f4\u4e0a\u5f62\u6210\u5b8f\u89c2\u5c3a\u5ea6\u7684\u957f\u7a0b\u5173\u8054\uff08\u5373\u5173\u8054\u957f\u5ea6\u53d1\u6563\uff09\uff0c\u800c\u8fd9\u4e9b\u5de8\u5927\u7684\u3001\u76f8\u4e92\u5173\u8054\u7684\u6da8\u843d\u9700\u8981\u6781\u957f\u7684\u65f6\u95f4\u624d\u80fd\u8017\u6563\u6389\uff0c\u6700\u7ec8\u4f7f\u5f97\u7cfb\u7edf\u7684\u5f1b\u8c6b\u65f6\u95f4\u8d8b\u4e8e\u65e0\u7a77\u3002\u8fd9\u4e00\u6df1\u523b\u7684\u7269\u7406\u73b0\u8c61\u4e0d\u4ec5\u662f\u51dd\u805a\u6001\u7269\u7406\u4e2d\u7684\u57fa\u672c\u7279\u5f81\uff0c\u5982\u4eca\u66f4\u88ab\u5e7f\u6cdb\u7528\u4f5c\u4e00\u79cd\u666e\u9002\u7684\u201c\u65e9\u671f\u9884\u8b66\u4fe1\u53f7\u201d\uff0c\u7528\u4e8e\u9884\u6d4b\u590d\u6742\u7cfb\u7edf\uff08\u5982\u6c14\u5019\u6a21\u5f0f\u3001\u751f\u6001\u7cfb\u7edf\u7a33\u5b9a\u6027\u3001\u4e43\u81f3\u91d1\u878d\u5e02\u573a\uff09\u5373\u5c06\u53d1\u751f\u7684\u4e34\u754c\u7a81\u53d8\u6216\u201c\u5f15\u7206\u70b9\u201d\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#14-python","title":"1.4. Python \u6a21\u62df\uff1a\u4e34\u754c\u6162\u5316\u7684\u52a8\u6001\u53ef\u89c6\u5316","text":"<p>\u4e3a\u4e86\u80fd\u4eb2\u773c\u201c\u770b\u89c1\u201d\u4e34\u754c\u6162\u5316\uff0c\u6211\u4eec\u8f6c\u5411\u4e00\u4e2a\u5177\u4f53\u7684\u5fae\u89c2\u6a21\u578b\u2014\u2014\u4e8c\u7ef4\u4f0a\u8f9b\u6a21\u578b\u3002\u8be5\u6a21\u578b\u662f\u6a21\u578bA\u7406\u8bba\u7684\u7ecf\u5178\u8303\u4f8b\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u8499\u7279\u5361\u6d1b\u6a21\u62df\uff0c\u89c2\u5bdf\u4e00\u4e2a\u521d\u59cb\u5904\u4e8e\u5b8c\u5168\u65e0\u5e8f\uff08\u9ad8\u6e29\u968f\u673a\u6001\uff09\u7684\u81ea\u65cb\u7cfb\u7edf\uff0c\u5728\u88ab\u77ac\u95f4\u201c\u6dec\u706b\u201d\u5230\u4e0d\u540c\u6e29\u5ea6\u540e\uff0c\u662f\u5982\u4f55\u6f14\u5316\uff08\u5f1b\u8c6b\uff09\u5230\u5176\u5e73\u8861\u6001\u7684\u3002</p> <p>\u4e0b\u9762\u7684Python\u4ee3\u7801\u5c06\u6a21\u62df\u5e76\u751f\u6210\u4e00\u4e2a\u52a8\u753b\uff0c\u5e76\u6392\u6bd4\u8f83\u7cfb\u7edf\u5728\u8fdc\u79bb\u4e34\u754c\u70b9 (\\(T &lt; T_c\\)) \u548c\u63a5\u8fd1\u4e34\u754c\u70b9 (\\(T \u2248 T_c\\)) \u4e24\u79cd\u60c5\u51b5\u4e0b\u7684\u52a8\u6001\u6f14\u5316\u8fc7\u7a0b\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\n\n# --- 1. Simulation Parameters ---\nN = 100  # Lattice size (N x N)\n# Critical temperature for 2D Ising model\nTc = 2 / np.log(1 + np.sqrt(2))  # ~2.269\n\n# We will compare two scenarios\nT_far = 1.5  # Temperature far below Tc (fast relaxation)\nT_near = 2.3 # Temperature very close to Tc (critical slowing down)\n\nn_frames = 200  # Number of frames in the animation\nmc_steps_per_frame = 10  # Monte Carlo steps between each frame\n\n# --- 2. Core Ising Model Functions ---\ndef initial_state(N):\n    \"\"\"Generates a random spin configuration.\"\"\"\n    return np.random.choice([-1, 1], size=(N, N))\n\ndef metropolis_step(config, T):\n    \"\"\"Performs one Monte Carlo step using the Metropolis algorithm.\"\"\"\n    for _ in range(N * N):\n        # 1. Pick a random spin\n        x, y = np.random.randint(0, N, size=2)\n        spin = config[x, y]\n\n        # 2. Calculate energy change if flipped\n        # Periodic boundary conditions are used here\n        neighbors = config[(x+1)%N, y] + config[x, (y+1)%N] + \\\n                    config[(x-1+N)%N, y] + config[x, (y-1+N)%N]\n        delta_E = 2 * spin * neighbors  # J=1, k_B=1\n\n        # 3. Flip spin based on Metropolis criterion\n        if delta_E &lt; 0 or np.random.rand() &lt; np.exp(-delta_E / T):\n            config[x, y] = -spin\n    return config\n\n# --- 3. Setup the Animation ---\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 6))\n\n# Initialize two separate spin configurations\nconfig_far = initial_state(N)\nconfig_near = config_far.copy()  # Start from the exact same random state\n\n# Setup for the \"Far from Tc\" plot\nax1.set_title(f'Far from Critical Point: T = {T_far:.2f} &lt; Tc')\nim1 = ax1.imshow(config_far, cmap='binary', animated=True)\nax1.set_xticks([])\nax1.set_yticks([])\n\n# Setup for the \"Near Tc\" plot\nax2.set_title(f'Near Critical Point: T = {T_near:.2f} \u2248 Tc')\nim2 = ax2.imshow(config_near, cmap='binary', animated=True)\nax2.set_xticks([])\nax2.set_yticks([])\n\nfig.suptitle('Ising Model Quench: Visualizing Critical Slowing Down', fontsize=16)\n\n# --- 4. Animation Update Function ---\ndef update(frame):\n    \"\"\"This function is called for each frame of the animation.\"\"\"\n    global config_far, config_near\n\n    # Perform Monte Carlo steps for both systems\n    for _ in range(mc_steps_per_frame):\n        config_far = metropolis_step(config_far, T_far)\n        config_near = metropolis_step(config_near, T_near)\n\n    # Update the plots\n    im1.set_data(config_far)\n    im2.set_data(config_near)\n\n    # Print progress\n    if (frame + 1) % 20 == 0:\n        print(f'Animating frame {frame + 1}/{n_frames}...')\n\n    return im1, im2\n\n# --- 5. Create and Save the Animation ---\nprint(\"Generating animation... this may take a minute.\")\nani = animation.FuncAnimation(\n    fig, update, frames=n_frames, interval=50, blit=True, repeat=True\n)\n\n# Save the animation to a file instead of showing it\nani.save('critical_slowing_down.gif', writer='pillow', fps=10)\nprint(\"Animation saved as 'critical_slowing_down.gif'\")\n</code></pre> </p> <p>\u8fdc\u79bb\u4e34\u754c\u70b9, \\(T &lt; Tc\\) :\u4ece\u521d\u59cb\u7684\u968f\u673a\u201c\u96ea\u82b1\u70b9\u201d\u72b6\u6001\u5f00\u59cb\uff0c\u7cfb\u7edf\u975e\u5e38\u8fc5\u901f\u5730\u81ea\u7ec4\u7ec7\u8d77\u6765\u3002\u5c0f\u78c1\u7574\u5feb\u901f\u5408\u5e76\u3001\u957f\u5927\uff0c\u5f88\u5feb\u5c31\u5f62\u6210\u4e86\u5927\u5757\u7684\u3001\u7a33\u5b9a\u7684\u9ed1\u8272\u548c\u767d\u8272\u533a\u57df\u3002\u8fd9\u4e2a\u201c\u5927\u9c7c\u5403\u5c0f\u9c7c\u201d\u7684\u7c97\u5316\u8fc7\u7a0b\u975e\u5e38\u9ad8\u6548\u3002\u5728\u52a8\u753b\u7684\u540e\u534a\u6bb5\uff0c\u7cfb\u7edf\u7ed3\u6784\u57fa\u672c\u7a33\u5b9a\uff0c\u53ea\u6709\u8fb9\u754c\u5728\u7f13\u6162\u5730\u201c\u62c9\u76f4\u201d\u4ee5\u8fdb\u4e00\u6b65\u964d\u4f4e\u80fd\u91cf\u3002\u8fd9\u4ee3\u8868\u4e86\u7cfb\u7edf\u5df2\u7ecf\u5feb\u901f\u5f1b\u8c6b\u5230\u4e86\u5b83\u7684\u4f4e\u80fd\u6709\u5e8f\u72b6\u6001\u3002</p> <p>\u63a5\u8fd1\u4e34\u754c\u70b9, T \u2248 Tc :\u7cfb\u7edf\u540c\u6837\u4ece\u5b8c\u5168\u76f8\u540c\u7684\u968f\u673a\u72b6\u6001\u51fa\u53d1\uff0c\u4f46\u5176\u6f14\u5316\u8fc7\u7a0b\u6781\u5176\u7f13\u6162 \u3002\u78c1\u7574\u5728\u6240\u6709\u5c3a\u5ea6\u4e0a\u4e0d\u65ad\u5730\u5f62\u6210\u3001\u5408\u5e76\u53c8\u7834\u788e\uff0c\u5448\u73b0\u51fa\u4e00\u5e45\u95ea\u70c1\u4e0d\u5b9a\u3001\u72ac\u7259\u4ea4\u9519\u7684\u590d\u6742\u6591\u56fe\uff08\u4e34\u754c\u6da8\u843d\uff09\u3002 \u7cfb\u7edf\u4f3c\u4e4e\u201c\u72b9\u8c6b\u4e0d\u51b3\u201d\uff0c\u65e0\u6cd5\u5728\u5b8f\u89c2\u4e0a\u5f62\u6210\u7a33\u5b9a\u7684\u6709\u5e8f\u7ed3\u6784\u3002\u76f4\u5230\u52a8\u753b\u7ed3\u675f\uff0c\u7cfb\u7edf\u4f9d\u7136\u5904\u4e8e\u4e00\u79cd\u9ad8\u5ea6\u52a8\u6001\u548c\u6df7\u4e71\u7684\u72b6\u6001\u3002\u8fd9\u79cd\u6f14\u5316\u7684\u505c\u6ede\uff0c\u6b63\u662f\u4e34\u754c\u6162\u5316\u7684\u76f4\u63a5\u89c6\u89c9\u8bc1\u636e\uff1a\u7531\u4e8e\u81ea\u7531\u80fd\u5730\u8c8c\u53d8\u5f97\u5e73\u5766\uff0c\u6062\u590d\u529b\u6781\u5176\u5fae\u5f31\uff0c\u7cfb\u7edf\u9700\u8981\u65e0\u9650\u957f\u7684\u65f6\u95f4\u624d\u80fd\u4ece\u6da8\u843d\u4e2d\u5f1b\u8c6b\u51fa\u6765\u3002\u52a8\u529b\u5b66\u4eff\u4f5b\u88ab\u201c\u51bb\u7ed3\u201d\u4e86\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#2-chiqomega","title":"2. \u7cfb\u7edf\u54cd\u5e94\u4e0e\u52a8\u6001\u78c1\u5316\u7387 \\(\\chi(q,\\omega)\\)","text":"<p>\u4e0a\u4e00\u5c0f\u8282\uff0c\u6211\u4eec\u662f\u88ab\u52a8\u5730\"\u89c2\u5bdf\"\u4e00\u4e2a\u7cfb\u7edf\u5982\u4f55\u81ea\u53d1\u5730\u4ece\u6270\u52a8\u4e2d\u6062\u590d\u5e73\u9759\u3002\u8fd9\u5c31\u50cf\u662f\u770b\u5230\u4e00\u4e2a\u949f\u6446\u81ea\u5df1\u6162\u6162\u505c\u4e0b\u6765\u3002\u4f46\u8981\u771f\u6b63\u4e86\u89e3\u8fd9\u4e2a\u949f\u6446\u7684\u7279\u6027\uff08\u6bd4\u5982\u5b83\u7684\u56fa\u6709\u9891\u7387\u548c\u963b\u5c3c\uff09\uff0c\u4e00\u4e2a\u66f4\u4e3b\u52a8\u3001\u66f4\u5f3a\u5927\u7684\u65b9\u6cd5\u662f\u53bb\"\u63a8\"\u5b83\u4e00\u4e0b\uff0c\u770b\u770b\u5b83\u662f\u5982\u4f55\u53cd\u5e94\u7684\u3002</p> <p>\u8fd9\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u626e\u6f14\"\u5b9e\u9a8c\u7269\u7406\u5b66\u5bb6\"\u7684\u89d2\u8272\u3002\u6211\u4eec\u4e0d\u518d\u88ab\u52a8\u7b49\u5f85\uff0c\u800c\u662f\u4e3b\u52a8\u5730\u7528\u4e00\u4e2a\u5fae\u5c0f\u7684\u3001\u5468\u671f\u6027\u53d8\u5316\u7684\u5916\u90e8\"\u63a2\u9488\"\uff08\u5916\u573a\uff09\u53bb\"\u62e8\u52a8\"\u7cfb\u7edf\uff0c\u7136\u540e\u4ed4\u7ec6\u542c\u5b83\u7684\u56de\u54cd\u3002\u901a\u8fc7\u5206\u6790\u7cfb\u7edf\u662f\u5982\u4f55\u54cd\u5e94\u8fd9\u4e2a\u63a2\u9488\u7684\uff0c\u6211\u4eec\u5c06\u80fd\u4ee5\u524d\u6240\u672a\u6709\u7684\u6df1\u5ea6\uff0c\u63ed\u793a\u5176\u5185\u5728\u7684\u52a8\u529b\u5b66\u7279\u6027\u3002\u8fd9\u4e2a\"\u56de\u54cd\"\u7684\u6570\u5b66\u63cf\u8ff0\uff0c\u5c31\u662f\u672c\u8282\u8bfe\u8981\u4ecb\u7ecd\u7684\u6838\u5fc3\u7269\u7406\u91cf\u2014\u2014\u52a8\u6001\u78c1\u5316\u7387\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#21","title":"2.1. \u5728\u9891\u57df\u4e2d\u63a2\u6d4b\u7cfb\u7edf\uff1a\u52a8\u529b\u5b66\u7684\"\u5149\u8c31\"","text":"<p>\u6211\u4eec\u7814\u7a76\u7cfb\u7edf\u81ea\u53d1\u5f1b\u8c6b\u65f6\uff0c\u5173\u6ce8\u7684\u662f\u65f6\u95f4 \\(t\\)\u3002\u4f46\u8981\u7814\u7a76\u7cfb\u7edf\u5bf9\u4e00\u4e2a\u5468\u671f\u6027\u63a2\u9488\u7684\u54cd\u5e94\uff0c\u6700\u81ea\u7136\u7684\u8bed\u8a00\u4e0d\u662f\u65f6\u95f4\u57df\uff0c\u800c\u662f\u9891\u7387\u57df (frequency domain) \u3002\u8fd9\u5c31\u50cf\u5728\u97f3\u4e50\u4e2d\uff0c\u6211\u4eec\u4e0d\u4ec5\u5173\u5fc3\u97f3\u7b26\u4f55\u65f6\u54cd\u8d77\uff0c\u66f4\u5173\u5fc3\u5b83\u7684\u97f3\u9ad8\uff08\u9891\u7387\uff09\u3002</p> <p>\u6211\u4eec\u7684\"\u63a2\u9488\"\u662f\u4e00\u4e2a\u5728\u7a7a\u95f4\u548c\u65f6\u95f4\u4e0a\u90fd\u5448\u5468\u671f\u6027\u53d8\u5316\u7684\u5fae\u5c0f\u5916\u573a \\(h(\\mathbf{x}, t)\\)\u3002\u901a\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u4efb\u4f55\u590d\u6742\u7684\u65f6\u7a7a\u53d8\u5316\u90fd\u53ef\u4ee5\u88ab\u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u7b80\u5355\u7684\u5e73\u9762\u6ce2\u7684\u53e0\u52a0\u3002\u6211\u4eec\u53ea\u53d6\u5176\u4e2d\u4e00\u4e2a\u5206\u91cf\u6765\u7814\u7a76\uff1a\\(h(\\mathbf{q}, t) = h_0 e^{-i\\omega t}\\)\u3002</p> <ul> <li>\\(\\mathbf{q}\\) \u662f\u6ce2\u77e2\uff0c\u51b3\u5b9a\u4e86\u63a2\u9488\u5728\u7a7a\u95f4\u4e0a\u7684\u5468\u671f\u6027 (\\(\\lambda \\sim 1/|\\mathbf{q}|\\))\u3002</li> <li>\\(\\omega\\) \u662f\u89d2\u9891\u7387\uff0c\u51b3\u5b9a\u4e86\u63a2\u9488\u5728\u65f6\u95f4\u4e0a\u7684\u5468\u671f\u6027 (\\(T \\sim 1/\\omega\\))\u3002</li> </ul> <p>\u4e3a\u4e86\u5206\u6790\u7cfb\u7edf\u7684\u54cd\u5e94 \\(\\phi(\\mathbf{q}, t)\\)\uff0c\u6211\u4eec\u540c\u6837\u5bf9\u5b83\u8fdb\u884c\u65f6\u95f4\u4e0a\u7684\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u5f97\u5230 \\(\\phi(\\mathbf{q}, \\omega)\\)\uff1a</p> \\[\\phi(\\mathbf{q},\\omega) = \\int_{-\\infty}^{\\infty} dt \\, e^{i\\omega t} \\phi(\\mathbf{q},t)\\] <p>\u8fd9\u4e2a\u53d8\u6362\u7684\u5a01\u529b\u5728\u4e8e\uff0c\u5b83\u5c06\u4e00\u4e2a\u968f\u65f6\u95f4\u6f14\u5316\u7684\u590d\u6742\u52a8\u529b\u5b66\u95ee\u9898\uff0c\u5206\u89e3\u6210\u4e86\u4e00\u7cfb\u5217\u5728\u4e0d\u540c\u9891\u7387 \\(\\omega\\) \u4e0b\u7684\u3001\u7b80\u5355\u7684\u4ee3\u6570\u95ee\u9898\u3002\u65f6\u95f4\u5bfc\u6570 \\(\\partial_t\\) \u5728\u9891\u57df\u4e2d\u88ab\u4e00\u4e2a\u7b80\u5355\u7684\u4e58\u6cd5\u56e0\u5b50 \\(-i\\omega\\) \u6240\u53d6\u4ee3\u3002\u8fd9\u4f7f\u5f97\u6c42\u89e3\u53d8\u5f97\u5f02\u5e38\u7b80\u5355\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u8ba9\u6211\u4eec\u80fd\u770b\u5230\u7cfb\u7edf\u5bf9\u4e0d\u540c\u9891\u7387\u7684\"\u97f3\u9ad8\"\u662f\u5982\u4f55\u9009\u62e9\u6027\u54cd\u5e94\u7684\uff0c\u4ece\u800c\u7ed8\u5236\u51fa\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\"\u5149\u8c31\" \u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#22","title":"2.2. \u52a8\u6001\u78c1\u5316\u7387\u7684\u63a8\u5bfc\uff1a\u7cfb\u7edf\u7684\"\u4f20\u9012\u51fd\u6570\"","text":"<p>\u6211\u4eec\u5c06\u5085\u91cc\u53f6\u53d8\u6362\u5e94\u7528\u4e8e\u6a21\u578b A \u7684\u7ebf\u6027\u5316\u8fd0\u52a8\u65b9\u7a0b\u7684\u6bcf\u4e00\u9879\uff1a</p> \\[\\underbrace{-i\\omega\\phi(\\mathbf{q},\\omega)}_{\\text{from } \\partial_t\\phi} = \\underbrace{-L(r+c|\\mathbf{q}|^2)\\phi(\\mathbf{q},\\omega)}_{\\text{\u6062\u590d\u529b}} + \\underbrace{Lh(\\mathbf{q},\\omega)}_{\\text{\u5916\u573a\u9a71\u52a8}} + \\underbrace{\\xi(\\mathbf{q},\\omega)}_{\\text{\u566a\u58f0}}\\] <p>\u6211\u4eec\u5173\u5fc3\u7684\u662f\u7cfb\u7edf\u5bf9\u5916\u90e8\u573a\u7684\u5e73\u5747\u54cd\u5e94\uff0c\u56e0\u6b64\u5bf9\u4e0a\u5f0f\u53d6\u7cfb\u7efc\u5e73\u5747 \\(\\langle\\ldots\\rangle\\)\u3002\u7531\u4e8e\u70ed\u566a\u58f0\u7684\u5e73\u5747\u503c\u4e3a\u96f6\uff0c\\(\\langle\\xi(\\mathbf{q},\\omega)\\rangle=0\\)\uff0c\u566a\u58f0\u9879\u4fbf\u6d88\u5931\u4e86\u3002\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u4ee3\u6570\u65b9\u7a0b\uff1a</p> \\[-i\\omega\\langle\\phi(\\mathbf{q},\\omega)\\rangle = -L(r+c|\\mathbf{q}|^2)\\langle\\phi(\\mathbf{q},\\omega)\\rangle + Lh(\\mathbf{q},\\omega)\\] <p>\u6574\u7406\u4e00\u4e0b\uff0c\u5c06\u6240\u6709\u5305\u542b \\(\\langle\\phi\\rangle\\) \u7684\u9879\u79fb\u5230\u5de6\u8fb9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u51fa\u8f93\u51fa (\u7cfb\u7edf\u54cd\u5e94 \\(\\langle\\phi\\rangle\\)) \u4e0e\u8f93\u5165 (\u5916\u90e8\u63a2\u9488 \\(h\\)) \u4e4b\u95f4\u7684\u5173\u7cfb\uff1a</p> \\[\\langle\\phi(\\mathbf{q},\\omega)\\rangle = \\underbrace{\\frac{L}{-i\\omega+L(r+c|\\mathbf{q}|^2)}}_{\\text{\u6bd4\u4f8b\u7cfb\u6570}} h(\\mathbf{q},\\omega)\\] <p>\u8fd9\u4e2a\u6bd4\u4f8b\u7cfb\u6570\uff0c\u5728\u7269\u7406\u5b66\u4e2d\u88ab\u5b9a\u4e49\u4e3a\u52a8\u6001\u78c1\u5316\u7387 (dynamic susceptibility) \uff0c\u8bb0\u4f5c \\(\\chi(\\mathbf{q},\\omega)\\)\u3002\u5728\u5de5\u7a0b\u5b66\u4e0a\uff0c\u5b83\u5c31\u662f\u7cfb\u7edf\u7684 \"\u4f20\u9012\u51fd\u6570\" (transfer function) \u3002\u5b83\u7cbe\u786e\u5730\u544a\u8bc9\u6211\u4eec\uff0c\u7cfb\u7edf\u662f\u5982\u4f55\"\u8fc7\u6ee4\"\u6216\"\u8f6c\u6362\"\u4e00\u4e2a\u7279\u5b9a\u65f6\u7a7a\u9891\u7387\u7684\u8f93\u5165\u7684\u3002</p> \\[\\chi(\\mathbf{q},\\omega) := \\left.\\frac{\\partial\\langle\\phi(\\mathbf{q},\\omega)\\rangle}{\\partial h(\\mathbf{q},\\omega)}\\right|_{h=0} = \\frac{L}{-i\\omega+L(r+c|\\mathbf{q}|^2)}\\] <p>\u5229\u7528\u6211\u4eec\u5728\u7b2c\u4e00\u90e8\u5206\u5b9a\u4e49\u7684\u5f1b\u8c6b\u65f6\u95f4 \\(\\tau_q = \\frac{1}{L(r+c|\\mathbf{q}|^2)}\\)\uff0c\u4e0a\u5f0f\u53ef\u4ee5\u5199\u6210\u4e00\u4e2a\u66f4\u7d27\u51d1\u3001\u7269\u7406\u610f\u4e49\u66f4\u6e05\u6670\u7684\u5f62\u5f0f\uff1a</p> \\[\\chi(\\mathbf{q}, \\omega) = \\frac{L\\tau_q}{1 - i\\omega\\tau_q}\\] <p>\u8fd9\u4e2a\u516c\u5f0f\u5b8c\u7f8e\u5730\u5c06\u7cfb\u7edf\u7684\u54cd\u5e94\u7279\u6027 (\\(\\chi\\)) \u4e0e\u5176\u5185\u5728\u7684\u5f1b\u8c6b\u65f6\u95f4 (\\(\\tau_q\\)) \u8054\u7cfb\u5728\u4e86\u4e00\u8d77\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#23","title":"2.3. \u9759\u6001\u6781\u9650\uff1a\u8fde\u63a5\u52a8\u6001\u4e0e\u9759\u6001\u7684\u6865\u6881","text":"<p>\u4e00\u4e2a\u53ef\u9760\u7684\u65b0\u7406\u8bba\uff0c\u5fc5\u987b\u80fd\u5728\u9002\u5f53\u7684\u6781\u9650\u4e0b\u56de\u5f52\u5230\u5df2\u77e5\u7684\u3001\u88ab\u9a8c\u8bc1\u8fc7\u7684\u65e7\u7406\u8bba\u3002\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u81ea\u6d3d\u6027\u68c0\u9a8c\u3002\u8ba9\u6211\u4eec\u8003\u5bdf\u5f53\u5916\u90e8\u63a2\u9488\u7684\u53d8\u5316\u65e0\u9650\u7f13\u6162\u65f6\uff0c\u5373\u9759\u6001\u6781\u9650 (\\(\\omega=0\\))\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002</p> \\[\\chi(\\mathbf{q},\\omega=0) = \\frac{L\\tau_q}{1 - 0} = L\\tau_q = L \\cdot \\frac{1}{L(r+c|\\mathbf{q}|^2)} = \\frac{1}{r+c|\\mathbf{q}|^2}\\] <p>\u8fd9\u4e2a\u7ed3\u679c\u6b63\u662f\u6211\u4eec\u5728\u4e0a\u4e00\u8bb2\u4e2d\u63a8\u5bfc\u51fa\u7684\u9759\u6001\u78c1\u5316\u7387\uff08\u6216\u9759\u6001Ornstein-Zernike\u5173\u8054\u51fd\u6570\u7684\u5f62\u5f0f\uff09\u3002\u8fd9\u8868\u660e\uff0c\u6211\u4eec\u7684\u52a8\u6001\u7406\u8bba\u662f\u81ea\u6d3d\u7684\uff0c\u5b83\u6b63\u786e\u5730\u5305\u542b\u4e86\u9759\u6001\u5e73\u8861\u6001\u7406\u8bba\u4f5c\u4e3a\u5176\u4e00\u4e2a\u7279\u4f8b\u3002\u8fd9\u7ed9\u4e86\u6211\u4eec\u7ee7\u7eed\u63a2\u7d22\u7684\u4fe1\u5fc3\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#24-chi-chi","title":"2.4. \\(\\chi'\\) \u548c \\(\\chi''\\) \u7684\u7269\u7406\u8be0\u91ca\uff1a\u50a8\u80fd\u4e0e\u8017\u6563","text":"<p> \u52a8\u6001\u78c1\u5316\u7387 \\(\\chi(\\mathbf{q},\\omega)\\) \u662f\u4e00\u4e2a\u590d\u6570\uff0c\u8fd9\u610f\u5473\u7740\u7cfb\u7edf\u7684\u54cd\u5e94\u4e0e\u5916\u90e8\u7684\u9a71\u52a8\u4e4b\u95f4\u5b58\u5728\u76f8\u4f4d\u5dee\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5206\u89e3\u4e3a\u5b9e\u90e8\u548c\u865a\u90e8\uff0c\u8fd9\u4e24\u90e8\u5206\u5404\u81ea\u5177\u6709\u6df1\u523b\u7684\u7269\u7406\u610f\u4e49\u3002</p> <p>\u901a\u8fc7\u5bf9 \\(\\chi(\\mathbf{q}, \\omega) = \\frac{L\\tau_q}{1 - i\\omega\\tau_q}\\) \u7684\u5206\u6bcd\u8fdb\u884c\u6709\u7406\u5316\uff08\u5206\u5b50\u5206\u6bcd\u540c\u4e58 \\(1+i\\omega\\tau_q\\)\uff09\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[\\chi(\\mathbf{q},\\omega) = \\underbrace{\\frac{L\\tau_q}{1+(\\omega\\tau_q)^2}}_{\\chi'(\\mathbf{q},\\omega)} + i \\underbrace{\\frac{L\\omega\\tau_q^2}{1+(\\omega\\tau_q)^2}}_{\\chi''(\\mathbf{q},\\omega)}\\] <ul> <li> <p>\u5b9e\u90e8 \\(\\chi'(\\mathbf{q},\\omega)\\) (\u8272\u6563\u90e8\u5206)\uff1a     \u5b83\u63cf\u8ff0\u4e86\u7cfb\u7edf\u54cd\u5e94\u4e2d\u4e0e\u9a71\u52a8\u573a\u540c\u76f8 (in-phase) \u7684\u90e8\u5206\u3002\u60f3\u8c61\u4e00\u4e0b\u65e0\u6469\u64e6\u5730\u63a8\u4e00\u4e2a\u79cb\u5343\uff0c\u4f60\u7684\u63a8\u529b\u4e0e\u79cb\u5343\u7684\u4f4d\u79fb\u662f\u540c\u76f8\u7684\u3002\u8fd9\u90e8\u5206\u54cd\u5e94\u4e0d\u6d88\u8017\u80fd\u91cf\uff0c\u53ea\u6d89\u53ca\u80fd\u91cf\u5728\u7cfb\u7edf\u4e0e\u5916\u573a\u4e4b\u95f4\u7684\u53ef\u9006\u4ea4\u6362\uff0c\u56e0\u6b64\u4e5f\u88ab\u79f0\u4e3a\u5f39\u6027 (elastic) \u6216\u50a8\u80fd (storage) \u90e8\u5206\u3002</p> </li> <li> <p>\u865a\u90e8 \\(\\chi''(\\mathbf{q},\\omega)\\) (\u8017\u6563\u90e8\u5206)\uff1a     \u5b83\u63cf\u8ff0\u4e86\u7cfb\u7edf\u54cd\u5e94\u4e2d\u6bd4\u9a71\u52a8\u573a\u6ede\u540e90\u5ea6 (out-of-phase) \u7684\u90e8\u5206\u3002\u73b0\u5728\u60f3\u8c61\u63a8\u4e00\u4e2a\u6709\u7a7a\u6c14\u963b\u529b\u7684\u79cb\u5343\uff0c\u4f60\u5fc5\u987b\u5728\u5b83\u5230\u8fbe\u6700\u9ad8\u70b9\u4e4b\u524d\u5c31\u5f00\u59cb\u7528\u529b\uff0c\u4f60\u7684\u529b\u7684\u5cf0\u503c\u4f1a\u8d85\u524d\u4e8e\u4f4d\u79fb\u7684\u5cf0\u503c\u3002\u4ece\u7cfb\u7edf\u7684\u89d2\u5ea6\u770b\uff0c\u5b83\u7684\u54cd\u5e94\uff08\u4f4d\u79fb\uff09\u603b\u662f\u843d\u540e\u4e8e\u4f60\u7684\u9a71\u52a8\u3002\u8fd9\u79cd\u76f8\u4f4d\u6ede\u540e\u76f4\u63a5\u4e0e\u80fd\u91cf\u8017\u6563\u76f8\u5173\uff1a\u7cfb\u7edf\u4ece\u5916\u573a\u5438\u6536\u80fd\u91cf\uff0c\u5e76\u901a\u8fc7\u7c7b\u4f3c\u6469\u64e6\u7684\u5185\u90e8\u8fc7\u7a0b\u5c06\u5176\u8f6c\u5316\u4e3a\u70ed\u91cf\u3002\u56e0\u6b64\uff0c\\(\\chi''\\) \u4e5f\u88ab\u79f0\u4e3a\u5438\u6536 (absorptive) \u90e8\u5206\u3002\u4e00\u4e2a\u975e\u96f6\u7684 \\(\\chi''\\) \u662f\u7cfb\u7edf\u5b58\u5728\u4e0d\u53ef\u9006\u8fc7\u7a0b\u7684\u6807\u5fd7\uff0c\u5e76\u4e0e\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u7d27\u5bc6\u76f8\u8fde\u3002</p> </li> </ul> <p>\u4e34\u754c\u6162\u5316\u7684\"\u5149\u8c31\"\u7279\u5f81\uff1a</p> <p>\u5982\u6559\u6388\u5728\u9ed1\u677f\u7684\u7ed8\u56fe\u6240\u793a\uff0c\\(\\chi''(\\omega)\\) \u7684\u51fd\u6570\u5f62\u5f0f\u662f\u4e00\u4e2a\u6d1b\u4f26\u5179\u5cf0\u3002\u8fd9\u4e2a\u5cf0\u7684\u5bbd\u5ea6\u8574\u542b\u7740\u5173\u952e\u7684\u52a8\u529b\u5b66\u4fe1\u606f\u3002\u5176\u534a\u9ad8\u5bbd\u6070\u597d\u7b49\u4e8e\u7cfb\u7edf\u5f1b\u8c6b\u901f\u7387\u7684\u5012\u6570\uff0c\\(\\Delta\\omega_{1/2} = 1/\\tau_q\\)\u3002\u8fd9\u662f\u4e00\u4e2a\u6df1\u523b\u7684\u8054\u7cfb\uff1a \u65f6\u57df\u4e2d\u7684\u5f1b\u8c6b\u8fc7\u7a0b\u8d8a\u6162\uff08\\(\\tau_q\\) \u8d8a\u5927\uff09\uff0c\u9891\u57df\u4e2d\u7cfb\u7edf\u80fd\u591f\u6709\u6548\u5438\u6536\u80fd\u91cf\u7684\u9891\u7387\u8303\u56f4\u5c31\u8d8a\u7a84\uff08\\(\\Delta\\omega_{1/2}\\) \u8d8a\u5c0f\uff09\u3002</p> <p>\u56e0\u6b64\uff0c\u4e34\u754c\u6162\u5316 (\\(\\tau_q \\to \\infty\\)) \u5728\u9891\u57df\u4e2d\u7684\u8868\u73b0\u5c31\u662f\uff1a\u5438\u6536\u5cf0 \\(\\chi''(\\omega)\\) \u53d8\u5f97\u65e0\u9650\u5c16\u9510\uff08\u5bbd\u5ea6 \\(\\to 0\\)\uff09\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5728\u4e34\u754c\u70b9\uff0c\u7cfb\u7edf\u53d8\u5f97\u6781\u5ea6\"\u6311\u5254\"\uff0c\u5b83\u53ea\u80fd\u591f\u5bf9\u9891\u7387\u8d8b\u8fd1\u4e8e\u96f6\u7684\u3001\u6781\u5176\u7f13\u6162\u7684\u6270\u52a8\u4ea7\u751f\u8017\u6563\u54cd\u5e94\u3002\u5bf9\u4e8e\u4efb\u4f55\u6709\u9650\u9891\u7387\u7684\"\u5feb\"\u6270\u52a8\uff0c\u5b83\u90fd\"\u6765\u4e0d\u53ca\"\u53cd\u5e94\u3002</p> \u7279\u6027 \u5b9e\u90e8 \\(\\chi'(\\mathbf{q},\\omega)\\) \u865a\u90e8 \\(\\chi''(\\mathbf{q},\\omega)\\) \u7269\u7406\u540d\u79f0 \u8272\u6563 / \u5f39\u6027 / \u50a8\u80fd \u5438\u6536 / \u8017\u6563 \u4e0e\u5916\u573a\u7684\u76f8\u4f4d\u5173\u7cfb \u540c\u76f8 (In-phase) \u6ede\u540e90\u5ea6 (Out-of-phase) \u80fd\u91cf\u8fc7\u7a0b \u80fd\u91cf\u5728\u7cfb\u7edf\u4e0e\u5916\u573a\u95f4\u53ef\u9006\u4ea4\u6362 (\u50a8\u80fd) \u7cfb\u7edf\u4ece\u5916\u573a\u5438\u6536\u80fd\u91cf\u5e76\u8f6c\u5316\u4e3a\u70ed (\u8017\u6563) \u51fd\u6570\u5f62\u72b6 (vs \\(\\omega\\)) \u5bf9\u79f0\u7684\u8272\u6563\u66f2\u7ebf \u5bf9\u79f0\u7684\u6d1b\u4f26\u5179\u5438\u6536\u5cf0 \u4e34\u754c\u70b9\u884c\u4e3a \u5728 \\(\\omega=0\\) \u5904\u53d1\u6563 \u5cf0\u53d8\u5f97\u65e0\u9650\u9ad8\u3001\u65e0\u9650\u5c16\u9510"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#25-python","title":"2.5. Python \u53ef\u89c6\u5316\uff1a\u52a8\u6001\u54cd\u5e94\u7684\u5149\u8c31\u5256\u6790","text":"<p>\u4e3a\u4e86\u7cbe\u51c6\u5730\u7406\u89e3\u52a8\u6001\u78c1\u5316\u7387\u7684\u5b9e\u90e8\u548c\u865a\u90e8\u662f\u5982\u4f55\u968f\u9891\u7387 \\(\u03c9\\) \u53d8\u5316\u7684\uff0c\u6211\u4eec\u6765\u76f4\u63a5\u590d\u73b0 Erwin Frey \u6559\u6388\u5728\u8bfe\u5802\u9ed1\u677f\u4e0a\u7ed8\u5236\u7684\u7ecf\u5178\u8c31\u56fe\uff0c\u5e76\u7528\u4ee3\u7801\u7cbe\u786e\u5730\u63ed\u793a\u5176\u5185\u5728\u89c4\u5f8b\u3002</p> <p>\u6211\u4eec\u5c06\u7ed8\u5236\u5728\u4e00\u4e2a\u56fa\u5b9a\u7684\u7a7a\u95f4\u5c3a\u5ea6 (fixed q) \u4e0b\uff0c\u7cfb\u7edf\u54cd\u5e94\u7684\u50a8\u80fd\u90e8\u5206 \\(\u03c7'(\u03c9)\\) \u548c\u8017\u6563\u90e8\u5206 \\(\u03c7''(\u03c9)\\) \u7684\u56fe\u50cf\u3002\u901a\u8fc7\u8bbe\u7f6e\u4e09\u4e2a\u4e0d\u540c\u4f46\u9012\u8fdb\u7684 \\(r\\) \u503c\uff08\\(r=1.0\\) \u8fdc\u79bb\u4e34\u754c\u70b9\uff0c\\(r=0.2\\) \u4e3a\u4e2d\u95f4\u72b6\u6001\uff0c\\(r=0.01\\) \u6781\u5ea6\u63a5\u8fd1\u4e34\u754c\u70b9\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u6e05\u6670\u5730\u89c2\u5bdf\u5230\u7cfb\u7edf\u662f\u5982\u4f55\u4e00\u6b65\u6b65\u9677\u5165\u201c\u4e34\u754c\u6162\u5316\u201d\u72b6\u6001\u7684\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# --- 1. Model Parameters ---\nL = 1.0\nc = 1.0\nq_fixed = 0.1  # We fix the wavevector q as shown on the blackboard\n\n# --- Define three scenarios to show the transition ---\nr_far = 1.0       # Far from critical point (gentle curve)\nr_inter = 0.2     # Intermediate case\nr_near = 0.01     # Very near critical point (sharp peak)\n\n# --- Calculate the corresponding relaxation times ---\ntau_q_far = 1.0 / (L * (r_far + c * q_fixed**2))\ntau_q_inter = 1.0 / (L * (r_inter + c * q_fixed**2))\ntau_q_near = 1.0 / (L * (r_near + c * q_fixed**2))\n\n# Setup the frequency omega range\nomega = np.linspace(-4, 4, 1000)\n\n# --- 2. Define functions for chi' and chi'' ---\ndef chi_prime(omega, L, tau_q):\n    \"\"\"Calculates the real part of the dynamic susceptibility.\"\"\"\n    return (L * tau_q) / (1 + (omega * tau_q)**2)\n\ndef chi_double_prime(omega, L, tau_q):\n    \"\"\"Calculates the imaginary part of the dynamic susceptibility.\"\"\"\n    return (L * omega * tau_q**2) / (1 + (omega * tau_q)**2)\n\n# --- 3. Calculate data for all scenarios ---\nchi_p_far = chi_prime(omega, L, tau_q_far)\nchi_pp_far = chi_double_prime(omega, L, tau_q_far)\n\nchi_p_inter = chi_prime(omega, L, tau_q_inter)\nchi_pp_inter = chi_double_prime(omega, L, tau_q_inter)\n\nchi_p_near = chi_prime(omega, L, tau_q_near)\nchi_pp_near = chi_double_prime(omega, L, tau_q_near)\n\n# --- 4. Visualization (replicating the blackboard concept) ---\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(16, 7))\nfig.suptitle('Dynamic Susceptibility Spectrum (Fixed q)', fontsize=18)\n\n# --- Plot for chi' (Real Part - Storage Response) ---\nax1.plot(omega, chi_p_far, label=f'Far from criticality ($r={r_far}$)', lw=2)\nax1.plot(omega, chi_p_inter, label=f'Intermediate ($r={r_inter}$)', lw=2, linestyle='--')\nax1.plot(omega, chi_p_near, label=f'Near criticality ($r={r_near}$)', lw=2)\nax1.set_title(r\"Real Part $\\chi'(\\omega)$ (Storage Response)\", fontsize=14)\nax1.set_xlabel(r'Angular Frequency $\\omega$', fontsize=12)\nax1.set_ylabel(r\"Response Magnitude $\\chi'$\", fontsize=12)\nax1.grid(True, linestyle='--', alpha=0.6)\nax1.legend()\nax1.axhline(0, color='black', lw=0.5)\nax1.axvline(0, color='black', lw=0.5)\n\n# --- Plot for chi'' (Imaginary Part - Dissipative Response) ---\nax2.plot(omega, chi_pp_far, label=f'Far from criticality, width $\\sim 1/\\\\tau_q \\\\approx {1/tau_q_far:.2f}$', lw=2)\nax2.plot(omega, chi_pp_inter, label=f'Intermediate, width $\\sim 1/\\\\tau_q \\\\approx {1/tau_q_inter:.2f}$', lw=2, linestyle='--')\nax2.plot(omega, chi_pp_near, label=f'Near criticality, width $\\sim 1/\\\\tau_q \\\\approx {1/tau_q_near:.2f}$', lw=2)\nax2.set_title(r\"Imaginary Part $\\chi''(\\omega)$ (Dissipative Response)\", fontsize=14)\nax2.set_xlabel(r'Angular Frequency $\\omega$', fontsize=12)\nax2.set_ylabel(r\"Dissipation Magnitude $\\chi''$\", fontsize=12)\nax2.grid(True, linestyle='--', alpha=0.6)\nax2.legend()\nax2.axhline(0, color='black', lw=0.5)\nax2.axvline(0, color='black', lw=0.5)\n\n# Set a symmetric y-limit for the chi'' plot to better see the change in width\nmax_y_val = np.max(chi_pp_inter) * 1.2\nax2.set_ylim(-max_y_val, max_y_val)\n\n\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\n</code></pre> <p></p> <p>\u5de6\u56fe (Real Part \\(\\chi'(\\omega)\\)  \u50a8\u80fd\u54cd\u5e94): \u6b64\u56fe\u5c55\u793a\u4e86\u7cfb\u7edf\u7684\u5f39\u6027\u6216\u50a8\u80fd\u54cd\u5e94\uff0c\u5176\u5f62\u72b6\u4e3a\u5bf9\u79f0\u7684\u201c\u949f\u5f62\u201d\u66f2\u7ebf\uff0c\u5728\\(\\omega=0\\)\u5904\u8fbe\u5230\u5cf0\u503c\u3002\u5f53\u6211\u4eec\u9010\u6e10\u63a5\u8fd1\u4e34\u754c\u70b9\uff08\\(r\\) \u4ece1.0\u7684\u84dd\u8272\u66f2\u7ebf\u53d8\u4e3a0.2\u7684\u6a59\u8272\u66f2\u7ebf\uff0c\u518d\u52300.01\u7684\u7eff\u8272\u66f2\u7ebf\uff09\uff0c\u5cf0\u503c\u53d8\u5f97\u8d8a\u6765\u8d8a\u9ad8\uff0c\u66f2\u7ebf\u4e5f\u8d8a\u6765\u8d8a\u5c16\u9510\u3002\u8fd9\u8868\u660e\uff0c\u7cfb\u7edf\u5bf9\u7f13\u6162\u7684\u3001\u8fd1\u4e4e\u9759\u6001\u7684\u6270\u52a8(\\(\\omega \\approx 0\\))\u53d8\u5f97\u6781\u5176\u654f\u611f\uff08\u54cd\u5e94\u5e45\u5ea6\\(\\chi'\\)\u5de8\u5927\uff09\u3002\u7136\u800c\uff0c\u5b83\u5bf9\u9ad8\u9891\u6270\u52a8\u7684\u54cd\u5e94\u80fd\u529b\u5374\u6025\u5267\u4e0b\u964d\u3002\u7cfb\u7edf\u53d8\u5f97\u201c\u6311\u5254\u201d\uff0c\u53ea\u5bf9\u7279\u5b9a\u7c7b\u578b\u7684\u6270\u52a8\u6709\u5f3a\u70c8\u53cd\u5e94\u3002</p> <p>\u53f3\u56fe (Imaginary Part \\(\\chi''(\\omega)\\) - \u8017\u6563\u54cd\u5e94): \u6b64\u56fe\u5c55\u793a\u4e86\u7cfb\u7edf\u7684\u80fd\u91cf\u8017\u6563\u80fd\u529b\uff0c\u5f62\u72b6\u4e3a\u53cd\u6f14\u5bf9\u79f0\u7684\u201cS\u5f62\u201d\u66f2\u7ebf\u3002\u80fd\u91cf\u8017\u6563\u7684\u5cf0\u503c\u51fa\u73b0\u5728\u4e00\u4e2a\u7279\u5f81\u9891\u7387\u4e0a\u3002\u8fd9\u662f\u4e34\u754c\u6162\u5316\u6700\u76f4\u63a5\u7684\u4f53\u73b0\u3002\u968f\u7740\\(r\\)\u51cf\u5c0f\uff0c\u66f2\u7ebf\u6025\u5267\u5730\u5411\u4e2d\u5fc3\\(\u03c9=0\\)\u6536\u7f29\u3002\u56fe\u4f8b\u4e2d\u7684\u6570\u636e\u663e\u793a\uff0c\u8017\u6563\u8c31\u7684\u7279\u5f81\u5bbd\u5ea6\uff08\u6b63\u6bd4\u4e8e\\(1/\\tau_q\\)\uff09\u4ece\u8fdc\u79bb\u4e34\u754c\u70b9\u76841.01\uff0c\u6025\u5267\u7f29\u5c0f\u5230\u63a5\u8fd1\u4e34\u754c\u70b9\u76840.02\u3002\u8017\u6563\u8c31\u7684\u201c\u53d8\u7a84\u201d\u610f\u5473\u7740\u7cfb\u7edf\u7684\u5f1b\u8c6b\u65f6\u95f4\\(\\tau_q\\)\u5728\u6025\u5267\u589e\u957f\u3002\u4e00\u4e2a\u201c\u6162\u201d\u7684\u7cfb\u7edf\u65e0\u6cd5\u8ddf\u4e0a\u5feb\u901f\u53d8\u5316\u7684\u5916\u90e8\u6270\u52a8\uff0c\u56e0\u6b64\u5b83\u53ea\u80fd\u5728\u975e\u5e38\u4f4e\u7684\u9891\u7387\u4e0b\u624d\u80fd\u6709\u6548\u5730\u5438\u6536\u548c\u8017\u6563\u80fd\u91cf\u3002\u5728\u4e34\u754c\u70b9\uff0c\u7cfb\u7edf\u53d8\u5f97\u65e0\u9650\u201c\u6162\u201d\uff0c\u5176\u8017\u6563\u80fd\u529b\u5b8c\u5168\u96c6\u4e2d\u5728\u4e86\u96f6\u9891\u7387\u4e0a\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#3-","title":"3. \u6da8\u843d-\u8017\u6563\u5b9a\u7406","text":"<p>\u5728\u4e0a\u4e00\u5c0f\u8282\uff0c\u6211\u4eec\u901a\u8fc7\u65bd\u52a0\u4e00\u4e2a\u5916\u90e8\u201c\u63a2\u9488\u201d\\(h(q, \\omega)\\)\uff0c\u6210\u529f\u5730\u7ed8\u5236\u51fa\u4e86\u7cfb\u7edf\u52a8\u529b\u5b66\u54cd\u5e94\u7684\u201c\u5149\u8c31\u6307\u7eb9\u201d\\(\\chi(q, \\omega)\\)\u3002\u6211\u4eec\u7406\u89e3\u4e86\u5176\u865a\u90e8 \\(\\chi''\\) \u662f\u7cfb\u7edf\u8017\u6563\u80fd\u91cf\u80fd\u529b\u7684\u91cf\u5ea6\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u8fdb\u5165\u8fd9\u8282\u8bfe\u7684\u7406\u8bba\u6838\u5fc3\u3002\u6211\u4eec\u5c06\u5173\u6389\u6240\u6709\u5916\u90e8\u63a2\u9488 (\\(h=0\\))\uff0c\u8ba9\u7cfb\u7edf\u56de\u5f52\u5230\u7eaf\u7cb9\u7684\u70ed\u5e73\u8861\u6001\u3002\u5728\u8fd9\u79cd\u72b6\u6001\u4e0b\uff0c\u7cfb\u7edf\u5e76\u975e\u9759\u6b62\u4e0d\u52a8\uff0c\u800c\u662f\u7531\u4e8e\u4e0e\u70ed\u5e93\u7684\u6301\u7eed\u80fd\u91cf\u4ea4\u6362\uff0c\u5185\u90e8\u5145\u6ee1\u4e86\u6c38\u4e0d\u505c\u6b47\u7684\u3001\u81ea\u53d1\u7684\u70ed\u6da8\u843d\u3002\u6211\u4eec\u7684\u4efb\u52a1\u662f\uff0c\u4e3a\u8fd9\u4e9b\u5185\u5728\u7684\u3001\u968f\u673a\u7684\u80fd\u91cf\u4ea4\u6362\u5efa\u7acb\u6570\u5b66\u63cf\u8ff0\uff0c\u5373\u52a8\u6001\u5173\u8054\u51fd\u6570 \\(C(q, \\omega)\\) \u3002</p> <p>\u6700\u7ec8\uff0c\u6211\u4eec\u5c06\u8bc1\u660e\uff0c\u7cfb\u7edf\u5728\u88ab\u52a8\u72b6\u6001\u4e0b\u7684\u5185\u5728\u201c\u6da8\u843d\u201d\uff0c\u4e0e\u5b83\u5728\u4e3b\u52a8\u72b6\u6001\u4e0b\u7684\u201c\u8017\u6563\u201d\u54cd\u5e94\uff0c\u5e76\u975e\u5b64\u7acb\u7684\u73b0\u8c61\uff0c\u800c\u662f\u7531\u4e00\u4e2a\u6df1\u523b\u7684\u7269\u7406\u539f\u7406\u2014\u2014\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Fluctuation-Dissipation Theorem, FDT) \u2014\u2014\u7d27\u5bc6\u5730\u8054\u7cfb\u5728\u4e00\u8d77\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#31-cqomega","title":"3.1. \u52a8\u6001\u5173\u8054\u51fd\u6570 \\(C(q,\\omega)\\)\uff1a\u6da8\u843d\u7684\u529f\u7387\u8c31","text":"<p>\u6211\u4eec\u7684\u51fa\u53d1\u70b9\uff0c\u4f9d\u7136\u662f\u6a21\u578b A \u7684\u7ebf\u6027\u5316\u6717\u4e4b\u4e07\u65b9\u7a0b\uff0c\u4f46\u8fd9\u6b21\u5916\u573a \\(h=0\\)\u3002\u5728\u9891\u57df\u4e2d\uff0c\u5b83\u53d8\u4e3a\uff1a</p> \\[-i\\omega\\phi(q,\\omega) = -L(r+cq^2)\\phi(q,\\omega) + \\xi(q,\\omega)\\] <p>\u89e3\u51fa \\(\\phi(q,\\omega)\\)\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[\\phi(q,\\omega) = \\frac{1}{-i\\omega+L(r+cq^2)}\\xi(q,\\omega) = G_0(q,\\omega)\\xi(q,\\omega)\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7269\u7406\u56fe\u50cf\u6781\u4e3a\u6e05\u6670\uff1a</p> <ul> <li>\u8f93\u5165 (Source): \\(\\xi(q,\\omega)\\) \u662f\u6765\u81ea\u70ed\u5e93\u7684\u3001\u6700\u539f\u59cb\u7684\u9ad8\u65af\u767d\u566a\u58f0\u3002\u6240\u8c13\u201c\u767d\u201d\uff0c\u610f\u5473\u7740\u5b83\u7684\u529f\u7387\u5728\u6240\u6709\u9891\u7387\u4e0a\u90fd\u662f\u5747\u5300\u7684\uff0c\u5c31\u50cf\u767d\u5149\u5305\u542b\u6240\u6709\u989c\u8272\u7684\u5149\u4e00\u6837\u3002</li> <li>\u6ee4\u6ce2\u5668 (Filter): \\(G_0(q,\\omega)\\) \u662f\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49\u7684\u54cd\u5e94\u51fd\u6570\u3002\u5728\u8fd9\u91cc\uff0c\u5b83\u626e\u6f14\u4e86\u7cfb\u7edf\u81ea\u8eab\u7684\u201c\u6ee4\u6ce2\u5668\u201d\u89d2\u8272\u3002</li> <li>\u8f93\u51fa (Output): \\(\\phi(q,\\omega)\\) \u662f\u6211\u4eec\u5b8f\u89c2\u4e0a\u80fd\u89c2\u6d4b\u5230\u7684\u5e8f\u53c2\u91cf\u6da8\u843d\u3002\u5b83\u4e0d\u518d\u662f\u201c\u767d\u201d\u7684\uff0c\u800c\u662f\u7ecf\u8fc7\u7cfb\u7edf\u81ea\u8eab\u52a8\u529b\u5b66\u7279\u6027\uff08\u7531\\(G_0\\)\u63cf\u8ff0\uff09\u8fc7\u6ee4\u540e\u7684\u201c\u6709\u8272\u201d\u566a\u58f0\u3002\u7cfb\u7edf\u4f1a\u653e\u5927\u67d0\u4e9b\u9891\u7387\u7684\u566a\u58f0\uff08\u5728\u5171\u632f\u9891\u7387\u9644\u8fd1\uff09\uff0c\u540c\u65f6\u6291\u5236\u5176\u4ed6\u9891\u7387\u7684\u566a\u58f0\u3002</li> </ul> <p>\u6211\u4eec\u611f\u5174\u8da3\u7684\u7269\u7406\u91cf\u662f\u52a8\u6001\u5173\u8054\u51fd\u6570\uff0c\u4e5f\u79f0\u4e3a\u529f\u7387\u8c31\u5bc6\u5ea6 (Power Spectral Density) \u3002\u5b83\u88ab\u5b9a\u4e49\u4e3a\u6da8\u843d\u7684\u4e8c\u9636\u77e9\uff0c\u8861\u91cf\u4e86\u6da8\u843d\u201c\u529f\u7387\u201d\u5728\u4e0d\u540c\u9891\u7387\u4e0a\u7684\u5206\u5e03\uff1a</p> \\[C_{\\phi\\phi}(q, \\omega) \\equiv \\frac{\\langle \\phi(q, \\omega) \\phi(-q, -\\omega) \\rangle}{(2\\pi)^{d+1}}\\] <p>\u4ee3\u5165 \\(\\phi = G_0 \\xi\\) \u7684\u5173\u7cfb\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[C_{\\phi\\phi}(q,\\omega) \\propto \\langle G_0(q,\\omega)\\xi(q,\\omega) G_0(-q,-\\omega)\\xi(-q,-\\omega) \\rangle\\] \\[= G_0(q,\\omega)G_0(-q,-\\omega) \\langle \\xi(q,\\omega)\\xi(-q,-\\omega) \\rangle \\] <p>\u7531\u4e8e \\(G_0(-q,-\\omega) = G_0^*(q,\\omega)\\)\uff08\\(G_0\\)\u7684\u5171\u8f6d\uff09\uff0c\u56e0\u6b64 \\(G_0(q,\\omega)G_0(-q,-\\omega) = |G_0(q,\\omega)|^2\\)\u3002</p> <p>\u6211\u4eec\u77e5\u9053\u70ed\u566a\u58f0\u7684\u5173\u8054\u6027\u8d28\u4e3a\uff1a</p> \\[\\langle\\xi(q,\\omega)\\xi(q',\\omega')\\rangle = 2LT(2\\pi)^{d+1}\\delta(q+q')\\delta(\\omega+\\omega')\\] <p>\u4ee3\u5165\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5173\u8054\u51fd\u6570\u7684\u6700\u7ec8\u8868\u8fbe\u5f0f\uff1a</p> \\[C_{\\phi\\phi}(q, \\omega) = |G_0(q, \\omega)|^2 (2LT) = \\frac{1}{\\omega^2 + [L(r + cq^2)]^2} \\cdot (2LT)\\] <p>\u6574\u7406\u540e\u5f97\u5230\uff1a</p> \\[C_{\\phi\\phi}(q, \\omega) = \\frac{2LT}{\\omega^2 + [L(r + cq^2)]^2}\\] <p>\u8fd9\u4e2a\u516c\u5f0f\u544a\u8bc9\u6211\u4eec\uff0c\u7cfb\u7edf\u5185\u90e8\u6da8\u843d\u7684\u9891\u8c31\u5f62\u72b6\uff08\u4e00\u4e2a\u5173\u4e8e\\(\\omega\\)\u7684\u6d1b\u4f26\u5179\u51fd\u6570\uff09\u5b8c\u5168\u7531\u5176\u81ea\u8eab\u7684\u54cd\u5e94\u7279\u6027\uff08\u7531\u5206\u6bcd\u4e2d\u7684\u9879\u51b3\u5b9a\uff09\u548c\u70ed\u566a\u58f0\u7684\u5f3a\u5ea6\uff08\u7531\u5206\u5b50\\(2LT\\)\u51b3\u5b9a\uff09\u6240\u5851\u9020\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#32","title":"3.2. \u8fde\u63a5\u6da8\u843d\u4e0e\u8017\u6563","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u4e0a\u4e00\u90e8\u5206\u201c\u63a8\u52a8\u201d\u5b9e\u9a8c\u7684\u7ed3\u679c\u4e0e\u8fd9\u4e00\u90e8\u5206\u201c\u503e\u542c\u201d\u5b9e\u9a8c\u7684\u7ed3\u679c\u5e76\u5217\u5728\u4e00\u8d77\uff0c\u6b63\u5982\u6559\u6388\u5728\u9ed1\u677f\u4e0a\u6240\u505a\u7684\u90a3\u6837\uff0c\u4e00\u4e2a\u6df1\u523b\u7684\u8054\u7cfb\u5373\u5c06\u6d6e\u73b0\u3002</p> <ul> <li> <p>\u8017\u6563 (\u6765\u81ea\u201c\u63a8\u52a8\u201d\u5b9e\u9a8c): \u7cfb\u7edf\u7684\u80fd\u91cf\u8017\u6563\u80fd\u529b\u7531\u54cd\u5e94\u7684\u865a\u90e8\\(\\chi''\\)\u63cf\u8ff0\uff1a</p> \\[\\chi''(q,\\omega) = \\frac{L\\omega}{\\omega^2+[L(r+cq^2)]^2}\\] </li> <li> <p>\u6da8\u843d (\u6765\u81ea\u201c\u503e\u542c\u201d\u5b9e\u9a8c): \u7cfb\u7edf\u7684\u5185\u5728\u6da8\u843d\u529f\u7387\u8c31\u7531\u5173\u8054\u51fd\u6570\\(C\\)\u63cf\u8ff0\uff1a</p> \\[C_{\\phi\\phi}(q,\\omega) = \\frac{2LT}{\\omega^2+[L(r+cq^2)]^2}\\] </li> </ul> <p>\u4ed4\u7ec6\u89c2\u5bdf\u8fd9\u4e24\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5b83\u4eec\u7684\u5206\u6bcd\u5b8c\u5168\u76f8\u540c\uff01\u8fd9\u7edd\u975e\u5de7\u5408\u3002\u901a\u8fc7\u7b80\u5355\u7684\u4ee3\u6570\u8fd0\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u7acb\u5373\u53d1\u73b0\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u60ca\u4eba\u800c\u4f18\u7f8e\u7684\u5173\u7cfb\uff1a</p> \\[C_{\\phi\\phi}(q,\\omega) = \\frac{2T}{\\omega} \\chi''(q,\\omega)\\] <p>\u8fd9\u4e2a\u7b80\u6d01\u7684\u7b49\u5f0f\u5c31\u662f\u8457\u540d\u7684\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Fluctuation-Dissipation Theorem, FDT) \u3002\u5b83\u662f\u5728\u5e73\u5747\u573a\u8fd1\u4f3c\u4e0b\u63a8\u5bfc\u51fa\u6765\u7684\uff0c\u4f46\u5176\u666e\u9002\u6027\u8fdc\u8d85\u4e8e\u6b64\uff0c\u5bf9\u4e8e\u66f4\u5e7f\u6cdb\u7684\u7cfb\u7edf\u540c\u6837\u6210\u7acb\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#33-fdt","title":"3.3. FDT \u7684\u6df1\u523b\u542b\u4e49\uff1a\u4e00\u679a\u786c\u5e01\u7684\u4e24\u9762","text":"<p>\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u662f\u7edf\u8ba1\u7269\u7406\u5b66\u4e2d\u6700\u6df1\u523b\u3001\u6700\u666e\u9002\u7684\u539f\u7406\u4e4b\u4e00\u3002\u5b83\u5982\u540c\u4e00\u5ea7\u6865\u6881\uff0c\u8fde\u63a5\u4e86\u4e24\u4e2a\u770b\u4f3c\u622a\u7136\u4e0d\u540c\u7684\u7269\u7406\u4e16\u754c\uff1a\u5e73\u8861\u6001\u7684\u5fae\u89c2\u4e16\u754c\u548c\u8fd1\u975e\u5e73\u8861\u6001\u7684\u5b8f\u89c2\u4e16\u754c\u3002</p> <ul> <li> <p>\u7b49\u5f0f\u5de6\u8fb9 \\(C_{\\phi\\phi}(q,\\omega)\\)\uff1a\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5904\u4e8e\u70ed\u529b\u5b66\u5e73\u8861\u6001\u7684\u7cfb\u7edf\uff0c\u5176\u5185\u90e8\u81ea\u53d1\u7684\u3001\u5fae\u89c2\u7684\u70ed\u6da8\u843d\u7684\u9891\u8c31\u3002\u8fd9\u662f\u7cfb\u7edf\u5728\u5b8c\u5168\u4e0d\u53d7\u5916\u754c\u5e72\u6270\uff0c\u201c\u9759\u9759\u5730\u5f85\u7740\u201d\u65f6\u7684\u5185\u5728\u5c5e\u6027\u3002</p> </li> <li> <p>\u7b49\u5f0f\u53f3\u8fb9 \\(\\chi''(q,\\omega)\\)\uff1a\u63cf\u8ff0\u4e86\u5f53\u7cfb\u7edf\u88ab\u4e00\u4e2a\u5916\u90e8\u529b\u9a71\u52a8\u504f\u79bb\u5e73\u8861\u65f6\uff0c\u5b83\u5982\u4f55\u8017\u6563\u80fd\u91cf\u3002\u8fd9\u662f\u7cfb\u7edf\u5728\u88ab\u201c\u63a8\u52a8\u201d\u65f6\uff0c\u8868\u73b0\u51fa\u7684\u5b8f\u89c2\u201c\u6469\u64e6\u201d\u6216\u201c\u963b\u5c3c\u201d\u5c5e\u6027\u3002</p> </li> </ul> <p>\u8fd9\u4e24\u79cd\u73b0\u8c61\u6e90\u4e8e\u540c\u4e00\u4e2a\u5fae\u89c2\u7269\u7406\u8fc7\u7a0b\u3002\u90a3\u4e9b\u5bfc\u81f4\u5e8f\u53c2\u91cf\u5728\u5e73\u8861\u503c\u9644\u8fd1\u201c\u6447\u6446\u4e0d\u5b9a\u201d\u7684\u5fae\u89c2\u8fc7\u7a0b\uff08\u4f8b\u5982\u7c92\u5b50\u78b0\u649e\u3001\u70ed\u6405\u52a8\u7b49\uff0c\u8fd9\u4e9b\u90fd\u88ab\u6211\u4eec\u6253\u5305\u5728\u566a\u58f0\u9879 \\(\\xi\\) \u548c\u4e0e\u4e4b\u76f8\u5173\u7684\u963b\u5c3c\u9879 \\(L\\) \u4e2d\uff09\uff0c\u4e5f\u6b63\u662f\u5f53\u7cfb\u7edf\u88ab\u5916\u529b\u63a8\u52a8\u65f6\u4ea7\u751f\u6469\u64e6\u529b\u3001\u5bfc\u81f4\u80fd\u91cf\u8017\u6563\u7684\u5fae\u89c2\u8fc7\u7a0b\u3002\u4e00\u4e2a\u7cfb\u7edf\u7684\u5185\u5728\u201c\u5608\u6742\u201d\u7a0b\u5ea6\u4e0e\u5b83\u5bf9\u5916\u6765\u5e72\u6270\u7684\u201c\u963b\u788d\u201d\u7a0b\u5ea6\uff0c\u662f\u540c\u4e00\u679a\u786c\u5e01\u7684\u4e24\u9762\u3002\u8fd9\u7ecf\u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\u591a\u6b21\u63d0\u53ca\u3002</p> <p>\u6e29\u5ea6 \\(T\\) \u5728\u8fd9\u4e2a\u5173\u7cfb\u4e2d\u626e\u6f14\u4e86\u81f3\u5173\u91cd\u8981\u7684\u89d2\u8272\uff1a\u5b83\u8bbe\u5b9a\u4e86\u9a71\u52a8\u70ed\u6da8\u843d\u7684\u80fd\u91cf\u5c3a\u5ea6\u3002\u5728\u7edd\u5bf9\u96f6\u5ea6 \\(T=0\\) \u65f6\uff0c\u6240\u6709\u70ed\u6da8\u843d\u6d88\u5931\uff08\\(C=0\\)\uff09\uff0c\u4f46\u7cfb\u7edf\u7684\u8017\u6563\u80fd\u529b \\(\\chi''\\) \u4f9d\u7136\u5b58\u5728\uff08\u5728\u91cf\u5b50\u4f53\u7cfb\u4e2d\uff09\u3002</p> <p>\u8fd9\u4e2a\u5b9a\u7406\u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5b83\u7684\u9884\u6d4b\u80fd\u529b\uff1a\u5b83\u5141\u8bb8\u5b9e\u9a8c\u7269\u7406\u5b66\u5bb6\u901a\u8fc7\u6d4b\u91cf\u4e00\u4e2a\u7cfb\u7edf\u7684\u5b8f\u89c2\u8017\u6563\u54cd\u5e94\uff08\u4f8b\u5982\uff0c\u901a\u8fc7\u4ea4\u6d41\u78c1\u5316\u7387\u6d4b\u91cf\uff09\uff0c\u6765\u63a8\u65ad\u5176\u5185\u90e8\u5fae\u89c2\u7684\u5e73\u8861\u6da8\u843d\u8c31\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002</p> <p>\u4e3a\u4e86\u66f4\u6e05\u6670\u5730\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u6838\u5fc3\u6982\u5ff5\u603b\u7ed3\u5728\u4e0b\u8868\u4e2d\uff1a</p> \u7279\u5f81 \u5173\u8054\u51fd\u6570 \\(C(q,\\omega)\\) \u52a8\u6001\u78c1\u5316\u7387\u865a\u90e8 \\(\\chi''(q,\\omega)\\) \u7269\u7406\u60c5\u666f \u5e73\u8861\u6001\u4e0b\u7684\u81ea\u53d1\u6da8\u843d (\\(h=0\\)) \u5bf9\u5916\u90e8\u6270\u52a8\u7684\u54cd\u5e94 (\\(h\\neq 0\\)) \u63cf\u8ff0\u5185\u5bb9 \u70ed\u6da8\u843d\u7684\u529f\u7387\u8c31 (\u201c\u503e\u542c\u201d) \u80fd\u91cf\u8017\u6563\u4e0e\u76f8\u4f4d\u6ede\u540e (\u201c\u63a8\u52a8\u201d) \u6b63\u6bd4\u4e8e \u6e29\u5ea6 \\(T\\) \u52a8\u529b\u5b66\u7cfb\u6570 \\(L\\) FDT \u8fde\u63a5 \\(C(q,\\omega)=\\frac{2T}{\\omega} \\chi''(q,\\omega)\\) \\(\\chi''(q,\\omega)=\\frac{\\omega}{2T} C(q,\\omega)\\) \u7269\u7406\u672c\u8d28 \u7cfb\u7edf\u7684\u5185\u5728\u201c\u5fae\u89c2\u6296\u52a8\u201d \u7cfb\u7edf\u7684\u5b8f\u89c2\u201c\u6469\u64e6\u963b\u529b\u201d"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#4-b","title":"4. \u6a21\u578b B\uff1a\u5b88\u6052\u5f8b\u4e0b\u7684\u8f93\u8fd0\u4e0e\u76f8\u5206\u79bb","text":"<p>\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u6df1\u5165\u5256\u6790\u4e86\u6a21\u578b A\u3002\u5b83\u7684\u6838\u5fc3\u662f\u4e00\u79cd\u5c40\u57df\u5f1b\u8c6b (local relaxation) \u52a8\u529b\u5b66\uff1a\u7cfb\u7edf\u5728\u81ea\u7531\u80fd\u666f\u89c2\u7684\u6bcf\u4e2a\u70b9\u4e0a\uff0c\u90fd\u8bd5\u56fe\u72ec\u7acb\u5730\u201c\u6ed1\u5411\u201d\u5c71\u8c37\u3002\u8fd9\u5b8c\u7f8e\u5730\u63cf\u8ff0\u4e86\u4e00\u4e2a\u975e\u5b88\u6052\u5e8f\u53c2\u91cf\uff0c\u6bd4\u5982\u78c1\u94c1\u4e2d\u7684\u81ea\u65cb\uff0c\u4e00\u4e2a\u5c40\u57df\u7684\u81ea\u65cb\u53ef\u4ee5\u4e0e\u6676\u683c\u4ea4\u6362\u80fd\u91cf\u548c\u89d2\u52a8\u91cf\uff0c\u4ece\u800c\u81ea\u884c\u7ffb\u8f6c\uff0c\u800c\u65e0\u9700\u8003\u8651\u9065\u8fdc\u5904\u7684\u53e6\u4e00\u4e2a\u81ea\u65cb\u5fc5\u987b\u53cd\u5411\u7ffb\u8f6c\u3002</p> <p>\u7136\u800c\uff0c\u81ea\u7136\u754c\u4e2d\u8bb8\u591a\u66f4\u5e38\u89c1\u7684\u76f8\u53d8\uff0c\u53d1\u751f\u5728\u5e8f\u53c2\u91cf\u5b88\u6052\u7684\u7cfb\u7edf\u4e2d\u3002\u60f3\u8c61\u4e00\u4e0b\u4e00\u676f\u6df7\u5408\u5747\u5300\u7684\u6cb9\u548c\u6c34\uff0c\u5f53\u5b83\u5f00\u59cb\u5206\u79bb\u65f6\uff0c\u6cb9\u5206\u5b50\u5e76\u4e0d\u80fd\u5728A\u70b9\u51ed\u7a7a\u6d88\u5931\uff0c\u7136\u540e\u5728B\u70b9\u51fa\u73b0\u3002\u5b83\u5fc5\u987b\u7269\u7406\u5730\u6d41\u8fc7\u4e2d\u95f4\u7684\u6bcf\u4e00\u4e2a\u70b9\u3002\u8fd9\u79cd\u7269\u8d28\u4e0d\u80fd\u88ab\u51ed\u7a7a\u521b\u9020\u6216\u6bc1\u706d\u7684\u9650\u5236\uff0c\u5373\u5b88\u6052\u5f8b (conservation law) \uff0c\u4e3a\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u65bd\u52a0\u4e86\u6700\u5f3a\u7684\u201c\u67b7\u9501\u201d\u3002</p> <p>\u4e3a\u4e86\u63cf\u8ff0\u8fd9\u7c7b\u8fc7\u7a0b\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5168\u65b0\u7684\u52a8\u529b\u5b66\u6846\u67b6\u3002\u8fd9\u4e2a\u6846\u67b6\u4e0d\u518d\u57fa\u4e8e\u5c40\u57df\u7684\u201c\u4ea7\u751f\u201d\u4e0e\u201c\u6e6e\u706d\u201d\uff0c\u800c\u662f\u57fa\u4e8e\u7269\u8d28\u7684\u201c\u8f93\u8fd0\u201d (transport) \u4e0e \u201c\u6d41\u201d (current)\u3002\u8fd9\u5c31\u662f\u6a21\u578b B \u7684\u6838\u5fc3\u601d\u60f3\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#41","title":"4.1. \u7269\u7406\u52a8\u673a\uff1a\u5b88\u6052\u7684\u5e8f\u53c2\u91cf","text":"<p>\u6a21\u578b A \u63cf\u8ff0\u7684\u5fae\u89c2\u8fc7\u7a0b\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u5c40\u57df\u7684\u201c\u53cd\u5e94\u201d\uff0c\u4f8b\u5982\u81ea\u65cb\u5411\u4e0a \\(\\uparrow\\) \u4e0e\u81ea\u65cb\u5411\u4e0b \\(\\downarrow\\) \u7684\u76f8\u4e92\u8f6c\u6362\u3002</p> <p>\u7136\u800c\uff0c\u5728\u8bb8\u591a\u7269\u7406\u7cfb\u7edf\u4e2d\uff0c\u5e8f\u53c2\u91cf\u662f\u5b88\u6052\u7684\u3002\u8fd9\u610f\u5473\u7740\u5e8f\u53c2\u91cf\u7684\u603b\u79ef\u5206\uff08\u4f8b\u5982\uff0c\u603b\u7c92\u5b50\u6570\u3001\u603b\u6d53\u5ea6\uff09\u5728\u6574\u4e2a\u7cfb\u7edf\u5185\u662f\u4e00\u4e2a\u4e0d\u968f\u65f6\u95f4\u6539\u53d8\u7684\u5e38\u91cf\u3002\u5178\u578b\u7684\u4f8b\u5b50\u5305\u62ec\uff1a</p> <ul> <li>\u4e8c\u5143\u5408\u91d1\uff1aA\u3001B \u4e24\u79cd\u539f\u5b50\u7684\u6d53\u5ea6\u3002A\u539f\u5b50\u60f3\u5230\u8fbe\u65b0\u4f4d\u7f6e\uff0c\u5fc5\u987b\u4e0e\u90a3\u91cc\u7684B\u539f\u5b50\u4ea4\u6362\u4f4d\u7f6e\u3002</li> <li>\u6db2-\u6c14\u76f8\u53d8\uff1a\u6d41\u4f53\u7684\u5bc6\u5ea6\u3002\u5206\u5b50\u5fc5\u987b\u901a\u8fc7\u6d41\u52a8\u6765\u6539\u53d8\u5c40\u57df\u5bc6\u5ea6\u3002</li> <li>\u9ad8\u5206\u5b50\u6eb6\u6db2\uff1a\u805a\u5408\u7269\u7684\u6d53\u5ea6\u3002</li> </ul> <p>\u5728\u8fd9\u4e9b\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u67d0\u4e2a\u533a\u57df\u7684\u5bc6\u5ea6 \\(\\varphi\\) \u964d\u4f4e\u4e86\uff0c\u90a3\u4e48\u5fc5\u7136\u6709\u7c92\u5b50\u6d41\u51fa\u8be5\u533a\u57df\uff0c\u5e76\u6d41\u5165\u5176\u4ed6\u533a\u57df\uff0c\u5bfc\u81f4\u5176\u4ed6\u533a\u57df\u7684\u5bc6\u5ea6\u76f8\u5e94\u5347\u9ad8\u3002\u8fd9\u79cd\u975e\u5c40\u57df\u7684\u7269\u8d28\u91cd\u65b0\u5206\u5e03\uff0c\u662f\u5b88\u6052\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u672c\u8d28\u7279\u5f81\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#42","title":"4.2. \u8fde\u7eed\u6027\u65b9\u7a0b\uff1a\u5b88\u6052\u5f8b\u7684\u6570\u5b66\u5316\u8eab","text":"<p>\u4efb\u4f55\u5b88\u6052\u91cf\u7684\u52a8\u529b\u5b66\u90fd\u5fc5\u987b\u65e0\u6761\u4ef6\u5730\u9075\u5faa\u8fde\u7eed\u6027\u65b9\u7a0b (continuity equation) \u3002\u8fd9\u662f\u5b88\u6052\u5f8b\u6700\u76f4\u63a5\u7684\u6570\u5b66\u7ffb\u8bd1\uff1a $$ \\frac{\\partial \\phi(\\mathbf{x},t)}{\\partial t} = -\\nabla \\cdot \\mathbf{J}(\\mathbf{x},t) $$</p> <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7269\u7406\u56fe\u50cf\u975e\u5e38\u76f4\u89c2\uff0c\u5c31\u50cf\u6d74\u7f38\u91cc\u7684\u6c34\u91cf\u53d8\u5316\uff1a</p> <ul> <li>\\(\\frac{\\partial \\phi}{\\partial t}\\)\uff1a\u6d74\u7f38\u91cc\u6c34\u4f4d\uff08\u5bc6\u5ea6 \\(\\phi\\)\uff09\u7684\u53d8\u5316\u7387\u3002</li> <li>\\(\\mathbf{J}\\)\uff1a\u901a\u8fc7\u6c34\u9f99\u5934\u6d41\u5165\u6216\u901a\u8fc7\u6392\u6c34\u53e3\u6d41\u51fa\u7684\u6c34\u6d41\uff08\u6d41 \\(\\mathbf{J}\\)\uff09\u3002</li> <li>\\(-\\nabla \\cdot \\mathbf{J}\\)\uff1a\u6d41\u5165\u51cf\u53bb\u6d41\u51fa\u540e\u7684\u51c0\u6d41\u5165\u91cf\uff08\u6d41\u7684\u8d1f\u6563\u5ea6\uff09\u3002</li> </ul> <p>\u65b9\u7a0b\u8868\u660e\uff0c\u5c40\u57df\u5bc6\u5ea6\u7684\u4efb\u4f55\u53d8\u5316\uff0c\u90fd\u5fc5\u987b\u7531\u4e00\u4e2a\u7a7f\u8fc7\u8be5\u533a\u57df\u8fb9\u754c\u7684\u6d41\u6765\u89e3\u91ca\u3002\u56e0\u6b64\uff0c\u6784\u5efa\u5b88\u6052\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u95ee\u9898\uff0c\u5c31\u5b8c\u5168\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6838\u5fc3\u4efb\u52a1\uff1a\u4e3a\u8fd9\u4e2a\u6d41 \\(\\mathbf{J}\\) \u5efa\u7acb\u4e00\u4e2a\u7269\u7406\u4e0a\u5408\u7406\u7684\u8868\u8fbe\u5f0f\u3002</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#43-mathbfj","title":"4.3. \u6784\u5efa\u7c92\u5b50\u6d41 \\(\\mathbf{J}\\)\uff1a\u5316\u5b66\u52bf\u7684\u68af\u5ea6","text":"<p>\u9a71\u52a8\u7c92\u5b50\u6d41\u7684\u6839\u672c\u70ed\u529b\u5b66\u201c\u529b\u201d\u662f\u4ec0\u4e48\uff1f\u7b54\u6848\u662f\u5316\u5b66\u52bf \\(\\mu\\) \u7684\u68af\u5ea6\u3002\u5316\u5b66\u52bf \\(\\mu = \\frac{\\delta F}{\\delta \\phi}\\) \u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u589e\u52a0\u4e00\u4e2a\u7c92\u5b50\u5230\u7cfb\u7edf\u67d0\u5904\u6240\u9700\u8981\u7684\u81ea\u7531\u80fd\uff0c\u5b83\u8861\u91cf\u4e86\u7c92\u5b50\u5728\u5c40\u57df\u7684\u201c\u62e5\u6324\u7a0b\u5ea6\u201d\u3002\u7cfb\u7edf\u4f1a\u81ea\u53d1\u5730\u5c06\u7c92\u5b50\u4ece\u5316\u5b66\u52bf\u9ad8\u7684\u533a\u57df\uff08\u62e5\u6324\uff09\u8f93\u8fd0\u5230\u5316\u5b66\u52bf\u4f4e\u7684\u533a\u57df\uff08\u7a00\u758f\uff09\uff0c\u4ee5\u4f7f\u603b\u81ea\u7531\u80fd \\(F\\) \u6700\u5c0f\u5316\u3002\u5728\u6700\u7ec8\u7684\u5e73\u8861\u6001\uff0c\u6574\u4e2a\u7cfb\u7edf\u7684\u5316\u5b66\u52bf\u5904\u5904\u76f8\u7b49\uff0c\\(\\mu = \\text{const.}\\)\uff0c\u6240\u6709\u5b8f\u89c2\u7684\u7c92\u5b50\u6d41\u90fd\u505c\u6b62\u4e86\u3002</p> <p></p> <p>\u56e0\u6b64\uff0c\u6d41\u7684\u786e\u5b9a\u6027\u90e8\u5206\u4e0e\u5316\u5b66\u52bf\u7684\u68af\u5ea6\u6210\u6b63\u6bd4\uff1a $$ \\mathbf{J}_{\\text{det}} = -L(\\phi)\\nabla\\mu = -L(\\phi)\\nabla\\frac{\\delta F}{\\delta \\phi} $$</p> <p>\u8fd9\u91cc\u7684 \\(L(\\phi)\\) \u662f\u4e00\u4e2a\u6b63\u6bd4\u4e8e\u7c92\u5b50\u8fc1\u79fb\u7387 (mobility) \u7684\u6602\u8428\u683c\u52a8\u529b\u5b66\u7cfb\u6570\u3002</p> <p>\u4e0e\u6a21\u578b A \u4e00\u6837\uff0c\u4e00\u4e2a\u6709\u9650\u6e29\u5ea6\u7684\u7cfb\u7edf\u5fc5\u7136\u5b58\u5728\u70ed\u6da8\u843d\u3002\u5bf9\u4e8e\u5b88\u6052\u7cfb\u7edf\uff0c\u8fd9\u79cd\u6da8\u843d\u8868\u73b0\u4e3a\u4e00\u4e2a\u968f\u673a\u7684\u6da8\u843d\u6d41 \\(\\boldsymbol{\\xi}_J\\) \u3002\u6839\u636e\u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff0c\u8fd9\u4e2a\u968f\u673a\u6d41\u7684\u5f3a\u5ea6\u4e0e\u8fc1\u79fb\u7387 \\(L(\\phi)\\) \u548c\u6e29\u5ea6 \\(T\\) \u76f4\u63a5\u76f8\u5173\u3002\u603b\u7684\u6d41\u8868\u8fbe\u5f0f\u4e3a\uff1a $$ \\mathbf{J}(\\mathbf{x},t) = -L(\\phi)\\nabla\\frac{\\delta F}{\\delta \\phi} + \\boldsymbol{\\xi}_J(\\mathbf{x},t) $$</p> <p>\u5176\u4e2d\u6da8\u843d\u6d41\u7684\u5173\u8054\u6027\u8d28\u4e3a\uff1a $$ \\langle \\xi_{J\\alpha}(\\mathbf{x}, t) \\xi_{J\\beta}(\\mathbf{x}', t') \\rangle = 2L(\\phi)T \\delta_{\\alpha\\beta} \\delta(\\mathbf{x}-\\mathbf{x}')\\delta(t-t') $$</p>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#44-b","title":"4.4. \u6a21\u578b B \u7684\u6700\u7ec8\u5f62\u5f0f\u4e0e\u7269\u7406\u5185\u6db5","text":"<p>\u5c06\u6d41 \\(\\mathbf{J}\\) \u7684\u5b8c\u6574\u8868\u8fbe\u5f0f\u4ee3\u5165\u8fde\u7eed\u6027\u65b9\u7a0b\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6a21\u578b B (Model B) \u7684\u4e00\u822c\u5f62\u5f0f\uff0c\u5b83\u4e5f\u88ab\u79f0\u4e3a\u542b\u566a\u7684\u5361\u6069-\u5e0c\u5c14\u4e9a\u5fb7\u65b9\u7a0b (stochastic Cahn-Hilliard equation) \uff1a $$ \\frac{\\partial \\phi}{\\partial t} =  -\\nabla\\cdot\\left[-L\\nabla\\frac{\\delta F}{\\delta \\phi} + \\boldsymbol{\\xi}_J\\right]  = \\nabla\\cdot\\left[L\\nabla\\frac{\\delta F}{\\delta \\phi}\\right] - \\nabla\\cdot\\boldsymbol{\\xi}_J $$</p> <p>\u4e3a\u4e86\u770b\u6e05\u5b88\u6052\u5f8b\u5e26\u6765\u7684\u6df1\u523b\u6539\u53d8\uff0c\u8ba9\u6211\u4eec\u518d\u6b21\u4f7f\u7528\u91d1\u5179\u5821-\u6717\u9053\u81ea\u7531\u80fd\uff0c\u5e76\u5bf9\u6bd4\u6a21\u578b A \u548c\u6a21\u578b B \u7684\u786e\u5b9a\u6027\u90e8\u5206\uff1a</p> \u7279\u5f81 \u6a21\u578b A (\u975e\u5b88\u6052) \u6a21\u578b B (\u5b88\u6052) \u6838\u5fc3\u7269\u7406 \u5c40\u57df\u5f1b\u8c6b (Local Relaxation) \u7269\u8d28\u8f93\u8fd0 (Mass Transport) \u57fa\u672c\u65b9\u7a0b \\(\\frac{\\partial \\phi}{\\partial t} = -L \\frac{\\delta F}{\\delta \\phi}\\) \\(\\frac{\\partial \\phi}{\\partial t} = \\nabla \\cdot \\left(L \\nabla \\frac{\\delta F}{\\delta \\phi}\\right)\\) GL \u65b9\u7a0b \\(\\frac{\\partial \\phi}{\\partial t} = -L(r\\phi - c\\nabla^2\\phi)\\) \\(\\frac{\\partial \\phi}{\\partial t} = Lr\\nabla^2\\phi - Lc\\nabla^4\\phi\\) \u52a8\u529b\u5b66\u672c\u8d28 \u53cd\u5e94-\u6269\u6563\u65b9\u7a0b \u8f93\u8fd0\u65b9\u7a0b (\u9ad8\u9636) \u5f1b\u8c6b\u7387 \\(1/\\tau_q \\sim L(r+cq^2)\\) \\(1/\\tau_q \\sim L q^2(r+cq^2)\\) <p>\u8fd9\u4e2a\u5bf9\u6bd4\u63ed\u793a\u4e86\u4e24\u8005\u4e4b\u95f4\u4e00\u4e2a\u6839\u672c\u6027\u7684\u7ed3\u6784\u5dee\u5f02\uff1a</p> <ol> <li> <p>\u68af\u5ea6\u7b97\u5b50\u7684\u51fa\u73b0\uff1a\u6a21\u578b B \u7684\u65b9\u7a0b\u6bd4\u6a21\u578b A \u591a\u4e86\u4e24\u4e2a\u68af\u5ea6\u7b97\u5b50 \\(\\nabla\\)\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5fae\u5c0f\u7684\u6570\u5b66\u4fee\u6539\uff0c\u800c\u662f\u5b88\u6052\u5f8b\u7684\u76f4\u63a5\u70d9\u5370\u3002\u5b83\u610f\u5473\u7740 \\(\\phi\\) \u7684\u53d8\u5316\u7387\u4e0d\u518d\u7531\u5c40\u57df\u7684\u5316\u5b66\u52bf \\(\\mu\\) \u51b3\u5b9a\uff0c\u800c\u662f\u7531\u5316\u5b66\u52bf\u7684\u7a7a\u95f4\u53d8\u5316 (\\(\\nabla\\mu\\)) \u6240\u9a71\u52a8\u7684\u6d41\u7684\u6c47\u805a (\\(\\nabla \\cdot \\mathbf{J}\\)) \u51b3\u5b9a\u3002</p> </li> <li> <p>\u5f1b\u8c6b\u7387\u7684 \\(q^2\\) \u56e0\u5b50\uff1a\u5728\u5085\u91cc\u53f6\u7a7a\u95f4\u4e2d\uff0c\u6bcf\u4e2a \\(\\nabla\\) \u7b97\u5b50\u5bf9\u5e94\u4e00\u4e2a\u56e0\u5b50 \\(iq\\)\u3002\u56e0\u6b64\u6a21\u578b B \u7684\u5f1b\u8c6b\u7387\u6bd4\u6a21\u578b A \u591a\u4e86\u4e00\u4e2a \\(q^2\\) \u56e0\u5b50\u3002\u8fd9\u4e2a \\(q^2\\) \u56e0\u5b50\u5177\u6709\u51b3\u5b9a\u6027\u7684\u7269\u7406\u610f\u4e49\uff1a</p> </li> <li>\u5f53 \\(q \\to 0\\) \u65f6\uff08\u5bf9\u5e94\u6574\u4e2a\u7cfb\u7edf\u7684\u603b\u8d28\u91cf\u6216\u5e73\u5747\u6d53\u5ea6\uff09\uff0c\u5f1b\u8c6b\u7387 \\(1/\\tau_{q=0}^{\\text{Model B}} \\to 0\\)\u3002\u8fd9\u6b63\u662f\u5b88\u6052\u5f8b\u7684\u6570\u5b66\u8868\u8fbe\uff1a\u7cfb\u7edf\u7684\u603b\u8d28\u91cf\uff08\\(q=0\\) \u6a21\u5f0f\uff09\u662f\u4e00\u4e2a\u4e0d\u53d8\u91cf\uff0c\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u8870\u51cf\u3002</li> <li> <p>\u5f1b\u8c6b\u53ea\u80fd\u53d1\u751f\u5728 \\(q &gt; 0\\) \u7684\u6a21\u5f0f\uff0c\u8fd9\u4ee3\u8868\u7740\u7269\u8d28\u5728\u7a7a\u95f4\u4e0a\u7684\u91cd\u65b0\u5206\u5e03\u3002</p> </li> <li> <p>\u76f8\u5206\u79bb\u52a8\u529b\u5b66\uff1a\u5f53\u7cfb\u7edf\u88ab\u6dec\u706b\u5230\u4f4e\u6e29\u533a (\\(r &lt; 0\\)) \u65f6\uff0c\u6a21\u578b B \u65b9\u7a0b\u4e2d\u7684 \\(Lr\\nabla^2\\phi\\) \u9879\u53d8\u6210\u4e86\u4e00\u4e2a\u8d1f\u7684\u6269\u6563\u9879\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u518d\u62b9\u5e73\u6da8\u843d\uff0c\u800c\u662f\u4f1a\u653e\u5927\u5fae\u5c0f\u7684\u5bc6\u5ea6\u6da8\u843d\uff0c\u8fd9\u88ab\u79f0\u4e3a\u4e0a\u5761\u6269\u6563 (uphill diffusion)\u3002\u8fd9\u4e2a\u4e0d\u7a33\u5b9a\u6027\u6b63\u662f\u65cb\u8282\u7ebf\u5206\u89e3 (spinodal decomposition) \u7684\u9a71\u52a8\u529b\uff0c\u5b83\u4f7f\u5f97\u5747\u5300\u6df7\u5408\u76f8\u81ea\u53d1\u5730\u5206\u79bb\u6210\u5bcc\u542bA\u76f8\u548c\u5bcc\u542bB\u76f8\u7684\u533a\u57df\u3002\u800c\u66f4\u9ad8\u9636\u7684 \\(-Lc\\nabla^4\\phi\\) \u9879\u5219\u8d77\u5230\u4e86\u7a33\u5b9a\u4f5c\u7528\uff0c\u9632\u6b62\u6da8\u843d\u65e0\u9650\u589e\u957f\uff0c\u5e76\u6700\u7ec8\u51b3\u5b9a\u4e86\u76f8\u5206\u79bb\u7ed3\u6784\u7684\u7279\u5f81\u5c3a\u5ea6\u3002\u8fd9\u662f\u6a21\u578b A \u5b8c\u5168\u65e0\u6cd5\u63cf\u8ff0\u7684\u4e30\u5bcc\u52a8\u529b\u5b66\u884c\u4e3a\u3002</p> </li> </ol>"},{"location":"zh/notes/26.%20%E4%B8%B4%E7%95%8C%E6%85%A2%E5%8C%96%E3%80%81%E5%8A%A8%E6%80%81%E5%93%8D%E5%BA%94%E4%B8%8E%E5%AE%88%E6%81%92%E5%BE%8B/#_2","title":"\u7ed3\u8bba\uff1a\u4ece\u5f1b\u8c6b\u5230\u8f93\u8fd0\uff0c\u4e00\u5ea7\u901a\u5f80\u6d41\u4f53\u529b\u5b66\u7684\u6865\u6881","text":"<p>\u8fd9\u8282\u8bfe\u4e0d\u4ec5\u662f\u7b2c25\u8bb2\u9759\u6001\u76f8\u53d8\u7406\u8bba\u7684\u52a8\u6001\u5ef6\u4f38\uff0c\u66f4\u662f\u6211\u4eec\u5c06\u7b2c24\u8bb2\u4e2d\u62bd\u8c61\u7684\u6602\u8428\u683c\u7406\u8bba\u548c\u6da8\u843d-\u8017\u6563\u539f\u7406\u5e94\u7528\u4e8e\u4e00\u4e2a\u5177\u4f53\u7269\u7406\u6a21\u578b\u7684\u5b8c\u7f8e\u5c55\u793a\u3002</p> <ul> <li> <p>\u6211\u4eec\u9996\u5148\u6df1\u5165\u5206\u6790\u4e86\u6a21\u578b A \u7684\u52a8\u529b\u5b66\uff0c\u4ece\u7406\u8bba\u4e0a\u63ed\u793a\u5e76\u76f4\u89c2\u5730\u770b\u5230\u4e86\u4e34\u754c\u6162\u5316\u8fd9\u4e00\u6df1\u523b\u73b0\u8c61\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u7cfb\u7edf\u8d8b\u8fd1\u4e34\u754c\u70b9\u65f6\uff0c\u5176\u81ea\u7531\u80fd\u666f\u89c2\u53d8\u5f97\u5f02\u5e38\u5e73\u5766\uff0c\u5bfc\u81f4\u7cfb\u7edf\u7684\u672c\u5f81\u5f1b\u8c6b\u65f6\u95f4\u53d1\u6563\u3002\u8fd9\u6b63\u662f\u9759\u6001\u7406\u8bba\uff08\u53d1\u6563\u7684\u5173\u8054\u957f\u5ea6\uff09\u5728\u65f6\u95f4\u7ef4\u5ea6\u4e0a\u7684\u76f4\u63a5\u4f53\u73b0\u3002</p> </li> <li> <p>\u63a5\u7740\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u52a8\u6001\u78c1\u5316\u7387 \\(\\chi(q,\\omega)\\) \u8fd9\u4e00\u5f3a\u5927\u5de5\u5177\u3002\u901a\u8fc7\u4e3b\u52a8\u201c\u63a2\u6d4b\u201d\u7cfb\u7edf\uff0c\u6211\u4eec\u53d1\u73b0\u4e34\u754c\u6162\u5316\u5728\u9891\u57df\u4e2d\u7684\u201c\u6307\u7eb9\u201d\u662f\u8017\u6563\u8c31\u5cf0\u7684\u65e0\u9650\u9510\u5316\u3002\u8fd9\u8ba9\u6211\u4eec\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u7406\u89e3\u4e86\u7cfb\u7edf\u5728\u4e34\u754c\u70b9\u662f\u5982\u4f55\u4e27\u5931\u5bf9\u5feb\u901f\u3001\u5c40\u57df\u6270\u52a8\u7684\u54cd\u5e94\u80fd\u529b\u7684\u3002</p> </li> <li> <p>\u901a\u8fc7\u6bd4\u8f83\u7cfb\u7edf\u5185\u5728\u7684\u6da8\u843d\u4e0e\u5916\u5728\u7684\u54cd\u5e94\uff0c\u6211\u4eec\u4e3a\u8fd9\u4e2a\u5177\u4f53\u6a21\u578b\u63a8\u5bfc\u51fa\u4e86\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u3002\u8fd9\u4e0d\u518d\u4ec5\u4ec5\u662f\u7b2c24\u8bb2\u4e2d\u7684\u62bd\u8c61\u539f\u5219\uff0c\u800c\u662f\u8fde\u63a5\u4e86\u5177\u4f53\u7269\u7406\u91cf\uff08\u5173\u8054\u51fd\u6570C\u4e0e\u54cd\u5e94\u51fd\u6570\\(\\chi''\\)\uff09\u7684\u5b9e\u7528\u516c\u5f0f\uff0c\u5b83\u5b8c\u7f8e\u5370\u8bc1\u4e86\u201c\u6da8\u843d\u201d\u4e0e\u201c\u8017\u6563\u201d\u6e90\u4e8e\u540c\u4e00\u5fae\u89c2\u8fc7\u7a0b\u7684\u6df1\u523b\u601d\u60f3\u3002</p> </li> <li> <p>\u6700\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u5f15\u5165\u5b88\u6052\u5f8b\u8fd9\u4e00\u57fa\u672c\u7ea6\u675f\uff0c\u5b8c\u6210\u4e86\u4ece\u6a21\u578b A \u5230\u6a21\u578b B \u7684\u5173\u952e\u8dc3\u8fc1\u3002\u6211\u4eec\u63ed\u793a\u4e86\u5b88\u6052\u5f8b\u662f\u5982\u4f55\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u52a8\u529b\u5b66\u65b9\u7a0b\u7684\u7ed3\u6784\u7684\uff1a\u5b83\u5c06\u5c40\u57df\u7684\u3001\u975e\u5b88\u6052\u7684\u5f1b\u8c6b\u8fc7\u7a0b\uff08\u6a21\u578b A\uff09\uff0c\u8f6c\u53d8\u4e3a\u975e\u5c40\u57df\u7684\u3001\u5b88\u6052\u7684\u8f93\u8fd0\u8fc7\u7a0b\uff08\u6a21\u578b B\uff09\u3002\u5f1b\u8c6b\u7387\u4e2d\u591a\u51fa\u7684 \\(q^2\\) \u56e0\u5b50\uff0c\u6b63\u662f\u201c\u7269\u8d28\u4e0d\u80fd\u51ed\u7a7a\u6d88\u5931\uff0c\u53ea\u80fd\u9760\u6d41\u52a8\u6765\u91cd\u65b0\u5206\u5e03\u201d\u8fd9\u4e00\u7269\u7406\u5b9e\u5728\u7684\u6570\u5b66\u70d9\u5370\u3002</p> </li> </ul> <p>\u6a21\u578b A \u548c \u6a21\u578b B \u7684\u533a\u5206\uff0c\u4e0d\u4ec5\u4ec5\u662f\u4e24\u4e2a\u6a21\u578b\u7684\u533a\u522b\uff0c\u5b83\u4ee3\u8868\u4e86\u975e\u5e73\u8861\u52a8\u529b\u5b66\u4e2d\u4e24\u79cd\u6700\u57fa\u672c\u7684\u601d\u7ef4\u65b9\u5f0f\u3002\u5b83\u4e3a\u6211\u4eec\u7406\u89e3\u81ea\u7136\u754c\u4e2d\u79cd\u7c7b\u7e41\u591a\u7684\u76f8\u53d8\u548c\u6591\u56fe\u5f62\u6210\u73b0\u8c61\u63d0\u4f9b\u4e86\u6700\u6838\u5fc3\u7684\u7406\u8bba\u6846\u67b6\u3002</p> <p>\u800c\u6211\u4eec\u5bf9\u6a21\u578b B\u2014\u2014\u8fd9\u4e2a\u6700\u7b80\u5355\u7684\u5355\u6807\u91cf\u5b88\u6052\u573a\u52a8\u529b\u5b66\u6a21\u578b\u7684\u5b66\u4e60\uff0c\u6b63\u662f\u4e00\u5ea7\u901a\u5f80\u66f4\u5e7f\u9614\u9886\u57df\u7684\u6865\u6881\u3002\u5728\u4e0b\u4e00\u8bb2\u4e2d\uff0c\u6211\u4eec\u5c06\u628a\u201c\u5b88\u6052\u201d\u8fd9\u4e00\u601d\u60f3\u63a8\u5e7f\u5230\u7269\u7406\u4e16\u754c\u4e2d\u6700\u91cd\u8981\u7684\u4e00\u7ec4\u5b88\u6052\u91cf\u4e0a\uff1a\u8d28\u91cf\u3001\u52a8\u91cf\u548c\u80fd\u91cf\u3002\u5bf9\u8fd9\u4e9b\u5b88\u6052\u91cf\u52a8\u529b\u5b66\u7684\u7814\u7a76\uff0c\u6b63\u662f\u6d41\u4f53\u529b\u5b66 (Hydrodynamics) \u7684\u6838\u5fc3\u3002\u6211\u4eec\u5c06\u4ece\u6700\u7b80\u5355\u7684\u60c5\u51b5\u2014\u2014\u65e0\u6469\u64e6\u7684\u7406\u60f3\u6d41\u4f53\u2014\u2014\u51fa\u53d1\uff0c\u63a8\u5bfc\u51fa\u6d41\u4f53\u529b\u5b66\u7684\u57fa\u77f3\u6027\u65b9\u7a0b\u4e4b\u4e00\uff1a\u6b27\u62c9\u65b9\u7a0b (Euler Equation) \u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/","title":"\u5f15\u8a00\uff1a\u4ece\u6807\u91cf\u573a\u5230\u6d41\u4f53","text":"<p>\u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4e3a\u63cf\u8ff0\u8fd1\u5e73\u8861\u6001\u7684\u7cfb\u7edf\uff0c\u5efa\u7acb\u4e86\u4e00\u5957\u57fa\u4e8e\u81ea\u7531\u80fd (Free Energy) \u548c\u6602\u8428\u683c\u5173\u7cfb (Onsager Relations) \u7684\u5f3a\u5927\u7406\u8bba\u6846\u67b6\u3002\u7136\u800c\uff0c\u6211\u4eec\u7684\u8ba8\u8bba\u81f3\u4eca\u4ecd\u5c40\u9650\u4e8e\u5355\u4e2a\u6807\u91cf\u5e8f\u53c2\u91cf (scalar order parameter) \\(\\phi(x,t)\\) \u7684\u6f14\u5316\u3002</p> <p>\u8fd9\u8282\u8bfe\u6211\u4eec\u7684\u89c6\u89d2\u5c06\u4ece\u63cf\u8ff0\u62bd\u8c61\u5e8f\u53c2\u91cf\u7684\u68af\u5ea6\u52a8\u529b\u5b66 (Gradient Dynamics) \uff0c\u62d3\u5c55\u81f3\u63cf\u7ed8\u7269\u7406\u4e16\u754c\u4e2d\u6700\u666e\u904d\u7684\u5b8f\u89c2\u8fd0\u52a8\u2014\u2014\u6d41\u4f53\u52a8\u529b\u5b66 (Hydrodynamics) \u3002\u8fd9\u5e76\u975e\u7b80\u5355\u5730\u589e\u52a0\u51e0\u4e2a\u53d8\u91cf\uff0c\u800c\u662f\u8fdb\u5165\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u7269\u7406\u63cf\u8ff0\u8303\u7574\u3002</p> <p>\u6211\u4eec\u5c06\u53d1\u73b0\uff0c\u652f\u914d\u6d41\u4f53\u8fd0\u52a8\u7684\u65b9\u7a0b\uff0c\u5176\u5e95\u5c42\u903b\u8f91\u4e0e\u6211\u4eec\u4e4b\u524d\u5b66\u5230\u7684\u77e5\u8bc6\u4e00\u8109\u76f8\u627f\uff0c\u90fd\u6e90\u4e8e\u7269\u7406\u5b66\u6700\u6839\u672c\u7684\u5bf9\u79f0\u6027 (symmetries) \u4e0e\u5b88\u6052\u5f8b (conservation laws) \u3002\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u5c31\u662f\u4ece\u6700\u57fa\u672c\u7684\u7b2c\u4e00\u6027\u539f\u7406\u51fa\u53d1\uff0c\u4e3a\u4e00\u79cd\u6700\u7406\u60f3\u5316\u7684\u6d41\u4f53\u2014\u2014\u65e0\u6469\u64e6\u6d41\u4f53 (frictionless fluid) \u2014\u2014\u6784\u5efa\u5176\u5b8c\u6574\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u7ec4\u3002</p> <p>\u6211\u4eec\u5c06\u7cfb\u7edf\u6027\u5730\u63a8\u5bfc\u4e09\u5927\u57fa\u672c\u5b88\u6052\u5b9a\u5f8b\uff1a 1.  \u8d28\u91cf\u5b88\u6052 (Mass Conservation) 2.  \u52a8\u91cf\u5b88\u6052 (Momentum Conservation) 3.  \u80fd\u91cf\u5b88\u6052 (Energy Conservation)</p> <p>\u901a\u8fc7\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u5c06\u63a8\u5bfc\u51fa\u6d41\u4f53\u529b\u5b66\u4e2d\u4e24\u4e2a\u91cc\u7a0b\u7891\u5f0f\u7684\u65b9\u7a0b\u2014\u2014\u8fde\u7eed\u6027\u65b9\u7a0b (Continuity Equation) \u548c\u6b27\u62c9\u65b9\u7a0b (Euler Equation) \uff0c\u5e76\u63ed\u793a\u7406\u60f3\u6d41\u4f53\u8fd0\u52a8\u7684\u6df1\u523b\u70ed\u529b\u5b66\u672c\u8d28\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#1","title":"1. \u4ece\u68af\u5ea6\u52a8\u529b\u5b66\u5230\u6d41\u4f53\u52a8\u529b\u5b66","text":"<p>\u5728\u6211\u4eec\u5bf9\u8fd1\u5e73\u8861\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u63a2\u7d22\u4e2d\uff0c\u5df2\u7ecf\u6df1\u5165\u7814\u7a76\u4e86\u63cf\u8ff0\u5355\u4e2a\u6807\u91cf\u573a (scalar field) \\(\\phi(x,t)\\)\u6f14\u5316\u7684\u68af\u5ea6\u52a8\u529b\u5b66 (Gradient Dynamics)\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u8854\u63a5\u672c\u8bb2\u7684\u5185\u5bb9\uff0cErwin Frey \u6559\u6388\u9996\u5148\u7b80\u8981\u56de\u987e\u4e86\u5176\u6838\u5fc3\u601d\u60f3\uff0c\u5e76\u9610\u660e\u5b83\u662f\u5982\u4f55\u81ea\u7136\u5730\u5f15\u5411\u66f4\u4e3a\u5b8f\u5927\u548c\u666e\u9002\u7684\u6d41\u4f53\u52a8\u529b\u5b66\u7406\u8bba\u7684\u3002</p> <p></p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#11","title":"1.1 \u56de\u987e\uff1a\u4e24\u79cd\u5f1b\u8c6b\u6a21\u578b","text":"<p>\u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5b66\u4e60\u5230\uff0c\u68af\u5ea6\u52a8\u529b\u5b66\u4e3b\u8981\u5206\u4e3a\u4e24\u79cd\u6a21\u578b\uff0c\u5176\u6839\u672c\u533a\u522b\u5728\u4e8e\u6240\u63cf\u8ff0\u7684\u5e8f\u53c2\u91cf\u662f\u5426\u5b88\u6052 (conserved) \u3002</p> <ul> <li>\u6a21\u578b A (Model A: \u975e\u5b88\u6052\u573a, non-conserved field) \uff1a\u5176\u52a8\u529b\u5b66\u7531\u4e00\u4e2a\u5c40\u57df\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u63cf\u8ff0\uff1a</li> </ul> \\[\\frac{\\partial \\phi(\\vec{x},t)}{\\partial t} = -L \\frac{\\delta F}{\\delta \\phi} + \\eta\\] <p>\u5176\u566a\u58f0\u9879\u6ee1\u8db3\uff1a</p> \\[\\langle \\eta(\\vec{x}, t) \\eta(\\vec{x}', t') \\rangle = 2LT \\delta(\\vec{x} - \\vec{x}') \\delta(t - t')\\] <p>\u8be5\u65b9\u7a0b\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5c40\u57df\u7684\u5f1b\u8c6b (relaxation) \u8fc7\u7a0b\u3002\u573a\u91cf \\(\\phi\\) \u5728\u7a7a\u95f4\u4e2d\u4efb\u4f55\u4e00\u70b9\u7684\u6570\u503c\u90fd\u53ef\u4ee5\u72ec\u7acb\u5730\u589e\u52a0\u6216\u51cf\u5c11\uff0c\u5176\u53d8\u5316\u7684\u9a71\u52a8\u529b\u6765\u81ea\u4e8e\u7cfb\u7edf\u81ea\u7531\u80fd (Free Energy) \\(F\\) \u7684\u964d\u4f4e\u3002\\(L\\) \u662f\u4e00\u4e2a\u52a8\u529b\u5b66\u7cfb\u6570 (kinetic coefficient) \uff0c\\(\\eta\\) \u4ee3\u8868\u70ed\u566a\u58f0 (thermal noise) \u3002</p> <ul> <li> <p>\u6a21\u578b B (Model B: \u5b88\u6052\u573a, conserved field) \uff1a\u5176\u52a8\u529b\u5b66\u5fc5\u987b\u9075\u5faa\u8fde\u7eed\u6027\u65b9\u7a0b (continuity equation) \u7684\u5f62\u5f0f\uff1a     $$     \\frac{\\partial \\phi(\\vec{x},t)}{\\partial t} = -\\nabla \\cdot \\vec{J}     $$     \u5176\u4e2d\uff0c\u6d41 (flux) \\(\\vec{J}\\) \u7531\u5316\u5b66\u52bf\u7684\u68af\u5ea6\u9a71\u52a8\uff1a     $$     \\vec{J} = -M \\nabla \\frac{\\delta F}{\\delta \\phi} + \\vec{\\eta}_J     $$</p> <p>\u5176\u6da8\u843d\u6d41\u9879\u6ee1\u8db3\uff1a $$ \\langle \\eta_{J\\alpha}(\\vec{x}, t) \\eta_{J\\beta}(\\vec{x}', t') \\rangle = 2MT \\delta_{\\alpha\\beta} \\delta(\\vec{x} - \\vec{x}') \\delta(t - t') $$</p> <p>\u8fd9\u4e2a\u5f62\u5f0f\u5728\u7269\u7406\u4e0a\u6709\u7740\u672c\u8d28\u7684\u4e0d\u540c\u3002\u5b83\u8868\u660e\u573a\u91cf \\(\\phi\\) \u7684\u603b\u91cf\u662f\u5b88\u6052\u7684\uff0c\u4e0d\u80fd\u5728\u7a7a\u95f4\u4e2d\u51ed\u7a7a\u4ea7\u751f\u6216\u6d88\u5931\u3002\u4efb\u4f55\u5c40\u57df\u573a\u91cf\u7684\u53d8\u5316\uff0c\u90fd\u5fc5\u987b\u6e90\u4e8e\u4e00\u4e2a\u7269\u7406\u7684\u6d41 (flux or current) \\(\\vec{J}\\) \u6d41\u5165\u6216\u6d41\u51fa\u8be5\u533a\u57df\u3002(\u6ce8\uff1a\u6b64\u5904\u91c7\u7528\u4e86\u66f4\u5b8c\u6574\u7684\u6a21\u578bB\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2dM\u901a\u5e38\u88ab\u79f0\u4e3a\u8fc1\u79fb\u7387(Mobility)\u3002\u5728\u677f\u4e66\u56de\u987e\u4e2d\uff0c\u6559\u6388\u4e3a\u4e86\u7b80\u6d01\u53ef\u80fd\u7701\u7565\u4e86\u68af\u5ea6\u7b97\u5b50 \\(\\nabla\\)\u200b)</p> </li> </ul>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#12","title":"1.2 \u6d41\u4f53\u52a8\u529b\u5b66\u4f5c\u4e3a\u666e\u9002\u7406\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u5c06\u4ece\u63cf\u8ff0\u5355\u4e2a\u6807\u91cf\u573a\u7684\u6a21\u578bB\u8f6c\u5411\u7684\u6d41\u4f53\u52a8\u529b\u5b66 (Hydrodynamics) \u3002\u6a21\u578b B \u7684\u65b9\u7a0b\u5f62\u5f0f \\(\\frac{\\partial (\\text{\u5bc6\u5ea6})}{\\partial t} + \\nabla \\cdot (\\text{\u6d41}) = 0\\) \u4e0d\u4ec5\u4ec5\u662f\u63cf\u8ff0\u4e00\u4e2a\u5e8f\u53c2\u91cf\u7684\u65b9\u7a0b\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u7269\u7406\u5b66\u4e2d\u6240\u6709\u5b88\u6052\u5f8b (conservation laws) \u7684\u901a\u7528\u6570\u5b66\u6a21\u677f\u3002</p> <p>\u6d41\u4f53\u52a8\u529b\u5b66\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u6b63\u662f\u5c06\u8fd9\u4e2a\u666e\u9002\u7684\u6570\u5b66\u6846\u67b6\uff0c\u4ece\u63cf\u8ff0\u5355\u4e2a\u62bd\u8c61\u7684\u5e8f\u53c2\u91cf\uff0c\u63a8\u5e7f\u5230\u63cf\u8ff0\u4efb\u4f55\u6d41\u4f53\u90fd\u5fc5\u987b\u670d\u4ece\u7684\u3001\u4e00\u7ec4\u6700\u57fa\u672c\u7684\u5b88\u6052\u91cf (conserved quantities) \u3002\u8fd9\u4e9b\u5b88\u6052\u91cf\uff0c\u5373\u8d28\u91cf\u3001\u52a8\u91cf\u548c\u80fd\u91cf \uff0c\u662f\u4efb\u4f55\u5b8f\u89c2\u7cfb\u7edf\u5728\u4f4e\u9891\uff08\u957f\u65f6\u95f4\u5c3a\u5ea6\uff09\u548c\u957f\u6ce2\uff08\u5927\u7a7a\u95f4\u5c3a\u5ea6\uff09\u4e0b\u7684\u4e3b\u5bfc\u81ea\u7531\u5ea6\u3002\u56e0\u4e3a\u5b83\u4eec\u7684\u6539\u53d8\u53ea\u80fd\u901a\u8fc7\u957f\u8ddd\u79bb\u7684\u8f93\u8fd0\u6765\u5b8c\u6210\uff0c\u6240\u4ee5\u5b83\u4eec\u662f\u7cfb\u7edf\u4e2d\u6700\u201c\u6162\u201d\u7684\u53d8\u91cf\u3002</p> <p>\u56e0\u6b64\uff0c\u6d41\u4f53\u52a8\u529b\u5b66\u662f\u4e00\u5957\u6781\u5176\u666e\u9002\u7684\u7406\u8bba\uff0c\u5b83\u4e0d\u5173\u5fc3\u5fae\u89c2\u7ec6\u8282\uff08\u5982\u5206\u5b50\u95f4\u7684\u5177\u4f53\u4f5c\u7528\u529b\uff09\uff0c\u53ea\u4e13\u6ce8\u4e8e\u7cfb\u7edf\u6700\u57fa\u672c\u7684\u5bf9\u79f0\u6027\u4e0e\u5b88\u6052\u5b9a\u5f8b\u3002\u672c\u8bb2\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u5c31\u662f\u4e3a\u6d41\u4f53\u7684\u8d28\u91cf\u3001\u52a8\u91cf\u548c\u80fd\u91cf\u8fd9\u4e09\u4e2a\u57fa\u672c\u5b88\u6052\u91cf\uff0c\u5bfb\u627e\u5b83\u4eec\u5404\u81ea\u5bf9\u5e94\u7684\u201c\u6d41\u201d\uff0c\u4e5f\u5373\u901a\u91cf (flux) \uff0c\u5e76\u6784\u5efa\u8d77\u63cf\u8ff0\u7406\u60f3\u6d41\u4f53\uff08\u65e0\u6469\u64e6\u6d41\u4f53\uff09\u7684\u5b8c\u6574\u52a8\u529b\u5b66\u65b9\u7a0b\u7ec4\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#2","title":"2. \u6784\u5efa\u7406\u8bba\u7684\u57fa\u77f3\uff1a\u57fa\u672c\u5047\u8bbe\u4e0e\u63cf\u8ff0\u573a","text":"<p>\u4e3a\u4e86\u5efa\u7acb\u4e00\u5957\u80fd\u591f\u63cf\u8ff0\u6d41\u4f53\u5b8f\u89c2\u8fd0\u52a8\u7684\u666e\u9002\u7406\u8bba\uff0c\u6211\u4eec\u65e0\u9700\u6df1\u5165\u5230\u6bcf\u4e2a\u5206\u5b50\u7684\u5177\u4f53\u884c\u4e3a\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u4ece\u4e24\u4e2a\u5f3a\u5927\u4e14\u6839\u672c\u7684\u7269\u7406\u5047\u8bbe\u51fa\u53d1\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u5b9a\u4e49\u4e00\u5957\u80fd\u591f\u63cf\u8ff0\u6d41\u4f53\u72b6\u6001\u7684\u5b8f\u89c2\u573a (macroscopic fields) \u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#21","title":"2.1 \u5047\u8bbe\u4e00\uff1a\u8fde\u7eed\u4ecb\u8d28\u4e0e\u201c\u6d41\u4f53\u5143\u201d","text":"<p>\u6211\u4eec\u9996\u5148\u5f15\u5165\u8fde\u7eed\u4ecb\u8d28\u5047\u8bbe (Continuous Medium Assumption) \u3002\u5728\u8fd9\u4e2a\u5047\u8bbe\u4e0b\uff0c\u6211\u4eec\u5ffd\u7565\u6d41\u4f53\u7684\u5fae\u89c2\u5206\u5b50\u7ed3\u6784\uff0c\u5c06\u5176\u89c6\u4e3a\u4e00\u4e2a\u53ef\u4ee5\u65e0\u9650\u5206\u5272\u7684\u8fde\u7eed\u7269\u8d28\u3002\u4e3a\u4e86\u5728\u6570\u5b66\u4e0a\u5904\u7406\u8fd9\u4e2a\u8fde\u7eed\u4f53\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6838\u5fc3\u6982\u5ff5\u2014\u2014\u201c\u6d41\u4f53\u5143\u201d (fluid element) \u3002</p> <p></p> <p></p> <p>\u4e00\u4e2a\u201c\u6d41\u4f53\u5143\u201d\u662f\u8fd9\u6837\u4e00\u4e2a\u5c0f\u4f53\u79ef\uff1a</p> <ul> <li>\u5728\u5b8f\u89c2\u5c3a\u5ea6\u4e0a\uff0c\u5b83\u8db3\u591f\u5c0f\uff0c\u53ef\u4ee5\u88ab\u8fd1\u4f3c\u4e3a\u4e00\u4e2a\u6570\u5b66\u4e0a\u7684\u70b9 \\((\\vec{x}, t)\\)\uff0c\u4ece\u800c\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u5fae\u79ef\u5206\u5de5\u5177\uff08\u5982\u68af\u5ea6\u3001\u6563\u5ea6\uff09\u6765\u63cf\u8ff0\u7269\u7406\u91cf\u7684\u7a7a\u95f4\u53d8\u5316\u3002</li> <li>\u5728\u5fae\u89c2\u5c3a\u5ea6\u4e0a\uff0c\u5b83\u53c8\u8db3\u591f\u5927\uff0c\u5185\u90e8\u5305\u542b\u4e86\u6570\u91cf\u5de8\u5927\u7684\u5206\u5b50\u3002\u8fd9\u4f7f\u5f97\u8bf8\u5982\u5bc6\u5ea6\u3001\u538b\u5f3a\u3001\u6e29\u5ea6\u7b49\u7edf\u8ba1\u7269\u7406\u91cf\u53ef\u4ee5\u5728\u5176\u4e2d\u88ab\u826f\u597d\u5730\u5b9a\u4e49\uff0c\u5176\u5185\u90e8\u7684\u6da8\u843d\u53ef\u4ee5\u88ab\u5e73\u5747\u6389\u3002</li> </ul> <p>\u6b63\u5982\u6559\u6388\u5728\u8bfe\u5802\u4e0a\u63d0\u5230\u7684\uff0c\u8fd9\u4e2a\u5047\u8bbe\u7684\u9002\u7528\u8303\u56f4\u60ca\u4eba\u5730\u5e7f\u6cdb\uff0c\u5373\u4f7f\u572820-30\u7eb3\u7c73\u7684\u5c3a\u5ea6\u4e0a\uff0c\u5bf9\u4e8e\u50cf\u6c34\u8fd9\u6837\u7684\u6d41\u4f53\uff0c\u8fde\u7eed\u4ecb\u8d28\u63cf\u8ff0\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f9d\u7136\u6709\u6548\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#22","title":"2.2 \u5047\u8bbe\u4e8c\uff1a\u5c40\u57df\u70ed\u5e73\u8861","text":"<p>\u8fd9\u662f\u6d41\u4f53\u52a8\u529b\u5b66\u7406\u8bba\u7684\u7b2c\u4e8c\u4e2a\u57fa\u77f3\uff1a\u5c40\u57df\u5e73\u8861\u5047\u8bbe (Local Equilibrium Assumption) \u3002\u5b83\u6307\u51fa\uff1a</p> <p>\u5373\u4f7f\u6574\u4e2a\u6d41\u4f53\u7cfb\u7edf\u5b8f\u89c2\u4e0a\u5904\u4e8e\u975e\u5e73\u8861\u6001\uff08\u4f8b\u5982\uff0c\u5b58\u5728\u6d41\u52a8\u3001\u6e29\u5ea6\u68af\u5ea6\u7b49\uff09\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u8ba4\u4e3a\u6bcf\u4e00\u4e2a\u201c\u6d41\u4f53\u5143\u201d\u5728\u4efb\u4f55\u65f6\u523b\u90fd\u5904\u4e8e\u5176\u81ea\u8eab\u7684\u5185\u90e8\u70ed\u529b\u5b66\u5e73\u8861\u72b6\u6001\u3002</p> <p>\u8fd9\u4e2a\u5047\u8bbe\u7684\u5a01\u529b\u5728\u4e8e\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5728\u6bcf\u4e2a\u65f6\u7a7a\u70b9 \\((\\vec{x}, t)\\) \u4e0a\uff0c\u5b9a\u4e49\u4e00\u7cfb\u5217\u5c40\u57df\u7684\u70ed\u529b\u5b66\u72b6\u6001\u53d8\u91cf\uff0c\u4f8b\u5982\u5c40\u57df\u6e29\u5ea6 \\(T(\\vec{x}, t)\\) \u548c\u5c40\u57df\u538b\u5f3a \\(P(\\vec{x}, t)\\)\u3002\u6b63\u56e0\u5982\u6b64\uff0c\u6211\u4eec\u624d\u80fd\u5c06\u5e73\u8861\u6001\u70ed\u529b\u5b66\u7684\u5168\u90e8\u5f3a\u5927\u5de5\u5177\u548c\u5173\u7cfb\u5f0f\uff08\u5982\u70ed\u529b\u5b66\u7b2c\u4e00\u5b9a\u5f8b\u3001\u5409\u5e03\u65af\u5173\u7cfb\u7b49\uff09\u5e94\u7528\u4e8e\u63cf\u8ff0\u4e00\u4e2a\u52a8\u6001\u6f14\u5316\u4e2d\u7684\u3001\u975e\u5e73\u8861\u7684\u6d41\u4f53\u7cfb\u7edf\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#23","title":"2.3 \u6d41\u4f53\u52a8\u529b\u5b66\u7684\u57fa\u672c\u573a\uff1a\u5b88\u6052\u7684\u6162\u53d8\u91cf","text":"<p>\u57fa\u4e8e\u4ee5\u4e0a\u5047\u8bbe\uff0c\u6211\u4eec\u9700\u8981\u9009\u62e9\u4e00\u5957\u6700\u57fa\u672c\u7684\u7269\u7406\u573a\u6765\u63cf\u8ff0\u6d41\u4f53\u7684\u72b6\u6001\u3002\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u54ea\u4e9b\u573a\u5462\uff1f\u7406\u8bba\u7269\u7406\u7684\u6307\u5bfc\u539f\u5219\u662f\uff1a\u9009\u62e9\u7cfb\u7edf\u7684\u6162\u53d8\u91cf\uff0c\u56e0\u4e3a\u5b83\u4eec\u51b3\u5b9a\u4e86\u7cfb\u7edf\u5728\u957f\u65f6\u95f4\u3001\u5927\u5c3a\u5ea6\u4e0b\u7684\u5b8f\u89c2\u52a8\u529b\u5b66\u3002\u5728\u4e00\u4e2a\u6d41\u4f53\u7cfb\u7edf\u4e2d\uff0c\u6700\u201c\u6162\u201d\u7684\u53d8\u91cf\u6b63\u662f\u90a3\u4e9b\u5b88\u6052\u91cf\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u6539\u53d8\u53ea\u80fd\u901a\u8fc7\u957f\u8ddd\u79bb\u7684\u7269\u8d28\u8f93\u8fd0\u6765\u5b8c\u6210\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u7b80\u5355\u6d41\u4f53 (simple fluid) \uff08\u5373\u7531\u5355\u4e00\u7ec4\u5206\u6784\u6210\u7684\u6d41\u4f53\uff09\uff0c\u6211\u4eec\u9009\u62e9\u4ee5\u4e0b\u4e09\u4e2a\u57fa\u672c\u5b88\u6052\u573a\u7684\u5bc6\u5ea6\u6765\u63cf\u8ff0\u5176\u72b6\u6001\uff1a</p> <ol> <li> <p>\u8d28\u91cf\u5bc6\u5ea6\u573a (mass density) \\(\\rho(\\vec{x}, t)\\)\uff1a\u5355\u4f4d\u4f53\u79ef\u5185\u7684\u6d41\u4f53\u8d28\u91cf\u3002\u8fd9\u662f\u6211\u4eec\u6700\u57fa\u672c\u7684\u6807\u91cf\u573a\u3002</p> </li> <li> <p>\u52a8\u91cf\u5bc6\u5ea6\u573a (momentum density) \\(\\vec{g}(\\vec{x}, t)\\)\uff1a\u5355\u4f4d\u4f53\u79ef\u5185\u7684\u6d41\u4f53\u52a8\u91cf\u3002\u5b83\u662f\u4e00\u4e2a\u77e2\u91cf\u573a\uff0c\u4e0e\u6d41\u4f53\u7684\u901f\u5ea6\u573a (velocity field) \\(\\vec{v}(\\vec{x}, t)\\) \u5bc6\u5207\u76f8\u5173\uff0c\u5176\u5b9a\u4e49\u4e3a\uff1a</p> </li> </ol> <p>$$    \\vec{g}(\\vec{x}, t) = \\rho(\\vec{x}, t) \\vec{v}(\\vec{x}, t)    $$</p> <p>\u901f\u5ea6\u573a \\(\\vec{v}(\\vec{x}, t)\\)\u200b \u5c06\u662f\u6211\u4eec\u8981\u6c42\u89e3\u7684\u6838\u5fc3\u53d8\u91cf\u4e4b\u4e00\u3002</p> <ol> <li>\u80fd\u91cf\u5bc6\u5ea6\u573a (energy density) \\(\\epsilon(\\vec{x}, t)\\)\uff1a\u5728\u6d41\u4f53\u52a8\u529b\u5b66\u7684\u6784\u5efa\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u5173\u6ce8\u7684\u662f\u5355\u4f4d\u8d28\u91cf\u7684\u5185\u80fd (internal energy per unit mass) \u3002\u6d41\u4f53\u7684\u603b\u80fd\u91cf\u5bc6\u5ea6\u8fd8\u9700\u8981\u989d\u5916\u8003\u8651\u5b8f\u89c2\u6d41\u52a8\u7684\u52a8\u80fd\uff0c\u6211\u4eec\u5c06\u5728\u80fd\u91cf\u5b88\u6052\u90e8\u5206\u8be6\u7ec6\u8ba8\u8bba\u3002</li> </ol> <p>\u89d2\u52a8\u91cf\u4e5f\u662f\u4e00\u4e2a\u5b88\u6052\u91cf\uff0c\u4f46\u5728\u6ca1\u6709\u5185\u90e8\u81ea\u65cb\u6216\u5916\u90e8\u626d\u77e9\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u52a8\u529b\u5b66\u53ef\u4ee5\u7531\u52a8\u91cf\u573a\u7684\u6f14\u5316\u5bfc\u51fa\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8fd9\u91cc\u4e0d\u628a\u5b83\u4f5c\u4e3a\u72ec\u7acb\u7684\u57fa\u672c\u573a\u3002</p> <p>\u6709\u4e86\u8fd9\u5957\u57fa\u672c\u5047\u8bbe\u548c\u63cf\u8ff0\u573a\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u4e3a\u6bcf\u4e00\u4e2a\u5b88\u6052\u91cf\u6784\u5efa\u5176\u5bf9\u5e94\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u4e86\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#3-continuity-equation","title":"3. \u7b2c\u4e00\u652f\u67f1\uff1a\u8d28\u91cf\u5b88\u6052\u4e0e\u8fde\u7eed\u6027\u65b9\u7a0b (Continuity Equation)","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u5f00\u59cb\u5e94\u7528\u5728\u7b2c\u4e00\u8282\u4e2d\u5efa\u7acb\u7684\u5b88\u6052\u5f8b\u6846\u67b6\u3002\u7b2c\u4e00\u4e2a\uff0c\u4e5f\u662f\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u57fa\u672c\u652f\u67f1\uff0c\u6765\u81ea\u4e8e\u8d28\u91cf\u5b88\u6052\u5b9a\u5f8b (mass conservation law) \u3002\u6211\u4eec\u7684\u4efb\u52a1\u662f\u4e3a\u8d28\u91cf\u8fd9\u4e2a\u5b88\u6052\u91cf\uff0c\u627e\u51fa\u5176\u5bf9\u5e94\u7684\u201c\u5bc6\u5ea6\u201d\u548c\u201c\u6d41\u201d\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#31","title":"3.1 \u79ef\u5206\u5f62\u5f0f\uff1a\u7269\u7406\u76f4\u89c9\u7684\u4f53\u73b0","text":"<p>\u6211\u4eec\u4ece\u6700\u76f4\u89c2\u7684\u7269\u7406\u56fe\u50cf\u51fa\u53d1\uff1a\u8003\u8651\u7a7a\u95f4\u4e2d\u4e00\u4e2a\u4efb\u610f\u56fa\u5b9a\u7684\u63a7\u5236\u4f53\u79ef \\(V\\)\uff0c\u5176\u8868\u9762\u4e3a \\(\\partial V\\)\u3002\u8d28\u91cf\u5b88\u6052\u7684\u7269\u7406\u76f4\u89c9\u662f\uff1a\u201c\u4e00\u4e2a\u5c01\u95ed\u4f53\u79ef\u5185\u603b\u8d28\u91cf\u7684\u53d8\u5316\uff0c\u53ea\u80fd\u901a\u8fc7\u7269\u8d28\u6d41\u7a7f\u8fc7\u5176\u8fb9\u754c\u6765\u5b9e\u73b0\u201d\u3002</p> <ul> <li> <p>\u201c\u5bc6\u5ea6\u201d: \u63cf\u8ff0\u8d28\u91cf\u7684\u5bc6\u5ea6\u5c31\u662f\u8d28\u91cf\u5bc6\u5ea6\u573a (mass density) \\(\\rho(\\vec{x}, t)\\)\u3002\u56e0\u6b64\uff0c\u4f53\u79ef \\(V\\) \u5185\u7684\u603b\u8d28\u91cf\u4e3a \\(M = \\int_V dV \\, \\rho(\\vec{x}, t)\\)\u3002</p> </li> <li> <p>\u201c\u6d41\u201d: \u63cf\u8ff0\u8d28\u91cf\u6d41\u52a8\u7684\u7269\u7406\u91cf\u662f\u8d28\u91cf\u6d41 (mass current) \u6216\u8d28\u91cf\u901a\u91cf (mass flux) \\(\\vec{J}(\\vec{x}, t)\\)\u3002\u5bf9\u4e8e\u4e00\u4e2a\u901f\u5ea6\u4e3a \\(\\vec{v}\\) \u7684\u6d41\u4f53\uff0c\u8fd9\u4e2a\u901a\u91cf\u76f4\u89c2\u5730\u7b49\u4e8e\u5bc6\u5ea6\u4e58\u4ee5\u901f\u5ea6\uff1a\\(\\vec{J}(\\vec{x}, t) = \\rho(\\vec{x}, t) \\vec{v}(\\vec{x}, t)\\)\u3002</p> </li> <li> <p>\u5b88\u6052\u5b9a\u5f8b: \u4f53\u79ef\u5185\u603b\u8d28\u91cf\u7684\u53d8\u5316\u7387\uff0c\u5fc5\u987b\u7b49\u4e8e\u51c0\u6d41\u5165\u8be5\u4f53\u79ef\u7684\u8d28\u91cf\u3002\u901a\u8fc7\u8868\u9762 \\(\\partial V\\) \u5411\u5916\u6d41\u51fa\u7684\u603b\u901a\u91cf\u4e3a \\(\\oint_{\\partial V} d\\vec{S} \\cdot \\vec{J}\\)\uff0c\u5176\u4e2d \\(d\\vec{S} = \\hat{n} dS\\) \u662f\u6307\u5411\u4f53\u79ef\u5916\u90e8\u7684\u9762\u79ef\u5fae\u5143\u3002\u56e0\u6b64\uff0c\u8d28\u91cf\u5b88\u6052\u7684\u79ef\u5206\u5f62\u5f0f\u53ef\u4ee5\u5199\u4e3a\uff1a</p> \\[\\frac{d}{dt} \\int_V dV \\, \\rho = -\\oint_{\\partial V} d\\vec{S} \\cdot \\vec{J}\\] <p>\u7b49\u5f0f\u53f3\u8fb9\u7684\u8d1f\u53f7\u8868\u793a\uff0c\u5f53\u51c0\u901a\u91cf\u4e3a\u6b63\uff08\u5411\u5916\u6d41\uff09\u65f6\uff0c\u5185\u90e8\u8d28\u91cf\u51cf\u5c11\u3002</p> </li> </ul> <p></p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#32","title":"3.2 \u5fae\u5206\u5f62\u5f0f\uff1a\u5c40\u57df\u7684\u5b88\u6052\u5b9a\u5f8b","text":"<p>\u79ef\u5206\u5f62\u5f0f\u63cf\u8ff0\u7684\u662f\u6574\u4e2a\u4f53\u79ef\u7684\u5b8f\u89c2\u884c\u4e3a\u3002\u4e3a\u4e86\u5f97\u5230\u4e00\u4e2a\u9002\u7528\u4e8e\u7a7a\u95f4\u6bcf\u4e00\u70b9\u7684\u5c40\u57df\u65b9\u7a0b\uff0c\u6211\u4eec\u4f7f\u7528\u9ad8\u65af\u6563\u5ea6\u5b9a\u7406 (Gauss's Divergence Theorem) \u5c06\u4e0a\u5f0f\u4e2d\u7684\u9762\u79ef\u5206\u8f6c\u6362\u6210\u4f53\u79ef\u5206\uff1a</p> \\[\\oint_{\\partial V} d\\vec{S} \\cdot \\vec{J} = \\int_V dV (\\nabla \\cdot \\vec{J})\\] <p>\u4ee3\u5165\u79ef\u5206\u5f62\u5f0f\u7684\u5b88\u6052\u65b9\u7a0b\uff0c\u5e76\u5c06\u65f6\u95f4\u5bfc\u6570\u79fb\u5165\u79ef\u5206\u53f7\u5185\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[\\int_V dV \\left( \\frac{\\partial \\rho}{\\partial t} + \\nabla \\cdot \\vec{J} \\right) = 0\\] <p>\u7531\u4e8e\u8fd9\u4e2a\u5173\u7cfb\u5f0f\u5fc5\u987b\u5bf9\u4efb\u610f\u9009\u53d6\u7684\u63a7\u5236\u4f53\u79ef \\(V\\) \u90fd\u6210\u7acb\uff0c\u56e0\u6b64\u88ab\u79ef\u51fd\u6570\u672c\u8eab\u5fc5\u987b\u5904\u5904\u4e3a\u96f6\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u8d28\u91cf\u5b88\u6052\u7684\u5fae\u5206\u5f62\u5f0f\uff0c\u5373\u8fde\u7eed\u6027\u65b9\u7a0b (Continuity Equation) \uff1a</p> \\[\\frac{\\partial \\rho}{\\partial t} + \\nabla \\cdot (\\rho \\vec{v}) = 0\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u662f\u6d41\u4f53\u52a8\u529b\u5b66\u7684\u7b2c\u4e00\u4e2a\u57fa\u672c\u65b9\u7a0b\u3002\u5b83\u5b8c\u7f8e\u5730\u4f53\u73b0\u4e86\u6a21\u578b B \u7684\u5b88\u6052\u5f8b\u7ed3\u6784\uff0c\u5e76\u4e3a\u6211\u4eec\u63a5\u4e0b\u6765\u63a8\u5bfc\u5176\u4ed6\u65b9\u7a0b\u5960\u5b9a\u4e86\u57fa\u7840\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#4-euler-equation","title":"4. \u7b2c\u4e8c\u652f\u67f1\uff1a\u52a8\u91cf\u5b88\u6052\u4e0e\u6b27\u62c9\u65b9\u7a0b (Euler Equation)","text":"<p>\u5728\u5efa\u7acb\u4e86\u8d28\u91cf\u5b88\u6052\u4e4b\u540e\uff0c\u6211\u4eec\u8f6c\u5411\u4e0b\u4e00\u4e2a\u5b88\u6052\u91cf\u2014\u2014\u52a8\u91cf\u3002\u5bf9\u52a8\u91cf\u5b88\u6052\u7684\u63cf\u8ff0\u5c06\u4e3a\u6211\u4eec\u63ed\u793a\u6d41\u4f53\u5982\u4f55\u8fd0\u52a8\u7684\u52a8\u529b\u5b66\u89c4\u5f8b\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6ca1\u6709\u7c98\u6027\uff08\u5373\u65e0\u6469\u64e6\uff09\u7684\u7406\u60f3\u6d41\u4f53\uff0c\u8fd9\u4e2a\u89c4\u5f8b\u7531\u8457\u540d\u7684\u6b27\u62c9\u65b9\u7a0b (Euler Equation) \u7ed9\u51fa \u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#41","title":"4.1 \u7269\u8d28\u5bfc\u6570\uff1a\u8fde\u63a5\u201c\u8ddf\u968f\u8005\u201d\u4e0e\u201c\u89c2\u5bdf\u8005\u201d\u7684\u89c6\u89d2","text":"<p>\u63a8\u5bfc\u52a8\u529b\u5b66\u65b9\u7a0b\u65f6\uff0c\u6211\u4eec\u9762\u4e34\u4e00\u4e2a\u6838\u5fc3\u7684\u89c6\u89d2\u95ee\u9898\uff1a\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b\uff08\\(\\vec{F}=m\\vec{a}\\)\uff09\u662f\u5e94\u7528\u4e8e\u4e00\u4e2a\u5177\u4f53\u7684\u7269\u4f53\uff08\u5373\u4e00\u4e2a\u7279\u5b9a\u7684\u201c\u6d41\u4f53\u5143\u201d\uff09\u7684\uff0c\u63cf\u8ff0\u7684\u662f\u8fd9\u4e2a\u7269\u4f53\u81ea\u8eab\u7ecf\u5386\u7684\u52a0\u901f\u5ea6\u3002\u8fd9\u662f\u4e00\u79cd\u201c\u968f\u6ce2\u9010\u6d41\u201d\u7684\u62c9\u683c\u6717\u65e5\u89c6\u89d2 (Lagrangian View) \u3002\u7136\u800c\uff0c\u6211\u4eec\u5efa\u7acb\u7684\u573a\u8bba\u662f\u5728\u5b9e\u9a8c\u5ba4\u56fa\u5b9a\u7684\u5750\u6807\u7cfb\u4e2d\u63cf\u8ff0\u7269\u7406\u573a\u5982\u4f55\u6f14\u5316\u7684\uff0c\u8fd9\u662f\u4e00\u79cd\u201c\u9759\u89c2\u5176\u53d8\u201d\u7684\u6b27\u62c9\u89c6\u89d2 (Eulerian View) \u3002</p> <p>\u4e3a\u4e86\u5728\u8fd9\u4e24\u79cd\u89c6\u89d2\u95f4\u5efa\u7acb\u6865\u6881\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u5b66\u5de5\u5177\uff0c\u5b83\u80fd\u56de\u7b54\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u201c\u4e00\u4e2a\u8ddf\u968f\u7740\u6d41\u4f53\u8fd0\u52a8\u7684\u7c92\u5b50\uff0c\u5b83\u6240\u611f\u53d7\u5230\u7684\u67d0\u4e2a\u7269\u7406\u91cf \\(f\\) \u7684\u603b\u53d8\u5316\u7387\u662f\u591a\u5c11\uff1f\u201d \u8fd9\u4e2a\u5de5\u5177\u5c31\u662f\u7269\u8d28\u5bfc\u6570 (Material Derivative) \uff0c\u8bb0\u4f5c \\(\\frac{D f}{D t}\\) \u3002</p> <p>\u4e00\u4e2a\u8ddf\u968f\u6d41\u4f53\u8fd0\u52a8\u7684\u7c92\u5b50\uff0c\u5176\u611f\u53d7\u5230\u7684\u7269\u7406\u91cf \\(f(\\vec{x}, t)\\) \u7684\u53d8\u5316\u6765\u81ea\u4e24\u90e8\u5206\uff1a</p> <ol> <li> <p>\u5c40\u57df\u53d8\u5316: \u5373\u4f7f\u7c92\u5b50\u4e0d\u52a8\uff0c\u5176\u6240\u5728\u4f4d\u7f6e \\(\\vec{x}\\) \u7684 \\(f\\) \u503c\u4e5f\u53ef\u80fd\u968f\u65f6\u95f4\u53d8\u5316\uff0c\u8fd9\u7531\u504f\u5bfc\u6570 \\(\\frac{\\partial f}{\\partial t}\\) \u63cf\u8ff0 \u3002</p> </li> <li> <p>\u5bf9\u6d41\u53d8\u5316 : \u7c92\u5b50\u88ab\u901f\u5ea6\u573a \\(\\vec{v}\\) \u201c\u643a\u5e26\u201d\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u4f4d\u7f6e\uff0c\u800c\u65b0\u4f4d\u7f6e\u7684 \\(f\\) \u503c\u4e0e\u539f\u4f4d\u7f6e\u4e0d\u540c\uff0c\u8fd9\u79cd\u7531\u4f4d\u7f6e\u79fb\u52a8\u5f15\u8d77\u7684\u53d8\u5316\u88ab\u79f0\u4e3a\u5bf9\u6d41 (convection) \uff0c\u7531 \\((\\vec{v} \\cdot \\nabla)f\\) \u63cf\u8ff0\u3002</p> </li> </ol> <p>\u4e24\u8005\u76f8\u52a0\uff0c\u4fbf\u5f97\u5230\u4e86\u7269\u8d28\u5bfc\u6570\u7684\u5b8c\u6574\u8868\u8fbe\u5f0f\uff1a</p> \\[\\frac{D f}{D t} = \\frac{\\partial f}{\\partial t} + (\\vec{v} \\cdot \\vec{\\nabla})f\\] <p>\u8fd9\u4e2a\u5bfc\u6570\u5b8c\u7f8e\u5730\u5c06\u6b27\u62c9\u89c6\u89d2\u4e0b\u7684\u573a\u53d8\u5316\uff08\\(\\frac{\\partial f}{\\partial t}\\)\uff09\u548c\u62c9\u683c\u6717\u65e5\u89c6\u89d2\u4e0b\u7684\u7c92\u5b50\u8fd0\u52a8\uff08\\(\\vec{v}\\)\uff09\u7ed3\u5408\u5728\u4e86\u4e00\u8d77\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#42","title":"4.2 \u6b27\u62c9\u65b9\u7a0b\uff1a\u6d41\u4f53\u5143\u7684\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b","text":"<p>\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c06\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b \\(\\vec{F} = m \\vec{a}\\) \u5e94\u7528\u4e8e\u4e00\u4e2a\u4f53\u79ef\u4e3a \\(dV\\) \u7684\u6d41\u4f53\u5143\uff1a</p> <ul> <li>\u8d28\u91cf \\(m\\)\uff1a\\(m = \\rho dV\\)\u3002</li> <li>\u52a0\u901f\u5ea6 \\(\\vec{a}\\)\uff1a\u6d41\u4f53\u5143\u7684\u52a0\u901f\u5ea6\u662f\u5176\u901f\u5ea6\u8ddf\u968f\u6d41\u4f53\u8fd0\u52a8\u65f6\u7684\u53d8\u5316\u7387\uff0c\u56e0\u6b64\u5fc5\u987b\u4f7f\u7528\u7269\u8d28\u5bfc\u6570\uff1a\\(\\vec{a} = \\frac{D\\vec{v}}{Dt}\\)\u3002</li> <li>\u529b \\(\\vec{F}\\)\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u65e0\u6469\u64e6\u7684\u7406\u60f3\u6d41\u4f53\uff0c\u4f5c\u7528\u5728\u6d41\u4f53\u5143\u4e0a\u7684\u552f\u4e00\u7684\u529b\u6765\u81ea\u4e8e\u5468\u56f4\u6d41\u4f53\u5bf9\u5b83\u7684\u538b\u5f3a (pressure)\u3002\u4e00\u4e2a\u6d41\u4f53\u5143\u53d7\u5230\u7684\u51c0\u538b\u529b\u6765\u81ea\u4e8e\u5176\u8868\u9762\u4e24\u4fa7\u7684\u538b\u5f3a\u5dee\uff0c\u8fd9\u4e2a\u51c0\u529b\u7b49\u4e8e\u538b\u5f3a\u7684\u8d1f\u68af\u5ea6\u4e58\u4ee5\u4f53\u79ef\uff1a\\(\\vec{F} = -(\\nabla P) dV\\) \u3002</li> </ul> <p>\u5c06\u4ee5\u4e0a\u4e09\u9879\u4ee3\u5165\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b\uff1a</p> \\[(\\rho dV) \\frac{D\\vec{v}}{Dt} = -(\\nabla P) dV\\] <p>\u6d88\u53bb \\(dV\\) \u5e76\u5c55\u5f00\u7269\u8d28\u5bfc\u6570\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6b27\u62c9\u65b9\u7a0b (Euler Equation) \u7684\u6700\u7ec8\u5f62\u5f0f\uff1a</p> \\[\\rho \\left( \\frac{\\partial \\vec{v}}{\\partial t} + (\\vec{v} \\cdot \\nabla) \\vec{v} \\right) = -\\nabla P\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u63cf\u8ff0\u4e86\u65e0\u7c98\u6027\u6d41\u4f53\u7684\u901f\u5ea6\u573a\u5982\u4f55\u56e0\u538b\u5f3a\u68af\u5ea6\u800c\u968f\u65f6\u95f4\u548c\u7a7a\u95f4\u6f14\u5316\u3002\u5176\u4e2d\uff0c\u975e\u7ebf\u6027\u5bf9\u6d41\u9879 (nonlinear convective term) \\((\\vec{v} \\cdot \\nabla) \\vec{v}\\) \u662f\u6d41\u4f53\u529b\u5b66\u4e30\u5bcc\u6027\u548c\u590d\u6742\u6027\u7684\u6838\u5fc3\u6765\u6e90\u3002\u6b63\u662f\u8fd9\u4e2a\u901f\u5ea6\u573a\u4e0e\u81ea\u8eab\u68af\u5ea6\u76f8\u4e58\u7684\u9879\uff0c\u4e3b\u5bfc\u4e86\u52a8\u91cf\u5728\u6d41\u4f53\u4e2d\u7684\u81ea\u8eab\u8f93\u8fd0\uff0c\u5e76\u6700\u7ec8\u5bfc\u81f4\u4e86\u8bf8\u5982\u6e4d\u6d41\u3001\u6da1\u65cb\u7b49\u590d\u6742\u7684\u6d41\u4f53\u73b0\u8c61\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#43","title":"4.3 \u52a8\u91cf\u901a\u91cf\u5f20\u91cf\uff1a\u5b88\u6052\u5b9a\u5f8b\u7684\u7edf\u4e00\u89c6\u89d2","text":"<p>\u4e3a\u4e86\u4e0e\u8d28\u91cf\u5b88\u6052\u7684\u5f62\u5f0f\u4fdd\u6301\u4e00\u81f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fde\u7eed\u6027\u65b9\u7a0b\uff0c\u5c06\u6b27\u62c9\u65b9\u7a0b\u4e25\u683c\u5730\u6539\u5199\u6210\u52a8\u91cf\u5b88\u6052\u7684\u201c\u5bc6\u5ea6-\u6d41\u201d\u5f62\u5f0f\uff1a</p> \\[\\frac{\\partial (\\rho v_i)}{\\partial t} = -\\sum_k \\frac{\\partial \\Pi_{ik}}{\\partial x_k}\\] <p>\u8fd9\u91cc\u7684\u201c\u5bc6\u5ea6\u201d\u662f\u52a8\u91cf\u7684\u7b2c \\(i\\) \u4e2a\u5206\u91cf \\(\\rho v_i\\)\uff0c\u800c\u201c\u6d41\u201d\u5219\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u5bf9\u8c61\u2014\u2014\u52a8\u91cf\u901a\u91cf\u5f20\u91cf (momentum flux tensor) \\(\\Pi_{ik}\\) \u3002\u5bf9\u4e8e\u65e0\u6469\u64e6\u6d41\u4f53\uff0c\u5176\u5b9a\u4e49\u4e3a\uff1a</p> \\[\\Pi_{ik} = P \\delta_{ik} + \\rho v_i v_k\\] <p>\u8fd9\u4e2a\u4e8c\u9636\u5f20\u91cf \\(\\Pi_{ik}\\) \u7684\u7269\u7406\u610f\u4e49\u662f\uff1a\u52a8\u91cf\u7684\u7b2c \\(i\\) \u4e2a\u5206\u91cf\uff0c\u901a\u8fc7\u4e00\u4e2a\u6cd5\u5411\u6307\u5411\u7b2c \\(k\\) \u4e2a\u65b9\u5411\u7684\u5355\u4f4d\u9762\u79ef\uff0c\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u8f93\u8fd0\u91cf \u3002\u5b83\u7531\u4e24\u90e8\u5206\u622a\u7136\u4e0d\u540c\u7684\u7269\u7406\u8fc7\u7a0b\u8d21\u732e\uff1a</p> <ol> <li> <p>\u9759\u6c34\u538b\u5f3a\u9879 (Hydrostatic pressure term) \\(P \\delta_{ik}\\)\uff1a\u8fd9\u4ee3\u8868\u4e86\u7531\u4e8e\u5206\u5b50\u65e0\u89c4\u5219\u70ed\u8fd0\u52a8\u800c\u4ea7\u751f\u7684\u52a8\u91cf\u4ea4\u6362\uff0c\u8868\u73b0\u4e3a\u5b8f\u89c2\u7684\u5404\u5411\u540c\u6027\u538b\u5f3a\u3002\u514b\u7f57\u5185\u514b\u7b26\u53f7 (Kronecker delta) \\(\\delta_{ik}\\) \u786e\u4fdd\u4e86\u5b83\u53ea\u8d21\u732e\u6cd5\u5411\u5e94\u529b\u3002</p> </li> <li> <p>\u5bf9\u6d41\u8f93\u8fd0\u9879 (Convective transport term) \\(\\rho v_i v_k\\)\uff1a\u8fd9\u4ee3\u8868\u4e86\u7531\u4e8e\u6d41\u4f53\u5b8f\u89c2\u7684\u6574\u4f53\u8fd0\u52a8\u800c\u643a\u5e26\u7684\u52a8\u91cf\u8f93\u8fd0\u3002\u5b83\u662f\u52a8\u91cf\u7684\u7b2c \\(i\\) \u5206\u91cf\u88ab\u901f\u5ea6\u7684\u7b2c \\(k\\) \u5206\u91cf\u201c\u643a\u5e26\u201d\u901a\u8fc7\u5e73\u9762\u7684\u7ed3\u679c\u3002\u8fd9\u662f\u4e00\u4e2a\u5404\u5411\u5f02\u6027\u7684\u8d21\u732e\uff0c\u5176\u5927\u5c0f\u548c\u65b9\u5411\u4f9d\u8d56\u4e8e\u6d41\u52a8\u7684\u65b9\u5411\u3002\u8fd9\u4e2a\u9879\u4e5f\u88ab\u79f0\u4e3a\u4e8c\u5408\u79ef (dyadic product) \u3002</p> </li> </ol> <p>\u901a\u8fc7\u5f15\u5165\u52a8\u91cf\u901a\u91cf\u5f20\u91cf\uff0c\u6211\u4eec\u6210\u529f\u5730\u5c06\u590d\u6742\u7684\u6b27\u62c9\u65b9\u7a0b\uff0c\u4e5f\u7edf\u4e00\u5230\u4e86  \\(\\frac{\\partial (\\text{\u5bc6\u5ea6})}{\\partial t} + \\nabla \\cdot (\\text{\u6d41}) = 0\\) \u8fd9\u4e00\u666e\u9002\u7684\u5b88\u6052\u5f8b\u6846\u67b6\u4e4b\u4e0b\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#44-python","title":"4.4 \u53ef\u89c6\u5316\u6a21\u62df\uff1aPython \u5b9e\u73b0\u6807\u91cf\u573a\u7684\u5bf9\u6d41","text":"<p>\u6211\u4eec\u63a8\u5bfc\u4e86\u6b27\u62c9\u65b9\u7a0b\uff0c\u5e76\u9047\u5230\u4e86\u6838\u5fc3\u7684\u975e\u7ebf\u6027\u5bf9\u6d41\u9879 (nonlinear convective term) \\((\\vec{v} \\cdot \\nabla) \\vec{v}\\)\u3002\u4e3a\u4e86\u76f4\u89c2\u5730\u7406\u89e3\u8fd9\u4e2a\u62bd\u8c61\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u2014\u2014\u4e00\u4e2a\u77e2\u91cf\u573a\u5982\u4f55\u201c\u8f93\u8fd0\u201d\u5b83\u81ea\u8eab\u2014\u2014\u6211\u4eec\u53ef\u4ee5\u5148\u901a\u8fc7\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u5efa\u7acb\u7269\u7406\u56fe\u50cf\uff1a\u4e00\u4e2a\u7ed9\u5b9a\u7684\u901f\u5ea6\u573a \\(\\vec{v}\\) \u662f\u5982\u4f55\u8f93\u8fd0\u4e00\u4e2a\u6807\u91cf\u573a \\(c\\)\uff08\u4f8b\u5982\u4e00\u6ef4\u67d3\u6599\u7684\u6d53\u5ea6\uff09\u7684\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u7531\u7eaf\u5bf9\u6d41\u65b9\u7a0b\u63cf\u8ff0\uff1a</p> \\[\\frac{\\partial c}{\\partial t} = -(\\vec{v} \\cdot \\nabla) c\\] <p>\u4e0b\u9762\u7684 Python \u6a21\u62df\u5c06\u7cbe\u786e\u5730\u5c55\u793a\u8fd9\u4e00\u8fc7\u7a0b\u3002\u6211\u4eec\u5c06\u521d\u59cb\u5316\u4e00\u56e2\u9ad8\u65af\u5206\u5e03\u7684\u201c\u67d3\u6599\u201d\uff0c\u5e76\u5c06\u5b83\u7f6e\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684\u65cb\u8f6c\u6da1\u65cb\u901f\u5ea6\u573a\u4e2d\uff0c\u89c2\u5bdf\u5b83\u662f\u5982\u4f55\u88ab\u201c\u5377\u52a8\u201d\u548c\u8f93\u8fd0\u7684\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n\n# --- 1. Set simulation parameters ---\ngrid_size = 100  # Grid size\nL = 10.0         # Spatial size (-L/2 to L/2)\ndt = 0.01        # Time step\nn_steps = 300    # Total steps\nomega = 1.0      # Vortex angular velocity\n\n# --- 2. Create grid and field ---\nx = np.linspace(-L/2, L/2, grid_size)\ny = np.linspace(-L/2, L/2, grid_size)\nX, Y = np.meshgrid(x, y)\n\n# Initial scalar field: a Gaussian \"dye drop\"\nc = np.exp(-((X - L/4)**2 + Y**2) / (0.5**2))\n\n# Velocity field: a vortex rotating around the origin\nvx = -omega * Y\nvy = omega * X\n\n# --- 3. Set up plot ---\nfig, ax = plt.subplots(figsize=(7, 6))\n\n# Plot scalar field c\nim = ax.imshow(c, extent=[-L/2, L/2, -L/2, L/2], origin='lower',\n               cmap='viridis', vmin=0, vmax=1)\nfig.colorbar(im, label='Concentration')\n\n# Plot velocity field v (plot every 10 points to keep it clear)\nskip = 10\nax.quiver(X[::skip, ::skip], Y[::skip, ::skip],\n          vx[::skip, ::skip], vy[::skip, ::skip],\n          color='white', scale=30)\n\nax.set_title(\"Advection of a Scalar Field (t=0.00)\")\nax.set_xlabel(\"x\")\nax.set_ylabel(\"y\")\nax.set_aspect('equal')\n\n# --- 4. Define animation update function ---\ndef animate(frame):\n    global c\n    # Calculate gradient of scalar field\n    # np.gradient returns dy, dx order [10, 11]\n    grad_c_y, grad_c_x = np.gradient(c, y, x)\n\n    # Calculate advection term v dot grad(c)\n    advection_term = vx * grad_c_x + vy * grad_c_y\n\n    # Update scalar field using forward Euler method\n    c = c - advection_term * dt\n\n    # Update image data\n    im.set_array(c)\n    ax.set_title(f\"Advection of a Scalar Field (t={frame*dt:.2f})\")\n    return [im]\n\n# --- 5. Create and run animation ---\nani = FuncAnimation(fig, animate, frames=n_steps,\n                    interval=30, blit=True)\n\n# --- 6. Save animation as GIF file ---\n# Note: This requires ImageMagick or ffmpeg\n# If not installed, you can install with:\n# Windows: conda install -c conda-forge imagemagick\n# macOS: brew install imagemagick\n# Linux: sudo apt-get install imagemagick\nani.save('advection.gif', writer='pillow', dpi=80, fps=20)\n\nplt.show()\n</code></pre> <p></p> <ul> <li>\u8f93\u8fd0 (Transport) \uff1a\u6574\u5757\u201c\u67d3\u6599\u201d\u88ab\u65cb\u8f6c\u7684\u901f\u5ea6\u573a\u5e26\u7740\u505a\u5706\u5468\u8fd0\u52a8\uff0c\u5176\u6574\u4f53\u4f4d\u7f6e\u53d1\u751f\u4e86\u6539\u53d8\u3002</li> <li>\u53d8\u5f62 (Deformation) \uff1a\u66f4\u91cd\u8981\u7684\u662f\uff0c\u7531\u4e8e\u901f\u5ea6\u573a\u4e0d\u662f\u5747\u5300\u7684\uff08\u8d8a\u9760\u8fd1\u4e2d\u5fc3\u7684\u70b9\u901f\u5ea6\u8d8a\u5c0f\uff0c\u8d8a\u5916\u4fa7\u7684\u70b9\u901f\u5ea6\u8d8a\u5927\uff09\uff0c\u201c\u67d3\u6599\u6ef4\u201d\u5e76\u4e0d\u4ec5\u4ec5\u662f\u5e73\u79fb\uff0c\u5b83\u5728\u8fd0\u52a8\u8fc7\u7a0b\u4e2d\u88ab\u4e0d\u65ad\u5730\u62c9\u4f38\u548c\u626d\u66f2\u3002</li> </ul> <p>\u8be0\u91ca\u4e86 \\((\\vec{v} \\cdot \\nabla)f\\) \u7684\u542b\u4e49\uff1a\u5b83\u63cf\u8ff0\u7684\u6b63\u662f\u7269\u7406\u91cf \\(f\\) \u5982\u4f55\u88ab\u6d41\u573a \\(\\vec{v}\\) \u201c\u643a\u5e26\u201d\u7740\u5728\u7a7a\u95f4\u4e2d\u79fb\u52a8\u548c\u91cd\u65b0\u5206\u5e03\u3002\u5728\u6b27\u62c9\u65b9\u7a0b\u4e2d\uff0c\u88ab\u643a\u5e26\u7684\u7269\u7406\u91cf\u6b63\u662f\u901f\u5ea6\u573a \\(\\vec{v}\\) \u81ea\u8eab\uff0c\u8fd9\u4fbf\u662f\u52a8\u91cf\u88ab\u6d41\u4f53\u81ea\u8eab\u8f93\u8fd0\u7684\u7269\u7406\u56fe\u50cf\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#5","title":"5. \u7b2c\u4e09\u652f\u67f1\uff1a\u80fd\u91cf\u5b88\u6052\u4e0e\u7b49\u71b5\u6d41","text":"<p>\u5728\u786e\u7acb\u4e86\u8d28\u91cf\u548c\u52a8\u91cf\u5b88\u6052\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u63a8\u5bfc\u6700\u540e\u4e00\u4e2a\u3001\u4e5f\u662f\u6700\u6df1\u523b\u7684\u5b88\u6052\u5b9a\u5f8b\u2014\u2014\u80fd\u91cf\u5b88\u6052 (Energy Conservation) \u3002\u6b63\u5982\u6559\u6388\u6240\u8a00\uff0c\u8fd9\u4e2a\u63a8\u5bfc\u4e0d\u90a3\u4e48\u76f4\u89c2\uff0c\u56e0\u4e3a\u5b83\u8981\u6c42\u6211\u4eec\u5c06\u4e4b\u524d\u63a8\u5bfc\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u4e0e\u70ed\u529b\u5b66\u7d27\u5bc6\u7ed3\u5408\u8d77\u6765\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6700\u7ec8\u5c06\u63ed\u793a\u65e0\u6469\u64e6\u6d41\u4f53\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u70ed\u529b\u5b66\u7279\u6027\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#51","title":"5.1 \u6d41\u4f53\u7684\u603b\u80fd\u91cf\u5bc6\u5ea6","text":"<p>\u4e00\u4e2a\u6d41\u4f53\u5143\u7684\u603b\u80fd\u91cf\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a\u7531\u5b8f\u89c2\u6574\u4f53\u8fd0\u52a8\u8d21\u732e\u7684\u52a8\u80fd (kinetic energy) \uff0c\u548c\u7531\u5fae\u89c2\u5206\u5b50\u65e0\u89c4\u5219\u8fd0\u52a8\u8d21\u732e\u7684\u5185\u80fd (internal energy) \u3002\u56e0\u6b64\uff0c\u5355\u4f4d\u4f53\u79ef\u7684\u603b\u80fd\u91cf\u5bc6\u5ea6\u4e3a\uff1a</p> \\[e_{\\text{total}} = \\frac{1}{2} \\rho v^2 + \\rho \\epsilon\\] <p>\u5176\u4e2d \\(\\epsilon\\) \u662f\u5355\u4f4d\u8d28\u91cf\u7684\u5185\u80fd \u3002\u6211\u4eec\u7684\u76ee\u6807\uff0c\u4f9d\u7136\u662f\u4e3a\u8fd9\u4e2a\u5b88\u6052\u7684\u80fd\u91cf\u5bc6\u5ea6\u627e\u5230\u5176\u5bf9\u5e94\u7684\u80fd\u91cf\u6d41 (energy current) \\(\\vec{J}^{(\\epsilon)}\\)\uff0c\u4f7f\u5176\u6ee1\u8db3\u5b88\u6052\u5f8b\u7684\u4e00\u822c\u5f62\u5f0f\uff1a\\(\\frac{\\partial e_{\\text{total}}}{\\partial t} = -\\nabla \\cdot \\vec{J}^{(\\epsilon)}\\)\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#52","title":"5.2 \u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\u7684\u63a8\u5bfc","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u8f83\u4e3a\u590d\u6742\u7684\u63a8\u5bfc\uff0c\u6211\u4eec\u5c06\u8ddf\u968f\u8bfe\u5802\u7684\u601d\u8def\uff0c\u5c06\u603b\u80fd\u91cf\u5206\u4e3a\u52a8\u80fd\u548c\u5185\u80fd\u4e24\u90e8\u5206\uff0c\u5206\u522b\u8ba1\u7b97\u5b83\u4eec\u7684\u65f6\u95f4\u5bfc\u6570\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#1_1","title":"1. \u52a8\u80fd\u9879\u7684\u65f6\u95f4\u5bfc\u6570\uff1a","text":"<p>\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u52a8\u80fd\u5bc6\u5ea6 \\(\\frac{1}{2} \\rho v^2\\) \u7684\u65f6\u95f4\u5bfc\u6570\u3002\u5229\u7528\u4e58\u6cd5\u6cd5\u5219\uff0c\u5e76\u4ee3\u5165\u6211\u4eec\u5df2\u7ecf\u63a8\u5bfc\u51fa\u7684\u8fde\u7eed\u6027\u65b9\u7a0b\uff08\u7528\u4e8e \\(\\partial_t \\rho\\)\uff09\u548c\u6b27\u62c9\u65b9\u7a0b\uff08\u7528\u4e8e \\(\\partial_t \\vec{v}\\)\uff09\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u4ee3\u6570\u8fd0\u7b97\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[\\frac{\\partial}{\\partial t} \\left( \\frac{1}{2} \\rho v^2 \\right) = -\\nabla \\cdot \\left( \\rho \\vec{v} \\frac{1}{2} v^2 \\right) - \\vec{v} \\cdot \\nabla P\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7269\u7406\u542b\u4e49\u662f\uff1a\u52a8\u80fd\u5bc6\u5ea6\u7684\u5c40\u57df\u53d8\u5316\uff0c\u4e00\u90e8\u5206\u6765\u81ea\u4e8e\u52a8\u80fd\u7684\u5bf9\u6d41\uff08\u7b2c\u4e00\u9879\uff0c\u4e00\u4e2a\u5b8c\u7f8e\u7684\u901a\u91cf\u6563\u5ea6\u5f62\u5f0f\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u5219\u6765\u81ea\u4e8e\u538b\u5f3a\u68af\u5ea6\u5bf9\u6d41\u4f53\u505a\u529f\uff08\u7b2c\u4e8c\u9879\uff09\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#2_1","title":"2. \u5f15\u5165\u70ed\u529b\u5b66\u5173\u7cfb\uff1a","text":"<p>\u4e3a\u4e86\u5904\u7406\u5185\u80fd\u9879\u548c\u538b\u5f3a\u9879\uff0c\u6211\u4eec\u9700\u8981\u5f15\u5165\u70ed\u529b\u5b66\u7684\u57fa\u672c\u5173\u7cfb\u3002\u6839\u636e\u5c40\u57df\u5e73\u8861\u5047\u8bbe\uff0c\u6bcf\u4e2a\u6d41\u4f53\u5143\u90fd\u6ee1\u8db3\u5409\u5e03\u65af\u5173\u7cfb\u3002\u5bf9\u4e8e\u5355\u4f4d\u8d28\u91cf\u7684\u5185\u80fd \\(\\epsilon\\)\uff0c\u5176\u53d8\u5316\u91cf\u4e3a\uff1a</p> \\[d\\epsilon = T ds - P dv_s = Tds + \\frac{P}{\\rho^2}d\\rho\\] <p>\u5176\u4e2d \\(s\\) \u662f\u5355\u4f4d\u8d28\u91cf\u7684\u71b5\uff0c\\(v_s = 1/\\rho\\) \u662f\u6bd4\u5bb9 (specific volume) \u3002</p> <p>\u5728\u6d41\u4f53\u52a8\u529b\u5b66\u4e2d\uff0c\u5904\u7406\u538b\u5f3a\u65f6\uff0c\u5f15\u5165\u7113 (Enthalpy) \u901a\u5e38\u66f4\u4e3a\u65b9\u4fbf\u3002\u5355\u4f4d\u8d28\u91cf\u7684\u7113\uff08\u6bd4\u7113\uff09\\(h\\) \u5b9a\u4e49\u4e3a\uff1a</p> \\[h = \\epsilon + \\frac{P}{\\rho}\\] <p>\u5b83\u7684\u5168\u5fae\u5206\u4e3a \\(dh = Tds + \\frac{1}{\\rho}dP\\)\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#3","title":"3. \u7ec4\u5408\u4e0e\u5316\u7b80\uff1a","text":"<p>\u5229\u7528\u4e0a\u8ff0\u70ed\u529b\u5b66\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u5185\u80fd\u9879\u7684\u65f6\u95f4\u5bfc\u6570 \\(\\partial_t(\\rho\\epsilon)\\) \uff0c\u5e76\u5c06\u52a8\u80fd\u65b9\u7a0b\u4e2d\u7684\u538b\u5f3a\u68af\u5ea6\u9879 \\(\\nabla P\\) \u66ff\u6362\u4e3a\u4e0e\u7113\u548c\u71b5\u76f8\u5173\u7684\u9879\u3002\u8fd9\u662f\u4e00\u4e2a\u7e41\u7410\u4f46\u903b\u8f91\u76f4\u63a5\u7684\u4ee3\u6570\u8fc7\u7a0b\u3002\u5c06\u52a8\u80fd\u548c\u5185\u80fd\u4e24\u90e8\u5206\u7684\u6f14\u5316\u65b9\u7a0b\u76f8\u52a0\uff0c\u6700\u7ec8\u53ef\u4ee5\u5f97\u5230\u603b\u80fd\u91cf\u5bc6\u5ea6\u7684\u5b88\u6052\u65b9\u7a0b\uff1a</p> \\[\\frac{\\partial}{\\partial t} \\left( \\frac{1}{2} \\rho v^2 + \\rho \\epsilon \\right) = -\\nabla \\cdot \\left[ \\rho \\vec{v} \\left( \\frac{1}{2} v^2 + h \\right) \\right] + \\rho T \\left( \\frac{\\partial s}{\\partial t} + (\\vec{v} \\cdot \\nabla) s \\right)\\]"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#53","title":"5.3 \u7b49\u71b5\u6761\u4ef6\uff1a\u65e0\u6469\u64e6\u7684\u5fc5\u7136\u7ed3\u679c","text":"<p>\u89c2\u5bdf\u4e0a\u5f0f\u7684\u6700\u7ec8\u5f62\u5f0f\uff0c\u5b83\u51e0\u4e4e\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u5b88\u6052\u65b9\u7a0b\uff0c\u9664\u4e86\u6700\u540e\u4e00\u9879\u3002\u5de6\u8fb9\u662f\u80fd\u91cf\u5bc6\u5ea6\u7684\u65f6\u95f4\u5bfc\u6570\uff0c\u53f3\u8fb9\u7b2c\u4e00\u9879\u662f\u4e00\u4e2a\u901a\u91cf\u7684\u6563\u5ea6\u3002\u4e3a\u4e86\u8ba9\u80fd\u91cf\u771f\u6b63\u5b88\u6052\uff0c\u65b9\u7a0b\u53f3\u4fa7\u7684\u6e90/\u6c47\u9879\u5fc5\u987b\u4e3a\u96f6\u3002\u8fd9\u610f\u5473\u7740\uff1a</p> \\[\\rho T \\left( \\frac{\\partial s}{\\partial t} + (\\vec{v} \\cdot \\vec{\\nabla}) s \\right) = \\rho T \\frac{Ds}{Dt} = 0\\] <p>\u7531\u4e8e \\(\\rho\\) \u548c \\(T\\) \u901a\u5e38\u4e0d\u4e3a\u96f6\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u7269\u7406\u7ed3\u8bba\uff1a</p> \\[\\frac{Ds}{Dt} = 0\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u542b\u4e49\u662f\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u65e0\u6469\u64e6\u3001\u65e0\u70ed\u4f20\u5bfc\u7684\u7406\u60f3\u6d41\u4f53\uff0c\u6bcf\u4e00\u4e2a\u6d41\u4f53\u5143\u5728\u8ddf\u968f\u6d41\u4f53\u8fd0\u52a8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5176\u71b5\u4fdd\u6301\u4e0d\u53d8\u3002\u8fd9\u79cd\u6d41\u52a8\u88ab\u79f0\u4e3a\u7b49\u71b5\u6d41 (Isentropic Flow) \u3002\u8fd9\u6b63\u662f\u6211\u4eec\u6700\u521d\u201c\u65e0\u6469\u64e6\u3001\u65e0\u8017\u6563\u201d\u5047\u8bbe\u5728\u70ed\u529b\u5b66\u4e0a\u7684\u5fc5\u7136\u7ed3\u679c\uff1a\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u5185\u90e8\u6469\u64e6\u4ea7\u751f\u4e0d\u53ef\u9006\u7684\u70ed\u91cf\uff0c\u6d41\u4f53\u5143\u7684\u6f14\u5316\u662f\u53ef\u9006\u7684\uff0c\u56e0\u6b64\u5176\u71b5\u4e0d\u589e\u52a0\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#54","title":"5.4 \u80fd\u91cf\u6d41\u7684\u7269\u7406\u610f\u4e49","text":"<p>\u5728\u7b49\u71b5\u6761\u4ef6\u4e0b\uff0c\u6e90\u9879\u4e3a\u96f6\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u6e05\u6670\u5730\u8bc6\u522b\u51fa\u80fd\u91cf\u6d41 (energy current) \u7684\u8868\u8fbe\u5f0f\uff1a</p> \\[\\vec{J}^{(\\epsilon)} = \\rho \\vec{v} \\left( \\frac{1}{2} v^2 + h \\right)\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7269\u7406\u542b\u4e49\u975e\u5e38\u4e30\u5bcc\u3002\u5b83\u8868\u660e\u80fd\u91cf\u662f\u901a\u8fc7\u5bf9\u6d41\u65b9\u5f0f\u8f93\u8fd0\u7684\uff0c\u8f93\u8fd0\u7684\u8f7d\u4f53\u662f\u8d28\u91cf\u6d41 \\(\\rho\\vec{v}\\)\uff0c\u800c\u88ab\u8f93\u8fd0\u7684\u91cf\u662f\u5355\u4f4d\u8d28\u91cf\u7684\u603b\u80fd\u91cf \\(\\left( \\frac{1}{2} v^2 + h \\right)\\)\u3002</p> <p>\u8fd9\u91cc\u6700\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u88ab\u8f93\u8fd0\u7684\u4e0d\u662f\u5185\u80fd \\(\\epsilon\\)\uff0c\u800c\u662f\u6bd4\u7113 \\(h\\) \u3002\u8fd9\u5e76\u975e\u5076\u7136\u7684\u6570\u5b66\u5de7\u5408\uff0c\u800c\u662f\u6709\u7740\u6df1\u523b\u7684\u7269\u7406\u539f\u56e0\u3002\u7113\u7684\u5b9a\u4e49\u662f \\(h = \\epsilon + P/\\rho\\)\u3002\u5176\u4e2d\uff0c\\(P/\\rho\\) \u8fd9\u4e00\u9879\uff08\u6216\u5bf9\u4e00\u4e2a\u5b8f\u89c2\u7cfb\u7edf\u800c\u8a00\u7684 \\(PV\\)\uff09\u4ee3\u8868\u4e86\u6d41\u52a8\u529f (flow work) \u3002\u5b83\u662f\u5728\u4e00\u4e2a\u6709\u538b\u5f3a\u7684\u73af\u5883\u4e2d\uff0c\u5c06\u4e00\u4e2a\u6d41\u4f53\u5143\u63a8\u5165\u76f8\u90bb\u533a\u57df\u6240\u5fc5\u987b\u505a\u7684\u529f\u3002\u56e0\u6b64\uff0c\u5f53\u6d41\u4f53\u6d41\u52a8\u65f6\uff0c\u5b83\u4e0d\u4ec5\u643a\u5e26\u4e86\u81ea\u8eab\u7684\u52a8\u80fd\u548c\u5185\u80fd\uff0c\u8fd8\u5fc5\u987b\u201c\u63a8\u5f00\u201d\u524d\u9762\u7684\u6d41\u4f53\u5e76\u88ab\u540e\u9762\u7684\u6d41\u4f53\u201c\u63a8\u52a8\u201d\uff0c\u8fd9\u90e8\u5206\u80fd\u91cf\u4ea4\u6362\u6b63\u597d\u7531 \\(P/\\rho\\) \u6765\u8861\u91cf\u3002\u7113\u4f5c\u4e3a\u4e00\u4e2a\u70ed\u529b\u5b66\u52bf\uff0c\u6070\u597d\u5c06\u5185\u80fd\u548c\u6d41\u52a8\u529f\u8fd9\u4e24\u90e8\u5206\u80fd\u91cf\u6253\u5305\u5728\u4e86\u4e00\u8d77\u3002\u6240\u4ee5\uff0c\u80fd\u91cf\u6d41\u4e2d\u51fa\u73b0\u7684\u662f\u7113\uff0c\u800c\u4e0d\u662f\u5185\u80fd\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#55","title":"5.5 \u4ee3\u7801\u5b9e\u8df5\uff1a\u7528\u6b27\u62c9\u7f51\u683c\u6cd5\u6a21\u62df\u6d41\u4f53","text":"<p>\u6211\u4eec\u5c06\u91c7\u7528\u4e00\u79cd\u66f4\u76f4\u63a5\u7684\u5b8f\u89c2\u65b9\u6cd5\u2014\u2014\u57fa\u4e8e\u6b27\u62c9\u7f51\u683c (Eulerian Grid) \u7684\u6c42\u89e3\u5668\uff0c\u76f4\u63a5\u5bf9\u6d41\u4f53\u52a8\u529b\u5b66\u65b9\u7a0b\u8fdb\u884c\u6570\u503c\u6c42\u89e3\u3002\u6211\u4eec\u5c06\u8981\u5b9e\u73b0\u7684\u7b97\u6cd5\uff0c\u662f\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u9886\u57df\u975e\u5e38\u7ecf\u5178\u7684\u201c\u7a33\u5b9a\u6d41\u4f53\u201d (Stable Fluids) \u65b9\u6cd5\u3002</p> <p>\u8be5\u7b97\u6cd5\u7684\u6838\u5fc3\uff0c\u662f\u5c06\u6d41\u4f53\u7684\u6f14\u5316\u5206\u89e3\u4e3a\u51e0\u4e2a\u5728\u7269\u7406\u4e0a\u6e05\u6670\u7684\u6b65\u9aa4\uff0c\u5e76\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\u5185\u4f9d\u6b21\u6267\u884c\uff1a</p> <ol> <li> <p>\u5e73\u6d41 (Advection) \uff1a\u6b64\u6b65\u9aa4\u8d1f\u8d23\u79fb\u52a8\u6d41\u4f53\u81ea\u8eab\u7684\u7269\u7406\u5c5e\u6027\uff0c\u5982\u901f\u5ea6\u548c\u989c\u8272\uff08\u67d3\u6599\uff09\u3002\u5b83\u56de\u7b54\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1a\u201c\u4e0b\u4e00\u523b\uff0c\u5f53\u524d\u4f4d\u7f6e\u7684\u6d41\u4f53\u5c06\u79fb\u52a8\u5230\u54ea\u91cc\uff1f\u201d\u3002\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u9ad8\u6548\u7684\u534a\u62c9\u683c\u6717\u65e5\u6cd5 (Semi-Lagrangian method) \uff0c\u901a\u8fc7\u65f6\u95f4\u56de\u6eaf\u6765\u8ba1\u7b97\u5f53\u524d\u7f51\u683c\u70b9\u4e0a\u7684\u7269\u7406\u91cf\u5e94\u8be5\u4ece\u4e0a\u4e00\u65f6\u523b\u7684\u54ea\u4e2a\u4f4d\u7f6e\u201c\u7ee7\u627f\u201d\u800c\u6765\u3002</p> </li> <li> <p>\u65bd\u52a0\u5916\u529b (External Forces) \uff1a\u5728\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u5411\u6d41\u4f53\u4e2d\u52a0\u5165\u5404\u79cd\u529b\u6216\u6e90\u3002\u5728\u6211\u4eec\u7684\u6a21\u62df\u4e2d\uff0c\u8fd9\u4e3b\u8981\u4f53\u73b0\u4e3a\u4ece\u4e00\u4e2a\u6307\u5b9a\u533a\u57df\u6301\u7eed\u201c\u6ce8\u5165\u201d\u65b0\u7684\u67d3\u6599\u548c\u901f\u5ea6\u3002</p> </li> <li> <p>\u6295\u5f71 (Projection) \uff1a\u8fd9\u662f\u786e\u4fdd\u6d41\u4f53\u8fd0\u52a8\u771f\u5b9e\u81ea\u7136\u6700\u5173\u952e\u7684\u4e00\u6b65\u3002\u5b83\u7684\u552f\u4e00\u76ee\u6807\u662f\u4fdd\u8bc1\u6d41\u573a\u6ee1\u8db3\u4e0d\u53ef\u538b\u7f29\u6027 (incompressibility) \uff0c\u5373\u6d41\u4f53\u7684\u6563\u5ea6\u4e3a\u96f6 (\\(\\nabla \\cdot \\vec{v} = 0\\))\u3002\u8fd9\u4e00\u6b65\u672c\u8eab\u53c8\u5206\u4e3a\u4e09\u4e2a\u5b50\u4efb\u52a1\uff1a     a.  \u8ba1\u7b97\u5f53\u524d\u901f\u5ea6\u573a\u7684\u6563\u5ea6 (divergence) \uff0c\u627e\u5230\u90a3\u4e9b\u4e0d\u6ee1\u8db3\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6\u7684\u533a\u57df\u3002     b.  \u6c42\u89e3\u4e00\u4e2a\u538b\u529b\u6cca\u677e\u65b9\u7a0b (Pressure Poisson Equation) \uff0c\u5373 \\(\\nabla^2 p = \\nabla \\cdot \\vec{v}\\)\u3002\u89e3\u51fa\u7684\u538b\u529b\u573a \\(p\\) \u544a\u8bc9\u6211\u4eec\uff0c\u9700\u8981\u5728\u4f55\u5904\u65bd\u52a0\u538b\u529b\u6765\u201c\u4fee\u6b63\u201d\u6d41\u4f53\u7684\u6d41\u5411\u3002     c.  \u7528\u8ba1\u7b97\u51fa\u7684\u538b\u529b\u68af\u5ea6 \\(\\nabla p\\) \u6765\u4fee\u6b63\u901f\u5ea6\u573a\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u6563\u5ea6\u4e3a\u96f6\u3001\u6ee1\u8db3\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6\u7684\u65b0\u901f\u5ea6\u573a\u3002</p> </li> </ol> <p>\u6211\u4eec\u5c06\u4f7f\u7528\u5f3a\u5927\u7684\u5171\u8f6d\u68af\u5ea6\u6cd5 (Conjugate Gradient method) \u6765\u9ad8\u6548\u6c42\u89e3\u538b\u529b\u6cca\u677e\u65b9\u7a0b\uff0c\u5e76\u5229\u7528 <code>Taichi</code> \u6846\u67b6\u7684\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\u4e3a\u6574\u4e2a\u6a21\u62df\u8fc7\u7a0b\u52a0\u901f\u3002</p> <pre><code># Eulerian Fluid Simulation with Conjugate Gradient Solver\n# Based on: https://github.com/JerryYan97/Taichi_HW1_EulerianFluid\n\nimport taichi as ti\n\nti.init(arch=ti.gpu)\n\n# General settings\nresolutionX = 512\npixels = ti.Vector.field(3, dtype=ti.f32, shape=(resolutionX, resolutionX))  # Use RGB color\ndt = 0.02\npause = False\ntemp_dye = 1.0\npixel_mid = resolutionX // 2\nix_length = 5\niy_length = 10\narea = ti.Vector([8, pixel_mid - iy_length, 8 + ix_length, pixel_mid + iy_length])\ninflow_velocity = ti.Vector([3.0, 0.0])\n\n# Grid settings\n_velocities = ti.Vector.field(2, dtype=ti.f32, shape=(resolutionX, resolutionX))\n_new_velocities = ti.Vector.field(2, dtype=ti.f32, shape=(resolutionX, resolutionX))\nvelocity_divs = ti.field(dtype=ti.f32, shape=(resolutionX, resolutionX))\n_pressures = ti.field(dtype=ti.f32, shape=(resolutionX, resolutionX))\n_new_pressures = ti.field(dtype=ti.f32, shape=(resolutionX, resolutionX))\n_dye_buffer = ti.Vector.field(3, dtype=ti.f32, shape=(resolutionX, resolutionX))  # RGB dye\n_new_dye_buffer = ti.Vector.field(3, dtype=ti.f32, shape=(resolutionX, resolutionX))\n\n# CG settings\nb = ti.field(dtype=ti.f32, shape=resolutionX * resolutionX)\np = ti.field(dtype=ti.f32, shape=resolutionX * resolutionX)\nAx = ti.field(dtype=ti.f32, shape=resolutionX * resolutionX)\nAp = ti.field(dtype=ti.f32, shape=resolutionX * resolutionX)\nr = ti.field(dtype=ti.f32, shape=resolutionX * resolutionX)\nnew_r = ti.field(dtype=ti.f32, shape=resolutionX * resolutionX)\n\n# TexPair class for buffer swapping\nclass TexPair:\n    def __init__(self, cur, nxt):\n        self.cur = cur\n        self.nxt = nxt\n\n    def swap(self):\n        self.cur, self.nxt = self.nxt, self.cur\n\n# Interpolation functions\n@ti.func\ndef sample(qf, u, v, res):\n    i, j = int(u), int(v)\n    # Nearest\n    i = max(0, min(res - 1, i))\n    j = max(0, min(res - 1, j))\n    return qf[i, j]\n\n@ti.func\ndef lerp(vl, vr, frac):\n    # frac: [0.0, 1.0]\n    return vl + frac * (vr - vl)\n\n@ti.func\ndef bilerp(vf, u, v, res):\n    s, t = u - 0.5, v - 0.5\n    # floor\n    iu, iv = int(s), int(t)\n    # fract\n    fu, fv = s - iu, t - iv\n    a = sample(vf, iu + 0.5, iv + 0.5, res)\n    b = sample(vf, iu + 1.5, iv + 0.5, res)\n    c = sample(vf, iu + 0.5, iv + 1.5, res)\n    d = sample(vf, iu + 1.5, iv + 1.5, res)\n    return lerp(lerp(a, b, fu), lerp(c, d, fu), fv)\n\nvelocities_pair = TexPair(_velocities, _new_velocities)\npressures_pair = TexPair(_pressures, _new_pressures)\ndyes_pair = TexPair(_dye_buffer, _new_dye_buffer)\n\n@ti.func\ndef vel_with_boundary(vf: ti.template(), i: int, j: int) -&gt; ti.f32:\n    if (i == j == 0) or (i == j == resolutionX - 1) or (i == 0 and j == resolutionX - 1) or (\n            i == resolutionX - 1 and j == 0):\n        vf[i, j] = ti.Vector([0.0, 0.0])\n    elif i == 0:\n        vf[i, j] = -vf[1, j]\n    elif j == 0:\n        vf[i, 0] = -vf[i, 1]\n    elif i == resolutionX - 1:\n        vf[resolutionX - 1, j] = -vf[resolutionX - 2, j]\n    elif j == resolutionX - 1:\n        vf[i, resolutionX - 1] = -vf[i, resolutionX - 2]\n    return vf[i, j]\n\n@ti.func\ndef p_with_boundary(pf: ti.template(), i: int, j: int) -&gt; ti.f32:\n    if (i == j == 0) or (i == j == resolutionX - 1) or (i == 0 and j == resolutionX - 1) or (\n            i == resolutionX - 1 and j == 0):\n        pf[i, j] = 0.0\n    elif i == 0:\n        pf[0, j] = pf[1, j]\n    elif j == 0:\n        pf[i, 0] = pf[i, 1]\n    elif i == resolutionX - 1:\n        pf[resolutionX - 1, j] = pf[resolutionX - 2, j]\n    elif j == resolutionX - 1:\n        pf[i, resolutionX - 1] = pf[i, resolutionX - 2]\n    return pf[i, j]\n\n@ti.kernel\ndef apply_vel_bc(vf: ti.template()):\n    for i, j in vf:\n        vel_with_boundary(vf, i, j)\n\n@ti.kernel\ndef apply_p_bc(pf: ti.template()):\n    for i, j in pf:\n        p_with_boundary(pf, i, j)\n\n@ti.kernel\ndef advect(vf: ti.template(), qf: ti.template(), new_qf: ti.template()):\n    for IX, IY in vf:\n        # Backtrace using semi-lagrangian with 2nd order Runge-Kutta\n        coord_curr = ti.Vector([IX, IY]) + ti.Vector([0.5, 0.5])\n        vel_curr = vf[IX, IY]\n        coord_mid = coord_curr - 0.5 * dt * vel_curr\n        vel_mid = bilerp(vf, coord_mid[0], coord_mid[1], resolutionX)\n        coord_prev = coord_curr - dt * vel_mid\n        # Get previous quality\n        q_prev = bilerp(qf, coord_prev[0], coord_prev[1], resolutionX)\n        # Update current quality\n        new_qf[IX, IY] = q_prev\n\n@ti.kernel\ndef addInflow(qf: ti.template(), area: ti.template(), quality: ti.template()):\n    bl_ix, bl_iy, tr_ix, tr_iy = area[0], area[1], area[2], area[3]\n    for i, j in qf:\n        if bl_ix &lt;= i &lt;= tr_ix and bl_iy &lt;= j &lt;= tr_iy:\n            qf[i, j] = quality\n\n@ti.kernel\ndef fill_color(ipixels: ti.template(), idyef: ti.template()):\n    for i, j in ipixels:\n        # Convert dye density to color display\n        density = ti.min(1.0, ti.max(0.0, idyef[i, j].norm()))\n        # Generate color based on density - blue to red gradient\n        ipixels[i, j] = ti.Vector([\n            ti.min(density * 2.0, 1.0),  # Red component\n            ti.max(0.0, density * 2.0 - 1.0),  # Green component\n            ti.max(0.0, 1.0 - density * 2.0)   # Blue component\n        ])\n\n@ti.func\ndef coeff_matrix(row: int, col: int) -&gt; ti.f32:\n    res = 0.0\n    n = resolutionX * resolutionX\n    IY = row // resolutionX\n    IX = row - resolutionX * IY\n    if row &gt;= n or row &lt; 0 or col &gt;= n or col &lt; 0:\n        res = 0.0\n    else:\n        if (IX == IY == 0) or (IX == IY == resolutionX - 1) or (IX == 0 and IY == resolutionX - 1) or (\n                IX == resolutionX - 1 and IY == 0):\n            if row == col:\n                res = 1.0\n            else:\n                res = 0.0\n        if row == col:\n            res = -4.0\n        elif ti.abs(col - row) == 1:\n            res = 1.0\n        elif ti.abs(col - row) == resolutionX:\n            res = 1.0\n    return res\n\n@ti.func\ndef visit_vector(v: ti.template(), vid: int, length: int) -&gt; ti.f32:\n    res = 0.0\n    if vid &lt; 0 or vid &gt;= length:\n        res = 0.0\n    else:\n        res = v[vid]\n    return res\n\n@ti.func\ndef visit_pf_vector(pf: ti.template(), vid: int) -&gt; ti.f32:\n    res = 0.0\n    n = resolutionX * resolutionX\n    if vid &gt;= n or vid &lt; 0:\n        res = 0.0\n    else:\n        IY = vid // resolutionX\n        IX = vid - resolutionX * IY\n        res = pf[IX, IY]\n    return res\n\n@ti.kernel\ndef pressure_cg_init(pf: ti.template(), b: ti.template()):\n    n = resolutionX * resolutionX\n    for row in range(n):\n        ve1 = visit_pf_vector(pf, row - resolutionX)\n        ve2 = visit_pf_vector(pf, row - 1)\n        ve3 = visit_pf_vector(pf, row)\n        ve4 = visit_pf_vector(pf, row + 1)\n        ve5 = visit_pf_vector(pf, row + resolutionX)\n        me1 = coeff_matrix(row, row - resolutionX)\n        me2 = coeff_matrix(row, row - 1)\n        me3 = coeff_matrix(row, row)\n        me4 = coeff_matrix(row, row + 1)\n        me5 = coeff_matrix(row, row + resolutionX)\n\n        temp_Ax = me1 * ve1 + me2 * ve2 + me3 * ve3 + me4 * ve4 + me5 * ve5\n\n        Ax[row] = temp_Ax\n        r[row] = b[row] - Ax[row]\n        p[row] = r[row]\n\n@ti.kernel\ndef pressure_cg_iter(pf: ti.template()) -&gt; ti.f32:\n    n = resolutionX * resolutionX\n    rkT_rk = 0.0\n    pkT_A_pk = 0.0\n\n    for i in range(n):\n        rkT_rk += (r[i] * r[i])\n        ve1 = visit_vector(p, i - resolutionX, n)\n        ve2 = visit_vector(p, i - 1, n)\n        ve3 = visit_vector(p, i, n)\n        ve4 = visit_vector(p, i + 1, n)\n        ve5 = visit_vector(p, i + resolutionX, n)\n        me1 = coeff_matrix(i, i - resolutionX)\n        me2 = coeff_matrix(i, i - 1)\n        me3 = coeff_matrix(i, i)\n        me4 = coeff_matrix(i, i + 1)\n        me5 = coeff_matrix(i, i + resolutionX)\n\n        temp_Ap = me1 * ve1 + me2 * ve2 + me3 * ve3 + me4 * ve4 + me5 * ve5\n        Ap[i] = temp_Ap\n        pkT_A_pk += (p[i] * temp_Ap)\n\n    alpha = rkT_rk / pkT_A_pk\n    res = 0.0\n    top = 0.0\n    bottom = 0.0\n    for i in range(n):\n        IY = i // resolutionX\n        IX = i - resolutionX * IY\n        new_pf_val = pf[IX, IY] + alpha * p[i]\n        diff = ti.abs(new_pf_val - pf[IX, IY])\n        res += (diff * diff)\n        pf[IX, IY] = new_pf_val\n        new_r_val = r[i] - alpha * Ap[i]\n        new_r[i] = new_r_val\n        top += (new_r_val * new_r_val)\n        bottom += (r[i] * r[i])\n\n    beta = top / bottom\n    for i in range(n):\n        p[i] = new_r[i] + beta * p[i]\n        r[i] = new_r[i]\n    res = ti.sqrt(res)\n    return res\n\n@ti.kernel\ndef construct_cg_b(divf: ti.template(), b: ti.template()):\n    for IX, IY in divf:\n        if (0 &lt; IX &lt; resolutionX - 1) and (0 &lt; IY &lt; resolutionX - 1):\n            b[IY * resolutionX + IX] = divf[IX, IY]\n        else:\n            b[IY * resolutionX + IX] = 0.0\n\ndef pressure_cg(pf_pair, divf: ti.template()):\n    residual = 10\n    counter = 0\n    construct_cg_b(divf, b)\n    pressure_cg_init(pf_pair.cur, b)\n    while residual &gt; 0.01:\n        residual = pressure_cg_iter(pf_pair.cur)\n        counter += 1\n        if counter &gt; 30:\n            break\n    apply_p_bc(pf_pair.cur)\n\n@ti.kernel\ndef divergence(field: ti.template(), divf: ti.template()):\n    for i, j in field:\n        divf[i, j] = 0.5 * (field[i + 1, j][0] - field[i - 1, j][0] + field[i, j + 1][1] - field[i, j - 1][1])\n\n@ti.kernel\ndef correct_divergence(vf: ti.template(), vf_new: ti.template(), pf: ti.template()):\n    for i, j in vf:\n        vf_new[i, j] = vf[i, j] - ti.Vector([(pf[i + 1, j] - pf[i - 1, j]) / 2.0, (pf[i, j + 1] - pf[i, j - 1]) / 2.0])\n\ngui = ti.GUI('Colorful Fluid Simulation', (512, 512))\nframe_counter = 0\n\n# Initial dye color is blue\ninitial_dye_color = ti.Vector([0.2, 0.2, 1.0])\n\nwhile True:\n    while gui.get_event(ti.GUI.PRESS):\n        if gui.event.key in [ti.GUI.ESCAPE, ti.GUI.EXIT]: \n            exit(0)\n        if gui.event.key == ti.GUI.SPACE:\n            pause = not pause\n    if not pause:\n        for itr in range(15):\n            # Add inflow\n            addInflow(velocities_pair.cur, area, inflow_velocity)\n            addInflow(dyes_pair.cur, area, initial_dye_color)\n            # Advection calculation\n            apply_vel_bc(velocities_pair.cur)\n            advect(velocities_pair.cur, velocities_pair.cur, velocities_pair.nxt)\n            advect(velocities_pair.cur, dyes_pair.cur, dyes_pair.nxt)\n            velocities_pair.swap()\n            dyes_pair.swap()\n            apply_vel_bc(velocities_pair.cur)\n            # Projection step\n            divergence(velocities_pair.cur, velocity_divs)\n            pressure_cg(pressures_pair, velocity_divs)\n            correct_divergence(velocities_pair.cur, velocities_pair.nxt, pressures_pair.cur)\n            velocities_pair.swap()\n        fill_color(pixels, dyes_pair.cur)\n\n    frame_counter += 1\n    filename = f'./video/frame_{frame_counter:05d}.png'\n    gui.set_image(pixels.to_numpy())\n    try:\n        gui.show(filename)\n    except:\n        gui.show()\n</code></pre> <p>\u8fd0\u884c\u4ee3\u7801\u8f93\u51fa</p> <p>\u6211\u4eec\u770b\u5230\u7684\u8fd9\u4e9b\u590d\u6742\u7684\u7fbd\u6d41\u3001\u5377\u66f2\u548c\u6df7\u5408\u73b0\u8c61\uff0c\u90fd\u662f\u7531\u52a8\u91cf\u65b9\u7a0b\u4e2d\u7684\u975e\u7ebf\u6027\u5bf9\u6d41\u9879 \\((\\vec{v} \\cdot \\nabla)\\vec{v}\\) \u6240\u4e3b\u5bfc\u7684\u3002\u8fd9\u4e2a\u770b\u4f3c\u7b80\u5355\u7684\u9879\uff0c\u5374\u662f\u6d41\u4f53\u80fd\u591f\u4ea7\u751f\u4ece\u7b80\u5355\u5c42\u6d41\u5230\u590d\u6742\u6e4d\u6d41\u7b49\u65e0\u7a77\u65e0\u5c3d\u6a21\u5f0f\u7684\u6839\u6e90\u3002</p>"},{"location":"zh/notes/27.%20%E7%AE%80%E5%8D%95%E6%B5%81%E4%BD%93%E3%80%81%E6%97%A0%E6%91%A9%E6%93%A6%E6%B5%81%E4%BD%93%E4%B8%8E%E6%AC%A7%E6%8B%89%E6%96%B9%E7%A8%8B%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6/#7","title":"7. \u603b\u7ed3","text":"<p>\u8fd9\u8282\u8bfe\uff0c\u6211\u4eec\u4ece\u68af\u5ea6\u52a8\u529b\u5b66\u7684\u5b88\u6052\u6a21\u578b\u51fa\u53d1\uff0c\u7cfb\u7edf\u5730\u6784\u5efa\u4e86\u63cf\u8ff0\u65e0\u6469\u64e6\u3001\u65e0\u70ed\u4f20\u5bfc\u7684\u7b80\u5355\u6d41\u4f53\u7684\u6d41\u4f53\u52a8\u529b\u5b66\u7406\u8bba\u6846\u67b6\u3002\u5176\u6838\u5fc3\u662f\u57fa\u4e8e\u5c40\u57df\u5e73\u8861\u5047\u8bbe \uff0c\u4e3a\u6d41\u4f53\u7684\u4e09\u4e2a\u57fa\u672c\u5b88\u6052\u91cf\u2014\u2014\u8d28\u91cf\u3001\u52a8\u91cf\u548c\u80fd\u91cf\u2014\u2014\u5efa\u7acb\u5b88\u6052\u5b9a\u5f8b\u65b9\u7a0b\u3002\u901a\u8fc7\u4e3a\u6bcf\u4e00\u4e2a\u5b88\u6052\u201c\u5bc6\u5ea6\u201d\u63a8\u5bfc\u51fa\u5176\u5bf9\u5e94\u7684\u7269\u7406\u201c\u901a\u91cf\u201d\uff0c\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u4e86\u4e00\u5957\u63cf\u8ff0\u7406\u60f3\u6d41\u4f53\u884c\u4e3a\u7684\u5c01\u95ed\u65b9\u7a0b\u7ec4\uff0c\u8fd9\u4fbf\u662f\u7406\u60f3\u6d41\u4f53\u52a8\u529b\u5b66\u65b9\u7a0b\u7ec4 (Equations of Ideal Hydrodynamics) \u3002</p> <p>\u4e0b\u8868\u603b\u7ed3\u4e86\u672c\u8bb2\u7684\u6838\u5fc3\u5185\u5bb9\uff0c\u6e05\u6670\u5730\u5c55\u793a\u4e86\u8fd9\u4e09\u5927\u5b88\u6052\u5b9a\u5f8b\u7684\u7edf\u4e00\u7ed3\u6784\uff1a</p> \u5b88\u6052\u91cf \u5bc6\u5ea6 \u5b88\u6052\u5f8b\uff08\u5fae\u5206\u5f62\u5f0f\uff09 \u901a\u91cf/\u6d41 \u901a\u91cf\u7684\u7269\u7406\u89e3\u91ca \u8d28\u91cf \\(\\rho\\) \\(\\partial_t \\rho + \\nabla \\cdot (\\rho \\vec{v}) = 0\\) \\(J = \\rho \\vec{v}\\) \u7531\u901f\u5ea6\u573a\u8f93\u8fd0\u7684\u8d28\u91cf\uff08\u5bf9\u6d41\uff09\u3002 \u52a8\u91cf \\(\\rho v_i\\) \\(\\partial_t (\\rho v_i) + \\partial_k \\Pi_{ik} = 0\\) \\(\\Pi_{ik} = P \\delta_{ik} + \\rho v_i v_k\\) \u5404\u5411\u540c\u6027\u7684\u538b\u5f3a\u529b\u52a0\u4e0a\u52a8\u91cf\u7684\u5bf9\u6d41\u8f93\u8fd0\u3002 \u80fd\u91cf \\(\\frac{1}{2} \\rho v^2 + \\rho \\epsilon\\) \\(\\partial_t e_{\\text{total}} + \\nabla \\cdot J^{(\\epsilon)} = 0\\) \\(J^{(\\epsilon)} = \\rho \\vec{v} \\left( \\frac{1}{2} v^2 + h \\right)\\) \u7531\u901f\u5ea6\u573a\u8f93\u8fd0\u7684\u603b\u80fd\u91cf\uff08\u52a8\u80fd+\u7113\uff09\u3002 <p>\u8fd9\u4e2a\u65b9\u7a0b\u7ec4\u662f\u6211\u4eec\u8fdb\u4e00\u6b65\u7406\u89e3\u66f4\u590d\u6742\u6d41\u4f53\u73b0\u8c61\u7684\u57fa\u77f3\u3002\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u4e3a\u6d41\u4f53\u4e16\u754c\u6784\u5efa\u4e86\u5176\u6700\u5e95\u5c42\u7684\u3001\u65e0\u8017\u6563\u7684\u201c\u8fd0\u52a8\u9aa8\u67b6\u201d\u3002\u5728\u63a5\u4e0b\u6765\u7684\u8bfe\u7a0b\u4e2d\uff0c\u5c06\u5728\u6b64\u57fa\u7840\u4e0a\u5f15\u5165\u8017\u6563\u6548\u5e94 (dissipative effects) \uff08\u5982\u7c98\u6027\u548c\u70ed\u4f20\u5bfc\uff09\uff0c\u4ece\u7406\u60f3\u7684\u6b27\u62c9\u65b9\u7a0b\u8fc7\u6e21\u5230\u66f4\u666e\u9002\u7684\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b (Navier-Stokes Equations) \uff0c\u4ece\u800c\u80fd\u591f\u63cf\u8ff0\u66f4\u52a0\u771f\u5b9e\u548c\u590d\u6742\u7684\u6d41\u4f53\u73b0\u8c61\u3002</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/","title":"\u5f15\u8a00\uff1a\u4ece\u7406\u60f3\u6d41\u4f53\u5230\u771f\u5b9e\u6d41\u4f53\u2014\u2014\u5f15\u5165\u8017\u6563\u4e0e\u4e0d\u53ef\u9006\u6027","text":"<p>\u4e0a\u4e00\u8282\u8bfe\u901a\u8fc7\u5e94\u7528\u8d28\u91cf\u3001\u52a8\u91cf\u548c\u80fd\u91cf\u8fd9\u4e09\u5927\u57fa\u672c\u5b88\u6052\u5f8b (conservation laws) \uff0c\u6210\u529f\u6784\u5efa\u4e86\u7406\u60f3\u6d41\u4f53 (ideal fluid) \u7684\u52a8\u529b\u5b66\u6846\u67b6\uff0c\u5176\u6838\u5fc3\u6210\u679c\u662f\u6b27\u62c9\u65b9\u7a0b (Euler Equation) \u3002\u7406\u60f3\u6d41\u4f53\u6a21\u578b\u5efa\u7acb\u5728\u4e24\u4e2a\u5173\u952e\u5047\u8bbe\u4e4b\u4e0a\uff1a\u6d41\u4f53\u5185\u90e8\u6ca1\u6709\u6469\u64e6\uff08\u5373\u65e0\u7c98\u6027\uff09\u4e14\u6ca1\u6709\u70ed\u91cf\u4f20\u9012\uff0c\u8fd9\u610f\u5473\u7740\u6240\u6709\u8fc7\u7a0b\u90fd\u662f\u53ef\u9006\u7684 (reversible) \uff0c\u6bcf\u4e2a\u6d41\u4f53\u5143\u7684\u71b5\u5728\u8fd0\u52a8\u4e2d\u4fdd\u6301\u4e0d\u53d8\uff08\u5373\u7b49\u71b5\u6d41, Isentropic Flow\uff09 \u3002</p> <p>\u7136\u800c\uff0c\u8fd9\u4e2a\u4f18\u96c5\u7684\u7406\u8bba\u56fe\u50cf\u4e0e\u6211\u4eec\u7684\u65e5\u5e38\u7ecf\u9a8c\u5f62\u6210\u4e86\u9c9c\u660e\u5bf9\u6bd4\u3002\u4f8b\u5982\uff0c\u5c06\u5976\u6cb9\u6405\u5165\u5496\u5561\u540e\uff0c\u5b83\u4f1a\u5747\u5300\u6563\u5f00\uff0c\u4f46\u4ece\u672a\u89c1\u8fc7\u6563\u5f00\u7684\u5976\u6cb9\u81ea\u53d1\u5730\u91cd\u65b0\u805a\u96c6\u8d77\u6765\u3002\u8fd9\u79cd\u73b0\u8c61\u7684\u4e0d\u53ef\u9006\u6027 (irreversibility) \u662f\u771f\u5b9e\u4e16\u754c\u7684\u4e00\u4e2a\u57fa\u672c\u7279\u5f81\u3002\u6b27\u62c9\u65b9\u7a0b\u56e0\u5176\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027 (time-reversal symmetry) \u800c\u65e0\u6cd5\u63cf\u8ff0\u8fd9\u7c7b\u8017\u6563\u8fc7\u7a0b\u2014\u2014\u4e00\u4e2a\u7406\u60f3\u6d41\u4f53\u8fd0\u52a8\u7684\u5f71\u7247\u5012\u7740\u64ad\u653e\uff0c\u5176\u5c55\u73b0\u7684\u8fd0\u52a8\u8f68\u8ff9\u4ecd\u7136\u5b8c\u5168\u7b26\u5408\u7269\u7406\u5b9a\u5f8b\u3002</p> <p>\u8fd9\u8282\u8bfe\u5c06\u4ece\u7406\u60f3\u5316\u7684\u53ef\u9006\u7269\u7406\u4e16\u754c\u5230\u66f4\u7b26\u5408\u73b0\u5b9e\u7684\u4e0d\u53ef\u9006\u4e16\u754c\u3002\u771f\u5b9e\u6d41\u4f53\u5b58\u5728\u4e24\u4e2a\u6838\u5fc3\u7684\u8017\u6563\u673a\u5236\uff1a</p> <ol> <li> <p>\u5185\u90e8\u6469\u64e6 (Internal Friction) \uff0c\u5b8f\u89c2\u4e0a\u8868\u73b0\u4e3a\u7c98\u6027 (viscosity) \u3002</p> </li> <li> <p>\u5185\u90e8\u70ed\u91cf\u4f20\u9012 (Internal Heat Transfer) \uff0c\u5b8f\u89c2\u4e0a\u8868\u73b0\u4e3a\u70ed\u4f20\u5bfc (heat conduction) \u3002</p> </li> </ol> <p>\u8fd9\u4e24\u79cd\u73b0\u8c61\u6b63\u662f\u7b2c24\u8bb2\u6602\u8428\u683c\u7406\u8bba\u4e2d\u63a2\u8ba8\u7684\u4e0d\u53ef\u9006\u8fc7\u7a0b (irreversible processes) \u7684\u5177\u4f53\u4f53\u73b0\u3002\u5b83\u4eec\u662f\u5b8f\u89c2\u4e16\u754c\u4e2d\u71b5\u4ea7\u751f\u7684\u5fae\u89c2\u6839\u6e90\uff0c\u4f1a\u5c06\u6709\u5e8f\u7684\u5b8f\u89c2\u52a8\u80fd\u4e0d\u53ef\u9006\u5730\u8f6c\u5316\u4e3a\u65e0\u5e8f\u7684\u5185\u80fd\uff08\u70ed\uff09\u3002</p> <p>\u4e3a\u4e86\u5c06\u8fd9\u4e9b\u7269\u7406\u73b0\u5b9e\u878d\u5165\u7406\u8bba\uff0c\u5fc5\u987b\u4fee\u6b63\u4e0a\u4e00\u8bb2\u63a8\u5bfc\u51fa\u7684\u52a8\u91cf\u901a\u91cf\u5f20\u91cf (momentum flux tensor) \u548c\u80fd\u91cf\u6d41\u901a\u91cf (energy flux) \u3002Erwin Frey \u6559\u6388\u5f15\u5165\u65b0\u7684\u9879\u6765\u63cf\u8ff0\u7531\u901f\u5ea6\u68af\u5ea6\u9a71\u52a8\u7684\u7c98\u6027\u5e94\u529b\u5f20\u91cf (viscous stress tensor) \u548c\u7531\u6e29\u5ea6\u68af\u5ea6\u9a71\u52a8\u7684\u70ed\u6d41\u5bc6\u5ea6 (heat flux density) \u3002\u901a\u8fc7\u8fd9\u4e2a\u8fc7\u7a0b\u6765\u6253\u7834\u6b27\u62c9\u65b9\u7a0b\u7684\u65f6\u95f4\u5bf9\u79f0\u6027\uff0c\u63a8\u5bfc\u51fa\u66f4\u666e\u9002\u7684\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b (Navier-Stokes Equation) \uff0c\u5e76\u6700\u7ec8\u901a\u8fc7\u6784\u5efa\u71b5\u5e73\u8861\u65b9\u7a0b (entropy balance equation) \uff0c\u5c06\u6d41\u4f53\u52a8\u529b\u5b66\u4e0e\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u6df1\u523b\u5730\u8054\u7cfb\u8d77\u6765\u3002</p> <p></p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#1","title":"1. \u8017\u6563\u5e94\u529b\u5f20\u91cf\uff1a\u91cf\u5316\u4e0d\u53ef\u9006\u7684\u5185\u90e8\u6469\u64e6","text":"<p>\u5728\u4e0a\u4e00\u8bb2\u4e2d\uff0cErwin Frey \u6559\u6388\u63a8\u5bfc\u4e86\u7406\u60f3\u6d41\u4f53\u7684\u52a8\u91cf\u5b88\u6052\u65b9\u7a0b\uff0c\u5176\u6838\u5fc3\u662f\u52a8\u91cf\u901a\u91cf\u5f20\u91cf \\(\\Pi_{ik} = P \\delta_{ik} + \\rho v_i v_k\\)\u3002\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u63cf\u8ff0\u4e86\u4e24\u79cd\u53ef\u9006\u7684\u52a8\u91cf\u4f20\u9012\u65b9\u5f0f\uff1a\u5404\u5411\u540c\u6027\u7684\u538b\u529b\u548c\u5b8f\u89c2\u7684\u5bf9\u6d41\u3002\u7136\u800c\uff0c\u8fd9\u4e2a\u7406\u60f3\u5316\u7684\u6a21\u578b\u7f3a\u5c11\u4e86\u771f\u5b9e\u4e16\u754c\u4e2d\u81f3\u5173\u91cd\u8981\u7684\u4e00\u4e2a\u73af\u8282\uff1a\u8017\u6563 (dissipation) \u3002\u4e3a\u4e86\u63cf\u8ff0\u7531\u5185\u90e8\u6469\u64e6\u4ea7\u751f\u7684\u4e0d\u53ef\u9006\u7684\u52a8\u91cf\u4ea4\u6362\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u8fd9\u4e2a\u7406\u60f3\u7684\u52a8\u91cf\u901a\u91cf\u5f20\u91cf\u8fdb\u884c\u4fee\u6b63\u3002</p> <p>\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u5c31\u662f\u4ece\u57fa\u672c\u7269\u7406\u539f\u5219\u51fa\u53d1\uff0c\u4e3a\u8fd9\u4e2a\u8017\u6563\u8fc7\u7a0b\u5efa\u7acb\u6570\u5b66\u63cf\u8ff0\uff0c\u5373\u6784\u5efa\u7c98\u6027\u5e94\u529b\u5f20\u91cf (viscous stress tensor) \u7684\u672c\u6784\u5173\u7cfb\u3002</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#11","title":"1.1 \u52a8\u91cf\u901a\u91cf\u5f20\u91cf\u7684\u4fee\u6b63","text":"<p>\u4ece\u666e\u9002\u7684\u52a8\u91cf\u5b88\u6052\u5b9a\u5f8b\u7684\u5c40\u57df\u5f62\u5f0f\u51fa\u53d1\uff0c\u5bf9\u4e8e\u6ca1\u6709\u5916\u90e8\u4f53\u529b\u6e90\u7684\u60c5\u51b5\uff0c\u8be5\u5b9a\u5f8b\u8868\u8ff0\u4e3a\uff1a</p> \\[ \\partial_t (\\rho v_i) = -\\partial_k \\Pi_{ik} \\] <p>\u5176\u4e2d \\(\\rho\\) \u662f\u8d28\u91cf\u5bc6\u5ea6\uff0c\\(v_i\\) \u662f\u901f\u5ea6\u573a\u5206\u91cf\uff0c\\(\\Pi_{ik}\\) \u662f\u52a8\u91cf\u901a\u91cf\u5bc6\u5ea6\u5f20\u91cf\u3002</p> <p>\u4e3a\u4e86\u6e05\u6670\u5730\u5206\u79bb\u53ef\u9006\u4e0e\u4e0d\u53ef\u9006\u8fc7\u7a0b\uff0c\u5c06\u4f5c\u7528\u5728\u6d41\u4f53\u5fae\u5143\u8868\u9762\u4e0a\u7684\u603b\u529b\uff0c\u5373\u603b\u5e94\u529b\u5f20\u91cf (total stress tensor) \\(\\Sigma_{ik}\\)\uff0c\u5206\u89e3\u4e3a\u4e24\u90e8\u5206\uff1a</p> \\[ \\Sigma_{ik} = -P \\delta_{ik} + \\Sigma_{ik}' \\] <ul> <li> <p>\u9759\u6c34\u538b\u529b (Hydrostatic Pressure) \\(-P \\delta_{ik}\\)\uff1a\u8fd9\u662f\u7406\u60f3\u6d41\u4f53\u4e2d\u552f\u4e00\u5b58\u5728\u7684\u8868\u9762\u529b\uff0c\u6e90\u4e8e\u5206\u5b50\u65e0\u89c4\u5219\u7684\u70ed\u8fd0\u52a8\uff0c\u5176\u4f5c\u7528\u662f\u5404\u5411\u540c\u6027\u7684\u538b\u7f29\u3002\u8fd9\u91cc\u7684\u8d1f\u53f7\u662f\u4e00\u4e2a\u7ea6\u5b9a\uff0c\u8868\u793a\u6b63\u538b\u529b \\(P\\) \u4ea7\u751f\u7684\u662f\u538b\u7f29\u5e94\u529b\u3002</p> </li> <li> <p>\u7c98\u6027\u5e94\u529b\u5f20\u91cf (Viscous Stress Tensor) \\(\\Sigma_{ik}'\\)\uff1a\u8fd9\u6b63\u662f\u4e3a\u63cf\u8ff0\u771f\u5b9e\u6d41\u4f53\u800c\u5f15\u5165\u7684\u65b0\u9879\uff0c\u4e5f\u79f0\u4e3a\u8017\u6563\u5e94\u529b\u5f20\u91cf (dissipative stress tensor) \u3002\u5b83\u4ee3\u8868\u4e86\u7531\u4e8e\u6d41\u4f53\u5185\u90e8\u901f\u5ea6\u5dee\u5f02\uff08\u5373\u5185\u6469\u64e6\uff09\u6240\u5f15\u8d77\u7684\u3001\u989d\u5916\u7684\u3001\u5177\u6709\u65b9\u5411\u6027\u7684\u52a8\u91cf\u4ea4\u6362\u3002</p> </li> </ul> <p>\u5c06\u603b\u5e94\u529b\u5f20\u91cf\u4ee3\u5165\uff0c\u5c31\u5f97\u5230\u4e86\u9002\u7528\u4e8e\u771f\u5b9e\u6d41\u4f53\u7684\u603b\u52a8\u91cf\u901a\u91cf\u5f20\u91cf\uff1a</p> \\[ \\Pi_{ik} = \\underbrace{P \\delta_{ik} + \\rho v_i v_k}_{\\text{\u7406\u60f3\u6d41\u4f53\u90e8\u5206}} \\underbrace{- \\Sigma_{ik}'}_{\\text{\u7c98\u6027\u8017\u6563\u90e8\u5206}} \\] <p>\u73b0\u5728\uff0c\u6838\u5fc3\u4efb\u52a1\u53d8\u6210\u4e86\u4e3a\u8fd9\u4e2a\u672a\u77e5\u7684 \\(\\Sigma_{ik}'\\) \u627e\u5230\u4e00\u4e2a\u672c\u6784\u5173\u7cfb (constitutive relation) \uff0c\u5373\u5b83\u5982\u4f55\u4f9d\u8d56\u4e8e\u6d41\u4f53\u7684\u5c40\u90e8\u8fd0\u52a8\u72b6\u6001\u3002</p> <p>\u6240\u8c13\u672c\u6784\u5173\u7cfb\uff0c\u5e76\u975e\u50cf\u52a8\u91cf\u5b88\u6052\u90a3\u6837\u7684\u666e\u9002\u57fa\u672c\u5b9a\u5f8b\uff0c\u800c\u662f\u4e00\u4e2a\u63cf\u8ff0\u7279\u5b9a\u6750\u6599\u6216\u4ecb\u8d28\u5b8f\u89c2\u884c\u4e3a\u7684\u552f\u8c61\u65b9\u7a0b\u3002\u5b83\u7684\u4f5c\u7528\u662f\u5efa\u7acb\u8d77\u6750\u6599\u5185\u90e8\u7684\u201c\u54cd\u5e94\u201d\uff08\u5982\u5e94\u529b\u3001\u70ed\u6d41\u3001\u7535\u6d41\uff09\u4e0e\u9a71\u52a8\u8be5\u54cd\u5e94\u7684\u201c\u523a\u6fc0\u201d\uff08\u5982\u5f62\u53d8\u3001\u6e29\u5ea6\u68af\u5ea6\u3001\u7535\u573a\uff09\u4e4b\u95f4\u7684\u6570\u5b66\u8054\u7cfb\u3002\u8fd9\u4e2a\u5173\u7cfb\u4e2d\u5305\u542b\u4e86\u8868\u5f81\u6750\u6599\u7279\u6027\u7684\u53c2\u6570\uff0c\u4f8b\u5982\u56fa\u4f53\u7684\u6768\u6c0f\u6a21\u91cf\u3001\u5bfc\u4f53\u7684\u7535\u5bfc\u7387\uff0c\u4ee5\u53ca\u5373\u5c06\u8981\u786e\u5b9a\u7684\u6d41\u4f53\u7684\u7c98\u6027\u7cfb\u6570\u3002</p> <p>\u56e0\u6b64\uff0c\u4e3a\\(\\Sigma_{ik}'\\)\u5bfb\u627e\u672c\u6784\u5173\u7cfb\uff0c\u5c31\u662f\u8981\u56de\u7b54\uff1a\u5bf9\u4e8e\u6b63\u5728\u7814\u7a76\u7684\u8fd9\u79cd\u6d41\u4f53\uff0c\u5176\u5185\u90e8\u7684\u6469\u64e6\u529b\u662f\u5982\u4f55\u7531\u5176\u6d41\u52a8\u65b9\u5f0f\uff08\u5373\u901f\u5ea6\u573a\u68af\u5ea6\uff09\u7cbe\u786e\u51b3\u5b9a\u7684\uff1f</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#12","title":"1.2 \u7c98\u6027\u5e94\u529b\u5f20\u91cf\u7684\u672c\u6784\u5173\u7cfb","text":"<p>\u5bf9\u4e8e\u725b\u987f\u6d41\u4f53 (Newtonian fluids) \uff0c\u4e00\u4e2a\u6838\u5fc3\u5047\u8bbe\u662f\u7c98\u6027\u5e94\u529b\u4e0e\u901f\u5ea6\u68af\u5ea6 \\(\\partial_k v_i\\) \u5448\u7ebf\u6027\u5173\u7cfb\u3002\u8fd9\u5b8c\u5168\u7b26\u5408\u5728\u7b2c24\u8bb2\u4e2d\u5b66\u5230\u7684\u6602\u8428\u683c\u7ebf\u6027\u54cd\u5e94\u7406\u8bba (Onsager's linear response theory) \u7684\u7cbe\u795e\uff1a\u5728\u63a5\u8fd1\u70ed\u529b\u5b66\u5e73\u8861\u65f6\uff0c\u7531\u70ed\u529b\u5b66\u529b\uff08\u6b64\u5904\u4e3a\u901f\u5ea6\u68af\u5ea6\uff09\u9a71\u52a8\u7684\u901a\u91cf\uff08\u6b64\u5904\u4e3a\u52a8\u91cf\u901a\u91cf \\(\\Sigma_{ik}'\\)\uff09\u4e0e\u8be5\u529b\u5448\u7ebf\u6027\u5173\u7cfb\u3002</p> <p>\u4e3a\u4e86\u6784\u5efa\u8fd9\u4e2a\u5173\u7cfb\uff0c\u9996\u5148\u9700\u8981\u4ece\u7269\u7406\u4e0a\u7406\u89e3\u901f\u5ea6\u68af\u5ea6\u5f20\u91cf \\(\\partial_k v_i\\) \u6240\u63cf\u8ff0\u7684\u8fd0\u52a8\u6a21\u5f0f\u3002\u4ece\u7eaf\u6570\u5b66\u89d2\u5ea6\u770b\uff0c\u4efb\u4f55\u4e00\u4e2a\u4e8c\u9636\u5f20\u91cf\uff08\u6216\u65b9\u5757\u77e9\u9635\uff09\uff0c\u90fd\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e00\u4e2a\u5bf9\u79f0\u90e8\u5206\u548c\u4e00\u4e2a\u53cd\u5bf9\u79f0\u90e8\u5206\uff1a</p> <ul> <li> <p>\u53cd\u5bf9\u79f0\u90e8\u5206 : \\(\\frac{1}{2}(\\partial_k v_i - \\partial_i v_k)\\)\uff0c\u5b83\u63cf\u8ff0\u4e86\u6d41\u4f53\u5fae\u5143\u7684\u521a\u6027\u8f6c\u52a8 (rigid-body rotation) \uff0c\u5373\u6da1\u65cb\u3002\u60f3\u8c61\u4e00\u4e2a\u5fae\u5c0f\u7684\u6d41\u4f53\u65b9\u5757\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u5728\u65cb\u8f6c\uff0c\u5176\u5185\u90e8\u5404\u70b9\u4e4b\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4fdd\u6301\u4e0d\u53d8\uff0c\u56e0\u6b64\u4e0d\u4f1a\u4ea7\u751f\u201c\u6469\u64e6\u201d\u6216\u80fd\u91cf\u8017\u6563\u3002\u6240\u4ee5\uff0c\u7c98\u6027\u5e94\u529b\u4e0e\u8fd9\u90e8\u5206\u8fd0\u52a8\u65e0\u5173\u3002</p> </li> <li> <p>\u5bf9\u79f0\u90e8\u5206 : \\(e_{ik} = \\frac{1}{2}(\\partial_k v_i + \\partial_i v_k)\\)\uff0c\u5b83\u88ab\u79f0\u4e3a\u5f62\u53d8\u7387\u5f20\u91cf (rate-of-strain tensor) \uff0c\u63cf\u8ff0\u4e86\u6d41\u4f53\u5fae\u5143\u7684\u5f62\u72b6\u548c\u4f53\u79ef\u7684\u53d8\u5316 (deformation) \u3002\u6b63\u662f\u8fd9\u79cd\u5bfc\u81f4\u76f8\u90bb\u6d41\u4f53\u5c42\u53d1\u751f\u76f8\u5bf9\u4f4d\u79fb\u7684\u5f62\u53d8\uff0c\u624d\u662f\u5185\u90e8\u6469\u64e6\u7684\u771f\u6b63\u6765\u6e90\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0c\\(\\Sigma_{ik}'\\) \u5fc5\u7136\u53ea\u4f9d\u8d56\u4e8e\u5bf9\u79f0\u7684\u5f62\u53d8\u7387\u5f20\u91cf \\(e_{ik}\\)\u3002\u4e3a\u4e86\u8fdb\u4e00\u6b65\u533a\u5206\u4e0d\u540c\u7c7b\u578b\u7684\u5f62\u53d8\uff0c\u5c06 \\(e_{ik}\\) \u5206\u89e3\u4e3a\u4e00\u4e2a\u8ff9\u90e8\u548c\u4e00\u4e2a\u65e0\u8ff9\u90e8\u5206\uff1a</p> <ul> <li> <p>\u8ff9\u90e8 (Trace Part - \u81a8\u80c0/\u538b\u7f29): \u5f20\u91cf\u7684\u8ff9 \\(\\partial_\\ell v^\\ell = \\nabla \\cdot \\mathbf{v}\\) \u662f\u4e00\u4e2a\u6807\u91cf\uff0c\u63cf\u8ff0\u4e86\u6d41\u4f53\u5fae\u5143\u4f53\u79ef\u7684\u53d8\u5316\u7387\uff08\u81a8\u80c0\u7387\uff09\u3002</p> </li> <li> <p>\u5bf9\u79f0\u65e0\u8ff9\u90e8\u5206 (Symmetric Traceless Part - \u526a\u5207): \\(\\frac{1}{2}(\\partial_i v_k + \\partial_k v_i - \\frac{2}{3}\\delta_{ik}\\partial_\\ell v^\\ell)\\)\uff0c\u8fd9\u4e2a\u5f20\u91cf\u63cf\u8ff0\u4e86\u5728\u4fdd\u6301\u4f53\u79ef\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u6d41\u4f53\u5fae\u5143\u5f62\u72b6\u7684\u53d8\u5316\u7387\uff08\u526a\u5207\u5f62\u53d8\u7387\uff09\u3002</p> </li> </ul> <p>\u6240\u8c13\u7684\u526a\u5207 (Shear)\uff0c\u53ef\u4ee5\u60f3\u8c61\u4e00\u53e0\u6251\u514b\u724c\u3002\u5982\u679c\u4f60\u628a\u624b\u638c\u5e73\u653e\u5728\u6700\u4e0a\u9762\u7684\u724c\u4e0a\uff0c\u7136\u540e\u6c34\u5e73\u5411\u524d\u63a8\uff0c\u6574\u53e0\u724c\u5c31\u4f1a\u4ece\u4e00\u4e2a\u957f\u65b9\u5f62\u53d8\u6210\u4e00\u4e2a\u5e73\u884c\u56db\u8fb9\u5f62\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u5f20\u724c\u76f8\u5bf9\u4e8e\u5b83\u4e0b\u9762\u7684\u724c\u90fd\u53d1\u751f\u4e86\u6ed1\u52a8\uff0c\u4f46\u6574\u53e0\u724c\u7684\u603b\u4f53\u79ef\uff08\u6216\u9762\u79ef\uff09\u6ca1\u6709\u6539\u53d8\u3002\u8fd9\u79cd\u201c\u5c42\u4e0e\u5c42\u4e4b\u95f4\u76f8\u4e92\u6ed1\u52a8\u5bfc\u81f4\u7684\u5f62\u72b6\u6539\u53d8\u201d\uff0c\u5c31\u662f\u526a\u5207\u3002\u5728\u6d41\u4f53\u4e2d\uff0c\u5f53\u4e00\u5c42\u6d41\u4f53\u4ee5\u4e0d\u540c\u4e8e\u90bb\u8fd1\u5c42\u7684\u901f\u5ea6\u6d41\u52a8\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u526a\u5207\u3002\u5b83\u63cf\u8ff0\u7684\u662f\u6d41\u4f53\u5143\u7684\u5f62\u72b6\u6539\u53d8\u3002</p> <p>\u201c\u8ff9\u201d\u5728\u6570\u5b66\u4e0a\u662f\u6307\u4e00\u4e2a\u77e9\u9635\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c\u3002\u5728\u6d41\u4f53\u52a8\u529b\u5b66\u4e2d\uff0c\u901f\u5ea6\u68af\u5ea6\u5f20\u91cf\u7684\u201c\u8ff9\u201d (\\(\\nabla \\cdot \\mathbf{v}\\)) \u6709\u4e00\u4e2a\u975e\u5e38\u76f4\u89c2\u7684\u7269\u7406\u610f\u4e49\u3002\u60f3\u8c61\u6211\u4eec\u4e4b\u524d\u90a3\u4e2a\u65b9\u5f62\u6d41\u4f53\u5143\uff0c\u5b83\u7684\u8ff9\u90e8\u63cf\u8ff0\u7684\u662f\u8fd9\u4e2a\u65b9\u5757\u81ea\u8eab\u7684\u81a8\u80c0\u6216\u538b\u7f29\u3002\u5982\u679c\u8ff9\u662f\u6b63\u7684\uff0c\u610f\u5473\u7740\u6d41\u4f53\u5143\u50cf\u6c14\u7403\u4e00\u6837\u6b63\u5728\u81a8\u80c0\uff0c\u4f53\u79ef\u53d8\u5927\u3002\u5982\u679c\u8ff9\u662f\u8d1f\u7684\uff0c\u610f\u5473\u7740\u6d41\u4f53\u5143\u6b63\u5728\u88ab\u538b\u7f29\uff0c\u4f53\u79ef\u53d8\u5c0f\u3002\u5728\u6d41\u4f53\u4e2d\uff0c\u8ff9\u90e8\u4ee3\u8868\u4e86\u6d41\u4f53\u8fd0\u52a8\u4e2d\u7eaf\u7cb9\u4f53\u79ef\u6539\u53d8\u7684\u90e8\u5206\uff0c\u4e0e\u5f62\u72b6\u6539\u53d8\u65e0\u5173\u3002</p> <p>\u65e0\u8ff9\u8fd9\u4e2a\u6982\u5ff5\u662f\u524d\u4e24\u4e2a\u7684\u7ed3\u5408\u3002\u65e2\u7136\u6211\u4eec\u77e5\u9053\u201c\u8ff9\u90e8\u201d\u4ee3\u8868\u4e86\u7eaf\u7cb9\u7684\u4f53\u79ef\u53d8\u5316\uff0c\u90a3\u4e48\u201c\u65e0\u8ff9\u201d\u5c31\u610f\u5473\u7740\u201c\u6ca1\u6709\u4f53\u79ef\u53d8\u5316\u201d\u3002\u5728\u6d41\u4f53\u4e2d\uff0c\u4e3a\u4e86\u5728\u6570\u5b66\u4e0a\u7cbe\u786e\u5730\u5206\u79bb\u51fa\u7eaf\u7cb9\u7684\u5f62\u72b6\u6539\u53d8\uff08\u5373\u526a\u5207\uff09\uff0c\u9700\u8981\u4ece\u603b\u7684\u5f62\u53d8\u4e2d\u201c\u51cf\u6389\u201d\u6216\u201c\u5254\u9664\u201d\u6389\u4f53\u79ef\u6539\u53d8\u7684\u90e8\u5206\u3002\u7ecf\u8fc7\u8fd9\u4e2a\u64cd\u4f5c\u540e\u5269\u4e0b\u7684\u90e8\u5206\uff0c\u5c31\u662f\u65e0\u8ff9\u7684\uff0c\u5b83\u4ee3\u8868\u4e86\u4e00\u79cd\u53ea\u6539\u53d8\u5f62\u72b6\u3001\u4e0d\u6539\u53d8\u4f53\u79ef\u7684\u8fd0\u52a8\u3002\u8fd9\u6b63\u662f\u201c\u526a\u5207\u201d\u7684\u7cbe\u786e\u6570\u5b66\u63cf\u8ff0\u3002\u56e0\u6b64\uff0c\u4e0e\u526a\u5207\u7c98\u5ea6 \\(\\eta\\) \u76f8\u4e58\u7684\u90a3\u4e00\u9879\uff0c\u5c31\u662f\u4e00\u4e2a\u5bf9\u79f0\u65e0\u8ff9\u5f20\u91cf\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5404\u5411\u540c\u6027 (isotropic) \u7684\u6d41\u4f53\uff08\u5176\u7269\u7406\u6027\u8d28\u4e0d\u4f9d\u8d56\u4e8e\u65b9\u5411\uff09\uff0c\u7c98\u6027\u5e94\u529b\u5f20\u91cf \\(\\Sigma_{ik}'\\) \u4e0e\u8fd9\u4e24\u4e2a\u5f62\u53d8\u90e8\u5206\u4e4b\u95f4\u7684\u6700\u4e00\u822c\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u5fc5\u7136\u7531\u4e24\u4e2a\u72ec\u7acb\u7684\u6807\u91cf\u7cfb\u6570\u6765\u523b\u753b\u3002\u8fd9\u4e24\u4e2a\u7cfb\u6570\u6b63\u662f\u6602\u8428\u683c\u7cfb\u6570 (Onsager coefficients) \u3002</p> <p>\u9996\u5148\uff0c\u201c\u5404\u5411\u540c\u6027\u201d\u610f\u5473\u7740\u6d41\u4f53\u6ca1\u6709\u201c\u7279\u6b8a\u65b9\u5411\u201d\u3002\u5c31\u50cf\u4e00\u676f\u9759\u6b62\u7684\u6c34\u3002\u65e0\u8bba\u4f60\u4ece\u54ea\u4e2a\u65b9\u5411\u53bb\u6d4b\u91cf\u5b83\u7684\u6027\u8d28\uff08\u6bd4\u5982\u7c98\u7a20\u5ea6\uff09\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u662f\u4e00\u6837\u7684\u3002\u5b83\u4e0d\u50cf\u6728\u5934\uff0c\u6cbf\u7740\u7eb9\u7406\u7684\u65b9\u5411\u548c\u5782\u76f4\u4e8e\u7eb9\u7406\u7684\u65b9\u5411\uff0c\u6027\u8d28\u5c31\u4e0d\u540c\u3002\u8fd9\u610f\u5473\u7740\u63cf\u8ff0\u6d41\u4f53\u884c\u4e3a\u7684\u7269\u7406\u5b9a\u5f8b\uff0c\u5176\u6570\u5b66\u5f62\u5f0f\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u6211\u4eec\u5982\u4f55\u9009\u62e9\u5750\u6807\u7cfb\u3002\u5982\u679c\u6211\u4eec\u5c06\u5750\u6807\u7cfb\u65cb\u8f6c\u4e00\u4e0b\uff0c\u65b9\u7a0b\u672c\u8eab\u7684\u5f62\u5f0f\u5fc5\u987b\u4fdd\u6301\u4e0d\u53d8\u3002\u8fd9\u662f\u4e00\u4e2a\u6781\u5176\u5f3a\u5927\u7684\u5bf9\u79f0\u6027\u7ea6\u675f\u3002</p> <p>\u73b0\u5728\u4efb\u52a1\u662f\uff0c\u7528\u6d41\u4f53\u7684\u8fd0\u52a8\uff08\u7531\u901f\u5ea6\u68af\u5ea6\u5f20\u91cf \\(\\partial_k v_i\\) \u63cf\u8ff0\uff09\u6765\u201c\u6784\u5efa\u201d\u51fa\u5185\u90e8\u7684\u6469\u64e6\u529b\uff08\u7531\u7c98\u6027\u5e94\u529b\u5f20\u91cf \\(\\Sigma'_{ik}\\) \u63cf\u8ff0\uff09\u3002\u8fd9\u4e2a\u6784\u5efa\u8fc7\u7a0b\u5c31\u50cf\u7528\u201c\u79ef\u6728\u201d\u642d\u623f\u5b50\uff0c\u5fc5\u987b\u9075\u5b88\u201c\u5404\u5411\u540c\u6027\u201d\u548c\u201c\u7ebf\u6027\u201d\u8fd9\u4e24\u4e2a\u89c4\u5219\u3002</p> <p>\u65e2\u7136\u5df2\u7ecf\u77e5\u9053\uff0c\u901f\u5ea6\u68af\u5ea6\u5f20\u91cf\u53ef\u4ee5\u88ab\u5206\u89e3\u4e3a\u4e24\u4e2a\u7269\u7406\u4e0a\u5b8c\u5168\u72ec\u7acb\u7684\u90e8\u5206\uff1a\u8ff9\u90e8\u548c\u65e0\u8ff9\u90e8\u3002\u5bf9\u79f0\u6027\u539f\u7406\u544a\u8bc9\u6211\u4eec\uff0c\u4e00\u4e2a\u5404\u5411\u540c\u6027\u7684\u5173\u7cfb\uff0c\u53ea\u80fd\u5c06\u4e00\u4e2a\u5f20\u91cf\u4e0e\u53e6\u4e00\u4e2a\u540c\u7c7b\u578b\u3001\u540c\u65b9\u5411\u7684\u5f20\u91cf\u8054\u7cfb\u8d77\u6765\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u201c\u80f6\u6c34\u201d\u53ea\u80fd\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6807\u91cf\uff08\u4e00\u4e2a\u6570\u5b57\uff09\u3002\u4e0d\u80fd\u628a\u4e00\u4e2a\u63cf\u8ff0\u526a\u5207\u7684\u5f20\u91cf\uff0c\u53d8\u6210\u4e00\u4e2a\u63cf\u8ff0\u7eaf\u4f53\u79ef\u53d8\u5316\u7684\u5f20\u91cf\u3002</p> <p>\u642d\u5efa\u8fc7\u7a0b\uff1a</p> <ul> <li> <p>\u6d41\u4f53\u5185\u90e8\u62b5\u6297\u5f62\u72b6\u6539\u53d8\u7684\u5e94\u529b\uff0c\u5fc5\u7136\u6b63\u6bd4\u4e8e\u63cf\u8ff0\u5f62\u72b6\u6539\u53d8\u7684\u5f20\u91cf \\(S_{ik}\\)\u3002\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u6bd4\u4f8b\u7cfb\u6570\uff08\u6807\u91cf\uff09\uff0c\u79f0\u4e4b\u4e3a\u526a\u5207\u7c98\u5ea6 \\(\\eta\\) (Shear Viscosity)\u3002</p> </li> <li> <p>\u6d41\u4f53\u5185\u90e8\u62b5\u6297\u4f53\u79ef\u6539\u53d8\u7684\u5e94\u529b\uff0c\u5fc5\u7136\u6b63\u6bd4\u4e8e\u63cf\u8ff0\u4f53\u79ef\u6539\u53d8\u7684\u5f20\u91cf \\(T_{ik}\\)\u3002\u6211\u4eec\u5f15\u5165\u53e6\u4e00\u4e2a\u72ec\u7acb\u7684\u6bd4\u4f8b\u7cfb\u6570\uff0c\u79f0\u4e4b\u4e3a\u4f53\u79ef\u7c98\u5ea6 \\(\\xi\\) (Bulk Viscosity)\u3002</p> <p>\u5c06\u8fd9\u4e24\u90e8\u5206\u8d21\u732e\u7ebf\u6027\u5730\u52a0\u8d77\u6765\uff0c\u5c31\u5f97\u5230\u4e86\u552f\u4e00\u53ef\u80fd\u7684\u3001\u6700\u4e00\u822c\u7684\u7ebf\u6027\u5173\u7cfb\uff1a</p> \\[\\Sigma'_{ik} = (2\\eta) \\cdot S_{ik} + \\xi \\cdot T_{ik}\\] <p>\uff08\u8fd9\u91cc\u51fa\u73b0\u56e0\u5b502\u662f\u7531\u4e8e\u5386\u53f2\u5b9a\u4e49\uff0c\u4e0d\u5f71\u54cd\u7269\u7406\u672c\u8d28\uff09\u3002</p> </li> </ul> <p>\u4e4b\u6240\u4ee5\u201c\u5fc5\u7136\u7531\u4e24\u4e2a\u72ec\u7acb\u7684\u6807\u91cf\u7cfb\u6570\u201d \u6765\u523b\u753b\uff0c\u662f\u56e0\u4e3a\u6d41\u4f53\u7684\u5f62\u53d8\u88ab\u6211\u4eec\u4ece\u7269\u7406\u4e0a\u5b8c\u5168\u5730\u5206\u89e3\u4e3a\u4e86\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u4e14\u76f8\u4e92\u72ec\u7acb\u7684\u6a21\u5f0f\uff1a\u5f62\u72b6\u6539\u53d8\u548c\u4f53\u79ef\u6539\u53d8\u3002</p> <ul> <li> <p>\u4e00\u4e2a\u6d41\u4f53\u5143\u7684\u5f62\u72b6\u53ef\u4ee5\u6539\u53d8\u800c\u4f53\u79ef\u4e0d\u53d8\uff08\u7eaf\u526a\u5207\uff09\u3002</p> </li> <li> <p>\u4e00\u4e2a\u6d41\u4f53\u5143\u7684\u4f53\u79ef\u53ef\u4ee5\u6539\u53d8\u800c\u5f62\u72b6\u4e0d\u53d8\uff08\u5747\u5300\u81a8\u80c0\uff09\u3002</p> </li> </ul> <p>\u56e0\u4e3a\u8fd9\u4e24\u79cd\u5f62\u53d8\u662f\u7269\u7406\u4e0a\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u6d41\u4f53\u5bf9\u8fd9\u4e24\u79cd\u5f62\u53d8\u7684\u201c\u62b5\u6297\u80fd\u529b\u201d\u4e5f\u5fc5\u987b\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u9700\u8981\u7528\u4e24\u4e2a\u72ec\u7acb\u7684\u7269\u7406\u53c2\u6570\u6765\u63cf\u8ff0\u3002\\(\\eta\\) \u5c31\u662f\u5bf9\u5f62\u72b6\u6539\u53d8\u7684\u62b5\u6297\u529b\uff0c\\(\\xi\\) \u5c31\u662f\u5bf9\u4f53\u79ef\u6539\u53d8\u7684\u62b5\u6297\u529b\u3002</p> <p>\u6700\u7ec8\uff0c\u6211\u4eec\u5f97\u5230\u7c98\u6027\u5e94\u529b\u5f20\u91cf\u7684\u672c\u6784\u65b9\u7a0b\uff1a</p> \\[ \\Sigma_{ik}' = \\eta \\left( \\partial_i v_k + \\partial_k v_i - \\frac{2}{3} \\delta_{ik} \\partial_\\ell v^\\ell \\right) + \\xi \\delta_{ik} \\partial_\\ell v^\\ell \\] <p>\u5176\u4e2d\uff0c\\(\\eta\\) \u548c \\(\\xi\\) \u5206\u522b\u662f\u526a\u5207\u7c98\u5ea6\u548c\u4f53\u79ef\u7c98\u5ea6\u7684\u6602\u8428\u683c\u7cfb\u6570\u3002\u8fd9\u76f4\u63a5\u8fde\u63a5\u5230\u4e86\u7b2c24\u8bb2\u7684\u6838\u5fc3\u601d\u60f3\u3002\u6602\u8428\u683c\u7406\u8bba\u544a\u8bc9\u6211\u4eec\uff0c\u5728\u63a5\u8fd1\u5e73\u8861\u6001\u65f6\uff0c\u4efb\u4f55\u7531\u70ed\u529b\u5b66\u529b \\(X_b\\) \u9a71\u52a8\u7684\u4e0d\u53ef\u9006\u901a\u91cf \\(J_a\\)\uff0c\u90fd\u4e0e\u529b\u5448\u7ebf\u6027\u5173\u7cfb \\(J_a = \\sum_b L_{ab} X_b\\)\uff0c\u5176\u4e2d\u7684\u6bd4\u4f8b\u7cfb\u6570 \\(L_{ab}\\) \u5c31\u662f\u6602\u8428\u683c\u7cfb\u6570\u3002</p> <p>\u5728\u6d41\u4f53\u7684\u60c5\u51b5\u4e2d\uff1a</p> <ul> <li> <p>\u70ed\u529b\u5b66\u529b (\\(X_b\\)) \u662f\u5bfc\u81f4\u7cfb\u7edf\u504f\u79bb\u5e73\u8861\u7684\u901f\u5ea6\u68af\u5ea6\u3002</p> </li> <li> <p>\u4e0d\u53ef\u9006\u901a\u91cf (\\(J_a\\)) \u662f\u56e0\u6b64\u4ea7\u751f\u7684\u8017\u6563\u52a8\u91cf\u6d41\uff0c\u5373\u7c98\u6027\u5e94\u529b \\(\\Sigma'_{ik}\\) \u3002</p> </li> </ul> <p>\u6211\u4eec\u63a8\u5bfc\u51fa\u7684\u672c\u6784\u65b9\u7a0b\uff0c\u6b63\u662f\u8fd9\u4e2a\u62bd\u8c61\u7684\u6602\u8428\u683c\u5173\u7cfb\u5728\u6d41\u4f53\u529b\u5b66\u4e2d\u7684\u4e00\u4e2a\u5177\u4f53\u3001\u771f\u5b9e\u7684\u4f53\u73b0\u3002\u56e0\u6b64\uff0c\u8fde\u63a5\u201c\u529b\u201d\u548c\u201c\u901a\u91cf\u201d\u7684\u6bd4\u4f8b\u7cfb\u6570 \\(\\eta\\) \u548c \\(\\xi\\)\uff0c\u6309\u7167\u5b9a\u4e49\uff0c\u5c31\u662f\u6602\u8428\u683c\u7cfb\u6570\u3002</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#13","title":"1.3 \u7c98\u6027\u7cfb\u6570\u7684\u7269\u7406\u610f\u4e49","text":"<ul> <li> <p>\u526a\u5207\u7c98\u5ea6 (Shear Viscosity) \\(\\eta\\): \u5b83\u662f\u526a\u5207\u5e94\u529b\uff08\u7531\u5bf9\u79f0\u65e0\u8ff9\u90e8\u5206\u4ea7\u751f\uff09\u4e0e\u526a\u5207\u5f62\u53d8\u7387\u4e4b\u95f4\u7684\u6bd4\u4f8b\u7cfb\u6570\u3002\u5b83\u8861\u91cf\u4e86\u6d41\u4f53\u62b5\u6297\u5f62\u72b6\u6539\u53d8\u7684\u80fd\u529b\u3002\u60f3\u8c61\u5728\u4e24\u5c42\u6d41\u4f53\u4e4b\u95f4\u65bd\u52a0\u4e00\u4e2a\u5207\u5411\u529b\u4f7f\u5176\u76f8\u4e92\u6ed1\u8fc7\uff0c\u526a\u5207\u7c98\u5ea6\u5c31\u662f\u5b83\u4eec\u4e4b\u95f4\u201c\u7c98\u6ede\u201d\u7a0b\u5ea6\u7684\u5ea6\u91cf\uff0c\u5982\u540c\u8702\u871c\u6bd4\u6c34\u66f4\u201c\u7c98\u7a20\u201d\u3002\u4ece\u52a8\u529b\u5b66\u89d2\u5ea6\u770b\uff0c\u5b83\u662f\u52a8\u91cf\u6269\u6563 (momentum diffusion) \u7684\u6839\u6e90\uff1a\u52a8\u91cf\u4f1a\u4ece\u9ad8\u901f\u6d41\u4f53\u5c42\u201c\u6269\u6563\u201d\u5230\u4f4e\u901f\u6d41\u4f53\u5c42\u3002</p> </li> <li> <p>\u4f53\u79ef\u7c98\u5ea6 (Bulk Viscosity) \\(\\xi\\): \u5b83\u662f\u5404\u5411\u540c\u6027\u7c98\u6027\u5e94\u529b\uff08\u7531\u8ff9\u90e8\u4ea7\u751f\uff09\u4e0e\u4f53\u79ef\u53d8\u5316\u7387\u4e4b\u95f4\u7684\u6bd4\u4f8b\u7cfb\u6570\u3002\u5b83\u8861\u91cf\u4e86\u6d41\u4f53\u5728\u5feb\u901f\u538b\u7f29\u6216\u81a8\u80c0\u65f6\uff0c\u9664\u4e86\u70ed\u529b\u5b66\u538b\u529b\u63d0\u4f9b\u7684\u53ef\u9006\u62b5\u6297\u4e4b\u5916\uff0c\u989d\u5916\u62b5\u6297\u4f53\u79ef\u6539\u53d8\u7684\u80fd\u529b\u3002\u5bf9\u4e8e\u5355\u539f\u5b50\u7406\u60f3\u6c14\u4f53\uff0c\u7531\u4e8e\u6ca1\u6709\u5185\u90e8\u81ea\u7531\u5ea6\uff0c\\(\\xi=0\\)\u3002\u4f46\u5bf9\u4e8e\u591a\u539f\u5b50\u5206\u5b50\u6d41\u4f53\uff08\u5982\u4e8c\u6c27\u5316\u78b3\uff09\uff0c\u4f53\u79ef\u7c98\u5ea6\u4e0e\u5206\u5b50\u5185\u90e8\u81ea\u7531\u5ea6\uff08\u5982\u8f6c\u52a8\u3001\u632f\u52a8\uff09\u7684\u5f1b\u8c6b\u65f6\u95f4 (relaxation time) \u6709\u5173\uff0c\u5b83\u91cf\u5316\u4e86\u58f0\u6ce2\u5438\u6536\u7b49\u8017\u6563\u8fc7\u7a0b\u3002</p> </li> </ul>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#14-python-ii","title":"1.4 Python \u6a21\u62df II\uff1a\u4e8c\u7ef4\u6da1\u65cb\u7684\u7c98\u6027\u8870\u51cf\u4e0e\u6da1\u91cf\u6269\u6563","text":"<p>\u4e3a\u4e86\u52a8\u6001\u5730\u3001\u76f4\u89c2\u5730\u7406\u89e3\u7c98\u6027\u7684\u4f5c\u7528\uff0c\u6211\u4eec\u5c06\u6a21\u62df\u4e00\u4e2a\u66f4\u751f\u52a8\u7684\u4f8b\u5b50\uff1a\u4e00\u4e2a\u4e8c\u7ef4\u6da1\u65cb\u5728\u7c98\u6027\u6d41\u4f53\u4e2d\u5982\u4f55\u968f\u65f6\u95f4\u8870\u51cf\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u76f4\u63a5\u5c55\u793a\u4e86\u7c98\u6027\u4f5c\u4e3a\u4e00\u79cd\u52a8\u91cf\u6269\u6563 (momentum diffusion) \u673a\u5236\u7684\u7269\u7406\u672c\u8d28\u3002</p> <p>\u4e0b\u9762\u7684\u6a21\u62df\u5c06\u6c42\u89e3\u4e8c\u7ef4\u4e0d\u53ef\u538b\u7f29\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u7684\u6570\u503c\u89e3\uff0c\u5176\u5f62\u5f0f\u4e3a\uff1a</p> \\[\\frac{\\partial \\vec{v}}{\\partial t} + (\\vec{v} \\cdot \\nabla)\\vec{v} = \\nu \\nabla^2 \\vec{v}\\] <p>\u5176\u4e2d \\(\\nu = \\eta/\\rho\\) \u662f\u8fd0\u52a8\u7c98\u5ea6 (kinematic viscosity) \u3002\u8fd9\u4e2a\u65b9\u7a0b\u5305\u542b\u4e86\u4e24\u4e2a\u6838\u5fc3\u7684\u52a8\u529b\u5b66\u8fc7\u7a0b\uff1a</p> <ul> <li>\u975e\u7ebf\u6027\u5bf9\u6d41\u9879 \\((\\vec{v} \\cdot \\nabla)\\vec{v}\\) : \u6e90\u81ea\u6b27\u62c9\u65b9\u7a0b\uff0c\u63cf\u8ff0\u4e86\u6d41\u4f53\u5982\u4f55\u201c\u643a\u5e26\u201d\u81ea\u8eab\u7684\u52a8\u91cf\u8fdb\u884c\u8fd0\u52a8\u3002</li> <li>\u7c98\u6027\u6269\u6563\u9879 \\(\\nu \\nabla^2 \\vec{v}\\) : \u6211\u4eec\u672c\u8282\u5f15\u5165\u7684\u65b0\u9879\uff0c\u63cf\u8ff0\u4e86\u52a8\u91cf\u5982\u4f55\u56e0\u5185\u6469\u64e6\u800c\u4ece\u9ad8\u901f\u533a\u6269\u6563\u5230\u4f4e\u901f\u533a\u3002</li> </ul> <p>\u6211\u4eec\u5c06\u540c\u65f6\u53ef\u89c6\u5316\u901f\u5ea6\u573a (velocity field) \u548c\u6da1\u91cf\u573a (vorticity field) \u3002\u6da1\u91cf \\(\\omega = \\nabla \\times \\vec{v}\\) \u662f\u4e00\u4e2a\u8861\u91cf\u6d41\u4f53\u5fae\u5143\u5c40\u57df\u201c\u65cb\u8f6c\u201d\u7a0b\u5ea6\u7684\u7269\u7406\u91cf\uff0c\u5b83\u7684\u6f14\u5316\u80fd\u66f4\u6e05\u6670\u5730\u63ed\u793a\u7c98\u6027\u7684\u6269\u6563\u6548\u5e94\u3002</p> <p>\u5177\u4f53\u7269\u7406\u8fc7\u7a0b:</p> <ol> <li> <p>\u9a71\u52a8\u529b : \u521d\u59cb\u6da1\u65cb\u4e2d\uff0c\u6838\u5fc3\u7684\u9ad8\u901f\u533a\u548c\u5916\u56f4\u7684\u4f4e\u901f\u533a\u4e4b\u95f4\u5b58\u5728\u5de8\u5927\u7684\u901f\u5ea6\u68af\u5ea6\uff0c\u8fd9\u5bf9\u5e94\u4e8e\u6da1\u91cf\u573a\u4e2d\u7684\u90a3\u4e2a\u5c16\u9510\u7684\u5cf0\u3002</p> </li> <li> <p>\u7c98\u6027\u4f5c\u7528 : \u8fd9\u4e2a\u901f\u5ea6\u68af\u5ea6\u4ea7\u751f\u4e86\u5f3a\u5927\u7684\u7c98\u6027\u526a\u5207\u5e94\u529b\u3002\u8fd9\u4e2a\u5e94\u529b\u4e0d\u65ad\u5730\u5c06\u52a8\u91cf\u4ece\u9ad8\u901f\u65cb\u8f6c\u7684\u5185\u5c42\u6d41\u4f53\u4f20\u9012\uff08\u6216\u201c\u6269\u6563\u201d\uff09\u5230\u901f\u5ea6\u8f83\u6162\u7684\u5916\u5c42\u6d41\u4f53\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5728\u6da1\u91cf\u573a\u4e2d\u7684\u8868\u73b0\u5c31\u662f\u6da1\u91cf\u4ece\u9ad8\u6d53\u5ea6\u533a\u57df\u5411\u4f4e\u6d53\u5ea6\u533a\u57df\u6269\u6563\u3002\u7c98\u6027\u9879 \\(\\eta \\nabla^2 \\vec{v}\\) \u5728\u52a8\u529b\u5b66\u65b9\u7a0b\u4e2d\u7684\u6838\u5fc3\u4f5c\u7528\uff1a\u5b83\u662f\u4e00\u4e2a\u8017\u6563\u9879\uff0c\u5176\u6548\u679c\u662f\u8ba9\u4efb\u4f55\u4e0d\u5747\u5300\u7684\u901f\u5ea6\u5206\u5e03\uff08\u548c\u6da1\u91cf\u5206\u5e03\uff09\u968f\u7740\u65f6\u95f4\u8870\u51cf\u548c\u5747\u4e00\u5316\u3002</p> </li> <li> <p>\u80fd\u91cf\u8017\u6563 : \u8fd9\u4e2a\u52a8\u91cf\u4f20\u9012\u7684\u8fc7\u7a0b\u4f34\u968f\u7740\u673a\u68b0\u80fd\u5230\u5185\u80fd\uff08\u70ed\uff09\u7684\u8f6c\u5316\uff0c\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4e0d\u53ef\u9006\u8017\u6563\u8fc7\u7a0b\u3002\u5728\u6a21\u62df\u4e2d\uff0c\u7cfb\u7edf\u7684\u603b\u52a8\u80fd\u4f1a\u968f\u65f6\u95f4\u5355\u8c03\u9012\u51cf\u3002</p> </li> <li> <p>\u6700\u7ec8\u7ed3\u679c : \u7c98\u6027\u4f5c\u7528\u6301\u7eed\u4e0d\u65ad\u5730\u201c\u62b9\u5e73\u201d\u901f\u5ea6\u68af\u5ea6\uff0c\u6700\u7ec8\u4f1a\u4f7f\u6574\u4e2a\u7cfb\u7edf\u7684\u901f\u5ea6\u573a\u53d8\u5f97\u5747\u5300\uff08\u5728\u8fd9\u91cc\u662f\u5747\u5300\u9759\u6b62\uff09\uff0c\u6da1\u91cf\u5904\u5904\u4e3a\u96f6\uff0c\u7cfb\u7edf\u8fbe\u5230\u80fd\u91cf\u6700\u4f4e\u7684\u5e73\u8861\u6001\u3002</p> </li> </ol> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\n\n# --- Simulation Parameters ---\nL = 2.0                 # Domain size\nnx, ny = 100, 100       # Grid resolution\nnu = 0.005              # Kinematic viscosity (higher for visible effect)\ndt = 0.005              # Time step\nn_steps = 100           # Number of time steps\nn_steps_per_frame = 5   # Steps between frames\n\n# --- Grid Setup ---\nx = np.linspace(-L/2, L/2, nx)\ny = np.linspace(-L/2, L/2, ny)\nX, Y = np.meshgrid(x, y)\ndx = L / (nx - 1)\n\n# --- Initial Velocity Field (Rankine Vortex) ---\n# Create a more realistic vortex with both rotational core and potential flow outer region\nr = np.sqrt(X**2 + Y**2)\nR_core = 0.3            # Core radius\n\n# Velocity components for a Rankine vortex\n# Inside core (solid body rotation)\ninside = r &lt;= R_core\nu = np.zeros_like(X)\nv = np.zeros_like(Y)\n\n# Inside the core: solid body rotation (v = omega * r)\nu[inside] =  Y[inside] * 2.0 / R_core**2\nv[inside] = -X[inside] * 2.0 / R_core**2\n\n# Outside the core: potential vortex (v = Gamma / (2*pi*r))\noutside = r &gt; R_core\nu[outside] =  Y[outside] / (2 * np.pi * r[outside]**2)\nv[outside] = -X[outside] / (2 * np.pi * r[outside]**2)\n\n# Scale the vortex\nu *= 0.5\nv *= 0.5\n\n# --- Vorticity Calculation ---\ndef calculate_vorticity(u, v, dx):\n    \"\"\"Calculate vorticity field from velocity field\"\"\"\n    dudy = (u[2:, 1:-1] - u[:-2, 1:-1]) / (2*dx)\n    dvdx = (v[1:-1, 2:] - v[1:-1, :-2]) / (2*dx)\n    vorticity = dvdx - dudy\n    return vorticity\n\n# --- Numerical Solver (Navier-Stokes with viscous terms) ---\ndef viscous_step(u, v, nu, dt, dx):\n    \"\"\"Solve Navier-Stokes equations with viscous terms\"\"\"\n    # Temporary arrays\n    u_new = u.copy()\n    v_new = v.copy()\n\n    # Update interior points\n    for i in range(1, ny-1):\n        for j in range(1, nx-1):\n            # Second derivatives (Laplacians)\n            d2u_dx2 = (u[i, j+1] - 2*u[i, j] + u[i, j-1]) / dx**2\n            d2u_dy2 = (u[i+1, j] - 2*u[i, j] + u[i-1, j]) / dx**2\n            d2v_dx2 = (v[i, j+1] - 2*v[i, j] + v[i, j-1]) / dx**2\n            d2v_dy2 = (v[i+1, j] - 2*v[i, j] + v[i-1, j]) / dx**2\n\n            # First derivatives\n            du_dx = (u[i, j+1] - u[i, j-1]) / (2*dx)\n            du_dy = (u[i+1, j] - u[i-1, j]) / (2*dx)\n            dv_dx = (v[i, j+1] - v[i, j-1]) / (2*dx)\n            dv_dy = (v[i+1, j] - v[i-1, j]) / (2*dx)\n\n            # Nonlinear terms (advection)\n            DuDt_conv = -u[i, j]*du_dx - v[i, j]*du_dy\n            DvDt_conv = -u[i, j]*dv_dx - v[i, j]*dv_dy\n\n            # Diffusion terms (viscous)\n            DuDt_diff = nu * (d2u_dx2 + d2u_dy2)\n            DvDt_diff = nu * (d2v_dx2 + d2v_dy2)\n\n            # Update velocities\n            u_new[i, j] = u[i, j] + dt * (DuDt_conv + DuDt_diff)\n            v_new[i, j] = v[i, j] + dt * (DvDt_conv + DvDt_diff)\n\n    # Boundary conditions (zero velocity at boundaries)\n    u_new[0, :] = 0.0\n    u_new[-1, :] = 0.0\n    u_new[:, 0] = 0.0\n    u_new[:, -1] = 0.0\n    v_new[0, :] = 0.0\n    v_new[-1, :] = 0.0\n    v_new[:, 0] = 0.0\n    v_new[:, -1] = 0.0\n\n    return u_new, v_new\n\n# --- Visualization Setup ---\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6))\n\n# Left subplot: Velocity field with streamlines\nax1.set_xlim(-L/2, L/2)\nax1.set_ylim(-L/2, L/2)\nax1.set_xlabel('x')\nax1.set_ylabel('y')\nax1.set_title('Velocity Field and Streamlines')\nax1.set_aspect('equal')\n\n# Stream plot for velocity field\nspeed = np.sqrt(u**2 + v**2)\nstrm = ax1.streamplot(X, Y, u, v, color=speed, cmap='viridis', density=1.5)\nfig.colorbar(strm.lines, ax=ax1, label='Speed')\n\n# Right subplot: Vorticity field\nax2.set_xlim(-L/2, L/2)\nax2.set_ylim(-L/2, L/2)\nax2.set_xlabel('x')\nax2.set_ylabel('y')\nax2.set_title('Vorticity Field')\nax2.set_aspect('equal')\n\n# Calculate initial vorticity\ninitial_vorticity = np.zeros_like(X)\nvorticity_interior = calculate_vorticity(u, v, dx)\ninitial_vorticity[1:-1, 1:-1] = vorticity_interior\n\n# Vorticity visualization\nim = ax2.imshow(initial_vorticity, extent=[-L/2, L/2, -L/2, L/2], \n                origin='lower', cmap='RdBu_r', vmin=-5, vmax=5)\nfig.colorbar(im, ax=ax2, label='Vorticity')\n\n# Time text\ntime_text = fig.text(0.02, 0.95, '', fontsize=12,\n                     bbox=dict(boxstyle=\"round\", facecolor='white', alpha=0.8))\n\n# Energy tracking\nenergies = []\n\n# --- Animation Function ---\ndef animate(frame):\n    global u, v\n\n    # Perform several time steps between frames for smoother animation\n    kinetic_energy = 0\n    for _ in range(n_steps_per_frame):\n        u, v = viscous_step(u, v, nu, dt, dx)\n        # Calculate kinetic energy\n        kinetic_energy += 0.5 * np.sum(u**2 + v**2) * dx**2\n\n    energies.append(kinetic_energy)\n\n    # Update stream plot (clear and redraw)\n    for artist in ax1.collections + ax1.lines:\n        artist.remove()\n    speed = np.sqrt(u**2 + v**2)\n    strm = ax1.streamplot(X, Y, u, v, color=speed, cmap='viridis', density=1.5)\n\n    # Update vorticity plot\n    vorticity = np.zeros_like(X)\n    vorticity_interior = calculate_vorticity(u, v, dx)\n    vorticity[1:-1, 1:-1] = vorticity_interior\n    im.set_array(vorticity)\n\n    # Update time text\n    current_time = frame * n_steps_per_frame * dt\n    time_text.set_text(f'Time = {current_time:.3f}')\n\n    return strm.lines, im\n\n# --- Create Animation ---\nani = animation.FuncAnimation(\n    fig, animate, frames=n_steps//n_steps_per_frame, \n    interval=100, blit=False, repeat=True)\n\nplt.tight_layout()\n#plt.show()\n\n# To save the animation:\nani.save('vortex_decay_detailed.gif', writer='pillow', fps=10)\n</code></pre> <p></p> <p>\u901f\u5ea6\u573a\uff1a \u968f\u7740\u65f6\u95f4\u63a8\u79fb\uff0c\u6d41\u7ebf\u53d8\u5f97\u7a00\u758f\uff0c\u6da1\u65cb\u7684\u65cb\u8f6c\u901f\u5ea6\u663e\u8457\u4e0b\u964d\uff08\u989c\u8272\u53d8\u6697\uff09\uff0c\u5176\u5f71\u54cd\u8303\u56f4\u4e5f\u9010\u6e10\u6269\u5927\u3002\u8fd9\u662f\u6da1\u65cb\u5b8f\u89c2\u4e0a\u7684\u51cf\u901f\u548c\u6269\u5f20\u3002</p> <p>\u6da1\u91cf\u573a\uff1a \u53ef\u4ee5\u6e05\u6670\u5730\u770b\u5230\uff0c\u96c6\u4e2d\u7684\u6da1\u91cf\u201c\u6838\u201d\u6b63\u5728\u5411\u5916\u6269\u6563\u3002\u5176\u4e2d\u5fc3\u5cf0\u503c\u4e0d\u65ad\u964d\u4f4e\uff0c\u800c\u5f71\u54cd\u7684\u8303\u56f4\u4e0d\u65ad\u6269\u5927\uff0c\u8fb9\u754c\u4e5f\u53d8\u5f97\u6a21\u7cca\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5728\u6570\u5b66\u548c\u7269\u7406\u4e0a\uff0c\u4e0e\u4e00\u6ef4\u58a8\u6c34\u5728\u9759\u6c34\u4e2d\u6269\u6563\u6216\u4e00\u4e2a\u70ed\u70b9\u5728\u91d1\u5c5e\u677f\u4e0a\u4f20\u5bfc\u5b8c\u5168\u76f8\u540c\u3002</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#2-","title":"2. \u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\uff1a\u6d41\u4f53\u52a8\u529b\u5b66\u7684\u4e3b\u5bb0","text":"<p>\u4e0a\u4e00\u5c0f\u8282\u6210\u529f\u5730\u8fd0\u7528\u5bf9\u79f0\u6027\u539f\u7406\u548c\u7ebf\u6027\u54cd\u5e94\u7406\u8bba\uff0c\u4e3a\u6d41\u4f53\u5185\u90e8\u7684\u6469\u64e6\u529b\u2014\u2014 \u7c98\u6027\u5e94\u529b\u5f20\u91cf (viscous stress tensor) \\(\\Sigma'_{ik}\\)\u2014\u2014\u6784\u5efa\u4e86\u5176\u672c\u6784\u5173\u7cfb\u3002\u8fd9\u8865\u5168\u4e86\u771f\u5b9e\u6d41\u4f53\u7684\u7269\u7406\u56fe\u50cf\u4e2d\u81f3\u5173\u91cd\u8981\u7684\u4e00\u5757\u62fc\u56fe\u3002\u73b0\u5728\uff0c\u4e07\u4e8b\u4ff1\u5907\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u63cf\u8ff0\u8017\u6563\u7684\u5f20\u91cf\u4ee3\u56de\u5230\u666e\u9002\u7684\u52a8\u91cf\u5b88\u6052\u5b9a\u5f8b\u4e2d\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u5c06\u5b9e\u73b0\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u76ee\u6807\uff1a\u4ece\u4e0a\u4e00\u8282\u8bfe\u63cf\u8ff0\u7406\u60f3\u6d41\u4f53\u7684\u6b27\u62c9\u65b9\u7a0b (Euler Equation) \u51fa\u53d1\uff0c\u63a8\u5bfc\u51fa\u80fd\u591f\u63cf\u8ff0\u771f\u5b9e\u3001\u6709\u7c98\u6027\u6d41\u4f53\u8fd0\u52a8\u7684\u3001\u66f4\u5177\u666e\u9002\u6027\u7684\u4e3b\u5bb0\u65b9\u7a0b\u2014\u2014\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b (Navier-Stokes Equation) \u3002</p> <p>\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u662f\u63cf\u8ff0\u7c98\u6027\u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u52a8\u91cf\u5b88\u6052\u7684\u8fd0\u52a8\u65b9\u7a0b\uff0c\u7531\u6cd5\u56fd\u79d1\u5b66\u5bb6C.L.M.H.\u7eb3\u7ef4\u4e8e1821\u5e74\u548c\u82f1\u56fd\u7269\u7406\u5b66\u5bb6G.G.\u65af\u6258\u514b\u65af\u4e8e1845\u5e74\u5206\u522b\u72ec\u7acb\u5efa\u7acb\u3002\u5b83\u88ab\u8a89\u4e3a\u6d41\u4f53\u529b\u5b66\u7684\"\u7075\u9b42\"\uff0c\u662f\u63cf\u8ff0\u6d41\u4f53\u8fd0\u52a8\u7684\u57fa\u672c\u65b9\u7a0b\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u822a\u7a7a\u822a\u5929\u3001\u6c14\u8c61\u5b66\u3001\u6d77\u6d0b\u5b66\u3001\u5de5\u7a0b\u8bbe\u8ba1\u7b49\u9886\u57df\u3002</p> <p>\u8fd9\u4e2a\u65b9\u7a0b\u662f\u975e\u7ebf\u6027\u504f\u5fae\u5206\u65b9\u7a0b\uff0c\u6c42\u89e3\u975e\u5e38\u56f0\u96be\uff0c\u76ee\u524d\u53ea\u6709\u5728\u67d0\u4e9b\u7279\u5b9a\u6761\u4ef6\u4e0b\u624d\u80fd\u5f97\u5230\u7cbe\u786e\u89e3\u3002\u5b83\u4e5f\u662f\u514b\u96f7\u6570\u5b66\u7814\u7a76\u6240\u5217\u51fa\u7684\"\u4e03\u5927\u5343\u79a7\u5e74\u96be\u9898\"\u4e4b\u4e00\uff0c\u5173\u4e8e\u5176\u89e3\u7684\u5b58\u5728\u6027\u4e0e\u5149\u6ed1\u6027\u95ee\u9898\u5c1a\u672a\u89e3\u51b3\u3002</p> <p></p> <p>\u6559\u6388\u5728\u8bfe\u5802\u4e0a\u63d0\u5230\u4e00\u672c\u4e66\u300aLandau &amp; Lifshitz Vol. 6\u300b\uff0c\u662f\u6d41\u4f53\u529b\u5b66\u5f88\u597d\u7684\u6559\u6750\uff0c\u7531\u5217\u592b\u00b7\u6717\u9053\uff08Lev Landau\uff09\u548c\u53f6\u752b\u6839\u5c3c\u00b7\u5229\u592b\u5e0c\u8328\uff08Evgeny Lifshitz\uff09\u5408\u8457\u7684\u4e00\u7cfb\u5217\u7269\u7406\u5b66\u6559\u79d1\u4e66\u4e2d\u7684\u7b2c\u516d\u5377\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u6717\u9053-\u5229\u592b\u5e0c\u8328\u7406\u8bba\u7269\u7406\u6559\u7a0b\u201d\u3002 </p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#21","title":"2.1 \u65b9\u7a0b\u7684\u63a8\u5bfc","text":"<p>\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u63a8\u5bfc\u7684\u51fa\u53d1\u70b9\u662f\u4f5c\u7528\u4e8e\u4e00\u4e2a\u201c\u6d41\u4f53\u5143\u201d\u4e0a\u7684\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b\uff0c\u4e5f\u5373\u52a8\u91cf\u5b88\u6052\u7684\u62c9\u683c\u6717\u65e5\u5f62\u5f0f (Lagrangian form) \uff1a</p> \\[\\rho \\frac{D v_i}{D t} = \\partial_k \\Sigma_{ik}\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u5de6\u4fa7\u662f\u6d41\u4f53\u5143\u7684\u201c\u8d28\u91cf(\\(\\rho\\))\u4e58\u4ee5\u52a0\u901f\u5ea6(\\(Dv_i/Dt\\))\u201d\uff0c\u53f3\u4fa7\u662f\u4f5c\u7528\u5728\u8be5\u6d41\u4f53\u5143\u4e0a\u7684\u8868\u9762\u529b\u7684\u51c0\u6548\u5e94\uff08\u603b\u5e94\u529b\u5f20\u91cf\u7684\u6563\u5ea6\uff09\u3002</p> <ol> <li> <p>\u4ee3\u5165\u603b\u5e94\u529b\u5f20\u91cf\uff1a\u5c06\u7b2c1\u5c0f\u8282\u4e2d\u5b9a\u4e49\u7684\u603b\u5e94\u529b\u5f20\u91cf \\(\\Sigma_{ik} = -P \\delta_{ik} + \\Sigma_{ik}'\\) \u4ee3\u5165\u4e0a\u5f0f\uff1a</p> \\[\\rho \\frac{D v_i}{D t} = \\partial_k (-P \\delta_{ik} + \\Sigma_{ik}') = -\\partial_i P + \\partial_k \\Sigma_{ik}'\\] </li> </ol> <p>\u4e0e\u7406\u60f3\u6d41\u4f53\u7684\u6b27\u62c9\u65b9\u7a0b\u76f8\u6bd4\uff0c\u65b9\u7a0b\u53f3\u4fa7\u591a\u51fa\u4e86\u4e00\u9879\u7c98\u6027\u529b\u5bc6\u5ea6 (viscous force density) \\(\\partial_k \\Sigma_{ik}'\\)\u3002</p> <ol> <li> <p>\u4ee3\u5165\u672c\u6784\u5173\u7cfb\uff1a\u63a5\u4e0b\u6765\uff0c\u5c06\u7c98\u6027\u5e94\u529b\u5f20\u91cf\u7684\u672c\u6784\u5173\u7cfb\u4ee3\u5165\uff0c\u5e76\u8ba1\u7b97\u5176\u6563\u5ea6 \\(\\partial_k \\Sigma_{ik}'\\)\u3002</p> \\[\\partial_k \\Sigma_{ik}' = \\partial_k \\left[ \\eta \\left( \\partial_i v_k + \\partial_k v_i - \\frac{2}{3} \\delta_{ik} \\partial_\\ell v^\\ell \\right) + \\xi \\delta_{ik} \\partial_\\ell v^\\ell \\right]\\] <p>\u5047\u8bbe\u7c98\u6027\u7cfb\u6570 \\(\\eta\\) \u548c \\(\\xi\\) \u5728\u7a7a\u95f4\u4e0a\u662f\u5747\u5300\u7684\u5e38\u6570\uff0c\u7ecf\u8fc7\u4e00\u4e9b\u5f20\u91cf\u8fd0\u7b97\u540e\uff0c\u53ef\u4ee5\u5c06\u5176\u6574\u7406\u6210\u66f4\u76f4\u89c2\u7684\u77e2\u91cf\u5f62\u5f0f\u3002</p> </li> <li> <p>\u5f97\u5230\u6700\u7ec8\u65b9\u7a0b\uff1a\u5c06\u4e0a\u8ff0\u7ed3\u679c\u4e0e\u7269\u8d28\u5bfc\u6570\u7684\u6b27\u62c9\u5f62\u5f0f \\(\\frac{D \\mathbf{v}}{D t} = \\frac{\\partial \\mathbf{v}}{\\partial t} + (\\mathbf{v} \\cdot \\nabla) \\mathbf{v}\\) \u7ed3\u5408\uff0c\u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u5b8c\u6574\u5f62\u5f0f\u7684\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\uff1a     \\(\\(\\rho \\left( \\frac{\\partial \\mathbf{v}}{\\partial t} + (\\mathbf{v} \\cdot \\nabla) \\mathbf{v} \\right) = -\\nabla P + \\eta \\nabla^2 \\mathbf{v} + \\left(\\xi + \\frac{\\eta}{3} \\right) \\nabla (\\nabla \\cdot \\mathbf{v})\\)\\)     \u8fd9\u4e2a\u65b9\u7a0b\u662f\u6d41\u4f53\u52a8\u529b\u5b66\u7684\u57fa\u77f3\uff0c\u5b83\u6df1\u523b\u5730\u63cf\u7ed8\u4e86\u6d41\u4f53\u8fd0\u52a8\u4e2d\u60ef\u6027\u3001\u538b\u529b\u4e0e\u5185\u6469\u64e6\u4e4b\u95f4\u7684\u52a8\u6001\u5e73\u8861\u3002</p> </li> </ol>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#22","title":"2.2 \u65b9\u7a0b\u7684\u5256\u6790","text":"<p>\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u662f\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b\u5728\u6d41\u4f53\u8fde\u7eed\u4ecb\u8d28\u4e2d\u7684\u5b8f\u4f1f\u4f53\u73b0\uff0c\u65b9\u7a0b\u7684\u6bcf\u4e00\u9879\u90fd\u5bf9\u5e94\u7740\u4e00\u79cd\u6e05\u6670\u7684\u7269\u7406\u4f5c\u7528\u529b\uff08\u5bc6\u5ea6\u4e3a\\(\\rho\\)\uff09\uff1a</p> <ul> <li> <p>\u60ef\u6027\u9879 (Inertia Term): \\(\\rho \\left( \\frac{\\partial \\mathbf{v}}{\\partial t} + (\\mathbf{v} \\cdot \\nabla) \\mathbf{v} \\right)\\)\u3002\u8fd9\u662f\u6d41\u4f53\u5fae\u5143\u7684\u201c\u8d28\u91cf\u4e58\u4ee5\u52a0\u901f\u5ea6\u201d\uff0c\u5373\u7269\u8d28\u5bfc\u6570 (Material Derivative) \u3002\u5b83\u5305\u542b\u4e86\u4ece\u56fa\u5b9a\u89c2\u5bdf\u8005\u89d2\u5ea6\u770b\u5230\u7684\u5c40\u57df\u52a0\u901f\u5ea6 \\(\\frac{\\partial \\mathbf{v}}{\\partial t}\\)\uff0c\u4ee5\u53ca\u7531\u4e8e\u6d41\u4f53\u5143\u8fd0\u52a8\u5230\u901f\u5ea6\u4e0d\u540c\u65b0\u4f4d\u7f6e\u800c\u4ea7\u751f\u7684\u5bf9\u6d41\u52a0\u901f\u5ea6 \\((\\mathbf{v} \\cdot \\nabla) \\mathbf{v}\\)\u3002\u8fd9\u4e00\u9879\u5728\u6b27\u62c9\u65b9\u7a0b\u548c\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u4e2d\u5b8c\u5168\u76f8\u540c\u3002</p> </li> <li> <p>\u538b\u529b\u68af\u5ea6\u529b (Pressure Gradient Force) : \\(-\\nabla P\\)\u3002\u8fd9\u662f\u5355\u4f4d\u4f53\u79ef\u6d41\u4f53\u53d7\u5230\u7684\u7531\u538b\u529b\u5dee\u9a71\u52a8\u7684\u4fdd\u5b88\u529b\uff0c\u65b9\u5411\u4ece\u9ad8\u538b\u533a\u6307\u5411\u4f4e\u538b\u533a\u3002\u5b83\u4e5f\u662f\u53ef\u9006\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u540c\u6837\u5b58\u5728\u4e8e\u6b27\u62c9\u65b9\u7a0b\u4e2d\u3002</p> </li> <li> <p>\u7c98\u6027\u529b (Viscous Force) : \\(\\eta \\nabla^2 \\mathbf{v} + \\left(\\xi + \\frac{\\eta}{3} \\right) \\nabla (\\nabla \\cdot \\mathbf{v})\\)\u3002\u8fd9\u6b63\u662f\u533a\u5206\u771f\u5b9e\u6d41\u4f53\u4e0e\u7406\u60f3\u6d41\u4f53\u7684\u6838\u5fc3\u3002\u5b83\u662f\u5355\u4f4d\u4f53\u79ef\u6d41\u4f53\u53d7\u5230\u7684\u7531\u5185\u90e8\u6469\u64e6\u4ea7\u751f\u7684\u3001\u4e0d\u53ef\u9006\u7684\u8017\u6563\u529b\u3002</p> <ul> <li>\u52a8\u91cf\u6269\u6563 : \u5176\u4e2d\u7684\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u9879 \\(\\eta \\nabla^2 \\mathbf{v}\\) \u5177\u6709\u6781\u5176\u6df1\u523b\u7684\u7269\u7406\u5185\u6db5\u3002\u5728\u6570\u5b66\u4e0a\uff0c\u5b83\u4e0e\u6211\u4eec\u5728\u7b2c26\u8bb2\u4e2d\u9047\u5230\u7684\u6269\u6563\u65b9\u7a0b\uff08\u5982\u70ed\u4f20\u5bfc\u65b9\u7a0b \\(\\partial_t T = D \\nabla^2 T\\)\uff09\u5f62\u5f0f\u5b8c\u5168\u76f8\u540c\u3002\u70ed\u4f20\u5bfc\u65b9\u7a0b\u63cf\u8ff0\u4e86\u70ed\u91cf\u4ece\u9ad8\u6e29\u533a\u5411\u4f4e\u6e29\u533a\u6269\u6563\uff0c\u6700\u7ec8\u62b9\u5e73\u6e29\u5ea6\u68af\u5ea6\u7684\u8fc7\u7a0b\u3002\u4e0e\u6b64\u5b8c\u5168\u7c7b\u4f3c\uff0c\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u4e2d\u7684\u7c98\u6027\u9879\u63cf\u8ff0\u4e86\u52a8\u91cf\u7684\u6269\u6563 (diffusion of momentum) \u3002\u5f53\u6d41\u4f53\u4e2d\u5b58\u5728\u901f\u5ea6\u68af\u5ea6\u65f6\uff08\u5373 \\(\\nabla^2 \\mathbf{v} \\neq 0\\)\uff09\uff0c\u7c98\u6027\u529b\u5c31\u50cf\u4e00\u79cd\u201c\u6469\u64e6\u201d\uff0c\u4f1a\u9a71\u52a8\u52a8\u91cf\u4ece\u9ad8\u901f\u533a\u201c\u6269\u6563\u201d\u5230\u4f4e\u901f\u533a\uff0c\u4ece\u800c\u503e\u5411\u4e8e\u62b9\u5e73\u901f\u5ea6\u5dee\u5f02\u3002\u56e0\u6b64\uff0c\u7c98\u6027\u4e0d\u4ec5\u662f\u201c\u963b\u529b\u201d\uff0c\u66f4\u662f\u4e00\u79cd\u52a8\u91cf\u8f93\u8fd0\u548c\u8017\u6563\u7684\u673a\u5236\u3002</li> </ul> </li> </ul>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#23","title":"2.3 \u4e0d\u53ef\u538b\u7f29\u6d41\u7684\u7b80\u5316","text":"<p>\\(\\left(\\xi + \\frac{\\eta}{3} \\right) \\nabla (\\nabla \\cdot \\mathbf{v})\\) \u8fd9\u4e00\u9879\u7269\u7406\u610f\u4e49\u540c\u6837\u91cd\u8981\uff0c\u5b83\u4ee3\u8868\u4e86\u7531\u975e\u5747\u5300\u7684\u4f53\u79ef\u53d8\u5316\u6240\u5f15\u8d77\u7684\u7c98\u6027\u529b\u3002\u628a\u5b83\u62c6\u89e3\u5f00\u7406\u89e3\uff1a</p> <ol> <li> <p>\u6838\u5fc3\u7269\u7406\u91cf \\(\\nabla \\cdot \\mathbf{v}\\) \uff1a\u6b63\u5982\u6211\u4eec\u57281.2\u5c0f\u8282\u4e2d\u8ba8\u8bba\u7684\uff0c\u901f\u5ea6\u7684\u6563\u5ea6 \\(\\nabla \\cdot \\mathbf{v}\\)\uff08\u5373\u901f\u5ea6\u68af\u5ea6\u5f20\u91cf\u7684\u8ff9\uff09\u63cf\u8ff0\u4e86\u6d41\u4f53\u5fae\u5143\u4f53\u79ef\u7684\u53d8\u5316\u7387\u3002\u5982\u679c\u5b83\u4e3a\u6b63\uff0c\u6d41\u4f53\u5728\u81a8\u80c0\uff1b\u5982\u679c\u4e3a\u8d1f\uff0c\u6d41\u4f53\u5728\u538b\u7f29\u3002</p> </li> <li> <p>\u9a71\u52a8\u529b \\(\\nabla (\\nabla \\cdot \\mathbf{v})\\) \uff1a\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u4f53\u79ef\u53d8\u5316\u7387\u7684\u68af\u5ea6\u3002\u5b83\u4e0d\u7b49\u4e8e\u96f6\uff0c\u610f\u5473\u7740\u6d41\u4f53\u4e0d\u540c\u533a\u57df\u7684\u81a8\u80c0\u6216\u538b\u7f29\u901f\u7387\u4e0d\u76f8\u540c\u3002</p> </li> </ol> <p>\u60f3\u8c61\u4e00\u4e0b\u6324\u538b\u4e00\u4e2a\u6d77\u7ef5\u3002\u5982\u679c\u4f60\u7528\u4e24\u53ea\u624b\u5747\u5300\u5730\u3001\u540c\u6b65\u5730\u6324\u538b\uff0c\u90a3\u4e48\u6d77\u7ef5\u5404\u5904\u7684\u538b\u7f29\u7387\u662f\u76f8\u540c\u7684\uff0c\u6b64\u65f6 \\(\\nabla (\\nabla \\cdot \\mathbf{v}) \\approx 0\\)\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u53ea\u7528\u4e00\u4e2a\u624b\u6307\u5934\u53bb\u6233\u6d77\u7ef5\u7684\u4e00\u70b9\uff0c\u90a3\u4e48\u6307\u5c16\u4e0b\u65b9\u7684\u6d77\u7ef5\u88ab\u5267\u70c8\u538b\u7f29\uff08\\(\\nabla \\cdot \\mathbf{v}\\) \u662f\u4e00\u4e2a\u5927\u7684\u8d1f\u503c\uff09\uff0c\u800c\u65c1\u8fb9\u7684\u533a\u57df\u5219\u51e0\u4e4e\u6ca1\u6709\u88ab\u538b\u7f29\uff08\\(\\nabla \\cdot \\mathbf{v} \\approx 0\\)\uff09\u3002\u5728\u8fd9\u4e24\u4e2a\u533a\u57df\u7684\u4ea4\u754c\u5904\uff0c\u5c31\u5b58\u5728\u4e00\u4e2a\u5de8\u5927\u7684\u538b\u7f29\u7387\u68af\u5ea6\uff0c\u5373 \\(\\nabla (\\nabla \\cdot \\mathbf{v}) \\neq 0\\)\u3002</p> <ol> <li> <p>\u529b\u7684\u54cd\u5e94 \\((\\xi + \\frac{\\eta}{3}) \\nabla (\\nabla \\cdot \\mathbf{v})\\) \uff1a     \u8fd9\u4e00\u6574\u9879\u5c31\u662f\u6d41\u4f53\u5185\u90e8\u4e3a\u4e86\u62b5\u6297\u8fd9\u79cd\u4e0d\u5747\u5300\u7684\u538b\u7f29/\u81a8\u80c0\u800c\u4ea7\u751f\u7684\u529b\u3002\u5b83\u8bd5\u56fe\u5c06\u538b\u7f29/\u81a8\u80c0\u7684\u6548\u679c\u53d8\u5f97\u66f4\u5e73\u6ed1\u3002\u8fd9\u4e2a\u529b\u7531\u4e24\u90e8\u5206\u8d21\u732e\uff1a</p> <ul> <li> <p>\u4f53\u79ef\u7c98\u5ea6\u8d21\u732e \\(\\xi \\nabla (\\nabla \\cdot \\mathbf{v})\\)\uff1a\u8fd9\u662f\u6700\u4e3b\u8981\u7684\u90e8\u5206\u3002\u4f53\u79ef\u7c98\u5ea6 \\(\\xi\\) \u672c\u8eab\u5c31\u662f\u6d41\u4f53\u62b5\u6297\u4f53\u79ef\u53d8\u5316\u7684\u5185\u5728\u5c5e\u6027\u3002\u56e0\u6b64\uff0c\u5f53\u5b58\u5728\u4f53\u79ef\u53d8\u5316\u7684\u68af\u5ea6\u65f6\uff0c\u4f53\u79ef\u7c98\u6027\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u529b\u6765\u201c\u62b9\u5e73\u201d\u8fd9\u4e2a\u68af\u5ea6\uff0c\u5c31\u50cf\u70ed\u4f20\u5bfc\u4f1a\u62b9\u5e73\u6e29\u5ea6\u68af\u5ea6\u4e00\u6837\u3002</p> </li> <li> <p>\u526a\u5207\u7c98\u5ea6\u8d21\u732e \\(\\frac{\\eta}{3} \\nabla (\\nabla \\cdot \\mathbf{v})\\) \uff1a\u8fd9\u662f\u4e00\u4e2a\u66f4\u5fae\u5999\u7684\u4ea4\u53c9\u6548\u5e94\u3002\u5f53\u6d41\u4f53\u88ab\u4e0d\u5747\u5300\u538b\u7f29\u65f6\uff0c\u6d41\u4f53\u5143\u4e0d\u4ec5\u4f53\u79ef\u6539\u53d8\uff0c\u5176\u5f62\u72b6\u4e5f\u5fc5\u7136\u4f1a\u53d1\u751f\u626d\u66f2\u3002\u56e0\u6b64\uff0c\u62b5\u6297\u5f62\u72b6\u6539\u53d8\u7684\u526a\u5207\u7c98\u5ea6 \\(\\eta\\) \u4e5f\u4f1a\u88ab\u201c\u8c03\u52a8\u201d\u8d77\u6765\uff0c\u8d21\u732e\u4e00\u90e8\u5206\u62b5\u6297\u529b\u3002\\(\\frac{1}{3}\\) \u8fd9\u4e2a\u7cfb\u6570\u662f\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u5f20\u91cf\u5206\u89e3\u7684\u6570\u5b66\u7ed3\u679c\u3002</p> </li> </ul> </li> </ol> <p>\u5982\u679c\u8bf4 \\(\\eta \\nabla^2 \\mathbf{v}\\) \u662f\u7531\u901f\u5ea6\u65b9\u5411\u548c\u5927\u5c0f\u7684\u5dee\u5f02\uff08\u526a\u5207\uff09\u5f15\u8d77\u7684\u6469\u64e6\u529b\uff0c\u90a3\u4e48 \\(\\left(\\xi + \\frac{\\eta}{3} \\right) \\nabla (\\nabla \\cdot \\mathbf{v})\\) \u5c31\u662f\u7531\u4f53\u79ef\u6da8\u7f29\u5feb\u6162\u7684\u5dee\u5f02\uff08\u975e\u5747\u5300\u538b\u7f29/\u81a8\u80c0\uff09\u5f15\u8d77\u7684\u6469\u64e6\u529b\u3002</p> <p>\u5728\u8bb8\u591a\u91cd\u8981\u7684\u7269\u7406\u60c5\u5883\u4e2d\uff0c\u4f8b\u5982\u7edd\u5927\u591a\u6570\u6db2\u4f53\uff08\u5982\u6c34\uff09\u548c\u4f4e\u901f\u6c14\u4f53\u6d41\u52a8\uff08\u901a\u5e38\u9a6c\u8d6b\u6570\u5c0f\u4e8e0.3\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u6d41\u4f53\u7684\u5bc6\u5ea6\u5728\u8ddf\u968f\u6d41\u4f53\u5fae\u5143\u8fd0\u52a8\u65f6\u4fdd\u6301\u4e0d\u53d8\uff0c\u5373 \\(\\frac{D\\rho}{Dt}=0\\)\u3002\u8fd9\u88ab\u79f0\u4e3a\u4e0d\u53ef\u538b\u7f29\u6d41 (incompressible flow) \u3002</p> <p>\u6839\u636e\u8d28\u91cf\u5b88\u6052\u7684\u8fde\u7eed\u6027\u65b9\u7a0b \\(\\frac{\\partial \\rho}{\\partial t} + \\nabla \\cdot (\\rho \\mathbf{v}) = 0\\)\uff0c\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6 \\(\\frac{D\\rho}{Dt} = \\frac{\\partial \\rho}{\\partial t} + \\mathbf{v}\\cdot\\nabla\\rho = 0\\) \u6700\u7ec8\u53ef\u4ee5\u7b80\u5316\u4e3a\u4e00\u4e2a\u5bf9\u901f\u5ea6\u573a\u7684\u3001\u7eaf\u8fd0\u52a8\u5b66\u7684\u7ea6\u675f\uff1a</p> \\[\\nabla \\cdot \\mathbf{v} = 0\\] <p>\u8fd9\u4e2a\u6761\u4ef6\u610f\u5473\u7740\u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u7684\u901f\u5ea6\u573a\u662f\u65e0\u6563\u5ea6 (divergence-free) \u7684\u3002\u5728\u8fd9\u4e2a\u6761\u4ef6\u4e0b\uff0c\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u5f97\u5230\u6781\u5927\u7b80\u5316\u3002\u6240\u6709\u5305\u542b \\(\\nabla \\cdot \\mathbf{v}\\) \u7684\u9879\u90fd\u6d88\u5931\u4e86\uff0c\u7279\u522b\u662f\u4e0e\u4f53\u79ef\u7c98\u5ea6 \\(\\xi\\) \u76f8\u5173\u7684\u9879\uff08\u56e0\u4e3a\u6ca1\u6709\u4f53\u79ef\u53d8\u5316\uff0c\u62b5\u6297\u4f53\u79ef\u53d8\u5316\u7684\u529b\u81ea\u7136\u4e5f\u5c31\u4e0d\u505a\u529f\u4e86\uff09\u3002\u5728\u6700\u91cd\u8981\u7684\u4e0d\u53ef\u538b\u7f29\u6d41\u8fd1\u4f3c\u4e0b (\\(\\nabla \\cdot \\mathbf{v} = 0\\))\uff0c\u8fd9\u4e00\u6574\u9879\u81ea\u7136\u5c31\u4e3a\u96f6\u4e86\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u5728\u8bb8\u591a\u5e94\u7528\u4e2d\u5b83\u88ab\u5ffd\u7565\u7684\u539f\u56e0\u3002\u65b9\u7a0b\u53d8\u4e3a\uff1a</p> \\[\\rho \\left( \\frac{\\partial \\mathbf{v}}{\\partial t} + (\\mathbf{v} \\cdot \\nabla) \\mathbf{v} \\right) = -\\nabla P + \\eta \\nabla^2 \\mathbf{v}\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u4e0e\u8fde\u7eed\u6027\u65b9\u7a0b \\(\\nabla \\cdot \\mathbf{v} = 0\\) \u8054\u7acb\uff0c\u6784\u6210\u4e86\u63cf\u8ff0\u4e0d\u53ef\u538b\u7f29\u7c98\u6027\u6d41\u4f53\u7684\u57fa\u672c\u65b9\u7a0b\u7ec4\uff0c\u662f\u73b0\u4ee3\u8ba1\u7b97\u6d41\u4f53\u52a8\u529b\u5b66\uff08CFD\uff09\u6c42\u89e3\u7684\u7edd\u5927\u591a\u6570\u95ee\u9898\u7684\u57fa\u7840\u3002</p> <p>\u8868\u683c1\uff1a\u7406\u60f3\u6d41\u4f53\u4e0e\u7c98\u6027\u6d41\u4f53\u5bf9\u6bd4</p> <p>\u4e3a\u4e86\u6e05\u6670\u5730\u603b\u7ed3\u8fd9\u8282\u8bfe\u5f15\u5165\u7c98\u6027\u540e\u7684\u6838\u5fc3\u53d8\u5316\uff0c\u4e0b\u8868\u5bf9\u6bd4\u4e86\u7406\u60f3\u6d41\u4f53\u548c\u7c98\u6027\uff08\u725b\u987f\uff09\u6d41\u4f53\u7684\u5173\u952e\u7279\u5f81\u3002 | \u7279\u5f81 | \u7406\u60f3\u6d41\u4f53 (Ideal Fluid) | \u7c98\u6027 (\u725b\u987f) \u6d41\u4f53 (Viscous Newtonian Fluid) | | :--- | :--- | :--- | | \u5185\u90e8\u6469\u64e6 | \u65e0 (inviscid) | \u5b58\u5728 (\u7531\u526a\u5207\u7c98\u5ea6\\(\\eta\\), \u4f53\u79ef\u7c98\u5ea6\\(\\xi\\)\u91cf\u5316) | | \u80fd\u91cf\u8017\u6563 | \u65e0\uff0c\u603b\u673a\u68b0\u80fd\u5b88\u6052 | \u6709\uff0c\u673a\u68b0\u80fd\u56e0\u6469\u64e6\u8017\u6563\u4e3a\u5185\u80fd\uff08\u70ed\uff09 | | \u70ed\u529b\u5b66\u53ef\u9006\u6027 | \u53ef\u9006\u8fc7\u7a0b (Reversible) \uff0c\u7b49\u71b5\u6d41 | \u4e0d\u53ef\u9006\u8fc7\u7a0b (Irreversible) \uff0c\u71b5\u4f1a\u4ea7\u751f | | \u8fb9\u754c\u6761\u4ef6 | \u6ed1\u79fb\u6761\u4ef6 (Slip condition) (\u6d41\u4f53\u53ef\u5e73\u884c\u4e8e\u58c1\u9762\u6d41\u52a8) | \u65e0\u6ed1\u79fb\u6761\u4ef6 (No-slip condition) (\u6d41\u4f53\u901f\u5ea6\u4e0e\u58c1\u9762\u901f\u5ea6\u76f8\u540c) | | \u5e94\u529b\u5f20\u91cf (\\(\\Sigma_{ik}\\)) | \u5404\u5411\u540c\u6027: \\(\\Sigma_{ik} = -P\\delta_{ik}\\) | \u5404\u5411\u5f02\u6027: \\(\\Sigma_{ik} = -P\\delta_{ik} + \\Sigma'_{ik}(\\nabla \\mathbf{v})\\) | | \u52a8\u91cf\u65b9\u7a0b | \u6b27\u62c9\u65b9\u7a0b (Euler Equation) | \u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b (Navier-Stokes Equation) |</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#3","title":"3. \u80fd\u91cf\u5b88\u6052\uff1a\u5f15\u5165\u70ed\u4f20\u5bfc\u4e0e\u5b8c\u5907\u65b9\u7a0b\u7ec4","text":"<p>\u81f3\u6b64\u5df2\u7ecf\u63a8\u5bfc\u51fa\u4e86\u63cf\u8ff0\u771f\u5b9e\u6d41\u4f53\u8d28\u91cf\u5b88\u6052\u7684\u8fde\u7eed\u6027\u65b9\u7a0b\u548c\u52a8\u91cf\u5b88\u6052\u7684\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b \u3002\u7136\u800c\uff0c\u8fd9\u5957\u65b9\u7a0b\u7ec4\u672c\u8eab\u5c1a\u4e0d\u5b8c\u5907\u3002\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u4e2d\u5305\u542b\u4e86\u8bf8\u5982\u5bc6\u5ea6  \\(\\rho\\)\u3001\u538b\u5f3a \\(P\\) \u4ee5\u53ca\u7c98\u6027\u7cfb\u6570 \\(\\eta\\) \u548c \\(\\xi\\) \u7b49\u70ed\u529b\u5b66\u91cf\uff0c\u800c\u8fd9\u4e9b\u91cf\u901a\u5e38\u90fd\u662f\u6e29\u5ea6 \\(T\\) \u7684\u51fd\u6570 \u3002</p> <p>\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u60f3\u8981\u6c42\u89e3\u4e00\u4e2a\u5b58\u5728\u663e\u8457\u6e29\u5ea6\u53d8\u5316\u7684\u6d41\u573a\uff0c\u5c31\u5fc5\u987b\u77e5\u9053\u6e29\u5ea6\u573a\u81ea\u8eab\u7684\u6f14\u5316\u89c4\u5f8b\u3002\u4e3a\u4e86\u201c\u5c01\u95ed\u201d\u6574\u4e2a\u6d41\u4f53\u52a8\u529b\u5b66\u65b9\u7a0b\u7ec4\uff0c\u5fc5\u987b\u5f15\u5165\u6700\u540e\u4e00\u6839\u57fa\u672c\u652f\u67f1\u2014\u2014\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b (Energy Conservation Law) \u3002\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u5c31\u662f\u4e3a\u7c98\u6027\u3001\u53ef\u4f20\u70ed\u7684\u771f\u5b9e\u6d41\u4f53\u5efa\u7acb\u5c40\u57df\u7684\u80fd\u91cf\u5b88\u6052\u65b9\u7a0b\uff0c\u5e76\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5f15\u5165\u6700\u540e\u4e00\u4e2a\u5173\u952e\u7684\u8017\u6563\u673a\u5236\uff1a\u70ed\u4f20\u5bfc (heat conduction) \u3002</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#31","title":"3.1 \u80fd\u91cf\u5b88\u6052\u65b9\u7a0b","text":"<p>\u4e0e\u8d28\u91cf\u548c\u52a8\u91cf\u4e00\u6837\uff0c\u80fd\u91cf\u4e5f\u662f\u4e00\u4e2a\u5b88\u6052\u91cf\u3002\u4e00\u4e2a\u6d41\u4f53\u5143\u7684\u603b\u80fd\u91cf\u7531\u4e24\u90e8\u5206\u6784\u6210\uff1a\u7531\u5b8f\u89c2\u6574\u4f53\u8fd0\u52a8\u8d21\u732e\u7684\u52a8\u80fd (kinetic energy) \uff0c\u548c\u7531\u5fae\u89c2\u5206\u5b50\u65e0\u89c4\u5219\u8fd0\u52a8\u8d21\u732e\u7684\u5185\u80fd (internal energy) \u3002\u56e0\u6b64\uff0c\u5355\u4f4d\u4f53\u79ef\u7684\u603b\u80fd\u91cf\u5bc6\u5ea6\u4e3a\uff1a</p> \\[ e_{\\text{total}} = \\underbrace{\\frac{1}{2} \\rho v^2}_{\\text{\u52a8\u80fd\u5bc6\u5ea6}} + \\underbrace{\\rho \\epsilon}_{\\text{\u5185\u80fd\u5bc6\u5ea6}} \\] <p>\u5176\u4e2d \\(\\epsilon\\) \u662f\u5355\u4f4d\u8d28\u91cf\u7684\u5185\u80fd (internal energy per unit mass) \u3002</p> <p>\u80fd\u91cf\u5b88\u6052\u7684\u5c40\u57df\u5b9a\u5f8b\u540c\u6837\u9075\u5faa\u6211\u4eec\u719f\u6089\u7684\u5b88\u6052\u5f8b\u8303\u5f0f\uff0c\u5373\u80fd\u91cf\u5bc6\u5ea6\u7684\u5c40\u57df\u53d8\u5316\u7387\u7b49\u4e8e\u80fd\u91cf\u6d41\u7684\u8d1f\u6563\u5ea6\uff1a</p> \\[ \\partial_t \\left( \\frac{1}{2} \\rho v^2 + \\rho \\epsilon \\right) = -\\nabla \\cdot \\mathbf{j}^{(\\epsilon)} \\] <p>\u8fd9\u91cc\u7684\u5168\u90e8\u6311\u6218\uff0c\u5c31\u5728\u4e8e\u6b63\u786e\u5730\u8bc6\u522b\u51fa\u6784\u6210\u603b\u80fd\u91cf\u6d41\u5bc6\u5ea6\u77e2\u91cf (total energy flux density vector) \\(\\mathbf{j}^{(\\epsilon)}\\) \u7684\u6240\u6709\u7269\u7406\u673a\u5236\u3002</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#32","title":"3.2 \u80fd\u91cf\u6d41\u5bc6\u5ea6\u77e2\u91cf\u7684\u63a8\u5bfc","text":"<p>\u80fd\u91cf\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u8de8\u8d8a\u4e00\u4e2a\u5047\u60f3\u7684\u8868\u9762\uff0c\u8fd9\u4e9b\u65b9\u5f0f\u5171\u540c\u6784\u6210\u4e86\u603b\u80fd\u91cf\u6d41 \\(\\mathbf{j}^{(\\epsilon)}\\)\uff1a</p> <ol> <li> <p>\u5bf9\u6d41\u8f93\u8fd0 (Convective Transport) : \u80fd\u91cf\u968f\u7740\u6d41\u4f53\u7684\u5b8f\u89c2\u8fd0\u52a8\u800c\u88ab\u643a\u5e26\u3002\u8fd9\u662f\u6700\u76f4\u89c2\u7684\u80fd\u91cf\u4f20\u9012\u65b9\u5f0f\uff0c\u5373\u8d28\u91cf\u6d41\\(\\rho\\mathbf{v}\\)\u643a\u5e26\u7740\u5355\u4f4d\u8d28\u91cf\u6240\u5177\u6709\u7684\u80fd\u91cf\uff08\u52a8\u80fd\\(\\frac{1}{2}v^2\\)\u548c\u5185\u80fd\\(\\epsilon\\)\uff09\u8fdb\u884c\u8f93\u8fd0\u3002\u5176\u901a\u91cf\u4e3a\uff1a     $$     \\mathbf{j}^{(\\text{conv})} = \\rho \\mathbf{v} \\left( \\frac{1}{2} v^2 + \\epsilon \\right)     $$</p> </li> <li> <p>\u673a\u68b0\u529f (Mechanical Work) : \u4f5c\u7528\u5728\u6d41\u4f53\u8868\u9762\u7684\u529b\uff08\u538b\u529b\u548c\u7c98\u6027\u529b\uff09\u5bf9\u6d41\u4f53\u505a\u529f\uff0c\u8fd9\u4e5f\u662f\u4e00\u79cd\u80fd\u91cf\u4f20\u9012\u7684\u65b9\u5f0f\u3002\u5355\u4f4d\u9762\u79ef\u7684\u529f\u7387\u7b49\u4e8e\u5e94\u529b\u77e2\u91cf\\((\\Sigma \\cdot \\mathbf{n})_i = \\Sigma_{ik}n_k\\)\u4e0e\u901f\u5ea6\u77e2\u91cf\\(v_i\\)\u7684\u70b9\u79ef\u3002\u56e0\u6b64\uff0c\u7531\u603b\u5e94\u529b\u5f20\u91cf\\(\\Sigma\\)\u5f15\u8d77\u7684\u80fd\u91cf\u6d41\u5bc6\u5ea6\u77e2\u91cf\u4e3a\uff1a     $$     \\mathbf{j}^{(\\text{work})} = \\mathbf{v} \\cdot (-\\Sigma) = \\mathbf{v} \\cdot (P\\mathbf{I} - \\Sigma')     $$     \u8fd9\u91cc\u7684\u8d1f\u53f7\u662f\u56e0\u4e3a\u6211\u4eec\u8003\u8651\u7684\u662f\u5916\u754c\u5bf9\u6d41\u4f53\u5143\u505a\u529f\u6240\u5bfc\u81f4\u7684\u80fd\u91cf\u6d41\u5165\u3002\u5b83\u5305\u542b\u4e86\u538b\u529b\u505a\u7684\u529f\u548c\u7c98\u6027\u529b\u505a\u7684\u529f\u4e24\u90e8\u5206\u3002</p> </li> <li> <p>\u70ed\u4f20\u5bfc (Heat Conduction) : \u8fd9\u662f\u72ec\u7acb\u4e8e\u5b8f\u89c2\u8fd0\u52a8\u7684\u3001\u7eaf\u7cb9\u7531\u5fae\u89c2\u5206\u5b50\u78b0\u649e\u4f20\u9012\u80fd\u91cf\u7684\u65b9\u5f0f\u3002\u6211\u4eec\u5728\u6b64\u5f15\u5165\u6700\u540e\u4e00\u4e2a\u91cd\u8981\u7684\u672c\u6784\u5173\u7cfb \u2014\u2014\u5085\u91cc\u53f6\u70ed\u4f20\u5bfc\u5b9a\u5f8b (Fourier's Law) \u3002\u8be5\u5b9a\u5f8b\u6307\u51fa\uff0c\u70ed\u6d41\u5bc6\u5ea6\u77e2\u91cf \\(\\mathbf{j}^{(q)}\\) \u4e0e\u6e29\u5ea6\u68af\u5ea6\u7684\u65b9\u5411\u76f8\u53cd\uff0c\u5927\u5c0f\u6210\u6b63\u6bd4\uff1a     $$     \\mathbf{j}^{(q)} = -\\kappa \\nabla T     $$     \u5176\u4e2d\uff0c\u6bd4\u4f8b\u7cfb\u6570 \\(\\kappa\\) \u88ab\u79f0\u4e3a\u70ed\u5bfc\u7387 (Thermal Conductivity) \uff0c\u5b83\u662f\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u6750\u6599\u6027\u8d28\u7684\u8f93\u8fd0\u7cfb\u6570\u3002\u4e0e\\(\\eta\\)\u548c\\(\\xi\\)\u4e00\u6837\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u6602\u8428\u683c\u7cfb\u6570 (Onsager coefficient) \uff0c\u91cf\u5316\u4e86\u6750\u6599\u4f20\u5bfc\u70ed\u91cf\u7684\u80fd\u529b\u3002</p> </li> </ol> <p>\u5c06\u4ee5\u4e0a\u4e09\u9879\u5408\u5e76\uff0c\u6211\u4eec\u5f97\u5230\u603b\u80fd\u91cf\u6d41\u5bc6\u5ea6\u77e2\u91cf\u7684\u5b8c\u6574\u8868\u8fbe\u5f0f\u3002\u4e3a\u4e86\u5f97\u5230\u4e00\u4e2a\u66f4\u7269\u7406\u3001\u66f4\u7b80\u6d01\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u5bf9\u6d41\u9879\u548c\u538b\u529b\u529f\u9879\u53ef\u4ee5\u7ec4\u5408\u5728\u4e00\u8d77\uff1a\\(\\rho\\mathbf{v}\\epsilon + P\\mathbf{v} = \\rho\\mathbf{v}(\\epsilon + P/\\rho)\\)\u3002\u62ec\u53f7\u4e2d\u7684\u91cf\u6b63\u662f\u70ed\u529b\u5b66\u4e2d\u4e00\u4e2a\u91cd\u8981\u7684\u72b6\u6001\u51fd\u6570\u2014\u2014\u5355\u4f4d\u8d28\u91cf\u7684\u7113 (enthalpy per unit mass) \\(h = \\epsilon + P/\\rho\\)\u3002</p> <p>\u7113\u7684\u7269\u7406\u610f\u4e49\uff1a\u7113\u4e0d\u4ec5\u5305\u542b\u4e86\u6d41\u4f53\u5143\u7684\u5185\u80fd\\(\\epsilon\\)\uff0c\u8fd8\u5305\u542b\u4e86\u5c06\u5176\u201c\u63a8\u5165\u201d\u5468\u56f4\u6709\u538b\u5f3a\u73af\u5883\u6240\u5fc5\u987b\u505a\u7684\u6d41\u52a8\u529f (flow work) \\(P/\\rho\\)\u3002\u56e0\u6b64\uff0c\u5f53\u6d41\u4f53\u6d41\u52a8\u65f6\uff0c\u5b83\u643a\u5e26\u7684\u80fd\u91cf\u5e94\u8be5\u662f\u7113\uff0c\u800c\u975e\u4ec5\u4ec5\u662f\u5185\u80fd\u3002</p> <p>\u6700\u7ec8\uff0c\u6211\u4eec\u5f97\u5230\u603b\u80fd\u91cf\u6d41\u5bc6\u5ea6\u77e2\u91cf\u7684\u6700\u7ec8\u8868\u8fbe\u5f0f\uff1a</p> \\[\\mathbf{j}^{(\\epsilon)} = \\underbrace{\\rho \\mathbf{v} \\left( \\frac{1}{2} v^2 + h \\right)}_{\\text{\u5bf9\u6d41 (\u542b\u6d41\u52a8\u529f)}} + \\underbrace{- \\mathbf{v} \\cdot \\Sigma'}_{\\text{\u7c98\u6027\u529b\u505a\u529f}} + \\underbrace{- \\kappa \\nabla T}_{\\text{\u70ed\u4f20\u5bfc}}\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u6e05\u6670\u5730\u5c55\u793a\u4e86\u80fd\u91cf\u8f93\u8fd0\u7684\u4e09\u4e2a\u7269\u7406\u6e20\u9053\uff1a\u4f34\u968f\u8d28\u91cf\u6d41\u52a8\u7684\u80fd\u91cf\u5bf9\u6d41\u3001\u7c98\u6027\u529b\u505a\u529f\u4ee5\u53ca\u7531\u6e29\u5ea6\u68af\u5ea6\u9a71\u52a8\u7684\u70ed\u4f20\u5bfc\u3002</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#33-python-iii","title":"3.3 Python \u6a21\u62df III\uff1a\u4e8c\u7ef4\u70ed\u4f20\u5bfc","text":"<p>\u5085\u91cc\u53f6\u5b9a\u5f8b\u6240\u63cf\u8ff0\u7684\u70ed\u6269\u6563\u8fc7\u7a0b\uff0c\u5728\u6570\u5b66\u4e0a\u4e0e\u4e0a\u4e00\u8282\u6da1\u65cb\u8870\u51cf\u4e2d\u7c98\u6027\u5bfc\u81f4\u7684\u52a8\u91cf\u6269\u6563\u8fc7\u7a0b\u975e\u5e38\u76f8\u4f3c\u3002\u4e3a\u4e86\u76f4\u89c2\u7406\u89e3\u70ed\u4f20\u5bfc\uff0c\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u677f\u4e0a\u7684\u70ed\u91cf\u6269\u6563\u8fc7\u7a0b\u3002\u6211\u4eec\u8bbe\u5b9a\u4e00\u4e2a\u521d\u59cb\u7684\u201c\u70ed\u70b9\u201d\uff0c\u7136\u540e\u89c2\u5bdf\u5b83\u5982\u4f55\u968f\u7740\u65f6\u95f4\u6f14\u5316\uff0c\u6700\u7ec8\u4f7f\u5f97\u6574\u4e2a\u5e73\u677f\u7684\u6e29\u5ea6\u8d8b\u4e8e\u5747\u5300\u3002</p> <p>\u7269\u7406\u8fc7\u7a0b:</p> <ol> <li> <p>\u9a71\u52a8\u529b : \u521d\u59cb\u72b6\u6001\u4e0b\uff0c\u70ed\u70b9\u4e0e\u51b7\u533a\u4e4b\u95f4\u5de8\u5927\u7684\u6e29\u5ea6\u68af\u5ea6\u662f\u9a71\u52a8\u6574\u4e2a\u8fc7\u7a0b\u7684\u201c\u70ed\u529b\u5b66\u529b\u201d\u3002</p> </li> <li> <p>\u70ed\u901a\u91cf : \u6839\u636e\u5085\u91cc\u53f6\u5b9a\u5f8b \\(\\mathbf{j}^{(q)} = -\\kappa \\nabla T\\)\uff0c\u8fd9\u4e2a\u68af\u5ea6\u4ea7\u751f\u4e86\u4e00\u4e2a\u4ece\u9ad8\u6e29\u533a\u6307\u5411\u4f4e\u6e29\u533a\u7684\u70ed\u901a\u91cf (heat flux) \uff0c\u5c06\u80fd\u91cf\u4ece\u4e2d\u5fc3\u5411\u5916\u8f93\u8fd0\u3002</p> </li> <li> <p>\u6269\u6563\u8fc7\u7a0b : \u8d1f\u8d23\u8fd9\u4e00\u8fc7\u7a0b\u7684\u7269\u7406\u53c2\u6570\u662f\u70ed\u5bfc\u7387 \\(\\kappa\\) \uff08\u5728\u4ee3\u7801\u4e2d\u4f53\u73b0\u4e3a\u70ed\u6269\u6563\u7cfb\u6570D\uff09\u3002\\(\\kappa\\) \u8d8a\u5927\uff0c\u8fd9\u4e2a\u6269\u6563\u8fc7\u7a0b\u5c31\u8d8a\u5feb\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5728\u6570\u5b66\u4e0a\u7531\u70ed\u4f20\u5bfc\u65b9\u7a0b \\(\\partial_t T \\propto \\nabla^2 T\\) \u63cf\u8ff0\uff0c\u5176\u4e2d\u7684\u62c9\u666e\u62c9\u65af\u7b97\u5b50\\(\\nabla^2\\)\u6b63\u662f\u201c\u6269\u6563\u201d\u7684\u6570\u5b66\u6807\u5fd7\u3002</p> </li> <li> <p>\u4e0d\u53ef\u9006\u6027 : \u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4e0d\u53ef\u9006\u8fc7\u7a0b \u3002\u6211\u4eec\u4ece\u672a\u5728\u73b0\u5b9e\u4e2d\u89c1\u8fc7\u4e00\u4e2a\u6e29\u5ea6\u5747\u5300\u7684\u5e73\u677f\u81ea\u53d1\u5730\u5c06\u70ed\u91cf\u805a\u96c6\u5230\u4e2d\u5fc3\u5f62\u6210\u4e00\u4e2a\u70ed\u70b9\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u603b\u662f\u5355\u5411\u5730\u671d\u7740\u6d88\u9664\u6e29\u5ea6\u68af\u5ea6\u3001\u4f7f\u7cfb\u7edf\u71b5\u589e\u5927\u7684\u65b9\u5411\u8fdb\u884c\uff0c\u8fd9\u4e3a\u6211\u4eec\u4e0b\u4e00\u8282\u8ba8\u8bba\u71b5\u5e73\u8861\u5960\u5b9a\u4e86\u76f4\u89c2\u57fa\u7840\u3002</p> </li> </ol> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\n\n# --- Simulation Parameters ---\nplate_size = 50       # Plate size (NxN grid points)\ndx = 0.1              # Spatial step size\nD = 4.0               # Thermal diffusivity (mm^2/s)\nT_cool = 300.0        # Boundary and initial low temperature\nT_hot = 700.0         # Initial hot spot temperature\n\n# Time step must satisfy stability condition\ndt = dx**2 / (4 * D)\n\n# --- Initialize Temperature Field ---\nu = np.full((plate_size, plate_size), T_cool)\n\n# Set initial hot spot (e.g., a circular region)\nradius = 5\nfor i in range(plate_size):\n    for j in range(plate_size):\n        if (i-plate_size/2)**2 + (j-plate_size/2)**2 &lt; radius**2:\n            u[i, j] = T_hot\n\n# Record temperature field history for animation\nu_history = [u.copy()]\nnum_steps = 200\n\n# --- Time Evolution (Finite Difference Method) ---\ndef update(u_prev):\n    u_new = u_prev.copy()\n    # Use NumPy slicing operations to accelerate computation\n    u_new[1:-1, 1:-1] = u_prev[1:-1, 1:-1] + D * dt / dx**2 * (\n        u_prev[2:, 1:-1] - 2 * u_prev[1:-1, 1:-1] + u_prev[:-2, 1:-1] +\n        u_prev[1:-1, 2:] - 2 * u_prev[1:-1, 1:-1] + u_prev[1:-1, :-2]\n    )\n    # Maintain boundary conditions (fixed temperature at boundaries)\n    u_new[0, :] = T_cool\n    u_new[-1, :] = T_cool\n    u_new[:, 0] = T_cool\n    u_new[:, -1] = T_cool\n    return u_new\n\nfor _ in range(num_steps):\n    u = update(u)\n    u_history.append(u.copy())\n\n# --- Animation Creation ---\nfig, ax = plt.subplots(figsize=(7, 7))\n\ndef animate(k):\n    ax.clear()\n    im = ax.imshow(u_history[k], cmap='hot', vmin=T_cool, vmax=T_hot, interpolation='bilinear')\n    ax.set_title(f\"Time t = {k * dt:.2f} s\")\n    # Correctly call set_xticks and set_yticks\n    ax.set_xticks([])\n    ax.set_yticks([])\n    return [im]\n\n# Create animation\nani = animation.FuncAnimation(fig, animate, frames=len(u_history), interval=50, blit=True)\n\n# Add colorbar\ncax = fig.add_axes([ax.get_position().x1+0.01, ax.get_position().y0, 0.02, ax.get_position().height])\nfig.colorbar(ax.imshow(u, cmap='hot', vmin=T_cool, vmax=T_hot), cax=cax, label='Temperature (K)')\n\n# Save the animation as GIF\nani.save('heat_diffusion.gif', writer='pillow', fps=15)\n\n# Show the animation\nplt.show()\n</code></pre> <p></p> <p>\u5706\u5f62\u201c\u70ed\u70b9\u201d\uff08\u4eae\u9ec4\u8272\uff0c\u6e29\u5ea6700K\uff09\u4f4d\u4e8e\u5e73\u677f\u4e2d\u5fc3\uff0c\u5468\u56f4\u662f\u4f4e\u6e29\u533a\u57df\uff08\u6df1\u7ea2\u8272\uff0c\u6e29\u5ea6300K\uff09\u3002\u8fd9\u4ee3\u8868\u4e86\u4e00\u4e2a\u5177\u6709\u6781\u5927\u6e29\u5ea6\u68af\u5ea6 (\\(\\nabla T\\)) \u7684\u9ad8\u5ea6\u975e\u5e73\u8861\u72b6\u6001\u3002\u968f\u7740\u65f6\u95f4\u63a8\u79fb\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u4e24\u4e2a\u540c\u65f6\u53d1\u751f\u7684\u8fc7\u7a0b\uff1a</p> <p>\u4e2d\u5fc3\u4eae\u9ec4\u8272\u533a\u57df\u7684\u6e29\u5ea6\u4e0d\u65ad\u4e0b\u964d\uff0c\u989c\u8272\u53d8\u6697\uff0c\u5176\u8fb9\u754c\u4e5f\u4ece\u6e05\u6670\u53d8\u5f97\u6a21\u7cca\u3002\u70ed\u70b9\u5468\u56f4\u7684\u4f4e\u6e29\u533a\u57df\u5f00\u59cb\u5347\u6e29\uff0c\u989c\u8272\u9010\u6e10\u53d8\u4eae\u3002\u5728\u6a21\u62df\u7684\u6700\u540e\uff0c\u6574\u4e2a\u5e73\u677f\u7684\u989c\u8272\u8d8b\u4e8e\u5747\u5300\u7684\u6a59\u8272\uff0c\u4ee3\u8868\u7cfb\u7edf\u8fbe\u5230\u4e86\u4e00\u4e2a\u6e29\u5ea6\u5904\u5904\u76f8\u7b49\u7684\u70ed\u529b\u5b66\u5e73\u8861\u6001\u3002</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#4","title":"4. \u71b5\u5e73\u8861\u65b9\u7a0b\u4e0e\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b","text":"<p>\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u4e3a\u8d28\u91cf\u3001\u52a8\u91cf\u548c\u80fd\u91cf\u8fd9\u4e09\u5927\u57fa\u672c\u5b88\u6052\u91cf\u5efa\u7acb\u4e86\u5404\u81ea\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u65b9\u7a0b\u867d\u7136\u63cf\u8ff0\u4e86\u7269\u7406\u91cf\u5982\u4f55\u5b88\u6052\uff0c\u5374\u5c1a\u672a\u660e\u786e\u4f53\u73b0\u7269\u7406\u8fc7\u7a0b\u7684\u6f14\u5316\u65b9\u5411\u3002\u662f\u4ec0\u4e48\u51b3\u5b9a\u4e86\u70ed\u91cf\u603b\u662f\u4ece\u9ad8\u6e29\u6d41\u5411\u4f4e\u6e29\uff0c\u800c\u4e0d\u662f\u76f8\u53cd\uff1f\u662f\u4ec0\u4e48\u963b\u6b62\u4e86\u4e00\u676f\u9759\u6b62\u7684\u5496\u5561\u81ea\u53d1\u5730\u65cb\u8f6c\u8d77\u6765\uff1f\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\u7684\u94a5\u5319\uff0c\u5728\u4e8e\u7269\u7406\u5b66\u4e2d\u6700\u6df1\u523b\u7684\u539f\u7406\u4e4b\u4e00\uff1a\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b (Second Law of Thermodynamics) \u3002</p> <p>\u8fd9\u8282\u8bfe\u7684\u6700\u9ad8\u6f6e\u5728\u4e8e\u5c06\u6d41\u4f53\u52a8\u529b\u5b66\u5b88\u6052\u5f8b\u4e0e\u70ed\u529b\u5b66\u57fa\u672c\u5b9a\u5f8b\u8054\u7cfb\u8d77\u6765\uff0c\u63a8\u5bfc\u51fa\u4e00\u4e2a\u5173\u4e8e\u71b5 (entropy) \u7684\u5c40\u57df\u5e73\u8861\u65b9\u7a0b\uff0c\u5e76\u8bc1\u660e\uff0c\u6b63\u662f\u5f15\u5165\u7684\u7c98\u6027\u548c\u70ed\u4f20\u5bfc\u8fd9\u4e24\u4e2a\u8017\u6563\u673a\u5236\uff0c\u5145\u5f53\u4e86\u71b5\u7684\u201c\u6e90\u6cc9\u201d\uff0c\u4ece\u800c\u4e3a\u52a8\u529b\u5b66\u65b9\u7a0b\u8d4b\u4e88\u4e86\u4e0d\u53ef\u9006\u7684\u201c\u65f6\u95f4\u4e4b\u7bad (arrow of time)\u201d \u3002</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#41","title":"4.1 \u71b5\u5e73\u8861\u65b9\u7a0b\uff1a\u4e00\u4e2a\u5e26\u6709\u201c\u6e90\u201d\u7684\u5b88\u6052\u5f8b","text":"<p>\u71b5\uff0c\u4e0d\u50cf\u8d28\u91cf\u6216\u80fd\u91cf\uff0c\u4e0d\u662f\u4e00\u4e2a\u7edd\u5bf9\u7684\u5b88\u6052\u91cf\u3002\u56e0\u6b64\uff0c\u4e0d\u80fd\u7b80\u5355\u5730\u4e3a\u5176\u5199\u4e0b\u4e00\u4e2a\u6807\u51c6\u7684\u5b88\u6052\u65b9\u7a0b\u3002\u76f8\u53cd\uff0c\u5fc5\u987b\u4ece\u5df2\u77e5\u7684\u80fd\u91cf\u5b88\u6052\u548c\u8d28\u91cf\u5b88\u6052\u65b9\u7a0b\u51fa\u53d1\uff0c\u7ed3\u5408\u70ed\u529b\u5b66\u57fa\u672c\u5173\u7cfb\uff08\u5982\u5409\u5e03\u65af\u5173\u7cfb \\(Tds = d\\epsilon + Pdv_s\\)\uff09\uff0c\u901a\u8fc7\u4e25\u683c\u7684\u6570\u5b66\u63a8\u5bfc\u6765\u5f97\u5230\u71b5\u7684\u6f14\u5316\u65b9\u7a0b\u3002</p> <p>\u8fd9\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\uff08\u867d\u7136\u4ee3\u6570\u4e0a\u7e41\u7410\uff0c\u4f46\u903b\u8f91\u4e0a\u662f\u76f4\u63a5\u7684\uff09\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u63cf\u8ff0\u5355\u4f4d\u4f53\u79ef\u71b5\u5bc6\u5ea6 \\(\\rho s\\) \u6f14\u5316\u7684\u5c40\u57df\u5e73\u8861\u65b9\u7a0b\u3002\u5176\u6700\u7ec8\u5f62\u5f0f\u4e3a\uff1a</p> \\[\\partial_t (\\rho s) + \\nabla \\cdot \\mathbf{j}^{(s)} = \\sigma^{(s)}\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7ed3\u6784\u975e\u5e38\u6df1\u523b\u3002\u5b83\u7684\u5de6\u4fa7\u5f62\u5f0f\u4e0e\u4e4b\u524d\u9047\u5230\u7684\u5b88\u6052\u5f8b\u5b8c\u5168\u4e00\u6837\uff0c\u63cf\u8ff0\u4e86\u71b5\u5bc6\u5ea6\u7684\u5c40\u57df\u53d8\u5316\u6765\u81ea\u71b5\u7684\u51c0\u6d41\u5165\u3002\u7136\u800c\uff0c\u5b83\u7684\u53f3\u4fa7\u4e0d\u4e3a\u96f6\u3002\u8fd9\u4e2a\u71b5\u4ea7\u751f\u7387 (Entropy Production Rate) \\(\\sigma^{(s)}\\) \u4e0d\u662f\u6765\u81ea\u7cfb\u7edf\u5916\u90e8\u7684\u6e90\uff0c\u800c\u662f\u7531\u4e8e\u7cfb\u7edf\u5185\u90e8\u7684\u4e0d\u53ef\u9006\u8fc7\u7a0b\u201c\u51ed\u7a7a\u521b\u9020\u201d\u51fa\u6765\u7684\u3002\u5bf9\u4e8e\u7406\u60f3\u6d41\u4f53\uff0c\\(\\sigma^{(s)}=0\\)\uff0c\u71b5\u5728\u8ddf\u968f\u6d41\u4f53\u8fd0\u52a8\u65f6\u5b88\u6052\uff1b\u800c\u5bf9\u4e8e\u771f\u5b9e\u6d41\u4f53\uff0c\u6b63\u662f\u8fd9\u4e2a\u6e90\u9879\uff0c\u4ee3\u8868\u4e86\u4e0d\u53ef\u9006\u6027\u3002</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#mathbfjs","title":"\u71b5\u6d41\u5bc6\u5ea6 (\\(\\mathbf{j}^{(s)}\\)) \u7684\u7269\u7406\u6784\u6210","text":"<p>\u63a8\u5bfc\u8868\u660e\uff0c\u71b5\u6d41\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> \\[\\mathbf{j}^{(s)} = \\rho s \\mathbf{v} + \\frac{\\mathbf{j}^{(q)}}{T}\\] <ul> <li> <p>\u5bf9\u6d41\u9879 \\(\\rho s \\mathbf{v}\\): \u8fd9\u662f\u6700\u76f4\u89c2\u7684\u90e8\u5206\uff0c\u4ee3\u8868\u71b5\u968f\u7740\u6d41\u4f53\u7684\u5b8f\u89c2\u8fd0\u52a8\uff08\u8d28\u91cf\u6d41 \\(\\rho\\mathbf{v}\\)\uff09\u800c\u88ab\u643a\u5e26\u3002</p> </li> <li> <p>\u70ed\u6d41\u9879 \\(\\mathbf{j}^{(q)}/T\\): \u8fd9\u4e00\u9879\u5219\u66f4\u4e3a\u6df1\u523b\uff0c\u5b83\u6e90\u4e8e\u70ed\u529b\u5b66\u5b9a\u4e49 \\(dS = \\delta Q_{rev}/T\\)\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u70ed\u6d41 (\\(\\mathbf{j}^{(q)}\\)) \u672c\u8d28\u4e0a\u662f\u71b5\u7684\u4e00\u79cd\u8f93\u8fd0\u65b9\u5f0f\u3002\u5728\u6e29\u5ea6\u4e3aT\u7684\u73af\u5883\u4e2d\uff0c\u4e00\u80a1\u80fd\u91cf\u6d41 \\(\\mathbf{j}^{(q)}\\) \u5bf9\u5e94\u7740\u4e00\u80a1\u71b5\u6d41 \\(\\mathbf{j}^{(q)}/T\\)\u3002</p> </li> </ul>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#42","title":"4.2 \u71b5\u4ea7\u751f\u7684\u7ed3\u6784\uff1a\u6602\u8428\u683c\u7406\u8bba\u7684\u4f53\u73b0","text":"<p>\u73b0\u5728\u6765\u770b\u71b5\u4ea7\u751f\u7387 \\(\\sigma^{(s)}\\)\uff0c\u5b83\u662f\u4e0d\u53ef\u9006\u6027\u7684\u6838\u5fc3\u3002\u5176\u8868\u8fbe\u5f0f\u4e3a\uff1a</p> \\[\\sigma^{(s)} = \\mathbf{j}^{(q)} \\cdot \\nabla\\left(\\frac{1}{T}\\right) + \\frac{1}{T} \\sum_{i,k} \\Sigma_{ik}' (\\partial_k v_i)\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u5e76\u975e\u4e00\u5806\u6742\u4e71\u7684\u9879\uff0c\u5b83\u5370\u8bc1\u4e86\u7b2c24\u8bb2\u4e2d\u4ece\u62bd\u8c61\u5bf9\u79f0\u6027\u539f\u7406\u51fa\u53d1\u5efa\u7acb\u7684\u6602\u8428\u683c\u7406\u8bba (Onsager's Theory) \u3002\u8be5\u7406\u8bba\u9884\u8a00\uff0c\u71b5\u4ea7\u751f\u7387\u5fc5\u7136\u662f\u4e00\u7cfb\u5217\u201c\u70ed\u529b\u5b66\u901a\u91cf (thermodynamic fluxes) \u201d\u4e0e\u5b83\u4eec\u5171\u8f6d\u7684\u201c\u70ed\u529b\u5b66\u529b (thermodynamic forces) \u201d\u7684\u4e58\u79ef\u4e4b\u548c\u3002</p> <p>\u6d41\u4f53\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u4e24\u5bf9\u901a\u91cf-\u529b\u5173\u7cfb\u6e05\u6670\u53ef\u89c1\uff1a</p> \u4e0d\u53ef\u9006\u8fc7\u7a0b \u70ed\u529b\u5b66\u901a\u91cf (Flux - \u7cfb\u7edf\u7684\u54cd\u5e94) \u70ed\u529b\u5b66\u529b (Force - \u504f\u79bb\u5e73\u8861\u7684\u9a71\u52a8) \u70ed\u4f20\u5bfc \u70ed\u6d41\u5bc6\u5ea6 \\(\\mathbf{j}^{(q)}\\) \u6e29\u5ea6\u7684\u5012\u6570\u68af\u5ea6 \\(\\nabla(1/T) = -\\frac{1}{T^2}\\nabla T\\) \u7c98\u6027\u8017\u6563 \u7c98\u6027\u5e94\u529b\u5f20\u91cf \\(\\Sigma_{ik}'\\) \u901f\u5ea6\u68af\u5ea6\u5f20\u91cf (\u4e0e\u6e29\u5ea6\u52a0\u6743) \\(\\frac{1}{T}\\partial_k v_i\\) <p>\u4ece\u5177\u4f53\u7684\u3001\u57fa\u4e8e\u725b\u987f\u529b\u5b66\u7684\u6d41\u4f53\u52a8\u529b\u5b66\u65b9\u7a0b\u51fa\u53d1\uff0c\u6700\u7ec8\u63a8\u5bfc\u51fa\u7684\u71b5\u4ea7\u751f\u5f62\u5f0f\uff0c\u4e0e\u4ece\u975e\u5e38\u666e\u9002\u7684\u3001\u57fa\u4e8e\u7edf\u8ba1\u548c\u5bf9\u79f0\u6027\u7684\u6602\u8428\u683c\u7406\u8bba\u6240\u9884\u8a00\u7684\u5f62\u5f0f\u5b8c\u5168\u543b\u5408\u3002\u8fd9\u4e0d\u4ec5\u8bc1\u660e\u4e86\u7406\u8bba\u7684\u81ea\u6d3d\u6027\uff0c\u4e5f\u4e3a\u7406\u89e3\u6240\u6709\u4e0d\u53ef\u9006\u8fc7\u7a0b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u6846\u67b6\u3002</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#43","title":"4.3 \u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u7ea6\u675f","text":"<p>\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u5c40\u57df\u8868\u8ff0\u662f\uff1a\u5bf9\u4e8e\u4efb\u4f55\u81ea\u53d1\u7684\u7269\u7406\u8fc7\u7a0b\uff0c\u71b5\u53ea\u80fd\u589e\u52a0\uff0c\u4e0d\u80fd\u51cf\u5c11\u3002\u8fd9\u610f\u5473\u7740\u71b5\u4ea7\u751f\u7387\u5fc5\u987b\u662f\u975e\u8d1f\u7684 (non-negative) \u3002</p> \\[\\sigma^{(s)} \\geq 0\\] <p>\u8fd9\u4e2a\u770b\u4f3c\u7b80\u5355\u7684\u7269\u7406\u539f\u7406\uff0c\u4e3a\u4e4b\u524d\u552f\u8c61\u5f15\u5165\u7684\u8f93\u8fd0\u7cfb\u6570\u63d0\u4f9b\u4e86\u6781\u5176\u5f3a\u6709\u529b\u7684\u6570\u5b66\u7ea6\u675f\u3002\u5c06\u672c\u6784\u5173\u7cfb\uff08\u5085\u91cc\u53f6\u5b9a\u5f8b \\(\\mathbf{j}^{(q)}=-\\kappa\\nabla T\\) \u548c\u725b\u987f\u7c98\u6027\u5b9a\u5f8b\uff09\u4ee3\u5165\u71b5\u4ea7\u751f\u7387\u7684\u8868\u8fbe\u5f0f\u4e2d\uff0c\u7ecf\u8fc7\u6574\u7406\u5f97\u5230\uff1a</p> \\[\\sigma^{(s)} = \\frac{\\kappa (\\nabla T)^2}{T^2} + \\frac{\\eta}{2T} \\left( \\partial_i v_k + \\partial_k v_i - \\frac{2}{3} \\delta_{ik} \\partial_\\ell v_\\ell \\right)^2 + \\frac{\\xi}{T} (\\nabla \\cdot \\mathbf{v})^2\\] <p>\u89c2\u5bdf\u4e0a\u5f0f\uff0c\u53f3\u8fb9\u7684\u6bcf\u4e00\u9879\u90fd\u662f\u4e00\u4e2a\u68af\u5ea6\u9879\u7684\u5e73\u65b9\uff08\u6216\u5f20\u91cf\u7684\u53cc\u70b9\u79ef\u5e73\u65b9\uff09\uff0c\u56e0\u6b64\u5b83\u4eec\u5728\u6570\u5b66\u4e0a\u672c\u8eab\u90fd\u662f\u975e\u8d1f\u7684\u3002\u4e3a\u4e86\u4fdd\u8bc1\u5bf9\u4e8e\u4efb\u4f55\u53ef\u80fd\u7684\u6d41\u4f53\u6d41\u52a8\uff08\u5373\u5bf9\u4e8e\u4efb\u610f\u7684\u901f\u5ea6\u573a\u548c\u6e29\u5ea6\u573a\uff09\uff0c\\(\\sigma^{(s)} \\geq 0\\) \u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u90fd\u6052\u6210\u7acb\uff0c\u552f\u4e00\u7684\u53ef\u80fd\u6027\u5c31\u662f\u5404\u9879\u7684\u7cfb\u6570\u672c\u8eab\u5fc5\u987b\u662f\u975e\u8d1f\u7684\u3002</p> <p>\u7531\u6b64\uff0c\u4ece\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u8fd9\u4e2a\u7b2c\u4e00\u6027\u539f\u7406\u51fa\u53d1\uff0c\u4e25\u683c\u8bc1\u660e\u4e86\u6240\u6709\u8f93\u8fd0\u7cfb\u6570\u5fc5\u987b\u6ee1\u8db3\uff1a</p> \\[\\eta \\geq 0, \\quad \\xi \\geq 0, \\quad \\kappa \\geq 0\\] <p>\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u7cfb\u6570\u4e3a\u8d1f\uff0c\u5c31\u610f\u5473\u7740\u5b58\u5728\u67d0\u79cd\u6d41\u52a8\u65b9\u5f0f\u53ef\u4ee5\u4f7f\u7cfb\u7edf\u81ea\u53d1\u5730\u51cf\u5c11\u71b5\uff0c\u8fd9\u7b49\u540c\u4e8e\u5141\u8bb8\u70ed\u91cf\u4ece\u4f4e\u6e29\u7269\u4f53\u6d41\u5411\u9ad8\u6e29\u7269\u4f53\uff0c\u6216\u5141\u8bb8\u4e00\u676f\u9759\u6b62\u7684\u5496\u5561\u81ea\u53d1\u5730\u65cb\u8f6c\u8d77\u6765\u2014\u2014\u8fd9\u4e9b\u90fd\u662f\u88ab\u7269\u7406\u5b9a\u5f8b\u6240\u7981\u6b62\u7684\u201c\u7b2c\u4e8c\u7c7b\u6c38\u52a8\u673a\u201d\u3002</p>"},{"location":"zh/notes/28.%20%E7%B2%98%E6%80%A7%E6%B5%81%E4%BD%93%E3%80%81%E7%BA%B3%E7%BB%B4-%E6%96%AF%E6%89%98%E5%85%8B%E6%96%AF%E6%96%B9%E7%A8%8B%E3%80%81%E7%86%B5%E5%B9%B3%E8%A1%A1%E4%B8%8E%E7%83%AD%E4%BC%A0%E5%AF%BC/#5","title":"5. \u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u5b8c\u6210\u4e86\u4ece\u65e0\u8017\u6563\u7684\u7406\u60f3\u6d41\u4f53\u5230\u5305\u542b\u4e0d\u53ef\u9006\u8fc7\u7a0b\u7684\u771f\u5b9e\u6d41\u4f53\u7684\u5173\u952e\u7406\u8bba\u6784\u5efa\u3002\u6211\u4eec\u4e0d\u518d\u5c40\u9650\u4e8e\u7406\u60f3\u5316\u7684\u53ef\u9006\u4e16\u754c\uff0c\u800c\u662f\u5c06\u7269\u7406\u5b66\u4e2d\u6700\u6838\u5fc3\u7684\u8017\u6563\u673a\u5236\u2014\u2014\u7c98\u6027\u548c\u70ed\u4f20\u5bfc \u2014\u2014\u6210\u529f\u5730\u878d\u5165\u4e86\u6d41\u4f53\u52a8\u529b\u5b66\u6846\u67b6\u3002</p> <ol> <li> <p>\u901a\u8fc7\u5f15\u5165\u672c\u6784\u5173\u7cfb\uff0c\u4e3a\u5185\u90e8\u6469\u64e6\u548c\u70ed\u6d41\u5efa\u7acb\u4e86\u6570\u5b66\u63cf\u8ff0\uff0c\u9610\u660e\u4e86\u526a\u5207\u7c98\u5ea6 \\(\\eta\\)\u3001\u4f53\u79ef\u7c98\u5ea6 \\(\\xi\\) \u548c\u70ed\u5bfc\u7387 \\(\\kappa\\) \u4f5c\u4e3a\u6838\u5fc3\u8f93\u8fd0\u7cfb\u6570\u7684\u7269\u7406\u610f\u4e49\u3002</p> </li> <li> <p>\u5c06\u8fd9\u4e9b\u8017\u6563\u9879\u4e0e\u57fa\u672c\u5b88\u6052\u5b9a\u5f8b\u76f8\u7ed3\u5408\uff0c\u4ece\u7406\u60f3\u6d41\u4f53\u7684\u6b27\u62c9\u65b9\u7a0b\u5347\u7ea7\u5230\u4e86\u66f4\u666e\u9002\u7684\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u548c\u5b8c\u6574\u7684\u80fd\u91cf\u5b88\u6052\u65b9\u7a0b\uff0c\u5e76\u6df1\u523b\u7406\u89e3\u4e86\u7c98\u6027\u4f5c\u4e3a\u52a8\u91cf\u6269\u6563\u7684\u7269\u7406\u673a\u5236\u3002</p> </li> <li> <p>\u6700\u91cd\u8981\u7684\u662f\uff0c\u901a\u8fc7\u63a8\u5bfc\u71b5\u5e73\u8861\u65b9\u7a0b\uff0c\u5c06\u6d41\u4f53\u52a8\u529b\u5b66\u4e0e\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u8054\u7cfb\u4e86\u8d77\u6765\u3002\u71b5\u4ea7\u751f\u7387\u7684\u975e\u8d1f\u6027\u4e0d\u4ec5\u4e3a\u6211\u4eec\u7684\u6a21\u578b\u5d4c\u5165\u4e86\u4e0d\u53ef\u9006\u7684\u201c\u65f6\u95f4\u4e4b\u7bad\u201d\uff0c\u8fd8\u4ece\u7b2c\u4e00\u6027\u539f\u7406\u51fa\u53d1\uff0c\u4e3a\u6240\u6709\u8f93\u8fd0\u7cfb\u6570\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u70ed\u529b\u5b66\u7ea6\u675f(\\(\\eta, \\xi, \\kappa \\geq 0\\))\uff0c\u786e\u4fdd\u4e86\u6211\u4eec\u6574\u4e2a\u7406\u8bba\u6846\u67b6\u7684\u7269\u7406\u81ea\u6d3d\u6027\u3002</p> </li> </ol> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u3001\u63cf\u8ff0\u771f\u5b9e\u6d41\u4f53\u884c\u4e3a\u7684\u8fde\u7eed\u4ecb\u8d28\u7406\u8bba\u65b9\u7a0b\u7ec4\u3002\u8fd9\u8282\u8bfe\u4e2d\u71b5\u4ea7\u751f\u7387\u6240\u5448\u73b0\u7684(\u901a\u91cf \u00d7 \u529b)\u7ed3\u6784\uff0c\u4ee5\u53ca\u6211\u4eec\u4f7f\u7528\u7684\u7ebf\u6027\u672c\u6784\u5173\u7cfb\uff0c\u90fd\u662f\u4e00\u4e2a\u66f4\u5b8f\u5927\u7406\u8bba\u6846\u67b6\u7684\u7279\u4f8b\u3002</p> <p>\u4e0b\u4e00\u8282\u5c06\u4ecb\u7ecd\uff0c\u5728\u63a5\u8fd1\u70ed\u529b\u5b66\u5e73\u8861\u6001\u65f6\uff0c\u4efb\u4f55\u4e0d\u53ef\u9006\u7684\u901a\u91cf\\(\\mathbf{J}\\)\u90fd\u53ef\u4ee5\u5199\u6210\u6240\u6709\u70ed\u529b\u5b66\u529b\\(\\mathbf{X}\\)\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u5373 \\(\\mathbf{J} = \\mathbf{L} \\mathbf{X}\\)\uff0c\u5176\u4e2d\\(\\mathbf{L}\\)\u662f\u6602\u8428\u683c\u7cfb\u6570\u77e9\u9635\u3002\u8fd9\u4e00\u8282\u8bfe\u9047\u5230\u7684\\(\\eta, \\xi, \\kappa\\)\u4fbf\u662f\u8fd9\u4e9b\u6602\u8428\u683c\u7cfb\u6570\u7684\u5178\u4f8b\u3002\u8fd9\u4e00\u7406\u8bba\u6846\u67b6\u8fd8\u5c06\u518d\u6b21\u5f15\u51fa\u6df1\u523b\u7684\u5bf9\u79f0\u6027\u539f\u7406\u2014\u2014\u6602\u8428\u683c\u5012\u6613\u5173\u7cfb \u3002\u6b64\u5916\uff0c\u4e0b\u8282\u8bfe\u4ecb\u7ecd\u7684\u201c\u5e72\u6027\u6269\u6563\u7c92\u5b50\u7cfb\u7edf\u201d \u5c06\u4f5c\u4e3a\u5e94\u7528\u8fd9\u4e9b\u975e\u5e73\u8861\u70ed\u529b\u5b66\u539f\u7406\u7684\u4e00\u4e2a\u65b0\u8303\u4f8b\uff0c\u628a\u5355\u4e00\u7684\u8fde\u7eed\u6d41\u4f53\u6269\u5c55\u5230\u591a\u7c92\u5b50\u76f8\u4e92\u4f5c\u7528\u7684\u7cfb\u7edf\u3002</p>"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/","title":"\u5f15\u8a00\uff1a\u6d41\u4f53\u52a8\u529b\u5b66\u56de\u987e\u56de\u987e","text":"<p>\u5728\u7b2c27\u8bb2\u4e2d\uff0cErwin Frey \u6559\u6388\u4ece\u7269\u7406\u5b66\u6700\u57fa\u672c\u7684\u4e09\u5927\u5b88\u6052\u5b9a\u5f8b\u2014\u2014\u8d28\u91cf\u5b88\u6052\u3001\u52a8\u91cf\u5b88\u6052\u548c\u80fd\u91cf\u5b88\u6052\u51fa\u53d1\uff0c\u6210\u529f\u63a8\u5bfc\u51fa\u4e86\u7406\u60f3\u6d41\u4f53\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u7ec4\uff0c\u6838\u5fc3\u662f\u6b27\u62c9\u65b9\u7a0b\u3002\u8fd9\u4e2a\u7406\u8bba\u57fa\u4e8e\u6d41\u4f53\u65e0\u7c98\u6027\u3001\u65e0\u70ed\u4f20\u5bfc\u7684\u5047\u8bbe\uff0c\u63cf\u7ed8\u4e86\u4e00\u4e2a\u5b8c\u5168\u53ef\u9006\u7684\u7b49\u71b5\u6d41\u4e16\u754c\u3002</p> <p> \u8fd9\u4e9b\u5b88\u6052\u5b9a\u5f8b\u6784\u6210\u4e86\u8fde\u7eed\u4ecb\u8d28\u529b\u5b66\u7684\u4e09\u5927\u652f\u67f1\uff0c\u5b83\u4eec\u6e90\u4e8e\u57fa\u672c\u7684\u5bf9\u79f0\u6027\u539f\u7406\uff0c\u5177\u6709\u666e\u9002\u6027\u548c\u7cbe\u786e\u6027\u3002\u5176\u5c40\u57df\u5fae\u5206\u5f62\u5f0f\u56de\u987e\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u8d28\u91cf\u5b88\u6052\uff08\u8fde\u7eed\u6027\u65b9\u7a0b\uff09:     $$     \\partial_t \\rho + \\nabla \\cdot (\\rho \\mathbf{v}) = 0     $$     \u8fd9\u4e2a\u65b9\u7a0b\u76f4\u89c2\u5730\u8868\u660e\uff0c\u5728\u4e00\u4e2a\u5fae\u5c0f\u7684\u6d41\u4f53\u5143\u5185\uff0c\u8d28\u91cf\u5bc6\u5ea6 \\(\\rho\\) \u7684\u65f6\u95f4\u53d8\u5316\u7387\uff0c\u5b8c\u5168\u53d6\u51b3\u4e8e\u7a7f\u8fc7\u5176\u8fb9\u754c\u7684\u8d28\u91cf\u901a\u91cf \\(\\rho \\mathbf{v}\\) \u7684\u51c0\u6d41\u5165\uff08\u6563\u5ea6\uff09\u3002\u5b83\u610f\u5473\u7740\u8d28\u91cf\u4e0d\u4f1a\u51ed\u7a7a\u4ea7\u751f\u6216\u6d88\u5931\u3002</p> </li> <li> <p>\u52a8\u91cf\u5b88\u6052\uff08\u7c7b\u6b27\u62c9/\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\uff09:     $$     \\partial_t (\\rho v_i) + \\partial_k \\Sigma_{ik} = 0     $$     \u8fd9\u662f\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b\u5728\u6d41\u4f53\u5fae\u5143\u4e0a\u7684\u4f53\u73b0\u3002\u5b83\u6307\u51fa\uff0c\u6d41\u4f53\u5fae\u5143\u7684\u52a8\u91cf\u5bc6\u5ea6 \\(\\rho v_i\\) \u7684\u53d8\u5316\uff0c\u662f\u7531\u4f5c\u7528\u5728\u5176\u8868\u9762\u4e0a\u7684\u603b\u5e94\u529b\u5f20\u91cf \\(\\Sigma_{ik}\\) \u7684\u6563\u5ea6\u6240\u5f15\u8d77\u7684\u3002\u5176\u4e2d\uff0c\u6240\u6709\u590d\u6742\u7684\u76f8\u4e92\u4f5c\u7528\u548c\u8017\u6563\u6548\u5e94\u90fd\u9690\u542b\u5728 \\(\\Sigma_{ik}\\) \u7684\u5177\u4f53\u5f62\u5f0f\u4e2d\u3002</p> </li> <li> <p>\u80fd\u91cf\u5b88\u6052:     $$     \\partial_t \\epsilon + \\nabla \\cdot \\mathbf{j}^{(\\epsilon)} = 0     $$     \u8fd9\u4e2a\u65b9\u7a0b\u4e0e\u8d28\u91cf\u5b88\u6052\u7c7b\u4f3c\uff0c\u8868\u660e\u5c40\u90e8\u603b\u80fd\u91cf\u5bc6\u5ea6 \\(\\epsilon\\) \u7684\u53d8\u5316\u662f\u7531\u603b\u80fd\u91cf\u901a\u91cf \\(\\mathbf{j}^{(\\epsilon)}\\) \u7684\u6d41\u5165\u6216\u6d41\u51fa\u51b3\u5b9a\u7684\u3002</p> </li> </ol> <p>\u7136\u7406\u60f3\u6d41\u4f53\u6a21\u578b\u65e0\u6cd5\u63cf\u8ff0\u73b0\u5b9e\u4e16\u754c\u4e2d\u666e\u904d\u5b58\u5728\u7684\u4e0d\u53ef\u9006\u6027\u3002\u5728\u7b2c28\u8bb2\u4e2d\uff0c\u4e3a\u4e86\u5c06\u8fd9\u4e9b\u7269\u7406\u73b0\u5b9e\u878d\u5165\u7406\u8bba\uff0c\u5f15\u5165\u4e86\u7c98\u6027\uff08\u5185\u90e8\u6469\u64e6\uff09\u548c\u70ed\u4f20\u5bfc\uff08\u5185\u90e8\u70ed\u91cf\u4f20\u9012\uff09\u8fd9\u4e24\u4e2a\u6838\u5fc3\u8017\u6563\u673a\u5236\u3002\u4e3a\u6b64\u5bf9\u603b\u5e94\u529b\u5f20\u91cf\u8fdb\u884c\u5206\u89e3:</p> \\[\\Sigma_{ik} = -P \\delta_{ik} + \\Sigma'_{ik}\\] <p>\u5176\u4e2d\uff0c\\(-P \\delta_{ik}\\) \u662f\u9759\u6c34\u538b\u529b\u9879\uff0c\u4ee3\u8868\u53ef\u9006\u7684\u3001\u7406\u60f3\u6d41\u4f53\u90e8\u5206\uff1b\u800c \\(\\Sigma'_{ik}\\) \u662f\u7c98\u6027\u5e94\u529b\u5f20\u91cf\uff0c\u4e00\u4e2a\u5bf9\u79f0\u65e0\u8ff9\u7684\u5f20\u91cf\uff0c\u5b83\u63cf\u8ff0\u4e86\u7531\u901f\u5ea6\u68af\u5ea6\u5f15\u8d77\u7684\u526a\u5207\u529b\uff0c\u662f\u80fd\u91cf\u8017\u6563\u548c\u71b5\u4ea7\u751f\u7684\u4e3b\u8981\u6765\u6e90\u3002\u7c7b\u4f3c\u5730\uff0c\u70ed\u6d41\u5bc6\u5ea6 \\(\\mathbf{j}^{(q)}\\) \u63cf\u8ff0\u4e86\u7531\u6e29\u5ea6\u4e0d\u5747\u5300\u5f15\u8d77\u7684\u70ed\u91cf\u6d41\u52a8\uff0c\u4e5f\u662f\u603b\u80fd\u91cf\u901a\u91cf \\(\\mathbf{j}^{(\\epsilon)}\\) \u7684\u4e00\u90e8\u5206\u3002</p> <p>\u8fd9\u4e9b\u5b88\u6052\u5b9a\u5f8b\u672c\u8eab\u867d\u7cbe\u786e\uff0c\u5374\u4e0d\u8db3\u4ee5\u6784\u6210\u5c01\u95ed\u7684\u65b9\u7a0b\u7ec4\uff0c\u56e0\u4e3a\u50cf \\(\\Sigma'_{ik}\\) \u548c \\(\\mathbf{j}^{(q)}\\) \u8fd9\u6837\u7684\u8017\u6563\u9879\u7684\u5177\u4f53\u5f62\u5f0f\u4ecd\u662f\u672a\u77e5\u7684\u3002\u4e0a\u4e00\u8282\u8bfe\u5df2\u7ecf\u901a\u8fc7\u5bf9\u79f0\u6027\u539f\u7406\u548c\u7ebf\u6027\u54cd\u5e94\u7406\u8bba\uff0c\u4e3a\u7c98\u6027\u5e94\u529b\u5f20\u91cf \\(\\Sigma'_{ik}\\) \u548c\u70ed\u6d41\u5bc6\u5ea6 \\(\\mathbf{j}^{(q)}\\) \u6784\u5efa\u4e86\u672c\u6784\u5173\u7cfb\uff0c\u4ece\u800c\u63a8\u5bfc\u51fa\u4e86\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u548c\u5b8c\u6574\u7684\u80fd\u91cf\u5b88\u6052\u65b9\u7a0b\uff0c\u5e76\u6700\u7ec8\u901a\u8fc7\u71b5\u5e73\u8861\u65b9\u7a0b\uff0c\u5c06\u6d41\u4f53\u52a8\u529b\u5b66\u4e0e\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u6df1\u523b\u8054\u7cfb\u8d77\u6765\uff0c\u8bc1\u660e\u4e86\u8f93\u8fd0\u7cfb\u6570\uff08\u5982\u7c98\u5ea6 \\(\\eta, \\xi\\) \u548c\u70ed\u5bfc\u7387 \\(\\kappa\\)\uff09\u5fc5\u987b\u4e3a\u6b63\u3002</p> <p>\u8fd9\u8282\u8bfe\u5c06\u628a\u4e4b\u524d\u5728\u7b2c24\u8bb2\u4e2d\u5efa\u7acb\u7684 \uff0c\u5173\u4e8e\u8fd1\u5e73\u8861\u6001\u4e0b\u4e0d\u53ef\u9006\u8fc7\u7a0b\u7684\u666e\u9002\u7406\u8bba\u6846\u67b6 \uff0c\u4ee5\u53ca\u6da8\u843d-\u8017\u6563\u5b9a\u7406 \uff0c\u7cfb\u7edf\u5730\u5e94\u7528\u4e8e\u63cf\u8ff0\u8fd9\u4e9b\u8017\u6563\u9879\uff0c\u7279\u522b\u662f\u4e3a\u4e86\u63a8\u5bfc\u6240\u8c13\u7684\u672c\u6784\u5173\u7cfb\uff08Constitutive Relations\uff09\u3002\u6838\u5fc3\u5185\u5bb9\u662f\uff0c\u5982\u4f55\u5229\u7528\u8fd9\u4e2a\u57fa\u4e8e\u7269\u7406\u539f\u7406\u7684\u666e\u9002\u6846\u67b6\uff0c\u6765\u7406\u89e3\u5404\u79cd\u70ed\u529b\u5b66\u901a\u91cf\uff08\u5982\u7c98\u6027\u5e94\u529b\u3001\u70ed\u6d41\uff09\u4e0e\u5176\u5171\u8f6d\u7684\u70ed\u529b\u5b66\u529b\uff08\u5982\u901f\u5ea6\u68af\u5ea6\u3001\u6e29\u5ea6\u68af\u5ea6\uff09\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\u3002\u6b64\u5916\uff0cErwin Frey \u6559\u6388\u901a\u8fc7\u4e00\u4e2a\u201c\u5e72\u6027\u201d\u6269\u6563\u7c92\u5b50\u7cfb\u7edf\u7684\u6848\u4f8b\u7814\u7a76\uff0c\u5b8c\u6574\u5c55\u793a\u73b0\u4ee3\u7edf\u8ba1\u7269\u7406\u4e2d\u6784\u5efa\u52a8\u529b\u5b66\u6a21\u578b\u7684\u6807\u51c6\u6d41\u7a0b\uff1a\u4ece\u81ea\u7531\u80fd\u51fa\u53d1\uff0c\u8bc6\u522b\u5b88\u6052\u5f8b\uff0c\u6700\u7ec8\u5229\u7528\u6602\u8428\u683c\u6846\u67b6\u63a8\u5bfc\u968f\u673a\u52a8\u529b\u5b66\u65b9\u7a0b\uff0c\u4ece\u800c\u5c06\u5fae\u89c2\u6da8\u843d\u4e0e\u5b8f\u89c2\u8017\u6563\u7d27\u5bc6\u8054\u7cfb\u8d77\u6765\u3002</p>"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/#1","title":"1. \u4e0d\u53ef\u9006\u6027\u7684\u6838\u5fc3\uff1a\u71b5\u4ea7\u751f","text":"<p>\u5728\u4e0a\u4e00\u8282\u8bfe\u7684\u7ed3\u5c3e\uff0c\u6559\u6388\u901a\u8fc7\u7ed3\u5408\u6d41\u4f53\u52a8\u529b\u5b66\u5b88\u6052\u5f8b\u4e0e\u70ed\u529b\u5b66\uff0c\u6700\u7ec8\u63a8\u5bfc\u51fa\u4e86\u71b5\u5e73\u8861\u65b9\u7a0b\uff0c\u5e76\u63ed\u793a\u4e86\u7c98\u6027\u548c\u70ed\u4f20\u5bfc\u662f\u71b5\u7684\u201c\u6e90\u6cc9\u201d\u3002\u8fd9\u8282\u8bfe\u5c06\u628a\u8fd9\u4e2a\u7ed3\u8bba\u4f5c\u4e3a\u51fa\u53d1\u70b9\uff0c\u5c06\u5176\u5f62\u5f0f\u5316\u4e3a\u4e00\u4e2a\u6df1\u523b\u4e14\u666e\u9002\u7684\u7406\u8bba\u6846\u67b6\u3002</p> <p>\u8981\u63cf\u8ff0\u4e0d\u53ef\u9006\u8fc7\u7a0b\uff0c\u5fc5\u987b\u5f15\u5165\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\uff0c\u5176\u6838\u5fc3\u6982\u5ff5\u662f\u71b5\u3002\u5728\u4e00\u4e2a\u5b64\u7acb\u7cfb\u7edf\u4e2d\uff0c\u603b\u71b5\u6c38\u4e0d\u51cf\u5c11\u3002\u5728\u5c40\u90e8\u5f62\u5f0f\u4e0b\uff0c\u8fd9\u610f\u5473\u7740\u71b5\u53ef\u4ee5\u5728\u7a7a\u95f4\u4e2d\u6d41\u52a8\uff0c\u4f46\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u53ef\u4ee5\u5728\u7cfb\u7edf\u5185\u90e8\u7531\u4e8e\u8017\u6563\u8fc7\u7a0b (dissipative processes) \u800c\u88ab\u201c\u51ed\u7a7a\u521b\u9020\u201d\u51fa\u6765\u3002</p> <p>\u6b63\u5982\u4e0a\u4e00\u8bb2\u7b14\u8bb0\u6240\u5199\uff0c\u901a\u8fc7\u7ed3\u5408\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\u548c\u5c40\u57df\u70ed\u5e73\u8861\u5047\u8bbe\u4e0b\u7684\u5409\u5e03\u65af\u5173\u7cfb (\\(Tds = d\\epsilon + Pdv_s\\))\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u63a8\u5bfc\uff0c\u53ef\u4ee5\u5f97\u5230\u7cfb\u7edf\u603b\u71b5\u7531\u4e8e\u4e0d\u53ef\u9006\u8fc7\u7a0b\u800c\u4ea7\u751f\u7684\u53d8\u5316\u7387\uff1a</p> \\[\\frac{dS'}{dt} = \\int dV \\left[ \\frac{1}{T} \\Sigma'_{ik} \\left( \\frac{1}{2}(\\partial_i v_k + \\partial_k v_i) \\right) - \\frac{1}{T^2} j_i^{(q)} \\partial_i T \\right]\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7cbe\u786e\u5730\u63cf\u8ff0\u71b5\u662f\u5982\u4f55\u5728\u8fde\u7eed\u7cfb\u7edf\u4e2d\u4ea7\u751f\u7684\uff1a</p> <p>\u79ef\u5206\u5185\u7684\u7b2c\u4e00\u9879\uff1a\\(\\frac{1}{T} \\Sigma'_{ik} \\left( \\frac{1}{2}(\\partial_i v_k + \\partial_k v_i) \\right)\\)\u3002</p> <ul> <li> <p>\u8fd9\u4e00\u9879\u4ee3\u8868\u7531\u7c98\u6027\u6469\u64e6\u5f15\u8d77\u7684\u71b5\u4ea7\u751f\u3002</p> </li> <li> <p>\\(\\Sigma'_{ik}\\) \u662f\u4e0a\u8282\u8bfe\u5f15\u5165\u7684\u7c98\u6027\uff08\u6216\u8017\u6563\uff09\u5e94\u529b\u5f20\u91cf\uff0c\u5b83\u4ee3\u8868\u4e86\u4e00\u79cd\u4e0d\u53ef\u9006\u7684\u52a8\u91cf\"\u6d41\u52a8\"\u6216\"\u901a\u91cf\"\u3002</p> </li> <li> <p>\u5bf9\u79f0\u5316\u7684\u901f\u5ea6\u68af\u5ea6 \\(\\frac{1}{2}(\\partial_i v_k + \\partial_k v_i)\\) \u662f\u5f15\u8d77\u8fd9\u79cd\u5e94\u53d8\u7684\u201c\u9a71\u52a8\u529b\u201d \uff0c\u5b83\u63cf\u8ff0\u4e86\u6d41\u4f53\u5fae\u5143\u7684\u5f62\u53d8\u7387 (rate-of-strain) \u3002\u6b63\u662f\u8fd9\u79cd\u5bfc\u81f4\u76f8\u90bb\u6d41\u4f53\u5c42\u53d1\u751f\u76f8\u5bf9\u6ed1\u52a8\u7684\u5f62\u53d8\uff0c\u624d\u662f\u5185\u90e8\u6469\u64e6\u7684\u771f\u6b63\u6765\u6e90\uff0c\u5b83\u4f1a\u5c06\u5b8f\u89c2\u6709\u5e8f\u7684\u52a8\u80fd\u4e0d\u53ef\u9006\u5730\u8f6c\u5316\u4e3a\u5fae\u89c2\u65e0\u5e8f\u7684\u5185\u80fd\uff0c\u4ece\u800c\u4ea7\u751f\u71b5\u3002</p> </li> </ul> <p>\u79ef\u5206\u5185\u7684\u7b2c\u4e8c\u9879\uff1a\\(-\\frac{1}{T^2} j_i^{(q)} \\partial_i T\\)\u3002</p> <ul> <li> <p>\u8fd9\u4e00\u9879\u4ee3\u8868\u7531\u70ed\u4f20\u5bfc\u5f15\u8d77\u7684\u71b5\u4ea7\u751f\u3002</p> </li> <li> <p>\\(\\mathbf{j}^{(q)}\\) \u662f\u4e0a\u8282\u8bfe\u901a\u8fc7\u5085\u91cc\u53f6\u5b9a\u5f8b\u5f15\u5165\u7684\u70ed\u6d41\u5bc6\u5ea6\uff0c\u5b83\u662f\u4e00\u79cd\u80fd\u91cf\u7684\"\u901a\u91cf\"\u3002</p> <ul> <li>\u6e29\u5ea6\u68af\u5ea6 \\(\\partial_i T\\) \u5219\u662f\u9a71\u52a8\u70ed\u6d41\u7684\u201c\u529b\u201d\u3002\u70ed\u91cf\u603b\u662f\u81ea\u53d1\u5730\u4ece\u9ad8\u6e29\u533a\u6d41\u5411\u4f4e\u6e29\u533a\u4ee5\u62b9\u5e73\u6e29\u5ea6\u5dee\u5f02\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u4e0d\u53ef\u9006\u7684\uff0c\u540c\u6837\u5bfc\u81f4\u71b5\u7684\u589e\u52a0\u3002</li> </ul> </li> </ul> <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u6b63\u662f\u5728\u7b2c24\u8bb2\u4e2d\u4ecb\u7ecd\u7684\u6602\u8428\u683c\u7406\u8bba\u7684\u6838\u5fc3\u3002\u53ef\u4ee5\u5c06\u5c40\u57df\u71b5\u4ea7\u751f\u7387\uff08\u5355\u4f4d\u65f6\u95f4\u5355\u4f4d\u4f53\u79ef\u7684\u71b5\u589e\uff09\\(\\sigma_s\\) \u5199\u6210\u4e00\u4e2a\u66f4\u5177\u4e00\u822c\u6027\u7684\u53cc\u7ebf\u6027\u5f62\u5f0f\uff1a</p> \\[\\sigma_s = \\sum_a J_a X_a\\] <p>\u5176\u4e2d\uff1a * \\(J_a\\) \u88ab\u79f0\u4e3a\u70ed\u529b\u5b66\u901a\u91cf (Thermodynamic Fluxes) \uff0c\u5b83\u4ee3\u8868\u4e86\u7cfb\u7edf\u4e3a\u54cd\u5e94\u4e0d\u5e73\u8861\u800c\u4ea7\u751f\u7684\u5404\u79cd\u201c\u6d41\u201d\uff08\u5982\u7c92\u5b50\u6d41\u3001\u70ed\u6d41\u3001\u52a8\u91cf\u6d41\uff09\u3002</p> <ul> <li>\\(X_a\\) \u88ab\u79f0\u4e3a\u5171\u8f6d\u7684\u70ed\u529b\u5b66\u529b (Thermodynamic Forces) \uff0c\u5b83\u91cf\u5316\u4e86\u7cfb\u7edf\u504f\u79bb\u70ed\u529b\u5b66\u5e73\u8861\u7684\u7a0b\u5ea6\uff08\u5982\u5316\u5b66\u52bf\u68af\u5ea6\u3001\u6e29\u5ea6\u68af\u5ea6\u7b49\uff09\u3002</li> </ul> <p>\u8fd9\u79cd\u201c\u901a\u91cf-\u529b\u201d\u7684\u914d\u5bf9\u662f\u7ebf\u6027\u4e0d\u53ef\u9006\u8fc7\u7a0b\u70ed\u529b\u5b66\u7406\u8bba\u7684\u57fa\u77f3\u3002\u5bf9\u4e8e\u7b80\u5355\u6d41\u4f53\uff0c\u8fd9\u4e2a\u62bd\u8c61\u7684\u6846\u67b6\u53ef\u4ee5\u88ab\u6e05\u6670\u5730\u7ffb\u8bd1\u6210\u5177\u4f53\u7684\u7269\u7406\u91cf\uff1a</p> <p>\u88681\uff1a\u7b80\u5355\u6d41\u4f53\u4e2d\u7684\u70ed\u529b\u5b66\u901a\u91cf-\u529b\u914d\u5bf9</p> \u4e0d\u53ef\u9006\u8fc7\u7a0b \u70ed\u529b\u5b66\u901a\u91cf \\(J_a\\) (Flux) \u5171\u8f6d\u70ed\u529b\u5b66\u529b \\(X_a\\) (Force) \u7c98\u6027\u8017\u6563 \u7c98\u6027\u5e94\u529b\u5f20\u91cf \\(\\Sigma'_{ik}\\) \\(\\frac{1}{T} \\left( \\frac{1}{2}(\\partial_i v_k + \\partial_k v_i) \\right)\\) \u70ed\u4f20\u5bfc \u70ed\u6d41\u5bc6\u5ea6 \\(j_i^{(q)}\\) \\(-\\frac{1}{T^2}\\partial_i T = \\partial_i\\left(\\frac{1}{T}\\right)\\) <p>\u8fd9\u4e2a\u6846\u67b6\u7684\u91cd\u8981\u6027\u5728\u4e8e\uff1a\u8981\u7406\u89e3\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u7684\u8017\u6563\uff0c\u53ea\u9700\u8981\u901a\u8fc7\u5b88\u6052\u5b9a\u5f8b\u63a8\u5bfc\u51fa\u71b5\u4ea7\u751f\u7387\u7684\u8868\u8fbe\u5f0f\uff0c\u7136\u540e\u5c06\u5176\u6574\u7406\u6210 \\(\\sum_a J_a X_a\\) \u7684\u5f62\u5f0f\uff0c\u5c31\u80fd\u81ea\u52a8\u8bc6\u522b\u51fa\u6240\u6709\u76f8\u5173\u7684\u4e0d\u53ef\u9006\u8fc7\u7a0b\u53ca\u5176\u9a71\u52a8\u529b\u3002\u5f53\u7cfb\u7edf\u5904\u4e8e\u5b8c\u7f8e\u7684\u70ed\u529b\u5b66\u5e73\u8861\u6001\u65f6\uff0c\u6240\u6709\u7684\u201c\u529b\u201d\uff08\u5982\u6e29\u5ea6\u68af\u5ea6\u3001\u901f\u5ea6\u68af\u5ea6\uff09\u90fd\u4e3a\u96f6\uff0c\u56e0\u6b64\u901a\u91cf\u4e5f\u4e3a\u96f6\uff0c\u71b5\u4e0d\u518d\u4ea7\u751f\u3002\u8fd9\u4e00\u6b65\u6e05\u6670\u5730\u8bc6\u522b\u51fa\u901a\u91cf-\u529b\u914d\u5bf9\uff0c\u662f\u63a5\u4e0b\u6765\u5efa\u7acb\u5b83\u4eec\u4e4b\u95f4\u7ebf\u6027\u5173\u7cfb\uff08\u5373\u672c\u6784\u5173\u7cfb\uff09\u7684\u903b\u8f91\u524d\u63d0\u3002</p>"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/#2-","title":"2. \u6602\u8428\u683c\u6846\u67b6\u4e0e\u6da8\u843d-\u8017\u6563\u5b9a\u7406","text":"<p>\u4e0a\u4e00\u8282\u901a\u8fc7\u5206\u6790\u71b5\u4ea7\u751f\uff0c\u6210\u529f\u5730\u5c06\u590d\u6742\u7684\u8017\u6563\u8fc7\u7a0b\u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u70ed\u529b\u5b66\u901a\u91cf (\\(J_a\\)) \u4e0e\u5176\u5171\u8f6d\u529b (\\(X_a\\)) \u7684\u914d\u5bf9\u3002\u8fd9\u4e00\u5206\u89e3\u662f\u6784\u5efa\u52a8\u529b\u5b66\u65b9\u7a0b\u7684\u57fa\u77f3\u3002\u63a5\u4e0b\u6765\u7684\u4efb\u52a1\u662f\u5efa\u7acb\u8fd9\u4e9b\u901a\u91cf\u4e0e\u529b\u4e4b\u95f4\u7684\u5b9a\u91cf\u5173\u7cfb\uff0c\u5373\u627e\u5230\u666e\u9002\u7684\u672c\u6784\u5173\u7cfb\uff0c\u5e76\u5c06\u6709\u9650\u6e29\u5ea6\u4e0b\u7684\u70ed\u6da8\u843d\u4e5f\u65e0\u7f1d\u5730\u878d\u5165\u8fd9\u4e2a\u7406\u8bba\u6846\u67b6\u3002</p>"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/#21","title":"2.1 \u7ebf\u6027\u54cd\u5e94\u4e0e\u6602\u8428\u683c\u5012\u6613\u5173\u7cfb","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u504f\u79bb\u70ed\u529b\u5b66\u5e73\u8861\u4e0d\u592a\u8fdc\u7684\u7cfb\u7edf\uff0c\u4e00\u4e2a\u6781\u5176\u6709\u6548\u4e14\u7269\u7406\u4e0a\u5408\u7406\u7684\u5047\u8bbe\u662f\uff0c\u7cfb\u7edf\u4ea7\u751f\u7684\u54cd\u5e94\uff08\u901a\u91cf\uff09\u4e0e\u9a71\u52a8\u5b83\u7684\u4e0d\u5e73\u8861\u7a0b\u5ea6\uff08\u529b\uff09\u4e4b\u95f4\u5b58\u5728\u7ebf\u6027\u5173\u7cfb\u3002\u8fd9\u4fbf\u662f\u7ebf\u6027\u54cd\u5e94\u5047\u8bbe\uff0c\u5176\u6570\u5b66\u5f62\u5f0f\u4e3a\uff1a</p> \\[J_a = \\sum_b L_{ab} X_b\\] <p>\u8fd9\u91cc\u7684\u7cfb\u6570\u77e9\u9635 \\(L_{ab}\\) \u88ab\u79f0\u4e3a\u6602\u8428\u683c\u52a8\u529b\u5b66\u7cfb\u6570 (Onsager kinetic coefficients)\u3002\u5b83\u5e76\u975e\u4e00\u4e2a\u62bd\u8c61\u7684\u6570\u5b66\u7b26\u53f7\uff0c\u800c\u662f\u5305\u542b\u4e86\u7cfb\u7edf\u4e2d\u6240\u6709\u5b8f\u89c2\u8f93\u8fd0\u6027\u8d28\u7684\u7269\u7406\u5b9e\u4f53\uff0c\u4f8b\u5982\u5728\u4e0a\u4e00\u8282\u8bfe\u4e2d\u9047\u5230\u7684\u70ed\u5bfc\u7387 \\(\\kappa\\)\u3001\u526a\u5207\u7c98\u5ea6 \\(\\eta\\) \u548c\u4f53\u79ef\u7c98\u5ea6 \\(\\xi\\) \u90fd\u662f \\(L_{ab}\\) \u77e9\u9635\u7684\u5177\u4f53\u5206\u91cf\u3002</p> <p>\u7269\u7406\u5b66\u5bb6\u62c9\u65af\u00b7\u6602\u8428\u683c\uff08Lars Onsager\uff09\u8fdb\u4e00\u6b65\u63d0\u51fa\u4e86\u4e00\u4e2a\u57fa\u4e8e\u5fae\u89c2\u52a8\u529b\u5b66\u5bf9\u79f0\u6027\u7684\u6df1\u523b\u89c1\u89e3\uff1a\u8fd9\u4e2a\u8f93\u8fd0\u7cfb\u6570\u77e9\u9635 \\(L_{ab}\\) \u5e76\u975e\u662f\u4efb\u610f\u7684\uff0c\u5176\u5206\u91cf\u4e4b\u95f4\u5b58\u5728\u7740\u4e00\u79cd\u5bf9\u79f0\u5173\u7cfb\u3002\u8fd9\u4fbf\u662f\u8457\u540d\u7684\u6602\u8428\u683c\u5012\u6613\u5173\u7cfb (Onsager reciprocal relations)\uff0c\u5176\u601d\u60f3\u5728\u7b2c24\u8bb2\u4e2d\u6709\u8be6\u7ec6\u63a2\u8ba8\uff1a</p> \\[L_{ab} = \\varepsilon_a \\varepsilon_b L_{ba}\\] <p>\u5176\u4e2d\uff0c\\(\\varepsilon_a = \\pm 1\\) \u662f\u5b8f\u89c2\u53d8\u91cf \\(a\\) \u5728\u65f6\u95f4\u53cd\u6f14\u53d8\u6362\u4e0b\u7684\u5b87\u79f0 (parity) \uff08\u4f8b\u5982\uff0c\u5bc6\u5ea6\u3001\u80fd\u91cf\u662f\u5076\u5b87\u79f0 \\(\\varepsilon=+1\\)\uff0c\u800c\u52a8\u91cf\u3001\u78c1\u573a\u662f\u5947\u5b87\u79f0 \\(\\varepsilon=-1\\)\uff09\u3002\u8fd9\u4e2a\u5173\u7cfb\u5982\u540c\u4e00\u5ea7\u6865\u6881\uff0c\u5c06\u5b8f\u89c2\u4e16\u754c\u53ef\u6d4b\u91cf\u7684\u8f93\u8fd0\u73b0\u8c61\uff08\u5982\u70ed\u7535\u6548\u5e94\uff09\u4e0e\u5fae\u89c2\u4e16\u754c\u4e0d\u53ef\u89c1\u7684\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u8054\u7cfb\u8d77\u6765\uff0c\u662f\u7edf\u8ba1\u7269\u7406\u5b66\u4e2d\u7684\u4e00\u4e2a\u91cc\u7a0b\u7891\u3002</p>"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/#22-","title":"2.2 \u70ed\u529b\u5b66\u4e00\u81f4\u6027\uff1a\u6da8\u843d-\u8017\u6563\u5b9a\u7406","text":"<p>\u7136\u800c\uff0c\u4e00\u4e2a\u7eaf\u7cb9\u786e\u5b9a\u6027\u7684\u5173\u7cfb \\(J_a = \\sum_b L_{ab} X_b\\) \u4ecd\u7136\u662f\u4e0d\u5b8c\u6574\u7684\u3002\u4e00\u4e2a\u53ea\u6709\u8017\u6563\u9879\u7684\u52a8\u529b\u5b66\u7cfb\u7edf\uff0c\u4f1a\u5355\u8c03\u5730\u5f1b\u8c6b\u5230\u5176\u81ea\u7531\u80fd\u7684\u6700\u4f4e\u70b9\uff0c\u8fd9\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u7edd\u5bf9\u96f6\u5ea6\u7684\u3001\u5b8c\u5168\u9759\u6b62\u7684\u5e73\u8861\u6001\u3002\u4f46\u5728\u4efb\u4f55\u6709\u9650\u6e29\u5ea6 \\(T &gt; 0\\) \u7684\u7cfb\u7edf\u4e2d\uff0c\u6784\u6210\u7cfb\u7edf\u7684\u5fae\u89c2\u7c92\u5b50\uff08\u5982\u5206\u5b50\uff09\u90fd\u5728\u8fdb\u884c\u65e0\u4f11\u6b62\u7684\u70ed\u8fd0\u52a8\uff0c\u8fd9\u5fc5\u7136\u5bfc\u81f4\u5b8f\u89c2\u7269\u7406\u91cf\u56f4\u7ed5\u5176\u5e73\u8861\u503c\u8fdb\u884c\u6c38\u4e0d\u505c\u6b47\u7684\u6da8\u843d (fluctuations) \u3002</p> <p>\u8017\u6563\u548c\u6da8\u843d\u662f\u540c\u4e00\u679a\u786c\u5e01\u7684\u4e24\u9762\uff0c\u5b83\u4eec\u90fd\u6e90\u4e8e\u7cfb\u7edf\u4e0e\u70ed\u5e93\u4e4b\u95f4\u5fae\u89c2\u5c42\u9762\u7684\u80fd\u91cf\u4e0e\u52a8\u91cf\u4ea4\u6362\u3002\u4e3a\u4e86\u4fdd\u8bc1\u52a8\u529b\u5b66\u6a21\u578b\u5728\u6ca1\u6709\u5916\u754c\u9a71\u52a8\u529b\u65f6\uff0c\u80fd\u591f\u6b63\u786e\u5730\u6f14\u5316\u5230\u7531\u73bb\u5c14\u5179\u66fc\u5206\u5e03 \\(P \\sim e^{-F/k_B T}\\) \u6240\u63cf\u8ff0\u7684\u3001\u6709\u9650\u6e29\u5ea6\u4e0b\u7684\u70ed\u529b\u5b66\u5e73\u8861\u6001\uff0c\u52a8\u529b\u5b66\u65b9\u7a0b\u4e2d\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u968f\u673a\u9879\u3002</p> <p>\u56e0\u6b64\uff0c\u901a\u91cf\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u4fee\u6b63\u4e3a\u968f\u673a\u5f62\u5f0f\uff1a</p> \\[J_a = \\sum_b L_{ab} X_b + \\xi_a\\] <p>\u8fd9\u91cc\u7684 \\(\\xi_a\\) \u662f\u4e00\u4e2a\u968f\u673a\u566a\u58f0\u9879\uff0c\u4ee3\u8868\u70ed\u6da8\u843d\u7684\u6548\u5e94\u3002\u8fd9\u4e2a\u566a\u58f0\u7684\u6027\u8d28\u5e76\u975e\u4efb\u610f\uff0c\u5176\u7edf\u8ba1\u7279\u6027\u5fc5\u987b\u4e0e\u7cfb\u7edf\u7684\u8017\u6563\u6027\u8d28\uff08\u7531 \\(L_{ab}\\) \u63cf\u8ff0\uff09\u548c\u73af\u5883\u6e29\u5ea6 \\(T\\) \u7cbe\u786e\u5730\u5173\u8054\u8d77\u6765\u3002\u8fd9\u4e2a\u6df1\u523b\u7684\u8054\u7cfb\u5c31\u662f\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Fluctuation-Dissipation Theorem, FDT) \u3002\u5176\u6838\u5fc3\u5185\u5bb9\u662f\uff0c\u566a\u58f0\u9879\u7684\u65f6\u7a7a\u5173\u8054\u51fd\u6570\u7531\u6602\u8428\u683c\u7cfb\u6570\u552f\u4e00\u786e\u5b9a\uff1a</p> \\[\\langle \\xi_a(\\mathbf{x}, t) \\xi_b(\\mathbf{x}', t') \\rangle = 2 k_B T L_{ab} \\delta(\\mathbf{x}-\\mathbf{x}') \\delta(t-t')\\] <p>(\u6ce8\u610f\uff1aFrey\u6559\u6388\u7684\u8bfe\u7a0b\u4e2d\u901a\u5e38\u5c06\u73bb\u5c14\u5179\u66fc\u5e38\u6570 \\(k_B\\) \u8bbe\u4e3a1)\u3002\u8fd9\u4e2a\u516c\u5f0f\u7684\u7269\u7406\u5185\u6db5\u662f\uff1a\u8017\u6563\u8d8a\u5f3a\u7684\u8fc7\u7a0b\uff08\\(L_{ab}\\) \u8d8a\u5927\uff09\uff0c\u5176\u4f34\u968f\u7684\u70ed\u6da8\u843d\u4e5f\u5fc5\u7136\u8d8a\u5267\u70c8\u3002</p> <p>\u8ba9\u6211\u4eec\u7528\u70ed\u4f20\u5bfc\u7684\u4f8b\u5b50\u6765\u5177\u4f53\u8bf4\u660e\u8fd9\u4e00\u70b9\uff1a</p> <ul> <li> <p>\u786e\u5b9a\u6027\u90e8\u5206\uff1a\u5373\u5085\u91cc\u53f6\u5b9a\u5f8b \\(j_i^{(q)} = -\\kappa \\partial_i T\\)\u3002\u4e0e\u4e0a\u4e00\u8282\u8bc6\u522b\u51fa\u7684\u70ed\u529b\u5b66\u529b \\(X_k = -\\frac{1}{T^2}\\partial_k T\\) \u5bf9\u6bd4\uff0c\u53ef\u4ee5\u63a8\u5bfc\u51fa\u6602\u8428\u683c\u7cfb\u6570\u4e3a \\(L_{ik}^{(q)} = \\kappa T^2 \\delta_{ik}\\)\u3002</p> </li> <li> <p>\u6da8\u843d\u90e8\u5206\uff1a\u6839\u636eFDT\uff0c\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u968f\u673a\u70ed\u6d41 \\(\\eta_i\\)\u3002\u5176\u65f6\u7a7a\u5173\u8054\u51fd\u6570\u7531 \\(L_{ik}^{(q)}\\) \u51b3\u5b9a\uff1a</p> \\[\\langle \\eta_i(\\mathbf{x}, t) \\eta_j(\\mathbf{x}', t') \\rangle = 2 k_B T L_{ij}^{(q)} \\delta(\\mathbf{x}-\\mathbf{x}') \\delta(t-t') = 2 k_B T \\kappa T^2 \\delta_{ij} \\delta(\\mathbf{x}-\\mathbf{x}') \\delta(t-t')\\] </li> </ul> <p>\u8fd9\u4e2a\u7ed3\u679c\u7684\u7269\u7406\u56fe\u50cf\u6781\u4e3a\u6e05\u6670\uff1a\u8017\u6563\u8fc7\u7a0b\uff08\u5982\u70ed\u5bfc\u3001\u7c98\u6027\uff09\u5982\u540c\u201c\u6469\u64e6\u529b\u201d\uff0c\u9a71\u52a8\u7cfb\u7edf\u201c\u4e0b\u5c71\u201d\uff0c\u6ed1\u5411\u81ea\u7531\u80fd\u7684\u6700\u4f4e\u70b9\uff1b\u800c\u70ed\u6da8\u843d\u5219\u5982\u540c\u968f\u673a\u7684\u201c\u8e22\u52a8\u201d\uff0c\u4e3a\u7cfb\u7edf\u63d0\u4f9b\u201c\u4e0a\u5c71\u201d\u7684\u53ef\u80fd\u3002\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7ed9\u51fa\u4e86\u8fd9\u79cd\u201c\u8e22\u52a8\u201d\u7684\u6070\u5f53\u5f3a\u5ea6\uff0c\u4f7f\u5f97\u201c\u4e0b\u5c71\u201d\u7684\u8017\u6563\u4e0e\u201c\u4e0a\u5c71\u201d\u7684\u6da8\u843d\u8fbe\u5230\u4e00\u4e2a\u7cbe\u5999\u7684\u52a8\u6001\u5e73\u8861\u3002\u6b63\u662f\u8fd9\u4e2a\u5e73\u8861\uff0c\u786e\u4fdd\u4e86\u7cfb\u7edf\u6700\u7ec8\u80fd\u591f\u6b63\u786e\u5730\u63a2\u7d22\u6574\u4e2a\u81ea\u7531\u80fd\u5f62\u8c8c\uff0c\u5e76\u4ee5\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u7684\u6982\u7387\u505c\u7559\u5728\u5404\u4e2a\u72b6\u6001\uff0c\u4ece\u800c\u8fbe\u5230\u771f\u6b63\u7684\u70ed\u529b\u5b66\u5e73\u8861\u3002\u8fd9\u6b63\u662f\u8fde\u63a5\u7cfb\u7edf\u52a8\u529b\u5b66\u4e0e\u5e73\u8861\u6001\u7edf\u8ba1\u529b\u5b66\u7684\u6838\u5fc3\u6865\u6881\u3002</p>"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/#3-b","title":"3. \u6848\u4f8b\u7814\u7a76\uff1a\u5e72\u6027\u6269\u6563\u7c92\u5b50\u7cfb\u7edf\uff08\u6a21\u578bB\uff09\u7684\u52a8\u529b\u5b66","text":"<p>\u5728\u5efa\u7acb\u4e86\u7ebf\u6027\u4e0d\u53ef\u9006\u70ed\u529b\u5b66\u7684\u666e\u9002\u6846\u67b6\u540e\uff0c\u73b0\u5728\u662f\u65f6\u5019\u5c06\u5176\u5e94\u7528\u4e8e\u4e00\u4e2a\u5177\u4f53\u7684\u7269\u7406\u7cfb\u7edf\uff0c\u770b\u7406\u8bba\u5982\u4f55\u8f6c\u5316\u4e3a\u53ef\u8ba1\u7b97\u7684\u52a8\u529b\u5b66\u6a21\u578b\u3002\u6559\u6388\u5c06\u4ee5\u4e00\u4e2a\u76f8\u4e92\u4f5c\u7528\u7684\u6269\u6563\u7c92\u5b50\u7cfb\u7edf\u4e3a\u6848\u4f8b\uff0c\u5b8c\u6574\u5730\u5c55\u793a\u73b0\u4ee3\u7edf\u8ba1\u7269\u7406\u4e2d\u6784\u5efa\u5b8f\u89c2\u52a8\u529b\u5b66\u6a21\u578b\u7684\u6807\u51c6\u6d41\u7a0b\uff1a</p> <p>1. \u5047\u8bbe\u4e00\u4e2a\u81ea\u7531\u80fd \u2192 2. \u8bc6\u522b\u5b88\u6052\u5f8b \u2192 3. \u5229\u7528\u6602\u8428\u683c\u6846\u67b6\u548c\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u63a8\u5bfc\u968f\u673a\u52a8\u529b\u5b66\u65b9\u7a0b\u3002</p>"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/#31","title":"3.1 \u7cfb\u7edf\u5b9a\u4e49\u4e0e\u81ea\u7531\u80fd","text":"<p>\u6240\u8003\u8651\u7684\u7cfb\u7edf\u662f\u4e00\u4e2a\u7531\u5927\u91cf\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u6784\u6210\u7684\u96c6\u5408\uff0c\u5176\u72b6\u6001\u7531\u4e00\u4e2a\u8fde\u7eed\u7684 \u7c92\u5b50\u5bc6\u5ea6\u573a \\(\\rho(\\mathbf{x}, t)\\) \u6765\u63cf\u8ff0\u3002\u4e00\u4e2a\u5173\u952e\u7684\u8bbe\u5b9a\u662f\uff0c\u8fd9\u662f\u4e00\u4e2a\u201c\u5e72\u6027\u201d (dry) \u7cfb\u7edf\u3002\u8fd9\u610f\u5473\u7740\u7c92\u5b50\u5728\u4e00\u4e2a\u9759\u6001\u7684\u80cc\u666f\uff08\u70ed\u5e93\uff09\u4e2d\u8fd0\u52a8\uff0c\u8be5\u80cc\u666f\u53ea\u63d0\u4f9b\u6469\u64e6\u548c\u70ed\u6da8\u843d\uff0c\u4f46\u5176\u81ea\u8eab\u6ca1\u6709\u52a8\u529b\u5b66\u3002\u8fd9\u4e0e\u4e0b\u4e00\u8282\u8bfe\u8981\u8ba8\u8bba\u7684\u3001\u60ac\u6d6e\u5728\u52a8\u6001\u6d41\u4f53\u4e2d\u7684\u201c\u6e7f\u6027\u201d (wet) \u7cfb\u7edf\u5f62\u6210\u4e86\u672c\u8d28\u533a\u522b\uff0c\u540e\u8005\u4f1a\u5305\u542b\u7531\u6d41\u4f53\u4ecb\u5bfc\u7684\u6d41\u4f53\u52a8\u529b\u5b66\u76f8\u4e92\u4f5c\u7528\u3002</p> <p>\u63cf\u8ff0\u8be5\u7cfb\u7edf\u5e73\u8861\u6001\u6027\u8d28\u7684\u51fa\u53d1\u70b9\u662f\u5176\u81ea\u7531\u80fd\u6cdb\u51fd (Free Energy Functional) \\(F[\\rho]\\)\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5177\u6709\u77ed\u7a0b\u76f8\u4e92\u4f5c\u7528\u7684\u7cfb\u7edf\uff0c\u4e00\u4e2a\u5178\u578b\u4e14\u666e\u9002\u7684\u5f62\u5f0f\u662f\u91d1\u5179\u5821-\u6717\u9053 (Ginzburg-Landau) \u81ea\u7531\u80fd\uff1a</p> \\[F[\\rho] = \\int d\\mathbf{x} \\left[ f(\\rho) + \\frac{1}{2} K (\\nabla \\rho)^2 \\right]\\] <p>\u8fd9\u4e2a\u6cdb\u51fd\u7684\u7269\u7406\u5185\u6db5\u662f\u4e00\u573a\u6709\u5e8f\u4e0e\u65e0\u5e8f\u4e4b\u95f4\u7684\u201c\u62d4\u6cb3\u201d \uff0c\u7531\u4e24\u90e8\u5206\u6784\u6210\uff1a</p> <ol> <li> <p>\u5c40\u57df\u81ea\u7531\u80fd\u5bc6\u5ea6 \\(f(\\rho)\\) \uff1a\u5b83\u672c\u8eab\u5305\u542b\u4e24\u9879 \\(f(\\rho) = k_B T\\rho(\\ln \\rho - 1) + \\frac{1}{2} \\chi \\rho^2\\)\u3002</p> </li> <li> <p>\u7b2c\u4e00\u9879\u662f\u7406\u60f3\u6c14\u4f53\u7684\u71b5\u8d21\u732e \uff0c\u5b83\u503e\u5411\u4e8e\u6700\u5927\u5316\u7cfb\u7edf\u7684\u65e0\u5e8f\u5ea6\uff0c\u5c06\u7c92\u5b50\u5747\u5300\u5730\u6563\u5e03\u5728\u7a7a\u95f4\u4e2d\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u9879\u662f\u5e73\u5747\u573a\u76f8\u4e92\u4f5c\u7528\u9879 \uff0c\u53c2\u6570 \\(\\chi\\) \u63cf\u8ff0\u4e86\u7c92\u5b50\u95f4\u7684\u6709\u6548\u5438\u5f15\u529b\uff08\\(\\chi &lt; 0\\)\uff09\u6216\u6392\u65a5\u529b\uff08\\(\\chi &gt; 0\\)\uff09\u3002\u8fd9\u4e00\u9879\u503e\u5411\u4e8e\u8ba9\u7cfb\u7edf\u80fd\u91cf\u964d\u4f4e\uff0c\u53ef\u80fd\u5bfc\u81f4\u7c92\u5b50\u805a\u96c6\u6216\u5f62\u6210\u6709\u5e8f\u7ed3\u6784\u3002</p> </li> <li> <p>\u68af\u5ea6\u5e73\u65b9\u9879 \\(\\frac{1}{2} K (\\nabla \\rho)^2\\) \uff1a\u8fd9\u4e00\u9879\u4ee3\u8868\u4e86\u5bf9\u5bc6\u5ea6\u4e0d\u5747\u5300\u7684\u80fd\u91cf\u60e9\u7f5a\uff0c\u5176\u4e2d \\(K&gt;0\\)\u3002\u5b83\u6e90\u4e8e\u7c92\u5b50\u95f4\u7684\u77ed\u7a0b\u76f8\u4e92\u4f5c\u7528\uff0c\u4f7f\u5f97\u5f62\u6210\u5bc6\u5ea6\u6025\u5267\u53d8\u5316\u7684\u5c16\u9510\u754c\u9762\u9700\u8981\u4ed8\u51fa\u80fd\u91cf\u4ee3\u4ef7\uff0c\u56e0\u6b64\u5b83\u503e\u5411\u4e8e\u4f7f\u5bc6\u5ea6\u5206\u5e03\u53d8\u5f97\u5e73\u6ed1\u3002</p> </li> </ol>"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/#32","title":"3.2 \u63a8\u5bfc\u52a8\u529b\u5b66\u65b9\u7a0b","text":"<p>\u73b0\u5728\u5373\u53ef\u6309\u7167\u524d\u8ff0\u7684\u201c\u914d\u65b9\u201d\u6765\u63a8\u5bfc \\(\\rho(\\mathbf{x}, t)\\) \u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u3002</p> <ol> <li> <p>\u5b88\u6052\u5f8b\uff1a\u7cfb\u7edf\u7684\u603b\u7c92\u5b50\u6570\u662f\u5b88\u6052\u7684\u3002\u5176\u5c40\u57df\u8868\u73b0\u5f62\u5f0f\u5c31\u662f\u8fde\u7eed\u6027\u65b9\u7a0b\uff1a     $$     \\partial_t \\rho = -\\nabla \\cdot \\mathbf{J}     $$     \u5176\u4e2d \\(\\mathbf{J}\\) \u662f\u7c92\u5b50\u6d41\u5bc6\u5ea6\u3002</p> </li> <li> <p>\u8bc6\u522b\u901a\u91cf\u548c\u529b\uff1a</p> <ul> <li>\u901a\u91cf\uff1a\u5728\u8fd9\u4e2a\u5b88\u6052\u7cfb\u7edf\u4e2d\uff0c\u7c92\u5b50\u6d41 \\(\\mathbf{J}\\) \u663e\u7136\u662f\u70ed\u529b\u5b66\u901a\u91cf\u3002</li> <li>\u529b\uff1a\u9a71\u52a8\u7c92\u5b50\u6d41\u52a8\u7684\u201c\u52bf\u201d\u662f\u5316\u5b66\u52bf \\(\\mu\\) \u3002\u5728\u573a\u8bba\u6846\u67b6\u4e0b\uff0c\u5316\u5b66\u52bf\u88ab\u5b9a\u4e49\u4e3a\u81ea\u7531\u80fd\u6cdb\u51fd\u5bf9\u5bc6\u5ea6\u7684\u6cdb\u51fd\u5bfc\u6570\uff1a\\(\\mu = \\frac{\\delta F}{\\delta \\rho}\\)\u3002\u56e0\u6b64\uff0c\u4e0e\u4e4b\u5171\u8f6d\u7684\u70ed\u529b\u5b66\u529b\u662f\u5316\u5b66\u52bf\u7684\u8d1f\u68af\u5ea6\uff0c\u5373 \\(X = -\\nabla \\mu\\)\u3002</li> </ul> </li> <li> <p>\u5e94\u7528\u6602\u8428\u683c\u5173\u7cfb\u4e0eFDT\uff1a\u6839\u636e\u7ebf\u6027\u54cd\u5e94\u7406\u8bba\uff0c\u786e\u5b9a\u6027\u901a\u91cf\u4e0e\u529b\u6210\u6b63\u6bd4\uff0c\u5373 \\(\\mathbf{J}_{\\text{det}} = L(\\rho) X = -L(\\rho) \\nabla\\mu\\)\u3002\u8fd9\u91cc\u7684\u8f93\u8fd0\u7cfb\u6570 \\(L(\\rho)\\) \u88ab\u79f0\u4e3a\u8fc1\u79fb\u7387 (Mobility) \uff0c\u5b83\u63cf\u8ff0\u4e86\u7c92\u5b50\u5728\u5355\u4f4d\u529b\u9a71\u52a8\u4e0b\u79fb\u52a8\u7684\u96be\u6613\u7a0b\u5ea6\uff0c\u672c\u8eab\u53ef\u4ee5\u4f9d\u8d56\u4e8e\u5bc6\u5ea6\u3002\u7ed3\u5408\u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff0c\u603b\u7684\u7c92\u5b50\u6d41\u8868\u8fbe\u5f0f\u4e3a\uff1a</p> \\[\\mathbf{J} = -L(\\rho) \\nabla \\frac{\\delta F[\\rho]}{\\delta \\rho} + \\sqrt{2k_B T L(\\rho)} \\boldsymbol{\\Lambda}(\\mathbf{x}, t)\\] <p>\u5176\u4e2d \\(\\boldsymbol{\\Lambda}\\) \u662f\u4e00\u4e2a\u5f52\u4e00\u5316\u7684\u9ad8\u65af\u767d\u566a\u58f0\u77e2\u91cf\uff0c\u6ee1\u8db3\uff1a $$ \\langle \\Lambda_\\alpha(\\mathbf{x}, t) \\Lambda_\\beta(\\mathbf{x}', t') \\rangle = \\delta_{\\alpha\\beta} \\delta(\\mathbf{x} - \\mathbf{x}') \\delta(t - t') $$</p> </li> </ol> <p>\u5c06\u8fd9\u4e2a \\(\\mathbf{J}\\) \u7684\u8868\u8fbe\u5f0f\u4ee3\u5165\u8fde\u7eed\u6027\u65b9\u7a0b\uff0c\u5c31\u5f97\u5230\u4e86\u63cf\u8ff0\u8be5\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u5b8c\u6574\u7684\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\u3002\u8fd9\u4e2a\u65b9\u7a0b\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u4ecb\u7ecd\u8fc7\u7684\u6a21\u578bB (Model B)\uff0c\u5b83\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5b88\u6052\u6807\u91cf\u573a\u7684\u7eaf\u8017\u6563\u8fc7\u963b\u5c3c\u52a8\u529b\u5b66\u3002</p>"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/#33","title":"3.3 \u6269\u6563\u65b9\u7a0b","text":"<p>\u4e3a\u4e86\u9a8c\u8bc1\u8fd9\u4e2a\u590d\u6742\u6846\u67b6\u7684\u6b63\u786e\u6027\uff0c\u5e76\u63ed\u793a\u5176\u4e2d\u7269\u7406\u91cf\u7684\u6df1\u523b\u8054\u7cfb\uff0c\u53ef\u4ee5\u8003\u5bdf\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u60c5\u5f62\uff1a\u65e0\u76f8\u4e92\u4f5c\u7528\u7684\u7406\u60f3\u6c14\u4f53 \u3002\u8fd9\u610f\u5473\u7740\u5ffd\u7565\u76f8\u4e92\u4f5c\u7528\uff08\\(\\chi = 0\\)\uff09\u548c\u68af\u5ea6\u80fd\u91cf\uff08\\(K = 0\\)\uff09\u3002\u81ea\u7531\u80fd\u53ea\u5269\u4e0b\u7406\u60f3\u6c14\u4f53\u71b5\u7684\u90e8\u5206\uff1a\\(F_{\\text{ideal}} = k_B T \\int \\rho(\\ln \\rho - 1) d\\mathbf{x}\\)\u3002</p> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u63a8\u5bfc\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u8ba1\u7b97\u5316\u5b66\u52bf\uff1a     $$    \\mu = \\frac{\\delta F_{\\text{ideal}}}{\\delta \\rho} = k_B T (\\ln \\rho + 1 - 1) = k_B T \\ln \\rho    $$</p> </li> <li> <p>\u8ba1\u7b97\u5316\u5b66\u52bf\u68af\u5ea6\uff1a     $$    \\nabla \\mu = \\frac{k_B T}{\\rho} \\nabla \\rho    $$</p> </li> <li> <p>\u5199\u51fa\u786e\u5b9a\u6027\u7c92\u5b50\u6d41\uff1a     $$     \\mathbf{J}_{\\text{det}} = -L(\\rho) \\nabla \\mu = -L(\\rho) \\frac{k_B T}{\\rho} \\nabla \\rho     $$</p> </li> <li> <p>\u7269\u7406\u8fa8\u8bc6\uff1a\u73b0\u5728\u9700\u8981\u786e\u5b9a\u8fc1\u79fb\u7387 \\(L(\\rho)\\) \u7684\u5177\u4f53\u5f62\u5f0f\u3002\u4e00\u4e2a\u7269\u7406\u4e0a\u5408\u7406\u7684\u5047\u8bbe\u662f\uff0c\u8fc1\u79fb\u7387\u5e94\u4e0e\u7c92\u5b50\u6570\u6210\u6b63\u6bd4\uff0c\u56e0\u4e3a\u7c92\u5b50\u8d8a\u591a\uff0c\u5bf9\u68af\u5ea6\u7684\u54cd\u5e94\u4e5f\u8d8a\u5f3a\u3002\u8bfe\u5802\u677f\u4e66\u660e\u786e\u6307\u51fa\uff0c\u4e3a\u4e86\u6062\u590d\u6269\u6563\u65b9\u7a0b\uff0c\u5fc5\u987b\u6709 \\(L(\\rho) = \\frac{D\\rho}{k_B T}\\)\u3002\u5176\u4e2d \\(D\\) \u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u5373\u6269\u6563\u7cfb\u6570\u3002</p> </li> <li> <p>\u6062\u590d\u83f2\u514b\u5b9a\u5f8b\uff1a\u5c06\u4e0a\u8ff0 \\(L(\\rho)\\) \u7684\u5f62\u5f0f\u4ee3\u5165\u7c92\u5b50\u6d41\u8868\u8fbe\u5f0f\uff1a     $$     \\mathbf{J}_{\\text{det}} = -\\left(\\frac{D\\rho}{k_B T}\\right) \\frac{k_B T}{\\rho} \\nabla \\rho = -D \\nabla \\rho     $$     \u8fd9\u6b63\u662f\u6211\u4eec\u719f\u77e5\u7684\u83f2\u514b\u7b2c\u4e00\u5b9a\u5f8b (Fick's First Law) \uff01</p> </li> </ol> <p>\u5c06\u83f2\u514b\u5b9a\u5f8b\u4ee3\u5165\u8fde\u7eed\u6027\u65b9\u7a0b \\(\\partial_t \\rho = -\\nabla \\cdot \\mathbf{J}_{\\text{det}}\\)\uff0c\u4fbf\u5f97\u5230\u4e86\u8457\u540d\u7684\u6269\u6563\u65b9\u7a0b \uff1a $$ \\partial_t \\rho = D \\nabla^2 \\rho $$</p> <p>\u8fd9\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u582a\u79f0\u5b8c\u7f8e\uff1a\u5b83\u4e0d\u4ec5\u5c55\u793a\u4e86\u8fd9\u4e2a\u666e\u9002\u7684\u3001\u57fa\u4e8e\u81ea\u7531\u80fd\u548c\u71b5\u4ea7\u751f\u7684\u62bd\u8c61\u6846\u67b6\u80fd\u591f\u6b63\u786e\u5730\u56de\u5f52\u5230\u5df2\u77e5\u7684\u3001\u66f4\u7b80\u5355\u7684\u7269\u7406\u5b9a\u5f8b\uff0c\u800c\u4e14\u8fd8\u63ed\u793a\u4e86\u5b8f\u89c2\u8f93\u8fd0\u7cfb\u6570\uff08\u6269\u6563\u7cfb\u6570 \\(D\\)\uff09\u4e0e\u5fae\u89c2\u52a8\u529b\u5b66\u53c2\u6570\uff08\u8fc1\u79fb\u7387 \\(L(\\rho)\\)\uff09\u4ee5\u53ca\u6e29\u5ea6\u4e4b\u95f4\u7684\u6df1\u523b\u8054\u7cfb\u3002\u5173\u7cfb\u5f0f \\(D = L(\\rho) k_B T / \\rho\\) \u6b63\u662f\u7231\u56e0\u65af\u5766\u5173\u7cfb\u5728\u8fd9\u4e2a\u8fde\u7eed\u573a\u8bba\u6846\u67b6\u4e0b\u7684\u5177\u4f53\u4f53\u73b0\u3002</p>"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/#4-ai","title":"4. \u4ee3\u7801\u5b9e\u8df5\uff1a\u8fde\u63a5\u7269\u7406\u6269\u6563\u4e0e\u751f\u6210\u5f0fAI","text":"<p>\u7c92\u5b50\u6269\u6563\u7684\u6a21\u62df\u6211\u4eec\u5df2\u7ecf\u5728\u7b2c17\u8bb2\u7b14\u8bb0\u4e2d\u8fdb\u884c\u8fc7\u4ee3\u7801\u5b9e\u8df5\uff0c\u56e0\u6b64\u672c\u8282\u4ee3\u7801\u5c06\u505a\u66f4\u8fdb\u4e00\u6b65\u7684\u62d3\u5c55\u548c\u601d\u8003\u3002\u8bb2\u5230\u6269\u6563\u6a21\u578b\uff0c\u521d\u5b66\u8005\u6700\u5148\u60f3\u5230\u7684\u662f\uff0c\u5f53\u7ecf\u6df1\u5ea6\u5b66\u4e60\u4e2d\u6700\u6d41\u884c\u7684\u6a21\u578b\u2014\u2014Diffusion Model(DDPM)\u3002\u8fd9\u4e2a\u6269\u6563\u6a21\u578b\u548c\u8fd9\u8282\u8bfe\u5c06\u7684\u6269\u6563\u6a21\u578b\u6709\u4ec0\u4e48\u8054\u7cfb\u5462\uff1f</p> <p>\u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u4eec\u7684\u6838\u5fc3\u601d\u60f3\u4e00\u8109\u76f8\u627f\uff0c\u4f46\u76ee\u6807\u548c\u5e94\u7528\u5374\u622a\u7136\u76f8\u53cd\u3002</p> <ul> <li> <p>\u7269\u7406\u5b66\u4e2d\u7684\u6269\u6563\u6a21\u578b (\u672c\u8bfe\u7a0b\u5185\u5bb9) \u662f\u4e00\u4e2a\u63cf\u8ff0\u6027 (Descriptive) \u6a21\u578b\uff0c\u5176\u76ee\u6807\u662f\u7406\u89e3\u548c\u9884\u6d4b\u81ea\u7136\u3002\u5b83\u63cf\u8ff0\u4e86\u7c92\u5b50\u5982\u4f55\u4ece\u6709\u5e8f\u72b6\u6001\u81ea\u53d1\u5730\u6f14\u5316\u5230\u65e0\u5e8f\u72b6\u6001\uff08\u71b5\u589e\uff09\u3002</p> </li> <li> <p>\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u6269\u6563\u6a21\u578b \u662f\u4e00\u4e2a\u751f\u6210\u5f0f (Generative) \u6a21\u578b\uff0c\u5176\u76ee\u6807\u662f\u5b66\u4e60\u548c\u521b\u9020\u6570\u636e\u3002\u5b83\u901a\u8fc7\u5b66\u4e60\u5982\u4f55\u9006\u8f6c\u4e00\u4e2a\u4ece\u6709\u5e8f\u5230\u65e0\u5e8f\u7684\u8fc7\u7a0b\uff0c\u6765\u5b9e\u73b0\u4ece\u5b8c\u5168\u7684\u65e0\u5e8f\uff08\u566a\u58f0\uff09\u4e2d\u521b\u9020\u51fa\u9ad8\u5ea6\u6709\u5e8f\u7684\u6570\u636e\uff08\u5982\u56fe\u7247\uff09\u3002</p> </li> </ul> <p>\u6838\u5fc3\u533a\u522b\u4e0e\u8054\u7cfb\u5bf9\u7167\u8868</p> \u7279\u5f81 \u7269\u7406\u5b66\u6269\u6563\u6a21\u578b (\u672c\u8bfe\u7a0b) \u6df1\u5ea6\u5b66\u4e60\u6269\u6563\u6a21\u578b (AI\u9886\u57df) \u6838\u5fc3\u76ee\u6807 \u63cf\u8ff0\u4e0e\u9884\u6d4b\uff1a\u7406\u89e3\u5e76\u7528\u6570\u5b66\u65b9\u7a0b\u63cf\u8ff0\u4e00\u4e2a\u771f\u5b9e\u53d1\u751f\u7684\u7269\u7406\u8fc7\u7a0b\u3002 \u751f\u6210\u4e0e\u521b\u9020\uff1a\u5b66\u4e60\u4e00\u4e2a\u6570\u636e\u5206\u5e03\uff0c\u4ece\u800c\u80fd\u591f\u521b\u9020\u51fa\u5168\u65b0\u7684\u3001\u7c7b\u4f3c\u7684\u6570\u636e\u3002 \u8fc7\u7a0b\u65b9\u5411 \u6b63\u5411\u8fc7\u7a0b (Forward Process) \uff1a\u53ea\u5173\u5fc3\u4ece\u6709\u5e8f\uff08\u5982\u58a8\u6ef4\uff09\u5230\u65e0\u5e8f\uff08\u5747\u5300\u6df7\u5408\uff09\u7684\u5355\u5411\u6f14\u5316\u3002 \u9006\u5411\u8fc7\u7a0b (Reverse Process) \uff1a\u6838\u5fc3\u662f\u5b66\u4e60\u5982\u4f55\u4ece\u65e0\u5e8f\uff08\u968f\u673a\u566a\u58f0\uff09\u4e00\u6b65\u6b65\u6062\u590d\u5230\u6709\u5e8f\uff08\u6e05\u6670\u56fe\u7247\uff09\u3002 \u7406\u8bba\u57fa\u7840 \u70ed\u529b\u5b66\u4e0e\u7edf\u8ba1\u7269\u7406\uff1a\u57fa\u4e8e\u81ea\u7531\u80fd\u3001\u71b5\u3001\u5316\u5b66\u52bf\u7b49\u7269\u7406\u6982\u5ff5\u3002 \u673a\u5668\u5b66\u4e60\u4e0e\u6982\u7387\u8bba\uff1a\u57fa\u4e8e\u9a6c\u5c14\u53ef\u592b\u94fe\u3001\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u548c\u795e\u7ecf\u7f51\u7edc\u53c2\u6570\u5316\u3002 \u63a7\u5236\u65b9\u7a0b \u786e\u5b9a\u7684\u504f\u5fae\u5206\u65b9\u7a0b\uff0c\u5982 \\(\\partial_t \\rho = D \\nabla^2 \\rho\\)\u3002 \u7531\u4e00\u4e2a\u7ecf\u8fc7\u8bad\u7ec3\u7684\u795e\u7ecf\u7f51\u7edc\u6765\u53c2\u6570\u5316\u7684\u3001\u53ef\u5b66\u4e60\u7684\u9006\u5411\u968f\u673a\u8fc7\u7a0b\u3002 \u201c\u6269\u6563\u201d\u7684\u4f5c\u7528 \u4e00\u4e2a\u9700\u8981\u88ab\u5efa\u6a21\u548c\u7406\u89e3\u7684\u81ea\u7136\u73b0\u8c61\u3002 \u4e00\u4e2a\u4eba\u4e3a\u8bbe\u8ba1\u7684\u3001\u7528\u4e8e\u9010\u6e10\u7834\u574f\u6570\u636e\u7ed3\u6784\u7684\u5de5\u5177\u3002 \u5b66\u4e60/\u6c42\u89e3\u4ec0\u4e48 \u901a\u8fc7\u5b9e\u9a8c\u6570\u636e\u6c42\u89e3\u7269\u7406\u53c2\u6570\uff0c\u5982\u6269\u6563\u7cfb\u6570 \\(D\\)\u3002 \u5b66\u4e60\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u6743\u91cd\uff0c\u4f7f\u5176\u80fd\u591f\u7cbe\u786e\u5730\u9884\u6d4b\u5e76\u79fb\u9664\u6bcf\u4e00\u6b65\u6dfb\u52a0\u7684\u566a\u58f0\u3002"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/#_2","title":"\u6df1\u5ea6\u89e3\u8bfb","text":"<p>\u6df1\u5ea6\u5b66\u4e60\u6269\u6563\u6a21\u578b\u7684\u7075\u611f\uff0c\u5b8c\u5168\u6765\u81ea\u4e8e\u672c\u8bfe\u7a0b\u6240\u5b66\u7684\u7269\u7406\u6269\u6563\u8fc7\u7a0b\u3002</p> <p>\u5728\u7269\u7406\u5b66\u4e2d\uff0c\u4e00\u4e2a\u9ad8\u5ea6\u6709\u5e8f\u7684\u5bc6\u5ea6\u5206\u5e03\uff08\u6bd4\u5982\u4e00\u6ef4\u58a8\u6c34\uff09\u4f1a\u968f\u7740\u65f6\u95f4\u6d41\u901d\uff0c\u56e0\u7c92\u5b50\u7684\u968f\u673a\u8fd0\u52a8\uff08\u5e03\u6717\u8fd0\u52a8\uff09\u800c\u9010\u6e10\u6269\u6563\uff0c\u6700\u7ec8\u53d8\u6210\u5b8c\u5168\u5747\u5300\u3001\u65e0\u5e8f\u7684\u6df7\u6c8c\u72b6\u6001\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u81ea\u53d1\u7684\uff0c\u7531\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u9a71\u52a8\u3002</p> <p>\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u201c\u6a21\u62df\u201d\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u4ed6\u4eec\u4ece\u4e00\u5f20\u9ad8\u5ea6\u6709\u5e8f\u7684\u6e05\u6670\u56fe\u7247\uff08\u6bd4\u5982\u732b\u7684\u7167\u7247\uff09\u5f00\u59cb\uff0c\u4eba\u4e3a\u5730\u3001\u4e00\u6b65\u6b65\u5730\u5411\u56fe\u7247\u4e2d\u52a0\u5165\u5fae\u91cf\u7684\u9ad8\u65af\u566a\u58f0\u3002\u7ecf\u8fc7\u6210\u767e\u4e0a\u5343\u6b65\u4e4b\u540e\uff0c\u6700\u521d\u7684\u732b\u7684\u7167\u7247\u5b8c\u5168\u6d88\u5931\u4e86\uff0c\u53d8\u6210\u4e86\u4e00\u5f20\u7eaf\u7cb9\u7684\u3001\u6beb\u65e0\u89c4\u5f8b\u7684\u968f\u673a\u566a\u58f0\u201c\u9a6c\u8d5b\u514b\u201d\u3002</p> <p>\u8fd9\u4e2a\u5728AI\u4e2d\u88ab\u79f0\u4e3a\u201c\u6b63\u5411\u8fc7\u7a0b\u201d\u6216\u201c\u6269\u6563\u8fc7\u7a0b\u201d\u7684\u6b65\u9aa4\uff0c\u5176\u6570\u5b66\u5f62\u5f0f\u4e0e\u7269\u7406\u5b66\u4e2d\u7684\u6269\u6563\u65b9\u7a0b\uff08\u6216\u5176\u79bb\u6563\u5316\u7684\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\uff09\u662f\u5b8c\u5168\u4e00\u81f4\u7684\u3002\u5b83\u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u3001\u65e0\u9700\u5b66\u4e60\u7684\u3001\u5c06\u590d\u6742\u6570\u636e\u8f6c\u5316\u4e3a\u7b80\u5355\u566a\u58f0\u7684\u914d\u65b9\u3002</p> <p>\u7269\u7406\u5b66\u5bb6\u7684\u76ee\u6807\uff0c\u662f\u4e3a\u4e0a\u8ff0\u7684\u6b63\u5411\u8fc7\u7a0b\u5efa\u7acb\u4e00\u4e2a\u6570\u5b66\u6a21\u578b\uff0c\u4ee5\u4fbf\u80fd\u591f\u9884\u6d4b\u58a8\u6c34\u5728\u4efb\u4f55\u65f6\u523b\u7684\u6d53\u5ea6\u5206\u5e03\u3002\u6211\u4eec\u4e0d\u4f1a\u53bb\u95ee\uff1a\u201c\u5982\u4f55\u8ba9\u5747\u5300\u6df7\u5408\u7684\u58a8\u6c34\u81ea\u52a8\u53d8\u56de\u4e00\u6ef4\u58a8\u6ef4\uff1f\u201d\u2014\u2014\u56e0\u4e3a\u8fd9\u5728\u5b8f\u89c2\u4e0a\u662f\u8fdd\u80cc\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u3002</p> <p>AI\u7814\u7a76\u8005\u7684\u76ee\u6807\uff0c\u5374\u6070\u6070\u662f\u8fd9\u4e2a\u7269\u7406\u4e0a\u4e0d\u53ef\u80fd\u7684\u95ee\u9898\u3002\u4ed6\u4eec\u95ee\uff1a\u201c\u65e2\u7136\u6211\u6709\u4e00\u4e2a\u80fd\u5c06\u4efb\u4f55\u56fe\u7247\u90fd\u53d8\u6210\u6807\u51c6\u566a\u58f0\u7684\u56fa\u5b9a\u6d41\u7a0b\uff0c\u80fd\u5426\u5b66\u4e60\u4e00\u4e2a\u2018\u65f6\u95f4\u5012\u6d41\u2019\u7684\u673a\u5668\uff0c\u80fd\u5c06\u8fd9\u4e2a\u8fc7\u7a0b\u5b8c\u7f8e\u5730\u9006\u8f6c\u8fc7\u6765\uff1f\u201d</p> <p>\u8fd9\u4e2a\u201c\u65f6\u95f4\u5012\u6d41\u7684\u673a\u5668\u201d\u5c31\u662f\u4e00\u4e2a\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff08\u901a\u5e38\u662fU-Net\u67b6\u6784\uff09\u3002\u5b83\u7684\u4efb\u52a1\u662f\uff1a\u8f93\u5165\u4e00\u5f20\u52a0\u4e86\u566a\u58f0\u7684\u56fe\u7247\u548c\u5f53\u524d\u7684\u65f6\u95f4\u6b65\uff0c\u7136\u540e\u9884\u6d4b\u51fa\u5728\u90a3\u4e00\u6b65\u88ab\u52a0\u5165\u7684\u566a\u58f0\u662f\u4ec0\u4e48\u3002</p> <p>\u4e00\u65e6\u8fd9\u4e2a\u7f51\u7edc\u88ab\u8bad\u7ec3\u5f97\u8db3\u591f\u597d\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u751f\u6210\uff1a</p> <ol> <li> <p>\u4ece\u4e00\u4e2a\u4e0e\u76ee\u6807\u56fe\u7247\u5c3a\u5bf8\u76f8\u540c\u7684\u3001\u7eaf\u7cb9\u7684\u968f\u673a\u9ad8\u65af\u566a\u58f0\u5f00\u59cb\u3002</p> </li> <li> <p>\u8ba9\u795e\u7ecf\u7f51\u7edc\u9884\u6d4b\u8fd9\u4e2a\u566a\u58f0\u56fe\u50cf\u4e2d\u7684\u201c\u566a\u58f0\u90e8\u5206\u201d\u3002</p> </li> <li> <p>\u4ece\u56fe\u50cf\u4e2d\u51cf\u53bb\u8fd9\u4e2a\u9884\u6d4b\u51fa\u7684\u566a\u58f0\uff08\u53ea\u51cf\u53bb\u4e00\u5c0f\u90e8\u5206\uff09\u3002</p> </li> <li> <p>\u91cd\u590d\u4e0a\u4e00\u6b65\u6570\u767e\u6b21\u3002</p> </li> </ol> <p>\u795e\u5947\u7684\u662f\uff0c\u968f\u7740\u566a\u58f0\u88ab\u4e00\u6b65\u6b65\u5730\u3001\u6709\u6307\u5bfc\u5730\u79fb\u9664\uff0c\u4e00\u4e2a\u6e05\u6670\u3001\u5168\u65b0\u7684\u3001\u6b64\u524d\u4ece\u672a\u89c1\u8fc7\u7684\u56fe\u50cf\uff08\u6bd4\u5982\u53e6\u4e00\u53ea\u732b\uff09\u5c31\u4f1a\u4ece\u6df7\u6c8c\u4e2d\u9010\u6e10\u6d6e\u73b0\u51fa\u6765\u3002</p> <p>\u603b\u7ed3\u6765\u8bf4\uff0c\u6df1\u5ea6\u5b66\u4e60\u7684\u6269\u6563\u6a21\u578b\u5de7\u5999\u5730\u201c\u501f\u7528\u201d\u4e86\u7269\u7406\u6269\u6563\u8fc7\u7a0b\u7684\u6570\u5b66\u5f62\u5f0f\u6765\u8bbe\u8ba1\u5176\u6b63\u5411\u7684\u201c\u6570\u636e\u9500\u6bc1\u201d\u8fc7\u7a0b\uff0c\u4f46\u5176\u771f\u6b63\u7684\u521b\u65b0\u548c\u6838\u5fc3\u5728\u4e8e\uff0c\u5229\u7528\u5f3a\u5927\u7684\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u9006\u8fc7\u7a0b\uff0c\u4ece\u800c\u628a\u5b83\u53d8\u6210\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u751f\u6210\u5de5\u5177\u3002</p>"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/#_3","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u4e3a\u4e86\u5c06\u672c\u8bfe\u7a0b\u6240\u5b66\u7684\u7269\u7406\u6269\u6563\u6a21\u578b\u4e0e\u5f53\u524d\u4eba\u5de5\u667a\u80fd\u9886\u57df\u6700\u70ed\u95e8\u7684\u751f\u6210\u5f0f\u6269\u6563\u6a21\u578b\u8054\u7cfb\u8d77\u6765\uff0c\u4e0b\u9762\u5c06\u901a\u8fc7\u4ee3\u7801\u540c\u65f6\u6a21\u62df\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\uff1a</p> <p>\u6b63\u5411\u7269\u7406\u6269\u6563 (Forward Process):   \u4ece\u4e00\u5f20\u6e05\u6670\u7684\u56fe\u50cf \\(x_0\\) \u5f00\u59cb\u3002\u5728\u6bcf\u4e00\u4e2a\u65f6\u95f4\u6b65\uff0c\u6211\u4eec\u90fd\u5411\u56fe\u50cf\u4e2d\u52a0\u5165\u5c11\u91cf\u7684\u9ad8\u65af\u566a\u58f0\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5728\u6570\u5b66\u4e0a\u4e0e\u7b2c23\u8bb2\u4e2d\u4ece\u6717\u4e4b\u4e07\u65b9\u7a0b\u63a8\u5bfc\u51fa\u7684\u6da8\u843d\u52a8\u529b\u5b66\u662f\u7b49\u4ef7\u7684\uff0c\u4e5f\u4e0e\u672c\u8bb2\u4e2d\u6a21\u578bB\u7684\u968f\u673a\u9879 \\(\\xi_J\\) \u7684\u4f5c\u7528\u7c7b\u4f3c\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u5728\u4efb\u610f\u65f6\u523b \\(t\\) \u7684\u72b6\u6001 \\(x_t\\) \u53ef\u4ee5\u7531\u521d\u59cb\u72b6\u6001 \\(x_0\\) \u548c\u4e00\u4e2a\u6807\u51c6\u9ad8\u65af\u566a\u58f0 \\(\\epsilon\\) \u76f4\u63a5\u5f97\u5230\uff1a $$   x_t = \\sqrt{\\bar{\\alpha}_t} x_0 + \\sqrt{1 - \\bar{\\alpha}_t} \\epsilon $$</p> <p>\u5176\u4e2d\uff0c\\(\\bar{\\alpha}_t\\) \u662f\u4e00\u4e2a\u9884\u5148\u8bbe\u5b9a\u7684\u3001\u968f\u65f6\u95f4 \\(t\\) \u51cf\u5c0f\u7684\u7cfb\u6570\uff0c\u5b83\u63a7\u5236\u4e86\u4fe1\u53f7\uff08\u539f\u59cb\u56fe\u50cf\uff09\u4e0e\u566a\u58f0\u7684\u76f8\u5bf9\u6bd4\u4f8b\u3002\u968f\u7740\u65f6\u95f4\u63a8\u79fb\uff0c\\(\\bar{\\alpha}_t \\to 0\\)\uff0c\u56fe\u50cf\u7684\u201c\u4fe1\u606f\u201d\u4f1a\u4e0d\u65ad\u88ab\u566a\u58f0\u201c\u6c61\u67d3\u201d\uff0c\u6700\u7ec8\u5b8c\u5168\u878d\u5165\u80cc\u666f\u566a\u58f0\u4e2d\uff0c\u7cfb\u7edf\u7684\u71b5\u8fbe\u5230\u6700\u5927\u3002</p> <p>\u9006\u5411\u751f\u6210\u8fc7\u7a0b (Reverse Process):   \u8fd9\u662f\u6df1\u5ea6\u5b66\u4e60\u6269\u6563\u6a21\u578b\u7684\u7cbe\u9ad3\u3002\u4ece\u4e00\u4e2a\u7eaf\u7cb9\u7684\u968f\u673a\u566a\u58f0\u56fe\u50cf \\(x_T\\) \u5f00\u59cb\u3002\u5728\u6bcf\u4e2a\u201c\u9006\u5411\u201d\u7684\u65f6\u95f4\u6b65\uff0c\u6211\u4f7f\u7528\u4e00\u4e2a\u201c\u53bb\u566a\u201d\u6a21\u578b\u6765\u9884\u6d4b\u5e76\u79fb\u9664\u56fe\u50cf\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u566a\u58f0\u3002\u8fd9\u4e2a\u6a21\u578b\u7684\u76ee\u6807\u662f\u9884\u6d4b\u5728\u6b63\u5411\u8fc7\u7a0b\u4e2d\u52a0\u5165\u7684\u566a\u58f0 \\(\\epsilon\\)\uff0c\u7136\u540e\u901a\u8fc7\u4ee5\u4e0b\u516c\u5f0f\u6765\u8fd1\u4f3c\u6062\u590d\u51fa\u524d\u4e00\u65f6\u523b\u7684\u72b6\u6001 \\(x_{t-1}\\)\uff1a</p> \\[   x_{t-1} = \\frac{1}{\\sqrt{\\alpha_t}} \\left( x_t - \\frac{1 - \\alpha_t}{\\sqrt{1 - \\bar{\\alpha}_t}} \\epsilon_\\theta(x_t, t) \\right) + \\sigma_t z \\] <p>\u8fd9\u91cc\u7684 \\(\\epsilon_\\theta(x_t, t)\\) \u5c31\u662f\u7531\u795e\u7ecf\u7f51\u7edc\u3002\u4e3a\u4e86\u7b80\u5316\u4ee3\u7801\uff0c\u7701\u7565\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u5728\u4ee3\u7801\u4e2d\u7531\u4e00\u4e2a\u7406\u60f3\u5316\u7684\u201c\u795e\u8c15\u6a21\u578b\u201d(oracle_model)\u4ee3\u66ff\u6240\u9884\u6d4b\u7684\u566a\u58f0\u3002\u901a\u8fc7\u53cd\u590d\u8fed\u4ee3\u8fd9\u4e2a\u53bb\u566a\u6b65\u9aa4\uff0c\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u3001\u6e05\u6670\u7684\u56fe\u50cf\u5c06\u4ece\u566a\u58f0\u4e2d\u9010\u6e10\u201c\u6d6e\u73b0\u201d\u51fa\u6765\u3002</p> <p>\u4f7f\u7528 oracle_model \u7684\u76ee\u7684\u662f\u4e3a\u4e86\u6f14\u793a\u7406\u60f3\u7684\u53cd\u5411\u8fc7\u7a0b\uff0c\u800c\u4e0d\u9700\u8981\u5b9e\u9645\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u3002\u8fd9\u6837\u53ef\u4ee5\u770b\u5230\u5982\u679c\u6709\u4e00\u4e2a\u5b8c\u7f8e\u7684\u6a21\u578b\uff08\u80fd\u51c6\u786e\u9884\u6d4b\u566a\u58f0\uff09\uff0c\u53cd\u5411\u8fc7\u7a0b\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u8fd9\u662f\u7406\u8bba\u4e0a\u7684\u6700\u4f73\u60c5\u51b5\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u795e\u7ecf\u7f51\u7edc\u53ea\u80fd\u8fd1\u4f3c\u8fbe\u5230\u8fd9\u79cd\u6027\u80fd\u6c34\u5e73\u3002</p> <pre><code># --- 1. Preamble and Imports ---\nimport numpy as np\nimport torch # Using PyTorch for its GPU capabilities and autograd, convenient for ML\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\nfrom scipy.stats import norm\n\n# --- 2. Setup and Hyperparameters ---\n# Timesteps for the diffusion process\nT = 200 \n# Define the beta schedule (how much noise is added at each step)\n# This is a linear schedule, which is simple and effective.\nbetas = torch.linspace(0.0001, 0.02, T)\n\n# Pre-calculate alphas and their cumulative products, which are key to the diffusion math\nalphas = 1. - betas\nalphas_cumprod = torch.cumprod(alphas, axis=0)\n# These pre-calculated values are essential for both the forward and reverse processes\n\n# --- 3. Create the \"Ordered System\": A Simple Image ---\ndef create_initial_state(size=64, shape='smiley'):\n    \"\"\"Creates a simple 2D image as our initial ordered state.\"\"\"\n    img = torch.zeros((size, size))\n    if shape == 'smiley':\n        # Face circle\n        for i in range(size):\n            for j in range(size):\n                if (i - size//2)**2 + (j - size//2)**2 &lt; (size//2.5)**2:\n                    img[i, j] = 1.0\n        # Eyes\n        img[size//2-10:size//2-5, size//2-10:size//2-5] = -1.0\n        img[size//2-10:size//2-5, size//2+5:size//2+10] = -1.0\n        # Mouth\n        for i in range(size//2+5, size//2+15):\n            img[i, size//2-10:size//2+10] = -1.0\n    return img\n\nx_start = create_initial_state()\n\n# --- 4. The Forward Process (Physics Perspective) ---\ndef q_sample(x_start, t, noise=None):\n    \"\"\"\n    Adds noise to an image x_start to get its state at time t.\n    This function directly implements the forward physical diffusion process.\n    \"\"\"\n    if noise is None:\n        noise = torch.randn_like(x_start)\n\n    # Get the pre-calculated coefficients for the given timestep t\n    sqrt_alphas_cumprod_t = torch.sqrt(alphas_cumprod[t])\n    sqrt_one_minus_alphas_cumprod_t = torch.sqrt(1. - alphas_cumprod[t])\n\n    # Apply the forward process formula\n    # x_t = sqrt(alpha_cumprod_t) * x_0 + sqrt(1 - alpha_cumprod_t) * noise\n    noisy_image = sqrt_alphas_cumprod_t * x_start + sqrt_one_minus_alphas_cumprod_t * noise\n    return noisy_image\n\n# --- 5. The Reverse Process (Generative AI Perspective) ---\ndef p_sample(model, x, t):\n    \"\"\"\n    Performs one step of denoising using a 'model'.\n    This is the core of the reverse generative process.\n    \"\"\"\n    # Use the model to predict the noise that was added at this timestep\n    predicted_noise = model(x, t)\n\n    # The mathematical formula to reverse one step\n    alpha_t = alphas[t]\n    alpha_cumprod_t = alphas_cumprod[t]\n\n    # Subtract the predicted noise from the current image\n    denoised_x = (x - torch.sqrt(1. - alpha_cumprod_t) * predicted_noise) / torch.sqrt(alpha_t)\n\n    # Add back a small amount of stochastic noise (optional but common in practice)\n    if t &gt; 0:\n        noise = torch.randn_like(x)\n        beta_t = betas[t]\n        sigma_t = torch.sqrt(beta_t) # Simplified variance\n        denoised_x += sigma_t * noise\n\n    return denoised_x\n\n# --- 6. The \"Oracle\" Model (Simulating a Perfectly Trained AI) ---\ndef oracle_model(x_t, t, x_start_ref):\n    \"\"\"\n    This is a placeholder for a real, trained neural network (like a U-Net).\n    An 'oracle' has access to the original image (x_start_ref) and can therefore\n    perfectly calculate the noise that was added. This allows us to visualize\n    the ideal reverse process without the need for model training.\n    \"\"\"\n    # The true noise is calculated by rearranging the forward process formula\n    true_noise = (x_t - torch.sqrt(alphas_cumprod[t]) * x_start_ref) / torch.sqrt(1. - alphas_cumprod[t])\n    return true_noise\n\n# --- 7. Run the Full Simulation and Store Data ---\nprint(\"Running forward and reverse simulations to generate data...\")\n# Timesteps to display in the GIF and plots\ndisplay_timesteps = [0, T//4, T//2, 3*T//4, T-1]\n\n# --- Run Forward Process ---\nforward_images = []\nfor t in range(T):\n    forward_images.append(q_sample(x_start, t))\n\n# --- Run Reverse Process ---\n# We need a reference to the original image for our 'oracle_model'\noracle_with_ref = lambda x, t: oracle_model(x, t, x_start)\n\nreverse_images = []\n# Start the reverse process from pure noise\nx_t = torch.randn_like(x_start)\nreverse_images.append(x_t)\n\nfor t in reversed(range(T)):\n    x_t = p_sample(oracle_with_ref, x_t, t)\n    reverse_images.append(x_t)\nreverse_images = list(reversed(reverse_images)) # Put them in chronological order\nprint(\"Simulations finished.\")\n\n# --- 8. Create and Save Visualization ---\nprint(\"Creating visualization GIF and plots...\")\nplt.style.use('dark_background')\nfig = plt.figure(figsize=(12, 7))\ngs = fig.add_gridspec(2, 5)\n\n# Create axes for the images\nax_f = [fig.add_subplot(gs[0, i]) for i in range(5)]\nax_r = [fig.add_subplot(gs[1, i]) for i in range(5)]\n\ndef update(frame):\n    \"\"\"Update function for the animation.\"\"\"\n    fig.clear()\n    gs = fig.add_gridspec(2, 5)\n    ax_f = [fig.add_subplot(gs[0, i]) for i in range(5)]\n    ax_r = [fig.add_subplot(gs[1, i]) for i in range(5)]\n\n    fig.suptitle('Physics Diffusion vs. Generative AI Diffusion', fontsize=16)\n\n    # --- Update Forward Process Visualization ---\n    for i, t_idx in enumerate(display_timesteps):\n        # We show the gradual noising process\n        current_t = min(t_idx, frame)\n        ax_f[i].imshow(forward_images[current_t].numpy(), cmap='viridis', vmin=-2, vmax=2)\n        ax_f[i].set_title(f'Forward t={current_t+1}')\n        ax_f[i].axis('off')\n    ax_f[0].set_ylabel('Forward Process\\n(Order to Chaos)', fontsize=12, labelpad=20)\n\n    # --- Update Reverse Process Visualization ---\n    for i, t_idx in enumerate(display_timesteps):\n        # We show the gradual denoising process\n        current_t_rev = T - min(t_idx, frame)\n        img_to_show = reverse_images[T - current_t_rev] if current_t_rev &lt; len(reverse_images) else reverse_images[-1]\n        ax_r[i].imshow(img_to_show.numpy(), cmap='viridis', vmin=-2, vmax=2)\n        ax_r[i].set_title(f'Reverse t={T-current_t_rev+1}')\n        ax_r[i].axis('off')\n    ax_r[0].set_ylabel('Reverse Process\\n(Chaos to Order)', fontsize=12, labelpad=20)\n\n    return fig,\n\n# Create and save the animation\nanim = animation.FuncAnimation(fig, update, frames=T, interval=50, blit=False)\nanim.save('physics_vs_ai_diffusion.gif', writer='pillow', fps=20)\nplt.close(fig) # Close the animation figure\n\n# --- Create Final Distribution Plot ---\nfig_dist, ax_dist = plt.subplots(figsize=(10, 6))\nax_dist.set_title('Evolution of Pixel Value Distribution')\nax_dist.set_xlabel('Pixel Value')\nax_dist.set_ylabel('Probability Density')\n\n# Plot initial distribution\ninitial_pixels = x_start.flatten().numpy()\nax_dist.hist(initial_pixels, bins=50, range=(-2, 2), density=True, histtype='step', lw=2, label='Initial State (Ordered)')\n\n# Plot noise distribution (final state of forward process)\nnoise_pixels = forward_images[-1].flatten().numpy()\nax_dist.hist(noise_pixels, bins=50, range=(-2, 2), density=True, histtype='step', lw=2, label='Fully Diffused State (Chaos)')\n\n# Plot a standard normal distribution for reference\nx_norm = np.linspace(-2, 2, 100)\ny_norm = norm.pdf(x_norm, 0, 1)\nax_dist.plot(x_norm, y_norm, 'r--', label='Standard Normal (Gaussian)')\n\nax_dist.legend()\nax_dist.grid(True, alpha=0.3)\nplt.show()\nprint(\"Visualization saved and plot displayed.\")\n</code></pre> <p></p> <p>\u4e0a\u534a\u90e8\u5206 (Forward Process)\uff0c\u662f\u672c\u8bfe\u7a0b\u6240\u5b66\u7684\u7269\u7406\u6269\u6563\u3002\u4ece\u4e00\u4e2a\u6709\u5e8f\u3001\u4fe1\u606f\u4e30\u5bcc\u7684\u72b6\u6001\uff08\u7b11\u8138\uff09\u5f00\u59cb\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u968f\u673a\u566a\u58f0\u4e0d\u65ad\u88ab\u52a0\u5165\uff0c\u56fe\u50cf\u7684\u7ed3\u6784\u548c\u4fe1\u606f\u9010\u6e10\u88ab\u7834\u574f\uff0c\u6700\u7ec8\u7cfb\u7edf\u8fbe\u5230\u4e86\u4e00\u4e2a\u5b8c\u5168\u65e0\u5e8f\u3001\u6df7\u4e71\u7684\u5b8f\u89c2\u72b6\u6001\u2014\u2014\u7eaf\u7cb9\u7684\u9ad8\u65af\u566a\u58f0\u3002\u4e0b\u534a\u90e8\u5206 (Reverse Process) \uff0c\u4ece\u4e00\u4e2a\u5b8c\u5168\u65e0\u5e8f\u3001\u4e0d\u5305\u542b\u4efb\u4f55\u4fe1\u606f\u7684\u7eaf\u566a\u58f0\u72b6\u6001\u5f00\u59cb\uff08\u6700\u53f3\u4fa7\u7684\u56fe\u50cf\uff09\u3002\u7136\u540e\uff0c\u5229\u7528\u4e00\u4e2a\u201c\u7406\u60f3\u5316\u7684\u201d\u53bb\u566a\u6a21\u578b\uff0c\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\u90fd\u7cbe\u786e\u5730\u9884\u6d4b\u5e76\u79fb\u9664\u4e00\u5c0f\u90e8\u5206\u566a\u58f0\u3002\u968f\u7740\u8fd9\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\u7684\u8fdb\u884c\uff0c\u9690\u85cf\u5728\u6df7\u6c8c\u4e4b\u4e0b\u7684\u7ed3\u6784\u548c\u79e9\u5e8f\u9010\u6e10\u6d6e\u73b0\uff0c\u6700\u7ec8\u4ece\u7eaf\u7cb9\u7684\u566a\u58f0\u4e2d\u751f\u6210\u4e86\u4e00\u4e2a\u6e05\u6670\u7684\u7b11\u8138\u56fe\u50cf\u3002</p> <p></p> <p>\u7b11\u8138\u56fe\u50cf\u7684\u50cf\u7d20\u503c\u4e3b\u8981\u96c6\u4e2d\u5728 -1\uff08\u80cc\u666f\uff09\u30010\uff08\u773c\u775b/\u5634\u5df4\uff09\u548c 1\uff08\u8138\uff09\u8fd9\u4e09\u4e2a\u503c\u9644\u8fd1\uff0c\u5f62\u6210\u4e86\u4e00\u4e2a\u9ad8\u5ea6\u7ed3\u6784\u5316\u7684\u3001\u975e\u9ad8\u65af\u7684\u5206\u5e03\u3002</p> <p>\u6269\u6563\u540e\u5206\u5e03 (\u6a59\u8272)\uff0c\u7ecf\u8fc7200\u6b65\u7684\u7269\u7406\u6269\u6563\u540e\uff0c\u521d\u59cb\u7684\u7ed3\u6784\u5b8c\u5168\u6d88\u5931\uff0c\u50cf\u7d20\u503c\u7684\u5206\u5e03\u53d8\u6210\u4e86\u4e00\u4e2a\u6807\u51c6\u7684\u9ad8\u65af\u5206\u5e03\uff08\u6b63\u6001\u5206\u5e03\uff09\uff0c\u4e0e\u53c2\u8003\u7684\u7ea2\u8272\u865a\u7ebf\u5b8c\u7f8e\u91cd\u5408\u3002\u8fd9\u5b9a\u91cf\u5730\u8868\u660e\uff0c\u7cfb\u7edf\u5df2\u7ecf\u8fbe\u5230\u4e86\u5b8c\u5168\u968f\u673a\u3001\u6700\u5927\u71b5\u7684\u72b6\u6001\u3002</p> <p>\u7eb5\u89c2\u6574\u4e2a\u4eba\u5de5\u667a\u80fd\u7684\u53d1\u5c55\u53f2\uff0c\u5176\u57fa\u77f3\u65e0\u4e0d\u70d9\u5370\u7740\u7269\u7406\u5b66\u7684\u6df1\u523b\u601d\u60f3\uff1a\u4ece\u7edf\u8ba1\u529b\u5b66\u4e2d\u7684\u81ea\u65cb\u73bb\u7483\u6a21\u578b\u50ac\u751f\u51fa\u970d\u666e\u83f2\u5c14\u5fb7\u7f51\u7edc\u4e0e\u73bb\u5c14\u5179\u66fc\u673a\uff0c\u5230\u70ed\u529b\u5b66\u71b5\u6982\u5ff5\u5960\u5b9a\u4fe1\u606f\u8bba\u7684\u6839\u57fa\uff0c\u518d\u5230\u4f18\u5316\u7b97\u6cd5\u5e7f\u6cdb\u5e94\u7528\u7684\u68af\u5ea6\u4e0b\u964d\u6cd5\uff0c\u5176\u601d\u60f3\u4e0e\u7ecf\u5178\u529b\u5b66\u4e2d\u7269\u4f53\u6cbf\u52bf\u80fd\u6700\u901f\u4e0b\u964d\u7684\u8def\u5f84\u4e00\u81f4\u3002\u5982\u4eca\uff0c\u4ee5\u975e\u5e73\u8861\u70ed\u529b\u5b66\u4e3a\u7075\u611f\u7684\u6269\u6563\u6a21\u578b\uff0c\u66f4\u662f\u5728\u56fe\u50cf\u751f\u6210\u7b49\u9886\u57df\u6380\u8d77\u4e86\u9769\u547d\u6027\u7684\u6d6a\u6f6e\u3002</p> <p>2024\u5e74\uff0c\u7269\u7406\u5b66\u5bb6\u7ea6\u7ff0\u00b7\u970d\u666e\u83f2\u5c14\u5fb7\uff08John Hopfield\uff09\u4e0e\u6770\u5f17\u91cc\u00b7\u8f9b\u987f\uff08Geoffrey Hinton\uff09\u56e0\u5176\u5728\u673a\u5668\u5b66\u4e60\u9886\u57df\u7684\u5960\u57fa\u6027\u5de5\u4f5c\u800c\u8363\u83b7\u8bfa\u8d1d\u5c14\u7269\u7406\u5b66\u5956\uff0c\u8fd9\u65e0\u7591\u662f\u5c06\u201c\u7269\u7406AI\u201d\u8fd9\u4e00\u4ea4\u53c9\u5b66\u79d1\u63a8\u5411\u4e86\u524d\u6240\u672a\u6709\u7684\u9ad8\u6f6e\u3002\u8fd9\u4e00\u91cc\u7a0b\u7891\u5f0f\u7684\u8ba4\u53ef\u4e0d\u4ec5\u5f70\u663e\u4e86\u7269\u7406\u5b66\u4e3a\u6784\u5efa\u590d\u6742\u667a\u80fd\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e25\u8c28\u7684\u7406\u8bba\u6846\u67b6\u548c\u5f3a\u5927\u7684\u6570\u5b66\u5de5\u5177\uff0c\u4e5f\u9884\u793a\u7740\u4e24\u5927\u9886\u57df\u7684\u878d\u5408\u5c06\u7ee7\u7eed\u50ac\u751f\u51fa\u66f4\u5f3a\u5927\u3001\u66f4\u53ef\u89e3\u91ca\u3001\u4e5f\u66f4\u63a5\u8fd1\u4e16\u754c\u672c\u8d28\u7684\u4e0b\u4e00\u4ee3\u4eba\u5de5\u667a\u80fd\u3002</p>"},{"location":"zh/notes/29.%20%E4%B8%8D%E5%8F%AF%E9%80%86%E7%BA%BF%E6%80%A7%E7%83%AD%E5%8A%9B%E5%AD%A6%E4%B8%8E%E5%B9%B2%E6%80%A7%E6%89%A9%E6%95%A3%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/#_4","title":"\u603b\u7ed3","text":"<p>\u8fd9\u8282\u8bfe\u4e0d\u4ec5\u4e3a\u63cf\u8ff0\u8fd1\u5e73\u8861\u6001\u7cfb\u7edf\u6784\u5efa\u4e86\u666e\u9002\u7684\u52a8\u529b\u5b66\u6846\u67b6\uff0c\u8fd8\u901a\u8fc7\u4e00\u4e2a\u5177\u4f53\u7684\u6848\u4f8b\u5c55\u793a\u4e86\u8be5\u6846\u67b6\u7684\u5b9e\u9645\u5e94\u7528\u80fd\u529b\uff0c\u4e3a\u4e0b\u4e00\u8bb2\u66f4\u590d\u6742\u7684\u6d41\u4f53\u8026\u5408\u7cfb\u7edf\u505a\u597d\u4e86\u94fa\u57ab\u3002</p> <p>\u8fd9\u8282\u8bfe\u6709\u4e24\u4e2a\u6838\u5fc3\u5185\u5bb9\uff1a</p> <ol> <li> <p>\u5efa\u7acb\u4e86\u666e\u9002\u7684\u7406\u8bba\u6846\u67b6\uff1a\u8bfe\u7a0b\u7cfb\u7edf\u6027\u5730\u9610\u8ff0\u4e86\u7ebf\u6027\u4e0d\u53ef\u9006\u70ed\u529b\u5b66\u7684\u6838\u5fc3\u601d\u60f3\u3002\u8be5\u7406\u8bba\u56f4\u7ed5\u4e09\u4e2a\u6838\u5fc3\u6982\u5ff5\u6784\u5efa\uff1a</p> <ul> <li> <p>\u71b5\u4ea7\u751f\u7387\u7684\u53cc\u7ebf\u6027\u5f62\u5f0f \\(\\sigma_s = \\sum_a J_a X_a\\)\uff0c\u5b83\u5c06\u6240\u6709\u4e0d\u53ef\u9006\u8fc7\u7a0b\u90fd\u5206\u89e3\u4e3a\u201c\u901a\u91cf-\u529b\u201d\u7684\u914d\u5bf9\u3002</p> </li> <li> <p>\u7ebf\u6027\u54cd\u5e94\u5173\u7cfb \\(J_a = \\sum_b L_{ab} X_b\\)\uff0c\u5b83\u5047\u8bbe\u5728\u8fd1\u5e73\u8861\u533a\u57df\uff0c\u901a\u91cf\u4e0e\u529b\u6210\u6b63\u6bd4\uff0c\u6bd4\u4f8b\u7cfb\u6570\u4e3a\u6602\u8428\u683c\u52a8\u529b\u5b66\u7cfb\u6570 \\(L_{ab}\\)\u3002</p> </li> <li> <p>\u8fde\u63a5\u5b8f\u89c2\u8017\u6563\u4e0e\u5fae\u89c2\u6da8\u843d\u7684\u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff0c\u5b83\u89c4\u5b9a\u4e86\u968f\u673a\u566a\u58f0\u9879\u7684\u5173\u8054\u5f3a\u5ea6\u5fc5\u987b\u4e3a \\(\\langle \\xi_a(t) \\xi_b(t') \\rangle = 2k_B T L_{ab} \\delta(t-t')\\)\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u7cfb\u7edf\u80fd\u591f\u6b63\u786e\u5730\u5f1b\u8c6b\u5230\u6709\u9650\u6e29\u5ea6\u4e0b\u7684\u70ed\u5e73\u8861\u6001\u3002</p> </li> </ul> <p>\u8fd9\u662f\u4e00\u4e2a\u6781\u5176\u5f3a\u5927\u7684\u6846\u67b6\uff0c\u53ef\u4ee5\u4e3a\u4efb\u4f55\u63a5\u8fd1\u5e73\u8861\u7684\u8fde\u7eed\u4ecb\u8d28\u7cfb\u7edf\uff0c\u6784\u5efa\u51fa\u7b26\u5408\u70ed\u529b\u5b66\u57fa\u672c\u539f\u7406\u7684\u968f\u673a\u52a8\u529b\u5b66\u65b9\u7a0b\u3002</p> </li> <li> <p>\u5e94\u7528\u6846\u67b6\u4e8e\u5177\u4f53\u6a21\u578b\uff08\u6a21\u578bB\uff09\uff1a\u8bfe\u7a0b\u5c06\u8fd9\u4e2a\u901a\u7528\u6846\u67b6\u5e94\u7528\u4e8e\u4e00\u4e2a\u201c\u5e72\u6027\u201d\u7684\u6269\u6563\u7c92\u5b50\u7cfb\u7edf\uff0c\u4ece\u5176\u81ea\u7531\u80fd\u6cdb\u51fd\u51fa\u53d1\uff0c\u7cfb\u7edf\u5730\u63a8\u5bfc\u51fa\u4e86\u63cf\u8ff0\u5176\u5bc6\u5ea6\u573a\u6f14\u5316\u7684\u968f\u673a\u52a8\u529b\u5b66\u65b9\u7a0b\uff08\u6a21\u578bB\uff09\u3002\u5e76\u4e14\uff0c\u901a\u8fc7\u8003\u5bdf\u65e0\u76f8\u4e92\u4f5c\u7528\u7684\u7406\u60f3\u6c14\u4f53\u6781\u9650\uff0c\u9a8c\u8bc1\u4e86\u8be5\u6a21\u578b\u53ef\u4ee5\u6b63\u786e\u5730\u9000\u5316\u4e3a\u6211\u4eec\u6240\u719f\u77e5\u7684\u83f2\u514b\u5b9a\u5f8b\u548c\u6269\u6563\u65b9\u7a0b\uff0c\u540c\u65f6\u63ed\u793a\u4e86\u5b8f\u89c2\u6269\u6563\u7cfb\u6570 \\(D\\) \u4e0e\u5fae\u89c2\u8fc1\u79fb\u7387 \\(L(\\rho)\\) \u4e4b\u95f4\u7684\u6df1\u523b\u8054\u7cfb\u3002</p> </li> </ol> <p>\u5728\u8fd9\u8282\u8bfe\u7684\u6848\u4f8b\u5206\u6790\u4e2d\uff0c\u7279\u610f\u5f3a\u8c03\u4e86\u7cfb\u7edf\u662f\u201c\u5e72\u6027\u201d (dry) \u7684\uff0c\u5373\u7c92\u5b50\u662f\u5728\u4e00\u4e2a\u9759\u6001\u7684\u80cc\u666f\uff08\u70ed\u5e93\uff09\u4e2d\u8fd0\u52a8\u3002\u8fd9\u4e2a\u80cc\u666f\u53ea\u63d0\u4f9b\u6469\u64e6\u548c\u70ed\u6da8\u843d\uff0c\u4f46\u5176\u81ea\u8eab\u6ca1\u6709\u52a8\u529b\u5b66\uff0c\u56e0\u6b64\u52a8\u91cf\u5e76\u4e0d\u5b88\u6052\uff0c\u800c\u662f\u8017\u6563\u5230\u80cc\u666f\u4e2d\u3002</p> <p>\u8fd9\u81ea\u7136\u5f15\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u8fd9\u4e9b\u7c92\u5b50\u662f\u60ac\u6d6e\u5728\u4e00\u79cd\u52a8\u6001\u7684\u6d41\u4f53\uff08\u5982\u6c34\uff09\u4e2d\uff0c\u60c5\u51b5\u4f1a\u53d1\u751f\u4ec0\u4e48\u53d8\u5316\uff1f\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u201c\u6e7f\u6027\u201d (wet) \u7cfb\u7edf\uff0c\u4e5f\u662f\u4e0b\u4e00\u8bb2\u7684\u4e3b\u9898\u3002</p> <p>\u5728\u201c\u6e7f\u6027\u201d\u7cfb\u7edf\u4e2d\uff0c\u7c92\u5b50\u4e0d\u4ec5\u4f1a\u56e0\u4e3a\u5316\u5b66\u52bf\u68af\u5ea6\u800c\u6269\u6563\uff0c\u8fd8\u4f1a\u88ab\u5468\u56f4\u6d41\u4f53\u7684\u6d41\u52a8\u6240\u643a\u5e26\u3002\u8fd9\u79cd\u6548\u5e94\u88ab\u79f0\u4e3a\u5e73\u6d41 (Advection) \u3002\u56e0\u6b64\uff0c\u603b\u7684\u7c92\u5b50\u6d41\u5c06\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> \\[\\mathbf{J}_{\\text{total}} = \\mathbf{J}_{\\text{diffusive}} + \\rho \\mathbf{v}\\] <p>\u5176\u4e2d \\(\\mathbf{v}\\) \u662f\u6d41\u4f53\u7684\u901f\u5ea6\u573a\u3002</p> <p>\u8fd9\u610f\u5473\u7740\uff0c\u63cf\u8ff0\u7c92\u5b50\u5bc6\u5ea6\u573a \\(\\rho\\) \u6f14\u5316\u7684\u8fde\u7eed\u6027\u65b9\u7a0b\uff0c\u73b0\u5728\u5fc5\u987b\u4e0e\u63cf\u8ff0\u6d41\u4f53\u901f\u5ea6\u573a \\(\\mathbf{v}\\) \u6f14\u5316\u7684\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b \u8026\u5408 \u5728\u4e00\u8d77\u3002\u8fd9\u4e2a\u63cf\u8ff0\u60ac\u6d6e\u7c92\u5b50\u4e0e\u6d41\u4f53\u8026\u5408\u52a8\u529b\u5b66\u7684\u6a21\u578b\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u6a21\u578bH (Model H) \u3002</p> <p>\u8fd9\u79cd\u8026\u5408\u5f15\u5165\u4e86\u5168\u65b0\u7684\u7269\u7406\u3002\u4e00\u4e2a\u7c92\u5b50\u8fd0\u52a8\u65f6\uff0c\u4f1a\u6405\u52a8\u5468\u56f4\u7684\u6d41\u4f53\uff0c\u4ea7\u751f\u4e00\u4e2a\u901f\u5ea6\u573a\u3002\u8fd9\u4e2a\u901f\u5ea6\u573a\u4f1a\u901a\u8fc7\u6d41\u4f53\u4f20\u64ad\u5230\u5f88\u8fdc\u7684\u5730\u65b9\uff0c\u4ece\u800c\u5f71\u54cd\u5176\u4ed6\u6240\u6709\u7c92\u5b50\u7684\u8fd0\u52a8\u3002\u8fd9\u662f\u4e00\u79cd\u7531\u6d41\u4f53\u4ecb\u5bfc\u7684\u3001\u957f\u7a0b\u7684\u6d41\u4f53\u52a8\u529b\u5b66\u76f8\u4e92\u4f5c\u7528 (Hydrodynamic Interactions) \u3002\u8fd9\u79cd\u76f8\u4e92\u4f5c\u7528\u5728\u201c\u5e72\u6027\u201d\u7684\u6a21\u578bB\u4e2d\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u5b83\u5bf9\u4e8e\u7406\u89e3\u80f6\u4f53\u60ac\u6d6e\u6db2\u3001\u805a\u5408\u7269\u6eb6\u6db2\u4ee5\u53ca\u751f\u7269\u7ec6\u80de\u5185\u90e8\u7684\u7269\u8d28\u8f93\u8fd0\u7b49\u4f17\u591a\u7269\u7406\u548c\u751f\u7269\u73b0\u8c61\u81f3\u5173\u91cd\u8981\u3002</p> <p>\u56e0\u6b64\uff0c\u7b2c29\u8bb2\u5c06\u5e26\u9886\u6211\u4eec\u8fdb\u5165\u4e00\u4e2a\u66f4\u590d\u6742\u4e5f\u66f4\u4e30\u5bcc\u7684\u9886\u57df\uff0c\u63a2\u7d22\u5f53\u4e00\u4e2a\u5b88\u6052\u7684\u5e8f\u53c2\u91cf\uff08\u5982\u7c92\u5b50\u5bc6\u5ea6\uff09\u4e0e\u6d41\u4f53\u7684\u52a8\u91cf\u5b88\u6052\u53d1\u751f\u8026\u5408\u65f6\uff0c\u4f1a\u6d8c\u73b0\u51fa\u600e\u6837\u7684\u65b0\u52a8\u529b\u5b66\u884c\u4e3a\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/","title":"\u5f15\u8a00\uff1a\u4ece\u79bb\u6563\u5230\u8fde\u7eed\u4e16\u754c\u7684\u8de8\u8d8a","text":"<p>\u57fa\u4e8e\u4e0a\u4e00\u8282\u5bf9\u4e8e\u7b80\u5355\u968f\u673a\u6e38\u8d70\u7684\u4ecb\u7ecd\uff0c\u8fd9\u4e00\u8282\u5c06\u8fdb\u4e00\u6b65\u6df1\u5316\u6211\u4eec\u5bf9\u968f\u673a\u8fc7\u7a0b\u7684\u7406\u89e3\uff0c\u4ece\u4e0a\u4e00\u8bb2\u4e2d\u4ecb\u7ecd\u7684\u7b80\u5355\u3001\u79bb\u6563\u7684\u6a21\u578b\uff0c\u6f14\u8fdb\u5230\u80fd\u591f\u66f4\u7cbe\u786e\u5730\u63cf\u8ff0\u7269\u7406\u73b0\u5b9e\u7684\u8fde\u7eed\u6a21\u578b\u3002\u8fd9\u4e00\u8fc7\u7a0b\u5c06\u901a\u8fc7\u4e24\u4e2a\u5173\u952e\u7684\u63a8\u5e7f\u6765\u5b9e\u73b0\uff1a</p> <ol> <li> <p>\u7a7a\u95f4\u7684\u8fde\u7eed\u5316\uff1a\u6211\u4eec\u5c06\u628a\u968f\u673a\u6e38\u8d70\u6a21\u578b\u4ece\u4e00\u4e2a\u56fa\u5b9a\u7684\u3001\u79bb\u6563\u7684\u6676\u683c\u63a8\u5e7f\u5230\u8fde\u7eed\u7684\u7a7a\u95f4\u4e2d\u3002\u8fd9\u4e00\u6b65\u5c06\u81ea\u7136\u5730\u5f15\u5bfc\u6211\u4eec\u4ece\u4e8c\u9879\u5206\u5e03\u8d70\u5411\u9ad8\u65af\u5206\u5e03\uff0c\u4ece\u800c\u5efa\u7acb\u9ad8\u65af\u968f\u673a\u6e38\u8d70\uff08Gaussian Random Walk, GRW\uff09\u6a21\u578b\u3002</p> </li> <li> <p>\u65f6\u95f4\u7684\u968f\u673a\u5316\uff1a\u6211\u4eec\u5c06\u6253\u7834\u201c\u65f6\u95f4\u6b65\u201d\u662f\u56fa\u5b9a\u4e14\u786e\u5b9a\u7684\u8fd9\u4e00\u9650\u5236\uff0c\u8f6c\u800c\u63a2\u8ba8\u4e8b\u4ef6\u5728\u8fde\u7eed\u65f6\u95f4\u8f74\u4e0a\u968f\u673a\u53d1\u751f\u7684\u573a\u666f\u3002\u8fd9\u5c06\u5f15\u51fa\u7edf\u8ba1\u7269\u7406\u548c\u751f\u7269\u5b66\u4e2d\u81f3\u5173\u91cd\u8981\u7684\u6cca\u677e\u8fc7\u7a0b\uff08Poisson Process\uff09\u3002</p> </li> </ol> <p>\u901a\u8fc7\u653e\u5bbd\u5bf9\u7a7a\u95f4\u548c\u65f6\u95f4\u7684\u4e25\u683c\u7ea6\u675f\uff0c\u6211\u4eec\u80fd\u591f\u6784\u5efa\u51fa\u66f4\u5177\u666e\u9002\u6027\u548c\u5e94\u7528\u4ef7\u503c\u7684\u7406\u8bba\u6846\u67b6\uff0c\u4e3a\u7406\u89e3\u4ece\u5206\u5b50\u9a6c\u8fbe\u5230\u5b8f\u89c2\u6269\u6563\u7b49\u4e00\u7cfb\u5217\u73b0\u8c61\u5960\u5b9a\u57fa\u7840\u3002</p> <p>\u4e3a\u4e86\u68b3\u7406\u672c\u8bb2\u5ea7\u81f3\u4eca\u6240\u5b66\u7684\u6a21\u578b\uff0c\u4e0b\u8868\u5bf9\u5b83\u4eec\u7684\u5173\u952e\u7279\u6027\u8fdb\u884c\u4e86\u603b\u7ed3\u548c\u5bf9\u6bd4\uff1a</p> \u7279\u6027 \u7b80\u5355\u968f\u673a\u6e38\u8d70 (SRW) \u9ad8\u65af\u968f\u673a\u6e38\u8d70 (GRW) \u6cca\u677e\u8fc7\u7a0b (Poisson Process) \u65f6\u95f4\u57df \u79bb\u6563 (\\(k=1,2,\\ldots\\)) \u79bb\u6563 (\\(t=1,2,\\ldots\\)) \u8fde\u7eed (\\(t \\in \\mathbb{R}\\)) \u7a7a\u95f4\u57df \u79bb\u6563 (\u6676\u683c) \u8fde\u7eed (\\(X_t \\in \\mathbb{R}\\)) \u79bb\u6563 (\u6676\u683c) \u6b65\u957f\u5206\u5e03 \u4f2f\u52aa\u5229 (\\(\\pm a\\)) \u9ad8\u65af (\\(N(0, \\sigma^2)\\)) \u56fa\u5b9a (\u4f8b\u5982 \\(+1\\)) \u6b65\u957f\u65f6\u95f4 \u56fa\u5b9a\u95f4\u9694 (\\(\\tau\\)) \u56fa\u5b9a\u95f4\u9694 (\\(\\tau=1\\)) \u968f\u673a (\u6307\u6570\u5206\u5e03) \u6838\u5fc3\u7edf\u8ba1\u5de5\u5177 \u4e8c\u9879\u5206\u5e03 -&gt; \u9ad8\u65af (CLT) \u7279\u5f81\u51fd\u6570 \u751f\u5b58\u6982\u7387 \u6781\u9650\u5206\u5e03 \u9ad8\u65af\u5206\u5e03 (\u4f4d\u7f6e) \u9ad8\u65af\u5206\u5e03 (\u4f4d\u7f6e) \u6307\u6570\u5206\u5e03 (\u7b49\u5f85\u65f6\u95f4)"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#1-srw","title":"1. \u590d\u4e60\uff1a\u7b80\u5355\u968f\u673a\u6e38\u8d70\uff08SRW\uff09\u53ca\u5176\u8fde\u7eed\u6781\u9650","text":"<p>\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u672c\u8bb2\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u9996\u5148\u56de\u987e\u4e0a\u4e00\u8bb2\u7684\u6838\u5fc3\u6a21\u578b\u2014\u2014\u7b80\u5355\u968f\u673a\u6e38\u8d70\uff08Simple Random Walk, SRW\uff09\uff0c\u5e76\u9610\u660e\u5176\u4e0e\u672c\u8bb2\u5185\u5bb9\u7684\u5185\u5728\u8054\u7cfb\u3002\u6559\u6388\u5728\u9ed1\u677f\u4e0a\u7684\u677f\u4e66\u6e05\u6670\u5730\u52fe\u52d2\u51fa\u4e86\u8fd9\u4e00\u8fc7\u6e21\u7684\u6570\u5b66\u8109\u7edc\u3002</p> <p></p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#srw","title":"\u79bb\u6563SRW\u6a21\u578b\u7684\u6838\u5fc3\u7ed3\u8bba","text":"<p>\u5728\u4e00\u4e2a\u4e00\u7ef4\u5750\u6807\u7cfb\u4e0a\uff0c\u4e00\u4e2a\u7c92\u5b50\u5728\u6bcf\u4e2a\u79bb\u6563\u7684\u65f6\u95f4\u6b65\u957f \\(\\tau\\) \u5185\uff0c\u4ee5\u6982\u7387 \\(p\\) \u5411\u53f3\u79fb\u52a8\u8ddd\u79bb \\(a\\)\uff0c\u4ee5\u6982\u7387 \\(q=1-p\\) \u5411\u5de6\u79fb\u52a8\u8ddd\u79bb \\(a\\)\u3002\u7ecf\u8fc7 \\(k\\) \u6b65\uff08\u603b\u65f6\u95f4 \\(t_k = k\\tau\\)\uff09\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4ee5\u4e0b\u5173\u952e\u7edf\u8ba1\u7279\u6027\uff1a</p> <ul> <li>\u5e73\u5747\u4f4d\u79fb\uff1a\u7c92\u5b50\u7684\u671f\u671b\u4f4d\u7f6e\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u957f\uff0c\u5176\u901f\u5ea6\u7531\u5de6\u53f3\u8df3\u8dc3\u7684\u6982\u7387\u5dee\u51b3\u5b9a\u3002</li> </ul> \\[ \\langle X_k \\rangle = v t_k, \\quad \\text{\u5176\u4e2d\u901f\u5ea6 } v = \\frac{(p-q)a}{\\tau} \\] <ul> <li>\u4f4d\u7f6e\u6982\u7387\uff1a\u7c92\u5b50\u5728 \\(k\\) \u6b65\u540e\u4f4d\u4e8e \\(na\\) \u5904\u7684\u6982\u7387\u7531\u4e8c\u9879\u5206\u5e03\u63cf\u8ff0\u3002\u82e5\u5411\u53f3\u8df3\u4e86 \\(k_+\\) \u6b65\uff0c\u5411\u5de6\u8df3\u4e86 \\(k_-\\) \u6b65\uff0c\u5219 \\(k = k_+ + k_-\\) \u4e14 \\(n = k_+ - k_-\\)\u3002</li> </ul> <p>$$   \\text{Prob}{X_k = na} = \\binom{k}{k_+} p^{k_+} (1-p)^{k_-}   $$</p> <ul> <li>\u65b9\u5dee\u4e0e\u6269\u6563\uff1a\u4f4d\u7f6e\u7684\u65b9\u5dee\u540c\u6837\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u957f\uff0c\u8fd9\u6b63\u662f\u6269\u6563\u8fc7\u7a0b\u7684\u6807\u5fd7\u6027\u7279\u5f81\u3002</li> </ul> <p>$$   \\text{Var}[X_k] = 2D t_k, \\quad \\text{\u5176\u4e2d\u6269\u6563\u7cfb\u6570 } D = \\frac{2pqa^2}{\\tau}   $$</p> <p>\u7269\u7406\u610f\u4e49: \u8fd9\u4e24\u4e2a\u7b80\u5355\u7684\u516c\u5f0f\u63ed\u793a\u4e86\u968f\u673a\u8fc7\u7a0b\u4ece\u5fae\u89c2\u5230\u5b8f\u89c2\u7684\u4e24\u4e2a\u57fa\u672c\u7279\u5f81\u3002</p> <ol> <li>\u6f02\u79fb\uff08Drift\uff09: \u5e73\u5747\u4f4d\u79fb  \\(\\langle X_k \\rangle \\propto t_k\\)  \u63cf\u8ff0\u4e86\u7cfb\u7edf\u6574\u4f53\u7684\u5b9a\u5411\u8fd0\u52a8\u8d8b\u52bf\u3002\u8fd9\u4e2a\u8d8b\u52bf\u7531\u5fae\u89c2\u4e0a\u7684\u4e0d\u5bf9\u79f0\u6027\uff08\\(p \\neq q\\)\uff09\u51b3\u5b9a\u3002\u5c31\u50cf\u4e00\u9635\u5fae\u5f31\u4f46\u6301\u7eed\u7684\u98ce\uff0c\u867d\u7136\u6bcf\u7247\u843d\u53f6\u7684\u8f68\u8ff9\u66f2\u6298\u968f\u673a\uff0c\u4f46\u6574\u4e2a\u53f6\u7fa4\u4f1a\u671d\u7740\u98ce\u7684\u65b9\u5411\u7f13\u6162\u6f02\u79fb\u3002</li> <li>\u6269\u6563\uff08Diffusion\uff09: \u65b9\u5dee \\(\\text{Var}[X_k] \\propto t_k\\)  \u5219\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5728\u5e73\u5747\u8d8b\u52bf\u5468\u56f4\u7684\u201c\u6a21\u7cca\u201d\u6216\u201c\u4e0d\u786e\u5b9a\u6027\u201d\u7684\u589e\u957f\u3002\u8fd9\u662f\u7531\u5fae\u89c2\u968f\u673a\u6027\uff08\\(p\\) \u548c \\(q\\) \u90fd\u4e0d\u4e3a \\(0\\)\uff09\u7684\u7d2f\u79ef\u6548\u5e94\u9020\u6210\u7684\u3002\u5373\u4f7f\u98ce\u662f\u5300\u901f\u7684\uff08\\(p=q\\)\uff0c\u65e0\u6f02\u79fb\uff09\uff0c\u53f6\u5b50\u4e5f\u4f1a\u56e0\u4e3a\u7a7a\u6c14\u7684\u968f\u673a\u6270\u52a8\u800c\u6563\u5f00\uff0c\u5176\u6563\u5f00\u7684\u8303\u56f4\uff08\u6807\u51c6\u5dee \\(\\sigma \\propto \\sqrt{t_k}\\)\uff09\u968f\u65f6\u95f4\u589e\u957f\u3002\u65b9\u5dee\u4e0e\u65f6\u95f4\u7684\u4e00\u6b21\u65b9\u5173\u7cfb\u662f\u6269\u6563\u8fc7\u7a0b\u7684\u201c\u6307\u7eb9\u201d\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u4e0d\u786e\u5b9a\u6027\u662f\u901a\u8fc7\u5927\u91cf\u72ec\u7acb\u7684\u968f\u673a\u4e8b\u4ef6\u7d2f\u79ef\u8d77\u6765\u7684\u3002</li> </ol> <p>\u6211\u4eec\u770b\u5230\uff0c\u5c3d\u7ba1\u6bcf\u4e00\u6b65\u90fd\u662f\u5b8c\u5168\u968f\u673a\u7684\uff0c\u4f46\u5927\u91cf\u6b65\u9aa4\u7684\u96c6\u4f53\u884c\u4e3a\u5374\u5448\u73b0\u51fa\u89c4\u5f8b\u6027\u2014\u2014\u5e73\u5747\u4f4d\u79fb\u7684\u7ebf\u6027\u589e\u957f\u548c\u65b9\u5dee\u7684\u7ebf\u6027\u589e\u957f\uff08\u5373\u6269\u6563\uff09\u3002</p> <p>\u7136\u800c\uff0c\u771f\u5b9e\u4e16\u754c\u4e2d\u7684\u8bb8\u591a\u8fc7\u7a0b\uff0c\u4f8b\u5982\u7ec6\u80de\u5185\u5206\u5b50\u9a6c\u8fbe\u7684\u8fd0\u52a8\u3001\u5316\u5b66\u53cd\u5e94\u7684\u53d1\u751f\uff0c\u5176\u65f6\u95f4\u6f14\u5316\u662f\u8fde\u7eed\u7684\u3002\u672c\u8bb2\u7684\u76ee\u6807\uff0c\u5c31\u662f\u5c06\u6211\u4eec\u4ece\u79bb\u6563\u7684\u4e16\u754c\u89c2\u5e73\u6ed1\u5730\u8fc7\u6e21\u5230\u8fde\u7eed\u7684\u4e16\u754c\u89c2\u3002\u6211\u4eec\u5c06\u770b\u5230\uff0c\u5f53\u89c2\u5bdf\u5c3a\u5ea6\u8fdc\u5927\u4e8e\u5355\u6b21\u8df3\u8dc3\u7684\u6b65\u957f\u548c\u65f6\u95f4\u95f4\u9694\u65f6\uff0c\u79bb\u6563\u7684\u4e8c\u9879\u5206\u5e03\u5982\u4f55\u201c\u6d8c\u73b0\u201d\u51fa\u8fde\u7eed\u7684\u3001\u666e\u9002\u7684\u9ad8\u65af\u5206\u5e03\u3002\u5f53\u6211\u4eec\u8003\u8651\u5927\u91cf\u3001\u5fae\u5c0f\u4e14\u9891\u7e41\u7684\u6b65\u8fdb\u65f6\uff0c\u79bb\u6563\u7684\u683c\u70b9\u6a21\u578b\u4fbf\u8fc7\u6e21\u5230\u4e86\u4e00\u4e2a\u8fde\u7eed\u7684\u7a7a\u95f4\u548c\u65f6\u95f4\u6a21\u578b\u3002\u8fd9\u4e00\u8fc7\u7a0b\u7684\u6838\u5fc3\uff0c\u6b63\u662f\u7edf\u8ba1\u7269\u7406\u5b66\u4e2d\u6700\u6df1\u523b\u7684\u601d\u60f3\u4e4b\u4e00\u2014\u2014\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff08Central Limit Theorem, CLT\uff09\u3002Frey\u6559\u6388\u8fdb\u4e00\u6b65\u5f15\u5bfc\u6211\u4eec\u601d\u8003\uff1a\u4e3a\u4ec0\u4e48\u9ad8\u65af\u5206\u5e03\u5982\u6b64\u7279\u6b8a\uff1f\u4e3a\u4ec0\u4e48\u65e0\u8bba\u5fae\u89c2\u7ec6\u8282\u5982\u4f55\uff0c\u5b8f\u89c2\u4e0a\u6211\u4eec\u603b\u80fd\u770b\u5230\u5b83\uff1f\u8fd9\u80cc\u540e\u9690\u85cf\u7740\u4e00\u79cd\u88ab\u79f0\u4e3a\u201c\u5438\u5f15\u5b50\u201d\uff08Attractor\uff09\u548c\u201c\u666e\u9002\u6027\u201d\uff08Universality\uff09\u7684\u6df1\u523b\u601d\u60f3\uff0c\u800c\u53c2\u8003\u8bba\u6587\u4e2d\u63d0\u5230\u7684\u91cd\u6574\u5316\u7fa4\uff08Renormalization Group, RG\uff09\u65b9\u6cd5\uff0c\u5219\u4e3a\u6211\u4eec\u7406\u89e3\u8fd9\u79cd\u666e\u9002\u6027\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u7406\u8bba\u6b66\u5668\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#2","title":"2. \u9ad8\u65af\u5206\u5e03\uff1a\u4e00\u4e2a\u666e\u9002\u7684\u5438\u5f15\u5b50","text":"<p>\u5f53\u6b65\u6570\\(k\\)\u975e\u5e38\u5927\u65f6\uff0c\u63cf\u8ff0\u7c92\u5b50\u4f4d\u7f6e\u7684\u4e8c\u9879\u5206\u5e03\u53ef\u4ee5\u88ab\u4e00\u4e2a\u9ad8\u65af\uff08\u6b63\u6001\uff09\u5206\u5e03\u6781\u597d\u5730\u8fd1\u4f3c\u3002\u8fd9\u6b63\u662f\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff08Central Limit Theorem, CLT\uff09\u7684\u6838\u5fc3\u5185\u5bb9\u3002</p> \\[ \\binom{k}{k_+} p^{k_+} (1-p)^{k_-} \\approx \\frac{1}{\\sqrt{2\\pi \\text{Var}[n]}} \\exp\\left[-\\frac{(n - \\langle n \\rangle)^2}{2 \\text{Var}[n]}\\right] \\] <p>\u5176\u4e2d\uff0c\\(\\langle n \\rangle = k(p-q)\\)\uff0c\\(\\text{Var}[n] = 4kpq\\)</p> <p>\\(p(x,t)\\) \u662f\u5728\u65f6\u95f4 \\(t\\)\u3001\u4f4d\u7f6e \\(x\\) \u5904\u627e\u5230\u884c\u8d70\u8005\u7684\u6982\u7387\u5bc6\u5ea6\u3002</p> <p>\u5206\u5e03\u7684\u5cf0\u503c\u4ee5\u901f\u5ea6 \\(v\\) \u79fb\u52a8\uff0c\u8fd9\u5bf9\u5e94\u4e8e\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u7684\u6f02\u79fb\u3002</p> <p>\u5206\u5e03\u7684\u5bbd\u5ea6\u7531\u6807\u51c6\u5dee \\(\u03c3_t=\\sqrt{2Dt}\\) \u51b3\u5b9a\uff0c\u5b83\u968f\u7740\u65f6\u95f4\u7684\u5e73\u65b9\u6839\u589e\u957f\u3002\u8fd9\u8868\u660e\u7c92\u5b50\u6b63\u5728\u901a\u8fc7\u6269\u6563\u5411\u5916\u6563\u5f00\uff0c\u6b63\u5982\u5e7b\u706f\u7247\u4e2d\u7684\u56fe\u50cf\u6240\u793a\uff1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u84dd\u8272\u66f2\u7ebf\u53d8\u5f97\u8d8a\u6765\u8d8a\u5bbd\u3001\u8d8a\u6765\u8d8a\u5e73\u5766\u3002</p> <p>\u8bfe\u5802\u7684PPT\u6307\u51fa\uff0c\u9ad8\u65af\u968f\u673a\u6e38\u8d70\u662f\u6240\u6709\u5177\u6709\u5f31\u5c40\u90e8\u5173\u8054\u7684\u968f\u673a\u6e38\u8d70\u7684\"\u666e\u9002\u5438\u5f15\u5b50\"\uff08universal attractor\uff09\u3002\u8fd9\u4e2a\u6982\u5ff5\u6e90\u4e8e\u52a8\u529b\u7cfb\u7edf\u548c\u7edf\u8ba1\u7269\u7406\u5b66\uff0c\u5176\u7269\u7406\u610f\u4e49\u8fdc\u6bd4\u4e00\u4e2a\u5355\u7eaf\u7684\u6570\u5b66\u8fd1\u4f3c\u8981\u6df1\u523b\u3002\u8fd9\u4e2a\u8fd1\u4f3c\u7684\u7269\u7406\u524d\u63d0\u662f\uff0c\u6211\u4eec\u7684\u89c2\u5bdf\u5c3a\u5ea6\uff08\u6700\u7ec8\u4f4d\u79fb \\(x\\)\uff09\u8fdc\u5927\u4e8e\u5355\u6b65\u6b65\u957f \\(a\\)\uff0c\u4e14\u603b\u65f6\u95f4\\(t\\) \u8fdc\u5927\u4e8e\u5355\u6b65\u65f6\u95f4 \\(\u03c4\\)\u3002\u6b63\u662f\u5728\u8fd9\u79cd\u5b8f\u89c2\u89c6\u89d2\u4e0b\uff0c\u5fae\u89c2\u7684\u79bb\u6563\u6027\u53d8\u5f97\u4e0d\u518d\u91cd\u8981\uff0c\u8fde\u7eed\u7684\u3001\u5e73\u6ed1\u7684\u9ad8\u65af\u5206\u5e03\u624d\u4f5c\u4e3a\u4e00\u79cd\u6709\u6548\u7684\u5b8f\u89c2\u63cf\u8ff0\u800c\u6d8c\u73b0\u3002</p> <p>\u5b83\u610f\u5473\u7740\uff0c\u5728\u957f\u65f6\u95f4\u3001\u5927\u5c3a\u5ea6\u4e0b\uff0c\u968f\u673a\u8fc7\u7a0b\u7684\u5b8f\u89c2\u7edf\u8ba1\u884c\u4e3a\uff08\u6700\u7ec8\u5448\u73b0\u9ad8\u65af\u5206\u5e03\uff09\u5e76\u4e0d\u4f9d\u8d56\u4e8e\u5176\u5fae\u89c2\u7ec6\u8282\uff08\u4f8b\u5982\uff0c\u5355\u6b65\u7684\u8df3\u8dc3\u662f\u9075\u5faa\u4f2f\u52aa\u5229\u5206\u5e03\u3001\u5747\u5300\u5206\u5e03\u8fd8\u662f\u5176\u4ed6\u5206\u5e03\uff09\u3002\u53ea\u8981\u5355\u6b65\u7684\u968f\u673a\u53d8\u91cf\u6ee1\u8db3\u67d0\u4e9b\u57fa\u672c\u6761\u4ef6\uff08\u4f8b\u5982\u5177\u6709\u6709\u9650\u7684\u65b9\u5dee\uff09\uff0c\u5b83\u4eec\u5927\u91cf\u7d2f\u52a0\u540e\u7684\u7ed3\u679c\u603b\u4f1a\u88ab\"\u5438\u5f15\"\u5230\u540c\u4e00\u4e2a\u7ec8\u70b9\u2014\u2014\u9ad8\u65af\u5206\u5e03\u3002</p> <p>CLT\u7684\u76f4\u89c2\u89e3\u91ca\u662f\uff1a\u5927\u91cf\u72ec\u7acb\u540c\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\uff08\u5728\u8fd9\u91cc\u662f\u6211\u4eec\u7684\u6bcf\u4e00\u6b65\uff09\u4e4b\u548c\uff0c\u5176\u5206\u5e03\u4f1a\u8d8b\u5411\u4e8e\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03\uff08\u4e5f\u79f0\u6b63\u6001\u5206\u5e03\uff09\uff0c\u65e0\u8bba\u5355\u6b65\u7684\u5206\u5e03\u5177\u4f53\u662f\u4ec0\u4e48\u6837\u7684\uff08\u53ea\u8981\u5176\u65b9\u5dee\u662f\u6709\u9650\u7684\uff09\u3002\u56e0\u6b64\uff0c\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u56e0\u6b64\u6210\u4e3a\u4e86\u8fde\u63a5\u79bb\u6563\u5fae\u89c2\u4e16\u754c\u4e0e\u8fde\u7eed\u5b8f\u89c2\u4e16\u754c\u7684\u6865\u6881\uff0c\u5e76\u63ed\u793a\u4e86\u81ea\u7136\u754c\u4e2d\u4e00\u4e2a\u6df1\u523b\u7684\u539f\u7406\uff1a\u666e\u9002\u6027\uff08universality\uff09\u3002\u6b63\u662f\u8fd9\u79cd\u666e\u9002\u6027\uff0c\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u5ffd\u7565\u5fae\u89c2\u7ec6\u8282\u7684\u590d\u6742\u6027\uff0c\u6293\u4f4f\u652f\u914d\u7cfb\u7edf\u5b8f\u89c2\u884c\u4e3a\u7684\u5171\u540c\u89c4\u5f8b\u3002\u8fd9\u4e00\u601d\u60f3\u4e5f\u4e3a\u6211\u4eec\u540e\u7eed\u7406\u89e3\u66f4\u5e7f\u4e49\u7684\u91cd\u6574\u5316\u7fa4\u7406\u8bba\u57cb\u4e0b\u4e86\u4f0f\u7b14\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#21","title":"2.1 \u6a21\u578b\u5b9a\u4e49","text":"<p>\u9ad8\u65af\u968f\u673a\u6e38\u8d70\uff08GRW\uff09\u63cf\u8ff0\u7684\u662f\u7a7a\u95f4\u8fde\u7eed\u3001\u4f46\u65f6\u95f4\u4ee5\u56fa\u5b9a\u6b65\u957f\u63a8\u8fdb\u7684\u8fc7\u7a0b\uff0c\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u5e8f\u5217\\(X_t\\)\uff0c\u5176\u6f14\u5316\u89c4\u5219\u5982\u4e0b\uff1a</p> \\[ X_t = X_{t-1} + \\xi_t \\] <p>\u5176\u4e2d\uff0c\\(X_t\\)\u662f\\(t\\)\u65f6\u523b\u7684\u4f4d\u7f6e\uff0c\u800c\\(\\xi_t\\)\u662f\u5728\u8be5\u65f6\u523b\u7684\u968f\u673a\u4f4d\u79fb\u3002\u4e0eSRW\u4e0d\u540c\uff0c\\(\\xi_t\\)\u662f\u4e00\u4e2a\u8fde\u7eed\u968f\u673a\u53d8\u91cf\uff0c\u5b83\u4ece\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03\\(W(\\xi_t)\\)\u4e2d\u62bd\u53d6\uff0c\u8be5\u5206\u5e03\u7684\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a\\(\\sigma_\\xi^2\\) \u3002</p> \\[ W(\\xi_t) = \\frac{1}{\\sqrt{2\\pi\\sigma_\\xi^2}} \\exp\\left(-\\frac{\\xi_t^2}{2\\sigma_\\xi^2}\\right) \\] <p>\u5047\u8bbe\u4ece\\(X_0 = 0\\)\u51fa\u53d1\uff0c\u7ecf\u8fc7\\(t\\)\u6b65\u540e\uff0c\u603b\u4f4d\u79fb\u662f\u6240\u6709\u72ec\u7acb\u540c\u5206\u5e03\uff08i.i.d.\uff09\u7684\u5355\u6b65\u4f4d\u79fb\u4e4b\u548c\uff1a</p> \\[ X_t = \\sum_{t'=1}^{t} \\xi_{t'} \\]"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#22","title":"2.2 \u7edf\u8ba1\u6027\u8d28\u7684\u76f4\u63a5\u8ba1\u7b97","text":"<p>\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u671f\u671b\u548c\u65b9\u5dee\u7684\u7ebf\u6027\u6027\u8d28\u6765\u8ba1\u7b97\\(X_t\\)\u7684\u7edf\u8ba1\u7279\u6027\uff1a</p> <p>\u5e73\u5747\u4f4d\u79fb\uff1a\u7531\u4e8e\u6bcf\u4e00\u6b65\u7684\u5e73\u5747\u4f4d\u79fb\\(\\langle \\xi_{t'} \\rangle = 0\\)\uff0c\u603b\u4f4d\u79fb\u7684\u5e73\u5747\u503c\u4e5f\u4e3a0\u3002</p> \\[ \\langle X_t \\rangle = \\left\\langle \\sum_{t'=1}^{t} \\xi_{t'} \\right\\rangle = \\sum_{t'=1}^{t} \\langle \\xi_{t'} \\rangle = 0 \\] <p>\u65b9\u5dee\uff1a\u7531\u4e8e\u6bcf\u4e00\u6b65\u7684\u4f4d\u79fb\\(\\xi_{t'}\\)\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u603b\u4f4d\u79fb\u7684\u65b9\u5dee\u7b49\u4e8e\u5404\u6b65\u65b9\u5dee\u4e4b\u548c\u3002\u5982\u679c\u6bcf\u4e00\u6b65\u7684\u65b9\u5dee\u90fd\u76f8\u540c\uff0c\u8bb0\u4e3a\\(\\sigma_\\xi^2\\)\uff0c\u90a3\u4e48\uff1a</p> \\[ \\langle X_t^2 \\rangle = \\text{Var}[X_t] = \\left\\langle \\left(\\sum_{t'=1}^{t} \\xi_{t'}\\right) \\left(\\sum_{t''=1}^{t} \\xi_{t''}\\right) \\right\\rangle = \\sum_{t'=1}^{t} \\sum_{t''=1}^{t} \\langle \\xi_{t'} \\xi_{t''} \\rangle \\] <p>\u56e0\u4e3a\\(\\langle \\xi_{t'} \\xi_{t''} \\rangle = \\delta_{t't''} \\sigma_\\xi^2\\)\uff08\u4ec5\u5f53\\(t'=t''\\)\u65f6\u4e0d\u4e3a\u96f6\uff09\uff0c\u6240\u4ee5\uff1a</p> \\[ \\langle X_t^2 \\rangle = \\sum_{t'=1}^{t} \\langle \\xi_{t'}^2 \\rangle = \\sum_{t'=1}^{t} \\sigma_\\xi^2 = t \\sigma_\\xi^2 \\] <p>\u8fd9\u518d\u6b21\u9a8c\u8bc1\u4e86\u65b9\u5dee\u968f\u65f6\u95f4\u7ebf\u6027\u589e\u957f\u7684\u6269\u6563\u7279\u6027\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#23","title":"2.3 \u7279\u5f81\u51fd\u6570\uff1a\u5904\u7406\u968f\u673a\u53d8\u91cf\u548c\u7684\u5229\u5668","text":"<p>\u867d\u7136\u76f4\u63a5\u8ba1\u7b97\u5747\u503c\u548c\u65b9\u5dee\u5f88\u7b80\u5355\uff0c\u4f46\u8981\u83b7\u5f97\u5b8c\u6574\u7684\u6982\u7387\u5206\u5e03\u51fd\u6570\\(p(x,t)\\)\u5219\u66f4\u4e3a\u590d\u6742\u3002\u5bf9\u4e8e\u5904\u7406\u72ec\u7acb\u968f\u673a\u53d8\u91cf\u6c42\u548c\u7684\u95ee\u9898\uff0c\u7279\u5f81\u51fd\u6570\uff08characteristic function\uff09\u662f\u4e00\u4e2a\u6781\u5176\u5f3a\u5927\u7684\u6570\u5b66\u5de5\u5177\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#231","title":"2.3.1 \u5b9a\u4e49\u4e0e\u4f5c\u7528","text":"<p>\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\\(X\\)\u7684\u7279\u5f81\u51fd\u6570\u5b9a\u4e49\u4e3a\u5176\\(e^{isX}\\)\u7684\u671f\u671b\u503c\uff1a</p> \\[ \\chi_X(s) = \\langle e^{isX} \\rangle = \\int_{-\\infty}^{\\infty} e^{isx} p(x) dx \\] <p>\u5176\u4e2d\\(i\\)\u662f\u865a\u6570\u5355\u4f4d\uff0c\\(s\\)\u662f\u5b9e\u6570\u53d8\u91cf\u3002\u4ece\u5b9a\u4e49\u53ef\u4ee5\u770b\u51fa\uff0c\u7279\u5f81\u51fd\u6570\u672c\u8d28\u4e0a\u662f\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff08PDF\uff09\u7684\u5085\u91cc\u53f6\u53d8\u6362\u3002\u5b83\u4e4b\u6240\u4ee5\u5982\u6b64\u91cd\u8981\uff0c\u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u6027\u8d28\uff1a</p> <ol> <li> <p>\u552f\u4e00\u6027\uff1a\u4e00\u4e2a\u6982\u7387\u5206\u5e03\u88ab\u5176\u7279\u5f81\u51fd\u6570\u552f\u4e00\u786e\u5b9a\u3002\u5982\u679c\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\u7684\u7279\u5f81\u51fd\u6570\u76f8\u540c\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u6982\u7387\u5206\u5e03\u4e5f\u5fc5\u7136\u76f8\u540c\u3002</p> </li> <li> <p>\u6c42\u548c\u6027\u8d28\uff1a\u8fd9\u662f\u5176\u6700\u6838\u5fc3\u7684\u4f18\u52bf\u3002\u5bf9\u4e8e\u4e24\u4e2a\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\\(X\\)\u548c\\(Y\\)\uff0c\u5b83\u4eec\u7684\u548c\\(Z=X+Y\\)\u7684\u7279\u5f81\u51fd\u6570\u7b49\u4e8e\u5b83\u4eec\u5404\u81ea\u7279\u5f81\u51fd\u6570\u7684\u4e58\u79ef\uff1a\\(\\chi_Z(s) = \\chi_X(s) \\chi_Y(s)\\) \u3002</p> </li> </ol> <p>\u8fd9\u4e00\u6027\u8d28\u5c06\u4e00\u4e2a\u5728\u5b9e\u7a7a\u95f4\u4e2d\u590d\u6742\u7684\u5377\u79ef\u8fd0\u7b97\uff08\\(p_Z(z) = \\int p_X(x)p_Y(z-x)dx\\)\uff09\u8f6c\u6362\u4e3a\u4e86\u5728\u5085\u91cc\u53f6\u7a7a\u95f4\u4e2d\u7b80\u5355\u7684\u4e58\u6cd5\u8fd0\u7b97\uff0c\u6781\u5927\u5730\u7b80\u5316\u4e86\u5206\u6790\u8fc7\u7a0b\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#232-grw","title":"2.3.2 GRW\u7684\u7279\u5f81\u51fd\u6570\u63a8\u5bfc","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u8fd0\u7528\u7279\u5f81\u51fd\u6570\u6765\u63a8\u5bfc\\(X_t\\)\u7684\u5b8c\u6574\u6982\u7387\u5206\u5e03\uff0c\u8fd9\u5b8c\u6574\u5730\u590d\u73b0\u4e86\u6559\u6388\u5728\u9ed1\u677f\u4e0a\u7684\u6f14\u7b97\u8fc7\u7a0b\u3002</p> <p>\u5355\u6b65\u7684\u7279\u5f81\u51fd\u6570\uff1a\u9996\u5148\u8ba1\u7b97\u5355\u6b65\u9ad8\u65af\u4f4d\u79fb\\(\\xi_t\\)\u7684\u7279\u5f81\u51fd\u6570\\(\\chi_{\\xi_t}(s)\\)\u3002</p> \\[ \\chi_{\\xi_t}(s) = \\langle e^{is\\xi_t} \\rangle = \\int_{-\\infty}^{\\infty} e^{is\\xi} \\frac{1}{\\sqrt{2\\pi\\sigma_\\xi^2}} e^{-\\frac{\\xi^2}{2\\sigma_\\xi^2}} d\\xi = e^{-\\frac{1}{2}s^2\\sigma_\\xi^2} \\] <p>\u8fd9\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u9ad8\u65af\u79ef\u5206\u7ed3\u679c\uff0c\u8868\u660e\u9ad8\u65af\u5206\u5e03\u7684\u5085\u91cc\u53f6\u53d8\u6362\u4ecd\u7136\u662f\u9ad8\u65af\u5f62\u5f0f\u3002</p> <p>\\(t\\)\u6b65\u548c\u7684\u7279\u5f81\u51fd\u6570\uff1a\u7531\u4e8e\\(X_t = \\sum_{t'=1}^{t} \\xi_{t'}\\)\u662f\\(t\\)\u4e2a\u72ec\u7acb\u968f\u673a\u53d8\u91cf\u7684\u548c\uff0c\u5176\u7279\u5f81\u51fd\u6570\\(\\chi_{X_t}(s)\\)\u662f\u6240\u6709\u5355\u6b65\u7279\u5f81\u51fd\u6570\u7684\u4e58\u79ef\u3002</p> \\[ \\chi_{X_t}(s) = \\left\\langle e^{is \\sum_{t'=1}^{t} \\xi_{t'}} \\right\\rangle = \\left\\langle \\prod_{t'=1}^{t} e^{is\\xi_{t'}} \\right\\rangle \\] <p>\u7531\u4e8e\u5404\u6b65\u72ec\u7acb\uff0c\u671f\u671b\u7684\u4e58\u79ef\u7b49\u4e8e\u4e58\u79ef\u7684\u671f\u671b\uff1a</p> \\[ \\chi_{X_t}(s) = \\prod_{t'=1}^{t} \\langle e^{is\\xi_{t'}} \\rangle = \\prod_{t'=1}^{t} \\chi_{\\xi_{t'}}(s) \\] <p>\u4ee3\u5165\u5355\u6b65\u7684\u7ed3\u679c\uff0c\u5f97\u5230\uff1a</p> \\[ \\chi_{X_t}(s) = \\prod_{t'=1}^{t} e^{-\\frac{1}{2}s^2\\sigma_\\xi^2} = e^{-\\frac{1}{2}s^2 \\sum_{t'=1}^{t} \\sigma_\\xi^2} = e^{-\\frac{1}{2}s^2 (t\\sigma_\\xi^2)} \\] <p>\u5f97\u5230\u6982\u7387\u5206\u5e03\u51fd\u6570\uff1a\u6211\u4eec\u5c06\u6700\u7ec8\u7ed3\u679c\u4e0e\u5355\u6b65\u7684\u7279\u5f81\u51fd\u6570\u5f62\u5f0f\u8fdb\u884c\u6bd4\u8f83\u3002\u6211\u4eec\u53d1\u73b0\\(\\chi_{X_t}(s)\\)\u6b63\u662f\u4e00\u4e2a\u5747\u503c\u4e3a0\u3001\u65b9\u5dee\u4e3a\\(\\sigma_{X_t}^2 = t\\sigma_\\xi^2\\)\u7684\u9ad8\u65af\u5206\u5e03\u6240\u5bf9\u5e94\u7684\u7279\u5f81\u51fd\u6570\u3002\u6839\u636e\u7279\u5f81\u51fd\u6570\u7684\u552f\u4e00\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u65ad\u5b9a\\(X_t\\)\u4e5f\u670d\u4ece\u9ad8\u65af\u5206\u5e03\u3002\u901a\u8fc7\u9006\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u5373\u53ef\u5f97\u5230\u5176\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff1a</p> \\[ p(x,t) = \\frac{1}{\\sqrt{2\\pi\\sigma_{X_t}^2}} \\exp\\left(-\\frac{x^2}{2\\sigma_{X_t}^2}\\right) \\] <p>\u8fd9\u4e2a\u63a8\u5bfc\u5b8c\u7f8e\u5730\u5c55\u793a\u4e86\u7279\u5f81\u51fd\u6570\u7684\u5a01\u529b\uff1a\u4e00\u4e2a\u6d89\u53ca\\(t\\)\u6b21\u5377\u79ef\u7684\u590d\u6742\u95ee\u9898\uff0c\u901a\u8fc7\u8f6c\u6362\u5230\u5085\u91cc\u53f6\u7a7a\u95f4\uff0c\u53d8\u6210\u4e86\u7b80\u5355\u7684\u6307\u6570\u4e58\u6cd5\uff0c\u6700\u7ec8\u8f7b\u677e\u5f97\u5230\u89e3\u6790\u7ed3\u679c\u3002</p> <p>\u4e3a\u4e86\u76f4\u89c2\u5730\u7406\u89e3GRW\u7684\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Python\u4ee3\u7801\u8fdb\u884c\u6a21\u62df\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6a21\u62df\u4e86\u591a\u6761GRW\u8f68\u8ff9\uff0c\u5e76\u5c55\u793a\u4e86\u5728\u4e0d\u540c\u65f6\u523b\u7c92\u5b50\u4f4d\u7f6e\u7684\u5206\u5e03\u60c5\u51b5\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n\n# --- Parameter settings ---\nnum_walkers = 5000  # Number of simulated particles\nnum_steps = 100     # Total number of steps\nsigma_xi = 1.0      # Standard deviation of single-step displacement (\u03c3_\u03be)\nplot_times = [10, 30, 100]  # Time points at which to plot the distribution\n\n# --- Simulation process ---\n# Generate random displacements for all steps, shape is (num_walkers, num_steps)\n# Each step is sampled from N(0, sigma_xi^2)\nsteps = np.random.normal(loc=0.0, scale=sigma_xi, size=(num_walkers, num_steps))\n\n# Calculate the position of each walker at each step (cumulative sum)\n# positions has the same shape as (num_walkers, num_steps)\npositions = np.cumsum(steps, axis=1)\n\n# --- Visualization of results ---\nplt.figure(figsize=(12, 6))\nplt.suptitle('Gaussian Random Walk Simulation', fontsize=16)\n\n# Plot some sample trajectories\nplt.subplot(1, 2, 1)\nfor i in range(5): # Only plot 5 trajectories as examples\n    plt.plot(range(1, num_steps + 1), positions[i, :], alpha=0.7)\nplt.title('Sample Trajectories')\nplt.xlabel('Time Step (t)')\nplt.ylabel('Position (X_t)')\nplt.grid(True)\n\n# Plot position distributions at specified time points\nplt.subplot(1, 2, 2)\nfor t in plot_times:\n    # Theoretical variance\n    variance_t = t * sigma_xi**2\n    std_dev_t = np.sqrt(variance_t)\n\n    # Plot histogram of simulation data\n    plt.hist(positions[:, t-1], bins=50, density=True, alpha=0.6, label=f't = {t} (Sim)')\n\n    # Plot theoretical Gaussian distribution curve\n    x = np.linspace(-4 * std_dev_t, 4 * std_dev_t, 200)\n    pdf = norm.pdf(x, loc=0, scale=std_dev_t)\n    plt.plot(x, pdf, label=f't = {t} (Theory)')\n\nplt.title('Position Distribution at Different Times')\nplt.xlabel('Position (x)')\nplt.ylabel('Probability Density')\nplt.legend()\nplt.grid(True)\n\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code></pre> <p></p> <p>\u6a21\u62df\u7ed3\u679c\u6e05\u6670\u5730\u663e\u793a\uff1a\u968f\u7740\u65f6\u95f4\\(t\\)\u7684\u589e\u52a0\uff0c\u7c92\u5b50\u4f4d\u7f6e\u7684\u5206\u5e03\u8303\u56f4\uff08\u65b9\u5dee\uff09\u4e0d\u65ad\u6269\u5927\uff0c\u4f46\u5176\u5206\u5e03\u5f62\u72b6\u59cb\u7ec8\u4fdd\u6301\u4e3a\u9ad8\u65af\u5206\u5e03\uff0c\u8fd9\u4e0e\u6211\u4eec\u7684\u7406\u8bba\u63a8\u5bfc\u5b8c\u5168\u4e00\u81f4\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#30","title":"3.0 \u6982\u5ff5\u6df1\u5316\uff1a\u666e\u9002\u6027\u3001\u6807\u5ea6\u4e0e\u91cd\u6574\u5316\u7fa4\u601d\u60f3","text":"<p>\u5728\u8bfe\u5802\u4e0a\uff0c\u6559\u6388\u5728\u63a8\u5bfc\u51fa\u9ad8\u65af\u5206\u5e03\u540e\uff0c\u63d0\u53ca\u4e86\u201cRG Theory\u201d\u548cAriel Amir\u7684\u4e00\u7bc7\u8bba\u6587\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5173\u952e\u4f46\u5bb9\u6613\u5f15\u8d77\u56f0\u60d1\u7684\u63d0\u793a\uff0c\u56e0\u4e3a\u5b83\u5c06\u4e00\u4e2a\u6982\u7387\u8bba\u95ee\u9898\u4e0e\u73b0\u4ee3\u7269\u7406\u5b66\u4e2d\u6700\u6df1\u523b\u7684\u601d\u60f3\u4e4b\u4e00\u2014\u2014\u91cd\u6574\u5316\u7fa4\uff08Renormalization Group, RG\uff09\u2014\u2014\u8054\u7cfb\u4e86\u8d77\u6765\u3002</p> <p>\u7531\u4e8e\u6ca1\u6709\u8bb2\u4e49\uff0c\u6559\u6388\u53ea\u63d0\u53ca\u4e86\u5927\u6982\u7684\u540d\u5b57\u548c\u4f5c\u8005\uff0c\u6bd4\u8f83\u76f8\u7b26\u7684\u6587\u732e\u5927\u6982\u662f\u8fd9\u7bc7\uff1a</p> <p>Amir A. An elementary  renormalization-group approach to the generalized central limit theorem  and extreme value distributions[J]. Journal of Statistical Mechanics:  Theory and Experiment, 2020, 2020(1): 013214.</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#31","title":"3.1 \u6807\u51c6\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u7684\u5c40\u9650","text":"<p>\u9996\u5148\u9700\u8981\u660e\u786e\uff0c\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u7684\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u53ca\u5176\u5bfc\u51fa\u7684\u9ad8\u65af\u5438\u5f15\u5b50\uff0c\u5176\u6210\u7acb\u6709\u4e00\u4e2a\u524d\u63d0\uff1a\u5355\u6b65\u968f\u673a\u53d8\u91cf\u7684\u65b9\u5dee\u5fc5\u987b\u662f\u6709\u9650\u7684\u3002\u7136\u800c\uff0c\u5728\u7269\u7406\u4e16\u754c\u4e2d\uff0c\u5b58\u5728\u8bb8\u591a\u201c\u91cd\u5c3e\u201d\uff08heavy-tailed\uff09\u5206\u5e03\uff0c\u5b83\u4eec\u7684\u65b9\u5dee\u662f\u65e0\u9650\u7684\u3002\u4f8b\u5982\uff0c\u5728\u67d0\u4e9b\u73bb\u7483\u6001\u7269\u8d28\u6216\u91d1\u878d\u5e02\u573a\u4e2d\uff0c\u6781\u7aef\u4e8b\u4ef6\uff08\u975e\u5e38\u5927\u7684\u6da8\u843d\uff09\u53d1\u751f\u7684\u6982\u7387\u8fdc\u9ad8\u4e8e\u9ad8\u65af\u5206\u5e03\u7684\u9884\u6d4b\u3002\u5bf9\u4e8e\u8fd9\u7c7b\u7cfb\u7edf\uff0c\u5927\u91cf\u968f\u673a\u53d8\u91cf\u6c42\u548c\u540e\u7684\u6781\u9650\u5206\u5e03\u5c06\u4e0d\u518d\u662f\u9ad8\u65af\u5206\u5e03\u3002\u8fd9\u5c31\u5f15\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u66f4\u666e\u9002\u7684\u7406\u8bba\u6846\u67b6\uff0c\u80fd\u591f\u7edf\u4e00\u63cf\u8ff0\u6240\u6709\u8fd9\u4e9b\u60c5\u51b5\uff1f</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#32","title":"3.2 \u91cd\u6574\u5316\u7fa4\u7684\u89c6\u89d2","text":"<p>\u91cd\u6574\u5316\u7fa4\u7406\u8bba\u6700\u521d\u662f\u4e3a\u4e86\u89e3\u51b3\u91cf\u5b50\u573a\u8bba\u4e2d\u7684\u53d1\u6563\u95ee\u9898\u800c\u53d1\u5c55\u7684\uff0c\u4f46\u5176\u6838\u5fc3\u601d\u60f3\u5df2\u6e17\u900f\u5230\u7269\u7406\u5b66\u7684\u5404\u4e2a\u9886\u57df\uff0c\u5c24\u5176\u662f\u5728\u7edf\u8ba1\u7269\u7406\u7684\u76f8\u53d8\u7406\u8bba\u4e2d \u3002</p> <ul> <li> <p>RG\u7684\u6838\u5fc3\u601d\u60f3\uff1a\u7c97\u7c92\u5316\u4e0e\u6807\u5ea6\u53d8\u6362\uff1aRG\u7684\u672c\u8d28\u662f\u4e00\u79cd\u7cfb\u7edf\u6027\u7684\u201c\u7c97\u7c92\u5316\u201d\uff08coarse-graining\uff09\u65b9\u6cd5\u3002\u60f3\u8c61\u4e00\u4e2a\u7531\u5fae\u89c2\u81ea\u65cb\u6784\u6210\u7684\u78c1\u94c1\u7cfb\u7edf\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u5c0f\u7ec4\uff08\u4f8b\u59822x2\uff09\u7684\u81ea\u65cb\u770b\u4f5c\u4e00\u4e2a\u6574\u4f53\uff0c\u7528\u4e00\u4e2a\u201c\u7b49\u6548\u201d\u7684\u5757\u81ea\u65cb\u6765\u63cf\u8ff0\u5b83\u4eec\u7684\u5e73\u5747\u884c\u4e3a\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u5ffd\u7565\u4e86\u5fae\u89c2\u7ec6\u8282\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u5728\u66f4\u5927\u5c3a\u5ea6\u4e0a\u7684\u3001\u53d8\u91cf\u66f4\u5c11\u7684\u65b0\u7cfb\u7edf\u3002\u7136\u540e\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u65b0\u7cfb\u7edf\u91cd\u590d\u540c\u6837\u7684\u64cd\u4f5c\u3002\u8fd9\u4e2a\u4e0d\u65ad\u201c\u653e\u5927\u201d\u89c2\u5bdf\u5c3a\u5ea6\u3001\u5e76\u91cd\u65b0\u8c03\u6574\u53c2\u6570\u4ee5\u4fdd\u6301\u7406\u8bba\u5f62\u5f0f\u4e0d\u53d8\u7684\u8fc7\u7a0b\uff0c\u5c31\u662fRG\u53d8\u6362\u3002</p> </li> <li> <p>\u4e0d\u52a8\u70b9\u4e0e\u666e\u9002\u6027\uff1a\u5728\u53cd\u590d\u8fdb\u884cRG\u53d8\u6362\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u7684\u53c2\u6570\u4f1a\u6cbf\u7740\u67d0\u4e2a\u8f68\u8ff9\u201c\u6d41\u52a8\u201d\u3002\u8fd9\u4e2a\u6d41\u52a8\u7684\u7ec8\u70b9\u88ab\u79f0\u4e3a\u201c\u4e0d\u52a8\u70b9\u201d\uff08fixed point\uff09\u3002\u4e0d\u52a8\u70b9\u6240\u63cf\u8ff0\u7684\u7cfb\u7edf\u5177\u6709\u6807\u5ea6\u4e0d\u53d8\u6027\uff08scale invariance\uff09\uff0c\u5373\u5728\u4e0d\u540c\u5c3a\u5ea6\u4e0b\u770b\u8d77\u6765\u662f\u81ea\u76f8\u4f3c\u7684\u3002\u4e00\u4e2a\u4e0d\u52a8\u70b9\u4ee5\u53ca\u6240\u6709\u80fd\u591f\u6d41\u5411\u5b83\u7684\u521d\u59cb\u7cfb\u7edf\uff0c\u5171\u540c\u6784\u6210\u4e00\u4e2a\u666e\u9002\u7c7b\uff08universality class\uff09\u3002\u540c\u4e00\u666e\u9002\u7c7b\u4e2d\u7684\u7cfb\u7edf\uff0c\u5c3d\u7ba1\u5fae\u89c2\u7ec6\u8282\u5343\u5dee\u4e07\u522b\uff0c\u4f46\u5728\u5b8f\u89c2\u4e34\u754c\u884c\u4e3a\u4e0a\u8868\u73b0\u51fa\u5b8c\u5168\u76f8\u540c\u7684\u6027\u8d28\uff08\u7531\u76f8\u540c\u7684\u4e00\u7ec4\u4e34\u754c\u6307\u6570\u63cf\u8ff0\uff09\u3002</p> </li> </ul>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#33-rg","title":"3.3 \u5c06RG\u601d\u60f3\u5e94\u7528\u4e8e\u968f\u673a\u6e38\u8d70","text":"<p>Ariel Amir\u7684\u8bba\u6587\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edd\u4f73\u7684\u89c6\u89d2\uff0c\u5c06RG\u601d\u60f3\u4e0e\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u8054\u7cfb\u8d77\u6765 \u3002</p> <ul> <li> <p>\u968f\u673a\u53d8\u91cf\u6c42\u548c\u5373\u7c97\u7c92\u5316\uff1a\u5c06\\(n\\)\u4e2a\u72ec\u7acb\u540c\u5206\u5e03\uff08i.i.d.\uff09\u7684\u968f\u673a\u53d8\u91cf\\(\\xi_i\\)\u76f8\u52a0\u5f97\u5230\u65b0\u7684\u968f\u673a\u53d8\u91cf\\(S_n = \\sum_{i=1}^n \\xi_i\\)\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u672c\u8eab\u5c31\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u6b21RG\u4e2d\u7684\u7c97\u7c92\u5316\u64cd\u4f5c\u3002\u6211\u4eec\u4ece\\(n\\)\u4e2a\u5fae\u89c2\u53d8\u91cf\u51fa\u53d1\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u63cf\u8ff0\u66f4\u5927\u5c3a\u5ea6\u884c\u4e3a\u7684\u5b8f\u89c2\u53d8\u91cf\\(S_n\\)\u3002\u5728RG\u7684\u7c97\u7c92\u5316\u4e4b\u540e\uff0c\u901a\u5e38\u9700\u8981\u4e00\u6b65\u6807\u5ea6\u53d8\u6362\u6765\u5c06\u65b0\u7cfb\u7edf\u4e0e\u539f\u7cfb\u7edf\u8fdb\u884c\u6bd4\u8f83\u3002\u5728\u968f\u673a\u6e38\u8d70\u95ee\u9898\u4e2d\uff0c\u8fd9\u5bf9\u5e94\u4e8e\u5bf9\u603b\u4f4d\u79fb\\(S_n\\)\u8fdb\u884c\u6807\u51c6\u5316\u5904\u7406\uff0c\u4f8b\u5982\u9664\u4ee5\u4e00\u4e2a\u56e0\u5b50\\(\\sqrt{n}\\)\uff08\u5bf9\u4e8e\u65b9\u5dee\u6709\u9650\u7684\u60c5\u51b5\uff09\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u7ecf\u8fc7\\(S_n / \\sqrt{n}\\)\u8fd9\u4e2a\u53d8\u6362\u540e\uff0c\u5206\u5e03\u7684\u5f62\u5f0f\u8d8b\u4e8e\u7a33\u5b9a\uff08\u9ad8\u65af\u5206\u5e03\uff09\uff0c\u8fd9\u6b63\u4f53\u73b0\u4e86\u7cfb\u7edf\u5728\u53d8\u6362\u4e0b\u7684\u81ea\u76f8\u4f3c\u6027\uff08self-similarity\uff09\u3002</p> </li> <li> <p>\u7a33\u5b9a\u5206\u5e03\u5373\u4e0d\u52a8\u70b9\uff1a\u6211\u4eec\u5bfb\u627e\u7684\u662f\u6c42\u548c\u64cd\u4f5c\u4e0b\u7684\u6781\u9650\u5206\u5e03\u3002\u4e00\u4e2a\u5206\u5e03\u5982\u679c\u7ecf\u8fc7\u6c42\u548c\uff08\u5e76\u8fdb\u884c\u9002\u5f53\u7684\u5e73\u79fb\u548c\u7f29\u653e\uff09\u540e\uff0c\u5176\u5206\u5e03\u5f62\u5f0f\u4fdd\u6301\u4e0d\u53d8\uff0c\u5219\u79f0\u4e4b\u4e3a\u7a33\u5b9a\u5206\u5e03\uff08stable distribution\uff09\u3002\u5728RG\u7684\u8bed\u8a00\u4e2d\uff0c\u8fd9\u4e9b\u7a33\u5b9a\u5206\u5e03\u6070\u597d\u5c31\u662f\u6c42\u548c\u8fd9\u4e2aRG\u53d8\u6362\u7684\u4e0d\u52a8\u70b9\u3002</p> </li> <li> <p>\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u7684RG\u8be0\u91ca\uff1a\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u8be0\u91caCLT\uff1a\u5bf9\u4e8e\u6240\u6709\u521d\u59cb\u5206\u5e03\u65b9\u5dee\u6709\u9650\u7684\u968f\u673a\u53d8\u91cf\uff08\u8fd9\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u201c\u5438\u5f15\u76c6\u201d\uff09\uff0c\u5728\u6c42\u548c\uff08\u7c97\u7c92\u5316\uff09\u8fd9\u4e00RG\u6d41\u7684\u4f5c\u7528\u4e0b\uff0c\u5b83\u4eec\u90fd\u4f1a\u88ab\u5438\u5f15\u5230\u540c\u4e00\u4e2a\u3001\u4e5f\u662f\u552f\u4e00\u4e00\u4e2a\u4e0d\u52a8\u70b9\u2014\u2014\u9ad8\u65af\u5206\u5e03\u3002\u521d\u59cb\u5206\u5e03\u7684\u5176\u5b83\u7ec6\u8282\uff08\u5982\u504f\u5ea6\u3001\u5cf0\u5ea6\u7b49\uff09\u5728RG\u7684\u8bed\u8a00\u4e2d\u88ab\u79f0\u4e3a\u201c\u975e\u76f8\u5173\u7b97\u5b50\u201d\uff08irrelevant operators\uff09\uff0c\u5b83\u4eec\u5728\u4e0d\u65ad\u7684\u7c97\u7c92\u5316\u8fc7\u7a0b\u4e2d\u88ab\u9010\u6e10\u201c\u62b9\u5e73\u201d\uff0c\u5bf9\u6700\u7ec8\u7684\u5b8f\u89c2\u884c\u4e3a\u6ca1\u6709\u5f71\u54cd\u3002</p> </li> <li> <p>\u5e7f\u4e49\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff08GCLT\uff09\uff1a\u5f53\u521d\u59cb\u5206\u5e03\u7684\u65b9\u5dee\u65e0\u9650\u65f6\uff08\u4f8b\u5982\u91cd\u5c3e\u5206\u5e03\uff09\uff0c\u7cfb\u7edf\u5c31\u4e0d\u518d\u5904\u4e8e\u9ad8\u65af\u4e0d\u52a8\u70b9\u7684\u5438\u5f15\u76c6\u5185\u3002\u6b64\u65f6\uff0cRG\u6d41\u4f1a\u5c06\u5b83\u4eec\u5e26\u5230\u5176\u5b83\u7684\u4e0d\u52a8\u70b9\u3002\u8fd9\u4e9b\u975e\u9ad8\u65af\u7684\u7a33\u5b9a\u5206\u5e03\u5c31\u662f\u6240\u8c13\u7684\u5217\u7ef4\u7a33\u5b9a\u5206\u5e03\uff08L\u00e9vy stable distributions\uff09\u3002\u4e0e\u9ad8\u65af\u5206\u5e03\u4e0d\u540c\uff0c\u5217\u7ef4\u5206\u5e03\u901a\u5e38\u5177\u6709\u2018\u91cd\u5c3e\u2019\uff08heavy tails\uff09\uff0c\u610f\u5473\u7740\u53d1\u751f\u6781\u7aef\u5927\u8df3\u8dc3\u7684\u6982\u7387\u8fdc\u9ad8\u4e8e\u9ad8\u65af\u5206\u5e03\u7684\u9884\u6d4b\uff0c\u5b83\u4eec\u7684\u65b9\u5dee\u751a\u81f3\u53ef\u80fd\u662f\u65e0\u9650\u7684\u3002Amir\u7684\u8bba\u6587\u6b63\u662f\u7528\u8fd9\u79cdRG\u601d\u60f3\uff0c\u4ee5\u4e00\u79cd\u7edf\u4e00\u800c\u4f18\u7f8e\u7684\u65b9\u5f0f\u63a8\u5bfc\u51fa\u4e86\u5305\u62ec\u9ad8\u65af\u5206\u5e03\u548c\u5217\u7ef4\u5206\u5e03\u5728\u5185\u7684\u6240\u6709\u7a33\u5b9a\u5206\u5e03\u5f62\u5f0f\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0c\u6559\u6388\u63d0\u53caRG\u7406\u8bba\uff0c\u662f\u4e3a\u4e86\u63ed\u793a\u4e00\u4e2a\u66f4\u6df1\u5c42\u6b21\u7684\u56fe\u666f\uff1a\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u5e76\u975e\u4e00\u4e2a\u5b64\u7acb\u7684\u6982\u7387\u8bba\u7ed3\u8bba\uff0c\u800c\u662f\u7269\u7406\u5b66\u4e2d\u5173\u4e8e\u6807\u5ea6\u4e0e\u666e\u9002\u6027\u7684\u5b8f\u5927\u7406\u8bba\uff08RG\uff09\u5728\u4e00\u4e2a\u5177\u4f53\u95ee\u9898\u4e0a\u7684\u4f53\u73b0\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u9ad8\u65af\u5206\u5e03\u7684\u65e0\u5904\u4e0d\u5728\uff0c\u6e90\u4e8e\u5b83\u5728\u968f\u673a\u53d8\u91cf\u6c42\u548c\u8fd9\u4e00\u57fa\u672c\u7269\u7406\u64cd\u4f5c\u4e0b\u6240\u5177\u6709\u7684\u72ec\u7279\u7684\u7a33\u5b9a\u6027\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#40","title":"4.0 \u6cca\u677e\u8fc7\u7a0b\uff1a\u5f15\u5165\u968f\u673a\u65f6\u95f4","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u8ba8\u8bba\u7684\u6a21\u578b\u4e2d\uff0c\u65f6\u95f4\u90fd\u662f\u4ee5\u56fa\u5b9a\u7684\u3001\u786e\u5b9a\u6027\u7684\u8282\u62cd\u5411\u524d\u63a8\u8fdb\u7684\u3002\u7136\u800c\uff0c\u5728\u81ea\u7136\u754c\u7684\u8bb8\u591a\u8fc7\u7a0b\u4e2d\uff0c\u4e8b\u4ef6\u7684\u53d1\u751f\u672c\u8eab\u5c31\u662f\u968f\u673a\u7684\u3002\u4f8b\u5982\uff0c\u653e\u5c04\u6027\u539f\u5b50\u6838\u7684\u8870\u53d8\u3001\u7ec6\u80de\u5185\u5206\u5b50\u9a6c\u8fbe\u7684\u8fd0\u52a8\u7b49\u3002\u6cca\u677e\u8fc7\u7a0b\u6b63\u662f\u63cf\u8ff0\u8fd9\u7c7b\u4e8b\u4ef6\u5728\u65f6\u95f4\u4e0a\u968f\u673a\u5206\u5e03\u7684\u57fa\u672c\u6a21\u578b\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#41","title":"4.1 \u52a8\u673a\uff1a\u4ece\u201c\u65f6\u949f\u201d\u6b65\u5230\u968f\u673a\u4e8b\u4ef6","text":"<p>SRW\u548cGRW\u6a21\u578b\u4e2d\u7684\u7c92\u5b50\u50cf\u4e00\u4e2a\u4e0a\u4e86\u53d1\u6761\u7684\u949f\uff0c\u6bcf\u9694\u4e00\u4e2a\u56fa\u5b9a\u7684\u65f6\u95f4\\(\\tau\\)\u5c31\u79fb\u52a8\u4e00\u6b65\u3002\u73b0\u5728\u6211\u4eec\u8003\u8651\u4e00\u79cd\u65b0\u7684\u60c5\u666f\uff1a\u7c92\u5b50\u5728\u4efb\u4f55\u4e00\u4e2a\u5fae\u5c0f\u7684\u65f6\u95f4\u95f4\u9694\\(dt\\)\u5185\uff0c\u90fd\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u6982\u7387\u5411\u524d\u8df3\u4e00\u6b65\u3002\u8fd9\u4e2a\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u8df3\u8dc3\u6982\u7387\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u8df3\u8dc3\u901f\u7387\uff08hopping rate\uff09\uff0c\u8bb0\u4e3a\\(r\\)\uff08\u6216\u5e7b\u706f\u7247\u4e2d\u7684\\(\\nu\\)\uff09\u3002</p> <p></p> <ul> <li> <p>\u5728\\(dt\\)\u65f6\u95f4\u5185\u5411\u524d\u8df3\u4e00\u6b65\u7684\u6982\u7387\uff1a\\(P_+ = r \\cdot dt\\)</p> </li> <li> <p>\u5728\\(dt\\)\u65f6\u95f4\u5185\u4e0d\u52a8\u7684\u6982\u7387\uff1a\\(P_0 = 1 - r \\cdot dt\\)</p> </li> </ul> <p>\u8fd9\u91cc\u7684\u6838\u5fc3\u5047\u8bbe\u662f\\(r\\)\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u4e0d\u968f\u65f6\u95f4\u6539\u53d8\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#42","title":"4.2 \u7269\u7406\u5b9e\u4f8b\uff1a\u9a71\u52a8\u86cb\u767d\u5206\u5b50\u9a6c\u8fbe","text":"<p>\u8bfe\u5802\u4e0a\u5c55\u793a\u7684\u9a71\u52a8\u86cb\u767d\uff08Kinesin\uff09\u662f\u4e00\u4e2a\u7edd\u4f73\u7684\u7269\u7406\u5b9e\u4f8b\u3002\u9a71\u52a8\u86cb\u767d\u662f\u4e00\u79cd\u5206\u5b50\u9a6c\u8fbe\uff0c\u5b83\u6cbf\u7740\u7ec6\u80de\u5185\u7684\u5fae\u7ba1\u201c\u884c\u8d70\u201d\uff0c\u8d1f\u8d23\u8fd0\u8f93\u5404\u79cd\u7ec6\u80de\u5668\u548c\u56ca\u6ce1\u3002\u5b83\u7684\u8fd0\u52a8\u662f\u5355\u5411\u7684\uff0c\u4f46\u6bcf\u4e00\u6b65\u7684\u53d1\u751f\u65f6\u523b\u662f\u968f\u673a\u7684\u3002</p> <ul> <li> <p>\u6b65\u957f\uff1a\u9a71\u52a8\u86cb\u767d\u7684\u6bcf\u4e00\u6b65\u5927\u5c0f\u7ea6\u4e3a 8 nm\uff0c\u8fd9\u6070\u597d\u662f\u5fae\u7ba1\u4e0a\u4e00\u4e2a\u5fae\u7ba1\u86cb\u767d\u4e8c\u805a\u4f53\u7684\u957f\u5ea6\u3002</p> </li> <li> <p>\u80fd\u91cf\u6765\u6e90\uff1a\u6bcf\u8d70\u4e00\u6b65\uff0c\u9a71\u52a8\u86cb\u767d\u9700\u8981\u6c34\u89e3\u4e00\u4e2aATP\u5206\u5b50\u6765\u63d0\u4f9b\u80fd\u91cf\u3002\u56e0\u6b64\uff0c\u5176\u6b65\u8fdb\u901f\u7387\u4e0eATP\u6c34\u89e3\u901f\u7387\u7d27\u5bc6\u8026\u5408\uff0c\u901a\u5e38\u662f1:1\u7684\u5173\u7cfb \u3002</p> </li> <li> <p>\u901f\u7387\uff1a\u5728\u751f\u7406\u6761\u4ef6\u4e0b\uff0c\u9a71\u52a8\u86cb\u767d\u7684\u884c\u8d70\u901f\u7387\u7ea6\u4e3a\u6bcf\u79d2\u51e0\u5341\u5230\u4e0a\u767e\u6b65\u3002\u4f8b\u5982\uff0c\u5b9e\u9a8c\u6d4b\u5f97\u7684ATP\u6c34\u89e3\u901f\u7387\u53ef\u8fbe\u7ea6\\(50-100 \\text{ s}^{-1}\\) \u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49\u7684\u62bd\u8c61\u8df3\u8dc3\u901f\u7387\u53d8\u5f97\u975e\u5e38\u5177\u4f53\uff1a\u5bf9\u4e8e\u9a71\u52a8\u86cb\u767d\uff0c\\(r \\approx 100 \\text{ s}^{-1}\\)\u3002</p> </li> </ul>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#43","title":"4.3 \u63a8\u5bfc\u7b49\u5f85\u65f6\u95f4\u5206\u5e03","text":"<p>\u6cca\u677e\u8fc7\u7a0b\u7684\u7b2c\u4e00\u4e2a\u6838\u5fc3\u95ee\u9898\u662f\uff1a\u4ece\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u540e\uff0c\u9700\u8981\u7b49\u5f85\u591a\u957f\u65f6\u95f4\uff0c\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u624d\u4f1a\u53d1\u751f\uff1f\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u63a8\u5bfc\u7b49\u5f85\u65f6\u95f4\u5206\u5e03\u6765\u56de\u7b54\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#431","title":"4.3.1 \u751f\u5b58\u6982\u7387\u7684\u6982\u5ff5","text":"<p>\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u5173\u952e\u91cf\uff1a\u751f\u5b58\u6982\u7387\uff08survival probability\uff09\\(S(t) = \\text{Prob}\\{T &gt; t\\}\\)\uff0c\u5b83\u8868\u793a\u76f4\u5230\\(t\\)\u65f6\u523b\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u4e8b\u4ef6\uff08\u4f8b\u5982\uff0c\u4e00\u6b21\u8df3\u8dc3\uff09\u8fd8\u672a\u53d1\u751f\u7684\u6982\u7387\u3002\u8fd9\u91cc\u7684\\(T\\)\u662f\u7b49\u5f85\u65f6\u95f4\u8fd9\u4e2a\u968f\u673a\u53d8\u91cf\u3002\u6839\u636e\u5b9a\u4e49\uff0c\u751f\u5b58\u51fd\u6570\u4e0e\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\uff08CDF\uff09\\(F(t) = \\text{Prob}\\{T \\le t\\}\\)\u7684\u5173\u7cfb\u662f\\(S(t) = 1 - F(t)\\)\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#432","title":"4.3.2 \u4ece\u5dee\u5206\u5230\u5fae\u5206\u65b9\u7a0b","text":"<p>\u73b0\u5728\u6211\u4eec\u6765\u63a8\u5bfc\\(S(t)\\)\u7684\u6f14\u5316\u65b9\u7a0b\uff0c\u8fd9\u540c\u6837\u662f\u9ed1\u677f\u4e0a\u7684\u6838\u5fc3\u63a8\u5bfc\u3002</p> <p>\u8003\u8651\\(t+dt\\)\u65f6\u523b\u7684\u751f\u5b58\u6982\u7387\\(S(t+dt)\\)\u3002\u7cfb\u7edf\u8981\u201c\u5b58\u6d3b\u201d\u5230\\(t+dt\\)\u65f6\u523b\uff0c\u5fc5\u987b\u6ee1\u8db3\u4e24\u4e2a\u72ec\u7acb\u6761\u4ef6\uff1a</p> <ol> <li> <p>\u5b83\u5df2\u7ecf\u5b58\u6d3b\u5230\u4e86\\(t\\)\u65f6\u523b\uff08\u6982\u7387\u4e3a\\(S(t)\\)\uff09\u3002</p> </li> <li> <p>\u5e76\u4e14\uff0c\u5728\u63a5\u4e0b\u6765\u7684\\([t, t+dt]\\)\u8fd9\u4e2a\u5fae\u5c0f\u65f6\u95f4\u6bb5\u5185\uff0c\u6ca1\u6709\u53d1\u751f\u8df3\u8dc3\uff08\u6982\u7387\u4e3a\\(1 - r dt\\)\uff09\u3002</p> </li> </ol> <p>\u56e0\u6b64\uff0c</p> \\[ S(t+dt) = S(t) \\cdot (1 - r dt) \\] <p>\u5bf9\u4e0a\u5f0f\u8fdb\u884c\u6574\u7406\uff1a</p> \\[ \\frac{S(t+dt) - S(t)}{dt} = -r S(t) \\] <p>\u5f53\\(dt \\to 0\\)\u65f6\uff0c\u5de6\u8fb9\u5c31\u662f\\(S(t)\\)\u7684\u5bfc\u6570\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u4e00\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\uff1a</p> \\[ \\frac{dS(t)}{dt} = -r S(t) \\]"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#433","title":"4.3.3 \u6307\u6570\u5206\u5e03","text":"<p>\u8fd9\u4e2a\u5fae\u5206\u65b9\u7a0b\u7684\u89e3\u975e\u5e38\u7b80\u5355\u3002\u6211\u4eec\u77e5\u9053\u521d\u59cb\u6761\u4ef6\u662f\\(S(0)=1\\)\uff08\u5728\\(t=0\\)\u65f6\u523b\uff0c\u4e8b\u4ef6\u80af\u5b9a\u8fd8\u672a\u53d1\u751f\uff09\u3002\u6c42\u89e3\u8be5\u65b9\u7a0b\u5f97\u5230\uff1a</p> \\[ S(t) = e^{-rt} \\] <p>\u6211\u4eec\u5f97\u5230\u4e86\u751f\u5b58\u6982\u7387\u51fd\u6570\u3002\u800c\u7b49\u5f85\u65f6\u95f4\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\\(p(t)\\)\u53ef\u4ee5\u901a\u8fc7\u5bf9\\(F(t) = 1 - S(t)\\)\u6c42\u5bfc\u5f97\u5230\uff0c\u5373\\(p(t) = -dS/dt\\)\uff1a</p> \\[ p(t) = r e^{-rt} \\] <p>\u8fd9\u5c31\u662f\u6307\u6570\u5206\u5e03\u3002\u5b83\u63cf\u8ff0\u4e86\u5728\u4e8b\u4ef6\u53d1\u751f\u901f\u7387\u6052\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u4e24\u6b21\u8fde\u7eed\u4e8b\u4ef6\u4e4b\u95f4\u7684\u7b49\u5f85\u65f6\u95f4\u7684\u5206\u5e03\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#44","title":"4.4 \u6cca\u677e\u8fc7\u7a0b\u7684\u6027\u8d28","text":"<p>\u4ece\u6307\u6570\u5206\u5e03\u53ef\u4ee5\u5bfc\u51fa\u6cca\u677e\u8fc7\u7a0b\u7684\u4e00\u4e9b\u91cd\u8981\u6027\u8d28\uff1a</p> <ul> <li> <p>\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\uff1a\\(\\langle T \\rangle = \\int_0^\\infty t \\cdot p(t) dt = 1/r\\)\u3002\u8fd9\u7b26\u5408\u76f4\u89c9\uff1a\u901f\u7387\u8d8a\u9ad8\uff0c\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\u8d8a\u77ed\u3002</p> </li> <li> <p>\u7b49\u5f85\u65f6\u95f4\u65b9\u5dee\uff1a\\(\\text{Var} = 1/r^2\\)\u3002</p> </li> <li> <p>\u65e0\u8bb0\u5fc6\u6027\uff08Memoryless Property\uff09\uff1a\u8fd9\u662f\u6307\u6570\u5206\u5e03\u6700\u72ec\u7279\u7684\u6027\u8d28\u3002\u5b83\u6307\u7684\u662f\uff0c\u672a\u6765\u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u4e0e\u8fc7\u53bb\u7b49\u5f85\u4e86\u591a\u4e45\u65e0\u5173\u3002\u6570\u5b66\u4e0a\u8868\u793a\u4e3a\\(\\text{Prob}(T &gt; t+s | T &gt; t) = \\text{Prob}(T &gt; s)\\)\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u7b49\u4e86\\(t\\)\u79d2\uff0c\u9a71\u52a8\u86cb\u767d\u8fd8\u6ca1\u52a8\uff0c\u90a3\u4e48\u5b83\u5728\u63a5\u4e0b\u6765\\(s\\)\u79d2\u5185\u4f9d\u7136\u4e0d\u52a8\u7684\u6982\u7387\uff0c\u548c\u4e00\u4e2a\u521a\u5f00\u59cb\u7b49\u5f85\u7684\u9a71\u52a8\u86cb\u767d\u5728\\(s\\)\u79d2\u5185\u4e0d\u52a8\u7684\u6982\u7387\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002\u8fd9\u4e2a\u7cfb\u7edf\u7684\u201c\u5386\u53f2\u201d\u88ab\u9057\u5fd8\u4e86\u3002\u8fd9\u4e2a\u6027\u8d28\u76f4\u63a5\u6e90\u4e8e\u6211\u4eec\u6700\u521d\u7684\u7269\u7406\u5047\u8bbe\u2014\u2014\u8df3\u8dc3\u901f\u7387\\(r\\)\u662f\u4e00\u4e2a\u4e0d\u968f\u65f6\u95f4\u6539\u53d8\u7684\u5e38\u6570\u3002</p> </li> </ul>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#45","title":"4.5 \u4e8b\u4ef6\u8ba1\u6570\uff1a\u6cca\u677e\u5206\u5e03","text":"<p>\u9664\u4e86\u7b49\u5f85\u65f6\u95f4\uff0c\u6cca\u677e\u8fc7\u7a0b\u7684\u53e6\u4e00\u4e2a\u6838\u5fc3\u95ee\u9898\u662f\uff1a\u201c\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u7a97\u53e3 \\(T\\) \u5185\uff0c\u6070\u597d\u53d1\u751f \\(k\\) \u6b21\u4e8b\u4ef6\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\u201d\u5176\u7b54\u6848\u7531\u6cca\u677e\u5206\u5e03\u7ed9\u51fa\uff1a</p> \\[ P(k; T) = \\frac{(\\nu T)^k}{k!} e^{-\\nu T} \\] <p>\u5176\u4e2d\uff0c\\(\\lambda = \\nu T\\) \u662f\u5728\u8be5\u65f6\u95f4\u7a97\u53e3\u5185\u671f\u671b\u53d1\u751f\u7684\u5e73\u5747\u4e8b\u4ef6\u6570\u3002\u8fd9\u4e2a\u5206\u5e03\u4e0e\u6307\u6570\u5206\u5e03\u5171\u540c\u6784\u6210\u4e86\u5bf9\u6cca\u677e\u8fc7\u7a0b\u7684\u5b8c\u6574\u63cf\u8ff0\uff1a\u6307\u6570\u5206\u5e03\u63cf\u8ff0\u4e86\u201c\u4e8b\u4ef6\u4e4b\u95f4\u8981\u7b49\u591a\u4e45\u201d\uff0c\u800c\u6cca\u677e\u5206\u5e03\u5219\u63cf\u8ff0\u4e86\u201c\u4e00\u6bb5\u65f6\u95f4\u5185\u80fd\u53d1\u751f\u591a\u5c11\u4e8b\u201d\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#50-gillespie","title":"5.0 \u6a21\u62df\uff1aGillespie\u7b97\u6cd5","text":"<p>\u8be5\u7b97\u6cd5\u7684\u8be6\u7ec6\u7ec6\u8282\u5c06\u5728\u4e0b\u4e00\u4e2a\u8bb2\u5ea7\u4e2d\u4ecb\u7ecd\u3002</p> <p>\u4e0a\u4e00\u8282\u7684\u7406\u8bba\u63a8\u5bfc\u4e0d\u4ec5\u7ed9\u51fa\u4e86\u6cca\u677e\u8fc7\u7a0b\u7684\u7edf\u8ba1\u6027\u8d28\uff0c\u4e5f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u7cbe\u786e\u3001\u9ad8\u6548\u7684\u8ba1\u7b97\u673a\u6a21\u62df\u65b9\u6cd5\uff0c\u5373Gillespie\u7b97\u6cd5\uff08\u6216\u79f0\u968f\u673a\u6a21\u62df\u7b97\u6cd5\uff0cSSA\uff09\u3002\u4f20\u7edf\u7684\u6a21\u62df\u65b9\u6cd5\u53ef\u80fd\u4f1a\u5c06\u65f6\u95f4\u79bb\u6563\u5316\u6210\u8bb8\u591a\u5fae\u5c0f\u7684\\(dt\\)\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\\(dt\\)\u5185\u6839\u636e\u6982\u7387\\(r dt\\)\u6765\u51b3\u5b9a\u662f\u5426\u53d1\u751f\u4e8b\u4ef6\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u4ec5\u8ba1\u7b97\u6548\u7387\u4f4e\u4e0b\uff0c\u800c\u4e14\u662f\u8fd1\u4f3c\u7684\u3002</p> <p>Gillespie\u7b97\u6cd5\u7684\u7cbe\u9ad3\u5728\u4e8e\uff0c\u5b83\u5229\u7528\u6211\u4eec\u5df2\u7ecf\u63a8\u5bfc\u51fa\u7684\u89e3\u6790\u7ed3\u679c\uff0c\u76f4\u63a5\u56de\u7b54\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ol> <li> <p>\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u5c06\u5728\u4f55\u65f6\u53d1\u751f\uff1f \u7b54\u6848\u662f\uff1a\u7b49\u5f85\u65f6\u95f4\\(\\Delta t\\)\u4ece\u6307\u6570\u5206\u5e03\\(p(t) = re^{-rt}\\)\u4e2d\u62bd\u53d6\u3002</p> </li> <li> <p>\u5c06\u53d1\u751f\u4ec0\u4e48\u4e8b\u4ef6\uff1f \uff08\u5728\u6709\u591a\u79cd\u53ef\u80fd\u4e8b\u4ef6\u65f6\uff09\u7b54\u6848\u662f\uff1a\u6839\u636e\u5404\u4e8b\u4ef6\u7684\u76f8\u5bf9\u901f\u7387\u6765\u51b3\u5b9a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u7c92\u5b50\u65e2\u53ef\u4ee5\u4ee5\u901f\u7387\\(\\nu_f\\)\u5411\u524d\u8df3\uff0c\u4e5f\u53ef\u4ee5\u4ee5\u901f\u7387\\(\\nu_b\\)\u5411\u540e\u8df3\uff0c\u90a3\u4e48\u603b\u901f\u7387\u4e3a\\(\\nu_{total} = \\nu_f + \\nu_b\\)\u3002\u5728\u786e\u5b9a\u4e86\u4e0b\u4e00\u6b65\u53d1\u751f\u540e\uff0c\u5b83\u5411\u524d\u8df3\u7684\u6982\u7387\u4e3a\\(\\nu_f / \\nu_{total}\\)\uff0c\u5411\u540e\u8df3\u7684\u6982\u7387\u4e3a\\(\\nu_b / \\nu_{total}\\)\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cGillespie\u7b97\u6cd5\u53ef\u4ee5\u7cbe\u786e\u6a21\u62df\u4efb\u610f\u590d\u6742\u7684\u968f\u673a\u53cd\u5e94\u7f51\u7edc\u3002</p> </li> </ol> <p>\u5bf9\u4e8e\u6211\u4eec\u76ee\u524d\u8ba8\u8bba\u7684\u7b80\u5355\u5355\u5411\u8df3\u8dc3\u8fc7\u7a0b\uff0c\u7b2c\u4e8c\u6b65\u662f\u786e\u5b9a\u7684\uff08\u53ea\u4f1a\u5411\u524d\u8df3\uff09\u3002\u56e0\u6b64\uff0c\u7b97\u6cd5\u7684\u6838\u5fc3\u5c31\u662f\u4e0d\u65ad\u5730\u4ece\u6307\u6570\u5206\u5e03\u4e2d\u751f\u6210\u4e0b\u4e00\u4e2a\u7b49\u5f85\u65f6\u95f4\u3002</p> <p>\u4e0b\u9762\u7684Python\u4ee3\u7801\u5b9e\u73b0\u4e86Gillespie\u7b97\u6cd5\uff0c\u7528\u4e8e\u6a21\u62df\u4e00\u4e2a\u7b80\u5355\u7684\u5355\u5411\u6cca\u677e\u8fc7\u7a0b\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import poisson, expon\n\n# --- Parameter settings ---\nr = 2.0                # Average event rate\nT_max = 10.0             # Total simulation time for trajectories\nnum_trajectories = 10    # [Modification] Increase the number of displayed trajectories to 10\nnum_simulations = 20000  # Number of simulations for statistical distribution\n\n# --- Create canvas ---\nfig = plt.figure(figsize=(14, 10))\nax_traj = plt.subplot2grid((2, 2), (0, 0), colspan=2)\nax_count = plt.subplot2grid((2, 2), (1, 0))\nax_wait = plt.subplot2grid((2, 2), (1, 1))\n\nfig.suptitle(f'Poisson Process: Trajectories and Underlying Distributions (Rate r = {r})', fontsize=16)\n\n# --- 1. Simulate and plot several trajectories (top plot) ---\nall_waiting_times = [] \nfor i in range(num_trajectories):\n    t = 0.0\n    x = 0\n    times = [t]\n    positions = [x]\n\n    while t &lt; T_max:\n        delta_t = np.random.exponential(scale=1.0/r)\n        all_waiting_times.append(delta_t)\n\n        t += delta_t\n        if t &lt; T_max:\n            x += 1\n            times.append(t)\n            positions.append(x)\n\n    # To make the graph clear, only add labels for the first few trajectories\n    if i &lt; 3:\n        ax_traj.step(times, positions, where='post', label=f'Sample Trajectory {i+1}')\n    else:\n        ax_traj.step(times, positions, where='post', alpha=0.6) # Make subsequent trajectories semi-transparent\n\n# Plot theoretical mean line\nt_theory = np.linspace(0, T_max, 100)\nmean_theory = r * t_theory\nax_traj.plot(t_theory, mean_theory, 'k--', linewidth=2.5, label=f'Theoretical Mean N(t) = {r}*t')\nax_traj.set_title(f'Sample Trajectories of a Poisson Process ({num_trajectories} shown)')\nax_traj.set_xlabel('Time (t)')\nax_traj.set_ylabel('Number of Events (N(t))')\nax_traj.grid(True, linestyle='--', alpha=0.6)\nax_traj.legend()\n\n\n# --- 2. Plot event count distribution (bottom left plot) ---\nevent_counts_at_Tmax = np.random.poisson(lam=r * T_max, size=num_simulations)\nk_values = np.arange(event_counts_at_Tmax.min(), event_counts_at_Tmax.max() + 1)\nax_count.hist(event_counts_at_Tmax, bins=np.arange(k_values.min(), k_values.max() + 2) - 0.5, density=True, alpha=0.7, label='Simulation')\n\npoisson_pmf_theory = poisson.pmf(k=k_values, mu=r * T_max)\nax_count.plot(k_values, poisson_pmf_theory, 'ro-', label='Theory (Poisson)')\nax_count.set_title(f'Event Count Distribution at T={T_max}')\nax_count.set_xlabel(f'Number of Events (k)')\nax_count.set_ylabel('Probability')\nax_count.set_xticks(k_values[::2])\nax_count.legend()\nax_count.grid(True, linestyle='--', alpha=0.6)\n\n\n# --- 3. Plot waiting time distribution (bottom right plot) ---\nadditional_waits = np.random.exponential(scale=1.0/r, size=num_simulations)\nall_waiting_times.extend(additional_waits)\n\nax_wait.hist(all_waiting_times, bins=50, density=True, alpha=0.7, label='Simulation')\n\nt_values_exp = np.linspace(0, max(all_waiting_times), 200)\nexpon_pdf_theory = expon.pdf(t_values_exp, scale=1.0/r)\nax_wait.plot(t_values_exp, expon_pdf_theory, 'r-', linewidth=2, label='Theory (Exponential)')\nax_wait.set_title('Waiting Time Distribution')\nax_wait.set_xlabel('Time between events (\u0394t)')\nax_wait.set_ylabel('Probability Density')\nax_wait.legend()\nax_wait.grid(True, linestyle='--', alpha=0.6)\n\n\n# --- Display final image ---\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code></pre> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u6ca1\u6709\u4efb\u4f55\u4e24\u6761\u8f68\u8ff9\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u5b83\u4eec\u7684\u8df3\u8dc3\u65f6\u95f4\u70b9\u5404\u4e0d\u76f8\u540c\uff0c\u6700\u7ec8\u5728\\(t=10\\)\u79d2\u65f6\u7684\u4f4d\u7f6e\u4e5f\u5404\u4e0d\u76f8\u540c\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u5b83\u4eec\u5145\u6ee1\u968f\u673a\uff0c\u4f46\u6240\u6709\u8f68\u8ff9\u90fd\u56f4\u7ed5\u7740\u9ed1\u8272\u7684\u7406\u8bba\u5e73\u5747\u7ebf  \\(N(t) = 2.0 \\cdot t\\) \u4e0a\u4e0b\u6ce2\u52a8\u3002\u5355\u4e2a\u8fc7\u7a0b\u662f\u4e0d\u53ef\u9884\u6d4b\u7684\uff0c\u4f46\u5176\u957f\u671f\u884c\u4e3a\u4f1a\u9075\u5faa\u4e00\u4e2a\u5e73\u5747\u8d8b\u52bf\u3002</p> <p>\u5de6\u4e0b\u56fe (\u4e8b\u4ef6\u8ba1\u6570\u5206\u5e03)\uff1a\u8fd9\u5e45\u56fe\u4ece\u7edf\u8ba1\u5b66\u89d2\u5ea6\u63ed\u793a\u4e86\u8fc7\u7a0b\u7684\u786e\u5b9a\u6027\u89c4\u5f8b\u3002\u5b83\u7edf\u8ba1\u4e86\u6210\u5343\u4e0a\u4e07\u6b21\u6a21\u62df\u5728\\(t=10\\)\u79d2\u8fd9\u4e2a\u7cbe\u786e\u65f6\u523b\u7684\u6700\u7ec8\u4f4d\u7f6e\uff0c\u5e76\u7ed8\u5236\u6210\u76f4\u65b9\u56fe\u3002\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5c3d\u7ba1\u5355\u6b21\u5b9e\u9a8c\u7684\u7ed3\u679c\u662f\u968f\u673a\u7684\uff0c\u4f46\u5927\u91cf\u5b9e\u9a8c\u7684\u7ed3\u679c\u5206\u5e03\u5374\u5448\u73b0\u51fa\u4e00\u4e2a\u975e\u5e38\u89c4\u5219\u7684\u949f\u5f62\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e2a\u7531\u6a21\u62df\u6570\u636e\uff08\u84dd\u8272\uff09\u6784\u6210\u7684\u5206\u5e03\uff0c\u4e0e\u7406\u8bba\u4e0a\u7684\u6cca\u677e\u5206\u5e03\uff08\u7ea2\u8272\u5706\u70b9\u7ebf\uff09\u91cd\u5408\u3002\u56fa\u5b9a\u65f6\u95f4\u70b9\uff0c\u7cfb\u7edf\u6240\u5904\u72b6\u6001\u7684\u6982\u7387\u662f\u53ef\u4ee5\u88ab\u7cbe\u786e\u9884\u6d4b\u7684\u3002</p> <p>\u53f3\u4e0b\u56fe (\u7b49\u5f85\u65f6\u95f4\u5206\u5e03)\uff1a\u8fd9\u5e45\u56fe\u6df1\u5165\u5230\u8fc7\u7a0b\u7684\u5fae\u89c2\u52a8\u529b\u5b66\u3002\u5b83\u5c06\u6240\u6709\u8f68\u8ff9\u4e2d\u6bcf\u4e00\u6b21\u201c\u8df3\u8dc3\u201d\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\uff08\u5373\u9876\u90e8\u56fe\u4e2d\u6bcf\u4e2a\u9636\u68af\u7684\u201c\u6c34\u5e73\u957f\u5ea6\u201d\uff09\u6536\u96c6\u8d77\u6765\uff0c\u7ed8\u5236\u6210\u5176\u6982\u7387\u5206\u5e03\u3002\u7ed3\u679c\u663e\u793a\uff0c\u7edd\u5927\u591a\u6570\u7b49\u5f85\u65f6\u95f4\u90fd\u5f88\u77ed\uff0c\u800c\u957f\u7b49\u5f85\u65f6\u95f4\u5219\u975e\u5e38\u7f55\u89c1\uff0c\u5176\u6982\u7387\u5448\u6307\u6570\u8870\u51cf\u3002\u8fd9\u4e2a\u6a21\u62df\u7ed3\u679c\uff08\u84dd\u8272\uff09\u540c\u6837\u4e0e\u7406\u8bba\u4e0a\u7684\u6307\u6570\u5206\u5e03\uff08\u7ea2\u7ebf\uff09\u543b\u5408\u3002\u9a71\u52a8\u6574\u4e2a\u8fc7\u7a0b\u6f14\u5316\u7684\u201c\u5f15\u64ce\u201d\u2014\u2014\u4e8b\u4ef6\u53d1\u751f\u7684\u7b49\u5f85\u65f6\u95f4\u2014\u2014\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u9075\u5faa\u4e25\u683c\u6982\u7387\u89c4\u5f8b\u7684\u968f\u673a\u53d8\u91cf\u3002</p>"},{"location":"zh/notes/3.%20%E9%AB%98%E6%96%AF%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0%E4%B8%8E%E6%B3%8A%E6%9D%BE%E8%BF%87%E7%A8%8B/#_2","title":"\u603b\u7ed3","text":"<p>\u672c\u8bb2\u5ea7\u5e26\u9886\u6211\u4eec\u5b8c\u6210\u4e86\u4ece\u79bb\u6563\u5230\u8fde\u7eed\u968f\u673a\u8fc7\u7a0b\u7684\u4e24\u4e2a\u5173\u952e\u8de8\u8d8a\uff0c\u6df1\u5316\u4e86\u6211\u4eec\u5bf9\u968f\u673a\u73b0\u8c61\u7684\u7406\u89e3\uff1a</p> <ol> <li> <p>\u4ece\u79bb\u6563\u7a7a\u95f4\u5230\u8fde\u7eed\u7a7a\u95f4\uff1a\u6211\u4eec\u770b\u5230\uff0c\u7b80\u5355\u968f\u673a\u6e38\u8d70\u5728\u5b8f\u89c2\u6781\u9650\u4e0b\u8d8b\u5411\u4e8e\u9ad8\u65af\u5206\u5e03\u3002\u8fd9\u4e00\u8fc7\u7a0b\u4e0d\u4ec5\u53ef\u4ee5\u7528\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u6765\u63cf\u8ff0\uff0c\u66f4\u53ef\u4ee5\u4ece\u91cd\u6574\u5316\u7fa4\u7684\u6df1\u523b\u601d\u60f3\u4e2d\u5f97\u5230\u8be0\u91ca\uff0c\u5373\u9ad8\u65af\u5206\u5e03\u662f\u6c42\u548c\u64cd\u4f5c\u4e0b\u7684\u4e00\u4e2a\u666e\u9002\u4e0d\u52a8\u70b9\u3002\u5728\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\uff0c\u7279\u5f81\u51fd\u6570\u4f5c\u4e3a\u5206\u6790\u5de5\u5177\uff0c\u5c55\u793a\u4e86\u5176\u5728\u5904\u7406\u72ec\u7acb\u968f\u673a\u53d8\u91cf\u548c\u95ee\u9898\u4e0a\u7684\u5de8\u5927\u5a01\u529b\u3002</p> </li> <li> <p>\u4ece\u79bb\u6563\u65f6\u95f4\u5230\u8fde\u7eed\u65f6\u95f4\uff1a\u901a\u8fc7\u5f15\u5165\u4e00\u4e2a\u6052\u5b9a\u7684\u4e8b\u4ef6\u53d1\u751f\u901f\u7387\\(r\\)\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u6cca\u677e\u8fc7\u7a0b\u6a21\u578b\u3002\u5176\u6838\u5fc3\u5728\u4e8e\uff0c\u4e24\u6b21\u4e8b\u4ef6\u95f4\u7684\u7b49\u5f85\u65f6\u95f4\u670d\u4ece\u6307\u6570\u5206\u5e03\uff0c\u5e76\u5177\u6709\u72ec\u7279\u7684\u65e0\u8bb0\u5fc6\u6027\u3002\u751f\u5b58\u6982\u7387\u7684\u5206\u6790\u65b9\u6cd5\uff0c\u901a\u8fc7\u5efa\u7acb\u5e76\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\uff0c\u6210\u4e3a\u63a8\u5bfc\u8fd9\u4e00\u7ed3\u679c\u7684\u5173\u952e\u3002</p> </li> </ol> <p>\u8d2f\u7a7f\u672c\u8bb2\u7684\u6838\u5fc3\u4e3b\u9898\u662f\uff0c\u5982\u4f55\u4ece\u7b80\u5355\u7684\u3001\u5fae\u89c2\u7684\u7269\u7406\u5047\u8bbe\uff08\u5982\u5355\u6b65\u8df3\u8dc3\u5206\u5e03\u3001\u6052\u5b9a\u4e8b\u4ef6\u7387\uff09\u51fa\u53d1\uff0c\u63a8\u5bfc\u51fa\u5177\u6709\u666e\u9002\u6027\u7684\u3001\u5b8f\u89c2\u7684\u7edf\u8ba1\u89c4\u5f8b\u3002</p> <p>\u4e00\u4e2a\u81ea\u7136\u800c\u7136\u7684\u6b65\u9aa4\u662f\u5c06\u8fd9\u4e24\u4e2a\u601d\u60f3\u7ed3\u5408\u8d77\u6765\uff1a\u7814\u7a76\u4e00\u4e2a\u5728\u8fde\u7eed\u7a7a\u95f4\u4e2d\u3001\u5176\u4e8b\u4ef6\u53d1\u751f\u5728\u8fde\u7eed\u968f\u673a\u65f6\u95f4\u4e0a\u7684\u8fc7\u7a0b\u3002\u8fd9\u5c06\u76f4\u63a5\u5f15\u5bfc\u6211\u4eec\u8fdb\u5165\u5e03\u6717\u8fd0\u52a8\u7684\u9886\u57df\uff0c\u4ee5\u53ca\u63cf\u8ff0\u5b83\u7684\u6570\u5b66\u8bed\u8a00\u2014\u2014\u6717\u4e4b\u4e07\u65b9\u7a0b\uff08Langevin Equation\uff09\u548c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff08Fokker-Planck Equation\uff09\uff0c\u8fd9\u4e9b\u5c06\u662f\u540e\u7eed\u8bfe\u7a0b\u4e2d\u63a2\u8ba8\u7684\u6838\u5fc3\u5185\u5bb9\u3002</p>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/","title":"\u5f15\u8a00\uff1a\u6d41\u4f53\u52a8\u529b\u5b66\u4e0e\u60ac\u6d6e\u7c92\u5b50\u76f8\u4e92\u4f5c\u7528\u7684\u6865\u6881","text":""},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#bh","title":"\u4eceB\u6a21\u578b\u5230H\u6a21\u578b\uff1a\u8026\u5408\u5b88\u6052\u573a\u7684\u52a8\u529b\u5b66","text":"<p>\u5728\u7b2c25\u8bb2\u548c\u7b2c26\u8bb2\u4e2d\uff0c\u5bf9\u63cf\u8ff0\u5e8f\u53c2\u91cf\u52a8\u529b\u5b66\u7684\u6a21\u578b\u8fdb\u884c\u4e86\u533a\u5206\uff0c\u7279\u522b\u662f\u9488\u5bf9\u5b88\u6052\u5e8f\u53c2\u91cf\u5f15\u5165\u4e86B\u6a21\u578b\u3002\u6b63\u5982\u5728\u7b2c29\u8bb2\u4e2d\u8be6\u7ec6\u63a2\u8ba8\u7684\uff0c\u5bf9\u4e8e\u7c92\u5b50\u5bc6\u5ea6 \\(\\phi(\\vec{x}, t)\\) \u8fd9\u6837\u7684\u5b88\u6052\u91cf\uff0c\u5176\u52a8\u529b\u5b66\u4e0d\u80fd\u7b80\u5355\u5730\u7528\u5c40\u57df\u5f1b\u8c6b\u6765\u63cf\u8ff0\uff0c\u800c\u5fc5\u987b\u9075\u5faa\u4e00\u4e2a\u8fde\u7eed\u6027\u65b9\u7a0b \uff1a</p> \\[\\frac{\\partial \\phi(\\vec{x}, t)}{\\partial t} = -\\nabla \\cdot \\vec{J}(\\vec{x}, t)\\] <p>\u6b64\u65b9\u7a0b\u8868\u8fbe\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u7269\u7406\u4e8b\u5b9e\uff1a\u67d0\u4e2a\u533a\u57df\u5185\u7c92\u5b50\u5bc6\u5ea6\u7684\u53d8\u5316\u7387\uff0c\u53ea\u80fd\u6e90\u4e8e\u7c92\u5b50\u6d41 \\(\\vec{J}(\\vec{x}, t)\\) \u7684\u51c0\u6d41\u5165\u6216\u6d41\u51fa \u3002\u5728B\u6a21\u578b\u4e2d\uff0c\u7c92\u5b50\u6d41 \\(\\vec{J}(\\vec{x}, t)\\) \u88ab\u5047\u8bbe\u4e3a\u7531\u5316\u5b66\u52bf \\(\\mu = \\frac{\\delta F}{\\delta \\phi}\\) \u7684\u68af\u5ea6\u9a71\u52a8\uff0c\u5373 \\(\\vec{J}(\\vec{x}, t) = -L \\nabla\\mu = -L \\nabla \\frac{\\delta F[\\phi]}{\\delta \\phi}\\)\uff0c\u5176\u4e2d \\(L\\) \u4e3a\u8fc1\u79fb\u7387 \u3002\u8fd9\u6700\u7ec8\u5bfc\u51fa\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6269\u6563\u7684\u65b9\u7a0b\uff0c\u4e3a\u5c06 \\(\\phi\\) \u7406\u89e3\u4e3a\u4e00\u4e2a\u5b88\u6052\u6807\u91cf\u573a\u5960\u5b9a\u4e86\u57fa\u7840 \u3002\u8fd9\u79cdB\u6a21\u578b\u63cf\u8ff0\u7684\u662f\u7c92\u5b50\u5728\u201c\u5e72\u6027\u201d\u80cc\u666f\u4e2d\u6269\u6563\u7684\u60c5\u51b5 \u3002</p> <p>\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u95ee\u9898\u5728\u4e8e\uff0c\u5f53\u8fd9\u4e2a\u7531 \\(\\phi(\\vec{x}, t)\\) \u63cf\u8ff0\u7684\u5b88\u6052\u7c92\u5b50\u7cfb\u7edf\u88ab\u60ac\u6d6e\u5728\u4e00\u79cd\u52a8\u6001\u7684\u6d41\u4f53\u4e2d\u65f6\uff0c\u5176\u52a8\u529b\u5b66\u5c06\u53d1\u751f\u600e\u6837\u7684\u6839\u672c\u6027\u53d8\u5316\uff1f\u6d41\u4f53\u672c\u8eab\u4e5f\u62e5\u6709\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u5b88\u6052\u91cf\uff1a\u52a8\u91cf\u5bc6\u5ea6 \\(\\rho\\vec{v}(\\vec{x}, t)\\) \u3002\u6d41\u4f53\u52a8\u91cf\u573a\u7684\u52a8\u529b\u5b66\u7531\u5728\u7b2c27\u8bb2\u548c\u7b2c28\u8bb2\u4e2d\u63a8\u5bfc\u7684\u8457\u540d\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b (Navier-Stokes Equations) \u63cf\u8ff0\u3002\u56e0\u6b64\uff0c\u73b0\u5728\u9762\u5bf9\u7684\u662f\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u76f8\u4e92\u8026\u5408\u7684\u5b88\u6052\u573a\u2014\u2014\u7c92\u5b50\u5bc6\u5ea6\u573a \\(\\phi(\\vec{x}, t)\\) \u548c\u6d41\u4f53\u901f\u5ea6\u573a \\(\\vec{v}(\\vec{x}, t)\\)\u2014\u2014\u7684\u590d\u6742\u7cfb\u7edf \u3002</p> <p>\u8fd9\u4e2a\u53cc\u91cd\u5b88\u6052\u4e14\u76f8\u4e92\u8026\u5408\u7684\u7cfb\u7edf\uff0c\u5728Hohenberg\u548cHalperin\u7684\u52a8\u6001\u666e\u9002\u7c7b\u5206\u7c7b\u4e2d\u88ab\u79f0\u4e3aH\u6a21\u578b (Model H) \u3002H\u6a21\u578b\u662f\u63cf\u8ff0\u4e00\u4e2a\u5b88\u6052\u7684\u6807\u91cf\u5e8f\u53c2\u91cf\uff08\u5982\u7c92\u5b50\u5bc6\u5ea6 \\(\\phi\\)\uff09\u4e0e\u4e00\u4e2a\u5b88\u6052\u7684\u77e2\u91cf\u573a\uff08\u5982\u6d41\u4f53\u52a8\u91cf \\(\\rho\\vec{v}\\)\uff0c\u6216\u76f4\u63a5\u4f53\u73b0\u4e3a\u6d41\u4f53\u901f\u5ea6 \\(\\vec{v}\\)\uff09\u52a8\u6001\u8026\u5408\u7684\u901a\u7528\u7406\u8bba\u6846\u67b6\u3002\u8fd9\u79cd\u8026\u5408\u662f\u8be5\u6a21\u578b\u7684\u5b9a\u4e49\u6027\u7279\u5f81\uff0c\u4e5f\u662f\u5176\u4e30\u5bcc\u6d41\u4f53\u52a8\u529b\u5b66\u884c\u4e3a\u7684\u6839\u6e90\u3002\u8fd9\u8282\u8bfe\u7684\u76ee\u6807\uff0c\u5c31\u662f\u4ece\u7b2c\u4e00\u6027\u539f\u7406\u51fa\u53d1\uff0c\u63a8\u5bfc\u51fa\u63cf\u8ff0 \\(\\phi(\\vec{x}, t)\\) \u548c \\(\\vec{v}(\\vec{x}, t)\\) \u76f8\u4e92\u5f71\u54cd\u7684\u8026\u5408\u8fd0\u52a8\u65b9\u7a0b\u3002</p> <p></p>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#_2","title":"\u8026\u5408\u7684\u7269\u7406\u672c\u8d28\uff1a\u4e00\u4e2a\u52a8\u6001\u53cd\u9988\u56de\u8def","text":"<p>H\u6a21\u578b\u7684\u7ed3\u6784\u5e76\u975e\u7b80\u5355\u5730\u5c06\u4e24\u4e2a\u72ec\u7acb\u7cfb\u7edf\uff08\u7c92\u5b50\u4e0e\u6d41\u4f53\uff09\u8fdb\u884c\u53e0\u52a0\uff0c\u5b83\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u6df1\u523b\u7684\u7269\u7406\u53cd\u9988\u56de\u8def \u3002</p> <p>\u4e00\u65b9\u9762\uff0c\u6d41\u4f53\u901a\u8fc7\u5e73\u6d41 (Advection) \u6548\u5e94\u643a\u5e26\u60ac\u6d6e\u7c92\u5b50\u8fd0\u52a8 \u3002\u8fd9\u610f\u5473\u7740\u6d41\u4f53\u901f\u5ea6\u573a \\(\\vec{v}(\\vec{x}, t)\\) \u7684\u53d8\u5316\u4f1a\u76f4\u63a5\u5f71\u54cd\u7c92\u5b50\u5bc6\u5ea6\u573a \\(\\phi(\\vec{x}, t)\\) \u7684\u6f14\u5316\u3002\u8fd9\u4e2a\u6548\u5e94\u76f4\u89c2\u6613\u61c2\uff1a\u4f8b\u5982\uff0c\u6c34\u6d41\u4f1a\u5e26\u52a8\u6c34\u4e2d\u7684\u6c99\u7c92\u8fd0\u52a8\u3002\u56e0\u6b64\uff0c\u7c92\u5b50\u6d41 \\(\\vec{J}(\\vec{x}, t)\\) \u5c06\u5305\u542b\u4e00\u4e2a\u7531\u6d41\u4f53\u5e73\u6d41\u5f15\u8d77\u7684\u8d21\u732e \u3002</p> <p>\u7136\u800c\uff0c\u6839\u636e\u725b\u987f\u7b2c\u4e09\u5b9a\u5f8b\uff0c\u4f5c\u7528\u529b\u4e0e\u53cd\u4f5c\u7528\u529b\u603b\u662f\u6210\u5bf9\u51fa\u73b0\u7684\u3002\u5982\u679c\u6d41\u4f53\u5bf9\u7c92\u5b50\u65bd\u52a0\u4e86\u5e73\u6d41\u529b\uff0c\u90a3\u4e48\u7c92\u5b50\u4e5f\u5fc5\u7136\u5bf9\u6d41\u4f53\u65bd\u52a0\u4e00\u4e2a\u53cd\u4f5c\u7528\u529b\u3002\u8fd9\u4e2a\u53cd\u4f5c\u7528\u529b\u5e76\u975e\u4e00\u4e2a\u7b80\u5355\u7684\u5916\u90e8\u529b\uff0c\u800c\u5fc5\u987b\u6e90\u4e8e\u7c92\u5b50-\u6d41\u4f53\u6df7\u5408\u7269\u5185\u5728\u7684\u70ed\u529b\u5b66\u6027\u8d28 \u3002\u8fd9\u610f\u5473\u7740\uff0c\u63cf\u8ff0\u6d41\u4f53\u5185\u529b\u7684\u603b\u5e94\u529b\u5f20\u91cf \\(\\Sigma_{ij}\\) \uff08\u5728\u7b2c28\u8bb2\u4e2d\u5f15\u5165\uff0c\u7528\u4e8e\u63cf\u8ff0\u7c98\u6027\u548c\u538b\u5f3a\uff09\uff0c\u5fc5\u7136\u9700\u8981\u5305\u542b\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u7c92\u5b50\u6784\u578b \\(\\phi(\\vec{x}, t)\\) \u7684\u9644\u52a0\u9879\uff0c\u8bb0\u4e3a \\(\\Sigma_{ij}^\\phi\\) \u3002\u8fd9\u4e2a\u7531\u7c92\u5b50\u4ea7\u751f\u7684\u9644\u52a0\u5e94\u529b \\(\\Sigma_{ij}^\\phi\\) \u4f1a\u901a\u8fc7\u5176\u6563\u5ea6 \\(\\nabla \\cdot \\Sigma^\\phi\\) \u7684\u5f62\u5f0f\uff0c\u4f5c\u7528\u4e8e\u6d41\u4f53\uff0c\u4ece\u800c\u5f71\u54cd\u6d41\u4f53\u901f\u5ea6\u573a \\(\\vec{v}(\\vec{x}, t)\\) \u7684\u6f14\u5316 \u3002</p> <p>\u56e0\u6b64\uff0c\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u4efb\u52a1\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u63a8\u5bfc\u51fa\u8fd9\u4e2a\u5173\u952e\u7684\u8026\u5408\u9879 \\(\\Sigma_{ij}^\\phi\\) \u4ee5\u53ca\u63cf\u8ff0\u5e73\u6d41\u7684\u7c92\u5b50\u6d41\u9879\uff0c\u4ece\u800c\u95ed\u5408\u8fd9\u4e2a\u7c92\u5b50\u4e0e\u6d41\u4f53\u4e4b\u95f4\u7684\u52a8\u6001\u53cd\u9988\u56de\u8def\u3002\u76ee\u6807\u5e76\u975e\u4ec5\u4ec5\u63a8\u5bfc\u4e24\u4e2a\u72ec\u7acb\u7684\u65b9\u7a0b\uff0c\u800c\u662f\u5728\u63ed\u793a\u5b83\u4eec\u4e4b\u95f4\u76f8\u4e92\u4f5c\u7528\u7684\u6df1\u523b\u7269\u7406\u8054\u7cfb\u3002\u901a\u8fc7H\u6a21\u578b\u7684\u7814\u7a76\uff0c\u80fd\u591f\u66f4\u5168\u9762\u5730\u7406\u89e3\u590d\u6742\u6d41\u4f53-\u7c92\u5b50\u6df7\u5408\u7cfb\u7edf\u4e2d\u7684\u96c6\u4f53\u52a8\u529b\u5b66\u884c\u4e3a\u3002</p>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#1","title":"1. \u63a7\u5236\u65b9\u7a0b\uff1a\u4e24\u4e2a\u8026\u5408\u5b88\u6052\u573a\u7684\u6545\u4e8b","text":"<p>\u5728\u7b2c29\u8bb2\u7684\u7ed3\u5c3e\uff0c\u533a\u5206\u4e86\u7c92\u5b50\u5728\u9759\u6001\u80cc\u666f\u4e2d\u8fd0\u52a8\u7684\u201c\u5e72\u6027\u201d\u7cfb\u7edf\uff08\u5982B\u6a21\u578b\uff09\u548c\u60ac\u6d6e\u4e8e\u52a8\u6001\u6d41\u4f53\u4e2d\u7684\u201c\u6e7f\u6027\u201d\u7cfb\u7edf\u3002\u8fd9\u8282\u8bfe\u5c06\u4e3a\u8fd9\u79cd\u66f4\u590d\u6742\u7684\u201c\u6e7f\u6027\u201d\u7cfb\u7edf\u5efa\u7acb\u5176\u52a8\u529b\u5b66\u7684\u57fa\u672c\u65b9\u7a0b\u3002\u6574\u4e2a\u7cfb\u7edf\u7684\u884c\u4e3a\u7531\u4e24\u4e2a\u6838\u5fc3\u7684\u3001\u76f8\u4e92\u8026\u5408\u7684\u5b88\u6052\u573a\u5171\u540c\u4e3b\u5bb0\uff1a\u63cf\u8ff0\u6d41\u4f53\u8fd0\u52a8\u7684\u901f\u5ea6\u573a \\(\\vec{v}(\\vec{x}, t)\\) \u548c\u63cf\u8ff0\u60ac\u6d6e\u7c92\u5b50\u5206\u5e03\u7684\u5bc6\u5ea6\u573a \\(\\phi(\\vec{x}, t)\\)\u3002</p>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#11-","title":"1.1 \u6d41\u4f53\u573a\uff1a\u968f\u673a\u3001\u4e0d\u53ef\u538b\u7f29\u7684\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b","text":"<p>\u63cf\u8ff0\u6d41\u4f53\u901f\u5ea6\u573a \\(\\vec{v}(\\vec{x}, t)\\) \u7684\u57fa\u672c\u65b9\u7a0b\u662f\u52a8\u91cf\u5b88\u6052\u5b9a\u5f8b\u3002\u6b63\u5982\u5728\u7b2c27\u8bb2\u548c\u7b2c28\u8bb2\u4e2d\u4ece\u7b2c\u4e00\u6027\u539f\u7406\u5efa\u7acb\u7684\u90a3\u6837\uff0c\u8be5\u5b9a\u5f8b\u5728\u6d41\u4f53\u5fae\u5143\u4e0a\u7684\u4f53\u73b0\uff08\u5373\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b\uff09\u4e3a\uff1a</p> \\[ \\rho \\frac{D\\vec{v}}{Dt} = \\nabla \\cdot\\Sigma_{ij} \\] <p>\u5176\u4e2d\uff0c\\(\\rho\\) \u662f\u6d41\u4f53\u7684\uff08\u5e38\u6570\uff09\u8d28\u91cf\u5bc6\u5ea6\u3002</p> <ul> <li> <p>\u7269\u8d28\u5bfc\u6570 (Material Derivative) \uff1a\u5de6\u4fa7\u7684 \\(\\frac{D\\vec{v}}{Dt}\\) \u662f\u8fde\u63a5\u6b27\u62c9\u89c6\u89d2\u4e0e\u62c9\u683c\u6717\u65e5\u89c6\u89d2\u7684\u5173\u952e\uff0c\u5b83\u63cf\u8ff0\u4e86\u8ddf\u968f\u4e00\u4e2a\u6d41\u4f53\u5143\u8fd0\u52a8\u65f6\u6240\u89c2\u5bdf\u5230\u7684\u52a0\u901f\u5ea6\u3002</p> \\[ \\frac{D\\vec{v}}{Dt} = \\underbrace{\\frac{\\partial \\vec{v}}{\\partial t}}_{\\text{\u5c40\u57df\u52a0\u901f\u5ea6}} + \\underbrace{(\\vec{v} \\cdot \\nabla)\\vec{v}}_{\\text{\u5bf9\u6d41\u52a0\u901f\u5ea6}} \\] </li> </ul> <p>\\(\\frac{\\partial \\vec{v}}{\\partial t}\\) \u662f\u5728\u7a7a\u95f4\u56fa\u5b9a\u70b9\u4e0a\u89c2\u6d4b\u5230\u7684\u901f\u5ea6\u968f\u65f6\u95f4\u7684\u53d8\u5316\uff0c\u800c \u975e\u7ebf\u6027\u5bf9\u6d41\u9879 \\((\\vec{v} \\cdot \\nabla)\\vec{v}\\) \u5219\u662f\u7531\u4e8e\u6d41\u4f53\u5143\u88ab\u81ea\u8eab\u643a\u5e26\u5230\u901f\u5ea6\u4e0d\u540c\u7684\u65b0\u4f4d\u7f6e\u800c\u4ea7\u751f\u7684\u901f\u5ea6\u53d8\u5316\uff0c\u5b83\u662f\u6d41\u4f53\u529b\u5b66\u4e2d\u6e4d\u6d41\u7b49\u590d\u6742\u73b0\u8c61\u7684\u6839\u6e90\u3002</p> <ul> <li> <p>\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6 (Incompressibility Condition) \uff1a\u5bf9\u4e8e\u6c34\u8fd9\u6837\u7684\u6db2\u4f53\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u8fd1\u4f3c\u4e3a\u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u3002\u8fd9\u4e00\u7269\u7406\u6761\u4ef6\u5728\u6570\u5b66\u4e0a\u8868\u73b0\u4e3a\u4e00\u4e2a\u5bf9\u901f\u5ea6\u573a\u7684\u8fd0\u52a8\u5b66\u7ea6\u675f\uff0c\u5373\u5176\u6563\u5ea6\u5904\u5904\u4e3a\u96f6\uff1a     $$     \\nabla \\cdot \\vec{v} = 0     $$     \u8fd9\u4e2a\u6761\u4ef6\u610f\u5473\u7740\u4efb\u4f55\u4e00\u4e2a\u6d41\u4f53\u5143\u7684\u4f53\u79ef\u5728\u8fd0\u52a8\u8fc7\u7a0b\u4e2d\u90fd\u4fdd\u6301\u4e0d\u53d8\uff0c\u5b83\u5c06\u6781\u5927\u5730\u7b80\u5316\u5e94\u529b\u5f20\u91cf\u7684\u5f62\u5f0f\u3002</p> </li> <li> <p>\u5e94\u529b\u5f20\u91cf \\(\\Sigma_{ij}\\) \u7684\u5206\u89e3\uff1a\u65b9\u7a0b\u7684\u53f3\u4fa7 \\(\\nabla \\cdot \\Sigma_{ij}\\) \u4ee3\u8868\u4f5c\u7528\u5728\u6d41\u4f53\u5143\u4e0a\u7684\u51c0\u8868\u9762\u529b\u5bc6\u5ea6\u3002\u603b\u7684\u5e94\u529b\u5f20\u91cf \\(\\Sigma_{ij}\\) \u53ef\u4ee5\u88ab\u5206\u89e3\u4e3a\u51e0\u4e2a\u7269\u7406\u6765\u6e90\u622a\u7136\u4e0d\u540c\u7684\u90e8\u5206\uff0c\u8fd9\u76f4\u63a5\u6765\u6e90\u4e8e\u7b2c28\u8bb2\u7684\u63a8\u5bfc\uff1a     $$     \\Sigma_{ij} = -p\\delta_{ij} + \\eta(\\partial_i v_j + \\partial_j v_i) + \\Sigma^\\phi_{ij} + \\sigma_{ij}     $$</p> <ol> <li>\u5404\u5411\u540c\u6027\u538b\u529b (\\(-p\\delta_{ij}\\))\uff1a\u8fd9\u662f\u6d41\u4f53\u7684\u53ef\u9006\u90e8\u5206\uff0c\u4ee3\u8868\u70ed\u529b\u5b66\u538b\u529b\uff0c\u662f\u7406\u60f3\u6d41\u4f53\uff08\u6b27\u62c9\u65b9\u7a0b\uff09\u4e2d\u552f\u4e00\u5b58\u5728\u7684\u5185\u5e94\u529b\u3002</li> <li>\u7c98\u6027\u5e94\u529b (\\(\\eta(\\partial_i v_j + \\partial_j v_i)\\))\uff1a\u8fd9\u662f\u6d41\u4f53\u7684\u4e0d\u53ef\u9006\u8017\u6563\u90e8\u5206\uff0c\u4ee3\u8868\u5185\u6469\u64e6\u529b\u3002\\(\\eta\\) \u662f\u526a\u5207\u7c98\u6ede\u7cfb\u6570\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u4e0d\u53ef\u538b\u7f29\u6d41\uff08\\(\\nabla \\cdot \\vec{v} = 0\\)\uff09\u6761\u4ef6\u4e0b\u7684\u7b80\u5316\u5f62\u5f0f\u3002</li> <li>\u968f\u673a\u5e94\u529b (\\(\\sigma_{ij}\\))\uff1a\u8fd9\u662f\u52a8\u91cf\u65b9\u7a0b\u7684\u6717\u4e4b\u4e07\u566a\u58f0\u9879\uff0c\u662f\u6da8\u843d\u7684\u6765\u6e90\u3002\u5b83\u4ee3\u8868\u4e86\u6765\u81ea\u6d41\u4f53\u5206\u5b50\u81ea\u8eab\u70ed\u8fd0\u52a8\u6240\u4ea7\u751f\u7684\u968f\u673a\u52a8\u91cf\u4ea4\u6362\u3002\u6839\u636e\u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff0c\u5176\u5f3a\u5ea6\u4e0e\u8017\u6563\uff08\u7c98\u6027\uff09\u548c\u6e29\u5ea6\u4e25\u683c\u76f8\u5173\uff0c\u786e\u4fdd\u7cfb\u7edf\u5728\u6ca1\u6709\u5916\u529b\u65f6\u80fd\u8fbe\u5230\u6b63\u786e\u7684\u73bb\u5c14\u5179\u66fc\u5e73\u8861\u6001\u3002</li> <li>\u7c92\u5b50\u8bf1\u5bfc\u5e94\u529b (\\(\\Sigma^\\phi_{ij}\\))\uff1a\u8fd9\u662f\u8fd9\u8282\u8bfe\u9700\u8981\u5bfb\u627e\u7684\u5173\u952e\u8026\u5408\u9879\u3002\u5b83\u63cf\u8ff0\u4e86\u60ac\u6d6e\u7c92\u5b50\u5bf9\u6d41\u4f53\u65bd\u52a0\u7684\u53cd\u4f5c\u7528\u529b\uff0c\u662f\u8fde\u63a5\u4e24\u4e2a\u573a\u7684\u6865\u6881\u3002\u5176\u63a8\u5bfc\u662f\u8fd9\u8282\u8bfe\u7684\u4e2d\u5fc3\u4efb\u52a1\u4e4b\u4e00\u3002</li> </ol> </li> </ul>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#12-","title":"1.2 \u7c92\u5b50\u573a\uff1a\u8026\u5408\u7684\u5bf9\u6d41-\u6269\u6563\u65b9\u7a0b","text":"<p>\u5bf9\u4e8e\u7c92\u5b50\u5bc6\u5ea6\u573a \\(\\phi(\\vec{x}, t)\\) \u7684\u6f14\u5316\uff0c\u4e0e\u7b2c29\u8bb2\u4e2d\u7684B\u6a21\u578b\u5b8c\u5168\u4e00\u6837\uff0c\u7531\u4e8e\u7c92\u5b50\u6570\u5b88\u6052\uff0c\u5176\u52a8\u529b\u5b66\u5fc5\u987b\u7531\u8fde\u7eed\u6027\u65b9\u7a0b\u51b3\u5b9a\uff1a</p> \\[ \\frac{\\partial \\phi}{\\partial t} = -\\nabla \\cdot \\vec{J} \\] <p>\u5728\u201c\u6e7f\u6027\u201d\u7cfb\u7edf\u4e2d\uff0c\u7c92\u5b50\u6d41 \\(\\vec{J}\\) \u7531\u4e24\u4e2a\u7269\u7406\u4e0a\u622a\u7136\u4e0d\u540c\u7684\u8fc7\u7a0b\u8d21\u732e\uff1a</p> \\[ \\vec{J} = \\vec{J}_{\\text{conv}} + \\vec{J}_{\\text{diff}} \\] <ul> <li> <p>\u5bf9\u6d41 (\\(\\vec{J}_{\\text{conv}} = \\phi\\vec{v}\\)) \uff1a\u8fd9\u90e8\u5206\u63cf\u8ff0\u4e86\u7c92\u5b50\u88ab\u80cc\u666f\u6d41\u4f53 \\(\\vec{v}\\) \u88ab\u52a8\u643a\u5e26\uff08\u5e73\u6d41\uff09\u7684\u8f93\u8fd0\u8fc7\u7a0b\u3002\u8fd9\u662f\u4e0e\u201c\u5e72\u6027\u201dB\u6a21\u578b\u76f8\u6bd4\u7684\u5168\u65b0\u9879\uff0c\u5b83\u6784\u6210\u4e86\u8026\u5408\u53cd\u9988\u56de\u8def\u7684\u7b2c\u4e00\u73af\uff1a\u6d41\u4f53\u573a \\(\\vec{v}\\) \u9a71\u52a8\u7c92\u5b50\u573a \\(\\phi\\) \u7684\u8fd0\u52a8\u3002</p> </li> <li> <p>\u6269\u6563\u6d41 (\\(\\vec{J}_{\\text{diff}}\\)) \uff1a\u8fd9\u90e8\u5206\u63cf\u8ff0\u4e86\u7c92\u5b50\u76f8\u5bf9\u4e8e\u5468\u56f4\u6d41\u4f53\u7684\u3001\u7531\u70ed\u529b\u5b66\u529b\u9a71\u52a8\u7684\u8fd0\u52a8\u3002\u5176\u5f62\u5f0f\u4e0e\u201c\u5e72\u6027\u201d\u7684B\u6a21\u578b\u5b8c\u5168\u76f8\u540c\uff0c\u90fd\u662f\u7531\u7b2c24\u8bb2\u548c\u7b2c29\u8bb2\u4e2d\u5efa\u7acb\u7684\u6602\u8428\u683c\u7ebf\u6027\u5173\u7cfb\u548c\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7ed9\u51fa\u7684\uff1a     $$     \\vec{J}_{\\text{diff}} = -L\\nabla\\mu + \\vec{\\xi}_J     $$     \u5176\u4e2d\uff0c\u5316\u5b66\u52bf \\(\\mu = \\frac{\\delta F}{\\delta \\phi}\\) \u662f\u9a71\u52a8\u6269\u6563\u7684\u70ed\u529b\u5b66\u529b \uff0c\\(L\\) \u662f\u6602\u8428\u683c\u52a8\u529b\u5b66\u7cfb\u6570\uff08\u8fc1\u79fb\u7387\uff09\uff0c\u800c \\(\\vec{\\xi}_J\\) \u662f\u4e0e\u6269\u6563\u8fc7\u7a0b\u76f8\u5173\u7684\u968f\u673a\u566a\u58f0\u6d41\uff0c\u5176\u5173\u8054\u5f3a\u5ea6\u7531 \\(L\\) \u548c\u6e29\u5ea6 \\(T\\) \u51b3\u5b9a\u3002</p> </li> </ul> <p>\u5c06\u8fd9\u4e24\u90e8\u5206\u7ec4\u5408\uff0c\u4fbf\u6784\u6210\u4e86\u7c92\u5b50\u5bc6\u5ea6\u573a\u7684\u5b8c\u6574\u52a8\u529b\u5b66\u65b9\u7a0b\uff0c\u4e00\u4e2a\u542b\u566a\u7684\u5bf9\u6d41-\u6269\u6563\u65b9\u7a0b\uff1a $$ \\frac{\\partial \\phi}{\\partial t} + \\nabla \\cdot (\\phi \\vec{v}) = \\nabla \\cdot (L \\nabla \\mu) - \\nabla \\cdot \\vec{\\xi}_J $$ \u5728\u65b9\u7a0b\u7684\u6700\u7ec8\u5f62\u5f0f\u4e2d\uff0c\u5bf9\u6d41\u9879\u88ab\u79fb\u5230\u4e86\u5de6\u4fa7\u3002\\(\\partial_t \\phi + \\nabla \\cdot (\\phi \\vec{v})\\) \u8fd9\u4e00\u7ec4\u5408\u6e05\u6670\u5730\u5c55\u793a\u4e86\u5bc6\u5ea6\u573a \\(\\phi\\) \u662f\u5982\u4f55\u88ab\u901f\u5ea6\u573a \\(\\vec{v}\\) \"\u643a\u5e26\"\u548c\u8f93\u8fd0\u7684\uff0c\u8fd9\u5728\u6570\u5b66\u7ed3\u6784\u4e0a\u4e0e\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u4e2d\u7684\u7269\u8d28\u5bfc\u6570\u9879\u9065\u76f8\u547c\u5e94\u3002</p> <p>\u81f3\u6b64\uff0cH\u6a21\u578b\u7684\u4e24\u4e2a\u57fa\u672c\u63a7\u5236\u65b9\u7a0b\u7684\u5f62\u5f0f\u5df2\u7ecf\u786e\u7acb\u3002\u5b83\u4eec\u6e05\u6670\u5730\u5c55\u793a\u4e86\u4e00\u4e2a\u5355\u5411\u7684\u8026\u5408\u5173\u7cfb\uff1a\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u4e2d\u7684\u901f\u5ea6\u573a \\(\\vec{v}\\)\uff0c\u901a\u8fc7\u5bf9\u6d41\u9879 \\(\\phi\\vec{v}\\) \u76f4\u63a5\u5f71\u54cd\u4e86\u7c92\u5b50\u5bc6\u5ea6\u573a \\(\\phi\\) \u7684\u65f6\u7a7a\u6f14\u5316\u3002</p> <p>\u7136\u800c\uff0c\u8fd9\u4e2a\u7406\u8bba\u6846\u67b6\u76ee\u524d\u662f\u4e0d\u5b8c\u5907\u7684\uff0c\u56e0\u4e3a\u53cd\u9988\u56de\u8def\u5c1a\u672a\u95ed\u5408\u3002\u6839\u636e\u725b\u987f\u7b2c\u4e09\u5b9a\u5f8b\uff0c\u5982\u679c\u6d41\u4f53\u80fd\u63a8\u52a8\u7c92\u5b50\uff0c\u7c92\u5b50\u4e5f\u5fc5\u987b\u5bf9\u6d41\u4f53\u65bd\u52a0\u53cd\u4f5c\u7528\u529b\u3002\u8fd9\u4e2a\u53cd\u4f5c\u7528\u529b\u9690\u85cf\u5728\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u4e2d\u90a3\u4e2a\u5c1a\u672a\u786e\u5b9a\u7684\u7c92\u5b50\u8bf1\u5bfc\u5e94\u529b\u5f20\u91cf \\(\\Sigma^\\phi_{ij}\\) \u4e4b\u4e2d\u3002\u5728\u5f53\u524d\u7684\u5f62\u5f0f\u4e0b\uff0c\u7c92\u5b50\u573a \\(\\phi\\) \u7684\u4efb\u4f55\u53d8\u5316\u90fd\u4e0d\u4f1a\u5bf9\u6d41\u4f53\u573a \\(\\vec{v}\\) \u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\uff0c\u8fd9\u5728\u7269\u7406\u4e0a\u662f\u4e0d\u53ef\u80fd\u7684\u3002</p> <p>\u56e0\u6b64\uff0c\u63a5\u4e0b\u6765\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u5c31\u662f\u5229\u7528\u70ed\u529b\u5b66\u548c\u5bf9\u79f0\u6027\u539f\u7406\uff0c\u63a8\u5bfc\u51fa\u8fd9\u4e2a\u5173\u952e\u7684\u8026\u5408\u9879 \\(\\Sigma^\\phi_{ij}\\) \u7684\u5177\u4f53\u8868\u8fbe\u5f0f\uff0c\u4ece\u800c\u95ed\u5408\u8fd9\u4e2a\u53cd\u9988\u56de\u8def\uff0c\u6784\u5efa\u51fa\u5b8c\u6574\u4e14\u81ea\u6d3d\u7684H\u6a21\u578b\u3002</p>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#2-sigmaphi","title":"2. \u5173\u952e\u7684\u8026\u5408\uff1a\u4ece\u70ed\u529b\u5b66\u63a8\u5bfc\u5e94\u529b\u5f20\u91cf \\(\\Sigma^\\phi\\)","text":"<p>\u7c92\u5b50\u5982\u4f55\u5bf9\u6d41\u4f53\u65bd\u52a0\u53cd\u4f5c\u7528\u529b\uff1f\u8fd9\u4e2a\u7269\u7406\u8fc7\u7a0b\u5728\u6570\u5b66\u4e0a\u88ab\u5c01\u88c5\u5728\u7c92\u5b50\u8bf1\u5bfc\u5e94\u529b\u5f20\u91cf \\(\\Sigma^\\phi\\) \u4e2d\u3002\u8fd9\u5c0f\u8282\u5c06\u901a\u8fc7\u8fde\u63a5\u7c92\u5b50\u7cfb\u7edf\u7684\u70ed\u529b\u5b66\u4e0e\u6d41\u4f53\u529b\u5b66 \uff0c\u4e3a\u8fd9\u4e2a\u5173\u952e\u7684\u8026\u5408\u9879\u627e\u5230\u5176\u7cbe\u786e\u7684\u8868\u8fbe\u5f0f\u3002\u63a8\u5bfc\u7684\u5de7\u5999\u4e4b\u5904\u5728\u4e8e\u5e94\u7528\u865a\u529f\u539f\u7406 (Principle of Virtual Work) \uff0c\u5b83\u65ad\u8a00\u4e00\u4e2a\u7cfb\u7edf\u5728\u5fae\u5c0f\u865a\u4f4d\u79fb\u4e0b\uff0c\u5916\u529b\u6240\u505a\u7684\u529f\u7b49\u4e8e\u5176\u81ea\u7531\u80fd\u7684\u53d8\u5316\u3002</p> <p>\u865a\u529f (Virtual Work) \u4e0d\u662f\u771f\u5b9e\u53d1\u751f\u7684\u529f\u3002\u5b83\u662f\u4e00\u4e2a\u5728\u201c\u601d\u60f3\u5b9e\u9a8c\u201d\u4e2d\u8ba1\u7b97\u51fa\u6765\u7684\u529f\u3002</p> <p>\u60f3\u8c61\u4e00\u4e2a\u5904\u4e8e\u9759\u6b62\u5e73\u8861 (static equilibrium) \u72b6\u6001\u7684\u7cfb\u7edf\uff0c\u6bd4\u5982\u4e00\u5757\u77f3\u5934\u7a33\u7a33\u5730\u653e\u5728\u5730\u4e0a\uff0c\u6216\u8005\u4e00\u4e2a\u5929\u5e73\u4e24\u7aef\u5e73\u8861\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5728\u8111\u6d77\u91cc\u5bf9\u8fd9\u4e2a\u7cfb\u7edf\u8fdb\u884c\u4e00\u4e2a\u865a\u4f4d\u79fb (Virtual Displacement) \u3002</p> <p>\u8fd9\u4e2a\u201c\u865a\u4f4d\u79fb\u201d\u6709\u4e09\u4e2a\u5173\u952e\u7279\u5f81\uff1a\u5047\u60f3\u7684 (Hypothetical) \u3001\u65e0\u7a77\u5c0f\u7684 (Infinitesimal) \u3001\u77ac\u65f6\u7684 (Instantaneous) \uff0c\u4f5c\u7528\u5728\u7cfb\u7edf\u4e0a\u7684\u6240\u6709\u529b\u6240\u505a\u7684\u529f\u7684\u603b\u548c\u3002</p> <p>\u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5904\u4e8e\u9759\u529b\u5e73\u8861\u72b6\u6001\u7684\u7cfb\u7edf\uff0c\u6240\u6709\u5916\u529b\u4f5c\u7528\u4e0b\u6240\u4ea7\u751f\u7684\u603b\u865a\u529f\u4e3a\u96f6\u3002</p> <p>\u6570\u5b66\u4e0a\u8868\u793a\u4e3a\uff1a</p> \\[\\delta W = \\sum_i \\vec{F}_i \\cdot \\delta\\vec{r}_i = 0\\] <p>\u5176\u4e2d \\(\\delta W\\) \u662f\u603b\u865a\u529f\uff0c\\(\\vec{F}_i\\) \u662f\u4f5c\u7528\u5728\u8d28\u70b9 \\(i\\) \u4e0a\u7684\u529b\uff0c\\(\\delta\\vec{r}_i\\) \u662f\u8d28\u70b9 \\(i\\) \u7684\u865a\u4f4d\u79fb\u3002</p> <p>\u5b83\u5141\u8bb8\u6211\u4eec\u53ea\u5206\u6790\u529b\u548c\u4f4d\u79fb\uff0c\u800c\u5b8c\u5168\u5ffd\u7565\u90a3\u4e9b\u6211\u4eec\u4e0d\u5173\u5fc3\u7684\u3001\u590d\u6742\u7684\u5185\u90e8\u7ea6\u675f\u529b\uff08\u6bd4\u5982\u7ef3\u5b50\u7684\u5f20\u529b\u3001\u63a5\u89e6\u9762\u7684\u652f\u6301\u529b\u7b49\uff09\uff0c\u8fd9\u4e9b\u7ea6\u675f\u529b\u5728\u865a\u4f4d\u79fb\u4e2d\u901a\u5e38\u4e0d\u505a\u529f\u6216\u8005\u5176\u505a\u7684\u529f\u4f1a\u76f8\u4e92\u62b5\u6d88\u3002</p>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#21-fphi","title":"2.1 \u70ed\u529b\u5b66\u9a71\u52a8\u529b\uff1a\u81ea\u7531\u80fd\u6cdb\u51fd \\(F[\\phi]\\)","text":"<p>\u8981\u7406\u89e3\u7c92\u5b50\u7cfb\u7edf\u7684\u884c\u4e3a\uff0c\u5176\u51fa\u53d1\u70b9\u5fc5\u987b\u662f\u63cf\u8ff0\u5176\u5e73\u8861\u6001\u6027\u8d28\u7684\u81ea\u7531\u80fd\u6cdb\u51fd \\(F[\\phi]\\) \u3002\u8fd9\u4e0e\u5728\u7b2c25\u8bb2\u548c\u7b2c29\u8bb2\u4e2d\u5bf9\u6a21\u578bA\u548c\u6a21\u578bB\u7684\u5206\u6790\u4e00\u8109\u76f8\u627f\u3002\u81ea\u7531\u80fd\u662f\u9a71\u52a8\u7cfb\u7edf\u6f14\u5316\u7684\u201c\u52bf\u80fd\u201d\uff0c\u5176\u5177\u4f53\u5f62\u5f0f\u4e3a\u7ecf\u5178\u7684Ginzburg-Landau\uff08\u6216Cahn-Hilliard\uff09\u6cdb\u51fd\uff1a</p> \\[ F[\\phi] = \\int d^3x \\left[ f(\\phi) + \\frac{\\kappa}{2}(\\nabla\\phi)^2 \\right] \\] <ul> <li> <p>\u4f53\u81ea\u7531\u80fd\u5bc6\u5ea6 (\\(f(\\phi)\\)) \uff1a\u8fd9\u4e00\u9879\u63cf\u8ff0\u4e86\u5747\u5300\u7cfb\u7edf\u4e2d\u5355\u4f4d\u4f53\u79ef\u7684\u81ea\u7531\u80fd\uff0c\u5b83\u7531\u71b5\u7684\u8d21\u732e\u548c\u7c92\u5b50\u95f4\u5e73\u5747\u573a\u76f8\u4e92\u4f5c\u7528\u5171\u540c\u51b3\u5b9a\u3002\u5bf9\u4e8e\u4f1a\u53d1\u751f\u76f8\u5206\u79bb\u7684\u7cfb\u7edf\uff0c\\(f(\\phi)\\) \u901a\u5e38\u5177\u6709\u53cc\u52bf\u9631\u7ed3\u6784\u3002</p> </li> <li> <p>\u68af\u5ea6\u80fd\u91cf (\\(\\frac{\\kappa}{2}(\\nabla\\phi)^2\\)) \uff1a\u8fd9\u4e00\u9879\u662f\u5bf9\u6d53\u5ea6\u68af\u5ea6\u7684\u80fd\u91cf\u60e9\u7f5a\uff0c\u5176\u4e2d\u7cfb\u6570 \\(\\kappa &gt; 0\\)\u3002\u5b83\u4f7f\u5f97\u5f62\u6210\u9661\u5ced\u7684\u6d53\u5ea6\u68af\u5ea6\uff08\u5373\u76f8\u754c\u9762\uff09\u9700\u8981\u4ed8\u51fa\u80fd\u91cf\u4ee3\u4ef7\uff0c\u8fd9\u6b63\u662f\u8868\u9762\u5f20\u529b\u7684\u5fae\u89c2\u6765\u6e90\u3002</p> </li> </ul> <p>\u6709\u4e86\u81ea\u7531\u80fd\u6cdb\u51fd\uff0c\u9a71\u52a8\u7c92\u5b50\u6269\u6563\u7684\u5316\u5b66\u52bf \\(\\mu\\) \u5c31\u53ef\u4ee5\u901a\u8fc7\u6cdb\u51fd\u53d8\u5206\u5bfc\u6570\u6765\u5b9a\u4e49\uff0c\u5b83\u4ee3\u8868\u4e86\u589e\u52a0\u4e00\u4e2a\u7c92\u5b50\u5230\u7cfb\u7edf\u4e2d\u67d0\u5904\u6240\u5f15\u8d77\u7684\u81ea\u7531\u80fd\u53d8\u5316\uff1a</p> \\[ \\mu = \\frac{\\delta F}{\\delta \\phi} = \\frac{\\partial f}{\\partial \\phi} - \\kappa \\nabla^2 \\phi \\] <p>\u8fd9\u4e2a\u5316\u5b66\u52bf \\(\\mu\\) \u5c31\u662f\u9a71\u52a8\u7c92\u5b50\u6269\u6563\u7684\u6709\u6548\u70ed\u529b\u5b66\u529b\u3002</p>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#22","title":"2.2 \u901a\u8fc7\u865a\u529f\u539f\u7406\u7684\u63a8\u5bfc","text":"<p>\u73b0\u5728\uff0c\u4e25\u683c\u6309\u7167\u8bb2\u5ea7\u4e2d\u7684\u63a8\u5bfc\u601d\u8def\uff0c\u6765\u627e\u51fa \\(\\Sigma^\\phi\\) \u548c \\(\\mu\\) \u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <p>\u7b2c\u4e00\u6b65\uff1a\u4ece\u529b\u5b66\u89d2\u5ea6\u8ba1\u7b97\u81ea\u7531\u80fd\u53d8\u5316</p> <p>\u8003\u8651\u4e00\u4e2a\u5fae\u5c0f\u7684\u3001\u4e0d\u53ef\u538b\u7f29\u7684 (\\(\\nabla \\cdot \\vec{u} = 0\\)) \u6d41\u4f53\u865a\u4f4d\u79fb\u573a \\(\\vec{u}(\\vec{x})\\)\u3002\u5728\u8fd9\u4e2a\u5f62\u53d8\u8fc7\u7a0b\u4e2d\uff0c\u7c92\u5b50\u5e94\u529b\u5f20\u91cf \\(\\Sigma^\\phi\\) \u5bf9\u6d41\u4f53\u6240\u505a\u7684\u529f\uff0c\u7b49\u4e8e\u7cfb\u7edf\u81ea\u7531\u80fd\u7684\u53d8\u5316\u91cf \\(\\delta F\\)\u3002\u8fd9\u4e2a\u529f\u7531\u5e94\u529b\u4e0e\u5e94\u53d8\u7387\uff08\u6b64\u5904\u4e3a\u4f4d\u79fb\u68af\u5ea6 \\(\\partial_i u_j\\)\uff09\u7684\u4e58\u79ef\u5728\u6574\u4e2a\u4f53\u79ef\u4e0a\u79ef\u5206\u5f97\u5230\uff1a</p> \\[ \\delta F_{\\text{mech}} = \\int d^3x \\sum_{i,j} \\Sigma^\\phi_{ij} (\\partial_i u_j) \\] <p>\u7b2c\u4e8c\u6b65\uff1a\u4ece\u70ed\u529b\u5b66\u89d2\u5ea6\u8ba1\u7b97\u81ea\u7531\u80fd\u53d8\u5316</p> <p>\u540c\u4e00\u4e2a\u6d41\u4f53\u4f4d\u79fb \\(\\vec{u}\\) \u5fc5\u7136\u4f1a\u5e73\u6d41\uff08advect\uff09\u7c92\u5b50\u5bc6\u5ea6\u573a\u3002\u4f4d\u79fb\u540e \\(\\vec{x}\\) \u70b9\u7684\u65b0\u5bc6\u5ea6 \\(\\phi'(\\vec{x})\\) \u6765\u81ea\u4e8e\u4f4d\u79fb\u524d \\(\\vec{x}-\\vec{u}\\) \u70b9\u7684\u5bc6\u5ea6\uff0c\u5373 \\(\\phi'(\\vec{x}) = \\phi(\\vec{x}-\\vec{u})\\)\u3002\u5bf9\u4e8e\u5fae\u5c0f\u4f4d\u79fb \\(\\vec{u}\\)\uff0c\u5bc6\u5ea6\u7684\u5c40\u57df\u53d8\u5316\u91cf\u4e3a \\(\\delta\\phi = \\phi'(\\vec{x}) - \\phi(\\vec{x}) \\approx -\\vec{u} \\cdot \\nabla\\phi\\)\u3002\u8fd9\u4e2a\u7531\u7269\u8d28\u91cd\u65b0\u5206\u5e03\u5f15\u8d77\u7684\u81ea\u7531\u80fd\u53d8\u5316\uff0c\u53ef\u4ee5\u4ece\u70ed\u529b\u5b66\u89d2\u5ea6\u8ba1\u7b97\uff1a</p> \\[ \\delta F_{\\text{therm}} = \\int d^3x \\frac{\\delta F}{\\delta \\phi} \\delta \\phi = \\int d^3x \\mu (-\\vec{u} \\cdot \\nabla \\phi) \\text{ } \\] <p>\u7b2c\u4e09\u6b65\uff1a\u4ee4\u4e24\u79cd\u8868\u8fbe\u76f8\u7b49</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u7531\u4fdd\u5b88\u529b\uff08\u53ef\u4ee5\u7531\u52bf\u80fd\u51fd\u6570\u5bfc\u51fa\u7684\u529b\uff09\u4e3b\u5bfc\u7684\u7cfb\u7edf\uff1a</p> <ol> <li>\u529b\u5b66\u529f (\\(\\delta F_{mech}\\)) \uff1a\u662f\u7cfb\u7edf\u5185\u90e8\u7684\u5e94\u529b\uff08\u529b\uff09\u5728\u865a\u4f4d\u79fb\uff08\u5f62\u53d8\uff09\u8fc7\u7a0b\u4e2d\u6240\u505a\u7684\u529f\u3002\u5b83\u4ee3\u8868\u4e86\u80fd\u91cf\u7684\u8f93\u5165\u6216\u4ea4\u6362\u3002</li> <li>\u81ea\u7531\u80fd\u53d8\u5316 (\\(\\delta F_{therm}\\)) \uff1a\u662f\u7cfb\u7edf\u5185\u90e8\u50a8\u5b58\u7684\u52bf\u80fd\uff08\u5728\u8fd9\u91cc\u662f\u70ed\u529b\u5b66\u81ea\u7531\u80fd\uff09\u7684\u53d8\u5316\u3002\u5b83\u4ee3\u8868\u4e86\u7cfb\u7edf\u5185\u90e8\u80fd\u91cf\u72b6\u6001\u7684\u6539\u53d8\u3002</li> </ol> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u865a\u529f\u539f\u7406\u5b9e\u9645\u4e0a\u662f\u529f-\u80fd\u539f\u7406\u7684\u4f53\u73b0\uff1a\u5728\u4e00\u4e2a\u53ef\u9006\u7684\u3001\u65e0\u7a77\u5c0f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u7cfb\u7edf\u505a\u7684\u529f\u5fc5\u987b\u7b49\u4e8e\u7cfb\u7edf\u5185\u90e8\u50a8\u5b58\u7684\u80fd\u91cf\u7684\u53d8\u5316\u3002</p> <p>\u8fd9\u5c31\u50cf\u4f60\u7f13\u6162\u5730\u538b\u7f29\u4e00\u6839\u5f39\u7c27\uff1a\u4f60\u5bf9\u5f39\u7c27\u505a\u7684\u673a\u68b0\u529f (\\(\\delta W_{mech}\\))\uff0c\u88ab\u5b8c\u5168\u8f6c\u5316\u5e76\u50a8\u5b58\u4e3a\u5f39\u7c27\u7684\u5f39\u6027\u52bf\u80fd (\\(\\delta U_{potential}\\))\u3002\u4e24\u8005\u5728\u6570\u503c\u4e0a\u5fc5\u987b\u76f8\u7b49\uff1a\\(\\delta W_{mech} = \\delta U_{potential}\\)\u3002</p> <p>\u56e0\u6b64\uff0c\u6839\u636e\u865a\u529f\u539f\u7406\uff0c\u8fd9\u4e24\u79cd\u4ece\u4e0d\u540c\u89d2\u5ea6\uff08\u529b\u5b66 vs. \u70ed\u529b\u5b66\uff09\u8ba1\u7b97\u7684\u81ea\u7531\u80fd\u53d8\u5316\u5fc5\u987b\u76f8\u7b49\uff1a</p> \\[ \\int d^3x \\sum_{i,j} \\Sigma^\\phi_{ij} (\\partial_i u_j) = -\\int d^3x \\mu (\\vec{u} \\cdot \\nabla \\phi) \\] <p>\u7b2c\u56db\u6b65\uff1a\u5206\u90e8\u79ef\u5206\u4ee5\u5206\u79bb \\(\\vec{u}\\)</p> <p>\u4e3a\u4e86\u4ece\u79ef\u5206\u4e2d\u63d0\u53d6\u51fa\u666e\u904d\u6210\u7acb\u7684\u5173\u7cfb\uff0c\u9700\u8981\u901a\u8fc7\u5206\u90e8\u79ef\u5206\u5c06\u5bfc\u6570\u4ece\u4efb\u610f\u7684\u4f4d\u79fb\u573a \\(\\vec{u}\\) \u4e0a\u79fb\u5f00\u3002</p> <ul> <li> <p>\u5de6\u4fa7\u79ef\u5206\uff1a\u5229\u7528\u5206\u90e8\u79ef\u5206\uff08\u5e76\u5047\u8bbe\u8fb9\u754c\u9879\u4e3a\u96f6\uff09\uff0c\u5bfc\u6570\u4ece \\(u_j\\) \u8f6c\u79fb\u5230 \\(\\Sigma^\\phi_{ij}\\)\uff1a</p> \\[ \\int \\Sigma^\\phi_{ij} (\\partial_i u_j) d^3x  = -\\int u_j (\\partial_i \\Sigma^\\phi_{ij}) d^3x \\text{} \\] </li> <li> <p>\u53f3\u4fa7\u79ef\u5206\uff1a\u8fd9\u91cc\u7684\u76ee\u6807\u662f\u5c06 \\(\\vec{u}\\) \u4ece\u5bfc\u6570\u4e2d\u5206\u79bb\u51fa\u6765\u3002\u5229\u7528\u77e2\u91cf\u6052\u7b49\u5f0f \\(\\mu(\\nabla\\phi) = \\nabla(\\mu\\phi) - \\phi(\\nabla\\mu)\\)\uff0c\u4ee3\u5165\u53f3\u4fa7\u79ef\u5206\uff1a     $$     -\\int \\vec{u} \\cdot [\\nabla(\\mu\\phi) - \\phi(\\nabla\\mu)] d^3= -\\int \\vec{u} \\cdot \\nabla(\\mu\\phi) d^3x + \\int \\vec{u} \\cdot (\\phi \\nabla\\mu) d^3x     $$     \u5bf9\u7b2c\u4e00\u9879\u518d\u6b21\u4f7f\u7528\u5206\u90e8\u79ef\u5206\uff0c\u5e76\u5229\u7528\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6 \\(\\nabla \\cdot \\vec{u} = 0\\)\uff0c\u53ef\u4ee5\u8bc1\u660e\u5176\u79ef\u5206\u4e3a\u96f6\u3002\u56e0\u6b64\uff0c\u53f3\u4fa7\u6700\u7ec8\u5316\u4e3a\uff1a     $$     \\delta F_{\\text{therm}} = \\int d^3x \\vec{u} \\cdot (\\phi \\nabla\\mu)     $$</p> </li> </ul> <p>\u7b2c\u4e94\u6b65\uff1a\u5f97\u5230\u6838\u5fc3\u5173\u7cfb</p> <p>\u73b0\u5728\u7b49\u5f0f\u4e24\u8fb9\u90fd\u5c06 \\(\\vec{u}\\) \u5206\u79bb\u4e86\u51fa\u6765\uff1a</p> \\[ -\\int d^3x \\sum_j u_j (\\partial_i \\Sigma^\\phi_{ij}) = \\int d^3x \\sum_j u_j (\\phi \\partial_j \\mu) \\] <p>\u7531\u4e8e\u4f4d\u79fb\u573a \\(\\vec{u}\\) \u662f\u4efb\u610f\u7684\uff0c\u4e0a\u8ff0\u7b49\u5f0f\u8981\u6052\u6210\u7acb\uff0c\u53ea\u6709\u88ab\u79ef\u51fd\u6570\u5904\u5904\u76f8\u7b49\u3002\u56e0\u6b64\uff0c\u5f97\u5230\u4e86\u6700\u6838\u5fc3\u7684\u8026\u5408\u5173\u7cfb\uff1a</p> \\[ \\nabla \\cdot \\Sigma^\\phi = \\phi \\nabla\\mu \\]"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#23","title":"2.3 \u7269\u7406\u8be0\u91ca\uff1a\u6e17\u900f\u538b\u4e0e\u754c\u9762\u5f20\u529b","text":"<p>\u8fd9\u4e2a\u7ed3\u679c\u867d\u7136\u4f18\u7f8e\uff0c\u4f46\u4ecd\u6709\u4e9b\u62bd\u8c61\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u7c92\u5b50\u5bf9\u6d41\u4f53\u65bd\u52a0\u7684\u529b\u5bc6\u5ea6 (force density) \u662f \\(\\phi \\nabla\\mu\\)\u3002\u8fd9\u4e2a\u529b\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\u5176\u7269\u7406\u5185\u6db5\uff1a</p> \\[ \\Sigma^\\phi_{ij} = (\\phi\\mu - \\tilde{f}(\\phi))\\delta_{ij} - \\kappa (\\partial_i \\phi)(\\partial_j \\phi) \\text{} \\] <p>\u5176\u4e2d \\(\\tilde{f}(\\phi) = f(\\phi) + \\frac{\\kappa}{2}(\\nabla\\phi)^2\\) \u3002\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u5b8c\u7f8e\u5730\u7f16\u7801\u4e86\u4e24\u79cd\u91cd\u8981\u7684\u7269\u7406\u73b0\u8c61\uff1a</p> <ol> <li> <p>\u6e17\u900f\u538b (Osmotic Pressure) \uff1a\u7b2c\u4e00\u9879 \\((\\phi\\mu - \\tilde{f}(\\phi))\\delta_{ij}\\) \u662f\u4e00\u4e2a\u5404\u5411\u540c\u6027\u7684\u5e94\u529b\uff0c\u5373\u4e00\u4e2a\u538b\u529b\u3002\u5b83\u6b63\u662f\u7531\u4e8e\u60ac\u6d6e\u7c92\u5b50\u7684\u5b58\u5728\u800c\u4ea7\u751f\u7684\u6e17\u900f\u538b \\(\\Pi_{\\text{osm}}\\) \u3002\u5728\u70ed\u529b\u5b66\u4e2d\uff0c\u6eb6\u8d28\u6d53\u5ea6\u4e0d\u5747\u4f1a\u4ea7\u751f\u6e17\u900f\u538b\u68af\u5ea6\uff0c\u4ece\u800c\u9a71\u52a8\u6eb6\u5242\u6d41\u52a8\u3002\u5728\u8fd9\u91cc\uff0c\u529b\u5bc6\u5ea6\u9879 \\(\\phi\\nabla\\mu\\) \u6b63\u662f\u8fd9\u79cd\u7531\u7c92\u5b50\u6d53\u5ea6\u4e0d\u5747\u4ea7\u751f\u7684\u70ed\u529b\u5b66\u529b\u5728\u6d41\u4f53\u4e0a\u7684\u5b8f\u89c2\u4f53\u73b0\u3002</p> </li> <li> <p>\u754c\u9762\u5f20\u529b (Interfacial Tension) \uff1a\u7b2c\u4e8c\u9879 \\(-\\kappa (\\partial_i \\phi)(\\partial_j \\phi)\\) \u662f\u4e00\u79cd\u5404\u5411\u5f02\u6027\u7684\u5e94\u529b \u3002\u5b83\u53ea\u5728 \\(\\nabla\\phi \\neq 0\\) \u7684\u5730\u65b9\uff08\u5373\u76f8\u754c\u9762\u5904\uff09\u624d\u4e0d\u4e3a\u96f6\u3002\u5b83\u7684\u5f20\u91cf\u7ed3\u6784 \\(-(gradient)\u2297(gradient)\\) \u610f\u5473\u7740\uff0c\u8fd9\u662f\u4e00\u4e2a\u6cbf\u7740\u754c\u9762\u65b9\u5411\u7684\u62c9\u4f38\u5e94\u529b\uff08\u8bd5\u56fe\u7f29\u5c0f\u754c\u9762\u79ef\uff09\uff0c\u800c\u5728\u5782\u76f4\u4e8e\u754c\u9762\u7684\u65b9\u5411\u4e0a\u662f\u538b\u7f29\u5e94\u529b\uff0c\u8fd9\u6b63\u662f\u8868\u9762\u5f20\u529b\u7684\u529b\u5b66\u8868\u73b0\u3002</p> </li> </ol> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u63a8\u5bfc\u51fa\u7684\u8026\u5408\u529b\u5bc6\u5ea6 \\(\\phi\\nabla\\mu\\) \u5e76\u975e\u51ed\u7a7a\u51fa\u73b0\uff0c\u5b83\u6df1\u523b\u5730\u6e90\u4e8e\u7c92\u5b50\u7cfb\u7edf\u7684\u70ed\u529b\u5b66\u81ea\u7531\u80fd\uff0c\u5e76\u901a\u8fc7\u6e17\u900f\u538b\uff08\u4f53\u6548\u5e94\uff09\u548c\u754c\u9762\u5f20\u529b\uff08\u754c\u9762\u6548\u5e94\uff09\u8fd9\u4e24\u79cd\u7269\u7406\u673a\u5236\uff0c\u4f5c\u7528\u4e8e\u6d41\u4f53\uff0c\u4ece\u800c\u5b8c\u6210\u4e86H\u6a21\u578b\u4e2d\u81f3\u5173\u91cd\u8981\u7684\u53cd\u9988\u56de\u8def\u3002</p> <p>\u901a\u8fc7\u865a\u529f\u539f\u7406\uff0c\u6210\u529f\u5730\u5c06\u7c92\u5b50\u7cfb\u7edf\u7684\u70ed\u529b\u5b66\u6027\u8d28\uff08\u7531\u81ea\u7531\u80fd \\(F[\\phi]\\) \u548c\u5316\u5b66\u52bf \\(\\mu\\) \u63cf\u8ff0\uff09\u4e0e\u6d41\u4f53\u7684\u529b\u5b66\u6027\u8d28\uff08\u5e94\u529b\u5f20\u91cf \\(\\Sigma\\)\uff09\u8054\u7cfb\u4e86\u8d77\u6765\u3002\u6838\u5fc3\u5173\u7cfb\u5f0f \\(\\nabla \\cdot \\Sigma^\\phi = \\phi \\nabla\\mu\\) \u7684\u63a8\u5bfc\uff0c\u6b63\u5f0f\u95ed\u5408\u4e86\u5728\u7b2c1\u8282\u672b\u5c3e\u63d0\u51fa\u7684\u53cd\u9988\u56de\u8def\u3002</p> <p>\u73b0\u5728\uff0cH\u6a21\u578b\u7684\u4e24\u4e2a\u63a7\u5236\u65b9\u7a0b\u90fd\u5df2\u5b8c\u5907\u3002\u6d41\u4f53\u901a\u8fc7\u5e73\u6d41\u9879 \\(\\phi\\vec{v}\\) \u5f71\u54cd\u7c92\u5b50\uff0c\u800c\u7c92\u5b50\u5219\u901a\u8fc7\u529b\u5bc6\u5ea6\u9879 \\(\\phi\\nabla\\mu\\) \u53cd\u4f5c\u7528\u4e8e\u6d41\u4f53\u3002\u81f3\u6b64\uff0c\u6240\u6709\u6784\u5efa\u5b8c\u6574\u6a21\u578b\u6240\u9700\u7684\u7269\u7406\u8981\u7d20\u90fd\u5df2\u9f50\u5907\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u5c06\u5b83\u4eec\u7ec4\u88c5\u8d77\u6765\uff0c\u5f97\u5230H\u6a21\u578b\u7684\u6700\u7ec8\u5f62\u5f0f\u3002</p>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#3-h","title":"3. H\u6a21\u578b\u7684\u6700\u7ec8\u65b9\u7a0b\u7ec4","text":"<p>\u7ecf\u8fc7\u524d\u4e24\u8282\u7684\u6784\u5efa\u4e0e\u63a8\u5bfc\uff0c\u6784\u6210H\u6a21\u578b\u7684\u6240\u6709\u5173\u952e\u8981\u7d20\u2014\u2014\u7c92\u5b50\u6d41 \\(\\vec{J}\\) \u548c\u7c92\u5b50\u8bf1\u5bfc\u5e94\u529b \\(\\Sigma^\\phi\\)\u2014\u2014\u90fd\u5df2\u786e\u5b9a\u3002\u73b0\u5728\uff0c\u5c06\u8fd9\u4e9b\u7ed3\u679c\u4ee3\u5165\u5404\u81ea\u7684\u5b88\u6052\u5f8b\u6846\u67b6\uff0c\u4fbf\u53ef\u5f97\u5230\u63cf\u8ff0\u60ac\u6d6e\u7c92\u5b50\u4e0e\u6d41\u4f53\u8026\u5408\u52a8\u529b\u5b66\u7684\u5b8c\u6574\u65b9\u7a0b\u7ec4\u3002</p>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#31-","title":"3.1 \u7c92\u5b50\u5bc6\u5ea6\u65b9\u7a0b (\u542b\u566a\u5bf9\u6d41-\u6269\u6563\u65b9\u7a0b)","text":"<p>\u5c06\u7c92\u5b50\u6d41\u7684\u5b8c\u6574\u8868\u8fbe\u5f0f \\(\\vec{J} = \\phi\\vec{v} - L\\nabla\\mu + \\vec{\\xi}_J\\) \u4ee3\u5165\u8fde\u7eed\u6027\u65b9\u7a0b \\(\\partial_t \\phi = -\\nabla \\cdot \\vec{J}\\)\uff0c\u5f97\u5230\uff1a</p> \\[ \\frac{\\partial \\phi}{\\partial t} = -\\nabla \\cdot (\\phi\\vec{v}) + \\nabla \\cdot (L\\nabla\\mu) - \\nabla \\cdot \\vec{\\xi}_J \\] <p>\u5229\u7528\u6d41\u4f53\u7684\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6 \\(\\nabla \\cdot \\vec{v} = 0\\)\uff0c\u5bf9\u6d41\u9879\u53ef\u4ee5\u5c55\u5f00\u4e3a \\(\\nabla \\cdot (\\phi\\vec{v}) = (\\nabla\\phi)\\cdot\\vec{v} + \\phi(\\nabla\\cdot\\vec{v}) = \\vec{v} \\cdot \\nabla\\phi\\)\u3002\u540c\u65f6\u5047\u8bbe\u8fc1\u79fb\u7387 \\(L\\) \u4e3a\u5e38\u6570\uff0c\u65b9\u7a0b\u6700\u7ec8\u6574\u7406\u4e3a\uff1a</p> \\[ \\frac{\\partial \\phi}{\\partial t} + \\vec{v} \\cdot \\nabla \\phi = L\\nabla^2\\mu - \\nabla \\cdot \\vec{\\xi}_J \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u4f18\u7f8e\u5730\u63cf\u7ed8\u4e86\u7c92\u5b50\u5bc6\u5ea6\u7684\u53cc\u91cd\u52a8\u529b\u5b66\uff1a</p> <ul> <li> <p>\u5de6\u4fa7 \\(\\frac{\\partial \\phi}{\\partial t} + \\vec{v} \\cdot \\nabla \\phi\\) \u6b63\u662f\u5bc6\u5ea6\u573a \\(\\phi\\) \u7684\u7269\u8d28\u5bfc\u6570 \\(\\frac{D\\phi}{Dt}\\) \uff08\u5728\u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u4e2d\uff09\u3002\u5b83\u63cf\u8ff0\u4e86\u8ddf\u968f\u6d41\u4f53\u4e00\u540c\u8fd0\u52a8\u7684\u89c2\u5bdf\u8005\u6240\u770b\u5230\u7684\u5bc6\u5ea6\u53d8\u5316\u3002</p> </li> <li> <p>\u53f3\u4fa7 \u5219\u63cf\u8ff0\u4e86\u8fd9\u79cd\u53d8\u5316\u7684\u6765\u6e90\uff1a\u4e00\u662f\u7c92\u5b50\u76f8\u5bf9\u4e8e\u80cc\u666f\u6d41\u4f53\u7684\u6269\u6563\u8fc7\u7a0b\uff0c\u7531\u5316\u5b66\u52bf\u68af\u5ea6\u9a71\u52a8\uff08\\(L\\nabla^2\\mu\\)\uff09\uff1b\u4e8c\u662f\u7531\u70ed\u5e93\u5f15\u8d77\u7684\u968f\u673a\u6da8\u843d\uff08\\(-\\nabla \\cdot \\vec{\\xi}_J\\)\uff09\u3002</p> </li> </ul>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#32-","title":"3.2 \u6d41\u4f53\u901f\u5ea6\u65b9\u7a0b (\u5e7f\u4e49\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b)","text":"<p>\u5c06\u6838\u5fc3\u7684\u8026\u5408\u5173\u7cfb \\(\\nabla \\cdot \\Sigma^\\phi = \\phi \\nabla\\mu\\) \u4ee3\u5165\u52a8\u91cf\u5b88\u6052\u65b9\u7a0b \\(\\rho \\frac{D\\vec{v}}{Dt} = \\nabla \\cdot \\Sigma\\)\uff0c\u5e76\u5c55\u5f00\u5176\u4ed6\u9879\uff0c\u5f97\u5230\uff1a</p> \\[ \\rho \\left( \\frac{\\partial \\vec{v}}{\\partial t} + (\\vec{v} \\cdot \\nabla)\\vec{v} \\right) = -\\nabla p + \\eta\\nabla^2\\vec{v} + \\phi \\nabla\\mu + \\nabla \\cdot \\sigma \\] <p>\u6b64\u65b9\u7a0b\u662f\u5bf9\u6807\u51c6\u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b\u7684\u63a8\u5e7f\uff1a</p> <ul> <li> <p>\u5de6\u4fa7\u548c\u524d\u4e24\u9879 (\\(\\rho \\frac{D\\vec{v}}{Dt}\\), \\(-\\nabla p\\), \\(\\eta\\nabla^2\\vec{v}\\)) \u662f\u6807\u51c6\u7684\u6d41\u4f53\u529b\u5b66\u672f\u8bed\uff0c\u5206\u522b\u4ee3\u8868\u60ef\u6027\u3001\u538b\u529b\u68af\u5ea6\u548c\u7c98\u6027\u8017\u6563\u3002</p> </li> <li> <p>\u6838\u5fc3\u8026\u5408\u9879 \\(\\phi \\nabla\\mu\\) \u662f\u65b0\u5f15\u5165\u7684\u529b\u5bc6\u5ea6\u3002\u5b83\u4ee3\u8868\u4e86\u7c92\u5b50\u7cfb\u7edf\u7684\u70ed\u529b\u5b66\u72b6\u6001\uff08\u7531\u5316\u5b66\u52bf \\(\\mu\\) \u63cf\u8ff0\uff09\u5982\u4f55\u76f4\u63a5\u8f6c\u5316\u4e3a\u4f5c\u7528\u4e8e\u6d41\u4f53\u7684\u673a\u68b0\u529b\u3002\u6b63\u662f\u8fd9\u4e00\u9879\uff0c\u6784\u6210\u4e86\u53cd\u9988\u56de\u8def\u7684\u7b2c\u4e8c\u73af\uff1a\u7c92\u5b50\u573a \\(\\phi\\) \u901a\u8fc7\u5316\u5b66\u52bf\u68af\u5ea6\u53cd\u4f5c\u7528\u4e8e\u6d41\u4f53\u573a \\(\\vec{v}\\) \u3002</p> </li> </ul>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#33","title":"3.3 \u52a8\u91cf\u5b88\u6052\uff1a\u7406\u8bba\u81ea\u6d3d\u6027\u7684\u68c0\u9a8c","text":"<p>\u73b0\u5728\u6211\u4eec\u6765\u8bc1\u660e\u52a8\u91cf\u5b88\u6052\uff0c\u68c0\u9a8c\u6574\u4e2a\u7406\u8bba\u6846\u67b6\u81ea\u6d3d\u6027\u3002</p> <p>\u7cfb\u7edf\u7684\u603b\u52a8\u91cf\u4e3a \\(\\vec{P}_{\\text{tot}} = \\int d^3x (\\rho \\vec{v})\\)\uff08\u6b64\u5904\u4ec5\u8003\u8651\u6d41\u4f53\u52a8\u91cf\uff0c\u56e0\u7c92\u5b50\u8d28\u91cf\u901a\u5e38\u8fdc\u5c0f\u4e8e\u6d41\u4f53\uff09\u3002\u5176\u65f6\u95f4\u53d8\u5316\u7387\u4e3a\uff1a</p> \\[ \\frac{d\\vec{P}_{\\text{tot}}}{dt} = \\int d^3x \\ \\rho \\frac{D\\vec{v}}{Dt} = \\int d^3x (\\nabla \\cdot \\Sigma) \\] <p>\u6839\u636e\u9ad8\u65af\u6563\u5ea6\u5b9a\u7406\uff0c\u4f53\u79ef\u5185\u7684\u6563\u5ea6\u79ef\u5206\u53ef\u4ee5\u8f6c\u5316\u4e3a\u7a7f\u8fc7\u8be5\u4f53\u79ef\u8fb9\u754c\u7684\u901a\u91cf\u79ef\u5206\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5b64\u7acb\u7cfb\u7edf\uff0c\u5176\u65e0\u7a77\u8fdc\u8fb9\u754c\u9762\u4e0a\u6ca1\u6709\u529b\uff0c\u56e0\u6b64\u901a\u91cf\u4e3a\u96f6\u3002</p> \\[ \\int_V (\\nabla \\cdot \\Sigma) d^3x = \\oint_{\\partial V} \\Sigma \\cdot d\\vec{S} = 0 \\] <p>\u8fd9\u8868\u660e\uff0c\u5305\u62ec\u5173\u952e\u8026\u5408\u9879 \\(\\phi\\nabla\\mu\\) \u5728\u5185\u7684\u6240\u6709\u5185\u529b\uff0c\u5176\u5728\u6574\u4e2a\u7cfb\u7edf\u4e2d\u7684\u5408\u529b\u4e3a\u96f6 \u3002\u8026\u5408\u9879\u7684\u4f5c\u7528\u662f\u5728\u7c92\u5b50\u548c\u6d41\u4f53\u8fd9\u4e24\u4e2a\u5b50\u7cfb\u7edf\u4e4b\u95f4\u91cd\u65b0\u5206\u914d\u52a8\u91cf\uff0c\u4f46\u6574\u4e2a\u7c92\u5b50-\u6d41\u4f53\u7cfb\u7edf\u7684\u603b\u52a8\u91cf\u662f\u5b88\u6052\u7684\u3002\u8fd9\u4e00\u68c0\u9a8c\u786e\u8ba4\u4e86\u6240\u63a8\u5bfc\u7684\u8026\u5408\u9879\u5728\u7269\u7406\u4e0a\u662f\u5408\u7406\u7684\uff0c\u5b83\u6b63\u786e\u5730\u626e\u6f14\u4e86\u4e00\u4e2a\u201c\u5185\u529b\u201d\u7684\u89d2\u8272\u3002</p>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#4","title":"4. \u4ee3\u7801\u5b9e\u8df5\uff1a\u53ef\u89c6\u5316\u5e73\u6d41\u4e0e\u6269\u6563\u7684\u52a8\u6001\u7ade\u4e89","text":"<p>\u5b8c\u6574\u6c42\u89e3H\u6a21\u578b\u7684\u8026\u5408\u504f\u5fae\u5206\u65b9\u7a0b\u662f\u4e00\u9879\u590d\u6742\u7684\u6570\u503c\u4efb\u52a1\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u76f4\u89c2\u5730\u7406\u89e3\u5176\u6838\u5fc3\u7684\u7269\u7406\u8fc7\u7a0b\u2014\u2014\u5e73\u6d41 (Advection) \u4e0e \u6269\u6563 (Diffusion) \u2014\u2014\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u7b80\u5316\u7684\u6a21\u62df\u6765\u6355\u6349\u5176\u7cbe\u9ad3\u3002\u8fd9\u6b21\u5b9e\u8df5\u5c06\u4e0d\u76f4\u63a5\u6c42\u89e3\u573a\u65b9\u7a0b\uff0c\u800c\u662f\u8ffd\u8e2a\u6784\u6210\u5bc6\u5ea6\u573a\u7684\u3001\u5355\u4e2a\u5e03\u6717\u7c92\u5b50\u7684\u8fd0\u52a8\u8f68\u8ff9\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u5c06\u62bd\u8c61\u7684\u573a\u8bba\u65b9\u7a0b\uff0c\u5982  \\(\\(\\partial_t\\phi + \\vec{v}\\cdot\\nabla\\phi = \\nabla \\cdot (L\\nabla\\mu) - \\nabla \\cdot \\vec{\\xi}_J\\)\\)</p> <p>\u4e0e\u5176\u5fae\u89c2\u57fa\u7840\u2014\u2014\u5355\u4e2a\u7c92\u5b50\u7684\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\u2014\u2014\u76f4\u63a5\u8054\u7cfb\u8d77\u6765\u3002\u5355\u4e2a\u7c92\u5b50\u7684\u8fd0\u52a8\u65b9\u7a0b\u4e3a\uff1a $$ \\frac{d\\vec{r}}{dt} = \\vec{v}(\\vec{r}) + \\sqrt{2D} \\vec{\\eta}(t) $$ \u5176\u4e2d\uff0c\u786e\u5b9a\u6027\u7684\u5e73\u6d41\u9879 \\(\\vec{v}(\\vec{r})\\) \u5bf9\u5e94\u573a\u65b9\u7a0b\u4e2d\u7684\u5bf9\u6d41\u9879\uff0c\u800c\u968f\u673a\u7684\u5e03\u6717\u8fd0\u52a8\u9879 \\(\\sqrt{2D} \\vec{\\eta}(t)\\) \u5219\u662f\u573a\u65b9\u7a0b\u4e2d\u6269\u6563\u548c\u566a\u58f0\u9879\u5728\u7c92\u5b50\u5c42\u9762\u7684\u4f53\u73b0\u3002</p>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#41","title":"4.1 \u6a21\u62df\uff1a\u526a\u5207\u6d41\u4e2d\u7684\u5e03\u6717\u7c92\u5b50\u56e2\u7c07","text":"<p>\u4e0b\u9762\u7684Python\u4ee3\u7801\u6a21\u62df\u4e86\u4e00\u56e2\u5e03\u6717\u7c92\u5b50\u5728\u7b80\u5355\u7ebf\u6027\u526a\u5207\u6d41 \\(\\vec{v}(x, y) = (\\gamma y, 0)\\) \u4e2d\u7684\u6f14\u5316\u3002\u8fd9\u4e2a\u6d41\u573a\u4ee3\u8868\u4e86\u4e24\u5757\u5e73\u884c\u677f\u4e4b\u95f4\u6d41\u4f53\u88ab\u526a\u5207\u7684\u60c5\u5f62\uff0c\\(\\gamma\\) \u662f\u526a\u5207\u7387\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation, PillowWriter\n\n# --- 1. Set simulation parameters ---\nn_particles = 50     # Number of particles to simulate (increased)\nn_steps = 5000       # Number of time steps\ndt = 0.01            # Length of each time step\nD = 0.1              # Diffusion coefficient (controls Brownian motion strength)\ngamma = 1.0          # Shear rate (controls flow field strength)\n\n# --- 2. Initialize particle positions ---\n# Randomly place particles near the center of the region\nnp.random.seed(42) # For reproducible results\npositions = np.random.randn(n_particles, 2) * 0.5\n# Record trajectories of each particle\ntrajectories = np.zeros((n_particles, n_steps + 1, 2))\ntrajectories[:, 0, :] = positions\n\n# --- 3. Simulate evolution (Euler-Maruyama method) ---\nfor i in range(n_steps):\n    # Current positions\n    r = trajectories[:, i, :]\n    # Flow field velocity v(r) = (gamma * y, 0)\n    v_flow = np.zeros_like(r)\n    v_flow[:, 0] = gamma * r[:, 1]\n\n    # Random noise term\n    noise = np.random.randn(n_particles, 2)\n\n    # Update positions\n    # r(t+dt) = r(t) + v_flow(r) * dt + sqrt(2*D*dt) * noise\n    trajectories[:, i + 1, :] = r + v_flow * dt + np.sqrt(2 * D * dt) * noise\n\n    # Keep particles within bounds to prevent them from leaving the view\n    # X boundary\n    outbound_x = np.where(trajectories[:, i + 1, 0] &gt; 5)\n    trajectories[outbound_x, i + 1, 0] = 5\n    outbound_x = np.where(trajectories[:, i + 1, 0] &lt; -5)\n    trajectories[outbound_x, i + 1, 0] = -5\n\n    # Y boundary\n    outbound_y = np.where(trajectories[:, i + 1, 1] &gt; 5)\n    trajectories[outbound_y, i + 1, 1] = 5\n    outbound_y = np.where(trajectories[:, i + 1, 1] &lt; -5)\n    trajectories[outbound_y, i + 1, 1] = -5\n\n# --- 4. Create dynamic visualization ---\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Set black background\nfig.patch.set_facecolor('black')\nax.set_facecolor('black')\n\n# a) Plot background flow field (Quiver Plot)\nx_grid = np.linspace(-5, 5, 20)\ny_grid = np.linspace(-5, 5, 20)\nX, Y = np.meshgrid(x_grid, y_grid)\nU = gamma * Y  # x-direction velocity\nV = np.zeros_like(X) # y-direction velocity\n\n# Create alternating color pattern for flow field arrows\n# Alternate between two colors to create moving effect\ncolors_pattern = np.zeros((X.shape[0], X.shape[1], 4))\ncolors_pattern[::2, ::2] = [1, 1, 1, 0.7]  # White\ncolors_pattern[1::2, 1::2] = [1, 1, 1, 0.7]  # White\ncolors_pattern[::2, 1::2] = [0.5, 0.5, 1, 0.7]  # Blueish\ncolors_pattern[1::2, ::2] = [0.5, 0.5, 1, 0.7]  # Blueish\n\n# Flatten the color array for use with quiver\nC = np.zeros((X.shape[0] * X.shape[1], 4))\nC[::2] = [1, 1, 1, 0.7]  # White\nC[1::2] = [0.5, 0.5, 1, 0.7]  # Blueish\n\n# Set flow field arrows with alternating colors\nquiver = ax.quiver(X, Y, U, V, color=C, alpha=0.7)\n\n# b) Initialize trajectory lines and particle points with comet effect\nlines = []\npoints = []\n# Create multiple points for each particle to achieve glowing effect\nglow_points = []\ncolors = plt.cm.plasma(np.linspace(0, 1, n_particles))\n\n# Tail length for comet effect (increased)\ntail_length = 100\n\nfor i in range(n_particles):\n    # Main particle point\n    point, = ax.plot([], [], 'o', color=colors[i], markersize=8)\n    # Comet tail (longer trajectory)\n    line, = ax.plot([], [], color=colors[i], alpha=0.6, linewidth=2)\n    # Glowing effect - multiple points with decreasing size and increasing transparency\n    glow_set = []\n    for j in range(5):\n        glow_point, = ax.plot([], [], 'o', color=colors[i], \n                             markersize=8-j*1.2, alpha=0.8-j*0.15)\n        glow_set.append(glow_point)\n\n    points.append(point)\n    lines.append(line)\n    glow_points.append(glow_set)\n\n# c) Set figure format\nax.set_title('Brownian Particles in a Shear Flow', fontsize=16, color='white')\nax.set_xlabel('x position', fontsize=12, color='white')\nax.set_ylabel('y position', fontsize=12, color='white')\nax.set_aspect('equal', adjustable='box')\nax.set_xlim(-5, 5)\nax.set_ylim(-5, 5)\nax.grid(True, linestyle='--', alpha=0.3, color='gray')\n\n# Set axis tick colors\nax.tick_params(colors='white')\n\n# d) Animation update function\ndef update(frame):\n    # Animate the flow field by shifting the color pattern\n    t = frame % 4  # Cycle through 4 phases\n\n    # Create new color pattern based on time\n    if t == 0:\n        C_new = np.zeros((X.shape[0] * X.shape[1], 4))\n        C_new[::2] = [1, 1, 1, 0.7]  # White\n        C_new[1::2] = [0.5, 0.5, 1, 0.7]  # Blueish\n    elif t == 1:\n        C_new = np.zeros((X.shape[0] * X.shape[1], 4))\n        C_new[1::4] = [1, 1, 1, 0.7]  # White\n        C_new[3::4] = [1, 1, 1, 0.7]  # White\n        C_new[::4] = [0.5, 0.5, 1, 0.7]  # Blueish\n        C_new[2::4] = [0.5, 0.5, 1, 0.7]  # Blueish\n    elif t == 2:\n        C_new = np.zeros((X.shape[0] * X.shape[1], 4))\n        C_new[::2] = [0.5, 0.5, 1, 0.7]  # Blueish\n        C_new[1::2] = [1, 1, 1, 0.7]  # White\n    else:  # t == 3\n        C_new = np.zeros((X.shape[0] * X.shape[1], 4))\n        C_new[1::4] = [0.5, 0.5, 1, 0.7]  # Blueish\n        C_new[3::4] = [0.5, 0.5, 1, 0.7]  # Blueish\n        C_new[::4] = [1, 1, 1, 0.7]  # White\n        C_new[2::4] = [1, 1, 1, 0.7]  # White\n\n    # Update quiver colors to create moving effect\n    quiver.set_color(C_new)\n\n    # Display more trajectory points per frame for smoother animation\n    step = max(1, frame * 5)  # Add 5 time steps of data points per frame\n    if step &gt; n_steps:\n        step = n_steps\n\n    for i in range(n_particles):\n        # Determine the range for the comet tail\n        start_idx = max(0, step - tail_length)\n        end_idx = step\n\n        # Update comet tail (longer trajectory)\n        lines[i].set_data(trajectories[i, start_idx:end_idx, 0], \n                         trajectories[i, start_idx:end_idx, 1])\n\n        # Update main particle point position\n        points[i].set_data(trajectories[i, step-1, 0], trajectories[i, step-1, 1])\n\n        # Update glowing effect points (multiple points trailing behind)\n        for j, glow_point in enumerate(glow_points[i]):\n            offset = j + 1\n            if step &gt; offset:\n                glow_point.set_data(trajectories[i, step-1-offset, 0], \n                                   trajectories[i, step-1-offset, 1])\n            else:\n                glow_point.set_data([], [])  # Hide if not enough history\n\n    # Return all animated elements\n    flat_glow_points = [item for sublist in glow_points for item in sublist]\n    return [quiver] + lines + points + flat_glow_points\n\n# e) Create animation\n# To control animation length, we calculate total frames\nn_frames = n_steps // 5\nani = FuncAnimation(fig, update, frames=range(0, n_frames, 5), blit=True, interval=30)\n\n# f) Save as GIF\nani.save('brownian_particles_comet.gif', writer=PillowWriter(fps=25))\n\nplt.show()\n</code></pre> </p> <p>\u8fd9\u4e2a\u6a21\u62df\u63ed\u793a\u4e86H\u6a21\u578b\u4e2d\u4e24\u4e2a\u6838\u5fc3\u7269\u7406\u8fc7\u7a0b\u7684\u52a8\u6001\u7ade\u4e89\uff1a</p> <ul> <li> <p>\u5e73\u6d41 (Advection) \u5851\u9020\u7ed3\u6784\uff1a\u52a8\u753b\u6e05\u6670\u5730\u5c55\u793a\u4e86\u521d\u59cb\u7684\u5706\u5f62\u7c92\u5b50\u56e2\u7c07\uff08\u4e00\u4e2a\u5c40\u57df\u7684\u5bc6\u5ea6\u6da8\u843d\uff09\u662f\u5982\u4f55\u88ab\u80cc\u666f\u526a\u5207\u6d41\uff08\u7531\u7bad\u5934\u8868\u793a\uff09\u62c9\u4f38\u6210\u4e00\u4e2a\u503e\u659c\u7684\u692d\u7403\u72b6\u7684\u3002y &gt; 0 \u7684\u7c92\u5b50\u6bd4 y \\&lt; 0 \u7684\u7c92\u5b50\u5411\u53f3\u8fd0\u52a8\u5f97\u66f4\u5feb\uff0c\u8fd9\u79cd\u901f\u5ea6\u5dee\u5f02\u53d8\u5f62 (deform) \u5e76\u8f93\u8fd0 (transport) \u4e86\u6574\u4e2a\u7c92\u5b50\u56e2\u7c07\u3002\u8fd9\u6b63\u662f\u573a\u65b9\u7a0b\u4e2d\u5bf9\u6d41\u9879 \\(\\vec{v} \\cdot \\nabla\\phi\\) \u7684\u76f4\u63a5\u89c6\u89c9\u4f53\u73b0\uff1a\u5b83\u63cf\u8ff0\u4e86\u6d41\u573a \\(\\vec{v}\\) \u5982\u4f55\u4f5c\u7528\u4e8e\u5bc6\u5ea6\u68af\u5ea6 \\(\\nabla\\phi\\)\uff0c\u4ece\u800c\u4ea7\u751f\u975e\u5747\u5300\u7684\u8f93\u8fd0\uff0c\u5851\u9020\u4e86\u5b8f\u89c2\u7ed3\u6784\u7684\u5f62\u6001\u3002</p> </li> <li> <p>\u6269\u6563 (Diffusion) \u62b9\u5e73\u7ed3\u6784\uff1a\u4e0e\u6b64\u540c\u65f6\uff0c\u53ef\u4ee5\u89c2\u5bdf\u5230\u6574\u4e2a\u7c92\u5b50\u56e2\u7c07\u7684\u8fb9\u754c\u5728\u4e0d\u65ad\u53d8\u5f97\u6a21\u7cca\uff0c\u6574\u4f53\u8303\u56f4\u5728\u9010\u6e10\u6269\u5927\u3002\u5e03\u6717\u8fd0\u52a8\u662f\u70ed\u529b\u5b66\u6da8\u843d\u9a71\u52a8\u7684\u6269\u6563\u8fc7\u7a0b\u3002\u5b83\u5bf9\u5e94\u4e8e\u573a\u65b9\u7a0b\u4e2d\u7684\u6269\u6563\u9879 \\(\\nabla \\cdot (L\\nabla\\mu)\\) \u548c\u566a\u58f0\u9879 \\(-\\nabla \\cdot \\vec{\\\\xi}_J\\)\u3002\u8fd9\u4e9b\u9879\u7684\u96c6\u4f53\u6548\u5e94\u662f\u62b5\u6297\u4efb\u4f55\u5bc6\u5ea6\u4e0d\u5747\u5300\u6027\uff0c\u8bd5\u56fe\u5c06\u7c92\u5b50\u5747\u5300\u5730\u6563\u5e03\u5728\u6574\u4e2a\u7a7a\u95f4\u4e2d\uff0c\u4ece\u800c\u6700\u5927\u5316\u7cfb\u7edf\u7684\u71b5\u3002</p> </li> </ul> <p>\u5e73\u6d41\u662f\u4e00\u79cd\u786e\u5b9a\u6027\u7684\u3001\u503e\u5411\u4e8e\u4ea7\u751f\u548c\u62c9\u4f38\u7ed3\u6784\u7684\u8fc7\u7a0b\uff0c\u800c\u6269\u6563\u5219\u662f\u4e00\u79cd\u968f\u673a\u6027\u7684\u3001\u503e\u5411\u4e8e\u62b9\u5e73\u4efb\u4f55\u7ed3\u6784\u7684\u71b5\u589e\u8fc7\u7a0b\u3002 H\u6a21\u578b\u7684\u4e30\u5bcc\u52a8\u529b\u5b66\uff0c\u6b63\u662f\u6e90\u4e8e\u8fd9\u4e24\u79cd\u6548\u5e94\u5728\u4e0d\u540c\u65f6\u7a7a\u5c3a\u5ea6\u4e0a\u7684\u6301\u7eed\u7ade\u4e89\u4e0e\u5e73\u8861\u3002</p>"},{"location":"zh/notes/30.%20%E6%82%AC%E6%B5%AE%E5%9C%A8%E6%B5%81%E4%BD%93%E4%B8%AD%E7%9A%84%E5%B8%83%E6%9C%97%E7%B2%92%E5%AD%90%20%E2%80%94%20H%E6%A8%A1%E5%9E%8B/#5","title":"5. \u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u7cfb\u7edf\u6027\u5730\u63a8\u5bfc\u5e76\u8be0\u91ca\u4e86H\u6a21\u578b\u3002H\u6a21\u578b\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u8fde\u7eed\u4ecb\u8d28\u7406\u8bba\uff0c\u5b83\u63cf\u8ff0\u4e86\u5b88\u6052\u5e8f\u53c2\u91cf\uff08\u5982\u7c92\u5b50\u6d53\u5ea6\uff09\u4e0e\u5bbf\u4e3b\u6d41\u4f53\u52a8\u91cf\u573a\u7684\u8026\u5408\u52a8\u529b\u5b66\u3002\u5176\u6838\u5fc3\u7269\u7406\u5185\u6db5\u5728\u4e8e\u4e24\u8005\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\uff1a\u6d41\u4f53\u901a\u8fc7\u5e73\u6d41\u6548\u5e94\u8f93\u8fd0\u7c92\u5b50\uff0c\u800c\u7c92\u5b50\u5219\u901a\u8fc7\u70ed\u529b\u5b66\u529b\u5bc6\u5ea6 \\(\\phi\\nabla\\mu\\) \u5bf9\u6d41\u4f53\u65bd\u52a0\u53cd\u4f5c\u7528\u529b\u3002\u8fd9\u4e2a\u529b\u5728\u5b8f\u89c2\u4e0a\u8868\u73b0\u4e3a\u6e17\u900f\u538b\u548c\u754c\u9762\u5f20\u529b\u3002\u6700\u7ec8\u5f97\u5230\u7684\u8026\u5408\u65b9\u7a0b\u7ec4\uff0c\u4e3a\u7814\u7a76\u76f8\u5206\u79bb\u3001\u80f6\u4f53\u60ac\u6d6e\u6db2\u7b49\u590d\u6742\u6d41\u4f53\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u884c\u4e3a\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u7406\u8bba\u57fa\u7840\u3002</p> <p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8bfe\u7a0b\u6240\u91c7\u7528\u7684\u65b9\u6cd5\u662f\u63a8\u5bfc\u7cfb\u7edf\u7684\u968f\u673a\u8fd0\u52a8\u65b9\u7a0b\uff08\u6717\u4e4b\u4e07\u65b9\u7a0b\uff09\u3002\u8fd9\u4e9b\u65b9\u7a0b\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5982\u4f55\u968f\u65f6\u95f4\u4e00\u6b65\u6b65\u6f14\u5316\uff0c\u662f\u4e00\u79cd\u201c\u5fae\u5206\u201d\u7684\u89c2\u70b9\u3002</p> <p>\u4e0b\u4e00\u8bb2\u5c06\u8f6c\u6362\u89c6\u89d2\uff0c\u63d0\u51fa\u4e00\u4e2a\u66f4\u5168\u5c40\u6027\u7684\u95ee\u9898\uff1a\u7cfb\u7edf\u6f14\u5316\u51fa\u67d0\u4e00\u6761\u7279\u5b9a\u5386\u53f2\u8f68\u8ff9 \\(\\phi(\\vec{x}, t)\\) \u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u662f\u6211\u4eec\u66fe\u7ecf\u4ecb\u7ecd\u8fc7\u7684\u8def\u5f84\u79ef\u5206\u3002</p> <p>Onsager-Machlup\u6cdb\u51fd\u5c06\u88ab\u5f15\u5165\uff0c\u4f5c\u4e3a\u968f\u673a\u52a8\u529b\u5b66\u7684\u201c\u4f5c\u7528\u91cf\u201d\u3002\u5728\u7ecf\u5178\u529b\u5b66\u4e2d\uff0c\u6700\u5c0f\u4f5c\u7528\u91cf\u539f\u7406\u53ef\u4ee5\u7b5b\u9009\u51fa\u552f\u4e00\u7684\u7ecf\u5178\u8def\u5f84\uff1b\u800c\u5728\u968f\u673a\u52a8\u529b\u5b66\u4e2d\uff0cOnsager-Machlup\u6cdb\u51fd\u5219\u8d4b\u4e88\u4e86\u6bcf\u4e00\u6761\u53ef\u80fd\u7684\u6da8\u843d\u8def\u5f84\u4e00\u4e2a\u6982\u7387\u6743\u91cd\u3002\u5b83\u4e3a\u5206\u6790\u975e\u5e73\u8861\u7cfb\u7edf\u7684\u7edf\u8ba1\u6027\u8d28\u63d0\u4f9b\u4e86\u4e00\u4e2a\u66f4\u4e3a\u5f3a\u5927\u548c\u4f18\u7f8e\u7684\u6846\u67b6\uff0c\u80fd\u591f\u7528\u4e8e\u8ba1\u7b97\u6da8\u843d\u8c31\u3001\u54cd\u5e94\u51fd\u6570\u7b49\u91cd\u8981\u7684\u7269\u7406\u91cf\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/","title":"\u5f15\u8a00\uff1a\u4ece\u5fae\u5206\u6f14\u5316\u5230\u5386\u53f2\u6c42\u548c","text":"<p>\u5728\u5148\u524d\u7684\u8bfe\u7a0b\u4e2d\uff0c\u63cf\u8ff0\u968f\u673a\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u4e24\u5927\u6838\u5fc3\u6846\u67b6\u2014\u2014\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e0e\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u2014\u2014\u5df2\u88ab\u6df1\u5165\u63a2\u8ba8\u3002\u8fd9\u4e24\u4e2a\u6846\u67b6\u4e0e\u5728\u7b2c20\u548c21\u8bb2\u4e2d\u5efa\u7acb\u7684\u968f\u673a\u5fae\u5206\u65b9\u7a0b(SDE)\u53ca\u4f0a\u85e4\u5fae\u79ef\u5206\u4e00\u9053\uff0c\u6784\u6210\u4e86\u4e00\u79cd\u201c\u5fae\u5206\u201d\u7684\u89c2\u70b9\uff0c\u805a\u7126\u4e8e\u7cfb\u7edf\u72b6\u6001\u4ece\u4e00\u4e2a\u77ac\u95f4\u5230\u4e0b\u4e00\u4e2a\u77ac\u95f4\u7684\u6f14\u5316\u3002</p> <ul> <li> <p>\u8f68\u8ff9\u89c6\u89d2 (Trajectory View)\uff1a\u4ee5\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e3a\u4ee3\u8868 (\u7b2c17\u8bb2)\uff0c\u6b64\u6846\u67b6\u4ece\u5fae\u89c2\u89c6\u89d2\u51fa\u53d1\uff0c\u8ffd\u8e2a\u7cfb\u7edf\u5728\u786e\u5b9a\u6027\u529b\u4e0e\u968f\u673a\u529b\u4f5c\u7528\u4e0b\u7684\u5355\u6761\u7279\u5b9a\u8f68\u8ff9 \\(\\vec{x}(t)\\)\u3002\u5b83\u56de\u7b54\u7684\u95ee\u9898\u662f\uff1a\u201c\u7ed9\u5b9a\u4e00\u4e2a\u566a\u58f0\u5b9e\u73b0\uff0c\u7cfb\u7edf\u7684\u8def\u5f84\u5c06\u5982\u4f55\u6f14\u5316\uff1f\u201d</p> </li> <li> <p>\u7cfb\u7efc\u89c6\u89d2 (Ensemble View)\uff1a\u4ee5\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u4e3a\u4ee3\u8868 (\u7b2c18\u8bb2)\uff0c\u6b64\u6846\u67b6\u91c7\u7528\u5b8f\u89c2\u7edf\u8ba1\u89c6\u89d2\uff0c\u901a\u8fc7\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u504f\u5fae\u5206\u65b9\u7a0b\uff0c\u63cf\u8ff0\u4e86\u7cfb\u7edf\u72b6\u6001\u6982\u7387\u5bc6\u5ea6 \\(p(\\vec{x}, t)\\) \u7684\u6f14\u5316\u3002\u5b83\u56de\u7b54\u7684\u95ee\u9898\u662f\uff1a\u201c\u5728\u5927\u91cf\u76f8\u540c\u7684\u7cfb\u7edf\u4e2d\uff0c\u4e8e\\(t\\)\u65f6\u523b\u5728\u72b6\u6001\\(\\vec{x}\\)\u627e\u5230\u7cfb\u7edf\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\u201d</p> </li> </ul> <p>\u5c3d\u7ba1\u8fd9\u4e24\u4e2a\u6846\u67b6\u529f\u80fd\u5f3a\u5927\uff0c\u4f46\u5b83\u4eec\u5e76\u672a\u76f4\u63a5\u56de\u7b54\u4e00\u4e2a\u66f4\u5168\u5c40\u6027\u7684\u95ee\u9898\uff1a\u201c\u7cfb\u7edf\u4ece\u521d\u59cb\u72b6\u6001\\(\\vec{\\phi}_0\\)\u6f14\u5316\u81f3\u672b\u6001\\(\\vec{\\phi}_f\\)\u65f6\uff0c\u9075\u5faa\u67d0\u4e00\u6761\u7279\u5b9a\u8def\u5f84\uff08\u6216\u79f0\u2018\u5386\u53f2\u2019\uff09\\(\\vec{\\phi}(\\vec{x}, t)\\) \u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\u201d \u6717\u4e4b\u4e07\u65b9\u7a0b\u53ea\u7ed9\u51fa\u4e86\u4e00\u6761\u6837\u672c\u8def\u5f84\uff0c\u800c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u5219\u805a\u7126\u4e8e\u7ec8\u70b9\u7684\u6982\u7387\uff0c\u5ffd\u7565\u4e86\u8fc7\u7a0b\u7684\u7ec6\u8282\u3002</p> <p>\u4e3a\u4e86\u586b\u8865\u8fd9\u4e00\u6982\u5ff5\u4e0a\u7684\u7a7a\u767d\uff0c\u9700\u8981\u5f15\u5165\u4e00\u4e2a\u80fd\u4e3a\u6574\u4e2a\u8f68\u8ff9\u5206\u914d\u7edf\u8ba1\u6743\u91cd\u7684\u6570\u5b66\u5de5\u5177\u3002\u8fd9\u6b63\u662f\u8def\u5f84\u79ef\u5206\uff08Path Integral\uff09\u65b9\u6cd5\u7684\u6838\u5fc3\u76ee\u6807\uff0c\u8be5\u65b9\u6cd5\u5728\u7b2c19\u8bb2\u4e2d\u5df2\u521d\u6b65\u5f15\u5165\u3002\u7279\u522b\u662f\u5728\u7b2c22\u8bb2\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u89c1\u8bc6\u5230\u5728\u5904\u7406\u4e58\u6027\u566a\u58f0\u65f6\uff0c\u7531\u4e8e\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u7684\u5b58\u5728\uff0c\u8def\u5f84\u79ef\u5206\u7684\u6784\u5efa\u53d8\u5f97\u5fae\u5999\u800c\u590d\u6742\u3002\u672c\u8bb2\u5c06\u9996\u5148\u805a\u7126\u4e8e\u76f8\u5bf9\u7b80\u6d01\u7684\u52a0\u6027\u566a\u58f0(Additive Noise)\u60c5\u5f62\uff0c\u7cfb\u7edf\u6027\u5730\u6784\u5efa\u8fd9\u4e00\u6846\u67b6\u3002</p> <p>\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u601d\u60f3\uff0c\u501f\u9274\u4e86\u8d39\u66fc\u5728\u91cf\u5b50\u529b\u5b66\u4e2d\u53d1\u5c55\u7684\u201c\u5386\u53f2\u6c42\u548c\u201d\uff08Sum Over Histories\uff09\u65b9\u6cd5\u3002\u5176\u76ee\u6807\u662f\u6784\u5efa\u4e00\u4e2a\u6982\u7387\u6cdb\u51fd (Probability Functional)\uff0c\u8bb0\u4f5c \\(W[\\vec{\\phi}]\\)\u3002\u8fd9\u4e2a\u6cdb\u51fd\u80fd\u591f\u4e3a\u5728\u7b2c23\u8bb2\u4e2d\u901a\u8fc7\u201c\u7c97\u7c92\u5316\u201d\u65b9\u6cd5\u5f97\u5230\u7684\u8fde\u7eed\u573a \\(\\vec{\\phi}(\\vec{x}, t)\\) \u5728\u65f6\u95f4\u533a\u95f4 \\([t_0, t_f]\\) \u5185\u7684\u4efb\u610f\u4e00\u6761\u5b8c\u6574\u6f14\u5316\u5386\u53f2\u8d4b\u4e88\u4e00\u4e2a\u6982\u7387\u503c\u3002</p> <p>\u4e00\u65e6\u6784\u5efa\u4e86\u8fd9\u4e2a\u6982\u7387\u6cdb\u51fd\uff0c\u4efb\u4f55\u53ef\u89c2\u6d4b\u91cf \\(\\mathcal{O}[\\vec{\\phi}]\\) \u7684\u7cfb\u7efc\u5e73\u5747\u503c\u4fbf\u53ef\u901a\u8fc7\u4e00\u4e2a\u6cdb\u51fd\u79ef\u5206 (Functional Integral) \u6765\u8ba1\u7b97\uff1a</p> \\[ \\langle \\mathcal{O}[\\vec{\\phi}] \\rangle = \\int \\mathcal{D}[\\vec{\\phi}] \\, \\mathcal{O}[\\vec{\\phi}] \\, W[\\vec{\\phi}] \\] <p>\u8fd9\u91cc\u7684\u79ef\u5206\u7b26\u53f7 \\(\\int \\mathcal{D}[\\vec{\\phi}]\\) \u4ee3\u8868\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u573a\u5386\u53f2\u8fdb\u884c\u201c\u6c42\u548c\u201d\u3002\u8fd9\u79cd\u8868\u8ff0\u65b9\u5f0f\u6781\u5176\u5f3a\u5927\uff0c\u56e0\u4e3a\u5b83\u5c06\u4e00\u4e2a\u968f\u673a\u52a8\u529b\u5b66\u95ee\u9898\uff0c\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u7edf\u8ba1\u573a\u8bba\u95ee\u9898\u3002\u8fd9\u4f7f\u5f97\u501f\u9274\u91cf\u5b50\u573a\u8bba\u4e2d\u6210\u719f\u7684\u6570\u5b66\u5de5\u5177\uff08\u5982\u5fae\u6270\u7406\u8bba\u3001\u91cd\u6574\u5316\u7fa4\u7b49\uff09\u6765\u5206\u6790\u7ecf\u5178\u968f\u673a\u7cfb\u7edf\u6210\u4e3a\u53ef\u80fd\u3002\u8fd9\u8282\u8bfe\u5c06\u7cfb\u7edf\u6027\u5730\u6784\u5efa\u6982\u7387\u6cdb\u51fd \\(W[\\vec{\\phi}]\\)\uff0c\u5e76\u8fd0\u7528\u5b83\u6765\u63ed\u793a\u7cfb\u7edf\u5728\u70ed\u5e73\u8861\u72b6\u6001\u4e0b\u6df1\u523b\u7684\u7269\u7406\u5bf9\u79f0\u6027\uff0c\u6700\u7ec8\u63a8\u5bfc\u51fa\u4e0e\u7b2c24\u8bb2\u4e2d\u6602\u8428\u683c\u7406\u8bba\u5f02\u66f2\u540c\u5de5\u7684\u7269\u7406\u5b9a\u5f8b\u3002</p> <p></p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#1","title":"1. \u6784\u5efa\u573a\u8f68\u8ff9\u7684\u6982\u7387\u6cdb\u51fd","text":"<p>\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u4efb\u52a1\u662f\u4ece\u5df2\u77e5\u7684\u566a\u58f0\u7edf\u8ba1\u7279\u6027\u51fa\u53d1\uff0c\u63a8\u5bfc\u51fa\u63cf\u8ff0\u573a \\(\\vec{\\phi}(\\vec{x}, t)\\) \u4efb\u610f\u4e00\u6761\u6f14\u5316\u5386\u53f2\u7684\u6982\u7387\u3002\u5176\u57fa\u672c\u601d\u8def\u662f\u5728\u6cdb\u51fd\u79ef\u5206\u4e2d\u8fdb\u884c\u4e00\u6b21\u7cbe\u5999\u7684\u53d8\u91cf\u66ff\u6362\uff1a\u4ece\u566a\u58f0\u8def\u5f84 \\(\\vec{\\xi}(\\vec{x}, t)\\) \u7684\u201c\u8bed\u8a00\u201d\u8f6c\u6362\u5230\u573a\u8def\u5f84 \\(\\vec{\\phi}(\\vec{x}, t)\\) \u7684\u201c\u8bed\u8a00\u201d\u3002\u6574\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u5c06\u63ed\u793a\uff0c\u4e00\u6761\u7279\u5b9a\u573a\u8def\u5f84\u7684\u53d1\u751f\u6982\u7387\uff0c\u5b8c\u5168\u7ee7\u627f\u81ea\u9a71\u52a8\u5b83\u4ea7\u751f\u7684\u90a3\u6761\u552f\u4e00\u566a\u58f0\u8def\u5f84\u7684\u6982\u7387\uff0c\u5e76\u7531\u4e00\u4e2a\u96c5\u53ef\u6bd4\u6cdb\u51fd\u884c\u5217\u5f0f\u8fdb\u884c\u4fee\u6b63\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#11","title":"1.1 \u51fa\u53d1\u70b9\uff1a\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e0e\u9ad8\u65af\u767d\u566a\u58f0","text":"<p>\u7406\u8bba\u7684\u51fa\u53d1\u70b9\u662f\u4e00\u4e2a\u666e\u904d\u7684\u3001\u63cf\u8ff0\u591a\u7ec4\u5206\u573a \\(\\vec{\\phi}(\\vec{x}, t)\\) \u6f14\u5316\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u7ec4\u3002\u8fd9\u662f\u7b2c17\u8bb2\u4e2d\u5355\u7c92\u5b50\u6717\u4e4b\u4e07\u65b9\u7a0b\u5411\u8fde\u7eed\u573a\u8bba\u7684\u76f4\u63a5\u63a8\u5e7f\uff1a</p> \\[ \\partial_t \\phi_{\\alpha}(\\vec{x}, t) = A_{\\alpha}[\\vec{\\phi}] + \\xi_{\\alpha}(\\vec{x}, t) \\] <p>\u6b64\u65b9\u7a0b\u4e2d\u7684\u5404\u9879\u5177\u6709\u660e\u786e\u7684\u7269\u7406\u610f\u4e49\uff1a</p> <ul> <li> <p>\u573a\u53d8\u91cf \\(\\phi_{\\alpha}(\\vec{x}, t)\\) \uff1a\u8fd9\u662f\u63cf\u8ff0\u7cfb\u7edf\u72b6\u6001\u7684\u8fde\u7eed\u573a\uff0c\u4e0b\u6807 \\(\\alpha\\) \u4ee3\u8868\u5176\u4e0d\u540c\u7684\u7ec4\u5206\uff08\u4f8b\u5982\uff0c\u5728H\u6a21\u578b\u4e2d\uff0c\\(\\vec{\\phi}\\) \u53ef\u4ee5\u540c\u65f6\u5305\u542b\u7c92\u5b50\u5bc6\u5ea6\u573a\u548c\u6d41\u4f53\u901f\u5ea6\u573a\uff09\u3002</p> </li> <li> <p>\u6f02\u79fb\u6cdb\u51fd \\(A_{\\alpha}[\\vec{\\phi}]\\) \uff1a\u8fd9\u662f\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u9879\uff0c\u63cf\u8ff0\u4e86\u7cfb\u7edf\u7684\u201c\u6f02\u79fb\u201d\uff08drift\uff09\u3002\u5b83\u901a\u5e38\u6e90\u4e8e\u7cfb\u7edf\u5411\u81ea\u7531\u80fd\u66f4\u4f4e\u72b6\u6001\u6f14\u5316\u7684\u8d8b\u52bf\uff0c\u5e76\u4f9d\u8d56\u4e8e\u573a \\(\\vec{\\phi}\\) \u7684\u6574\u4f53\u6784\u578b\u3002\u4f8b\u5982\uff0c\u5728\u5148\u524d\u8ba8\u8bba\u7684\u7406\u8bba\u6a21\u578b\u4e2d\uff1a</p> <ul> <li>\u5bf9\u4e8e\u63cf\u8ff0\u975e\u5b88\u6052\u6807\u91cf\u573a\u7b80\u5355\u5f1b\u8c6b\u7684\u6a21\u578bA\uff0c\u8be5\u9879\u4e0e\u7cfb\u7edf\u81ea\u7531\u80fd \\(F\\) \u7684\u6cdb\u51fd\u5bfc\u6570\u6210\u6b63\u6bd4\uff1a\\(A_{\\alpha} = -L_{\\alpha} \\frac{\\delta F}{\\delta \\phi_{\\alpha}}\\)\u3002</li> <li>\u5bf9\u4e8e\u63cf\u8ff0\u5b88\u6052\u6807\u91cf\u573a\uff08\u5982\u7c92\u5b50\u5bc6\u5ea6\uff09\u7684\u6a21\u578bB\uff0c\u8be5\u9879\u5219\u4f53\u73b0\u4e3a\u6d41\u7684\u6563\u5ea6\uff1a\\(A = \\nabla \\cdot \\left( M \\nabla \\frac{\\delta F}{\\delta \\phi} \\right)\\)\u3002</li> </ul> </li> <li> <p>\u968f\u673a\u566a\u58f0\u9879 \\(\\xi_{\\alpha}(\\vec{x}, t)\\) \uff1a\u8fd9\u662f\u9a71\u52a8\u7cfb\u7edf\u6da8\u843d\u7684\u968f\u673a\u529b\u3002</p> </li> </ul> <p>\u8fd9\u8282\u8bfe\u8981\u4ecb\u7ecd\u7684\u52a0\u6027\u9ad8\u65af\u767d\u566a\u58f0\uff08additive Gaussian white noise\uff09\uff0c\u5176\u7edf\u8ba1\u6027\u8d28\u7531\u524d\u4e24\u9636\u77e9\u5b8c\u5168\u5b9a\u4e49\uff1a</p> <ol> <li> <p>\u96f6\u5747\u503c\uff1a     $$     \\langle \\xi_{\\alpha}(\\vec{x}, t) \\rangle = 0     $$</p> </li> <li> <p>Delta\u5173\u8054\u7684\u534f\u65b9\u5dee\uff1a     $$     \\langle \\xi_{\\alpha}(\\vec{x}, t) \\xi_{\\beta}(\\vec{x}', t') \\rangle = N_{\\alpha\\beta} \\delta(\\vec{x}-\\vec{x}') \\delta(t-t')     $$</p> <ul> <li>\u8fd9\u91cc\u7684 \\(N_{\\alpha\\beta}\\) \u662f\u4e00\u4e2a\u5e38\u6570\u77e9\u9635\uff0c\u4ee3\u8868\u566a\u58f0\u7684\u5f3a\u5ea6\u3002</li> <li>\u201c\u767d\u566a\u58f0\u201d\u7684\u6027\u8d28\u4f53\u73b0\u5728\u4e24\u4e2a\u72c4\u62c9\u514b \\(\\delta\\) \u51fd\u6570\u4e0a\uff0c\u8868\u660e\u566a\u58f0\u5728\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u7684\u65f6\u95f4\u70b9\u6216\u7a7a\u95f4\u70b9\u4e0a\u90fd\u662f\u5b8c\u5168\u4e0d\u76f8\u5173\u7684\uff0c\u5373\u201c\u65e0\u8bb0\u5fc6\u201d\u3002</li> <li>\u201c\u52a0\u6027\u566a\u58f0\u201d\u610f\u5473\u7740\u566a\u58f0\u5f3a\u5ea6\u77e9\u9635 \\(N_{\\alpha\\beta}\\) \u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u573a \\(\\vec{\\phi}\\) \u7684\u503c\u3002\u8fd9\u4e0e\u7b2c22\u8bb2\u4e2d\u8ba8\u8bba\u7684\u3001\u66f4\u4e3a\u590d\u6742\u7684\u4e58\u6027\u566a\u58f0\u60c5\u51b5\u6784\u6210\u4e86\u5bf9\u6bd4\u3002</li> </ul> </li> </ol>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#12","title":"1.2 \u566a\u58f0\u5386\u53f2\u7684\u6982\u7387","text":"<p>\u7531\u4e8e\u5047\u5b9a\u566a\u58f0\u5728\u6bcf\u4e2a\u65f6\u7a7a\u70b9\u4e0a\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u9ad8\u65af\u968f\u673a\u53d8\u91cf\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u5199\u51fa\u4efb\u610f\u4e00\u6bb5\u566a\u58f0\u5386\u53f2 \\(\\vec{\\xi}(\\vec{x}, t)\\) \u51fa\u73b0\u7684\u6982\u7387\u6cdb\u51fd\u3002\u8fd9\u53ef\u88ab\u89c6\u4e3a\u5c06\u591a\u5143\u9ad8\u65af\u5206\u5e03\u63a8\u5e7f\u5230\u4e86\u65e0\u9650\u7ef4\u7684\u51fd\u6570\u7a7a\u95f4\uff1a</p> \\[ W_{\\xi}[\\vec{\\xi}] \\propto \\exp\\left( -\\frac{1}{2} \\sum_{\\alpha\\beta} \\int_{t_0}^{t_f} dt \\int d^d x \\, \\xi_{\\alpha}(\\vec{x}, t) N_{\\alpha\\beta}^{-1} \\xi_{\\beta}(\\vec{x}, t) \\right) \\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7269\u7406\u610f\u4e49\u975e\u5e38\u76f4\u89c2\uff1a * \u9ad8\u65af\u5f62\u5f0f\uff1a\u6e90\u4e8e\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff0c\u5927\u91cf\u72ec\u7acb\u7684\u5fae\u89c2\u78b0\u649e\u6548\u5e94\u53e0\u52a0\u540e\uff0c\u5b8f\u89c2\u566a\u58f0\u573a\u8d8b\u5411\u4e8e\u9ad8\u65af\u5206\u5e03\u3002 * \u6307\u6570\u90e8\u5206\uff1a\u53ef\u4ee5\u770b\u4f5c\u662f\u8fd9\u6761\u566a\u58f0\u8def\u5f84\u7684\u201c\u4ee3\u4ef7\u201d\u6216\u201c\u4f5c\u7528\u91cf\u201d\u3002\u4efb\u4f55\u504f\u79bb\u96f6\u5747\u503c\u7684\u566a\u58f0\u5386\u53f2\u90fd\u4f1a\u53d7\u5230\u6307\u6570\u7ea7\u7684\u6291\u5236\u3002\u566a\u58f0\u8d8a\u5927\uff0c\u5176\u51fa\u73b0\u7684\u6982\u7387\u5c31\u8d8a\u5c0f\u3002\u77e9\u9635 \\(N_{\\alpha\\beta}^{-1}\\) \u5728\u6b64\u626e\u6f14\u4e86\u201c\u5ea6\u89c4\u201d\u7684\u89d2\u8272\uff0c\u5b9a\u4e49\u4e86\u4e0d\u540c\u566a\u58f0\u5206\u91cf\u6da8\u843d\u7684\u76f8\u5bf9\u201c\u4ee3\u4ef7\u201d\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#13","title":"1.3 \u5173\u952e\u6b65\u9aa4\uff1a\u4ece\u566a\u58f0\u5230\u573a\u7684\u53d8\u91cf\u66ff\u6362","text":"<p>\u8fd9\u662f\u6574\u4e2a\u63a8\u5bfc\u7684\u6838\u5fc3\u903b\u8f91\u3002\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e3a\u566a\u58f0\u5386\u53f2 \\(\\vec{\\xi}(t)\\) \u4e0e\u573a\u5386\u53f2 \\(\\vec{\\phi}(t)\\) \u4e4b\u95f4\u5efa\u7acb\u4e86\u552f\u4e00\u7684\u6620\u5c04\uff08\u5728\u7ed9\u5b9a\u521d\u59cb\u6761\u4ef6\u4e0b\uff09\u3002\u56e0\u6b64\uff0c\u4e00\u6761\u7279\u5b9a\u573a\u8def\u5f84 \\(\\vec{\\phi}(t)\\) \u53d1\u751f\u7684\u6982\u7387\uff0c\u5fc5\u7136\u7b49\u4e8e\u4ea7\u751f\u8fd9\u6761\u8def\u5f84\u7684\u90a3\u4e2a\u552f\u4e00\u7684\u566a\u58f0\u5386\u53f2 \\(\\vec{\\xi}(t)\\) \u53d1\u751f\u7684\u6982\u7387\u3002</p> <p>\u5728\u6570\u5b66\u4e0a\uff0c\u8fd9\u5bf9\u5e94\u4e8e\u5728\u6cdb\u51fd\u79ef\u5206\u4e2d\u8fdb\u884c\u4e00\u6b21\u53d8\u91cf\u66ff\u6362\u3002\u6982\u7387\u7684\u6d4b\u5ea6\uff08probability measure\uff09\u5fc5\u987b\u4fdd\u6301\u4e0d\u53d8\uff1a</p> \\[ W_{\\xi}[\\vec{\\xi}] \\mathcal{D}[\\vec{\\xi}] = W_{\\phi}[\\vec{\\phi}] \\mathcal{D}[\\vec{\\phi}] \\] <p>\u7531\u6b64\u53ef\u5f97\uff0c\u573a\u8def\u5f84\u7684\u6982\u7387\u6cdb\u51fd\u4e3a\uff1a</p> \\[ W_{\\phi}[\\vec{\\phi}] = W_{\\xi}[\\vec{\\xi}(\\vec{\\phi})] \\cdot J[\\vec{\\phi}] \\] <p>\u5176\u4e2d\uff0c\\(\\vec{\\xi}(\\vec{\\phi})\\) \u662f\u901a\u8fc7\u6717\u4e4b\u4e07\u65b9\u7a0b\u53cd\u89e3\u51fa\u6765\u7684\u566a\u58f0\uff0c\u800c \\(J[\\vec{\\phi}]\\) \u5219\u662f\u8fd9\u6b21\u53d8\u91cf\u66ff\u6362\u7684\u96c5\u53ef\u6bd4\u6cdb\u51fd\u884c\u5217\u5f0f (Jacobian functional determinant)\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#14","title":"1.4 \u96c5\u53ef\u6bd4\u6cdb\u51fd\u884c\u5217\u5f0f\u8be6\u89e3","text":"<p>\u5728\u666e\u901a\u7684\u591a\u53d8\u91cf\u79ef\u5206\u4e2d\uff0c\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u662f\u63cf\u8ff0\u5750\u6807\u53d8\u6362\u5982\u4f55\u6539\u53d8\u5fae\u5143\u4f53\u79ef\u7684\u5c3a\u5ea6\u56e0\u5b50\u3002\u5728\u65e0\u9650\u7ef4\u7684\u51fd\u6570\u7a7a\u95f4\u4e2d\uff0c\u5176\u6982\u5ff5\u662f\u7c7b\u4f3c\u7684\uff0c\u5b9a\u4e49\u4e3a\uff1a</p> \\[ J[\\vec{\\phi}] = \\left| \\det\\left( \\frac{\\delta \\xi_{\\alpha}(\\vec{x}, t)}{\\delta \\phi_{\\beta}(\\vec{x}', t')} \\right) \\right| \\] <p>\u76f4\u63a5\u8ba1\u7b97\u8fd9\u4e2a\u6cdb\u51fd\u884c\u5217\u5f0f\u662f\u56f0\u96be\u7684\u3002\u9075\u5faa\u8bb2\u5ea7\u4e2d\u7684\u65b9\u6cd5\uff0c\u5148\u5c06\u65f6\u95f4\u79bb\u6563\u5316\u4e3a\u6b65\u957f\u4e3a \\(\\Delta t\\) \u7684\u5c0f\u7247\u6bb5\uff0c\\(t_{\\mu} = t_0 + \\mu \\Delta t\\)\u3002\u79bb\u6563\u5316\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u53ef\u4ee5\u5199\u6210\uff1a</p> \\[ \\frac{\\phi_{\\alpha,\\mu} - \\phi_{\\alpha,\\mu-1}}{\\Delta t} = \\Theta A_{\\alpha,\\mu} + (1 - \\Theta) A_{\\alpha,\\mu-1} + \\xi_{\\alpha,\\mu} \\] <p>\u5176\u4e2d\uff0c\u53c2\u6570 \\(\\Theta \\in [0, 1]\\) \u5b9a\u4e49\u4e86\u5728\u65f6\u95f4\u6b65\u5185\u5982\u4f55\u8bc4\u4f30\u786e\u5b9a\u6027\u9879 \\(A_{\\alpha}\\)\uff0c\u8fd9\u76f4\u63a5\u5173\u8054\u5230\u5728\u7b2c20\u548c21\u8bb2\u4e2d\u8be6\u7ec6\u8ba8\u8bba\u8fc7\u7684\u968f\u673a\u79ef\u5206\u7684\u4e0d\u540c\u8be0\u91ca\uff1a</p> <ul> <li> <p>\\(\\Theta = 0\\) \u5bf9\u5e94 \u4f0a\u85e4 (It\u00f4) \u8be0\u91ca\u3002</p> </li> <li> <p>\\(\\Theta = 1/2\\) \u5bf9\u5e94 \u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947 (Stratonovich) \u8be0\u91ca\u3002</p> </li> </ul> <p>\u4ece\u4e0a\u5f0f\u53cd\u89e3 \\(\\xi_{\\alpha,\\mu}\\)\uff0c\u53ef\u4ee5\u8ba1\u7b97\u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u5143\u7d20 \\(\\frac{\\partial \\xi_{\\alpha,\\mu}}{\\partial \\phi_{\\beta,\\nu}}\\)\u3002\u7531\u4e8e \\(\\xi_{\\alpha,\\mu}\\) \u53ea\u4f9d\u8d56\u4e8e \\(\\phi\\) \u5728\u4e0d\u665a\u4e8e \\(\\mu\\) \u65f6\u523b\u7684\u503c\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0b\u4e09\u89d2\u77e9\u9635\uff0c\u5176\u884c\u5217\u5f0f\u7b49\u4e8e\u5bf9\u89d2\u5143\u4e4b\u79ef\u3002\u5728\u53d6 \\(\\Delta t \\to 0\\) \u7684\u8fde\u7eed\u6781\u9650\u65f6\uff0c\u8fd9\u4e2a\u884c\u5217\u5f0f\u7684\u5bf9\u6570\u4f1a\u7ed9\u4f5c\u7528\u91cf\u5e26\u6765\u4e00\u4e2a\u4fee\u6b63\u9879\uff0c\u5176\u4e00\u822c\u5f62\u5f0f\u4e0e \\(\\int dt \\int d^dx \\frac{\\delta A_{\\alpha}}{\\delta \\phi_{\\alpha}}\\) \u6709\u5173\u3002</p> <p>\u8fd9\u4e2a\u7ed3\u679c\u770b\u8d77\u6765\u76f8\u5f53\u590d\u6742\u3002\u7136\u800c\uff0c\u672c\u8bb2\u6240\u505a\u7684\u52a0\u6027\u566a\u58f0\u5047\u8bbe\u6781\u5927\u5730\u7b80\u5316\u4e86\u95ee\u9898\u3002</p> <ul> <li> <p>\u5bf9\u4e8e\u4e58\u6027\u566a\u58f0\uff08\u5373 \\(A\\) \u6216 \\(N\\) \u4f9d\u8d56\u4e8e \\(\\phi\\)\uff09\uff0c\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u4f1a\u5f15\u5165\u4e00\u4e2a\u4f9d\u8d56\u4e8e \\(\\phi\\) \u7684\u590d\u6742\u9879\uff0c\u5bfc\u81f4\u4f0a\u85e4\u548c\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u7b49\u4e0d\u540c\u8be0\u91ca\u4e4b\u95f4\u51fa\u73b0\u672c\u8d28\u5dee\u5f02\uff08\u5982\u7b2c22\u8bb2\u6240\u793a\uff09\u3002</p> </li> <li> <p>\u4f46\u5bf9\u4e8e\u52a0\u6027\u566a\u58f0\uff0c\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u4e2d\u7684 \\(\\frac{\\delta A_{\\alpha}}{\\delta \\phi_{\\beta}}\\) \u9879\u82e5\u4e3a\u5e38\u6570\u6216\u96f6\uff08\u4f8b\u5982 \\(A\\) \u662f \\(\\phi\\) \u7684\u7ebf\u6027\u6cdb\u51fd\uff09\uff0c\u5219\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u672c\u8eab\u53d8\u4e3a\u4e00\u4e2a\u4e0e\u8def\u5f84 \\(\\vec{\\phi}\\) \u65e0\u5173\u7684\u5e38\u6570\u3002\u8fd9\u4e2a\u5e38\u6570\u53ef\u4ee5\u88ab\u5438\u6536\u5230\u603b\u7684\u5f52\u4e00\u5316\u56e0\u5b50\u4e2d\uff0c\u56e0\u6b64\u5728\u8ba1\u7b97\u76f8\u5bf9\u6982\u7387\u65f6\u53ef\u4ee5\u88ab\u5ffd\u7565\u3002</p> </li> </ul> <p>\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u7b80\u5316\uff0c\u4f7f\u540e\u7eed\u80fd\u591f\u4e13\u6ce8\u4e8e\u8def\u5f84\u79ef\u5206\u7684\u6838\u5fc3\u7269\u7406\uff0c\u800c\u6682\u65f6\u907f\u5f00\u968f\u673a\u5fae\u79ef\u5206\u7684\u5168\u90e8\u590d\u6742\u6027\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#2-","title":"2. \u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\uff1a\u968f\u673a\u8def\u5f84\u7684\u201c\u4f5c\u7528\u91cf\u201d","text":"<p>\u4e0a\u4e00\u8282\u7684\u63a8\u5bfc\u5df2\u7ecf\u4e3a\u6784\u5efa\u573a\u8def\u5f84\u7684\u6982\u7387\u6cdb\u51fd \\(W_{\\phi}[\\vec{\\phi}]\\) \u5907\u9f50\u4e86\u6240\u6709\u8981\u7d20\u3002\u6838\u5fc3\u6b65\u9aa4\u662f\u5c06\u566a\u58f0\u7684\u6982\u7387\u6cdb\u51fd \\(W_{\\xi}[\\vec{\\xi}]\\) \u901a\u8fc7\u6717\u4e4b\u4e07\u65b9\u7a0b\u8fd9\u4e00\u201c\u7ffb\u8bd1\u5668\u201d\uff0c\u6539\u5199\u4e3a\u573a\u53d8\u91cf\u7684\u8bed\u8a00\u3002\u672c\u8282\u5c06\u5b8c\u6210\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u5e76\u9610\u91ca\u5176\u6700\u7ec8\u7ed3\u679c\u2014\u2014\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u2014\u2014\u5728\u968f\u673a\u52a8\u529b\u5b66\u4e2d\u6240\u626e\u6f14\u7684\u3001\u7c7b\u4f3c\u4e8e\u7ecf\u5178\u529b\u5b66\u4e2d\u201c\u4f5c\u7528\u91cf\u201d\u89d2\u8272\u7684\u7269\u7406\u610f\u4e49\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#21","title":"2.1 \u7ec4\u88c5\u6700\u7ec8\u7684\u6982\u7387\u6cdb\u51fd","text":"<p>\u5c06\u6717\u4e4b\u4e07\u65b9\u7a0b\u91cd\u65b0\u6392\u5217\u5f97\u5230\u7684\u5173\u7cfb\u5f0f \\(\\xi_{\\alpha} = \\partial_t \\phi_{\\alpha} - A_{\\alpha}[\\vec{\\phi}]\\)\uff0c\u76f4\u63a5\u4ee3\u51651.2\u8282\u4e2d\u566a\u58f0\u7684\u6982\u7387\u6cdb\u51fd \\(W_{\\xi}[\\vec{\\xi}]\\) \u7684\u6307\u6570\u90e8\u5206\u3002\u540c\u65f6\uff0c\u59821.4\u8282\u6240\u8ba8\u8bba\uff0c\u5bf9\u4e8e\u52a0\u6027\u566a\u58f0\uff0c\u96c5\u53ef\u6bd4\u6cdb\u51fd\u884c\u5217\u5f0f\u53ef\u88ab\u89c6\u4e3a\u4e00\u4e2a\u4e0e\u8def\u5f84\u65e0\u5173\u7684\u5e38\u6570\uff0c\u5e76\u5438\u6536\u5230\u603b\u7684\u5f52\u4e00\u5316\u56e0\u5b50 \\(N_{\\phi}\\) \u4e2d\u3002</p> <p>\u7531\u6b64\uff0c\u4fbf\u5f97\u5230\u4e86\u63cf\u8ff0\u573a\u8def\u5f84 \\(\\vec{\\phi}\\) \u7684\u6700\u7ec8\u6982\u7387\u6cdb\u51fd\uff1a</p> \\[ W_{\\phi}[\\vec{\\phi}] = N_{\\phi} \\exp(-G[\\vec{\\phi}]) \\] <p>\u5176\u4e2d\uff0c\\(G[\\vec{\\phi}]\\) \u88ab\u79f0\u4e3a\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd (Onsager-Machlupp Functional) \uff0c\u5176\u5177\u4f53\u5f62\u5f0f\u4e3a\uff1a</p> \\[ G[\\vec{\\phi}] = \\frac{1}{2} \\sum_{\\alpha\\beta} \\int_{t_0}^{t_f} dt \\int d^d x \\, (\\partial_t \\phi_{\\alpha} - A_{\\alpha}[\\vec{\\phi}]) N_{\\alpha\\beta}^{-1} (\\partial_t \\phi_{\\beta} - A_{\\beta}[\\vec{\\phi}]) \\] <p>\u8fd9\u4e2a\u6cdb\u51fd\u662f\u8fd9\u8282\u8bfe\u8981\u4ecb\u7ecd\u7684\u6570\u5b66\u6838\u5fc3\u3002\u5b83\u4e3a\u4ece\u521d\u59cb\u65f6\u523b \\(t_0\\) \u5230\u7ec8\u6b62\u65f6\u523b \\(t_f\\) \u7684\u4efb\u610f\u4e00\u6761\u5b8c\u6574\u7684\u573a\u6f14\u5316\u5386\u53f2 \\(\\vec{\\phi}(\\vec{x},t)\\)\uff0c\u8d4b\u4e88\u4e86\u4e00\u4e2a\u6807\u91cf\u503c\uff0c\u8be5\u503c\u7684\u8d1f\u6307\u6570\u51b3\u5b9a\u4e86\u8fd9\u6761\u5386\u53f2\u51fa\u73b0\u7684\u7edf\u8ba1\u6743\u91cd\u3002</p> <p>\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u662f\u57281953\u5e74\u7531\u62c9\u5c14\u65af\u00b7\u6602\u8428\u683c\uff08Lars Onsager\uff09\u548c\u65af\u7279\u51e1\u00b7\u9a6c\u8d6b\u5362\u666e(Stefan Machlup) \u63d0\u51fa\u7684\u3002\u5176\u7269\u7406\u672c\u8d28\u662f\u5c06\u7ecf\u5178\u529b\u5b66\u4e2d\u7684\u201c\u6700\u5c0f\u4f5c\u7528\u91cf\u539f\u7406\u201d\u63a8\u5e7f\u5230\u968f\u673a\u52a8\u529b\u5b66\u9886\u57df\uff0c\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u4e00\u4e2a\u7cfb\u7edf\u7684\u968f\u673a\u6f14\u5316\u8def\u5f84\u867d\u7136\u6709\u65e0\u7a77\u591a\u6761\uff0c\u4f46\u6bcf\u4e00\u6761\u8def\u5f84\u90fd\u6709\u4e00\u4e2a\u53d1\u751f\u7684\u6982\u7387\uff0c\u8fd9\u4e2a\u6982\u7387\u6b63\u6bd4\u4e8e \\(e^{-S_{OM}}\\)\uff0c\u5176\u4e2d\\(S_{OM}\\)\u5c31\u662f\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u4f5c\u7528\u91cf\u3002\u8fd9\u4e2a\u4f5c\u7528\u91cf\u4e0d\u4ec5\u91cf\u5316\u4e86\u8def\u5f84\u504f\u79bb\u5e73\u5747\u8fd0\u52a8\u8f68\u8ff9\u7684\u201c\u4ee3\u4ef7\u201d\uff0c\u8fd8\u5305\u542b\u4e00\u4e2a\u4e0e\u52bf\u80fd\u666f\u89c2\u66f2\u7387\u76f8\u5173\u7684\u4fee\u6b63\u9879\uff0c\u4ece\u800c\u6df1\u523b\u63ed\u793a\u4e86\u975e\u5e73\u8861\u6001\u7cfb\u7edf\u4e2d\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u7684\u7834\u7f3a\u4e0e\u8def\u5f84\u6982\u7387\u7684\u5173\u7cfb\u3002</p> <p>\u5728\u5177\u4f53\u5e94\u7528\u4e0a\uff0c\u8be5\u6cdb\u51fd\u5df2\u6210\u4e3a\u7406\u89e3\u566a\u58f0\u9a71\u52a8\u7cfb\u7edf\u7684\u57fa\u7840\u5de5\u5177\uff0c\u5e7f\u6cdb\u7528\u4e8e\u7269\u7406\u3001\u751f\u7269\u7269\u7406\uff08\u5982\u5206\u6790\u5355\u5206\u5b50\u8fd0\u52a8\u8f68\u8ff9\uff09\u3001\u8f6f\u7269\u8d28\u52a8\u529b\u5b66\u4ee5\u53ca\u8def\u5f84\u91c7\u6837\u7b97\u6cd5\u7684\u8bbe\u8ba1\u4e2d\uff0c\u7279\u522b\u662f\u5728\u8ba1\u7b97\u7cfb\u7edf\u4ece\u4e00\u4e2a\u7a33\u5b9a\u6001\u8dc3\u8fc1\u5230\u53e6\u4e00\u4e2a\u7a33\u5b9a\u6001\u7684\u201c\u6700\u53ef\u51e0\u8def\u5f84\u201d\uff08\u77ac\u5b50\uff09\u3001\u8fc7\u6e21\u6001\u548c\u71b5\u4ea7\u751f\u7b49\u5173\u952e\u95ee\u9898\u4e0a\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#22-","title":"2.2 \u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u7684\u7269\u7406\u610f\u4e49","text":"<p>\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd \\(G[\\vec{\\phi}]\\) \u5728\u968f\u673a\u52a8\u529b\u5b66\u4e2d\u7684\u5730\u4f4d\uff0c\u5b8c\u5168\u7c7b\u4f3c\u4e8e\u4f5c\u7528\u91cf \\(S\\) \u5728\u7ecf\u5178\u529b\u5b66\u548c\u91cf\u5b50\u529b\u5b66\u4e2d\u7684\u5730\u4f4d\u3002\u5b83\u4e3a\u6bcf\u4e00\u6761\u53ef\u80fd\u7684\u7cfb\u7edf\u6f14\u5316\u8def\u5f84\u8d4b\u4e88\u4e86\u4e00\u4e2a\u6570\u503c\uff0c\u8fd9\u4e2a\u6570\u503c\u51b3\u5b9a\u4e86\u8be5\u8def\u5f84\u7684\u76f8\u5bf9\u6982\u7387\u3002</p> <ul> <li> <p>\u8def\u5f84\u7684\u201c\u4ee3\u4ef7\u201d\uff1a\u89c2\u5bdf \\(G[\\vec{\\phi}]\\) \u7684\u8868\u8fbe\u5f0f\u53ef\u4ee5\u53d1\u73b0\uff0c\u62ec\u53f7\u5185\u7684\u9879 \\(\\partial_t \\phi_{\\alpha} - A_{\\alpha}\\) \u6b63\u662f\u4ea7\u751f\u8be5\u8def\u5f84 \\(\\vec{\\phi}(t)\\) \u6240\u5fc5\u9700\u7684\u566a\u58f0 \\(\\xi_{\\alpha}\\)\u3002\u56e0\u6b64\uff0c\\(G[\\vec{\\phi}]\\) \u672c\u8d28\u4e0a\u662f\u5bf9\u8fd9\u6761\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u566a\u58f0\u5386\u53f2\u201c\u5927\u5c0f\u201d\u7684\u79ef\u5206\u3002\u9700\u8981\u975e\u5e38\u5267\u70c8\u6216\u201c\u4e0d\u592a\u53ef\u80fd\u201d\u7684\u566a\u58f0\u624d\u80fd\u5b9e\u73b0\u7684\u8def\u5f84\uff0c\u5176 \\(G[\\vec{\\phi}]\\) \u503c\u5c31\u5f88\u5927\uff0c\u5176\u6982\u7387 \\(e^{-G[\\phi]}\\) \u4e5f\u56e0\u6b64\u88ab\u6307\u6570\u7ea7\u5730\u6291\u5236\u4e86\u3002</p> </li> <li> <p>\u6700\u53ef\u51e0\u8def\u5f84 (Most Probable Path)\uff1a\u7cfb\u7edf\u7684\u6700\u53ef\u51e0\u8def\u5f84\u662f\u4f7f \\(G[\\vec{\\phi}]\\) \u53d6\u6700\u5c0f\u503c\u7684\u8def\u5f84\u3002\u901a\u8fc7\u53d8\u5206\u6cd5\uff0c\u4ee4 \\(\\frac{\\delta G}{\\delta \\vec{\\phi}} = 0\\)\uff0c\u5f97\u5230\u7684\u8fd0\u52a8\u65b9\u7a0b\u6070\u597d\u662f\u4f7f\u5f97\u79ef\u5206\u9879\u4e3a\u96f6\u7684\u786e\u5b9a\u6027\u3001\u65e0\u566a\u58f0\u7684\u8fd0\u52a8\u65b9\u7a0b\uff1a     $$     \\partial_t \\phi_{\\alpha} = A_{\\alpha}[\\vec{\\phi}]     $$     \u8fd9\u4e0e\u7ecf\u5178\u529b\u5b66\u4e2d\u7684\u6700\u5c0f\u4f5c\u7528\u91cf\u539f\u7406\u5b8c\u5168\u5bf9\u5e94\uff0c\u5373\u7cfb\u7edf\u7684\u7ecf\u5178\u8def\u5f84\u662f\u4f7f\u4f5c\u7528\u91cf\u53d6\u6781\u503c\u7684\u8def\u5f84\u3002\u5728\u968f\u673a\u52a8\u529b\u5b66\u4e2d\uff0c\u6700\u53ef\u51e0\u8def\u5f84\u5c31\u662f\u90a3\u6761\u5b8c\u5168\u7531\u786e\u5b9a\u6027\u6f02\u79fb\u9a71\u52a8\u7684\u201c\u7ecf\u5178\u201d\u8f68\u8ff9\u3002</p> </li> </ul> <p>\u4e3a\u4e86\u66f4\u6df1\u523b\u5730\u7406\u89e3\u8fd9\u4e00\u6982\u5ff5\uff0c\u53ef\u4ee5\u5c06\u4e0d\u540c\u7269\u7406\u9886\u57df\u7684\u8def\u5f84\u79ef\u5206\u8868\u8ff0\u8fdb\u884c\u5bf9\u6bd4\u3002</p> \u7279\u5f81 \u968f\u673a\u52a8\u529b\u5b66\uff08\u672c\u8bb2\uff09 \u91cf\u5b50\u529b\u5b66\uff08\u8d39\u66fc\uff09 \u7ecf\u5178\u529b\u5b66\uff08\u54c8\u5bc6\u987f\u539f\u7406\uff09 \u52a8\u529b\u5b66\u53d8\u91cf \u573a\u8def\u5f84 \\(\\phi(x, t)\\) \u7c92\u5b50\u8def\u5f84 \\(q(t)\\) \u7ecf\u5178\u8f68\u8ff9 \\(q_{cl}(t)\\) \u6838\u5fc3\u6cdb\u51fd Onsager-Machlup\u6cdb\u51fd \\(G[\\phi]\\) \u4f5c\u7528\u91cf \\(S[q]\\) \u4f5c\u7528\u91cf \\(S[q]\\) \u8def\u5f84\u6743\u91cd \u6982\u7387 \\(P[\\phi] \\propto \\exp(-G[\\phi])\\) \u6982\u7387\u5e45 \\(A[q] \\propto \\exp(iS[q]/\\hbar)\\) \u786e\u5b9a\u6027\uff08\u53ea\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff09 \u57fa\u672c\u539f\u7406 \u5bf9\u6240\u6709\u8def\u5f84\u6c42\u548c \u5bf9\u6240\u6709\u8def\u5f84\u6c42\u548c\uff08\u91cf\u5b50\u53e0\u52a0\uff09 \u6700\u5c0f\u4f5c\u7528\u91cf\u539f\u7406\uff08\\(\\delta S = 0\\)\uff09 \u6700\u53ef\u51e0\u8def\u5f84 \u4f7f \\(G[\\phi]\\) \u6700\u5c0f\u7684\u8def\u5f84\uff08\u7ecf\u5178\u8def\u5f84\uff09 \u4f7f \\(S[q]\\) \u53d6\u6781\u503c\u7684\u8def\u5f84\uff08\u7ecf\u5178\u6781\u9650\uff09 \u552f\u4e00\u6ee1\u8db3 \\(\\delta S = 0\\) \u7684\u8def\u5f84 <p>\u8fd9\u5f20\u8868\u5c55\u793a\u4e86\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u4f5c\u4e3a\u968f\u673a\u8def\u5f84\u201c\u4f5c\u7528\u91cf\u201d\u7684\u6df1\u523b\u7c7b\u6bd4\u3002\u5b83\u5c06\u968f\u673a\u8fc7\u7a0b\u7684\u7814\u7a76\u63d0\u5347\u5230\u4e86\u4e00\u4e2a\u4e0e\u7ecf\u5178\u548c\u91cf\u5b50\u529b\u5b66\u5e73\u884c\u7684\u7406\u8bba\u9ad8\u5ea6\uff0c\u4e3a\u540e\u7eed\u5229\u7528\u5bf9\u79f0\u6027\u539f\u7406\u5206\u6790\u7cfb\u7edf\u884c\u4e3a\u5960\u5b9a\u4e86\u57fa\u7840\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#3","title":"3. \u5bf9\u79f0\u6027\u4e0e\u63a8\u8bba\uff1a\u7ec6\u81f4\u5e73\u8861\u4e0e\u65f6\u95f4\u53cd\u6f14","text":"<p>\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u4e3a\u5206\u6790\u968f\u673a\u8def\u5f84\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u8d77\u70b9\u3002\u7136\u800c\uff0c\u5176\u771f\u6b63\u7684\u5a01\u529b\u4f53\u73b0\u5728\u5c06\u5b83\u4e0e\u7269\u7406\u5b66\u7684\u57fa\u672c\u5bf9\u79f0\u6027\u539f\u7406\u76f8\u7ed3\u5408\u3002\u672c\u8282\u5c06\u8def\u5f84\u79ef\u5206\u5f62\u5f0f\u5e94\u7528\u4e8e\u5904\u4e8e\u70ed\u5e73\u8861 (thermal equilibrium) \u7684\u7cfb\u7edf\uff0c\u5e76\u8fd0\u7528\u65f6\u95f4\u53cd\u6f14\u4e0d\u53d8\u6027 (time-reversal invariance) \u8fd9\u4e00\u57fa\u672c\u539f\u7406\u3002\u8fd9\u5c06\u5bfc\u51fa\u4e00\u4e2a\u5173\u4e8e\u8def\u5f84\u6982\u7387\u7684\u6df1\u523b\u7ea6\u675f\u2014\u2014\u7ec6\u81f4\u5e73\u8861\u539f\u7406 (Principle of Detailed Balance) \uff0c\u5e76\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u8fde\u63a5\u8def\u5f84\u201c\u4f5c\u7528\u91cf\u201d\u4e0e\u7cfb\u7edf\u70ed\u529b\u5b66\u6027\u8d28\u7684\u6838\u5fc3\u5173\u7cfb\u5f0f\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#31","title":"3.1 \u70ed\u5e73\u8861\u7684\u7269\u7406\u5185\u6db5","text":"<p>\u70ed\u5e73\u8861\u6001\u7684\u4e00\u4e2a\u6839\u672c\u6027\u8d28\u662f\u65f6\u95f4\u53cd\u6f14\u4e0d\u53d8\u6027\uff0c\u6216\u79f0\u5fae\u89c2\u53ef\u9006\u6027 (microscopic reversibility) \u3002\u5c3d\u7ba1\u5b8f\u89c2\u4e0a\u5b58\u5728\u4e0d\u53ef\u9006\u8fc7\u7a0b\uff08\u5982\u70ed\u91cf\u4ece\u9ad8\u6e29\u7269\u4f53\u4f20\u5230\u4f4e\u6e29\u7269\u4f53\uff09\uff0c\u4f46\u63a7\u5236\u7cfb\u7edf\u5fae\u89c2\u7c92\u5b50\u8fd0\u52a8\u7684\u57fa\u672c\u7269\u7406\u5b9a\u5f8b\uff08\u5982\u725b\u987f\u529b\u5b66\u3001\u859b\u5b9a\u8c14\u65b9\u7a0b\uff09\u5728\u65f6\u95f4\u53cd\u6f14\uff08\\(t \\to -t\\)\uff09\u4e0b\u662f\u4e0d\u53d8\u7684\u3002</p> <p>\u8fd9\u4e00\u5fae\u89c2\u5bf9\u79f0\u6027\u5728\u5b8f\u89c2\u7edf\u8ba1\u5c42\u9762\u4f53\u73b0\u4e3a\u7ec6\u81f4\u5e73\u8861\u539f\u7406 \u3002\u8be5\u539f\u7406\u6307\u51fa\uff0c\u5728\u5e73\u8861\u6001\u4e0b\uff0c\u4efb\u4f55\u4e00\u4e2a\u5143\u8fc7\u7a0b\uff08\u4f8b\u5982\uff0c\u4ece\u72b6\u6001A\u5230\u72b6\u6001B\u7684\u8dc3\u8fc1\uff09\u7684\u901f\u7387\u90fd\u7b49\u4e8e\u5176\u9006\u8fc7\u7a0b\uff08\u4ece\u72b6\u6001B\u5230\u72b6\u6001A\u7684\u8dc3\u8fc1\uff09\u7684\u901f\u7387\u3002\u5bf9\u4e8e\u8def\u5f84\u800c\u8a00\uff0c\u8fd9\u610f\u5473\u7740\uff0c\u5728\u8003\u8651\u4e86\u521d\u672b\u6001\u7684\u5e73\u8861\u6982\u7387\u5206\u5e03\u540e\uff0c\u89c2\u5bdf\u5230\u4e00\u6761\u201c\u524d\u8fdb\u201d\u8f68\u8ff9\u7684\u8054\u5408\u6982\u7387\uff0c\u5e94\u8be5\u7b49\u4e8e\u89c2\u5bdf\u5230\u5176\u65f6\u95f4\u53cd\u6f14\u8f68\u8ff9\u7684\u8054\u5408\u6982\u7387 \u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#32","title":"3.2 \u8def\u5f84\u7684\u7ec6\u81f4\u5e73\u8861\u8868\u8ff0","text":"<p>\u4e3a\u4e86\u7cbe\u786e\u5730\u8868\u8ff0\u8def\u5f84\u7684\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\uff0c\u9996\u5148\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u201c\u524d\u8fdb\u201d\u8def\u5f84\u7684\u8054\u5408\u6982\u7387\u3002\u4ece\u4e00\u4e2a\u521d\u59cb\u573a\u6784\u578b \\(\\vec{\\phi}_0\\) \u5f00\u59cb\uff0c\u6f14\u5316\u5230\u672b\u6001 \\(\\vec{\\phi}_f\\) \u7684\u8054\u5408\u6982\u7387\u53ef\u4ee5\u5199\u6210\u6761\u4ef6\u6982\u7387\u4e0e\u521d\u59cb\u6982\u7387\u7684\u4e58\u79ef \uff1a</p> \\[ P(\\vec{\\phi}_0, t_0; \\vec{\\phi}_f, t_f) = \\langle \\vec{\\phi}_f | \\vec{\\phi}_0 \\rangle \\cdot P_{eq}[\\vec{\\phi}_0] \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li> <p>\\(P_{eq}[\\vec{\\phi}_0]\\) \u662f\u7cfb\u7edf\u5904\u4e8e\u521d\u59cb\u6001 \\(\\vec{\\phi}_0\\) \u7684\u5e73\u8861\u6982\u7387\u3002\u5bf9\u4e8e\u4e00\u4e2a\u4e0e\u6e29\u5ea6\u4e3a \\(T\\) \u7684\u70ed\u5e93\u63a5\u89e6\u7684\u7cfb\u7edf\uff0c\u5b83\u7531\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u7ed9\u51fa \uff1a     $$     P_{\\text{eq}}[\\vec{\\phi}] \\propto \\exp(-\\beta F[\\vec{\\phi}])     $$     \u8fd9\u91cc\u7684 \\(F[\\vec{\\phi}]\\) \u662f\u7cfb\u7edf\u7684\u81ea\u7531\u80fd\u6cdb\u51fd\uff0c\u800c \\(\\beta = 1/(k_B T)\\) \u3002</p> </li> <li> <p>\\(\\langle \\vec{\\phi}_f | \\vec{\\phi}_0 \\rangle\\) \u662f\u4ece \\(\\vec{\\phi}_0\\) \u5230 \\(\\vec{\\phi}_f\\) \u7684\u6761\u4ef6\u8dc3\u8fc1\u6982\u7387\u5e45\u3002\u5b83\u6b63\u662f\u7531\u8def\u5f84\u79ef\u5206\u7ed9\u51fa\u7684\uff0c\u5373\u5bf9\u6240\u6709\u8fde\u63a5\u521d\u672b\u6001\u7684\u8def\u5f84\uff0c\u5bf9\u5176\u7edf\u8ba1\u6743\u91cd \\(e^{-G[\\vec{\\phi}]}\\) \u8fdb\u884c\u6c42\u548c\uff1a</p> \\[ \\langle \\vec{\\phi}_f | \\vec{\\phi}_0 \\rangle = \\int_{\\vec{\\phi}(t_0)=\\vec{\\phi}_0}^{\\vec{\\phi}(t_f)=\\vec{\\phi}_f} \\mathcal{D}[\\vec{\\phi}] \\exp(-G[\\vec{\\phi}]) \\] </li> </ul> <p>\u63a5\u4e0b\u6765\uff0c\u5b9a\u4e49\u65f6\u95f4\u53cd\u6f14\u8def\u5f84 \\(\\vec{\\phi}^R(t)\\)\u3002\u5bf9\u4e8e\u4e00\u4e2a\u573a\u5206\u91cf \\(\\phi_{\\alpha}\\)\uff0c\u5176\u53cd\u6f14\u8def\u5f84\u4e3a \uff1a $$ \\phi^R_{\\alpha}(\\vec{x}, t) = \\epsilon_{\\alpha} \\phi_{\\alpha}(\\vec{x}, t_f - t) $$ \u8fd9\u91cc\u7684 \\(\\epsilon_{\\alpha} = \\pm 1\\) \u662f\u8be5\u573a\u5206\u91cf\u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u7684\u5b87\u79f0 (parity) \u3002\u4f8b\u5982\uff0c\u4f4d\u7f6e\u548c\u5bc6\u5ea6\u662f\u5076\u5b87\u79f0\uff08\\(\\epsilon = +1\\)\uff09\uff0c\u800c\u901f\u5ea6\u548c\u52a8\u91cf\u662f\u5947\u5b87\u79f0\uff08\\(\\epsilon = -1\\)\uff09\u3002</p> <p>\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u8981\u6c42\uff0c\u524d\u8fdb\u8def\u5f84\u7684\u8054\u5408\u6982\u7387\u7b49\u4e8e\u5176\u65f6\u95f4\u53cd\u6f14\u8def\u5f84\u7684\u8054\u5408\u6982\u7387 \uff1a</p> \\[ \\langle \\vec{\\phi}_f | \\vec{\\phi}_0 \\rangle P_{eq}[\\vec{\\phi}_0] = \\langle \\vec{\\phi}_0 | \\vec{\\phi}_f \\rangle P_{eq}[\\vec{\\phi}_f] \\] <p>\u6ce8\u610f\uff0c\u6839\u636e\u8bfe\u5802\u4e2d\u7684\u677f\u4e66\uff0c\u53f3\u4fa7\u7684 \\(\\langle \\vec{\\phi}_0 | \\vec{\\phi}_f \\rangle\\) \u662f\u5bf9\u6240\u6709\u53cd\u6f14\u8def\u5f84\u6c42\u548c\u5f97\u5230\u7684\u4ece \\(\\vec{\\phi}_f\\) \u5230 \\(\\vec{\\phi}_0\\) \u7684\u8dc3\u8fc1\u6982\u7387\u5e45 \u3002\u5c06\u6982\u7387\u7684\u6307\u6570\u5f62\u5f0f\u4ee3\u5165\uff0c\u5e76\u5bf9\u4e24\u8fb9\u53d6\u5bf9\u6570\uff0c\u4fbf\u5f97\u5230\u4e00\u4e2a\u5173\u4e8e\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u548c\u81ea\u7531\u80fd\u6cdb\u51fd\u7684\u6838\u5fc3\u5173\u7cfb\u5f0f \uff1a</p> \\[ G[\\vec{\\phi}] + \\beta F[\\vec{\\phi}_0] = G_R[\\vec{\\phi}] + \\beta F[\\vec{\\phi}_f] \\] <p>\u8fd9\u91cc\u7684 \\(G_R[\\vec{\\phi}]\\) \u662f\u5728\u65f6\u95f4\u53cd\u6f14\u8def\u5f84\u4e0a\u8ba1\u7b97\u5f97\u5230\u7684\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u3002\u8fd9\u4e2a\u65b9\u7a0b\u662f\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u5728\u8def\u5f84\u6982\u7387\u5c42\u9762\u4e0a\u7684\u76f4\u63a5\u4f53\u73b0 \u3002\u5b83\u5b9a\u91cf\u5730\u63ed\u793a\u4e86\uff0c\u4e3a\u4e86\u7ef4\u6301\u5e73\u8861\u6001\u7684\u5bf9\u79f0\u6027\uff0c\u8def\u5f84\u7684\u201c\u4f5c\u7528\u91cf\u201d \\(G[\\vec{\\phi}]\\) \u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u7684\u53d8\u5316\uff0c\u5fc5\u987b\u4e0e\u7cfb\u7edf\u8fb9\u754c\u4e0a\u81ea\u7531\u80fd\u7684\u53d8\u5316\u7cbe\u786e\u5730\u76f8\u4e92\u62b5\u507f\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#4-a-","title":"4. \u5e94\u7528\uff1a\u4e3a\u6a21\u578bA\u63a8\u5bfc\u6da8\u843d-\u8017\u6563\u5b9a\u7406","text":"<p>\u524d\u51e0\u8282\u5efa\u7acb\u7684\u8def\u5f84\u79ef\u5206\u5f62\u5f0f\u548c\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\uff0c\u6784\u6210\u4e86\u4e00\u4e2a\u5206\u6790\u8fd1\u5e73\u8861\u968f\u673a\u52a8\u529b\u5b66\u7684\u666e\u9002\u6846\u67b6\u3002\u4e3a\u4e86\u5c55\u793a\u5176\u5f3a\u5927\u5a01\u529b\uff0c\u672c\u8282\u5c06\u5176\u5e94\u7528\u4e8e\u4e00\u4e2a\u5177\u4f53\u7684\u7269\u7406\u6a21\u578b\u2014\u2014\u6a21\u578bA\uff0c\u5e76\u4ece\u4e2d\u63a8\u5bfc\u51fa\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u4e00\u4e2a\u57fa\u77f3\uff1a\u6da8\u843d-\u8017\u6563\u5b9a\u7406\uff08Fluctuation-Dissipation Theorem\uff09\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#41-a","title":"4.1 \u6a21\u578bA\u52a8\u529b\u5b66","text":"<p>\u6a21\u578bA\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u975e\u5b88\u6052\u5e8f\u53c2\u91cf\uff08\u5982\u5404\u5411\u540c\u6027\u94c1\u78c1\u4f53\u4e2d\u7684\u78c1\u5316\u5f3a\u5ea6\uff09\u7684\u7eaf\u7cb9\u5f1b\u8c6b\u52a8\u529b\u5b66\u3002\u5176\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e3a\uff1a</p> \\[ \\partial_t \\phi = -L \\frac{\\delta F}{\\delta \\phi} + \\xi \\] <p>\u8fd9\u91cc\u7684\u786e\u5b9a\u6027\u6f02\u79fb\u9879\u662f \\(A = -L \\frac{\\delta F}{\\delta \\phi}\\)\u3002 * \\(L\\) \u662f\u4e00\u4e2a\u52a8\u529b\u5b66\u7cfb\u6570\uff0c\u79f0\u4e3a\u6602\u8428\u683c\u7cfb\u6570\uff0c\u4e0e\u7cfb\u7edf\u7684\u8fc1\u79fb\u7387\uff08mobility\uff09\u6216\u8017\u6563\u5f3a\u5ea6\u6709\u5173\u3002 * \\(\\xi\\) \u662f\u9ad8\u65af\u767d\u566a\u58f0\uff0c\u5176\u5f3a\u5ea6\u4e3a \\(\\langle \\xi(\\vec{x},t) \\xi(\\vec{x}',t') \\rangle = N \\delta(\\vec{x}-\\vec{x}')\\delta(t-t')\\)\u3002\u4e3a\u7b80\u5316\u63a8\u5bfc\uff0c\u8fd9\u91cc\u8003\u8651\u7684\u662f\u5355\u5206\u91cf\u6807\u91cf\u573a\uff0c\u56e0\u6b64\u566a\u58f0\u5f3a\u5ea6 \\(N\\) \u662f\u4e00\u4e2a\u6807\u91cf\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#42","title":"4.2 \u8ba1\u7b97\u524d\u8fdb\u4e0e\u540e\u9000\u8def\u5f84\u7684\u201c\u4f5c\u7528\u91cf\u201d","text":"<p>\u9996\u5148\uff0c\u5c06\u6a21\u578bA\u7684\u6f02\u79fb\u9879 \\(A\\) \u4ee3\u5165\u57282.1\u8282\u5b9a\u4e49\u7684\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u4e2d\uff0c\u5f97\u5230\u201c\u524d\u8fdb\u8def\u5f84\u201d\u7684\u201c\u4f5c\u7528\u91cf\u201d \\(G[\\phi]\\)\uff1a</p> \\[ G[\\phi] = \\frac{1}{2N} \\int_{t_0}^{t_f} dt \\int d^dx \\, \\left(\\partial_t \\phi + L \\frac{\\delta F}{\\delta \\phi}\\right)^2 \\] <p>\u63a5\u4e0b\u6765\u8ba1\u7b97\u65f6\u95f4\u53cd\u6f14\u8def\u5f84\u7684\u201c\u4f5c\u7528\u91cf\u201d \\(G_R[\\phi]\\)\u3002\u5bf9\u4e8e\u78c1\u5316\u5f3a\u5ea6\u8fd9\u7c7b\u5e8f\u53c2\u91cf\uff0c\u5176\u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u662f\u5076\u5b87\u79f0\u7684\uff0c\u5373 \\(\\epsilon = +1\\)\uff0c\u6240\u4ee5\u53cd\u6f14\u8def\u5f84\u4e3a \\(\\phi^R(t) = \\phi(t_f - t)\\)\u3002\u65f6\u95f4\u5bfc\u6570\u9879\u53d8\u4e3a \\(\\partial_t \\phi^R(t) = -\\partial_{\\tilde{t}} \\phi(\\tilde{t})\\)\uff08\u5176\u4e2d \\(\\tilde{t} = t_f - t\\)\uff09\u3002\u56e0\u6b64\uff0c\u53cd\u6f14\u8def\u5f84\u7684\u201c\u4f5c\u7528\u91cf\u201d\u4e3a\uff1a</p> \\[ G_R[\\phi] = \\frac{1}{2N} \\int_{t_0}^{t_f} d\\tilde{t} \\int d^dx \\, \\left(-\\partial_{\\tilde{t}} \\phi + L \\frac{\\delta F}{\\delta \\phi}\\right)^2 \\]"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#43-","title":"4.3 \u6700\u7ec8\u63a8\u5bfc\uff1a\u7231\u56e0\u65af\u5766-\u6602\u8428\u683c\u5173\u7cfb","text":"<p>\u5c06\u4e0a\u8ff0 \\(G[\\phi]\\) \u548c \\(G_R[\\phi]\\) \u7684\u8868\u8fbe\u5f0f\u4ee3\u51653.2\u8282\u5bfc\u51fa\u7684\u7ec6\u81f4\u5e73\u8861\u6838\u5fc3\u5173\u7cfb\u5f0f \\(G[\\phi] - G_R[\\phi] = \\beta (F[\\phi_f] - F[\\phi_0])\\) \u4e2d\uff1a</p> \\[ \\frac{1}{2N} \\int dt d^dx \\left[ \\left(\\partial_t \\phi + L \\frac{\\delta F}{\\delta \\phi}\\right)^2 - \\left(-\\partial_t \\phi + L \\frac{\\delta F}{\\delta \\phi}\\right)^2 \\right]= \\beta (F[\\phi_f] - F[\\phi_0]) \\] <p>\u5c55\u5f00\u5e73\u65b9\u9879\uff0c\\((\\partial_t \\phi)^2\\) \u548c \\((L \\frac{\\delta F}{\\delta \\phi})^2\\) \u9879\u76f8\u4e92\u62b5\u6d88\uff0c\u53ea\u5269\u4e0b\u4ea4\u53c9\u9879\uff1a</p> \\[ \\frac{1}{2N} \\int dt d^dx \\left[ 4L (\\partial_t \\phi) \\left(\\frac{\\delta F}{\\delta \\phi}\\right) \\right] = \\beta (F[\\phi_f] - F[\\phi_0]) \\] <p>\u6839\u636e\u6cdb\u51fd\u5206\u6790\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219\uff0c\u88ab\u79ef\u51fd\u6570\u6b63\u662f\u81ea\u7531\u80fd\u6cdb\u51fd \\(F[\\phi(t)]\\) \u5bf9\u65f6\u95f4\u7684\u5168\u5bfc\u6570\uff1a</p> \\[ \\int_{t_0}^{t_f} dt \\, \\int d^dx (\\partial_t \\phi) \\left(\\frac{\\delta F}{\\delta \\phi}\\right) = \\int_{t_0}^{t_f} dt \\, \\frac{dF[\\phi(t)]}{dt} = F[\\phi(t_f)] - F[\\phi(t_0)] \\] <p>\u5c06\u6b64\u7ed3\u679c\u4ee3\u5165\uff0c\u5f97\u5230\uff1a</p> \\[ \\frac{2L}{N} (F[\\phi_f] - F[\\phi_0]) = -\\beta (F[\\phi_f] - F[\\phi_0]) \\] <p>\u7531\u6b64\uff0c\u4fbf\u5f97\u5230\u4e86\u4e00\u4e2a\u6781\u4e3a\u7b80\u6d01\u800c\u6df1\u523b\u7684\u5173\u7cfb\uff0c\u5373\u7231\u56e0STEIN-\u6602\u8428\u683c\u5173\u7cfb (Einstein-Onsager Relation) \uff1a</p> \\[ N = 2 L k_B T \\] <p>\u8fd9\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u5c55\u793a\u4e86\u7269\u7406\u5b66\u7814\u7a76\u7684\u4e00\u4e2a\u6838\u5fc3\u8303\u5f0f\uff1a\u4ece\u4e00\u4e2a\u62bd\u8c61\u7684\u5bf9\u79f0\u6027\u539f\u7406\uff08\u65f6\u95f4\u53cd\u6f14\u4e0d\u53d8\u6027\uff09\u51fa\u53d1\uff0c\u901a\u8fc7\u4e00\u5957\u5f3a\u5927\u7684\u6570\u5b66\u6846\u67b6\uff08\u8def\u5f84\u79ef\u5206\uff09\uff0c\u5e94\u7528\u4e8e\u4e00\u4e2a\u5177\u4f53\u7684\u7269\u7406\u6a21\u578b\uff08\u6a21\u578bA\uff09\uff0c\u6700\u7ec8\u5f97\u51fa\u4e86\u4e00\u4e2a\u8fde\u63a5\u5b8f\u89c2\u7269\u7406\u91cf\u4e4b\u95f4\uff08\u566a\u58f0\u5f3a\u5ea6\\(N\\)\u3001\u8017\u6563\u7cfb\u6570\\(L\\)\u548c\u6e29\u5ea6\\(T\\)\uff09\u7684\u3001\u53ef\u88ab\u5b9e\u9a8c\u9a8c\u8bc1\u7684\u5b9a\u91cf\u5173\u7cfb\u3002</p> <p>\u8be5\u5173\u7cfb\u5f0f\u662f\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7684\u4e00\u79cd\u5177\u4f53\u8868\u73b0\u5f62\u5f0f\u3002\u5b83\u63ed\u793a\u4e86\uff0c\u4e00\u4e2a\u7cfb\u7edf\u7684\u5fae\u89c2\u968f\u673a\u6da8\u843d\u7684\u5f3a\u5ea6\uff08\u7531\u566a\u58f0\u632f\u5e45 \\(N\\) \u91cf\u5316\uff09\u5e76\u975e\u4e00\u4e2a\u72ec\u7acb\u7684\u53c2\u6570\uff0c\u5b83\u88ab\u7cfb\u7edf\u7684\u5b8f\u89c2\u8017\u6563\u7279\u6027\uff08\u7531\u6602\u8428\u683c\u7cfb\u6570 \\(L\\) \u91cf\u5316\uff09\u548c\u73af\u5883\u6e29\u5ea6 \\(T\\) \u5b8c\u5168\u51b3\u5b9a\u4e86\u3002\u4e00\u4e2a\u8017\u6563\u5feb\uff08\\(L\\)\u5927\uff09\u7684\u7cfb\u7edf\uff0c\u5fc5\u7136\u4e5f\u53d7\u5230\u66f4\u5f3a\u7684\u70ed\u6da8\u843d\uff08\\(N\\)\u5927\uff09\u7684\u51b2\u51fb\uff0c\u8fd9\u6b63\u662f\u7cfb\u7edf\u80fd\u591f\u7ef4\u6301\u70ed\u5e73\u8861\u7684\u6839\u672c\u539f\u56e0\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u63a8\u5bfc\u8fc7\u7a0b\u5e76\u672a\u5bf9\u81ea\u7531\u80fd\u6cdb\u51fd \\(F[\\phi]\\) \u7684\u5f62\u5f0f\u505a\u4efb\u4f55\u7ebf\u6027\u5047\u8bbe\uff0c\u56e0\u6b64\u8be5\u7ed3\u8bba\u5bf9\u975e\u7ebf\u6027\u7cfb\u7edf\u540c\u6837\u6210\u7acb\u3002</p> <p>\u5728\u7b2c24\u8bb2\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u6602\u8428\u683c\u7684\u201c\u81ea\u4e0a\u800c\u4e0b\u201d\u7684\u5b8f\u89c2\u7406\u8bba\uff0c\u57fa\u4e8e\u6da8\u843d\u7684\u7ebf\u6027\u56de\u5f52\u5047\u8bbe\u548c\u5173\u8054\u51fd\u6570\u7684\u65f6\u95f4\u5bf9\u79f0\u6027\uff0c\u63a8\u5bfc\u51fa\u4e86\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u3002\u800c\u8fd9\u8282\u8bfe\uff0c\u4ece\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u3001\u57fa\u4e8e\u201c\u5bf9\u6240\u6709\u5386\u53f2\u6c42\u548c\u201d\u7684\u8def\u5f84\u79ef\u5206\u5fae\u89c2\u89c6\u89d2\u51fa\u53d1\uff0c\u901a\u8fc7\u5e94\u7528\u540c\u6837\u7684\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\uff0c\u6700\u7ec8\u5f97\u5230\u4e86\u5b8c\u5168\u76f8\u540c\u7684\u7269\u7406\u5b9a\u5f8b \u3002\u8fd9\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u7684\u6570\u5b66\u6846\u67b6\uff0c\u6700\u7ec8\u6307\u5411\u4e86\u540c\u4e00\u4e2a\u5173\u4e8e\u6da8\u843d\u3001\u8017\u6563\u4e0e\u6e29\u5ea6\u4e4b\u95f4\u5185\u5728\u8054\u7cfb\u7684\u6df1\u523b\u7269\u7406\u73b0\u5b9e\u3002\u8fd9\u4e00\u4e8b\u5b9e\u518d\u6b21\u8bc1\u660e\u4e86\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u7406\u8bba\u7684\u5185\u5728\u548c\u8c10\u4e0e\u81ea\u6d3d\u6027\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#5","title":"5. \u4ee3\u7801\u5b9e\u8df5\uff1a\u7cfb\u7edf\u751f\u7269\u5b66\u4e2d\u7684\u5185\u7980\u566a\u58f0","text":"<p>\u4e3a\u4e86\u5c55\u793a\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u4f5c\u7528\u91cf\u548c\u8def\u5f84\u79ef\u5206\u601d\u60f3\u5728\u7269\u7406\u5b66\u4e4b\u5916\u7684\u5e94\u7528\uff0c\u8fd9\u8282\u7b14\u8bb0\u7684\u4ee3\u7801\u5b9e\u8df5\u63a2\u7d22\u4e00\u4e2a\u7cfb\u7edf\u751f\u7269\u5b66\u7684\u6838\u5fc3\u6a21\u578b\uff1a\u5355\u4e2a\u57fa\u56e0\u7684\u968f\u673a\u8868\u8fbe\u3002</p> <p>\u5373\u4f7f\u662f\u7ec6\u80de\u5185\u6700\u57fa\u672c\u7684\u201c\u751f\u4ea7-\u964d\u89e3\u201d\u8fc7\u7a0b\uff0c\u4e5f\u5145\u6ee1\u4e86\u968f\u673a\u6da8\u843d\u3002\u56e0\u6b64\uff0c\u6a21\u62df\u7ec6\u80de\u5185\u4e00\u79cd\u86cb\u767d\u8d28\u6570\u91cf\u968f\u65f6\u95f4\u7684\u968f\u673a\u6f14\u5316\uff0c\u5e76\u5c06\u5176\u6700\u7ec8\u7684\u7edf\u8ba1\u5206\u5e03\u4e0e\u7406\u8bba\u9884\u6d4b\u8fdb\u884c\u5bf9\u6bd4\u3002\u901a\u8fc7\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5c55\u793a\u4e00\u4e2a\u7531\u79bb\u6563\u3001\u968f\u673a\u7684\u5316\u5b66\u53cd\u5e94\u4e8b\u4ef6\u9a71\u52a8\u7684\u7cfb\u7edf\uff0c\u5982\u4f55\u5728\u5b8f\u89c2\u7edf\u8ba1\u5c42\u9762\u88ab\u4e00\u4e2a\u5e26\u6709\u52a0\u6027\u566a\u58f0\u7684\u8fde\u7eed\u968f\u673a\u8fc7\u7a0b\u6240\u63cf\u8ff0\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#51","title":"5.1 \u57fa\u56e0\u8868\u8fbe\u7684\u968f\u673a\u52a8\u529b\u5b66","text":"<p>\u60f3\u8c61\u7ec6\u80de\u4e2d\u7684\u4e00\u4e2a\u7b80\u5355\u57fa\u56e0\u8868\u8fbe\u8fc7\u7a0b\uff1a</p> <ol> <li> <p>\u751f\u4ea7 (Production) \uff1a\u67d0\u4e2a\u57fa\u56e0\u88ab\u6301\u7eed\u6fc0\u6d3b\uff0c\u4ee5\u4e00\u4e2a\u6052\u5b9a\u7684\u5e73\u5747\u901f\u7387 \\(k_s\\) \uff08\u5355\u4f4d\uff1a\u5206\u5b50/\u79d2\uff09\u751f\u4ea7\u51fa\u86cb\u767d\u8d28\u5206\u5b50\u3002</p> </li> <li> <p>\u964d\u89e3 (Degradation) \uff1a\u6bcf\u4e2a\u86cb\u767d\u8d28\u5206\u5b50\u90fd\u6709\u4e00\u5b9a\u7684\u5bff\u547d\uff0c\u5e76\u4ee5\u4e00\u4e2a\u4e0e\u5f53\u524d\u86cb\u767d\u8d28\u6570\u91cf \\(p(t)\\) \u6210\u6b63\u6bd4\u7684\u901f\u7387 \\(\\gamma p(t)\\) \u88ab\u964d\u89e3\u6389\u3002\u5176\u4e2d \\(\\gamma\\) \u662f\u4e00\u9636\u964d\u89e3\u901f\u7387\u5e38\u6570\uff08\u5355\u4f4d\uff1a1/\u79d2\uff09\u3002</p> </li> </ol> <p>\u5728\u786e\u5b9a\u6027\u7684\u4e16\u754c\u91cc\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u8fbe\u5230\u4e00\u4e2a\u7a33\u5b9a\u7684\u5e73\u8861\u70b9\uff0c\u5373\u751f\u4ea7\u901f\u7387\u7b49\u4e8e\u964d\u89e3\u901f\u7387\uff1a\\(k_s = \\gamma p_{ss}\\)\uff0c\u5f97\u5230\u7a33\u6001\u86cb\u767d\u8d28\u91cf \\(p_{ss} = k_s / \\gamma\\)\u3002</p> <p>\u7136\u800c\uff0c\u5728\u771f\u5b9e\u7684\u7ec6\u80de\u4e2d\uff0c\u6bcf\u4e00\u6b21\u86cb\u767d\u8d28\u7684\u751f\u4ea7\u548c\u964d\u89e3\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u3001\u968f\u673a\u7684\u5316\u5b66\u53cd\u5e94\u4e8b\u4ef6\u3002\u8fd9\u79cd\u6765\u81ea\u7cfb\u7edf\u5185\u90e8\u7684\u3001\u7531\u79bb\u6563\u4e8b\u4ef6\u5f15\u8d77\u7684\u968f\u673a\u6027\u88ab\u79f0\u4e3a\u5185\u7980\u566a\u58f0 (intrinsic noise) \u3002\u8fd9\u79cd\u566a\u58f0\u4f7f\u5f97\u86cb\u767d\u8d28\u7684\u5b9e\u9645\u6570\u91cf \\(p(t)\\) \u4f1a\u56f4\u7ed5\u7740\u7a33\u6001\u5e73\u5747\u503c \\(p_{ss}\\) \u4e0d\u505c\u5730\u6da8\u843d\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#52-chemical-langevin-equation","title":"5.2 \u5316\u5b66\u6717\u4e4b\u4e07\u65b9\u7a0b (Chemical Langevin Equation)","text":"<p>\u4e3a\u4e86\u63cf\u8ff0\u8fd9\u79cd\u6da8\u843d\uff0c\u53ef\u4ee5\u4f7f\u7528\u5316\u5b66\u6717\u4e4b\u4e07\u65b9\u7a0b (CLE) \uff0c\u5b83\u662f\u5bf9\u79bb\u6563\u968f\u673a\u8fc7\u7a0b\u7684\u4e00\u79cd\u8fde\u7eed\u8fd1\u4f3c\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u7b80\u5355\u7684\u751f\u4ea7-\u964d\u89e3\u6a21\u578b\uff0c\u5176\u5bf9\u5e94\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\uff08\u5373\u4e00\u4e2a\u5e26\u6709\u52a0\u6027\u566a\u58f0\u7684SDE\uff09\u53ef\u4ee5\u5199\u4f5c\uff1a</p> \\[\\frac{dp}{dt} = \\underbrace{(k_s - \\gamma p)}_{\\text{\u6f02\u79fb\u9879 A(p)}} + \\underbrace{\\xi(t)}_{\\text{\u566a\u58f0\u9879}}\\] <p>\u8fd9\u4e0e\u6211\u4eec\u4e4b\u524d\u6a21\u62df\u8fc7\u7684\u6a21\u578bA\u4ee5\u53caO-U\u8fc7\u7a0b\u5728\u5f62\u5f0f\u4e0a\u5b8c\u5168\u4e00\u81f4\uff01</p> <ul> <li> <p>\u6f02\u79fb\u9879 \\(A(p) = k_s - \\gamma p\\) \u63cf\u8ff0\u4e86\u86cb\u767d\u8d28\u6570\u91cf\u56de\u5f52\u5176\u7a33\u6001\u503c \\(p_{ss}\\) \u7684\u786e\u5b9a\u6027\u8d8b\u52bf\u3002</p> </li> <li> <p>\u566a\u58f0\u9879 \\(\\xi(t)\\) \u4ee3\u8868\u4e86\u751f\u4ea7\u548c\u964d\u89e3\u4e8b\u4ef6\u7684\u968f\u673a\u6027\u3002\u6839\u636e\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7684\u4e00\u4e2a\u63a8\u5e7f\uff08\u5c06\u5728\u540e\u7eed\u8bfe\u7a0b\u4e2d\u5b66\u4e60\uff09\uff0c\u5bf9\u4e8e\u8fd9\u7c7b\u5316\u5b66\u53cd\u5e94\u7cfb\u7edf\uff0c\u566a\u58f0\u7684\u5f3a\u5ea6 \\(N\\) \u4e0e\u7a33\u6001\u65f6\u7684\u603b\u53cd\u5e94\u901f\u7387\u6709\u5173\uff0c\u5373 \\(N \\approx 2(k_s + \\gamma p_{ss}) / 2 = k_s + \\gamma (k_s/\\gamma) = 2k_s\\)\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u63cf\u8ff0\u86cb\u767d\u8d28\u6570\u91cf\u6da8\u843d\u7684\u3001\u5e26\u6709\u6709\u6548\u52a0\u6027\u566a\u58f0\u7684O-U\u8fc7\u7a0b\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#53-python","title":"5.3 Python\u5b9e\u73b0\u4e0e\u7ed3\u679c\u5206\u6790","text":"<p>\u4e0b\u9762\u7684Python\u4ee3\u7801\u5c06\u6a21\u62df\u5927\u91cf\u201c\u865a\u62df\u7ec6\u80de\u201d\u4e2d\u8be5\u86cb\u767d\u8d28\u7684\u8868\u8fbe\u8fc7\u7a0b\uff0c\u5e76\u5c55\u793a\u5176\u52a8\u529b\u5b66\u8f68\u8ff9\u548c\u6700\u7ec8\u7684\u7a33\u6001\u5206\u5e03\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm\n\n# --- 1. Define biophysical parameters ---\nk_s = 20.0     # Protein synthesis rate (molecules/second)\ngamma = 0.2    # Protein degradation rate constant (1/second)\n\n# Theoretical steady-state value\np_ss = k_s / gamma # Steady-state average protein number\nnoise_strength_N = 2 * k_s # Effective noise strength\nsigma = np.sqrt(noise_strength_N) # Volatility in SDE\n\nprint(f\"Theoretical steady-state mean p_ss = {p_ss:.2f} molecules\")\nprint(f\"Effective noise strength N = {noise_strength_N:.2f}\")\n\n# --- 2. Simulation parameters ---\np0 = 0.0          # Initial protein number\nT_total = 40.0    # Total simulation time (seconds)\ndt = 0.05         # Time step\nn_steps = int(T_total / dt)\nnum_cells = 5000  # Number of cells to simulate\n\n# --- 3. Run simulation (Euler-Maruyama) ---\n# Initialize protein numbers for all cells\np_paths = np.zeros((num_cells, n_steps + 1))\np_paths[:, 0] = p0\n\n# Generate all random increments\ndW = np.sqrt(dt) * np.random.randn(num_cells, n_steps)\n\n# Iteratively solve SDE\nfor i in range(n_steps):\n    current_p = p_paths[:, i]\n    drift = k_s - gamma * current_p\n    diffusion = sigma * dW[:, i] / dt # Convert to Langevin form noise\n    p_paths[:, i+1] = current_p + drift * dt + diffusion * dt\n\n# --- 4. Visualization of results ---\nsns.set_style(\"whitegrid\")\nfig = plt.figure(figsize=(16, 8))\ngs = fig.add_gridspec(2, 2, height_ratios=(1, 1))\n\n# Figure 1: Single cell trajectories\nax1 = fig.add_subplot(gs[:, 0])\ntime_array = np.linspace(0, T_total, n_steps + 1)\nfor i in range(5): # Plot only 5 trajectories as examples\n    ax1.plot(time_array, p_paths[i, :], lw=2, alpha=0.8)\n\nax1.axhline(p_ss, color='r', linestyle='--', lw=2.5, label=f'Steady-state mean p_ss = {p_ss:.0f}')\nax1.set_title('Stochastic trajectories of protein numbers in single cells', fontsize=18, pad=15)\nax1.set_xlabel('Time (seconds)', fontsize=14)\nax1.set_ylabel('Protein number p(t)', fontsize=14)\nax1.legend(fontsize=12)\nax1.tick_params(axis='both', which='major', labelsize=12)\nax1.set_ylim(bottom=0)\n\n# Figure 2: Steady-state distribution\nax2 = fig.add_subplot(gs[0, 1])\nfinal_p_counts = p_paths[:, -1]\nsns.histplot(final_p_counts, bins=50, kde=False, stat='density', ax=ax2, \n             color='skyblue', edgecolor='black', label='Simulated distribution (t=40s)')\n\n# Theoretical Gaussian distribution (steady-state solution of O-U process)\nvariance_theory = noise_strength_N / (2 * gamma)\nstd_dev_theory = np.sqrt(variance_theory)\np_range = np.linspace(final_p_counts.min(), final_p_counts.max(), 200)\npdf_theory = norm.pdf(p_range, loc=p_ss, scale=std_dev_theory)\nax2.plot(p_range, pdf_theory, 'k-', lw=3, label='Theoretical Gaussian distribution')\n\nax2.set_title('Protein distribution in cell population at steady-state', fontsize=18, pad=15)\nax2.set_xlabel('Protein number p', fontsize=14)\nax2.set_ylabel('Probability density', fontsize=14)\nax2.legend(fontsize=12)\nax2.tick_params(axis='both', which='major', labelsize=12)\n\n# Figure 3: Ensemble average evolution\nax3 = fig.add_subplot(gs[1, 1], sharex=ax2)\nmean_path = np.mean(p_paths, axis=0)\nax3.plot(time_array, mean_path, color='darkorange', lw=3, label='Ensemble average $\\langle p(t) \\\\rangle$')\nax3.axhline(p_ss, color='r', linestyle='--', lw=2.5)\nax3.set_title('Evolution of ensemble average', fontsize=18, pad=15)\nax3.set_xlabel('Time (seconds)', fontsize=14)\nax3.set_ylabel('Average protein number', fontsize=14)\nax3.tick_params(axis='both', which='major', labelsize=12)\nax3.set_ylim(bottom=0)\n\nplt.tight_layout()\nplt.show()\n</code></pre> </p> <p>\u5de6\u56fe (\u5355\u7ec6\u80de\u8f68\u8ff9) \uff0c\u5c55\u793a\u4e86\u5185\u7980\u566a\u58f0\u7684\u6548\u5e94\u3002\u6bcf\u4e2a\u7ec6\u80de\u4e2d\u7684\u86cb\u767d\u8d28\u6570\u91cf\u5e76\u4e0d\u4f1a\u7a33\u5b9a\u5728\u5e73\u5747\u503c \\(p_{ss}=100\\)\uff0c\u800c\u662f\u5728\u5176\u9644\u8fd1\u5267\u70c8\u5730\u3001\u6c38\u4e0d\u505c\u6b47\u5730\u6da8\u843d\u3002\u8fd9\u6b63\u662f\u7ec6\u80de\u95f4\u4e2a\u4f53\u5dee\u5f02\uff08\u5373\u201c\u8868\u578b\u5f02\u8d28\u6027\u201d\uff09\u7684\u6839\u6e90\u4e4b\u4e00\u3002</p> <p>\u53f3\u4e0a\u56fe (\u7a33\u6001\u5206\u5e03) \uff0c\u5c3d\u7ba1\u5355\u4e2a\u7ec6\u80de\u7684\u884c\u4e3a\u662f\u968f\u673a\u7684\uff0c\u4f46\u75315000\u4e2a\u7ec6\u80de\u7ec4\u6210\u7684\u7fa4\u4f53\u7684\u7edf\u8ba1\u884c\u4e3a\u5374\u662f\u9ad8\u5ea6\u53ef\u9884\u6d4b\u7684\u3002\u6a21\u62df\u5f97\u5230\u7684\u86cb\u767d\u8d28\u6570\u91cf\u76f4\u65b9\u56fe\uff08\u84dd\u8272\uff09\u5b8c\u7f8e\u5730\u543b\u5408\u4e86\u7406\u8bba\u9884\u6d4b\u7684\u7a33\u6001\u9ad8\u65af\u5206\u5e03\uff08\u9ed1\u8272\u5b9e\u7ebf\uff09\u3002\u8fd9\u8bc1\u660e\u53ef\u4ee5\u4ece\u5fae\u89c2\u7684\u968f\u673a\u89c4\u5219\uff08\u6717\u4e4b\u4e07\u65b9\u7a0b\uff09\u51fa\u53d1\uff0c\u7cbe\u786e\u9884\u6d4b\u5b8f\u89c2\u7684\u3001\u53ef\u6d4b\u91cf\u7684\u7edf\u8ba1\u89c4\u5f8b\uff08\u6982\u7387\u5206\u5e03\uff09\u3002</p> <p>\u53f3\u4e0b\u56fe (\u7cfb\u7efc\u5e73\u5747\u503c) \uff0c\u5c06\u6240\u6709\u7ec6\u80de\u7684\u8f68\u8ff9\u8fdb\u884c\u5e73\u5747\uff0c\u4f1a\u53d1\u73b0\u566a\u58f0\u7684\u5f71\u54cd\u201c\u6d88\u5931\u201d\u4e86\uff0c\u5e73\u5747\u8def\u5f84\u5e73\u6ed1\u5730\u4ece0\u589e\u957f\u5e76\u8d8b\u5411\u4e8e\u7406\u8bba\u7a33\u6001\u503c\u3002\u8fd9\u518d\u6b21\u5370\u8bc1\u4e86\u4f0a\u85e4\u79ef\u5206\u7684\u9785\u6027\u8d28\uff1a\u566a\u58f0\u672c\u8eab\u4e0d\u4ea7\u751f\u7cfb\u7edf\u6027\u7684\u6f02\u79fb\uff0c\u53ea\u8d21\u732e\u6da8\u843d\u3002\u8fd9\u4e2a\u6765\u81ea\u7cfb\u7edf\u751f\u7269\u5b66\u7684\u4f8b\u5b50\uff0c\u63ed\u793a\u4e86\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u548c\u8def\u5f84\u79ef\u5206\u601d\u60f3\u5728\u7406\u89e3\u751f\u547d\u8fc7\u7a0b\u4e2d\u7684\u5de8\u5927\u6f5c\u529b\u3002</p>"},{"location":"zh/notes/31.%20%E5%8A%A8%E6%80%81%E6%B3%9B%E5%87%BD%E3%80%81%E5%8A%A0%E6%80%A7%E5%99%AA%E5%A3%B0%E5%9C%BA%E8%AE%BA%E4%B8%8EOnsager-Machlup%E6%B3%9B%E5%87%BD/#_2","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\uff0c\u5efa\u7acb\u4e86\u9002\u7528\u4e8e\u5177\u6709\u52a0\u6027\u566a\u58f0\u7684\u968f\u673a\u573a\u8bba\u7684\u5b8c\u6574\u8def\u5f84\u79ef\u5206\u6846\u67b6\u3002</p> <ul> <li> <p>\u4ece\u566a\u58f0\u7684\u6982\u7387\u6cdb\u51fd\u51fa\u53d1\uff0c\u901a\u8fc7\u53d8\u91cf\u66ff\u6362\uff0c\u63a8\u5bfc\u51fa\u4e86\u573a\u6784\u578b\u5386\u53f2\uff08\u5373\u8def\u5f84\uff09\u7684\u6982\u7387\u6cdb\u51fd \\(W[\\vec{\\phi}] \\propto \\exp(-G[\\vec{\\phi}])\\)\u3002</p> </li> <li> <p>\u8bc6\u522b\u51fa\u6307\u6570\u4e0a\u7684\u6cdb\u51fd \\(G[\\vec{\\phi}]\\) \u5c31\u662f\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\uff0c\u5b83\u626e\u6f14\u4e86\u968f\u673a\u8def\u5f84\u7684\u201c\u4f5c\u7528\u91cf\u201d\u89d2\u8272\uff0c\u5176\u6700\u5c0f\u503c\u5bf9\u5e94\u4e8e\u7cfb\u7edf\u7684\u7ecf\u5178\u65e0\u566a\u58f0\u8f68\u8ff9\u3002</p> </li> <li> <p>\u8fd0\u7528\u4e86\u70ed\u5e73\u8861\u6001\u4e0b\u7684\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\uff0c\u5373\u7ec6\u81f4\u5e73\u8861\u539f\u7406\uff0c\u5bf9\u8def\u5f84\u6982\u7387\u65bd\u52a0\u4e86\u5f3a\u6709\u529b\u7684\u7ea6\u675f\u3002</p> </li> <li> <p>\u901a\u8fc7\u5c06\u6b64\u7ea6\u675f\u5e94\u7528\u4e8e\u6a21\u578bA\u52a8\u529b\u5b66\uff0c\u4ece\u7b2c\u4e00\u6027\u539f\u7406\u51fa\u53d1\uff0c\u63a8\u5bfc\u51fa\u4e86\u8457\u540d\u7684\u7231\u56e0\u65af\u5766-\u6602\u8428\u683c\u5173\u7cfb\uff08\\(N = 2 L k_B T\\)\uff09</p> </li> </ul> <p>\u52a0\u6027\u566a\u58f0\u4e0e\u7b2c22\u8bb2\u4e2d\u8ba8\u8bba\u7684\u4e58\u6027\u566a\u58f0\u7684\u6838\u5fc3\u533a\u522b\u5728\u4e8e\u566a\u58f0\u7684\u5f3a\u5ea6\u662f\u5426\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u81ea\u8eab\u7684\u72b6\u6001\u3002</p> <p>\u52a0\u6027\u566a\u58f0\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u4e00\u79cd\u6052\u5b9a\u7684\u3001\u6765\u81ea\u5916\u90e8\u73af\u5883\u7684\u80cc\u666f\u201c\u566a\u97f3\u201d\uff0c\u5176\u5f3a\u5ea6\u59cb\u7ec8\u4e0d\u53d8\uff0c\u65e0\u8bba\u7cfb\u7edf\u5904\u4e8e\u4f55\u79cd\u72b6\u6001\uff1b\u8fd9\u5728\u6570\u5b66\u4e0a\u8868\u73b0\u4e3a\u566a\u58f0\u9879\u76f4\u63a5\u4e0e\u52a8\u529b\u5b66\u65b9\u7a0b\u76f8\u52a0\uff08\u5982 \\(\\partial_t\\phi = A(\\phi) + \\xi(t)\\)\uff09\uff0c\u5176\u4e00\u5927\u7406\u8bba\u4f18\u52bf\u662f\u5728\u8def\u5f84\u79ef\u5206\u8868\u8ff0\u4e2d\uff0c\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u901a\u5e38\u4e3a\u4e00\u4e2a\u53ef\u5ffd\u7565\u7684\u5e38\u6570\uff0c\u56e0\u6b64\u4f0a\u85e4\u4e0e\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206\u7684\u5dee\u522b\u4e5f\u968f\u4e4b\u6d88\u5931\u3002</p> <p>\u4e0e\u6b64\u76f8\u5bf9\uff0c\u4e58\u6027\u566a\u58f0\u7684\u5f3a\u5ea6\u662f\u7cfb\u7edf\u72b6\u6001\u7684\u51fd\u6570\uff08\u5982 \\(dX_t = A(X_t)dt + C(X_t)dW_t\\)\uff09\uff0c\u8fd9\u610f\u5473\u7740\u566a\u58f0\u7684\u6548\u5e94\u4f1a\u88ab\u7cfb\u7edf\u81ea\u8eab\u653e\u5927\u6216\u7f29\u5c0f\uff1b\u5178\u578b\u7684\u4f8b\u5b50\u5305\u62ec\u91d1\u878d\u6a21\u578b\u4e2d\u4e0e\u80a1\u4ef7\u6210\u6b63\u6bd4\u7684\u6ce2\u52a8\u7387\uff0c\u6216\u751f\u7269\u7cfb\u7edf\u4e2d\u4e0e\u79cd\u7fa4\u89c4\u6a21\u76f8\u5173\u7684\u968f\u673a\u6ce2\u52a8\u3002\u8fd9\u79cd\u72b6\u6001\u4f9d\u8d56\u6027\u5bfc\u81f4\u4e86\u66f4\u4e30\u5bcc\u7684\u52a8\u529b\u5b66\u884c\u4e3a\uff0c\u5982\u6a21\u62df\u4e2d\u89c2\u5bdf\u5230\u7684\u201c\u6247\u5f62\u5c55\u5f00\u201d\u73b0\u8c61\uff0c\u5e76\u4e14\u5728\u6570\u5b66\u4e0a\u4f7f\u5f97\u4f0a\u85e4\u4e0e\u65af\u7279\u62c9\u6258\u8bfa\u7ef4\u5947\u79ef\u5206\u7684\u9009\u62e9\u53d8\u5f97\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u4e0d\u540c\u7684\u9009\u62e9\u5bf9\u5e94\u7740\u4e0d\u540c\u7684\u7269\u7406\u5047\u8bbe\u548c\u6700\u7ec8\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u3002</p> <p>\u52a0\u6027\u566a\u58f0\u662f\u7406\u89e3\u968f\u673a\u8fc7\u7a0b\u7684\u7406\u60f3\u5316\u8d77\u70b9\u548c\u57fa\u51c6\u6a21\u578b\u3002\u5b83\u7684\u6570\u5b66\u5904\u7406\u6700\u4e3a\u7b80\u5355\u6e05\u6670\uff0c\u662f\u5206\u6790\u6e90\u4e8e\u5916\u90e8\u73af\u5883\u3001\u4e14\u5f3a\u5ea6\u57fa\u672c\u6052\u5b9a\u7684\u968f\u673a\u5e72\u6270\u65f6\u7684\u9996\u9009\u3002\u5f53\u4f60\u5bf9\u566a\u58f0\u6765\u6e90\u4e0d\u786e\u5b9a\u6216\u60f3\u6784\u5efa\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u57fa\u7ebf\u6a21\u578b\u65f6\uff0c\u52a0\u6027\u566a\u58f0\u662f\u4e00\u4e2a\u5408\u7406\u7684\u7b2c\u4e00\u6b65\u3002</p> <p>\u4e58\u6027\u566a\u58f0\u5219\u662f\u5bf9\u73b0\u5b9e\u4e16\u754c\u66f4\u7cbe\u7ec6\u548c\u51c6\u786e\u7684\u63cf\u8ff0\u3002\u5f53\u968f\u673a\u6027\u7684\u6765\u6e90\u4e0e\u7cfb\u7edf\u81ea\u8eab\u7684\u72b6\u6001\uff08\u5982\u89c4\u6a21\u3001\u80fd\u91cf\u3001\u4ef7\u683c\uff09\u5bc6\u5207\u76f8\u5173\u65f6\uff0c\u9009\u62e9\u4e58\u6027\u566a\u58f0\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u5b83\u80fd\u6355\u6349\u5230\u66f4\u4e30\u5bcc\u3001\u66f4\u590d\u6742\u7684\u52a8\u529b\u5b66\u884c\u4e3a\u3002\u9009\u62e9\u5b83\u610f\u5473\u7740\u7528\u66f4\u9ad8\u7684\u6570\u5b66\u590d\u6742\u6027\u4e3a\u4ee3\u4ef7\uff0c\u6765\u6362\u53d6\u66f4\u6df1\u523b\u7684\u7269\u7406\u771f\u5b9e\u6027\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u5e94\u7528\u4e2d\uff0c\u9009\u62e9\u54ea\u79cd\u566a\u58f0\u6a21\u578b\u7684\u51b3\u5b9a\u6027\u56e0\u7d20\u662f\uff1a\u5bf9\u6240\u7814\u7a76\u7cfb\u7edf\u4e2d\u968f\u673a\u6027\u6765\u6e90\u7684\u7269\u7406\u7406\u89e3\u3002\u6b63\u786e\u5730\u8bc6\u522b\u5e76\u5efa\u6a21\u566a\u58f0\u7684\u6765\u6e90\uff0c\u662f\u6210\u529f\u6784\u5efa\u4e00\u4e2a\u968f\u673a\u52a8\u529b\u5b66\u7406\u8bba\u7684\u5173\u952e\u3002</p> <p>\u4ece\u8fd9\u8282\u8bfe\u7684\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\uff08\u63cf\u8ff0\u201c\u81ea\u53d1\u201d\u8def\u5f84\u7684\u6982\u7387\uff09\u51fa\u53d1\uff0c\u4e0b\u4e00\u6b65\u81ea\u7136\u662f\u5f15\u5165MSRJD\u5f62\u5f0f\uff0c\u4ee5\u4fbf\u7cfb\u7edf\u5730\u3001\u53ef\u8ba1\u7b97\u5730\u7814\u7a76\u7cfb\u7edf\u5982\u4f55\u201c\u54cd\u5e94\u201d\u5916\u90e8\u63a2\u9488\u3002\u6211\u4eec\u5728\u4e0b\u8282\u8bfe\u5c06\u66f4\u6df1\u5165\u5730\u5b66\u4e60\u4f7f\u7528\u573a\u8bba\u5fae\u6270\u6280\u672f\uff08\u5982\u8d39\u66fc\u56fe\uff09\u6765\u8ba1\u7b97\u968f\u673a\u7cfb\u7edf\u5173\u8054\u548c\u54cd\u5e94\u51fd\u6570\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/","title":"\u5f15\u8a00:\u4ece\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u5230J-D\u4f5c\u7528\u91cf","text":"<p>\u4e0a\u8282\u8bfe(\u7b2c31\u8bb2)\u6210\u529f\u5730\u4e3a\u968f\u673a\u8fc7\u7a0b\u6784\u5efa\u4e86\u4e00\u4e2a\u4f18\u7f8e\u7684\u8def\u5f84\u79ef\u5206\u8868\u8ff0,\u5176\u6838\u5fc3\u662f\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e (Onsager-Machlup) \u6cdb\u51fd\u3002\u8fd9\u4e2a\u6cdb\u51fd\u626e\u6f14\u4e86\u968f\u673a\u8def\u5f84\u7684\"\u4f5c\u7528\u91cf\",\u4e3a\u4ece\"\u5386\u53f2\u6c42\u548c\"\u7684\u89c6\u89d2\u7406\u89e3\u7ec6\u81f4\u5e73\u8861\u4e0e\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u63d0\u4f9b\u4e86\u6df1\u523b\u7684\u7269\u7406\u6d1e\u89c1\u3002</p> <p>\u7136\u800c,\u6b63\u5982\u6559\u6388\u5728\u8bfe\u7a0b\u5f00\u5934\u6307\u51fa\u7684,\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5b58\u5728\u4e00\u4e2a\u4e0d\u4fbf\u4e4b\u5904:\u5b83\u7684\u4f5c\u7528\u91cf\u5f62\u5f0f\u662f\u5173\u4e8e\u573a\u7684\u65f6\u95f4\u5bfc\u6570\u4e0e\u6f02\u79fb\u9879\u4e4b\u5dee\u7684\u4e8c\u6b21\u65b9(\u5373\u5e73\u65b9\u9879)\u3002\u8fd9\u79cd\u5f62\u5f0f\u5728\u8fdb\u884c\u66f4\u590d\u6742\u7684\u8ba1\u7b97(\u4f8b\u5982\u5fae\u6270\u5c55\u5f00)\u65f6\u4f1a\u53d8\u5f97\u975e\u5e38\u68d8\u624b\u3002 \u4e3a\u4e86\u514b\u670d\u8fd9\u4e00\u5c40\u9650,\u9700\u8981\u5f15\u5165\u4e00\u4e2a\u5728\u6570\u5b66\u4e0a\u66f4\u4fbf\u4e8e\u64cd\u4f5c\u7684\u8def\u5f84\u79ef\u5206\u6846\u67b6\u3002\u5176\u6838\u5fc3\u76ee\u6807,\u662f\u6784\u5efa\u4e00\u4e2a\u4e0e\u6602\u8428-\u683c\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u7269\u7406\u4e0a\u7b49\u4ef7,\u4f46\u5728\u5f62\u5f0f\u4e0a\u5374\u662f\u7ebf\u6027\u7684\u65b0\"\u4f5c\u7528\u91cf\"\u3002\u4e00\u4e2a\u7ebf\u6027\u7684\u4f5c\u7528\u91cf\u5c06\u6781\u5927\u5730\u7b80\u5316\u540e\u7eed\u7684\u5fae\u6270\u8ba1\u7b97\u548c\u7406\u8bba\u5206\u6790\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c06\u81ea\u7136\u5730\u5f15\u51fa\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u2014\u2014Janssen-De Dominicis (J-D) \u4f5c\u7528\u91cf\u7684\u63a8\u5bfc\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f,\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u7684\u6838\u5fc3\u6280\u5de7\u2014\u2014\u901a\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\u5f15\u5165\u4e00\u4e2a\u8f85\u52a9\u7684\u54cd\u5e94\u573a (response field)\u6765\u5f3a\u52a0\u52a8\u529b\u5b66\u7ea6\u675f,\u4ece\u800c\u7ebf\u6027\u5316\u95ee\u9898\u2014\u2014\u5e76\u975e\u9996\u6b21\u51fa\u73b0\u3002\u8fd9\u4e2a\u601d\u60f3\u4e0e\u5728\u7b2c22\u8bb2\u4e2d\u4e3a\u5904\u7406\u66f4\u590d\u6742\u7684\u4e58\u6027\u566a\u58f0\u7cfb\u7edf\u800c\u6784\u5efa\u8def\u5f84\u79ef\u5206\u65f6\u6240\u4f7f\u7528\u7684MSRJD\u5f62\u5f0f\u4f53\u7cfb,\u5728\u65b9\u6cd5\u8bba\u4e0a\u662f\u4e00\u8109\u76f8\u627f\u7684\u3002\u8fd9\u79cd\u7406\u8bba\u5de5\u5177\u4e0a\u7684\u4e00\u81f4\u6027,\u4e0d\u4ec5\u5c55\u793a\u4e86\u968f\u673a\u573a\u8bba\u5185\u5728\u7684\u548c\u8c10\u4e0e\u81ea\u6d3d,\u66f4\u51f8\u663e\u4e86\u54cd\u5e94\u573a\u4f5c\u4e3a\u4e00\u4e2a\u666e\u9002\u6570\u5b66\u5de5\u5177\u7684\u5f3a\u5927\u5a01\u529b\u3002</p> <p>\u6700\u7ec8,\u8fd9\u4e2a\u66f4\u5f3a\u5927\u7684J-D\u5f62\u5f0f\u4f53\u7cfb\u5c06\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6570\u5b66\u4e0a\u7684\u7f8e\u5316\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u628a\"\u624b\u672f\u5200\",\u80fd\u591f\u7cbe\u786e\u5730\u89e3\u5256\u51fa\u7cfb\u7edf\u7684\u54cd\u5e94\u51fd\u6570\u4e0e\u5173\u8054\u51fd\u6570,\u5e76\u4ee5\u4e00\u79cd\u524d\u6240\u672a\u6709\u7684\u6e05\u6670\u65b9\u5f0f,\u4ece\u7b2c\u4e00\u6027\u539f\u7406\u51fa\u53d1,\u63a8\u5bfc\u51fa\u7edf\u8ba1\u7269\u7406\u5b66\u4e2d\u6700\u6df1\u523b\u7684\u5173\u7cfb\u4e4b\u4e00\u2014\u2014\u6da8\u843d-\u8017\u6563\u5b9a\u7406 (Fluctuation-Dissipation Theorem, FDT) \u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#1-","title":"1. \u56de\u987e:\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u4e0e\u7ec6\u81f4\u5e73\u8861","text":"<p>\u4e3a\u4e86\u7ed9\u8fd9\u8282\u8bfe\u5f15\u5165\u7684Janssen-De Dominicis\u4f5c\u7528\u91cf\u94fa\u5e73\u9053\u8def,\u6709\u5fc5\u8981\u9996\u5148\u56de\u987e\u4e0a\u4e00\u8bb2\u7684\u6838\u5fc3\u5185\u5bb9:\u4f5c\u4e3a\u968f\u673a\u8def\u5f84\"\u4f5c\u7528\u91cf\"\u7684\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e (Onsager-Machlup) \u6cdb\u51fd,\u4ee5\u53ca\u5b83\u5728\u70ed\u5e73\u8861\u6761\u4ef6\u4e0b\u6240\u5fc5\u987b\u9075\u5faa\u7684\u6df1\u523b\u5bf9\u79f0\u6027\u2014\u2014\u7ec6\u81f4\u5e73\u8861 (Detailed Balance) \u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#11","title":"1.1 \u8def\u5f84\u7684\u7edf\u8ba1\u6743\u91cd","text":"<p>\u5728\u8def\u5f84\u79ef\u5206\u7684\u89c6\u89d2\u4e0b,\u4e00\u4e2a\u968f\u673a\u7cfb\u7edf\u4ece\u521d\u59cb\u573a\u6784\u578b \\(\\phi_0\\) \u6f14\u5316\u81f3\u672b\u6001 \\(\\phi_f\\) \u7684\u8fc7\u7a0b,\u662f\u5bf9\u6240\u6709\u53ef\u80fd\u8fde\u63a5\u8fd9\u4e24\u4e2a\u7aef\u70b9\u7684\"\u5386\u53f2\"\u8def\u5f84\u8fdb\u884c\u52a0\u6743\u6c42\u548c\u7684\u7ed3\u679c\u3002\u5176\u8dc3\u8fc1\u6982\u7387\u5e45\u53ef\u4ee5\u5199\u6210\u4e00\u4e2a\u6cdb\u51fd\u79ef\u5206:</p> \\[ \\langle \\phi_f | \\phi_0 \\rangle = \\int_{\\phi(0)=\\phi_0}^{\\phi(t_f)=\\phi_f} \\mathcal{D}[\\phi] \\exp\\left[-G(\\phi; 0, t_f)\\right] \\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4e0e\u91cf\u5b50\u529b\u5b66\u4e2d\u7684\u8d39\u66fc\u8def\u5f84\u79ef\u5206\u5f62\u5f0f\u4e0a\u5b8c\u5168\u5bf9\u5e94\u3002\u8fd9\u91cc\u7684\u5173\u952e\u7269\u7406\u91cf\u662f\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd \\(G[\\phi]\\),\u5b83\u4e3a\u6bcf\u4e00\u6761\u53ef\u80fd\u7684\u8def\u5f84 \\(\\phi(t)\\) \u8d4b\u4e88\u4e86\u4e00\u4e2a\u7edf\u8ba1\u6743\u91cd\u3002\\(G[\\phi]\\) \u7684\u503c\u8d8a\u5c0f,\u8be5\u8def\u5f84\u53d1\u751f\u7684\u6982\u7387\u5c31\u8d8a\u5927,\u56e0\u6b64\u5b83\u626e\u6f14\u4e86\u968f\u673a\u52a8\u529b\u5b66\u4e2d\u4f5c\u7528\u91cf (action) \u7684\u89d2\u8272\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#12-","title":"1.2 \u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd:\u8def\u5f84\u7684\"\u4ee3\u4ef7\"","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u7531\u591a\u53d8\u91cf\u6717\u4e4b\u4e07\u65b9\u7a0b \\(\\partial_t\\phi_\\alpha = A_\\alpha[\\phi] + \\xi_\\alpha\\) \u63cf\u8ff0\u7684\u7cfb\u7edf,\u5176\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u7684\u5177\u4f53\u5f62\u5f0f\u4e3a:</p> \\[ G[\\phi] = \\frac{1}{2} \\int_{x,t} \\left(\\dot{\\phi}_\\alpha - A_\\alpha[\\phi]\\right) N_{\\alpha\\beta}^{-1} \\left(\\dot{\\phi}_\\beta - A_\\beta[\\phi]\\right) + (\\text{\u6cdb\u51fd\u884c\u5217\u5f0f}) \\] <p>\u8fd9\u4e2a\u6cdb\u51fd\u7684\u7269\u7406\u610f\u4e49\u5341\u5206\u6e05\u6670:</p> <ul> <li> <p>\u62ec\u53f7\u5185\u7684\u9879 \\((\\dot{\\phi}_\\alpha - A_\\alpha)\\) \u6b63\u662f\u901a\u8fc7\u6717\u4e4b\u4e07\u65b9\u7a0b\u53cd\u89e3\u51fa\u7684\u3001\u9a71\u52a8\u7cfb\u7edf\u8d70\u51fa\u8fd9\u6761\u7279\u5b9a\u8def\u5f84 \\(\\phi(t)\\) \u6240\u5fc5\u9700\u7684\u566a\u58f0 \\(\\xi_\\alpha\\)\u3002</p> </li> <li> <p>\u6574\u4e2a\u6cdb\u51fd \u56e0\u6b64\u5ea6\u91cf\u4e86\u8fd9\u6761\u566a\u58f0\u5386\u53f2\u7684\"\u4ee3\u4ef7\"\u6216\"\u5927\u5c0f\"\u3002\u4e00\u6761\u9700\u8981\u5267\u70c8\u3001\u7f55\u89c1\u566a\u58f0\u624d\u80fd\u5b9e\u73b0\u7684\u8def\u5f84,\u5176 \\(G[\\phi]\\) \u7684\u503c\u5c31\u5f88\u5927,\u5176\u6982\u7387 \\(e^{-G[\\phi]}\\) \u4e5f\u56e0\u6b64\u88ab\u6307\u6570\u7ea7\u5730\u6291\u5236\u4e86\u3002\u566a\u58f0\u534f\u65b9\u5dee\u7684\u9006\u77e9\u9635 \\(N^{-1}\\) \u5219\u626e\u6f14\u4e86\u5ea6\u89c4\u7684\u89d2\u8272,\u6839\u636e\u566a\u58f0\u5404\u5206\u91cf\u7684\u5f3a\u5ea6\u6765\u52a0\u6743\u8fd9\u4e2a\"\u4ee3\u4ef7\"\u3002</p> </li> </ul>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#13","title":"1.3 \u7ec6\u81f4\u5e73\u8861:\u65f6\u95f4\u5bf9\u79f0\u6027","text":"<p>\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u7684\u771f\u6b63\u5a01\u529b,\u4f53\u73b0\u5728\u5b83\u4e0e\u70ed\u529b\u5b66\u57fa\u672c\u539f\u7406\u7684\u7ed3\u5408\u4e0a\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5904\u4e8e\u70ed\u5e73\u8861\u6001\u7684\u7cfb\u7edf,\u5176\u5fae\u89c2\u52a8\u529b\u5b66\u5fc5\u987b\u6ee1\u8db3\u65f6\u95f4\u53cd\u6f14\u4e0d\u53d8\u6027\u3002\u8fd9\u4e00\u5fae\u89c2\u5bf9\u79f0\u6027\u5728\u5b8f\u89c2\u8def\u5f84\u6982\u7387\u4e0a\u7684\u4f53\u73b0,\u5c31\u662f\u7ec6\u81f4\u5e73\u8861\u539f\u7406\u3002</p> <p>\u5728\u8def\u5f84\u79ef\u5206\u7684\u8bed\u8a00\u4e2d,\u7ec6\u81f4\u5e73\u8861\u88ab\u8868\u8ff0\u4e3a\u4e00\u4e2a\u5173\u4e8e\u8def\u5f84\u4f5c\u7528\u91cf\u548c\u7cfb\u7edf\u81ea\u7531\u80fd \\(F[\\phi]\\) \u7684\u6df1\u523b\u5173\u7cfb\u5f0f:</p> \\[ \\beta F[\\phi_0] + G[\\phi; 0, t_f] = \\beta F[\\phi_f] + G_R[\\phi; 0, t_f] \\] <p>\u5176\u4e2d,\\(\\beta = 1/(k_B T)\\) \u662f\u9006\u6e29\u5ea6,\\(G_R\\) \u662f\u65f6\u95f4\u53cd\u6f14\u8def\u5f84\u7684\u4f5c\u7528\u91cf\u3002\u8fd9\u4e2a\u65b9\u7a0b\u7684\u5de6\u4fa7\u6b63\u6bd4\u4e8e\u4ece \\(\\phi_0\\) \u51fa\u53d1\u3001\u6cbf\u7740\u6b63\u5411\u8def\u5f84\u6f14\u5316\u5230 \\(\\phi_f\\) \u7684\u603b(\u5bf9\u6570)\u6982\u7387;\u800c\u53f3\u4fa7\u5219\u5bf9\u5e94\u5176\u65f6\u95f4\u53cd\u6f14\u8fc7\u7a0b\u7684\u603b(\u5bf9\u6570)\u6982\u7387\u3002\u7ec6\u81f4\u5e73\u8861\u8981\u6c42\u8fd9\u4e24\u8005\u4e4b\u95f4\u5fc5\u987b\u901a\u8fc7\u7cfb\u7edf\u521d\u672b\u6001\u7684\u81ea\u7531\u80fd\u5dee\u7cbe\u786e\u5730\u8054\u7cfb\u8d77\u6765\u3002</p> <p>\u8fd9\u4e2a\u770b\u4f3c\u62bd\u8c61\u7684\u5bf9\u79f0\u6027\u5173\u7cfb,\u5bf9\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u65bd\u52a0\u4e86\u6781\u5176\u4e25\u683c\u7684\u7269\u7406\u7ea6\u675f\u3002\u6b63\u5982\u5728\u7b2c31\u8bb2\u672b\u5c3e\u6240\u63a8\u5bfc\u7684,\u6b63\u662f\u8fd9\u4e2a\u5173\u7cfb\u5f0f,\u8981\u6c42\u7cfb\u7edf\u7684\u786e\u5b9a\u6027\u6f02\u79fb\u9879 \\(A_\\alpha\\) \u5fc5\u987b\u4e0e\u8017\u6563\u8fc7\u7a0b\u76f8\u5173(\u4f8b\u5982,\u5728\u6a21\u578bA\u4e2d,\\(A_\\alpha = -L \\frac{\\delta F}{\\delta \\phi_\\alpha}\\)),\u5e76\u4e14\u566a\u58f0\u5f3a\u5ea6 \\(N\\) \u5fc5\u987b\u4e0e\u7cfb\u7edf\u7684\u8017\u6563\u7cfb\u6570 \\(L\\) \u548c\u6e29\u5ea6 \\(T\\) \u76f4\u63a5\u5173\u8054\u3002\u5bf9\u4e8e\u6a21\u578bA,\u8fd9\u4e2a\u7ea6\u675f\u6700\u7ec8\u4f53\u73b0\u4e3a\u8457\u540d\u7684\u7231\u56e0\u65af\u5766-\u6602\u8428\u683c\u5173\u7cfb:</p> \\[ N = 2 L k_B T \\] <p>\u8fd9\u6b63\u662f\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7684\u4e00\u79cd\u5177\u4f53\u5f62\u5f0f,\u5b83\u63ed\u793a\u4e86\u7cfb\u7edf\u7684\u968f\u673a\u6da8\u843d(\u7531 \\(N\\) \u6216 \\(T\\) \u91cf\u5316)\u4e0e\u5b83\u5bf9\u9a71\u52a8\u529b\u7684\u8017\u6563\u54cd\u5e94(\u7531 \\(L\\) \u91cf\u5316)\u662f\u540c\u4e00\u5fae\u89c2\u8fc7\u7a0b\u7684\u4e00\u4f53\u4e24\u9762\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#2-j-dmsrjd","title":"2. \u6784\u5efaJ-D\u751f\u6210\u6cdb\u51fd:MSRJD\u5f62\u5f0f\u4f53\u7cfb","text":"<p>\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u4e3a\u8fd1\u5e73\u8861\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f18\u7f8e\u7684\u7269\u7406\u56fe\u50cf,\u4f46\u5176\u9002\u7528\u8303\u56f4\u53d7\u9650\u4e8e\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u3002\u4e3a\u4e86\u5904\u7406\u66f4\u5e7f\u6cdb\u7684\u3001\u53ef\u80fd\u8fdc\u79bb\u5e73\u8861\u7684\u975e\u5e73\u8861\u95ee\u9898,\u9700\u8981\u4e00\u4e2a\u4e0d\u4f9d\u8d56\u4e8e\u6b64\u6761\u4ef6\u7684\u3001\u66f4\u4e3a\u901a\u7528\u7684\u5f62\u5f0f\u4f53\u7cfb\u3002\u672c\u8282\u7684\u76ee\u6807,\u6b63\u662f\u8981\u6784\u5efa\u8fd9\u6837\u4e00\u4e2a\u666e\u9002\u7684\u8def\u5f84\u79ef\u5206\u8868\u8ff0,\u5b83\u9002\u7528\u4e8e\u4efb\u4f55\u7531\u52a0\u6027\u566a\u58f0\u6717\u4e4b\u4e07\u65b9\u7a0b \\(\\partial_t \\phi = A[\\phi] + \\xi\\) \u63cf\u8ff0\u7684\u7cfb\u7edf\u3002</p> <p>\u8fd9\u4e2a\u6784\u5efa\u8fc7\u7a0b,\u662f\u7b2c19\u8bb2\u4e2d\u4ecb\u7ecd\u7684\"\u4e3a\u8def\u5f84\u8d4b\u4e88\u6743\u91cd\"\u8fd9\u4e00\u6838\u5fc3\u601d\u60f3\u7684\u76f4\u63a5\u5e94\u7528,\u800c\u5176\u91c7\u7528\u7684\u6570\u5b66\u6280\u5de7,\u5c06\u4e0e\u7b2c22\u8bb2\u4e2d\u4e3a\u5904\u7406\u66f4\u590d\u6742\u7684\u4e58\u6027\u566a\u58f0\u6240\u5f15\u5165\u7684MSRJD (Martin-Siggia-Rose-Janssen-De Dominicis) \u5f62\u5f0f\u4f53\u7cfb\u5b8c\u5168\u4e00\u81f4\u3002\u8fd9\u51f8\u663e\u4e86\u8be5\u65b9\u6cd5\u7684\u666e\u9002\u6027\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#21","title":"2.1 \u5f62\u5f0f\u5316\u5e73\u5747\u4e0e\u53d8\u91cf\u66ff\u6362\u7684\u54f2\u5b66","text":"<p>\u51fa\u53d1\u70b9\u662f\u5bf9\u4efb\u610f\u53ef\u89c2\u6d4b\u91cf \\(\\Theta[\\phi]\\) \u6c42\u7cfb\u7efc\u5e73\u5747\u503c\u3002\u4ece\u7269\u7406\u4e0a\u770b,\u7531\u4e8e\u573a \\(\\phi(t)\\) \u7684\u8f68\u8ff9\u5b8c\u5168\u7531\u968f\u673a\u7684\u566a\u58f0\u5386\u53f2 \\(\\xi(t)\\) \u552f\u4e00\u786e\u5b9a,\u56e0\u6b64 \\(\\Theta[\\phi]\\) \u6700\u7ec8\u4e5f\u662f\u566a\u58f0\u7684\u6cdb\u51fd\u3002\u5bf9 \\(\\Theta[\\phi]\\) \u7684\u5e73\u5747,\u672c\u8d28\u4e0a\u662f\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u566a\u58f0\u5386\u53f2 \\(\\xi(t)\\) \u8fdb\u884c\u52a0\u6743\u5e73\u5747\u3002</p> <p>\u7136\u800c,\u566a\u58f0 \\(\\xi\\) \u672c\u8eab\u901a\u5e38\u662f\u4e0d\u53ef\u76f4\u63a5\u89c2\u6d4b\u7684\u5fae\u89c2\u91cf,\u800c\u573a \\(\\phi\\) \u624d\u662f\u5173\u5fc3\u7684\u5b8f\u89c2\u7269\u7406\u91cf\u3002\u56e0\u6b64,\u4e00\u4e2a\u6838\u5fc3\u7684\u7b56\u7565\u5c31\u662f\u8fdb\u884c\u53d8\u91cf\u66ff\u6362 :\u5c06\u79ef\u5206\u53d8\u91cf\u4ece\u4e0d\u53ef\u89c2\u6d4b\u7684\u566a\u58f0\u573a \\(\\xi\\) \u8f6c\u6362\u5230\u53ef\u89c2\u6d4b\u7684\u7269\u7406\u573a \\(\\phi\\)\u3002\u4e3a\u4e86\u5728\u6cdb\u51fd\u79ef\u5206\u4e2d\u5b9e\u73b0\u8fd9\u4e00\u70b9,\u9700\u8981\u4e00\u4e2a\u6570\u5b66\u5de5\u5177\u6765\u4fdd\u8bc1\u8fd9\u79cd\u66ff\u6362\u7684\u5408\u6cd5\u6027,\u8fd9\u4e2a\u5de5\u5177\u5c31\u662f\u6cdb\u51fd\u72c4\u62c9\u514b\\(\\delta\\)\u51fd\u6570\u3002\u5b83\u53ef\u4ee5\u5c06\u5e73\u5747\u8fc7\u7a0b\u5f62\u5f0f\u5316\u5730\u5199\u6210:</p> \\[ \\langle \\Theta[\\phi] \\rangle_{\\xi} = \\left\\langle \\int \\mathcal{D}[\\phi] \\Theta[\\phi] \\underbrace{\\delta[\\phi(t) = \\text{\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u89e3}]}_{\\text{\u786c\u7ea6\u675f:\u53ea\u4fdd\u7559\u7269\u7406\u4e0a\u6709\u610f\u4e49\u7684\u8def\u5f84}} \\right\\rangle_{\\xi} \\] <p>\u8fd9\u91cc\u7684\u8def\u5f84\u79ef\u5206 \\(\\int \\mathcal{D}[\\phi]\\) \u904d\u5386\u4e86\u6240\u6709\u53ef\u80fd\u7684\u573a\u6784\u578b\u5386\u53f2,\u65e0\u8bba\u5b83\u4eec\u662f\u5426\u7b26\u5408\u7269\u7406\u89c4\u5f8b\u3002\u800c\\(\\delta\\)\u51fd\u6570\u7684\u4f5c\u7528\u5c31\u50cf\u4e00\u4e2a\"\u8fc7\u6ee4\u5668\"\u6216\u786c\u7ea6\u675f:\u5b83\u4ece\u6240\u6709\u53ef\u80fd\u7684\u8def\u5f84\u4e2d,\u53ea\u6311\u9009\u51fa\u90a3\u6761\u552f\u4e00\u6ee1\u8db3\u7531\u7279\u5b9a\u566a\u58f0 \\(\\xi\\) \u6240\u9a71\u52a8\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u89e3,\u786e\u4fdd\u4e86\u53ea\u6709\u7269\u7406\u4e0a\u6709\u610f\u4e49\u7684\u8def\u5f84\u5bf9\u6700\u7ec8\u7684\u5e73\u5747\u503c\u6709\u8d21\u732e\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#22-msrjd","title":"2.2 MSRJD\u65b9\u6cd5:\u660e\u786e\u7ea6\u675f","text":"<p>\u4e0a\u8ff0\u8868\u8fbe\u5f0f\u5728\u5f62\u5f0f\u4e0a\u662f\u6b63\u786e\u7684,\u4f46\u96be\u4ee5\u76f4\u63a5\u64cd\u4f5c\u3002MSRJD\u65b9\u6cd5\u662f\u4e00\u4e2a\u5f3a\u5927\u800c\u6807\u51c6\u7684\u6280\u672f,\u5b83\u5c06\u8fd9\u4e2a\u62bd\u8c61\u7684\u7ea6\u675f\u6761\u4ef6\u7528\u5177\u4f53\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u672c\u8eab\u6765\u8868\u8fbe:</p> \\[ \\delta[\\phi(t) = \\text{\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u89e3}] \\rightarrow \\underbrace{J[\\phi]}_{\\text{\u96c5\u53ef\u6bd4}} \\underbrace{\\delta(\\partial_t \\phi - A[\\phi] - \\xi)}_{\\text{\u7528\u52a8\u529b\u5b66\u65b9\u7a0b\u8868\u8fbe\u7684\u7ea6\u675f}} \\] <p>\u8fd9\u91cc\u7684\u4e24\u4e2a\u65b0\u51fa\u73b0\u7684\u9879\u5177\u6709\u660e\u786e\u7684\u6570\u5b66\u548c\u7269\u7406\u610f\u4e49:</p> <ul> <li> <p>\u6cdb\u51fd\\(\\delta\\)\u51fd\u6570 :\u73b0\u5728\u5b83\u7684\u5b97\u91cf\u662f\u6717\u4e4b\u4e07\u65b9\u7a0b\u672c\u8eab\u3002\u8fd9\u4e2a\u51fd\u6570\u5f3a\u5236\u8981\u6c42,\u5bf9\u4e8e\u4efb\u4f55\u6709\u8d21\u732e\u7684\u8def\u5f84,\u5176\u65f6\u95f4\u6f14\u5316\u901f\u7387 \\(\\partial_t \\phi\\) \u5fc5\u987b\u7cbe\u786e\u5730\u7b49\u4e8e\u786e\u5b9a\u6027\u6f02\u79fb \\(A[\\phi]\\) \u4e0e\u968f\u673a\u566a\u58f0 \\(\\xi\\) \u4e4b\u548c\u3002 </p> </li> <li> <p>\u96c5\u53ef\u6bd4\u6cdb\u51fd\u884c\u5217\u5f0f \\(J[\\phi]\\) :\u5728\u4efb\u4f55\u79ef\u5206\u7684\u53d8\u91cf\u66ff\u6362\u4e2d,\u96c5\u53ef\u6bd4\u90fd\u662f\u5fc5\u9700\u7684,\u5b83\u63cf\u8ff0\u4e86\u79ef\u5206\"\u5fae\u5143\"\u7684\u4f53\u79ef\u662f\u5982\u4f55\u53d8\u5316\u7684\u3002\u5728\u8fd9\u91cc,\\(J[\\phi] = |\\det(\\delta\\xi/\\delta\\phi)|\\)\u3002\u7136\u800c,\u4e0e\u7b2c22\u8bb2\u4e2d\u5904\u7406\u4e58\u6027\u566a\u58f0\u65f6\u9047\u5230\u7684\u590d\u6742\u7684\u3001\u4f9d\u8d56\u4e8e\u8def\u5f84\u7684\u96c5\u53ef\u6bd4\u4e0d\u540c,\u5bf9\u4e8e\u672c\u8bb2\u6240\u5173\u6ce8\u7684\u52a0\u6027\u566a\u58f0\u60c5\u51b5,\u4ece \\(\\xi\\)\u5230 \\(\\phi\\) \u7684\u53d8\u6362\u4ec5\u4ec5\u662f\u4e00\u4e2a\"\u5e73\u79fb\",\u5176\u96c5\u53ef\u6bd4\u662f\u4e00\u4e2a\u4e0e\u8def\u5f84\u65e0\u5173\u7684\u5e38\u6570\u3002\u56e0\u6b64,\u5b83\u53ef\u4ee5\u88ab\u5438\u6536\u5230\u603b\u7684\u5f52\u4e00\u5316\u56e0\u5b50\u4e2d,\u5728\u8ba1\u7b97\u4e2d\u53ef\u4ee5\u6682\u65f6\u5ffd\u7565,\u8fd9\u6781\u5927\u5730\u7b80\u5316\u4e86\u95ee\u9898\u3002</p> </li> </ul>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#23","title":"2.3 \u5f15\u5165\u54cd\u5e94\u573a","text":"<p>\u4e0b\u4e00\u6b65\u662f\u5229\u7528 \\(\\delta\\) \u51fd\u6570\u7684\u5085\u91cc\u53f6\u79ef\u5206\u8868\u793a,\u8fd9\u662f\u6574\u4e2a\u5f62\u5f0f\u4f53\u7cfb\u7684\u6838\u5fc3\u6570\u5b66\u6280\u5de7,\u5728\u7b2c22\u8bb2\u4e2d\u4e5f\u66fe\u4f7f\u7528\u8fc7\u3002\u5176\u57fa\u672c\u601d\u60f3\u662f,\u4efb\u4f55\\(\\delta\\)\u51fd\u6570\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u4e2a\u5bf9\u6240\u6709\u9891\u7387(\u6216\u6a21\u5f0f)\u7684\u5e73\u9762\u6ce2\u7684\u79ef\u5206\u3002\u5c06\u5176\u63a8\u5e7f\u5230\u51fd\u6570\u7a7a\u95f4,\u5c31\u5f97\u5230:</p> \\[ \\delta(\\partial_t \\phi - A[\\phi] - \\xi) \\propto \\int \\mathcal{D}[\\tilde{\\phi}] \\exp\\left[i \\int_{x,t} \\tilde{\\phi}_\\alpha (\\partial_t \\phi_\\alpha - A_\\alpha[\\phi] - \\xi_\\alpha)\\right] \\] <p>(\u6ce8\u610f:\u4e3a\u4e0e\u8bfe\u7a0b\u677f\u4e66\u53ca\u6587\u732e\u4e60\u60ef\u4fdd\u6301\u4e00\u81f4,\u8fd9\u91cc\u7684\u865a\u6570\u5355\u4f4d \\(i\\) \u7a0d\u540e\u5c06\u88ab\u5438\u6536\u5230 \\(\\tilde{\\phi}\\) \u7684\u5b9a\u4e49\u4e2d,\u901a\u8fc7\u4e00\u4e2a\"Wick\u65cb\u8f6c\"\u5f97\u5230\u5b9e\u6307\u6570,\u8fd9\u5728\u5904\u7406\u7edf\u8ba1\u7269\u7406\u7684\u6982\u7387\u6743\u91cd\u65f6\u66f4\u4e3a\u81ea\u7136\u3002)</p> <p>\u5c06\u6b64\u8868\u8fbe\u5f0f\u4ee3\u56de,\u53ef\u89c2\u6d4b\u91cf\u7684\u5e73\u5747\u503c\u53d8\u4e3a\u4e00\u4e2a\u6269\u5c55\u7684\u8def\u5f84\u79ef\u5206,\u5b83\u540c\u65f6\u5bf9\u7269\u7406\u573a \\(\\phi\\) \u548c\u65b0\u5f15\u5165\u7684\u8f85\u52a9\u573a \\(\\tilde{\\phi}\\) \u8fdb\u884c\u79ef\u5206:</p> \\[ \\langle \\Theta[\\phi] \\rangle_{\\xi} = \\left\\langle \\int \\mathcal{D}[\\phi] \\mathcal{D}[\\tilde{\\phi}] \\Theta[\\phi] \\exp\\left[-\\int_{x,t} \\tilde{\\phi}_\\alpha (\\partial_t \\phi_\\alpha - A_\\alpha[\\phi] - \\xi_\\alpha)\\right] \\right\\rangle_{\\xi} \\] <p>\u8fd9\u4e2a\u65b0\u5f15\u5165\u7684\u573a \\(\\tilde{\\phi}\\) \u88ab\u79f0\u4e3a\u54cd\u5e94\u573a (response field) \u6216\u5171\u8f6d\u573a (conjugate field)\u3002\u521d\u770b\u8d77\u6765,\\(\\tilde{\\phi}\\) \u4f3c\u4e4e\u53ea\u662f\u4e00\u4e2a\u4e3a\u4e86\u8868\u793a\\(\\delta\\)\u51fd\u6570\u800c\u5f15\u5165\u7684\u3001\u6ca1\u6709\u7269\u7406\u5b9e\u4f53\u7684\"\u5e7d\u7075\"\u573a\u3002\u7136\u800c,\u5b83\u5177\u6709\u6df1\u523b\u7684\u7269\u7406\u610f\u4e49\u3002</p> <p>\u8fd9\u4e2a\u573a\u76f4\u63a5\u5ea6\u91cf\u4e86\u7cfb\u7edf\u5bf9\u4e8e\u5916\u90e8\u5fae\u6270\u7684\u56e0\u679c\u54cd\u5e94 \u3002\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u4e00\u4e2a\"\u63a2\u9488\",\u5b83\u5728\u8def\u5f84\u79ef\u5206\u7684\u6bcf\u4e00\u70b9\u4e0a\"\u6d4b\u91cf\"\u7740\u52a8\u529b\u5b66\u65b9\u7a0b\u88ab\u8fdd\u80cc\u7684\u7a0b\u5ea6\u3002\u6700\u7ec8,\u901a\u8fc7\u8fd9\u4e2a\u5f62\u5f0f\u4f53\u7cfb\u8ba1\u7b97\u51fa\u7684\u5173\u8054\u51fd\u6570 \\(\\langle \\phi(x,t) \\tilde{\\phi}(x',t') \\rangle\\),\u5c06\u88ab\u8bc1\u660e\u6b63\u6bd4\u4e8e\u7cfb\u7edf\u5728 \\((x',t')\\) \u5904\u53d7\u5230\u4e00\u4e2a\u65e0\u7a77\u5c0f\"\u8e22\"\u4e4b\u540e,\u5728 \\((x,t)\\) \u5904\u4ea7\u751f\u7684\u5e73\u5747\u54cd\u5e94\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#3-janssen-de-dominicis","title":"3. Janssen-De Dominicis \u4f5c\u7528\u91cf","text":"<p>\u5f15\u5165\u54cd\u5e94\u573a\u540e,\u8def\u5f84\u79ef\u5206\u7684\u8868\u8fbe\u5f0f\u4e2d\u5305\u542b\u4e86\u4e09\u4e2a\u6cdb\u51fd\u79ef\u5206:\u5bf9 \\(\\phi\\)\u3001\\(\\tilde{\\phi}\\) \u548c\u4ecd\u7136\u5b58\u5728\u7684\u968f\u673a\u566a\u58f0 \\(\\xi\\) \u7684\u5e73\u5747\u3002\u4e0b\u4e00\u6b65,\u4e5f\u662f\u6700\u540e\u4e00\u6b65,\u5c31\u662f\u6267\u884c\u5bf9\u566a\u58f0\u573a \\(\\xi\\) \u7684\u5e73\u5747\u3002\u7531\u4e8e\u566a\u58f0\u88ab\u5047\u8bbe\u4e3a\u9ad8\u65af\u767d\u566a\u58f0,\u8fd9\u4e2a\u5e73\u5747\u53ef\u4ee5\u7cbe\u786e\u5730\u5b8c\u6210\u3002</p> <p>Janssen-De Dominicis (J-D) \u4f5c\u7528\u91cf,\u901a\u5e38\u4f5c\u4e3a\u66f4\u5e7f\u6cdb\u7684MSRJD\u5f62\u5f0f\u4f53\u7cfb\u7684\u4e00\u90e8\u5206\u88ab\u63d0\u53ca,\u5176\u5386\u53f2\u6839\u690d\u4e8e\u91cf\u5b50\u573a\u8bba,\u7531Martin\u3001Siggia\u3001Rose\u7b49\u4eba\u7684\u65e9\u671f\u5de5\u4f5c\u53d1\u5c55\u800c\u6765,\u540e\u88abJanssen\u548cDe Dominicis\u7cfb\u7edf\u5730\u5e94\u7528\u4e8e\u7ecf\u5178\u968f\u673a\u52a8\u529b\u5b66\u3002\u5176\u7269\u7406\u672c\u8d28\u662f\u5c06\u4e00\u4e2a\u96be\u4ee5\u76f4\u63a5\u5904\u7406\u7684\u968f\u673a\u5fae\u5206\u65b9\u7a0b(\u5982\u6717\u4e4b\u4e07\u65b9\u7a0b)\u901a\u8fc7\u8def\u5f84\u79ef\u5206,\u7cbe\u786e\u5730\u8f6c\u5316\u4e3a\u4e00\u4e2a\u66f4\u4fbf\u4e8e\u8ba1\u7b97\u7684\u7edf\u8ba1\u573a\u8bba\u95ee\u9898\u3002\u8fd9\u4e00\u8f6c\u6362\u7684\u6838\u5fc3\u6280\u5de7\u662f\u5f15\u5165\u4e00\u4e2a\u8f85\u52a9\u7684\"\u54cd\u5e94\u573a\",\u5b83\u901a\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\u5f3a\u5236\u65bd\u52a0\u4e86\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u7ea6\u675f,\u4ece\u800c\u5c06\u539f\u59cb\u4f5c\u7528\u91cf(\u5982\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd)\u4e2d\u4e0d\u4fbf\u5904\u7406\u7684\u5e73\u65b9\u9879\u7ebf\u6027\u5316\u3002\u6700\u7ec8\u5f97\u5230\u7684J-D\u4f5c\u7528\u91cf\u662f\u4e00\u4e2a\u5305\u542b\u7269\u7406\u573a\u548c\u54cd\u5e94\u573a\u7684\u6cdb\u51fd,\u5b83\u4f18\u96c5\u5730\u5c06\u7cfb\u7edf\u7684\u786e\u5b9a\u6027\u6f02\u79fb\u548c\u566a\u58f0\u7edf\u8ba1\u7279\u6027\u7f16\u7801\u4e8e\u4e00\u8eab,\u4f5c\u4e3a\u6240\u6709\u7269\u7406\u53ef\u89c2\u6d4b\u91cf(\u5982\u5173\u8054\u548c\u54cd\u5e94\u51fd\u6570)\u7684\u751f\u6210\u6cdb\u51fd\u3002\u5177\u4f53\u7684\u5e94\u7528\u573a\u666f\u6781\u5176\u5e7f\u6cdb,\u5b83\u4e0d\u4ec5\u662f\u63a8\u5bfc\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7b49\u57fa\u672c\u5173\u7cfb\u7684\u7406\u8bba\u57fa\u77f3,\u66f4\u662f\u8fd0\u7528\u5fae\u6270\u7406\u8bba\u3001\u8d39\u66fc\u56fe\u548c\u91cd\u6574\u5316\u7fa4\u7b49\u5f3a\u5927\u5de5\u5177\u6765\u5206\u6790\u590d\u6742\u975e\u5e73\u8861\u7cfb\u7edf\u7684\u6807\u51c6\u8d77\u70b9,\u5c24\u5176\u5728\u7814\u7a76\u76f8\u53d8\u4e34\u754c\u52a8\u529b\u5b66\u3001\u542b\u4e58\u6027\u566a\u58f0\u7684\u7cfb\u7edf\u4ee5\u53ca\u8f6f\u7269\u8d28\u548c\u751f\u7269\u7269\u7406\u4e2d\u7684\u968f\u673a\u8fc7\u7a0b\u7b49\u524d\u6cbf\u9886\u57df\u4e2d\u626e\u6f14\u7740\u6838\u5fc3\u89d2\u8272\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#31","title":"3.1 \u5bf9\u566a\u58f0\u8fdb\u884c\u79ef\u5206","text":"<p>\u8def\u5f84\u79ef\u5206\u4e2d\u4e0e\u566a\u58f0\\(\\xi\\)\u76f4\u63a5\u8026\u5408\u7684\u9879\u662f \\(\\exp[\\int \\tilde{\\phi}_\\alpha \\xi_\\alpha]\\)\u3002\u5bf9\u8fd9\u4e2a\u91cf\u6c42\u9ad8\u65af\u566a\u58f0\u7684\u5e73\u5747\u503c,\u9700\u8981\u7528\u5230\u9ad8\u65af\u79ef\u5206\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28:\u5bf9\u4e8e\u4e00\u4e2a\u5747\u503c\u4e3a\u96f6\u7684\u9ad8\u65af\u53d8\u91cf \\(X\\),\u6709 \\(\\langle e^X \\rangle = e^{\\frac{1}{2} \\langle X^2 \\rangle}\\)\u3002\u5c06\u5176\u63a8\u5e7f\u5230\u6cdb\u51fd,\u5177\u4f53\u8ba1\u7b97\u5982\u4e0b:</p> \\[ \\left\\langle \\exp\\left[\\int_{x,t} \\tilde{\\phi}_\\alpha \\xi_\\alpha\\right] \\right\\rangle_\\xi = \\exp\\left[\\frac{1}{2} \\iint \\tilde{\\phi}_\\alpha(x,t) \\tilde{\\phi}_\\beta(x',t') \\langle \\xi_\\alpha(x,t) \\xi_\\beta(x',t') \\rangle\\right] \\] <p>\u5bf9\u4e8e\u9ad8\u65af\u767d\u566a\u58f0,\u5176\u5173\u8054\u51fd\u6570\u4e3a \\(\\langle \\xi_\\alpha(x,t) \\xi_\\beta(x',t') \\rangle = N_{\\alpha\\beta} \\delta(x-x') \\delta(t-t')\\)\u3002\u4ee3\u5165\u4e0a\u5f0f\u5e76\u5bf9 \\(x'\\) \u548c \\(t'\\) \u8fdb\u884c\u79ef\u5206,\\(\\delta\\)\u51fd\u6570\u4f7f\u5f97\u79ef\u5206\u53d8\u5f97\u5e73\u51e1,\u5f97\u5230:</p> \\[ \\langle \\exp[\\ldots] \\rangle_\\xi = \\exp\\left[\\frac{1}{2} \\int_{x,t} \\tilde{\\phi}_\\alpha N_{\\alpha\\beta} \\tilde{\\phi}_\\beta\\right] \\] <p>\u8fd9\u4e2a\u7ed3\u679c\u7684\u7269\u7406\u610f\u4e49\u662f:\u539f\u59cb\u7684\u7269\u7406\u566a\u58f0\u573a \\(\\xi\\) \u88ab\u79ef\u5206\u6389(\u5e73\u5747\u6389)\u4e86,\u4f46\u5b83\u7684\u7edf\u8ba1\u7279\u6027(\u7531\u566a\u58f0\u5173\u8054\u77e9\u9635 \\(N_{\\alpha\\beta}\\) \u63cf\u8ff0)\u901a\u8fc7\u4e00\u4e2a\u5173\u4e8e\u54cd\u5e94\u573a\u7684\u4e8c\u6b21\u9879,\u88ab\u6c38\u4e45\u5730\"\u70d9\u5370\"\u5728\u4e86\u7cfb\u7edf\u7684\u6709\u6548\u4f5c\u7528\u91cf\u4e2d\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#32","title":"3.2 \u6700\u7ec8\u7684\u8def\u5f84\u79ef\u5206\u4e0e\u4f5c\u7528\u91cf","text":"<p>\u5c06\u6240\u6709\u90e8\u5206\u7ec4\u5408\u5728\u4e00\u8d77,\u5c31\u5f97\u5230\u4e86\u53ef\u89c2\u6d4b\u91cf\u5e73\u5747\u503c\u7684\u6700\u7ec8\u8def\u5f84\u79ef\u5206\u8868\u8fbe\u5f0f:</p> \\[ \\langle \\Theta[\\phi] \\rangle = \\int \\mathcal{D}[\\phi]\\mathcal{D}[\\tilde{\\phi}] \\Theta[\\phi] \\exp\\left(-S[\\phi,\\tilde{\\phi}]\\right) \\] <p>\u8fd9\u91cc\u7684 \\(S[\\phi,\\tilde{\\phi}]\\) \u5c31\u662fJanssen-De Dominicis (J-D) \u4f5c\u7528\u91cf,\u5176\u5177\u4f53\u5f62\u5f0f\u4e3a:</p> \\[ S[\\phi,\\tilde{\\phi}] = \\int_{x,t} \\left[ \\underbrace{\\tilde{\\phi}_\\alpha \\left( \\dot{\\phi}_\\alpha - A_\\alpha[\\phi] \\right)}_{\\text{\u52a8\u529b\u5b66\u7ea6\u675f\u9879}} - \\underbrace{\\frac{1}{2} \\tilde{\\phi}_\\alpha N_{\\alpha\\beta} \\tilde{\\phi}_\\beta}_{\\text{\u566a\u58f0\u8d21\u732e\u9879}} \\right] \\] <p>\u73b0\u5728,\u7cfb\u7edf\u7684\u5168\u90e8\u52a8\u529b\u5b66\u4fe1\u606f\u2014\u2014\u5305\u62ec\u786e\u5b9a\u6027\u6f02\u79fb\u548c\u968f\u673a\u566a\u58f0\u2014\u2014\u90fd\u88ab\u4f18\u96c5\u5730\u7f16\u7801\u5728\u4e86\u4e00\u4e2a\u4f5c\u7528\u91cf\u6cdb\u51fd\u4e2d\u3002\u8ba1\u7b97\u4efb\u4f55\u7269\u7406\u91cf\u7684\u5e73\u5747\u503c,\u90fd\u5f52\u7ed3\u4e3a\u8ba1\u7b97\u5728\u8fd9\u4e2a\u4f5c\u7528\u91cf\u4e0b\u7684\u8def\u5f84\u79ef\u5206\u3002\u8fd9\u4e2a\u4f5c\u7528\u91cf\u6210\u4e3a\u4e86\u6240\u6709\u5173\u8054\u51fd\u6570\u548c\u54cd\u5e94\u51fd\u6570\u7684\u751f\u6210\u6cdb\u51fd\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#33-j-d","title":"3.3 \u89e3\u5256 J-D \u4f5c\u7528\u91cf","text":"<p>J-D \u4f5c\u7528\u91cf\u7531\u4e24\u4e2a\u4e3b\u8981\u90e8\u5206\u7ec4\u6210,\u6bcf\u4e00\u90e8\u5206\u90fd\u6709\u6e05\u6670\u7684\u7269\u7406\u542b\u4e49:</p> <ol> <li>\u52a8\u529b\u5b66\u7ea6\u675f\u9879: \\(\\int \\tilde{\\phi}_\\alpha (\\dot{\\phi}_\\alpha - A_\\alpha[\\phi])\\)</li> </ol> <p>\u8fd9\u4e2a\u9879\u76f4\u63a5\u6765\u81ea\u4e8e\u5bf9\u52a8\u529b\u5b66\u65b9\u7a0b\u7684\u7ea6\u675f\u3002\u54cd\u5e94\u573a \\(\\tilde{\\phi}\\) \u5728\u6b64\u626e\u6f14\u4e86\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u7684\u89d2\u8272,\u5b83\u5728\"\u5e73\u5747\u610f\u4e49\u4e0a\"\u5f3a\u5236\u8981\u6c42\u7269\u7406\u573a \\(\\phi\\) \u7684\u6f14\u5316\u9075\u5faa\u786e\u5b9a\u6027\u6f02\u79fb \\(A_\\alpha[\\phi]\\)\u3002</p> <ol> <li>\u566a\u58f0\u8d21\u732e\u9879: \\(-\\frac{1}{2} \\int \\tilde{\\phi}_\\alpha N_{\\alpha\\beta} \\tilde{\\phi}_\\beta\\)</li> </ol> <p>\u8fd9\u4e2a\u9879\u662f\u76f4\u63a5\u5bf9\u566a\u58f0\u573a \\(\\xi\\) \u79ef\u5206\u7684\u7ed3\u679c\u3002\u5b83\u7684\u7ed3\u6784\u2014\u2014\u5173\u4e8e\u54cd\u5e94\u573a\u7684\u4e8c\u6b21\u578b\u2014\u2014\u5b8c\u5168\u7531\u566a\u58f0\u7684\u7edf\u8ba1\u7279\u6027(\u7531\u5173\u8054\u77e9\u9635 \\(N_{\\alpha\\beta}\\) \u63cf\u8ff0)\u51b3\u5b9a\u3002\u8fd9\u4e2a\u9879\u63cf\u8ff0\u4e86\u6da8\u843d\u5982\u4f55\u5f71\u54cd\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u3002</p> <p>\u901a\u8fc7\u5bf9\u6bd4\u7b2c31\u8bb2\u7684\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e(O-M)\u4f5c\u7528\u91cf,\u53ef\u4ee5\u66f4\u6df1\u523b\u5730\u7406\u89e3J-D\u4f5c\u7528\u91cf\u7684\u4f18\u52bf:</p> <p>O-M\u4f5c\u7528\u91cf:\u5f62\u5f0f\u4e3a \\((\\dot{\\phi}-A)^2\\),\u7269\u7406\u56fe\u50cf\u76f4\u89c2(\u8def\u5f84\u504f\u79bb\u7684\u4ee3\u4ef7),\u4f46\u6570\u5b66\u4e0a\u662f\u4e8c\u6b21\u7684,\u4e0d\u4fbf\u8ba1\u7b97\u3002</p> <p>J-D\u4f5c\u7528\u91cf:\u5f62\u5f0f\u4e3a \\(\\tilde{\\phi}(\\dot{\\phi}-A)\\),\u5bf9\u52a8\u529b\u5b66\u90e8\u5206\u662f\u7ebf\u6027\u7684,\u5927\u5927\u7b80\u5316\u4e86\u5fae\u6270\u8ba1\u7b97,\u4ee3\u4ef7\u662f\u5f15\u5165\u4e86\u8f85\u52a9\u7684\u54cd\u5e94\u573a \\(\\tilde{\\phi}\\)\u3002</p> <p>\u8fd9\u662f\u4e00\u79cd\u5728\u573a\u8bba\u4e2d\u5e38\u89c1\u7684\u6743\u8861:\u901a\u8fc7\u5f15\u5165\u8f85\u52a9\u573a\u6765\u7b80\u5316\u4f5c\u7528\u91cf\u7684\u7ed3\u6784\u3002</p> <p>\u4e3a\u4e86\u5e2e\u52a9\u7406\u89e3\u8fd9\u4e2a\u5f62\u5f0f\u4f53\u7cfb\u4e2d\u5404\u4e2a\u573a\u7684\u89d2\u8272,\u4e0b\u8868\u8fdb\u884c\u4e86\u603b\u7ed3:</p> \u7b26\u53f7 \u540d\u79f0 \u7269\u7406\u8be0\u91ca \u6765\u6e90\u65b9\u7a0b \\(\\phi(x, t)\\) \u7269\u7406\u573a \u7cfb\u7edf\u7684\u4e3b\u8981\u52a8\u529b\u5b66\u53d8\u91cf(\u5982\u5e8f\u53c2\u91cf\u3001\u6d53\u5ea6\u573a)\u3002 \\(\\partial_t \\phi = \\mathcal{L}[\\phi] + \\xi\\) \\(\\tilde{\\phi}(x, t)\\) \u54cd\u5e94\u573a \u4e00\u4e2a\u8f85\u52a9\u573a,\u5ea6\u91cf\u7cfb\u7edf\u5bf9\u5916\u90e8\u5fae\u6270\u7684\u56e0\u679c\u54cd\u5e94\u3002 \\(\\partial_t \\tilde{\\phi} = -\\mathcal{L}^\\dagger[\\tilde{\\phi}]\\) \\(\\xi(x, t)\\) \u566a\u58f0\u573a \u4ee3\u8868\u6765\u81ea\u73af\u5883\u7684\u968f\u673a\u9a71\u52a8\u529b(\u5982\u70ed\u6da8\u843d)\u3002 \u6da8\u843d-\u8017\u6563\u5b9a\u7406 \\(h(x, t)\\) \u5916\u573a \u4e00\u4e2a\u53ef\u63a7\u7684\u5916\u90e8\u5fae\u6270,\u7528\u4e8e\u63a2\u6d4b\u7cfb\u7edf\u7684\u54cd\u5e94\u7279\u6027\u3002 \u4f5c\u7528\u4e8e \\(\\phi\\) \u7684\u9a71\u52a8\u9879"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#4","title":"4. \u63a2\u6d4b\u7cfb\u7edf:\u54cd\u5e94\u51fd\u6570\u4e0e\u5173\u8054\u51fd\u6570","text":"<p>J-D\u5f62\u5f0f\u4f53\u7cfb\u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e,\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7cfb\u7edf\u6027\u7684\u65b9\u6cd5\u6765\u8ba1\u7b97\u7269\u7406\u4e0a\u53ef\u6d4b\u91cf\u7684\u91cf\u3002\u524d\u51e0\u8282\u6784\u5efa\u7684\u4f5c\u7528\u91cf\u662f\u7406\u8bba\u7684\"\u5f15\u64ce\",\u8fd9\u8282\u5c06\u5c55\u793a\u5982\u4f55\u9a7e\u9a76\u5b83\u6765\u63a2\u7d22\u7cfb\u7edf\u7684\u4e24\u4e2a\u6838\u5fc3\u52a8\u6001\u7279\u6027:\u7cfb\u7edf\u5982\u4f55\u54cd\u5e94\u5916\u90e8\u7684\"\u63a2\u9488\"(\u7531\u54cd\u5e94\u51fd\u6570\u63cf\u8ff0),\u4ee5\u53ca\u7cfb\u7edf\u81ea\u8eab\u5982\u4f55\u5728\u5e73\u8861\u6001\u4e0b\"\u8d77\u4f0f\u4e0d\u5b9a\"(\u7531\u5173\u8054\u51fd\u6570\u63cf\u8ff0)\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#41","title":"4.1 \u5bf9\u7cfb\u7edf\u65bd\u52a0\u5fae\u6270:\u54cd\u5e94\u573a\u7684\u7269\u7406\u610f\u4e49","text":"<p>\u4e3a\u4e86\u7ed9\u5728\u6570\u5b66\u63a8\u5bfc\u4e2d\u5f15\u5165\u7684\"\u5e7d\u7075\"\u573a \\(\\tilde{\\phi}\\) \u8d4b\u4e88\u575a\u5b9e\u7684\u7269\u7406\u610f\u4e49,\u53ef\u4ee5\u91c7\u7528\u4e00\u4e2a\u7269\u7406\u5b66\u5bb6\u6700\u5e38\u7528\u7684\u7b56\u7565:\u4e3b\u52a8\u63a2\u6d4b\u3002\u901a\u8fc7\u5728\u7cfb\u7edf\u4e2d\u5f15\u5165\u4e00\u4e2a\u5fae\u5f31\u7684\u3001\u53ef\u63a7\u7684\u5916\u90e8\u5fae\u6270\u573a \\(h(x,t)\\),\u89c2\u5bdf\u5b83\u5728\u7406\u8bba\u6846\u67b6\u4e2d\u4e0e\u54ea\u4e2a\u91cf\u76f8\u4e92\u4f5c\u7528\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u63a5\u8fd1\u5e73\u8861\u7684\u7cfb\u7edf(\u5982\u6a21\u578bA),\u5176\u6f02\u79fb\u9879\u53ef\u4ee5\u4ece\u81ea\u7531\u80fd \\(F\\) \u7684\u6cdb\u51fd\u5bfc\u6570\u5bfc\u51fa:\\(A[\\phi] = -L \\frac{\\delta F}{\\delta \\phi}\\)\u3002\u5916\u573a \\(h\\) \u901a\u5e38\u4e0e\u7269\u7406\u573a \\(\\phi\\) \u76f4\u63a5\u8026\u5408,\u8fd9\u76f8\u5f53\u4e8e\u4fee\u6539\u4e86\u7cfb\u7edf\u7684\u81ea\u7531\u80fd\u666f\u89c2:</p> \\[ F \\rightarrow F' = F - \\int d^d x dt \\, h(x,t) \\phi(x,t) \\] <p>\u8fd9\u4e2a\u81ea\u7531\u80fd\u7684\u6539\u53d8\u4f1a\u7acb\u523b\u4f20\u9012\u5230\u6f02\u79fb\u9879\u4e2d:</p> \\[ \\frac{\\delta F'}{\\delta \\phi} = \\frac{\\delta F}{\\delta \\phi} - h \\quad \\implies \\quad A'[\\phi] = -L \\frac{\\delta F'}{\\delta \\phi} = A[\\phi] + Lh \\] <p>\u73b0\u5728,\u5c06\u8fd9\u4e2a\u65b0\u7684\u6f02\u79fb\u9879 \\(A'\\) \u4ee3\u5165J-D\u4f5c\u7528\u91cf\u7684\u52a8\u529b\u5b66\u7ea6\u675f\u90e8\u5206 \\(\\int \\tilde{\\phi}(\\dot{\\phi} - A')\\),\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e0e\u5916\u573a\u76f8\u5173\u7684\u989d\u5916\u9879:</p> \\[ S \\rightarrow S' = S - \\int_{x,t} L h(x,t) \\tilde{\\phi}(x,t) \\] <p>\u8fd9\u4e2a\u7ed3\u679c\u63ed\u793a\u4e86\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u8054\u7cfb:\u7269\u7406\u4e16\u754c\u4e2d\u53ef\u63a7\u7684\u5916\u90e8\u63a2\u9488 \\(h\\),\u5728J-D\u4f5c\u7528\u91cf\u4e2d,\u7adf\u7136\u662f\u4e0e\u90a3\u4e2a\u770b\u4f3c\u62bd\u8c61\u7684\u8f85\u52a9\u573a \\(\\tilde{\\phi}\\) \u76f8\u8026\u5408\u7684\u3002\u6362\u8a00\u4e4b,\u5916\u573a \\(h\\) \u5145\u5f53\u4e86\u54cd\u5e94\u573a \\(\\tilde{\\phi}\\) \u7684\u6e90 (source) \u3002\u8fd9\u4e3a \\(\\tilde{\\phi}\\) \u7684\"\u54cd\u5e94\"\u4e4b\u540d\u63d0\u4f9b\u4e86\u6700\u76f4\u63a5\u7684\u8bc1\u636e\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#42-chi","title":"4.2 \u7ebf\u6027\u54cd\u5e94\u51fd\u6570 \\(\\chi\\)","text":"<p>\u7ebf\u6027\u54cd\u5e94\u51fd\u6570 \\(\\chi\\) (\u5728\u78c1\u7cfb\u7edf\u4e2d\u4e5f\u79f0\u52a8\u6001\u78c1\u5316\u7387),\u88ab\u5b9a\u4e49\u4e3a\u7cfb\u7edf\u5bf9\u4e00\u4e2a\u65e0\u7a77\u5c0f\u5916\u573a\u7684\u54cd\u5e94,\u5177\u4f53\u6765\u8bf4,\u662f\u7269\u7406\u573a\u5e73\u5747\u503c\u5bf9\u5916\u573a\u7684\u6cdb\u51fd\u5bfc\u6570,\u5e76\u5728\u5916\u573a\u4e3a\u96f6\u65f6\u53d6\u503c:</p> \\[ \\chi(x,t;x',t') = \\frac{\\delta \\langle \\phi(x,t) \\rangle}{\\delta h(x',t')} \\Bigg|_{h \\rightarrow 0} \\] <p>\u4f7f\u7528\u8def\u5f84\u79ef\u5206\u8868\u8fbe\u5f0f \\(\\langle \\phi \\rangle = \\frac{1}{Z} \\int \\mathcal{D}[\\phi,\\tilde{\\phi}] \\phi e^{-S'}\\),\u53ef\u4ee5\u663e\u5f0f\u5730\u8ba1\u7b97\u8fd9\u4e2a\u5bfc\u6570\u3002\u5bf9 \\(e^{-S'}\\) \u6c42\u5173\u4e8e \\(h(x',t')\\) \u7684\u5bfc\u6570,\u4f1a\u4ece\u6307\u6570\u4e0a\u5e26\u4e0b\u4e00\u4e2a\u56e0\u5b50 \\(L \\tilde{\\phi}(x',t')\\)\u3002\u56e0\u6b64,\u5f97\u5230:</p> \\[ \\chi(x,t;x',t') = L \\langle \\phi(x,t) \\tilde{\\phi}(x',t') \\rangle \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u662f\u54cd\u5e94\u7406\u8bba\u7684\u6838\u5fc3\u7ed3\u679c\u4e4b\u4e00,\u4e5f\u662fMSRJD\u5f62\u5f0f\u4f53\u7cfb\u7684\u5f3a\u5927\u5a01\u529b\u7684\u76f4\u63a5\u4f53\u73b0\u3002\u5b83\u4e25\u683c\u8bc1\u660e\u4e86\u5bf9\u54cd\u5e94\u573a \\(\\tilde{\\phi}\\) \u7684\u7269\u7406\u8be0\u91ca:\u7269\u7406\u573a \\(\\phi\\) \u4e0e\u54cd\u5e94\u573a \\(\\tilde{\\phi}\\) \u7684\u65f6\u7a7a\u5173\u8054\u51fd\u6570,\u76f4\u63a5\u7ed9\u51fa\u4e86\u7cfb\u7edf\u7684\u7ebf\u6027\u54cd\u5e94\u51fd\u6570 \u3002\u4e00\u4e2a\u539f\u672c\u62bd\u8c61\u7684\u6570\u5b66\u6784\u9020,\u73b0\u5728\u4e0e\u4e00\u4e2a\u53ef\u6d4b\u91cf\u7684\u7269\u7406\u91cf\u7cbe\u786e\u5730\u7b49\u540c\u4e86\u8d77\u6765\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#43-c","title":"4.3 \u4e24\u70b9\u5173\u8054\u51fd\u6570 \\(C\\) \u4e0e\u56e0\u679c\u6027","text":"<p>\u4e0e\u54cd\u5e94\u51fd\u6570\u4e0d\u540c,\u4e24\u70b9\u5173\u8054\u51fd\u6570 \\(C\\) \u63cf\u8ff0\u7684\u662f\u7269\u7406\u573a\u81ea\u8eab\u5728\u4e0d\u540c\u65f6\u7a7a\u70b9\u7684\u7edf\u8ba1\u5173\u8054,\u5373\u7cfb\u7edf\u81ea\u53d1\u7684\u3001\u5185\u90e8\u7684\u6da8\u843d\u4e4b\u95f4\u7684\u7edf\u8ba1\u76f8\u5173\u6027:</p> \\[ C(x,t;x',t') = \\langle \\phi(x,t) \\phi(x',t') \\rangle \\] <p>\u5fc5\u987b\u5f3a\u8c03 \\(C\\) \u548c \\(\\chi\\) \u5728\u7269\u7406\u4e0a\u7684\u6839\u672c\u533a\u522b:</p> <ul> <li> <p>\u5173\u8054\u51fd\u6570 \\(C\\):\u63cf\u8ff0\u5e73\u8861\u6001\u4e0b\u7684\u81ea\u53d1\u6da8\u843d\u3002\u5b83\u662f\u4e00\u4e2a(\u5728\u65f6\u95f4\u5dee\u4e0a)\u5bf9\u79f0\u7684\u91cf,\u53cd\u6620\u7684\u662f\"\u76f8\u5173\"\u800c\u975e\"\u56e0\u679c\"\u3002</p> </li> <li> <p>\u54cd\u5e94\u51fd\u6570 \\(\\chi\\):\u63cf\u8ff0\u4e00\u4e2a\u975e\u5e73\u8861\u8fc7\u7a0b,\u5373\u4e00\u4e2a\u5916\u90e8\u6270\u52a8\u5982\u4f55\u5bfc\u81f4\u7cfb\u7edf\u5728\u53e6\u4e00\u4e2a\u65f6\u7a7a\u70b9\u4ea7\u751f\u54cd\u5e94\u3002\u5b83\u662f\u4e00\u4e2a\u975e\u5bf9\u79f0\u7684\u3001\u5177\u6709\u56e0\u679c\u6027\u7684\u91cf\u3002</p> </li> </ul> <p>\u57fa\u672c\u7684\u7269\u7406\u539f\u5219\u2014\u2014\u56e0\u679c\u6027\u2014\u2014\u8981\u6c42\u54cd\u5e94\u51fd\u6570\u5fc5\u987b\u6ee1\u8db3 \\(\\chi(x,t;x',t') = 0\\) \u5982\u679c \\(t &lt; t'\\),\u5373\u7ed3\u679c\u4e0d\u80fd\u51fa\u73b0\u5728\u539f\u56e0\u4e4b\u524d\u3002\u8fd9\u4e2a\u539f\u5219\u662f\u5982\u4f55\u88ab\u81ea\u52a8\u7f16\u7801\u5728J-D\u5f62\u5f0f\u4f53\u7cfb\u4e2d\u7684\u5462?\u7b54\u6848\u5728\u4e8e\u4f5c\u7528\u91cf\u7684\u7ed3\u6784\u3002J-D\u4f5c\u7528\u91cf\u4e2d\u7684\u52a8\u529b\u5b66\u9879 \\(\\int \\tilde{\\phi} \\dot{\\phi}\\) \u662f\u5173\u952e\u3002\u5728\u573a\u8bba\u8ba1\u7b97\u4e2d,\u54cd\u5e94\u51fd\u6570 \\(\\langle \\phi \\tilde{\\phi} \\rangle\\) \u672c\u8d28\u4e0a\u662f\u7531\u8fd9\u4e2a\u4f5c\u7528\u91cf\u5bfc\u51fa\u7684\u683c\u6797\u51fd\u6570(\u6216\u4f20\u64ad\u5b50)\u3002\u6b63\u662f\u8fd9\u4e2a\u5305\u542b\u65f6\u95f4\u4e00\u9636\u5bfc\u6570\u7684\u9879,\u4fdd\u8bc1\u4e86\u8ba1\u7b97\u51fa\u7684\u683c\u6797\u51fd\u6570\u5728\u65f6\u95f4\u4e0a\u662f\"\u5ef6\u8fdf\u7684\"(retarded),\u5373\u5b83\u81ea\u7136\u5730\u5305\u542b\u4e86\u4ee3\u8868\u56e0\u679c\u6027\u7684\u8d6b\u7ef4\u8d5b\u5fb7\u9636\u8dc3\u51fd\u6570 \\(\\Theta(t-t')\\)\u3002\u56e0\u6b64,\u56e0\u679c\u6027\u4e0d\u662f\u88ab\u624b\u52a8\u52a0\u5165\u7684,\u800c\u662f\u4ece\u63cf\u8ff0\u65f6\u95f4\u5355\u5411\u6f14\u5316\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u5f62\u5f0f\u4f53\u7cfb\u4e2d\u81ea\u7136\u6d8c\u73b0\u7684\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#5-","title":"5. \u6da8\u843d-\u8017\u6563\u5b9a\u7406:\u8fde\u63a5\u54cd\u5e94\u4e0e\u6da8\u843d","text":"<p>\u81f3\u6b64,J-D\u5f62\u5f0f\u4f53\u7cfb\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8ba1\u7b97\u54cd\u5e94\u51fd\u6570 \\(\\chi\\)(\u901a\u8fc7 \\(\\langle \\phi \\tilde{\\phi} \\rangle\\))\u548c\u5173\u8054\u51fd\u6570 \\(C\\)(\u901a\u8fc7 \\(\\langle \\phi \\phi \\rangle\\))\u7684\u7cfb\u7edf\u6027\u5de5\u5177\u3002\u5bf9\u4e8e\u5904\u4e8e\u70ed\u5e73\u8861\u7684\u7cfb\u7edf,\u8fd9\u4e24\u4e2a\u770b\u4f3c\u65e0\u5173\u7684\u91cf\u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u6df1\u523b\u800c\u666e\u9002\u7684\u5173\u7cfb,\u8fd9\u5c31\u662f\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#51-fdt","title":"5.1 FDT\u7684\u6761\u4ef6","text":"<p>\u63a8\u5bfcFDT\u7684\u524d\u63d0\u662f\u7cfb\u7edf\u5904\u4e8e\u70ed\u5e73\u8861\u72b6\u6001,\u5373\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6 \u3002\u5728J-D\u5f62\u5f0f\u4f53\u7cfb\u7684\u8bed\u8a00\u4e2d,\u8fd9\u610f\u5473\u7740\u52a8\u529b\u5b66\u5177\u6709\u7279\u5b9a\u7684\u7ed3\u6784,\u8fd9\u4e0e\u7b2c31\u8bb2\u7684\u7ed3\u8bba\u5b8c\u5168\u4e00\u81f4:</p> <ol> <li> <p>\u6f02\u79fb\u9879 \\(A\\) \u662f\u4fdd\u5b88\u7684,\u5373\u53ef\u4ee5\u7531\u4e00\u4e2a\u81ea\u7531\u80fd\u6cdb\u51fd \\(F\\) \u7684\u68af\u5ea6\u7ed9\u51fa:\\(A = -L \\frac{\\delta F}{\\delta \\phi}\\)\u3002</p> </li> <li> <p>\u566a\u58f0\u5f3a\u5ea6 \\(N\\) \u4e0e\u8017\u6563\u7cfb\u6570 \\(L\\) \u548c\u6e29\u5ea6 \\(T\\) \u4e4b\u95f4\u6ee1\u8db3\u7231\u56e0\u65af\u5766-\u6602\u8428\u683c\u5173\u7cfb:\\(N = 2Lk_BT\\)\u3002</p> </li> </ol>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#52-fdt","title":"5.2 FDT\u4f5c\u4e3a\u4f5c\u7528\u91cf\u7684\u5bf9\u79f0\u6027","text":"<p>FDT\u5c06\u54cd\u5e94(\u4e0e \\(\\langle \\phi \\tilde{\\phi} \\rangle\\) \u76f8\u5173)\u548c\u5173\u8054(\u4e0e \\(\\langle \\phi \\phi \\rangle\\) \u76f8\u5173)\u8054\u7cfb\u8d77\u6765\u3002\u8fd9\u5f3a\u70c8\u5730\u6697\u793a\u4e86,\u5728\u6ee1\u8db3\u4e0a\u8ff0\u5e73\u8861\u6761\u4ef6\u65f6,J-D\u4f5c\u7528\u91cf\u53ef\u80fd\u5b58\u5728\u4e00\u79cd\u80fd\u591f\u8054\u7cfb \\(\\tilde{\\phi}\\) \u548c \\(\\phi\\) \u7684\u9690\u85cf\u5bf9\u79f0\u6027\u3002</p> <p>\u8fd9\u79cd\u5bf9\u79f0\u6027\u786e\u5b9e\u5b58\u5728,\u5e76\u4e14\u4e0e\u7cfb\u7edf\u7684\u65f6\u95f4\u53cd\u6f14\u4e0d\u53d8\u6027\u5bc6\u5207\u76f8\u5173\u3002\u867d\u7136\u5b8c\u6574\u7684\u63a8\u5bfc\u8f83\u4e3a\u590d\u6742,\u4f46\u5176\u6838\u5fc3\u601d\u60f3\u662f,\u5728\u6ee1\u8db3\u5e73\u8861\u6761\u4ef6\u65f6,\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u5de7\u5999\u7684\u975e\u7ebf\u6027\u573a\u53d8\u6362,\u5c06J-D\u4f5c\u7528\u91cf\u6539\u5199\u6210\u4e00\u79cd\u66f4\u5bf9\u79f0\u7684\u5f62\u5f0f(\u5728\u8d85\u5bf9\u79f0\u573a\u8bba\u4e2d\u6709\u65f6\u88ab\u79f0\u4e3aBRST\u5bf9\u79f0\u6027)\u3002\u4f5c\u7528\u91cf\u5c42\u9762\u7684\u4efb\u4f55\u8fde\u7eed\u5bf9\u79f0\u6027,\u90fd\u4f1a\u901a\u8fc7\u8bfa\u7279\u5b9a\u7406(\u6216\u5728\u573a\u8bba\u4e2d\u7684\u7b49\u4ef7\u5f62\u5f0f,\u6c83\u5fb7\u6052\u7b49\u5f0f)\u5bfc\u81f4\u5176\u5bfc\u51fa\u7684\u5173\u8054\u51fd\u6570\u4e4b\u95f4\u5b58\u5728\u7279\u5b9a\u7684\u5173\u7cfb\u3002\u6da8\u843d-\u8017\u6563\u5b9a\u7406,\u6b63\u662f\u5bf9\u5e94\u4e8e\u8fd9\u79cd\u4e0e\u65f6\u95f4\u53cd\u6f14\u76f8\u5173\u7684\u9690\u85cf\u5bf9\u79f0\u6027\u7684\u6c83\u5fb7\u6052\u7b49\u5f0f (Ward identity)\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#53-fdt","title":"5.3 FDT\u7684\u6700\u7ec8\u5f62\u5f0f\u4e0e\u7269\u7406\u5185\u6db5","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5e73\u7a33\u3001\u5747\u5300\u7684\u5e73\u8861\u7cfb\u7edf,\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7684\u6700\u7ec8\u5f62\u5f0f\u4e3a:</p> \\[ \\chi(x-x',t-t') = \\frac{1}{k_B T} \\Theta(t-t') \\left(-\\frac{\\partial}{\\partial t'} C(x-x',t-t')\\right) \\] <p>\u7531\u4e8e\u7cfb\u7edf\u7684\u5e73\u7a33\u6027,\\(C\\) \u53ea\u4f9d\u8d56\u4e8e\u65f6\u95f4\u5dee \\(\\tau = t-t'\\),\u56e0\u6b64 \\(\\frac{\\partial}{\\partial t'} C(t-t') = -\\frac{dC}{d\\tau}(\\tau)\\)\u3002\u6240\u4ee5\u4e0a\u5f0f\u4e5f\u53ef\u5199\u4e3a:</p> \\[ \\chi(\\tau) = -\\frac{1}{k_B T} \\Theta(\\tau) \\frac{dC}{d\\tau}(\\tau) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u662f\u7edf\u8ba1\u7269\u7406\u5b66\u6700\u6df1\u523b\u7684\u6210\u679c\u4e4b\u4e00,\u5176\u7269\u7406\u610f\u4e49\u6781\u4e3a\u6df1\u8fdc:</p> <ul> <li> <p>\u5de6\u8fb9 \\(\\chi(\\tau)\\):\u63cf\u8ff0\u4e86\u7cfb\u7edf\u7684\u8017\u6563\u884c\u4e3a\u3002\u5b83\u662f\u4e00\u4e2a\u975e\u5e73\u8861\u54cd\u5e94,\u544a\u8bc9\u4f60\u5982\u679c\u5728 \\(t=0\\) \u65f6\u523b\u5bf9\u7cfb\u7edf\u65bd\u52a0\u4e00\u4e2a\u5fae\u6270,\u7cfb\u7edf\u5728\u672a\u6765\u7684 \\(\\tau &gt; 0\\) \u65f6\u523b\u4f1a\u5982\u4f55\u54cd\u5e94\u548c\u5f1b\u8c6b\u3002</p> </li> <li> <p>\u53f3\u8fb9 \\(C(\\tau)\\):\u63cf\u8ff0\u4e86\u7cfb\u7edf\u7684\u6da8\u843d\u884c\u4e3a\u3002\u5b83\u662f\u4e00\u4e2a\u5e73\u8861\u6001\u6027\u8d28,\u544a\u8bc9\u4f60\u5373\u4f7f\u5728\u6ca1\u6709\u4efb\u4f55\u5916\u90e8\u5e72\u9884\u7684\u60c5\u51b5\u4e0b,\u7cfb\u7edf\u7684\u7269\u7406\u91cf\u4e5f\u4f1a\u81ea\u53d1\u5730\u6da8\u843d,\u5e76\u4e14\u8fd9\u4e9b\u6da8\u843d\u4e4b\u95f4\u5b58\u5728\u65f6\u95f4\u4e0a\u7684\u5173\u8054\u3002</p> </li> </ul> <p>FDT\u8868\u660e,\u8fd9\u4e24\u79cd\u884c\u4e3a\u5e76\u975e\u72ec\u7acb,\u800c\u662f\u7531\u540c\u4e00\u4e2a\u5fae\u89c2\u52a8\u529b\u5b66\u8fc7\u7a0b\u51b3\u5b9a\u7684\u3002\u4e00\u4e2a\u7cfb\u7edf\u7684\u8017\u6563\u6027\u8d28(\u5b83\u5982\u4f55\"\u5fd8\u8bb0\"\u4e00\u4e2a\u6270\u52a8)\u88ab\u5176\u5e73\u8861\u6001\u4e0b\u7684\u81ea\u53d1\u6da8\u843d\u6027\u8d28(\u5b83\u5982\u4f55\"\u8bb0\u5fc6\"\u81ea\u8eab\u8fc7\u53bb\u7684\u6da8\u843d)\u5b8c\u5168\u51b3\u5b9a\u3002\u8981\u60f3\u77e5\u9053\u4e00\u4e2a\u7cfb\u7edf\u88ab\"\u6233\"\u4e00\u4e0b\u4f1a\u5982\u4f55\u53cd\u5e94,\u53ea\u9700\u8981\u9759\u9759\u5730\u89c2\u5bdf\u5b83\u81ea\u5df1\u5728\u5e73\u8861\u6001\u4e0b\u662f\u5982\u4f55\"\u6296\u52a8\"\u7684\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#6-j-d","title":"6. \u5e94\u7528\u5b9e\u8df5:J-D\u4f5c\u7528\u91cf\u4e0e\u8d39\u66fc\u56fe\u5fae\u6270\u8ba1\u7b97","text":"<p>\u867d\u7136\u76f4\u63a5\u7684\u6570\u503c\u6a21\u62df(\u5982\u4e4b\u524d\u7684\u53cc\u9631\u52bf\u6a21\u62df)\u80fd\u591f\u9a8c\u8bc1\u7406\u8bba,\u4f46J-D\u5f62\u5f0f\u4f53\u7cfb\u7684\u771f\u6b63\u5a01\u529b\u5728\u4e8e\u5b83\u4e3a\u89e3\u6790\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u5e73\u53f0\u3002\u5f53\u7cfb\u7edf\u5b58\u5728\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528\u65f6,\u7cbe\u786e\u6c42\u89e3\u53d8\u5f97\u4e0d\u53ef\u80fd,\u6b64\u65f6\u5fae\u6270\u7406\u8bba\u5c31\u6210\u4e3a\u4e86\u6838\u5fc3\u7684\u5206\u6790\u5de5\u5177\u3002</p> <p>\u672c\u8282\u5c06\u5c55\u793a\u5982\u4f55\u5c06J-D\u4f5c\u7528\u91cf\u4f5c\u4e3a\u8d77\u70b9,\u8fd0\u7528\u8d39\u66fc\u56fe\u7684\u8bed\u8a00,\u7cfb\u7edf\u5730\u8ba1\u7b97\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528\u5bf9\u7cfb\u7edf\u5173\u8054\u51fd\u6570\u7684\u4e00\u9636\u4fee\u6b63\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u8fde\u63a5\u968f\u673a\u52a8\u529b\u5b66\u4e0e\u73b0\u4ee3\u7edf\u8ba1\u573a\u8bba\u7684\u6865\u6881\u3002</p> <p>\u8d39\u66fc\u56fe\u662f\u4e00\u79cd\u76f4\u89c2\u7684\u56fe\u5f62\u5de5\u5177,\u5b83\u5c06\u5fae\u6270\u7406\u8bba\u4e2d\u6781\u5176\u590d\u6742\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u63cf\u7ed8\u6210\u7531\u4ee3\u8868\u573a\u6216\u7c92\u5b50\u4f20\u64ad\u7684\"\u7ebf\"\u548c\u4ee3\u8868\u5b83\u4eec\u76f8\u4e92\u4f5c\u7528\u7684\"\u9876\u70b9\"\u6784\u6210\u7684\u56fe\u50cf,\u4ece\u800c\u4e3a\u8ba1\u7b97\u590d\u6742\u7cfb\u7edf\u4e2d\u7684\u76f8\u4e92\u4f5c\u7528\u63d0\u4f9b\u4e86\u4e00\u5957\u6e05\u6670\u7684\u914d\u65b9\u3002</p> <p>\u8d39\u66fc\u56fe\u6700\u5f00\u59cb\u662f\u5728\u91cf\u5b50\u7535\u52a8\u529b\u5b66(QED)\u4e2d\u63d0\u51fa\u7684\u3002\u53ef\u4ee5\u7528\u4e00\u4e2a\u6700\u7ecf\u5178\u3001\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e:\u4e24\u4e2a\u7535\u5b50\u7684\u76f8\u4e92\u6392\u65a5\u3002</p> <p>\u60f3\u8c61\u4e00\u4e0b\u8fd9\u4e2a\u7269\u7406\u8fc7\u7a0b: \u4e24\u4e2a\u7535\u5b50(\u90fd\u5e26\u8d1f\u7535)\u6b63\u5728\u76f8\u4e92\u9760\u8fd1,\u56e0\u4e3a\u540c\u6027\u76f8\u65a5,\u5b83\u4eec\u4f1a\u4e92\u76f8\u63a8\u5f00\u5bf9\u65b9,\u7136\u540e\u671d\u4e0d\u540c\u7684\u65b9\u5411\u98de\u8d70\u3002</p> <p>\u90a3\u4e48,\u5b83\u4eec\u662f\u5982\u4f55\"\u544a\u8bc9\"\u5bf9\u65b9\u8981\u63a8\u5f00\u7684\u5462?\u5728\u91cf\u5b50\u573a\u8bba\u4e2d,\u8fd9\u4e2a\"\u63a8\u5f00\"\u7684\u529b\u662f\u901a\u8fc7\u4ea4\u6362\u4e00\u4e2a\"\u4fe1\u4f7f\u7c92\u5b50\"\u6765\u4f20\u9012\u7684,\u5bf9\u4e8e\u7535\u78c1\u529b\u800c\u8a00,\u8fd9\u4e2a\u4fe1\u4f7f\u7c92\u5b50\u5c31\u662f\u5149\u5b50\u3002</p> <p>\u8d39\u66fc\u56fe\u5c31\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u7684\"\u65f6\u7a7a\u5feb\u7167\"\u3002</p> <p></p> <p>\u6a2a\u8f74\u65f6\u95f4\u4ece\u5de6\u5411\u53f3\u6d41\u901d,\u7eb5\u8f74\u4ee3\u8868\u7a7a\u95f4\u4f4d\u7f6e\u3002\u56fe\u4e2d\u7684\u84dd\u8272\u5b9e\u7ebf\u4ee3\u8868\u7535\u5b50\u7684\u8def\u5f84,\u4e24\u4e2a\u7535\u5b50\u4ece\u5de6\u8fb9(\u521d\u6001)\u98de\u5165\u3002\u7ea2\u8272\u6ce2\u6d6a\u7ebf\u4ee3\u8868\u5728\u4e24\u4e2a\u7535\u5b50\u4e4b\u95f4\u4f20\u9012\u7684\u5149\u5b50\u3002\u5b83\u662f\"\u865a\"\u7684,\u56e0\u4e3a\u5b83\u53ea\u5728\u76f8\u4e92\u4f5c\u7528\u7684\u77ac\u95f4\u5b58\u5728,\u4f5c\u4e3a\u529b\u7684\u8f7d\u4f53\u3002\u7eff\u8272\u5706\u70b9\u662f\"\u9876\u70b9\",\u8fd9\u662f\u56fe\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\u3002\u5b83\u4ee3\u8868\u4e00\u4e2a\u76f8\u4e92\u4f5c\u7528\u4e8b\u4ef6\u3002\u5728\u5de6\u8fb9\u7684\u9876\u70b9,\u7535\u5b501\u53d1\u5c04\u4e86\u4e00\u4e2a\u5149\u5b50;\u5728\u53f3\u8fb9\u7684\u9876\u70b9,\u7535\u5b502\u5438\u6536\u4e86\u8fd9\u4e2a\u5149\u5b50\u3002\u5728\u4ea4\u6362\u5b8c\u5149\u5b50\u540e,\u4e24\u4e2a\u7535\u5b50\u7684\u8def\u5f84\u90fd\u53d1\u751f\u4e86\u504f\u6298,\u4ece\u53f3\u8fb9(\u672b\u6001)\u98de\u51fa,\u5b9e\u73b0\u4e86\u76f8\u4e92\u6392\u65a5\u3002</p> <p>\u7269\u7406\u5b66\u5bb6\u770b\u5230\u8fd9\u5f20\u56fe,\u5c31\u80fd\u6309\u7167\u4e00\u5957\u4e25\u683c\u7684\"\u8d39\u66fc\u89c4\u5219\",\u628a\u56fe\u7684\u5404\u4e2a\u90e8\u5206\"\u7ffb\u8bd1\"\u6210\u4e00\u4e2a\u5177\u4f53\u7684\u6570\u5b66\u79ef\u5206\u3002\u8ba1\u7b97\u8fd9\u4e2a\u79ef\u5206,\u5c31\u80fd\u5f97\u5230\u8fd9\u4e2a\u6392\u65a5\u8fc7\u7a0b\u53d1\u751f\u7684\u6982\u7387\u5927\u5c0f\u3002</p> <p>\u56e0\u6b64,\u8d39\u66fc\u56fe\u5c31\u662f\u628a\u4e00\u4e2a\u590d\u6742\u7684\u7c92\u5b50\u76f8\u4e92\u4f5c\u7528\u8fc7\u7a0b,\u753b\u6210\u4e00\u4e2a\u7b80\u5355\u7684\"\u8fde\u7ebf\u56fe\",\u56fe\u4e2d\u7684\u6bcf\u4e00\u7b14\u6bcf\u4e00\u753b\u90fd\u5bf9\u5e94\u7740\u4e00\u90e8\u5206\u6570\u5b66\u516c\u5f0f,\u8ba9\u8ba1\u7b97\u53d8\u5f97\u50cf\u770b\u56fe\u8bf4\u8bdd\u4e00\u6837\u76f4\u89c2\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#61-phi4a","title":"6.1 \u6a21\u578b:\u542b\u76f8\u4e92\u4f5c\u7528\u7684\\(\\phi^4\\)\u7406\u8bba(\u6a21\u578bA)","text":"<p>\u6211\u4eec\u56de\u5230\u7b2c25\u8bb2\u7684\u6838\u5fc3\u6a21\u578b\u2014\u2014\u91d1\u5179\u5821-\u6717\u9053\u7406\u8bba,\u4e5f\u5e38\u88ab\u79f0\u4e3a\\(\\phi^4\\)\u7406\u8bba\u3002\u5176\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e3a(\u6a21\u578bA):</p> \\[ \\frac{\\partial \\phi}{\\partial t} = -L(r\\phi - c\\nabla^2\\phi + u\\phi^3) + \\xi(\\mathbf{x}, t) \\] <p>\u5bf9\u5e94\u7684J-D\u4f5c\u7528\u91cf\u4e3a:</p> \\[ S[\\phi,\\tilde{\\phi}] = \\int d^d x dt \\left[ \\tilde{\\phi} \\left( \\frac{\\partial \\phi}{\\partial t} + L(r\\phi - c\\nabla^2\\phi) \\right) + L u \\tilde{\\phi}\\phi^3 - \\frac{1}{2}\\tilde{\\phi}(2LT)\\tilde{\\phi} \\right] \\] <p>(\u8fd9\u91cc\u4f7f\u7528\u4e86 \\(N = 2LT\\) \u7684\u5173\u7cfb)\u3002</p> <p>\u5fae\u6270\u7406\u8bba\u7684\u6838\u5fc3\u601d\u60f3,\u662f\u5c06\u4f5c\u7528\u91cf \\(S\\) \u5206\u89e3\u4e3a\u4e00\u4e2a\u53ef\u7cbe\u786e\u6c42\u89e3\u7684\u9ad8\u65af\u90e8\u5206(\u81ea\u7531\u7406\u8bba)\\(S_0\\) \u548c\u4e00\u4e2a\u5c0f\u7684\u975e\u7ebf\u6027\u90e8\u5206(\u76f8\u4e92\u4f5c\u7528)\\(S_{int}\\) \u3002</p> <ul> <li> <p>\u81ea\u7531\u4f5c\u7528\u91cf \\(S_0\\) (\u6240\u6709\u4e8c\u6b21\u9879): $$ S_0 = \\int d^d x dt \\left[ \\tilde{\\phi} \\left( \\frac{\\partial \\phi}{\\partial t} + Lr\\phi - Lc\\nabla^2\\phi \\right) - LT\\tilde{\\phi}^2 \\right] $$</p> </li> <li> <p>\u76f8\u4e92\u4f5c\u7528\u4f5c\u7528\u91cf \\(S_{int}\\) (\u9ad8\u9636\u9879): $$ S_{int} = \\int d^d x dt \\, (L u \\tilde{\\phi}\\phi^3) $$</p> </li> </ul> <p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u5728\u76f8\u4e92\u4f5c\u7528 \\(S_{int}\\) \u5f71\u54cd\u4e0b,\u7cfb\u7edf\u7684\u771f\u5b9e\u5173\u8054\u51fd\u6570 \\(\\langle\\phi\\phi\\rangle\\)\u3002\u5fae\u6270\u5c55\u5f00\u7684\u601d\u60f3\u5c31\u662f\u5c06 \\(e^{-S_{int}}\\) \u6309\u6cf0\u52d2\u7ea7\u6570\u5c55\u5f00:</p> \\[ \\langle \\phi\\phi \\rangle = \\frac{\\int \\mathcal{D}[\\phi,\\tilde{\\phi}] \\phi\\phi \\, e^{-S_0} (1 - S_{int} + \\frac{1}{2}S_{int}^2 - \\dots)}{\\int \\mathcal{D}[\\phi,\\tilde{\\phi}] \\, e^{-S_0} (1 - S_{int} + \\dots)} \\] <p>\u8fd9\u4e2a\u5c55\u5f00\u7684\u6bcf\u4e00\u9879\u90fd\u53ef\u4ee5\u7528\u4e00\u79cd\u76f4\u89c2\u7684\u56fe\u5f62\u2014\u2014\u8d39\u66fc\u56fe\u2014\u2014\u6765\u8868\u793a\u548c\u8ba1\u7b97\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#62","title":"6.2 \u8d39\u66fc\u89c4\u5219:\u4ece\u4f5c\u7528\u91cf\u5230\u56fe\u8bba","text":"<p>\u8d39\u66fc\u89c4\u5219\u662f\u5c06\u4f5c\u7528\u91cf \\(S_0\\) \u548c \\(S_{int}\\) \u7ffb\u8bd1\u6210\u7ed8\u56fe\u5143\u7d20\u548c\u6570\u5b66\u8868\u8fbe\u5f0f\u7684\"\u8bcd\u5178\"\u3002</p> <ol> <li>\u4f20\u64ad\u5b50 (Propagators) :\u5b83\u4eec\u662f\u81ea\u7531\u7406\u8bba(\u5373\u53ea\u6709\\(S_0\\)\u65f6)\u4e2d\u7684\u4e8c\u70b9\u5173\u8054\u51fd\u6570,\u4ee3\u8868\u4e86\u573a\u7684\u57fa\u672c\"\u4f20\u64ad\"\u884c\u4e3a\u3002</li> </ol> <p>\u54cd\u5e94\u4f20\u64ad\u5b50 \\(G_0 = \\langle\\phi\\tilde{\\phi}\\rangle_0\\) :\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5bf9\u5fae\u6270\u7684\u88f8\u54cd\u5e94\u3002\u7531\u4e8e\u56e0\u679c\u6027(\\(\\tilde{\\phi}\\)\u603b\u662f\"\u54cd\u5e94\"\\(\\phi\\)),\u5b83\u5728\u56fe\u4e2d\u901a\u5e38\u8868\u793a\u4e3a\u5e26\u7bad\u5934\u7684\u6709\u5411\u7ebf \u3002\u5728\u9891\u7387-\u52a8\u91cf\u7a7a\u95f4\u4e2d,\u5b83\u7684\u6570\u5b66\u5f62\u5f0f\u4e3a:</p> \\[ G_0(\\omega, \\mathbf{q}) = \\frac{1}{-i\\omega + L(r+cq^2)} \\] <p>\u5173\u8054\u4f20\u64ad\u5b50 \\(C_0 = \\langle\\phi\\phi\\rangle_0\\) :\u63cf\u8ff0\u4e86\u81ea\u7531\u573a\u81ea\u8eab\u7684\u88f8\u6da8\u843d\u5173\u8054\u3002\u5b83\u901a\u5e38\u8868\u793a\u4e3a\u65e0\u5411\u7684\u6ce2\u6d6a\u7ebf\u3002\u5b83\u7684\u6570\u5b66\u5f62\u5f0f\u4e3a:</p> \\[ C_0(\\omega, \\mathbf{q}) = \\frac{2LT}{\\omega^2 + [L(r+cq^2)]^2} \\] <ol> <li>\u9876\u70b9 (Vertex):\u5b83\u4ee3\u8868\u4e86\u7c92\u5b50\u95f4\u7684\u76f8\u4e92\u4f5c\u7528,\u5176\u5f62\u5f0f\u7531 \\(S_{int}\\) \u51b3\u5b9a\u3002</li> </ol> <p>\u5728\u6211\u4eec\u7684\u6a21\u578b\u4e2d,\\(S_{int} \\propto u \\tilde{\\phi}\\phi^3\\)\u3002\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u9876\u70b9\u662f\u4e00\u4e2a\\(\\tilde{\\phi}\\)\u573a\u548c\u4e09\u4e2a\\(\\phi\\)\u573a\u7684\u76f8\u4e92\u4f5c\u7528\u70b9\u3002\u56e0\u6b64,\u5b83\u88ab\u753b\u6210\u4e00\u4e2a\u4e00\u4e2a\u7bad\u5934\u6307\u5411\u5b83(\\(\\tilde{\\phi}\\)\u7ebf),\u4e09\u4e2a\u6ce2\u6d6a\u7ebf\u80cc\u79bb\u5b83(\\(\\phi\\)\u7ebf) \u7684\u4ea4\u6c47\u70b9\u3002\u8fd9\u4e2a\u9876\u70b9\u7684\"\u5f3a\u5ea6\"\u7531\u76f8\u4e92\u4f5c\u7528\u53c2\u6570 \\(u\\) \u51b3\u5b9a\u3002</p> <pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\ndef plot_feynman_rules(figsize=(12, 5)):\n    \"\"\"\n    Plot the basic Feynman rules for phi^4 theory in the J-D formalism.\n    \"\"\"\n    fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=figsize)\n    fig.suptitle('Feynman Rules for Stochastic $\\phi^4$ Theory (MSRJD)', fontsize=16)\n\n    # --- 1. Response Propagator G_0 ---\n    ax1.set_title(r'Response Propagator $G_0 = \\langle \\phi \\tilde{\\phi} \\rangle_0$')\n    ax1.plot([0.1, 0.9], [0.5, 0.5], 'k-', lw=2)\n    ax1.arrow(0.5, 0.5, 0.01, 0, head_width=0.08, head_length=0.08, fc='k', ec='k')\n    ax1.text(0, 0.55, r'$\\phi(x,t)$', fontsize=12, ha='center')\n    ax1.text(1, 0.55, r'$\\tilde{\\phi}(x^\\prime,t^\\prime)$', fontsize=12, ha='center')\n    ax1.text(0.5, 0.3, r'$G_0(x,t; x^\\prime,t^\\prime)$', fontsize=14, ha='center', color='blue')\n    ax1.set_xlim(0, 1)\n    ax1.set_ylim(0, 1)\n    ax1.axis('off')\n\n    # --- 2. Correlation Propagator C_0 ---\n    ax2.set_title(r'Correlation Propagator $C_0 = \\langle \\phi \\phi \\rangle_0$')\n    x = np.linspace(0.1, 0.9, 100)\n    y = 0.5 + 0.05 * np.sin(x * 5 * np.pi)\n    ax2.plot(x, y, 'k-', lw=2)\n    ax2.text(0, 0.55, r'$\\phi(x,t)$', fontsize=12, ha='center')\n    ax2.text(1, 0.55, r'$\\phi(x^\\prime,t^\\prime)$', fontsize=12, ha='center')\n    ax2.text(0.5, 0.3, r'$C_0(x,t; x^\\prime,t^\\prime)$', fontsize=14, ha='center', color='green')\n    ax2.set_xlim(0, 1)\n    ax2.set_ylim(0, 1)\n    ax2.axis('off')\n\n    # --- 3. Interaction Vertex ---\n    ax3.set_title(r'Interaction Vertex from $S_{int} \\propto u \\tilde{\\phi} \\phi^3$')\n    center = (0.5, 0.5)\n    # Vertex\n    ax3.plot(center[0], center[1], 'ko', markersize=10)\n    # Response field line (incoming)\n    ax3.arrow(0.9, 0.5, -0.38, 0, head_width=0.08, head_length=0.08, fc='k', ec='k', lw=2)\n    # Three correlation field lines (outgoing)\n    angles = [np.pi * 5/6, np.pi, np.pi * 7/6]\n    for angle in angles:\n        x_end = center[0] + 0.4 * np.cos(angle)\n        y_end = center[1] + 0.4 * np.sin(angle)\n        x_wave = np.linspace(center[0], x_end, 50)\n        y_wave = np.linspace(center[1], y_end, 50)\n        offset = 0.03 * np.sin(np.linspace(0, 3*np.pi, 50))\n        perp_vec = np.array([-(y_end-center[1]), x_end-center[0]])\n        perp_vec /= np.linalg.norm(perp_vec)\n        ax3.plot(x_wave + offset*perp_vec[0], y_wave + offset*perp_vec[1], 'k-', lw=2)\n    ax3.text(0.5, 0.2, 'Coupling Strength $-Lu$', fontsize=14, ha='center', color='red')\n    ax3.set_xlim(0, 1)\n    ax3.set_ylim(0, 1)\n    ax3.axis('off')\n\n    plt.tight_layout(rect=[0, 0, 1, 0.95])\n    plt.show()\n\n# Run the plotting function\nplot_feynman_rules()\n</code></pre>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#63-hartree","title":"6.3 \u8ba1\u7b97\u4e00\u9636\u4fee\u6b63:Hartree\u56fe","text":"<p>\u73b0\u5728,\u5229\u7528\u8fd9\u4e9b\u89c4\u5219\u6765\u8ba1\u7b97\u5bf9\u5173\u8054\u51fd\u6570 \\(C=\\langle\\phi\\phi\\rangle\\) \u7684\u4e00\u9636\u5fae\u6270\u4fee\u6b63 \u3002\u5728\u96f6\u9636,\u5173\u8054\u51fd\u6570\u5c31\u662f\u88f8\u5173\u8054\u4f20\u64ad\u5b50 \\(C_0\\)\u3002\u4e00\u9636\u4fee\u6b63\u662f\u7531\u5305\u542b\u4e00\u4e2a\u76f8\u4e92\u4f5c\u7528\u9876\u70b9\u7684\u56fe\u7ed9\u51fa\u7684\u3002\u5bf9\u4e8e\u4e8c\u70b9\u51fd\u6570,\u6700\u7b80\u5355\u7684\u56fe(\u79f0\u4e3aHartree\u4fee\u6b63\u6216\"\u65e5\u843d\u56fe\")\u5982\u4e0b\u6240\u793a:</p> <p></p> <p>\u8fd9\u5f20\u56fe\u7684\u7269\u7406\u610f\u4e49\u662f:\u4e00\u4e2a\u6da8\u843d(\u5de6\u4fa7\u7684\\(\\phi\\))\u5728\u4f20\u64ad\u8fc7\u7a0b\u4e2d,\u901a\u8fc7\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528(\u4e2d\u95f4\u7684\u4e24\u4e2a\u9876\u70b9),\"\u5206\u88c2\"\u6210\u4e09\u4e2a\u4e2d\u95f4\u6da8\u843d,\u8fd9\u4e9b\u4e2d\u95f4\u6da8\u843d\u76f8\u4e92\u4f5c\u7528\u540e,\u518d\"\u5408\u5e76\"\u6210\u6700\u7ec8\u7684\u6da8\u843d(\u53f3\u4fa7\u7684\\(\\phi\\))\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4fee\u6b63\u4e86\u539f\u59cb\u7684\u3001\u7b80\u5355\u7684\u4f20\u64ad\u884c\u4e3a\u3002</p> <p>\u4ece\u56fe\u5230\u6570\u5b66\u79ef\u5206:</p> <p>\u6839\u636e\u8d39\u66fc\u89c4\u5219,\u8fd9\u5f20\u56fe\u5bf9\u5e94\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u4e3a(\u5728\u9891\u7387-\u52a8\u91cf\u7a7a\u95f4):</p> \\[ \\delta C(\\omega, \\mathbf{q}) \\propto (-Lu)^2 \\int \\frac{d\\omega' d^d\\mathbf{k}}{(2\\pi)^{d+1}} G_0(\\omega, \\mathbf{q}) C_0(\\omega', \\mathbf{k}) C_0(\\omega-\\omega', \\mathbf{q}-\\mathbf{k}) C_0(-\\omega', -\\mathbf{k}) G_0(-\\omega, -\\mathbf{q}) \\] <p>\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u901a\u8fc7\u79ef\u5206\u6765\u8ba1\u7b97\u7684\u590d\u6742\u8868\u8fbe\u5f0f\u3002\u4f46\u5173\u952e\u5728\u4e8e,\u8d39\u66fc\u56fe\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6e05\u6670\u3001\u76f4\u89c2\u7684\"\u914d\u65b9\",\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u7269\u7406\u8fc7\u7a0b\u5206\u89e3\u4e3a\u57fa\u672c\u7ec4\u4ef6(\u4f20\u64ad\u5b50\u548c\u9876\u70b9)\u7684\u7ec4\u5408\u3002</p> <p>\u8fd9\u4e2a\u5e94\u7528\u5b9e\u8df5\u5c55\u793a\u4e86J-D\u5f62\u5f0f\u4f53\u7cfb\u5982\u4f55\u4ece\u4e00\u4e2a\u62bd\u8c61\u7684\u7406\u8bba\u5de5\u5177,\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u5f3a\u5927\u7684\u3001\u7cfb\u7edf\u6027\u7684\u8ba1\u7b97\u6846\u67b6\u3002\u901a\u8fc7\u5c06\u4f5c\u7528\u91cf\u5206\u89e3\u4e3a\"\u81ea\u7531\"\u548c\"\u76f8\u4e92\u4f5c\u7528\"\u90e8\u5206,\u53ef\u4ee5\u5bfc\u51fa\u4e00\u5957\u8d39\u66fc\u89c4\u5219,\u5c06\u590d\u6742\u7684\u5fae\u6270\u5c55\u5f00\u8ba1\u7b97\u8f6c\u5316\u4e3a\u76f4\u89c2\u7684\u56fe\u8bba\u95ee\u9898\u3002\u8fd9\u4f7f\u5f97\u7814\u7a76\u975e\u7ebf\u6027\u968f\u673a\u7cfb\u7edf\u4e2d\u7684\u7269\u7406\u73b0\u8c61(\u5982\u4e34\u754c\u52a8\u529b\u5b66\u4e2d\u7684\u6807\u5ea6\u884c\u4e3a)\u6210\u4e3a\u53ef\u80fd,\u662f\u73b0\u4ee3\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u6838\u5fc3\u6280\u672f\u4e4b\u4e00\u3002</p>"},{"location":"zh/notes/32.%20Janssen-De%20Dominicis%20%E5%93%8D%E5%BA%94%E6%B3%9B%E5%87%BD%E4%B8%8E%E6%B6%A8%E8%90%BD-%E8%80%97%E6%95%A3%E5%85%B3%E7%B3%BB/#_1","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u4ecb\u7ecd\u4e86\u7528\u4e8e\u7814\u7a76\u968f\u673a\u52a8\u529b\u5b66\u7684\u5f3a\u5927\u573a\u8bba\u5de5\u5177\u2014\u2014Janssen-De Dominicis \u5f62\u5f0f\u4f53\u7cfb\u3002\u901a\u8fc7\u5c06\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u7ea6\u675f\u7f16\u7801\u5230\u8def\u5f84\u79ef\u5206\u7684\"\u4f5c\u7528\u91cf\"\u4e2d,\u8fd9\u4e2a\u65b9\u6cd5\u4e3a\u4efb\u4f55\u5177\u6709\u52a0\u6027\u566a\u58f0\u7684\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u7406\u8bba\u6846\u67b6\u3002</p> <p>\u6838\u5fc3\u7684\u6784\u9020\u6027\u6b65\u9aa4\u662f\u5f15\u5165\u4e86\u54cd\u5e94\u573a \\(\\tilde{\\phi}\\)\u3002\u8fd9\u4e2a\u6700\u521d\u4f5c\u4e3a\u6570\u5b66\u8f85\u52a9\u5de5\u5177\u51fa\u73b0\u7684\u573a,\u88ab\u8bc1\u660e\u5177\u6709\u6df1\u523b\u7684\u7269\u7406\u610f\u4e49:\u5b83\u76f4\u63a5\u5ea6\u91cf\u4e86\u7cfb\u7edf\u5bf9\u5916\u90e8\u5fae\u6270\u7684\u56e0\u679c\u54cd\u5e94,\u5176\u4e0e\u7269\u7406\u573a \\(\\phi\\) \u7684\u5173\u8054\u51fd\u6570 \\(\\langle \\phi \\tilde{\\phi} \\rangle\\) \u7cbe\u786e\u5730\u7ed9\u51fa\u4e86\u7cfb\u7edf\u7684\u7ebf\u6027\u54cd\u5e94\u51fd\u6570 \\(\\chi\\)\u3002</p> <p>\u8fd9\u4e2a\u5f62\u5f0f\u4f53\u7cfb\u7684\u5dc5\u5cf0\u4e4b\u4f5c\u662f\u5b83\u4e3a\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6e05\u6670\u800c\u7cfb\u7edf\u7684\u63a8\u5bfc\u8def\u5f84\u3002FDT \u63ed\u793a\u4e86\u5904\u4e8e\u70ed\u5e73\u8861\u7684\u7cfb\u7edf\u4e2d,\u4e24\u79cd\u770b\u4f3c\u622a\u7136\u4e0d\u540c\u7684\u73b0\u8c61\u2014\u2014\u7531\u5185\u90e8\u70ed\u8fd0\u52a8\u5f15\u8d77\u7684\u81ea\u53d1\u6da8\u843d(\u7531\u5173\u8054\u51fd\u6570 \\(C\\) \u63cf\u8ff0)\u548c\u7cfb\u7edf\u5bf9\u5916\u90e8\u6270\u52a8\u505a\u51fa\u7684\u8017\u6563\u54cd\u5e94(\u7531\u54cd\u5e94\u51fd\u6570 \\(\\chi\\) \u63cf\u8ff0)\u2014\u2014\u5b9e\u9645\u4e0a\u662f\u540c\u4e00\u679a\u786c\u5e01\u7684\u4e24\u9762\u3002J-D \u5f62\u5f0f\u4f53\u7cfb\u8868\u660e,\u8fd9\u79cd\u6df1\u523b\u7684\u8054\u7cfb\u6839\u690d\u4e8e\u7cfb\u7edf\u5728\u5e73\u8861\u6001\u4e0b\u6240\u6ee1\u8db3\u7684\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027(\u7ec6\u81f4\u5e73\u8861)\u3002</p> <p>\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u662f\u5e73\u8861\u6001\u7edf\u8ba1\u7269\u7406\u7684\u57fa\u77f3\u4e4b\u4e00,\u4f46\u5b83\u7684\u8f89\u714c\u4e5f\u9650\u5b9a\u4e86\u5b83\u7684\u7586\u57df\u3002\u5f53\u4e00\u4e2a\u7cfb\u7edf\u88ab\u5f3a\u529b\u9a71\u52a8,\u8fdc\u79bb\u5e73\u8861\u6001\u65f6,\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u88ab\u6253\u7834,\u7b80\u5355\u7684 FDT \u5c31\u4e0d\u518d\u6210\u7acb\u3002\u4f8b\u5982,\u5f53\u4e00\u4e2a\u80f6\u4f53\u9897\u7c92\u88ab\u6fc0\u5149\u9677\u9631\u5728\u6d41\u4f53\u4e2d\u5feb\u901f\u62d6\u52a8\u65f6,\u7cfb\u7edf\u7684\u54cd\u5e94\u548c\u6da8\u843d\u4e4b\u95f4\u4f1a\u662f\u4ec0\u4e48\u5173\u7cfb?</p> <p>\u8fd9\u6b63\u662f\u73b0\u4ee3\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u6838\u5fc3\u95ee\u9898\u4e4b\u4e00\u3002\u4e0b\u4e00\u8bb2\u5c06\u63a2\u8ba8\u8fd9\u4e2a\u95ee\u9898\u7684\u524d\u6cbf\u8fdb\u5c55,\u8fdb\u5165\u975e\u5e73\u8861\u529f\u548c\u6da8\u843d\u5b9a\u7406\u7684\u9886\u57df\u3002\u5c06\u8981\u4ecb\u7ecd\u7684 Jarzynski \u6052\u7b49\u5f0f\u548c Crooks \u6da8\u843d\u5b9a\u7406,\u662f\u8fd1\u5e74\u6765\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u6700\u91cd\u5927\u7684\u7a81\u7834\u4e4b\u4e00\u3002\u5b83\u4eec\u662f\u7b2c\u4e8c\u5b9a\u5f8b\u5728\u975e\u5e73\u8861\u8fc7\u7a0b\u4e2d\u7684\u60ca\u4eba\u63a8\u5e7f,\u5373\u4fbf\u5728\u8fc7\u7a0b\u9ad8\u5ea6\u4e0d\u53ef\u9006\u3001\u4ea7\u751f\u5927\u91cf\u8017\u6563\u7684\u60c5\u51b5\u4e0b,\u8fd9\u4e9b\u5b9a\u7406\u4ecd\u7136\u80fd\u591f\u5efa\u7acb\u8d77\u975e\u5e73\u8861\u7684\u7269\u7406\u91cf(\u5982\u5728\u975e\u5e73\u8861\u8fc7\u7a0b\u4e2d\u6240\u505a\u7684\u529f)\u4e0e\u5e73\u8861\u6001\u7684\u70ed\u529b\u5b66\u91cf(\u5982\u81ea\u7531\u80fd\u5dee)\u4e4b\u95f4\u7684\u7cbe\u786e\u7b49\u5f0f\u5173\u7cfb\u3002\u8fd9\u4e9b\u6da8\u843d\u5b9a\u7406\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f FDT \u5728\u975e\u5e73\u8861\u4e16\u754c\u4e2d\u7684\u7ee7\u627f\u8005\u548c\u63a8\u5e7f\u8005,\u4e3a\u7406\u89e3\u548c\u64cd\u63a7\u8fdc\u79bb\u5e73\u8861\u7684\u5fae\u89c2\u7cfb\u7edf\u63d0\u4f9b\u4e86\u5168\u65b0\u7684\u7406\u8bba\u5de5\u5177\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/","title":"\u5f15\u8a00\uff1a\u4ece\u88ab\u52a8\u54cd\u5e94\u5230\u4e3b\u52a8\u9a71\u52a8\u2014\u2014\u5f00\u542f\u975e\u5e73\u8861\u4e16\u754c\u7684\u5927\u95e8","text":"<p>\u524d\u9762\u8bb2\u5ea7\u63a2\u8ba8\u7684\u6838\u5fc3\u662f\u8fd1\u70ed\u5e73\u8861\u7684\u7cfb\u7edf\u3002\u7279\u522b\u662f\u7b2c32\u8bb2\uff0c\u8bfe\u7a0b\u6784\u5efa\u4e86\u5f3a\u5927\u7684 Janssen-De Dominicis (JDD) \u8def\u5f84\u79ef\u5206\u5f62\u5f0f\u4f53\u7cfb\uff0c\u5e76\u4ece\u4e2d\u63a8\u5bfc\u51fa\u4e86\u8fd1\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u57fa\u77f3\u2014\u2014\u6da8\u843d-\u8017\u6563\u5173\u7cfb (Fluctuation-Dissipation Theorem, FDT)\u3002FDT \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u89c1\u89e3\uff1a\u7cfb\u7edf\u5bf9\u5fae\u5c0f\u5916\u90e8\u6270\u52a8\u7684\u88ab\u52a8\u7ebf\u6027\u54cd\u5e94\uff0c\u5b8c\u5168\u7531\u5176\u5728\u5e73\u8861\u6001\u4e0b\u7684\u81ea\u53d1\u6da8\u843d\u884c\u4e3a\u6240\u51b3\u5b9a\u3002\u8fd9\u4e00\u5173\u7cfb\u6df1\u523b\u5730\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u5728\u5e73\u8861\u6001\u4e0b\u7684\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u3002</p> <p>\u7136\u800c\uff0cJDD \u5f62\u5f0f\u4f53\u7cfb\u548c FDT \u7684\u8f89\u714c\u4e5f\u9650\u5b9a\u4e86\u5176\u7586\u57df\u3002\u5f53\u76ee\u5149\u4ece\u5b9e\u9a8c\u5ba4\u7684\u7406\u60f3\u6761\u4ef6\u6295\u5411\u66f4\u5e7f\u9614\u7684\u771f\u5b9e\u4e16\u754c\u2014\u2014\u4ece\u7ec6\u80de\u5185\u5206\u5b50\u9a6c\u8fbe\u7684\u6301\u7eed\u8fd0\u8f6c\uff0c\u5230\u5b9e\u9a8c\u4e2d\u88ab\u6fc0\u5149\u5feb\u901f\u62d6\u62fd\u7684\u80f6\u4f53\u9897\u7c92\uff0c\u518d\u5230\u4efb\u4f55\u5728\u6709\u9650\u65f6\u95f4\u5185\u7ecf\u5386\u663e\u8457\u5916\u90e8\u53c2\u6570\u53d8\u5316\u7684\u7cfb\u7edf\u2014\u2014\u6240\u9762\u5bf9\u7684\u5c06\u662f\u8fdc\u79bb\u5e73\u8861\u7684\u3001\u5177\u6709\u5185\u5728\u4e0d\u53ef\u9006\u6027\u7684\u590d\u6742\u8fc7\u7a0b\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u8fc7\u7a0b\uff0c\u7ecf\u5178\u70ed\u529b-\u5b66\u53ea\u80fd\u7ed9\u51fa\u4e0d\u5b8c\u6574\u7684\u63cf\u8ff0\uff0c\u901a\u5e38\u4ee5\u4e0d\u7b49\u5f0f\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u4f8b\u5982\uff0c\u975e\u5e73\u8861\u529f\u7684\u5e73\u5747\u503c\u603b\u662f\u5927\u4e8e\u6216\u7b49\u4e8e\u7cfb\u7edf\u5e73\u8861\u81ea\u7531\u80fd\u7684\u53d8\u5316\u91cf\uff08\\(\\langle W \\rangle \\geq \\Delta F\\)\uff09\u3002</p> <p>\u8fd9\u8282\u8bfe\u6807\u5fd7\u7740\u8bfe\u7a0b\u53c8\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u89c6\u89d2\u8f6c\u53d8\uff1a\u7814\u7a76\u5c06\u4ece\u7cfb\u7edf\u5bf9\u5fae\u5c0f\u6270\u52a8\u7684\u88ab\u52a8\u54cd\u5e94 \uff0c\u8f6c\u5411\u5206\u6790\u7cfb\u7edf\u5728\u5916\u90e8\u534f\u8bae (protocol)\u4e3b\u52a8\u3001\u4efb\u610f\u9a71\u52a8\u4e0b\u7684\u975e\u5e73\u8861\u52a8\u529b\u5b66\u3002\u6838\u5fc3\u95ee\u9898\u662f\uff1a\u5bf9\u4e8e\u8fd9\u4e9b\u8fdc\u79bb\u5e73\u8861\u7684\u3001\u672c\u8d28\u4e0a\u662f\u968f\u673a\u7684\u8fc7\u7a0b\uff0c\u662f\u5426\u5b58\u5728\u80fd\u591f\u8d85\u8d8a\u7ecf\u5178\u4e0d\u7b49\u5f0f\u7684\u3001\u666e\u9002\u7684\u3001\u7cbe\u786e\u7684\u7b49\u5f0f\u5173\u7cfb\uff0c\u4ece\u800c\u4e3a\u8fd9\u4e9b\u8fc7\u7a0b\u63d0\u4f9b\u6839\u672c\u6027\u7684\u7ea6\u675f\uff1f</p> <p>\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u800c\u5173\u952e\u7684\u7a81\u7834\u5728\u4e8e\u6539\u53d8\u89c2\u5bdf\u5c3a\u5ea6\u3002\u5173\u6ce8\u70b9\u4e0d\u518d\u4ec5\u4ec5\u662f\u529f\u6216\u71b5\u4ea7\u751f\u7b49\u70ed\u529b\u5b66\u91cf\u7684\u5e73\u5747\u503c\uff0c\u800c\u662f\u8f6c\u5411\u7814\u7a76\u7531\u7cfb\u7edf\u65e0\u6570\u6761\u968f\u673a\u8f68\u8ff9 (stochastic trajectories) \u6240\u4ea7\u751f\u7684\u8fd9\u4e9b\u91cf\u7684\u5b8c\u6574\u6982\u7387\u5206\u5e03\u3002\u901a\u8fc7\u5206\u6790\u6da8\u843d\u7684\u5168\u90e8\u7edf\u8ba1\u4fe1\u606f\uff0c\u53ef\u4ee5\u4ece\u770b\u4f3c\u6df7\u4e71\u7684\u975e\u5e73\u8861\u8fc7\u7a0b\u4e2d\uff0c\u7cbe\u786e\u5730\u201c\u84b8\u998f\u201d\u51fa\u9690\u85cf\u7684\u5e73\u8861\u6001\u4fe1\u606f\u3002</p> <p>\u8fd9\u8282\u8bfe\u5c06\u805a\u7126\u4e8e\u63a8\u5bfc\u548c\u7406\u89e3\u4e24\u4e2a\u6838\u5fc3\u7684\u6da8\u843d\u5b9a\u7406 (Fluctuation Theorems, FTs)\uff1aJarzynski \u7b49\u5f0f (Jarzynski\u2019s Work Relation) \u548c Crooks \u6da8\u843d\u5b9a\u7406 (Crooks' Fluctuation Theorem) \u3002\u8fd9\u4e9b\u5b9a\u7406\u4e0d\u4ec5\u662f\u8fd1\u5e74\u6765\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u6700\u91cd\u5927\u7684\u7a81\u7834\u4e4b\u4e00\uff0c\u66f4\u662f\u6784\u6210\u4e86\u968f\u673a\u70ed\u529b\u5b66 (Stochastic Thermodynamics) \u8fd9\u95e8\u65b0\u5174\u5b66\u79d1\u7684\u7406\u8bba\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#1-fdt","title":"1. \u56de\u987e\uff1a\u6da8\u843d-\u8017\u6563\u5173\u7cfb (FDT)","text":"<p>\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u5373\u5c06\u5230\u6765\u7684\u975e\u5e73\u8861\u6da8\u843d\u5b9a\u7406\uff0c\u6709\u5fc5\u8981\u9996\u5148\u56de\u987e\u63cf\u8ff0\u8fd1\u5e73\u8861\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u6838\u5fc3\u573a\u8bba\u5de5\u5177\u2014\u2014Janssen-De Dominicis (J-D) \u4f5c\u7528\u91cf\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u7cfb\u7edf\u6027\u5730\u5bfc\u51fa\u4e86\u6da8\u843d-\u8017\u6563\u5173\u7cfb\u3002</p> <p>\u5728\u7edf\u8ba1\u573a\u8bba\u7684\u6846\u67b6\u4e0b\uff0c\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b\u7684\u6240\u6709\u53ef\u80fd\u8f68\u8ff9\u7684\u7edf\u8ba1\u6743\u91cd\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u4f5c\u7528\u91cf\u6cdb\u51fd\u6765\u63cf\u8ff0\u3002J-D \u4f5c\u7528\u91cf\u6b63\u662f\u4e3a\u5177\u6709\u52a0\u6027\u9ad8\u65af\u566a\u58f0\u7684\u968f\u673a\u52a8\u529b\u5b66\u7cfb\u7edf\u6784\u5efa\u7684\u8fd9\u6837\u4e00\u4e2a\u4f5c\u7528\u91cf\uff1a</p> \\[S[\\phi, \\tilde{\\phi}] = \\int_{x,t} \\left[ \\tilde{\\phi}_\\alpha (\\dot{\\phi}_\\alpha - A_\\alpha[\\phi]) - \\frac{1}{2} \\tilde{\\phi}_\\alpha N_{\\alpha\\beta} \\tilde{\\phi}_\\beta \\right]\\] <p>\u8fd9\u91cc\u7684 \\(\\phi(\\vec{x},t)\\) \u662f\u63cf\u8ff0\u7cfb\u7edf\u72b6\u6001\u7684\u7269\u7406\u573a\uff08\u4f8b\u5982\uff0c\u7c92\u5b50\u6d53\u5ea6\u573a\uff09\uff0c\u800c \\(\\tilde{\\phi}(\\vec{x},t)\\) \u662f\u4e00\u4e2a\u8f85\u52a9\u7684\u54cd\u5e94\u573a (response field) \u3002\u8fd9\u4e2a\u4f5c\u7528\u91cf\u4f18\u96c5\u5730\u5c06\u7cfb\u7edf\u7684\u5168\u90e8\u52a8\u529b\u5b66\u4fe1\u606f\u7f16\u7801\u4e8e\u4e00\u8eab\uff1a</p> <p>\u52a8\u529b\u5b66\u7ea6\u675f\u9879 \\(\\tilde{\\phi}_\\alpha (\\dot{\\phi}_\\alpha - A_\\alpha[\\phi])\\) \uff1a\u8fd9\u4e00\u9879\u6e90\u4e8e\u5bf9\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u4e25\u683c\u6267\u884c\u3002\u5728\u8def\u5f84\u79ef\u5206\u4e2d\uff0c\u54cd\u5e94\u573a \\(\\tilde{\\phi}\\) \u626e\u6f14\u4e86\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u7684\u89d2\u8272\uff0c\u5b83\u901a\u8fc7\u5728\u6240\u6709\u8def\u5f84\u4e0a\u6c42\u548c\uff0c\u5f3a\u5236\u8981\u6c42\u53ea\u6709\u6ee1\u8db3\u786e\u5b9a\u6027\u8fd0\u52a8\u65b9\u7a0b\uff08\\(\\dot{\\phi}_\\alpha = A_\\alpha[\\phi]\\)\uff09\u7684\u8f68\u8ff9\u624d\u4f1a\u6709\u663e\u8457\u7684\u8d21\u732e\u3002</p> <p>\u566a\u58f0\u8d21\u732e\u9879 \\(-\\frac{1}{2} \\tilde{\\phi}_\\alpha N_{\\alpha\\beta} \\tilde{\\phi}_\\beta\\) \uff1a\u8fd9\u4e00\u9879\u5219\u6765\u6e90\u4e8e\u5bf9\u9ad8\u65af\u767d\u566a\u58f0\u7684\u5e73\u5747\u3002\\(N_{\\alpha\\beta}\\) \u662f\u566a\u58f0\u5173\u8054\u77e9\u9635 \\(\\langle \\xi_\\alpha(x,t)\\xi_\\beta(x',t') \\rangle = N_{\\alpha\\beta}\\delta(x-x')\\delta(t-t')\\) \u7684\u6838\u5fc3\uff0c\u8be5\u9879\u7684\u4e8c\u6b21\u578b\u5f62\u5f0f\u5c06\u566a\u58f0\u7684\u7edf\u8ba1\u7279\u6027\u6c38\u4e45\u5730\u201c\u70d9\u5370\u201d\u5728\u4e86\u6709\u6548\u4f5c\u7528\u91cf\u4e2d\u3002</p> <p>\u901a\u8fc7\u5bf9\u8fd9\u4e2a\u4f5c\u7528\u91cf\u6cdb\u51fd\u8fdb\u884c\u8def\u5f84\u79ef\u5206\uff0c\u53ef\u4ee5\u8ba1\u7b97\u51fa\u4efb\u610f\u53ef\u89c2\u6d4b\u91cf\u3002\u5176\u4e2d\uff0c\u4e24\u4e2a\u6838\u5fc3\u7684\u7269\u7406\u91cf\u662f\u54cd\u5e94\u51fd\u6570\u548c\u5173\u8054\u51fd\u6570\u3002</p> <ol> <li> <p>\u54cd\u5e94\u51fd\u6570 (Response Function) \\(\\chi_{\\alpha\\beta}(x,t;x',t')\\) \uff1a\u5b83\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5728 \\((x,t)\\) \u5904\u7684\u573a\u5206\u91cf \\(\\langle \\phi_\\alpha \\rangle\\) \u5982\u4f55\u54cd\u5e94\u5728\u53e6\u4e00\u65f6\u7a7a\u70b9 \\((x',t')\\) \u65bd\u52a0\u7684\u4e00\u4e2a\u5fae\u5c0f\u5916\u90e8\u6270\u52a8\u573a \\(h_\\beta\\)\u3002\u5728J-D\u5f62\u5f0f\u4f53\u7cfb\u4e0b\uff0c\u5b83\u88ab\u7cbe\u786e\u5730\u8868\u8fbe\u4e3a\u7269\u7406\u573a\u4e0e\u54cd\u5e94\u573a\u7684\u5173\u8054\u51fd\u6570\uff1a</p> \\[\\chi_{\\alpha\\beta}(x,t;x',t') = \\left.\\frac{\\delta \\langle \\phi_\\alpha(x,t) \\rangle}{\\delta h_\\beta(x',t')} \\right|_{h \\to 0} = L \\langle \\phi_\\alpha(x,t) \\tilde{\\phi}_\\beta(x',t') \\rangle\\] </li> <li> <p>\u5173\u8054\u51fd\u6570 (Correlation Function) \\(C_{\\alpha\\beta}(x,t;x',t')\\)\uff1a\u5b83\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5728\u6ca1\u6709\u4efb\u4f55\u5916\u90e8\u6270\u52a8\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u81ea\u53d1\u6da8\u843d\u5728\u4e0d\u540c\u65f6\u7a7a\u70b9\u4e4b\u95f4\u7684\u7edf\u8ba1\u5173\u8054\u7a0b\u5ea6 \uff1a</p> \\[C_{\\alpha\\beta}(x,t;x',t') = \\langle \\phi_\\alpha(x,t) \\phi_\\beta(x',t') \\rangle\\] </li> </ol> <p>\u63a8\u5bfc FDT \u7684\u5173\u952e\uff0c\u5728\u4e8e\u5229\u7528\u7cfb\u7edf\u5728\u70ed\u5e73\u8861\u6001\u4e0b\u6240\u6ee1\u8db3\u7684\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u3002\u6b63\u5982\u5728\u7b2c31\u8bb2\u548c\u7b2c32\u8bb2\u4e2d\u5c55\u793a\u7684\uff0c\u8fd9\u4e00\u57fa\u672c\u5bf9\u79f0\u6027\u5bf9J-D\u4f5c\u7528\u91cf\u65bd\u52a0\u4e86\u5f3a\u6709\u529b\u7684\u7ea6\u675f\uff0c\u6700\u7ec8\u8981\u6c42\u566a\u58f0\u5f3a\u5ea6 \\(N\\) \u548c\u8017\u6563\u7cfb\u6570 \\(L\\) \u5fc5\u987b\u6ee1\u8db3\u7231\u56e0\u65af\u5766-\u6602\u8428\u683c\u5173\u7cfb\uff08\\(N=2LT\\)\uff09\u3002\u8fd9\u4e2a\u5185\u7f6e\u7684\u5bf9\u79f0\u6027\u6700\u7ec8\u5bfc\u81f4\u54cd\u5e94\u51fd\u6570\u548c\u5173\u8054\u51fd\u6570\u4e4b\u95f4\u5b58\u5728\u4e00\u4e2a\u7cbe\u786e\u7684\u5173\u7cfb\uff1a</p> \\[\\chi(\\tau) = -\\frac{1}{k_B T} \\Theta(\\tau) \\frac{dC}{d\\tau}(\\tau)\\] <p>\u5176\u4e2d \\(\\tau = t-t'\\)\uff0c\\(\\Theta(\\tau)\\) \u662f\u4ea5\u7ef4\u8d5b\u9636\u8dc3\u51fd\u6570\uff0c\u4f53\u73b0\u4e86\u56e0\u679c\u6027\uff08\u54cd\u5e94\u4e0d\u80fd\u53d1\u751f\u5728\u6270\u52a8\u4e4b\u524d\uff09\u3002\u8fd9\u4e2a\u5173\u7cfb\u5f0f\u5c31\u662f\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u3002\u5b83\u6df1\u523b\u5730\u63ed\u793a\u4e86\uff1a\u4e00\u4e2a\u7cfb\u7edf\u62b5\u6297\u5916\u90e8\u6270\u52a8\u800c\u8017\u6563\u80fd\u91cf\u7684\u80fd\u529b\uff08\u7531 \\(\\chi\\) \u4f53\u73b0\uff09\uff0c\u4e0e\u5176\u5185\u90e8\u81ea\u53d1\u7684\u3001\u70ed\u9a71\u52a8\u7684\u6da8\u843d\uff08\u7531 \\(C\\) \u4f53\u73b0\uff09\u662f\u540c\u4e00\u4e2a\u5fae\u89c2\u7269\u7406\u672c\u8d28\u7684\u4e24\u4e2a\u4fa7\u9762\u3002</p> <p>\u8fd9\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u4e0d\u4ec5\u4e3a FDT \u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e25\u683c\u7684\u573a\u8bba\u8bc1\u660e\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5c55\u793a\u4e86\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u5728\u8fde\u63a5\u7cfb\u7edf\u201c\u54cd\u5e94\u201d\u548c\u201c\u6da8\u843d\u201d\u4e2d\u7684\u6838\u5fc3\u4f5c\u7528\u3002\u6b63\u662f\u8fd9\u4e00\u601d\u60f3\uff0c\u5c06\u88ab\u63a8\u5e7f\u5230\u8fdc\u79bb\u5e73\u8861\u7684\u7cfb\u7edf\u4e2d\uff0c\u6210\u4e3a\u63a8\u5bfc\u975e\u5e73\u8861\u6da8\u843d\u5b9a\u7406\u7684\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#2","title":"2. \u975e\u5e73\u8861\u9a71\u52a8\u7cfb\u7edf\u4e0e\u5916\u90e8\u534f\u8bae","text":"<p>\u4e0a\u4e00\u8282\u56de\u987e\u7684\u6da8\u843d-\u8017\u6563\u5173\u7cfb (FDT) \u63cf\u8ff0\u4e86\u7cfb\u7edf\u5bf9\u5fae\u5c0f\u6270\u52a8\u7684\u88ab\u52a8\u54cd\u5e94\u3002\u73b0\u5728\uff0c\u5c06\u6ce8\u610f\u529b\u4ece\u8fd9\u79cd\u8fd1\u5e73\u8861\u7684\u7ebf\u6027\u884c\u4e3a\uff0c\u8f6c\u5411\u4e00\u4e2a\u88ab\u4e3b\u52a8\u3001\u4efb\u610f\u5730\u9a71\u52a8\u8fdc\u79bb\u5e73\u8861\u7684\u7cfb\u7edf\u3002\u8fd9\u91cc\u7684\u6838\u5fc3\u8f6c\u53d8\u5728\u4e8e\uff0c\u5916\u90e8\u53c2\u6570\u4e0d\u518d\u662f\u5fae\u5c0f\u7684\u63a2\u9488\uff0c\u800c\u662f\u4e00\u4e2a\u968f\u65f6\u95f4\u663e\u8457\u53d8\u5316\u7684\u3001\u9884\u5148\u8bbe\u5b9a\u7684\u63a7\u5236\u7a0b\u5e8f\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#21","title":"2.1 \u7cfb\u7edf\u7684\u63cf\u8ff0\uff1a\u81ea\u7531\u80fd\u6cdb\u51fd","text":"<p>\u8003\u8651\u4e00\u4e2a\u7531\u573a\u53d8\u91cf \\(\\vec{\\phi}\\) \u63cf\u8ff0\u7684\u7cfb\u7edf\uff0c\u5176\u5728\u7ed9\u5b9a\u5916\u90e8\u573a \\(\\vec{h}\\) \u4e0b\u7684\u5e73\u8861\u6001\u6027\u8d28\u7531\u4e00\u4e2a\u81ea\u7531\u80fd\u6cdb\u51fd \\(F[\\vec{\\phi}]\\) \u7ed9\u51fa\u3002\u5176\u5f62\u5f0f\u4e0e\u5728\u7b2c25\u8bb2\u4e2d\u63a2\u8ba8\u7684\u91d1\u5179\u5821-\u6717\u9053\u7406\u8bba\u4e00\u81f4\uff1a</p> \\[F[\\vec{\\phi}] = \\int d^dx \\left( f(\\vec{\\phi}) + \\frac{c}{2} (\\vec{\\nabla} \\vec{\\phi})^2 - \\vec{h} \\cdot \\vec{\\phi} \\right)\\] <p>\u8fd9\u4e2a\u6cdb\u51fd\u7684\u6bcf\u4e00\u9879\u90fd\u6709\u6e05\u6670\u7684\u7269\u7406\u610f\u4e49\uff1a</p> <p>\u5c40\u57df\u81ea\u7531\u80fd\u5bc6\u5ea6 \\(f(\\vec{\\phi})\\) \uff1a\u5305\u542b\u4e86\u5c40\u57df\u7684\u71b5\u8d21\u732e\u548c\u7c92\u5b50\u95f4\u7684\u5e73\u5747\u573a\u76f8\u4e92\u4f5c\u7528\uff0c\u51b3\u5b9a\u4e86\u7cfb\u7edf\u7684\u57fa\u672c\u76f8\u884c\u4e3a\u3002</p> <p>\u68af\u5ea6\u80fd\u91cf\u9879 \\(\\frac{c}{2} (\\vec{\\nabla} \\vec{\\phi})^2\\) \uff1a\u5b83\u5bf9\u7a7a\u95f4\u975e\u5747\u5300\u6027\u65bd\u52a0\u80fd\u91cf\u60e9\u7f5a\uff0c\u662f\u754c\u9762\u5f20\u529b\u7684\u5fae\u89c2\u6765\u6e90\u3002</p> <p>\u8026\u5408\u9879 \\(-\\vec{h} \\cdot \\vec{\\phi}\\) \uff1a\u8fd9\u662f\u5916\u90e8\u4e16\u754c\u4e0e\u7cfb\u7edf\u76f8\u4e92\u4f5c\u7528\u7684\u201c\u628a\u624b\u201d\u3002\u6b63\u662f\u901a\u8fc7\u6539\u53d8\u5916\u90e8\u573a \\(\\vec{h}\\)\uff0c\u624d\u80fd\u591f\u5bf9\u7cfb\u7edf\u65bd\u52a0\u5f71\u54cd\u5e76\u505a\u529f\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#22","title":"2.2 \u9a71\u52a8\u8fc7\u7a0b\u7684\u8bbe\u5b9a","text":"<p>\u4e00\u4e2a\u5178\u578b\u7684\u975e\u5e73\u8861\u9a71\u52a8\u5b9e\u9a8c\u6216\u6a21\u62df\uff0c\u5176\u8bbe\u5b9a\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u521d\u59cb\u72b6\u6001 \uff1a\u5728 \\(t=0\\) \u65f6\u523b\uff0c\u7cfb\u7edf\u4e0e\u4e00\u4e2a\u521d\u59cb\u5916\u90e8\u573a \\(\\vec{h}(0)\\) \u5b8c\u5168\u8fbe\u5230\u70ed\u5e73\u8861\u3002\u8fd9\u610f\u5473\u7740\uff0c\u7cfb\u7edf\u521d\u59cb\u6784\u578b \\(\\vec{\\phi}_0\\) \u7684\u6982\u7387\u5206\u5e03\u7531\u73bb\u5c14\u5179\u66fc\u56e0\u5b50\u7ed9\u51fa\uff1a</p> \\[P_0[\\vec{\\phi}_0] = \\frac{1}{Z_0(T)} \\exp \\left[ -\\beta F_0[\\vec{\\phi}_0] \\right]\\] <p>\u5176\u4e2d \\(\\beta = 1/T\\) (\u8bbe\u73bb\u5c14\u5179\u66fc\u5e38\u6570 \\(k_B=1\\))\uff0c\\(F_0\\) \u662f\u5bf9\u5e94\u4e8e\u521d\u59cb\u5916\u573a \\(\\vec{h}(0)\\) \u7684\u81ea\u7531\u80fd\u6cdb\u51fd\uff0c\u800c \\(Z_0(T)\\) \u662f\u76f8\u5e94\u7684\u914d\u5206\u51fd\u6570\u3002\u4ece\u4e00\u4e2a\u7cbe\u786e\u5b9a\u4e49\u7684\u5e73\u8861\u6001\u51fa\u53d1\uff0c\u662f\u6240\u6709\u6da8\u843d\u5b9a\u7406\u7684\u903b\u8f91\u8d77\u70b9\u3002</p> </li> <li> <p>\u9a71\u52a8\u8fc7\u7a0b \uff1a\u5728 \\(t=0\\) \u5230 \\(t=t_f\\) \u7684\u65f6\u95f4\u6bb5\u5185\uff0c\u5916\u90e8\u573a \\(\\vec{h}(t)\\) \u6309\u7167\u4e00\u4e2a\u9884\u5148\u8bbe\u5b9a\u7684\u3001\u786e\u5b9a\u6027\u7684\u65f6\u95f4\u51fd\u6570\u8fdb\u884c\u6f14\u5316\u3002\u8fd9\u4e2a\u51fd\u6570 \\(\\vec{h}(t)\\) \u88ab\u79f0\u4e3a\u5916\u90e8\u534f\u8bae (external protocol) \u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u534f\u8bae\u5c06\u7cfb\u7edf\u4ece\u4e00\u4e2a\u521d\u59cb\u5e73\u8861\u6001\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u975e\u5e73\u8861\u6001\uff0c\u6700\u7ec8\u9a71\u52a8\u5230\u4e00\u4e2a\u901a\u5e38\u4e5f\u662f\u975e\u5e73\u8861\u7684\u672b\u6001\u3002</p> </li> </ol> <p> \u56fe\u793a\uff1a\u4e00\u4e2a\u5916\u90e8\u534f\u8bae\u7684\u4f8b\u5b50\u3002\u5916\u90e8\u573a\\(h(t)\\)\u5728\\(t=0\\)\u4e4b\u524d\u4e3a\u5e38\u6570\uff0c\u5728\\(0\\)\u5230\\(t_f\\)\u4e4b\u95f4\u6309\u67d0\u4e00\u51fd\u6570\u53d8\u5316\uff0c\u5728\\(t_f\\)\u4e4b\u540e\u518d\u6b21\u53d8\u4e3a\u5e38\u6570\u3002</p> <ul> <li>\u521d\u59cb\u5e73\u8861\u6001\uff1a\u5728 \\(t&lt;0\\) \u7684\u65f6\u95f4\u91cc\uff0c\u5916\u90e8\u573a \\(h=0\\) \u4e14\u4fdd\u6301\u4e0d\u53d8\uff0c\u7cfb\u7edf\u5904\u4e8e\u521d\u59cb\u7684\u5e73\u8861\u72b6\u6001\u4e2d\u3002</li> <li>\u9a71\u52a8\u8fc7\u7a0b\uff1a\u5728 \\(t=0\\) \u5230 \\(t=t_f\\) \u8fd9\u4e2a\u6709\u9650\u7684\u65f6\u95f4\u533a\u95f4\u5185\uff0c\u5916\u90e8\u573a \\(h(t)\\) \u6309\u7167\u4e00\u4e2a\u9884\u5148\u8bbe\u5b9a\u7684\uff08\u901a\u5e38\u662f\u4efb\u610f\u7684\uff09\u51fd\u6570\u8fdb\u884c\u6f14\u5316\uff0c\u5c06\u7cfb\u7edf\u4e3b\u52a8\u5730\u5e26\u79bb\u5e73\u8861\u3002</li> <li>\u672b\u6001\uff1a\u5728 \\(t&gt;t_f\\) \u540e\uff0c\u5916\u90e8\u573a\u8fbe\u5230\u6700\u7ec8\u503c \\(h_f\\) \u5e76\u518d\u6b21\u4fdd\u6301\u4e0d\u53d8\uff0c\u7cfb\u7edf\u4f1a\u5f00\u59cb\u5411\u5bf9\u5e94\u4e8e \\(h_f\\) \u7684\u65b0\u5e73\u8861\u6001\u5f1b\u8c6b\u3002</li> </ul>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#23","title":"2.3 \u4e0d\u53ef\u9006\u6027\u7684\u6839\u6e90\uff1a\u6709\u9650\u65f6\u95f4\u4e0e\u5f1b\u8c6b","text":"<p>\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u4e0d\u53ef\u9006\u6027\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u534f\u8bae\u662f\u5728\u6709\u9650\u65f6\u95f4 \\(t_f\\) \u5185\u5b8c\u6210\u7684\u3002\u8fd9\u91cc\u5b58\u5728\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u7684\u6781\u9650\uff1a</p> <ul> <li> <p>\u51c6\u9759\u6001\u6781\u9650 (\\(t_f \\to \\infty\\)) \uff1a\u5982\u679c\u534f\u8bae\u53d8\u5316\u5f97\u65e0\u9650\u7f13\u6162\uff0c\u7cfb\u7edf\u5728\u6bcf\u4e2a\u77ac\u95f4\u90fd\u6709\u8db3\u591f\u7684\u65f6\u95f4\u901a\u8fc7\u5185\u90e8\u5f1b\u8c6b\u6765\u9002\u5e94\u5916\u90e8\u573a\u7684\u5fae\u5c0f\u6539\u53d8\u3002\u56e0\u6b64\uff0c\u7cfb\u7edf\u59cb\u7ec8\u4fdd\u6301\u5728\u4e0e\u77ac\u65f6\u5916\u573a \\(\\vec{h}(t)\\) \u76f8\u5bf9\u5e94\u7684\u5e73\u8861\u6001\u3002\u8fd9\u6837\u7684\u8fc7\u7a0b\u662f\u53ef\u9006\u7684 (reversible) \uff0c\u5916\u754c\u6240\u505a\u7684\u529f\u6070\u597d\u7b49\u4e8e\u7cfb\u7edf\u59cb\u672b\u5e73\u8861\u6001\u4e4b\u95f4\u7684\u81ea\u7531\u80fd\u5dee \\(\\Delta F\\)\u3002\u8fd9\u662f\u7ecf\u5178\u70ed\u529b\u5b66\u7684\u7406\u60f3\u7586\u57df\u3002</p> </li> <li> <p>\u6709\u9650\u65f6\u95f4\u8fc7\u7a0b (\\(t_f &lt; \\infty\\)) \uff1a\u5bf9\u4e8e\u4efb\u4f55\u6709\u9650\u7684\u9a71\u52a8\u65f6\u95f4\uff0c\u7cfb\u7edf\u5185\u90e8\u7684\u5f1b\u8c6b\uff08\u7531\u52a8\u529b\u5b66\u7cfb\u6570 \\(L\\) \u7b49\u51b3\u5b9a\uff09\u9700\u8981\u65f6\u95f4\u3002\u56e0\u6b64\uff0c\u7cfb\u7edf\u72b6\u6001\u7684\u6f14\u5316\u603b\u662f\u4f1a\u6ede\u540e (lag) \u4e8e\u5916\u90e8\u573a\u7684\u6539\u53d8\u3002\u7cfb\u7edf\u7684\u6982\u7387\u5206\u5e03 \\(P(\\vec{\\phi},t)\\) \u5c06\u4e0d\u518d\u662f\u5bf9\u5e94\u4e8e\u77ac\u65f6\u5916\u573a \\(\\vec{h}(t)\\) \u7684\u5e73\u8861\u5206\u5e03\u3002\u6b63\u662f\u8fd9\u79cd\u6ede\u540e\uff0c\u5bfc\u81f4\u4e86\u80fd\u91cf\u7684\u8017\u6563 (dissipation) \uff0c\u901a\u5e38\u4ee5\u70ed\u7684\u5f62\u5f0f\u6563\u53d1\u5230\u73af\u5883\u4e2d\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0c\u5916\u90e8\u65bd\u52a0\u7684\u529f\u7684\u5e73\u5747\u503c\u5c06\u4e25\u683c\u5927\u4e8e\u81ea\u7531\u80fd\u7684\u53d8\u5316\uff0c\u5373 \\(\\langle W \\rangle &gt; \\Delta F\\)\u3002\u8fd9\u4e2a\u5dee\u503c\uff0c\\(\\langle W_{diss} \\rangle = \\langle W \\rangle - \\Delta F\\)\uff0c\u5c31\u662f\u5e73\u5747\u8017\u6563\u529f (dissipated work) \uff0c\u5b83\u91cf\u5316\u4e86\u8fc7\u7a0b\u7684\u4e0d\u53ef\u9006\u7a0b\u5ea6\u3002</p> <p>\u6da8\u843d\u5b9a\u7406\u7684\u7cbe\u9ad3\u5728\u4e8e\uff0c\u5b83\u4e0d\u4ec5\u5173\u6ce8\u8fd9\u4e2a\u5e73\u5747\u884c\u4e3a\uff0c\u800c\u662f\u7cbe\u786e\u5730\u523b\u753b\u4e86\u7531\u65e0\u6570\u6761\u968f\u673a\u8f68\u8ff9\u6240\u4ea7\u751f\u7684\u529f\u7684\u5b8c\u6574\u6982\u7387\u5206\u5e03 \\(P(W)\\) \u3002\u63a5\u4e0b\u6765\u7684\u4efb\u52a1\uff0c\u5c31\u662f\u4e3a\u8fd9\u4e2a\u5728\u5355\u6761\u8f68\u8ff9\u4e0a\u6240\u505a\u7684\u3001\u968f\u673a\u7684\u975e\u5e73\u8861\u529f\u7ed9\u51fa\u4e00\u4e2a\u7cbe\u786e\u7684\u5b9a\u4e49\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#3","title":"3. \u975e\u5e73\u8861\u529f\uff1a\u5b9a\u4e49\u4e0e\u8def\u5f84\u79ef\u5206\u8ba1\u7b97","text":"<p>\u4e3a\u4e86\u5efa\u7acb\u6da8\u843d\u5b9a\u7406\uff0c\u9996\u5148\u5fc5\u987b\u4e3a\u201c\u529f\u201d\u5728\u968f\u673a\u3001\u975e\u5e73\u8861\u8fc7\u7a0b\u4e2d\u7ed9\u51fa\u4e00\u4e2a\u7cbe\u786e\u7684\u7269\u7406\u5b9a\u4e49\u3002\u4e0e\u5b8f\u89c2\u70ed\u529b\u5b66\u4e2d\u529f\u662f\u4e00\u4e2a\u786e\u5b9a\u503c\u4e0d\u540c\uff0c\u5728\u968f\u673a\u70ed\u529b\u5b66\u4e2d\uff0c\u529f\u662f\u5728\u5355\u6761\u968f\u673a\u8f68\u8ff9\u4e0a\u5b9a\u4e49\u7684\u3001\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u8def\u5f84\u7684\u968f\u673a\u53d8\u91cf \u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#31-jarzynski","title":"3.1 Jarzynski \u529f\u7684\u5b9a\u4e49","text":"<p>\u8fd9\u4e2a\u5b9a\u4e49\u6e90\u4e8e\u7ecf\u5178\u529b\u5b66\u548c\u70ed\u529b\u5b66\u7684\u57fa\u672c\u601d\u60f3\uff1a\u5bf9\u7cfb\u7edf\u505a\u7684\u529f\uff0c\u7b49\u4e8e\u7cfb\u7edf\u80fd\u91cf\u56e0\u5916\u90e8\u63a7\u5236\u53c2\u6570\u53d8\u5316\u800c\u4ea7\u751f\u7684\u6539\u53d8\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7531\u5916\u90e8\u573a \\(\\vec{h}(t)\\) \u9a71\u52a8\u7684\u7cfb\u7edf\uff0c\u5176\u81ea\u7531\u80fd\u6cdb\u51fd \\(F[\\vec{\\phi}]\\) \u4f1a\u968f\u65f6\u95f4\u663e\u5f0f\u5730\u53d8\u5316\u3002\u5728\u5fae\u5c0f\u65f6\u95f4\u95f4\u9694 \\(dt\\) \u5185\uff0c\u5916\u90e8\u65bd\u52a8\u8005\u5bf9\u7cfb\u7edf\u505a\u7684\u5fae\u529f \\(dW_J\\) \u5c31\u662f \\(F[\\vec{\\phi}]\\) \u7531\u4e8e\u5916\u90e8\u53c2\u6570 \\(\\vec{h}\\) \u7684\u53d8\u5316\u800c\u4ea7\u751f\u7684\u6539\u53d8\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u7ecf\u5178\u70ed\u529b\u5b66\u4e2d\u7684 \\(dW = (\\partial E / \\partial \\lambda) d\\lambda\\)\u3002\u5728\u573a\u8bba\u7684\u8bed\u8a00\u4e2d\uff0c\u8fd9\u8868\u73b0\u4e3a\uff1a</p> \\[dW_J = \\left( \\frac{\\partial F[\\vec{\\phi}(t)]}{\\partial t} \\right)_{\\vec{\\phi} \\text{ fixed}} dt\\] <p>\u8fd9\u91cc\u7684\u504f\u5bfc\u6570 \\(\\partial/\\partial t\\) \u4ec5\u4f5c\u7528\u4e8e\u81ea\u7531\u80fd\u6cdb\u51fd\u4e2d\u663e\u5f0f\u4f9d\u8d56\u65f6\u95f4\u7684\u5916\u90e8\u573a \\(\\vec{h}(t)\\)\uff0c\u800c\u4fdd\u6301\u77ac\u65f6\u573a\u6784\u578b \\(\\vec{\\phi}(t)\\) \u4e0d\u53d8\u3002\u5229\u7528\u5728\u7b2c2\u8282\u4e2d\u7ed9\u51fa\u7684\u81ea\u7531\u80fd\u6cdb\u51fd\u5f62\u5f0f \\(F \\propto -\\int d^dx (\\vec{h} \\cdot \\vec{\\phi})\\)\uff0c\u53ef\u4ee5\u5f97\u5230 \\(\\delta F / \\delta \\vec{h} = -\\vec{\\phi}\\)\u3002\u56e0\u6b64\uff0c\u5728\u6574\u4e2a\u534f\u8bae\u671f\u95f4\uff08\u4ece \\(t=0\\) \u5230 \\(t=t_f\\)\uff09\u5bf9\u7cfb\u7edf\u6240\u505a\u7684\u603b\u529f\uff0c\u5373 Jarzynski \u529f \\(W_J[\\vec{\\phi}]\\)\uff0c\u4fbf\u662f\u6cbf\u7740\u4e00\u6761\u5177\u4f53\u7684\u8f68\u8ff9 \\(\\vec{\\phi}(t)\\) \u5bf9\u5fae\u529f\u8fdb\u884c\u79ef\u5206\u7684\u7ed3\u679c\uff1a</p> \\[W_J[\\vec{\\phi}] := \\int_0^{t_f} dt \\, \\frac{\\partial F[\\vec{\\phi}]}{\\partial t} = -\\int_0^{t_f} dt \\int d^dx \\, \\vec{\\phi}(\\vec{x},t) \\cdot \\frac{\\partial \\vec{h}(\\vec{x},t)}{\\partial t}\\] <p>\u8fd9\u4e2a\u5b9a\u4e49\u6df1\u523b\u5730\u63ed\u793a\u4e86\u975e\u5e73\u8861\u529f\u7684\u7269\u7406\u672c\u8d28\uff1a</p> <ul> <li> <p>\u529f\u662f\u968f\u673a\u7684\uff1a\\(W_J\\) \u662f\u4e00\u4e2a\u6cdb\u51fd \uff0c\u5b83\u7684\u503c\u53d6\u51b3\u4e8e\u7cfb\u7edf\u6240\u7ecf\u5386\u7684\u5177\u4f53\u5fae\u89c2\u8def\u5f84 \\(\\vec{\\phi}(\\vec{x},t)\\)\u3002\u7531\u4e8e\u7cfb\u7edf\u7684\u6f14\u5316\u53d7\u5230\u70ed\u566a\u58f0\u7684\u5f71\u54cd\u662f\u968f\u673a\u7684\uff0c\u4e0d\u540c\u7684\u8f68\u8ff9\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u529f\u503c\u3002\u56e0\u6b64\uff0c\u529f\u672c\u8eab\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5177\u6709\u4e00\u4e2a\u6982\u7387\u5206\u5e03 \\(P(W_J)\\)\u3002</p> </li> <li> <p>\u529f\u7684\u6765\u6e90 \uff1a\u529f\u662f\u7cfb\u7edf\u72b6\u6001\u573a \\(\\vec{\\phi}(t)\\) \u4e0e\u5916\u90e8\u534f\u8bae\u53d8\u5316\u7387 \\(\\partial \\vec{h} / \\partial t\\) \u8026\u5408\u7684\u76f4\u63a5\u7ed3\u679c\u3002\u5982\u679c\u534f\u8bae\u4e0d\u968f\u65f6\u95f4\u53d8\u5316\uff08\\(\\partial \\vec{h}/\\partial t = 0\\)\uff09\uff0c\u5219\u5916\u754c\u5bf9\u7cfb\u7edf\u4e0d\u505a\u529f\u3002</p> </li> </ul>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#32","title":"3.2 \u8def\u5f84\u79ef\u5206\u4e0b\u7684\u7cfb\u7efc\u5e73\u5747","text":"<p>\u4e3a\u4e86\u8ba1\u7b97\u4efb\u610f\u53ef\u89c2\u6d4b\u91cf \\(O[\\vec{\\phi}]\\)\uff08\u4f8b\u5982\u529f\u672c\u8eab \\(W_J\\)\uff0c\u6216\u5176\u6307\u6570\u51fd\u6570 \\(e^{-\\beta W_J}\\)\uff09\u7684\u7cfb\u7efc\u5e73\u5747\u503c\uff0c\u9700\u8981\u5728\u7b2c2\u8282\u5b9a\u4e49\u7684\u975e\u5e73\u8861\u9a71\u52a8\u5b9e\u9a8c\u7684\u6574\u4e2a\u8def\u5f84\u7cfb\u7efc\u4e0a\u8fdb\u884c\u5e73\u5747\u3002\u8fd9\u4e2a\u5e73\u5747\u8fc7\u7a0b\u5728\u8def\u5f84\u79ef\u5206\u5f62\u5f0f\u4e0b\uff0c\u53ef\u4ee5\u88ab\u7cfb\u7edf\u6027\u5730\u5206\u89e3\u4e3a\u4e09\u4e2a\u5c42\u6b21\u7684\u79ef\u5206\uff1a</p> \\[\\langle O[\\vec{\\phi}] \\rangle = \\int \\mathcal{D}[\\vec{\\phi}_0] \\underbrace{P_0[\\vec{\\phi}_0]}_{\\text{\u521d\u59cb\u6001\u6743\u91cd}} \\int \\mathcal{D}[\\vec{\\phi}_f] \\int_{\\vec{\\phi}(0)=\\vec{\\phi}_0}^{\\vec{\\phi}(t_f)=\\vec{\\phi}_f} \\underbrace{\\mathcal{D}[\\vec{\\phi}, \\tilde{\\phi}] \\exp(-S[\\tilde{\\phi}, \\vec{\\phi}])}_{\\text{\u8def\u5f84\u6743\u91cd}} O[\\vec{\\phi}]\\] <p>\u6ce8\u610f\uff1a\u4e3a\u4e0e\u8bfe\u7a0b\u677f\u4e66\u4fdd\u6301\u4e00\u81f4\uff0c\u8fd9\u91cc\u7684\u54cd\u5e94\u573a\u79ef\u5206\u6d4b\u5ea6\u4e3a \\(\\mathcal{D}[\\tilde{\\phi}]\\)\uff0c\u5bf9\u5e94\u4e8e Wick \u65cb\u8f6c\u540e\u7684\u5b9e\u6570\u4f5c\u7528\u91cf\u3002</p> <p>\u8fd9\u4e2a\u770b\u4f3c\u590d\u6742\u7684\u8868\u8fbe\u5f0f\uff0c\u5b9e\u9645\u4e0a\u662f\u5bf9\u975e\u5e73\u8861\u8fc7\u7a0b\u7684\u4e00\u4e2a\u7cbe\u786e\u7684\u3001\u5206\u6b65\u5f0f\u7684\u6570\u5b66\u6a21\u62df\uff1a</p> <ol> <li> <p>\u521d\u59cb\u6001\u5e73\u5747 (Initial State Averaging) \uff1a\u79ef\u5206 \\(\\int \\mathcal{D}[\\vec{\\phi}_0] P_0[\\vec{\\phi}_0] \\dots\\) \u5bf9\u5e94\u4e8e\u5b9e\u9a8c\u7684\u7b2c\u4e00\u6b65\uff1a\u4ece\u521d\u59cb\u7684\u5e73\u8861\u7cfb\u7efc\u4e2d\uff0c\u6309\u7167\u73bb\u5c14\u5179\u66fc\u6982\u7387 \\(P_0[\\vec{\\phi}_0] = \\frac{1}{Z_0} e^{-\\beta F_0[\\vec{\\phi}_0]}\\) \u968f\u673a\u201c\u62bd\u53d6\u201d\u4e00\u4e2a\u521d\u59cb\u6784\u578b \\(\\vec{\\phi}_0\\)\u3002</p> </li> <li> <p>\u8def\u5f84\u5e73\u5747 (Path Averaging) \uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ed9\u5b9a\u7684\u521d\u59cb\u6784\u578b \\(\\vec{\\phi}_0\\) \u548c\u6700\u7ec8\u6784\u578b \\(\\vec{\\phi}_f\\)\uff0c\u5185\u5c42\u7684\u79ef\u5206 \\(\\int \\mathcal{D}[\\vec{\\phi}, \\tilde{\\phi}] \\exp(-S) \\dots\\) \u5219\u662f\u5bf9\u6240\u6709\u53ef\u80fd\u8fde\u63a5\u8fd9\u4e24\u70b9\u7684\u3001\u9075\u5faa\u968f\u673a\u52a8\u529b\u5b66\u7684\u5386\u53f2\u8def\u5f84\u8fdb\u884c\u6c42\u548c\u3002\u6bcf\u6761\u8def\u5f84\u7684\u7edf\u8ba1\u6743\u91cd\u7531 J-D \u4f5c\u7528\u91cf \\(e^{-S[\\tilde{\\phi}, \\vec{\\phi}]}\\) \u7ed9\u51fa\uff0c\u8be5\u4f5c\u7528\u91cf\u5df2\u7ecf\u5c06\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u52a8\u529b\u5b66\u7ea6\u675f\u548c\u566a\u58f0\u7edf\u8ba1\u7279\u6027\u5b8c\u5168\u7f16\u7801\u5728\u5185\u3002</p> </li> <li> <p>\u672b\u6001\u6c42\u548c (Summing over Final States) \uff1a\u6700\u5916\u5c42\u7684\u79ef\u5206 \\(\\int \\mathcal{D}[\\vec{\\phi}_f] \\dots\\) \u5219\u662f\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u6700\u7ec8\u6784\u578b\u8fdb\u884c\u6c42\u548c\uff0c\u56e0\u4e3a\u5728\u975e\u5e73\u8861\u8fc7\u7a0b\u4e2d\uff0c\u5373\u4f7f\u4ece\u540c\u4e00\u4e2a\u521d\u59cb\u6001\u51fa\u53d1\uff0c\u4e0d\u540c\u7684\u968f\u673a\u8f68\u8ff9\u4e5f\u4f1a\u5230\u8fbe\u4e0d\u540c\u7684\u672b\u6001\u3002</p> </li> </ol> <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u63a8\u5bfc\u6240\u6709\u6da8\u843d\u5b9a\u7406\u7684\u575a\u5b9e\u6570\u5b66\u57fa\u7840\u3002\u5b83\u5c06\u4e00\u4e2a\u975e\u5e73\u8861\u8fc7\u7a0b\u7684\u5b8f\u89c2\u7edf\u8ba1\u5e73\u5747\uff0c\u7cbe\u786e\u5730\u5206\u89e3\u4e3a\u4e86\u5bf9\u521d\u59cb\u5e73\u8861\u6001\u7684\u62bd\u6837\u548c\u5bf9\u968f\u673a\u52a8\u529b\u5b66\u8def\u5f84\u7684\u6c42\u548c\u3002\u63a5\u4e0b\u6765\u7684\u4efb\u52a1\uff0c\u5c31\u662f\u901a\u8fc7\u5bf9\u8fd9\u4e2a\u8def\u5f84\u79ef\u5206\u8868\u8fbe\u5f0f\u8fdb\u884c\u4e00\u7cfb\u5217\u5de7\u5999\u7684\u5bf9\u79f0\u6027\u53d8\u6362\uff0c\u6765\u63ed\u793a\u9690\u85cf\u5728\u5176\u4e2d\u7684\u666e\u9002\u89c4\u5f8b\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#4","title":"4. \u6da8\u843d\u5b9a\u7406\u7684\u8def\u5f84\u79ef\u5206\u63a8\u5bfc","text":"<p>\u672c\u8282\u662f\u8bb2\u5ea7\u7684\u6570\u5b66\u6838\u5fc3\uff0c\u5c06\u8be6\u7ec6\u5c55\u793a\u5982\u4f55\u901a\u8fc7\u5bf9 J-D \u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u8fdb\u884c\u4e00\u7cfb\u5217\u7cbe\u5999\u7684\u53d8\u6362\uff0c\u4ece\u800c\u63a8\u5bfc\u51fa\u8fde\u63a5\u975e\u5e73\u8861\u529f\u548c\u5e73\u8861\u81ea\u7531\u80fd\u7684\u6838\u5fc3\u5173\u7cfb\u3002\u6574\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u7684\u57fa\u77f3\u662f\u4f5c\u7528\u91cf\u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u7684\u5185\u5728\u5bf9\u79f0\u6027\uff0c\u8fd9\u6b63\u662f\u5fae\u89c2\u53ef\u9006\u6027\u5728\u8def\u5f84\u5c42\u9762\u7684\u6df1\u523b\u4f53\u73b0\u3002</p> <p>\u4e3a\u6e05\u6670\u5730\u5c55\u793a\u63a8\u5bfc\uff0c\u8003\u8651\u4e00\u4e2a\u7531\u68af\u5ea6\u4e0b\u964d\u4e3b\u5bfc\u7684\u7cfb\u7edf\uff08\u5982\u6a21\u578bA\uff09\uff0c\u5176\u6f02\u79fb\u9879\u4e3a \\(A_\\alpha = -L (\\delta F / \\delta \\phi_\\alpha)\\)\u3002\u6839\u636e\u7b2c32\u8bb2\uff0c\u5176 J-D \u4f5c\u7528\u91cf\u4e3a\uff1a</p> \\[S[\\tilde{\\vec{\\phi}}, \\vec{\\phi}] = \\int_{\\vec{x}, t} \\left[ \\tilde{\\phi}_{\\alpha} \\left(\\partial_t \\phi_{\\alpha} + L\\frac{\\delta F}{\\delta \\phi_{\\alpha}} \\right) - \\frac{1}{2} \\tilde{\\phi}_{\\alpha} N_{\\alpha\\beta} \\tilde{\\phi}_{\\beta} \\right]\\] <p>\u6839\u636e\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u7684\u8981\u6c42\uff0c\u5728\u5e73\u8861\u6001\u4e0b\u566a\u58f0\u5f3a\u5ea6\u4e0e\u8017\u6563\u7cfb\u6570\u6ee1\u8db3\u7231\u56e0\u65af\u5766-\u6602\u8428\u683c\u5173\u7cfb \\(N_{\\alpha\\beta} = 2LT \\delta_{\\alpha\\beta}\\)\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#1","title":"\u6b65\u9aa4 1\uff1a\u54cd\u5e94\u573a\u53d8\u91cf\u4ee3\u6362\u2014\u2014\u5206\u79bb\u70ed\u529b\u5b66\u9879","text":"<p>\u7269\u7406\u52a8\u673a \uff1a\u7b2c\u4e00\u6b65\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u6570\u5b66\u6280\u5de7\uff0c\u4f46\u5176\u7269\u7406\u52a8\u673a\u975e\u5e38\u660e\u786e\uff1a\u91cd\u65b0\u7ec4\u7ec7\u4f5c\u7528\u91cf\uff0c\u5c06\u4e0e\u70ed\u529b\u5b66\u76f4\u63a5\u76f8\u5173\u7684\u91cf\uff08\u81ea\u7531\u80fd\u3001\u529f\uff09\u4ece\u590d\u6742\u7684\u52a8\u529b\u5b66\u9879\u4e2d\u663e\u5f0f\u5730\u5206\u79bb\u51fa\u6765 \u3002\u8fd9\u4e2a\u53d8\u6362\u7684\u8bbe\u8ba1\uff0c\u6b63\u662f\u4e3a\u4e86\u8ba9\u6700\u7ec8\u7ed3\u679c\u80fd\u4ee5\u4e00\u79cd\u6e05\u6670\u7684\u70ed\u529b\u5b66\u5f62\u5f0f\u5448\u73b0\u3002</p> <p>\u5b9a\u4e49\u65b0\u7684\u54cd\u5e94\u573a\u53d8\u91cf \\(\\bar{\\phi}_\\alpha\\)\uff1a</p> \\[\\bar{\\phi}_\\alpha(t) \\equiv -\\tilde{\\phi}_\\alpha(t) + \\frac{1}{T} \\frac{\\delta F}{\\delta \\phi_\\alpha(t)}\\] <p>\u8fd9\u4e2a\u53d8\u6362\u7684\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u4e3a1\uff0c\u56e0\u6b64\u8def\u5f84\u79ef\u5206\u7684\u6d4b\u5ea6\u4e0d\u53d8\u3002\u5c06 \\(\\tilde{\\phi}_\\alpha(t) = -\\bar{\\phi}_\\alpha(t) + \\frac{1}{T} \\frac{\\delta F}{\\delta \\phi_\\alpha(t)}\\) \u4ee3\u5165\u4f5c\u7528\u91cf \\(S\\) \u4e2d\uff0c\u5e76\u5229\u7528 \\(N=2LT\\)\uff0c\u7ecf\u8fc7\u4e00\u756a\u4ee3\u6570\u8fd0\u7b97\uff0c\u4f5c\u7528\u91cf\u53ef\u4ee5\u88ab\u7cbe\u786e\u5730\u5206\u89e3\u4e3a\uff1a</p> \\[S[\\tilde{\\vec{\\phi}}, \\vec{\\phi}] = \\int_{\\vec{x}, t} \\left[ \\bar{\\phi}_{\\alpha} \\left( -\\partial_t \\phi_{\\alpha} + L\\frac{\\delta F}{\\delta \\phi_{\\alpha}} - LT\\bar{\\phi}_{\\alpha} \\right) + \\frac{1}{T}\\frac{\\delta F}{\\delta \\phi_{\\alpha}} \\partial_t \\phi_{\\alpha} \\right]\\] <p>\u8fd9\u4e2a\u5f62\u5f0f\u4e2d\u7684\u6700\u540e\u4e00\u9879 \\(\\frac{1}{T}\\frac{\\delta F}{\\delta \\phi_{\\alpha}} \\partial_t \\phi_{\\alpha}\\) \u662f\u5206\u79bb\u70ed\u529b\u5b66\u91cf\u7684\u5173\u952e\u3002\u5229\u7528\u6cdb\u51fd\u7684\u94fe\u5f0f\u6cd5\u5219\uff0c\u81ea\u7531\u80fd \\(F[\\vec{\\phi}(t)]\\) \u6cbf\u4e00\u6761\u8f68\u8ff9\u5bf9\u65f6\u95f4\u7684\u5168\u5bfc\u6570\u4e3a\uff1a</p> \\[\\frac{dF[\\vec{\\phi}(t)]}{dt} = \\int d^dx \\frac{\\delta F}{\\delta \\phi_\\alpha}\\frac{\\partial \\phi_\\alpha}{\\partial t} + \\frac{\\partial F}{\\partial t}\\] <p>\u8fd9\u91cc\uff1a</p> <ul> <li> <p>\\(\\frac{dF}{dt}\\) \u662f\u6cbf\u7740\u5177\u4f53\u8f68\u8ff9 \\(\\vec{\\phi}(t)\\)\uff0c\u81ea\u7531\u80fd\u7684\u603b\u53d8\u5316\u7387\u3002</p> </li> <li> <p>\u7b2c\u4e00\u9879 \\(\\int d^dx \\dots\\) \u662f\u7531\u4e8e\u7cfb\u7edf\u5185\u90e8\u6784\u578b \\(\\vec{\\phi}\\) \u81ea\u8eab\u6f14\u5316\u6240\u5bfc\u81f4\u7684\u81ea\u7531\u80fd\u53d8\u5316\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u9879 \\(\\frac{\\partial F}{\\partial t}\\) \u5219\u662f\u7531\u4e8e\u5916\u90e8\u534f\u8bae \\(\\vec{h}(t)\\) \u6539\u53d8\u4e86\u80fd\u91cf\u666f\u89c2\u672c\u8eab\uff0c\u6240\u5bfc\u81f4\u7684\u81ea\u7531\u80fd\u7684\u663e\u5f0f\u65f6\u95f4\u4f9d\u8d56\u6027\u3002\u6839\u636e\u7b2c3\u8282\u7684\u5b9a\u4e49\uff0c\u8fd9\u4e00\u9879\u7684\u79ef\u5206\u6b63\u662f Jarzynski \u529f \\(W_J[\\vec{\\phi}]\\)\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0c\u6700\u540e\u4e00\u9879\u7684\u79ef\u5206\u53ef\u4ee5\u7cbe\u786e\u5730\u5199\u4e3a\uff1a</p> \\[ \\frac{1}{T} \\int_0^{t_f} dt \\int d^dx \\frac{\\delta F}{\\delta \\phi_\\alpha} \\partial_t \\phi_\\alpha =\\beta \\int_0^{t_f} dt \\left( \\frac{dF[\\vec{\\phi}]}{dt} - \\frac{\\partial F[\\vec{\\phi}]}{\\partial t} \\right) = \\beta \\left( (F_f[\\vec{\\phi}_f] - F_0[\\vec{\\phi}_0]) - W_J[\\vec{\\phi}] \\right) \\] <p>\u7269\u7406\u610f\u4e49 \uff1a\u8fd9\u4e00\u6b65\u4ee3\u6570\u53d8\u6362\u7684\u6df1\u523b\u7ed3\u679c\u662f\uff0c\u5b83\u5c06\u539f\u6765\u7684\u8def\u5f84\u6743\u91cd\u56e0\u5b50 \\(e^{-S}\\) \u8f6c\u6362\u4e3a\u4e86\u4e00\u4e2a\u65b0\u7684\u5f62\u5f0f\uff0c\u5176\u4e2d\u5305\u542b\u4e86 \\(e^{-\\beta (F_f - F_0 - W_J)}\\) \u8fd9\u4e00\u6838\u5fc3\u7684\u70ed\u529b\u5b66\u90e8\u5206\u3002\u6211\u4eec\u6210\u529f\u5730\u5728\u4f5c\u7528\u91cf\u5c42\u9762\u201c\u9884\u63d0\u53d6\u201d\u4e86\u6700\u7ec8\u7ed3\u679c\u4e2d\u9700\u8981\u7684\u7269\u7406\u91cf\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#2_1","title":"\u6b65\u9aa4 2\uff1a\u65f6\u95f4\u53cd\u6f14\u53d8\u6362\u2014\u2014\u8fd0\u7528\u6838\u5fc3\u5bf9\u79f0\u6027","text":"<p>\u7269\u7406\u52a8\u673a \uff1a\u7b2c\u4e8c\u6b65\u662f\u6574\u4e2a\u63a8\u5bfc\u7684\u7269\u7406\u6838\u5fc3\u3002\u901a\u8fc7\u5bf9\u8def\u5f84\u79ef\u5206\u53d8\u91cf\u6267\u884c\u65f6\u95f4\u53cd\u6f14\u64cd\u4f5c\uff0c\u6765\u8fd0\u7528\u7cfb\u7edf\u7684\u5fae\u89c2\u53ef\u9006\u6027\u8fd9\u4e00\u57fa\u672c\u5bf9\u79f0\u6027\u3002\u5176\u601d\u60f3\u662f\u6bd4\u8f83\u201c\u6b63\u5411\u64ad\u653e\u7684\u7535\u5f71\u201d\u548c\u201c\u5012\u5e26\u64ad\u653e\u7684\u7535\u5f71\u201d\u7684\u6982\u7387\u3002</p> <p>\u5b9a\u4e49\u65f6\u95f4\u53cd\u6f14\u540e\u7684\u8def\u5f84\u53d8\u91cf\u4e3a\uff1a</p> \\[(\\vec{\\phi}^R(t), \\bar{\\vec{\\phi}}^R(t)) \\equiv (\\vec{\\phi}(t_f - t), \\bar{\\vec{\\phi}}(t_f - t))\\] <p>\u540c\u65f6\uff0c\u5916\u90e8\u534f\u8bae\u4e5f\u8fdb\u884c\u76f8\u5e94\u7684\u65f6\u95f4\u53cd\u6f14\uff0c\u5373\u53cd\u5411\u534f\u8bae (reversed protocol) \uff1a\\(\\vec{h}^R(t) = \\vec{h}(t_f - t)\\)\u3002\u73b0\u5728\u8003\u5bdf\u4f5c\u7528\u91cf\u4e2d\u7684\u5173\u952e\u9879\u5728\u8fd9\u4e2a\u53d8\u6362\u4e0b\u7684\u884c\u4e3a\uff1a</p> <ul> <li> <p>\u65f6\u95f4\u5bfc\u6570\u9879 \uff1a\u5982\u8bfe\u7a0b\u677f\u4e66\u6240\u793a\uff0c\\(\\int dt \\, \\bar{\\phi}_{\\alpha} \\partial_t \\phi_{\\alpha}\\) \u8fd9\u4e00\u9879\u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u4f1a\u53cd\u53f7\u3002\u5b83\u4ee3\u8868\u4e86\u4f5c\u7528\u91cf\u4e2d\u4e0e\u65f6\u95f4\u6f14\u5316\u65b9\u5411\u76f4\u63a5\u76f8\u5173\u7684\u90e8\u5206\u3002</p> </li> <li> <p>\u529f\u9879 \uff1a\u9700\u8981\u5728\u53cd\u5411\u534f\u8bae \\(\\vec{h}^R(t)\\) \u4e0b\uff0c\u8ba1\u7b97\u6cbf\u7740\u53cd\u5411\u8def\u5f84 \\(\\vec{\\phi}^R(t)\\) \u6240\u505a\u7684\u529f\uff0c\u8bb0\u4e3a \\(W_J^R\\)\u3002\u901a\u8fc7\u53d8\u91cf\u4ee3\u6362 \\(\\tau = t_f - t\\) \u53ef\u4ee5\u4e25\u683c\u8bc1\u660e\uff1a</p> \\[W_J^R[\\vec{\\phi}^R] = -\\int_0^{t_f} dt \\int d^dx \\, \\vec{\\phi}^R(\\vec{x},t) \\cdot \\frac{\\partial \\vec{h}^R(\\vec{x},t)}{\\partial t} = - W_J[\\vec{\\phi}]\\] <p>\u7269\u7406\u610f\u4e49 \uff1a\u8fd9\u4e2a\u7ed3\u679c\u7684\u7269\u7406\u5185\u6db5\u662f\uff1a\u5728\u53cd\u5411\u534f\u8bae\u4e0b\u6cbf\u53cd\u5411\u8def\u5f84\u6240\u505a\u7684\u529f\uff0c\u6070\u597d\u662f\u6b63\u5411\u534f\u8bae\u4e0b\u6cbf\u6b63\u5411\u8def\u5f84\u6240\u505a\u529f\u7684\u76f8\u53cd\u6570\u3002</p> </li> </ul> <p>\u7ecf\u8fc7\u8fd9\u4e9b\u53d8\u6362\uff0c\u539f\u6765\u7684\u4f5c\u7528\u91cf \\(S\\) \u53d8\u6210\u4e86\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u91cf \\(S^R\\)\uff0c\u5176\u5f62\u5f0f\u4e0e\u539f\u4f5c\u7528\u91cf\u76f8\u4f3c\uff0c\u4f46\u63cf\u8ff0\u7684\u662f\u5728\u53cd\u5411\u534f\u8bae\u4e0b\u7684\u52a8\u529b\u5b66\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#3_1","title":"\u6b65\u9aa4 3\uff1a\u6574\u5408\u7ed3\u679c\u2014\u2014\u5bfc\u51fa\u666e\u9002\u5173\u7cfb","text":"<p>\u903b\u8f91\u6574\u5408 \uff1a\u73b0\u5728\uff0c\u5c06\u524d\u4e24\u6b65\u7684\u53d8\u6362\u7ed3\u679c\u6574\u5408\u5230\u53ef\u89c2\u6d4b\u91cf \\(\\langle O[\\vec{\\phi}] \\rangle\\) \u7684\u8def\u5f84\u79ef\u5206\u8868\u8fbe\u5f0f\u4e2d\u3002\u901a\u8fc7\u53d8\u91cf\u4ee3\u6362\u548c\u5229\u7528\u8def\u5f84\u79ef\u5206\u6d4b\u5ea6\u7684\u4e0d\u53d8\u6027\uff08\u96c5\u53ef\u6bd4\u884c\u5217\u5f0f\u4e3a1\uff09\uff0c\u53ef\u4ee5\u8bc1\u660e\u4e00\u4e2a\u6df1\u523b\u7684\u5bf9\u5076\u5173\u7cfb\uff1a</p> \\[\\langle O[\\vec{\\phi}] \\rangle = \\frac{Z_f(T)}{Z_0(T)} \\langle \\hat{O}[\\vec{\\phi}] e^{-\\beta W_J^R[\\vec{\\phi}]} \\rangle_R\\] <ul> <li> <p>\\(\\langle \\dots \\rangle_R\\) \u8868\u793a\u5728\u53cd\u5411\u534f\u8bae\u4e0b\uff0c\u4ece\u672b\u6001 \\(F_f\\) \u5bf9\u5e94\u7684\u5e73\u8861\u7cfb\u7efc\u5f00\u59cb\u7684\u7cfb\u7efc\u5e73\u5747\u3002</p> </li> <li> <p>\\(\\hat{O}[\\vec{\\phi}]\\) \u662f\u5728\u65f6\u95f4\u53cd\u6f14\u8def\u5f84\u4e0a\u8ba1\u7b97\u7684\u53ef\u89c2\u6d4b\u91cf\u3002</p> </li> <li> <p>\\(Z_f\\) \u548c \\(Z_0\\) \u5206\u522b\u662f\u4e0e\u672b\u6001\u5916\u573a \\(\\vec{h}(t_f)\\) \u548c\u521d\u6001\u5916\u573a \\(\\vec{h}(0)\\) \u5bf9\u5e94\u7684\u5e73\u8861\u914d\u5206\u51fd\u6570\u3002</p> </li> </ul> <p>\u6700\u540e\uff0c\u5229\u7528\u81ea\u7531\u80fd\u7684\u5b9a\u4e49 \\(\\Delta F = F_f - F_0 = -T \\ln(Z_f / Z_0)\\)\uff0c\u4ee5\u53ca\u6b65\u9aa42\u4e2d\u5bfc\u51fa\u7684\u5173\u7cfb \\(W_J^R = -W_J[\\vec{\\phi}]\\)\uff0c\u4fbf\u5f97\u5230\u4e86\u4e00\u4e2a\u666e\u9002\u7684\u6da8\u843d\u5173\u7cfb\u5f0f\uff1a</p> \\[\\langle O[\\vec{\\phi}] \\rangle = e^{-\\beta \\Delta F} \\langle \\hat{O}[\\vec{\\phi}] e^{\\beta W_J[\\vec{\\phi}]} \\rangle_R\\] <p>\u7269\u7406\u610f\u4e49\uff1a \u8fd9\u4e2a\u7ed3\u679c\u662f\u60ca\u4eba\u7684\u3002\u5b83\u8868\u660e\uff0c\u4e00\u4e2a\u5728\u6b63\u5411\u534f\u8bae\u4e0b\u6d4b\u91cf\u7684\u7269\u7406\u91cf\u7684\u5e73\u5747\u503c\uff08LHS\uff09\uff0c\u53ef\u4ee5\u88ab\u7cbe\u786e\u5730\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5728\u53cd\u5411\u534f\u8bae\u4e0b\u3001\u7531\u4e00\u4e2a\u6307\u6570\u529f\u56e0\u5b50 \\(e^{\\beta W_J}\\) \u52a0\u6743\u7684\u3001\u5bf9\u65f6\u95f4\u53cd\u6f14\u540e\u7684\u53ef\u89c2\u6d4b\u91cf\u8fdb\u884c\u7684\u5e73\u5747\uff08RHS\uff09\u3002</p> <p>\u8fd9\u4e2a\u5bf9\u5076\u5173\u7cfb\u662f\u5fae\u89c2\u53ef\u9006\u6027\u5728\u975e\u5e73\u8861\u8fc7\u7a0b\u4e2d\u7684\u76f4\u63a5\u4f53\u73b0\u3002\u5b8f\u89c2\u4e0a\u89c2\u5bdf\u5230\u7684\u4e0d\u53ef\u9006\u6027\uff08\u5982 \\(\\langle W \\rangle &gt; \\Delta F\\)\uff09\uff0c\u5e76\u975e\u6e90\u4e8e\u7269\u7406\u5b9a\u5f8b\u672c\u8eab\u4e0d\u6ee1\u8db3\u65f6\u95f4\u5bf9\u79f0\u6027\uff0c\u800c\u662f\u6e90\u4e8e\u8fc7\u7a0b\u7684\u8fb9\u754c\u6761\u4ef6\u4e0d\u5bf9\u79f0\uff1a\u4ece\u4e00\u4e2a\u7279\u5b9a\u7684\u5e73\u8861\u6001\u5f00\u59cb\uff0c\u7136\u540e\u8ba9\u65f6\u95f4\u5411\u524d\u6f14\u5316\u3002\u6da8\u843d\u5b9a\u7406\u6b63\u662f\u5bf9\u8fd9\u79cd\u8fb9\u754c\u6761\u4ef6\u4e0d\u5bf9-\u79f0\u6027\u6240\u4ea7\u751f\u7684\u7edf\u8ba1\u540e\u679c\u7684\u7cbe\u786e\u91cf\u5316\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#5-jarzynski","title":"5. Jarzynski \u529f\u5173\u7cfb","text":"<p>\u4e0a\u4e00\u8282\u63a8\u5bfc\u51fa\u7684\u666e\u9002\u6da8\u843d\u5173\u7cfb\u5f0f\uff0c\u662f\u8fde\u63a5\u6b63\u5411\u4e0e\u53cd\u5411\u975e\u5e73\u8861\u8fc7\u7a0b\u7684\u4e00\u5ea7\u666e\u9002\u6865\u6881\u3002\u73b0\u5728\uff0c\u5c06\u901a\u8fc7\u4e00\u4e2a\u6781\u4e3a\u7b80\u6d01\u800c\u5de7\u5999\u7684\u9009\u62e9\uff0c\u4ece\u8fd9\u5ea7\u6865\u6881\u4e2d\u63d0\u53d6\u51fa\u7b2c\u4e00\u4e2a\u91cc\u7a0b\u7891\u5f0f\u7684\u6210\u679c\u2014\u2014Jarzynski \u7b49\u5f0f (Jarzynski's Work Relation) \u3002</p> <p>Jarzynski \u7b49\u5f0f\u7531\u7269\u7406\u5b66\u5bb6 Christopher Jarzynski \u5728 1997 \u5e74\u63d0\u51fa\u3002\u5176\u6df1\u523b\u7684\u7269\u7406\u672c\u8d28\u5728\u4e8e\uff0c\u5b83\u5728\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u5b66\u548c\u5e73\u8861\u6001\u70ed\u529b\u5b66\u4e4b\u95f4\u5efa\u7acb\u4e86\u4e00\u5ea7\u7cbe\u786e\u7684\u6865\u6881\u3002\u8be5\u7b49\u5f0f\u6307\u51fa\uff0c\u5728\u4e00\u4e2a\u5c06\u7cfb\u7edf\u4ece\u4e00\u4e2a\u5e73\u8861\u6001\u9a71\u52a8\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u7684\u4efb\u610f\u975e\u5e73\u8861\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u6240\u505a\u529f \\(W\\) \u7684\u6307\u6570\u9879\u8fdb\u884c\u7684\u7cfb\u7efc\u5e73\u5747\uff0c\u7cbe\u786e\u5730\u7b49\u4e8e\u7cfb\u7edf\u59cb\u672b\u5e73\u8861\u6001\u4e4b\u95f4\u7684\u81ea\u7531\u80fd\u5dee \\(\\Delta F\\) \u6240\u5bf9\u5e94\u7684\u73bb\u5c14\u5179\u66fc\u56e0\u5b50\uff0c\u5373 \\(\\langle e^{-\\beta W} \\rangle = e^{-\\beta \\Delta F}\\)\u3002\u8fd9\u4e00\u5b9a\u7406\u662f\u5bf9\u4f20\u7edf\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u4e0d\u7b49\u5f0f (\\(\\langle W \\rangle \\ge \\Delta F\\)) \u7684\u60ca\u4eba\u5f3a\u5316\uff0c\u56e0\u4e3a\u5b83\u5c06\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u5177\u4f53\u52a8\u529b\u5b66\u8def\u5f84\u7684\u975e\u5e73\u8861\u5e73\u5747\u503c\uff0c\u4e0e\u4e00\u4e2a\u53ea\u53d6\u51b3\u4e8e\u5e73\u8861\u6001\u7684\u7eaf\u70ed\u529b\u5b66\u91cf\u7cbe\u786e\u5730\u8054\u7cfb\u8d77\u6765\u3002</p> <p>\u5728\u5177\u4f53\u5e94\u7528\u4e0a\uff0c\u8be5\u7b49\u5f0f\u5177\u6709\u9769\u547d\u6027\u610f\u4e49\uff0c\u5b83\u5141\u8bb8\u79d1\u5b66\u5bb6\u901a\u8fc7\u5feb\u901f\u3001\u4e0d\u53ef\u9006\u7684\u8ba1\u7b97\u673a\u6a21\u62df\u6216\u5355\u5206\u5b50\u5b9e\u9a8c\uff08\u5982\u7528\u5149\u954a\u62c9\u4f38RNA\u53d1\u5939\u6216\u86cb\u767d\u8d28\uff09\u6765\u7cbe\u786e\u8ba1\u7b97\u5e73\u8861\u6001\u7684\u81ea\u7531\u80fd\u5dee\uff0c\u8fd9\u5728\u4f20\u7edf\u51c6\u9759\u6001\u65b9\u6cd5\u96be\u4ee5\u5b9e\u73b0\u7684\u751f\u7269\u7269\u7406\u548c\u6750\u6599\u79d1\u5b66\u9886\u57df\u5c24\u4e3a\u91cd\u8981\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#51","title":"5.1 \u4ece\u666e\u9002\u5173\u7cfb\u5230\u7cbe\u786e\u7b49\u5f0f","text":"<p>\u56de\u987e\u4e0a\u4e00\u8282\u7684\u6700\u7ec8\u6210\u679c\uff0c\u5373\u666e\u9002\u7684\u5bf9\u5076\u5173\u7cfb\u5f0f\uff1a \\(\\(\\langle O[\\vec{\\phi}] \\rangle = e^{-\\beta \\Delta F} \\langle \\hat{O}[\\vec{\\phi}] e^{\\beta W_J[\\vec{\\phi}]} \\rangle_R\\)\\) \u8fd9\u4e2a\u5173\u7cfb\u5bf9\u4e8e\u4efb\u610f\u7684\u53ef\u89c2\u6d4b\u91cf \\(O[\\vec{\\phi}]\\) \u90fd\u6210\u7acb\u3002\u4e3a\u4e86\u5f97\u5230\u6700\u7b80\u6d01\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u9009\u62e9\u6700\u7b80\u5355\u7684\u53ef\u89c2\u6d4b\u91cf\uff0c\u5373\u6052\u7b49\u7b97\u7b26 \\(O[\\vec{\\phi}] = 1\\) \u3002</p> <p>\u5c06\u8fd9\u4e2a\u9009\u62e9\u4ee3\u5165\u666e\u9002\u5173\u7cfb\u4e2d\uff1a</p> <ul> <li> <p>\u5728\u7b49\u5f0f\u5de6\u8fb9\uff0c\u7531\u4e8e\u6982\u7387\u5f52\u4e00\u5316\uff0c\u4efb\u4f55\u91cf\u7684\u5e73\u5747\u503c \\(\\langle 1 \\rangle\\) \u90fd\u7b49\u4e8e 1\u3002</p> </li> <li> <p>\u5728\u7b49\u5f0f\u53f3\u8fb9\uff0c\u65f6\u95f4\u53cd\u6f14\u64cd\u4f5c\u4e0d\u6539\u53d8\u5e38\u6570\uff0c\u56e0\u6b64 \\(\\hat{1} = 1\\)\u3002</p> </li> </ul> <p>\u8fd9\u6837\uff0c\u666e\u9002\u5173\u7cfb\u7acb\u523b\u7b80\u5316\u4e3a\uff1a</p> \\[1 = e^{-\\beta \\Delta F} \\langle e^{\\beta W_J[\\vec{\\phi}]} \\rangle_R\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u5de6\u8fb9\u662f\u6b63\u5411\u8fc7\u7a0b\u7684\u5e73\u5747\uff08\u9690\u542b\u7684\uff09\uff0c\u53f3\u8fb9\u662f\u5728\u53cd\u5411\u534f\u8bae\u4e0b\u7684\u7cfb\u7efc\u5e73\u5747 \\(\\langle \\dots \\rangle_R\\)\u3002\u7136\u800c\uff0cJarzynski \u7b49\u5f0f\u7684\u6807\u51c6\u5f62\u5f0f\u662f\u5173\u4e8e\u6b63\u5411\u8fc7\u7a0b\u7684\u3002\u4e3a\u4e86\u5f97\u5230\u5b83\uff0c\u6211\u4eec\u8fd0\u7528\u4e00\u4e2a\u7b49\u4ef7\u7684\u63a8\u5bfc\uff1a\u5728\u666e\u9002\u5173\u7cfb\u4e2d\uff0c\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u4e0d\u540c\u7684\u53ef\u89c2\u6d4b\u91cf \\(O'[\\phi] = O[\\phi] e^{-\\beta W_J[\\phi]}\\)\u3002\u7ecf\u8fc7\u4ee3\u6570\u8fd0\u7b97\u53ef\u4ee5\u5f97\u5230\u53e6\u4e00\u4e2a\u7b49\u4ef7\u7684\u666e\u9002\u5173\u7cfb\uff1a\\(\\langle O[\\phi] e^{-\\beta W_J[\\phi]} \\rangle = e^{-\\beta \\Delta F} \\langle \\hat{O}[\\phi] \\rangle_R\\)\u3002</p> <p>\u73b0\u5728\uff0c\u518d\u6b21\u9009\u62e9 \\(O[\\vec{\\phi}] = 1\\) \u4ee3\u5165\u8fd9\u4e2a\u65b0\u5173\u7cfb\uff1a</p> \\[\\langle 1 \\cdot e^{-\\beta W_J[\\vec{\\phi}]} \\rangle = e^{-\\beta \\Delta F} \\langle \\hat{1} \\rangle_R\\] <p>[cite_start]\u7531\u4e8e \\(\\langle \\hat{1} \\rangle_R = 1\\)\uff0c\u6211\u4eec\u4fbf\u76f4\u63a5\u5f97\u5230\u4e86\u6700\u7ec8\u7684 Jarzynski \u7b49\u5f0f \uff1a</p> \\[\\langle e^{-\\beta W_J[\\vec{\\phi}]} \\rangle = e^{-\\beta \\Delta F}\\] <p>\u7269\u7406\u610f\u4e49\uff1a \u8fd9\u4e2a\u7b49\u5f0f\u662f\u968f\u673a\u70ed\u529b\u5b66\u4e2d\u6700\u8457\u540d\u7684\u7ed3\u679c\u4e4b\u4e00\uff0c\u5b83\u7684\u7269\u7406\u610f\u4e49\u6781\u4e3a\u6df1\u523b\uff1a</p> <p>\u8fde\u63a5\u975e\u5e73\u8861\u4e0e\u5e73\u8861 \uff1a\u7b49\u5f0f\u5de6\u8fb9\u662f\u4e00\u4e2a\u5728\u975e\u5e73\u8861\u8fc7\u7a0b\u4e2d\u5b9a\u4e49\u7684\u91cf\u2014\u2014\u5bf9\u529f\u7684\u6307\u6570\u8fdb\u884c\u7684\u7cfb\u7efc\u5e73\u5747\u3002\u8fd9\u4e2a\u5e73\u5747\u503c\u4f9d\u8d56\u4e8e\u6574\u4e2a\u8fc7\u7a0b\u7684\u52a8\u529b\u5b66\u7ec6\u8282\uff08\u5982\u62d6\u62fd\u901f\u5ea6\u3001\u8017\u6563\u7cfb\u6570\u7b49\uff09\u3002\u800c\u7b49\u5f0f\u53f3\u8fb9\u5219\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u5e73\u8861\u6001\u70ed\u529b\u5b66\u91cf\u2014\u2014\u4ec5\u7531\u59cb\u672b\u6001\u7684\u5e73\u8861\u81ea\u7531\u80fd\u5dee \\(\\Delta F\\) \u51b3\u5b9a \u3002Jarzynski \u7b49\u5f0f\u5728\u8fd9\u4e24\u8005\u4e4b\u95f4\u5efa\u7acb\u4e86\u4e00\u5ea7\u7cbe\u786e\u7684\u3001\u51fa\u4eba\u610f\u6599\u7684\u6865\u6881\u3002</p> <p>\u8ba1\u7b97\u81ea\u7531\u80fd\u7684\u65b0\u9014\u5f84 \uff1a\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u4ece\u975e\u5e73\u8861\u5b9e\u9a8c\u6216\u6a21\u62df\u4e2d\u8ba1\u7b97\u5e73\u8861\u81ea\u7531\u80fd\u5dee\u7684\u5f3a\u5927\u65b9\u6cd5 \u3002\u4f20\u7edf\u65b9\u6cd5\uff08\u5982\u70ed\u529b\u5b66\u79ef\u5206\uff09\u8981\u6c42\u8fc7\u7a0b\u5fc5\u987b\u662f\u51c6\u9759\u6001\u7684\uff0c\u8fd9\u5bf9\u4e8e\u590d\u6742\u7684\u751f\u7269\u5206\u5b50\u6216\u7f13\u6162\u7684\u73bb\u7483\u6001\u7cfb\u7edf\uff0c\u5728\u5b9e\u8df5\u4e2d\u5f80\u5f80\u96be\u4ee5\u5b9e\u73b0\u3002\u800c Jarzynski \u7b49\u5f0f\u8868\u660e\uff0c\u5373\u4f7f\u8fc7\u7a0b\u662f\u5feb\u901f\u548c\u9ad8\u5ea6\u4e0d\u53ef\u9006\u7684\uff0c\u53ea\u8981\u80fd\u5bf9\u8db3\u591f\u591a\u7684\u8f68\u8ff9\u8fdb\u884c\u529f\u7684\u6d4b\u91cf\uff0c\u5e76\u8ba1\u7b97\u5176\u6307\u6570\u5e73\u5747\uff08\u8fd9\u662f\u4e00\u4e2a\u975e\u7ebf\u6027\u7684\u5e73\u5747\uff0c\u4f1a\u6781\u5927\u5730\u52a0\u6743\u90a3\u4e9b\u7a00\u6709\u7684\u3001\u529f\u503c\u5c0f\u7684\u8f68\u8ff9\uff09\uff0c\u5c31\u80fd\u7cbe\u786e\u5730\u5f97\u5230\u5e73\u8861\u81ea\u7531\u80fd\u5dee \u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#52","title":"5.2 \u5bf9\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u7cbe\u5316","text":"<p>Jarzynski \u7b49\u5f0f\u4e0d\u4ec5\u4e0e\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u5b8c\u7f8e\u517c\u5bb9\uff0c\u66f4\u662f\u540e\u8005\u7684\u4e00\u4e2a\u6df1\u523b\u7cbe\u5316 (refinement) \u3002\u5229\u7528\u6570\u5b66\u4e2d\u7684\u7434\u751f\u4e0d\u7b49\u5f0f (Jensen's inequality) \uff0c\u5373\u5bf9\u4e8e\u4efb\u610f\u51f8\u51fd\u6570 \\(f(x)\\)\uff08\u5982 \\(f(x)=e^x\\)\uff09\uff0c\u6709 \\(\\langle f(x) \\rangle \\geq f(\\langle x \\rangle)\\)\u3002\u5c06\u6b64\u5e94\u7528\u4e8e Jarzynski \u7b49\u5f0f\uff1a</p> \\[\\langle e^{-\\beta W_J} \\rangle \\geq e^{\\langle -\\beta W_J \\rangle} = e^{-\\beta \\langle W_J \\rangle}\\] <p>\u5c06\u6b64\u4e0d\u7b49\u5f0f\u4e0e Jarzynski \u7b49\u5f0f\u672c\u8eab\u76f8\u7ed3\u5408\uff1a</p> \\[e^{-\\beta \\Delta F} = \\langle e^{-\\beta W_J} \\rangle \\geq e^{-\\beta \\langle W_J \\rangle}\\] <p>\u5bf9\u4e24\u8fb9\u53d6\u5bf9\u6570\u5e76\u4e58\u4ee5 \\(-T\\)\uff08\u8fd9\u4f1a\u53cd\u8f6c\u4e0d\u7b49\u53f7\uff09\uff0c\u4fbf\u6062\u590d\u4e86\u6211\u4eec\u719f\u6089\u7684\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u8868\u8ff0\uff1a</p> \\[\\langle W_J \\rangle \\geq \\Delta F\\] <p>\u7269\u7406\u610f\u4e49\uff1a \u8fd9\u4e2a\u63a8\u5bfc\u6e05\u6670\u5730\u8868\u660e\uff0cJarzynski \u7b49\u5f0f\u662f\u4e00\u4e2a\u6bd4\u7b2c\u4e8c\u5b9a\u5f8b\u66f4\u5f3a\u7684\u58f0\u660e\u3002</p> <p>\u7b2c\u4e8c\u5b9a\u5f8b\u53ea\u7ea6\u675f\u4e86\u529f\u7684\u5e73\u5747\u503c \uff0c\u5b83\u627f\u8ba4\u5728\u5355\u6b21\u5b9e\u9a8c\u4e2d\u529f \\(W_J\\) \u53ef\u80fd\u5c0f\u4e8e \\(\\Delta F\\)\uff08\u5373\u6240\u8c13\u7684\u77ac\u65f6\u201c\u8fdd\u80cc\u201d\u7b2c\u4e8c\u5b9a\u5f8b\uff09\uff0c\u4f46\u5bf9\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u7684\u6982\u7387\u4fdd\u6301\u6c89\u9ed8\u3002</p> <p>Jarzynski \u7b49\u5f0f\u5219\u5bf9\u529f\u7684\u6574\u4e2a\u6982\u7387\u5206\u5e03 \\(P(W_J)\\) \u65bd\u52a0\u4e86\u4e00\u4e2a\u7cbe\u786e\u7684\u79ef\u5206\u7ea6\u675f\u3002\u5b83\u8868\u660e\uff0c\u90a3\u4e9b \\(W_J &lt; \\Delta F\\) \u7684\u8f68\u8ff9\u786e\u5b9e\u4f1a\u53d1\u751f\uff0c\u4f46\u5b83\u4eec\u7684\u7edf\u8ba1\u6743\u91cd\u88ab\u6307\u6570\u7ea7\u5730\u6291\u5236\uff0c\u800c\u90a3\u4e9b \\(W_J &gt; \\Delta F\\) \u7684\u8017\u6563\u6027\u8f68\u8ff9\u5219\u8d21\u732e\u66f4\u5927\u3002\u6700\u7ec8\uff0c\u901a\u8fc7 \\(e^{-\\beta W_J}\\) \u8fd9\u4e00\u975e\u7ebf\u6027\u52a0\u6743\u5e73\u5747\uff0c\u6240\u6709\u6da8\u843d\u7684\u8d21\u732e\u88ab\u7cbe\u5999\u5730\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u4e0d\u591a\u4e0d\u5c11\uff0c\u6b63\u597d\u7b49\u4e8e\u5e73\u8861\u81ea\u7531\u80fd\u5dee\u6240\u5bf9\u5e94\u7684\u70ed\u529b\u5b66\u56e0\u5b50\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#6-i-jarzynski","title":"6. \u4ee3\u7801\u5b9e\u8df5 I \uff1a\u9a8c\u8bc1 Jarzynski \u7b49\u5f0f","text":"<p>\u4e0b\u9762\u5c06\u901a\u8fc7 Python \u4ee3\u7801\u6a21\u62df\u4e00\u4e2a\u7ecf\u5178\u7684\u975e\u5e73\u8861\u7269\u7406\u8fc7\u7a0b\u2014\u2014\u62d6\u62fd\u4e00\u4e2a\u5728\u8c10\u632f\u5b50\u52bf\u9631\u4e2d\u7684\u8fc7\u963b\u5c3c\u5e03\u6717\u7c92\u5b50\u2014\u2014\u6765\u6570\u503c\u9a8c\u8bc1 Jarzynski \u7b49\u5f0f\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#_2","title":"\u7269\u7406\u6a21\u578b","text":"<p>\u8003\u8651\u4e00\u4e2a\u4e00\u7ef4\u7684\u8fc7\u963b\u5c3c\u5e03\u6717\u7c92\u5b50\uff0c\u5176\u52a8\u529b\u5b66\u7531\u4ee5\u4e0b\u6717\u4e4b\u4e07\u65b9\u7a0b (Langevin equation) \u63cf\u8ff0\uff1a</p> \\[\\gamma \\frac{dx}{dt} = -\\frac{\\partial V(x,t)}{\\partial x} + \\eta(t)\\] <p>\u5176\u4e2d\uff1a</p> <ul> <li> <p>\\(x(t)\\) \u662f\u7c92\u5b50\u7684\u4f4d\u7f6e\u3002</p> </li> <li> <p>\\(\\gamma\\) \u662f\u6469\u64e6\u7cfb\u6570\u3002</p> </li> <li> <p>\\(V(x,t) = \\frac{1}{2} k (x - \\lambda(t))^2\\) \u662f\u4e00\u4e2a\u8c10\u632f\u5b50\u52bf\u9631\uff0c\u5176\u4e2d\u5fc3\u4f4d\u7f6e \\(\\lambda(t)\\) \u7531\u5916\u90e8\u534f\u8bae\u63a7\u5236\u3002\\(k\\) \u662f\u52bf\u9631\u7684\u52b2\u5ea6\u7cfb\u6570\u3002</p> </li> <li> <p>\\(\\eta(t)\\) \u662f\u9ad8\u65af\u767d\u566a\u58f0\uff0c\u4ee3\u8868\u6765\u81ea\u70ed\u6d74\u7684\u968f\u673a\u78b0\u649e\uff0c\u5176\u7edf\u8ba1\u6027\u8d28\u4e3a \\(\\langle \\eta(t) \\rangle = 0\\) \u548c \\(\\langle \\eta(t) \\eta(t') \\rangle = 2 \\gamma T \\delta(t - t')\\)\uff0c\u5176\u4e2d \\(T\\) \u662f\u6e29\u5ea6\u3002</p> </li> </ul> <p>\u975e\u5e73\u8861\u534f\u8bae\uff1a \u52bf\u9631\u4e2d\u5fc3 \\(\\lambda(t)\\) \u5728\u65f6\u95f4 \\(t=0\\) \u5230 \\(t=t_f\\) \u5185\u4ece\u521d\u59cb\u4f4d\u7f6e \\(\\lambda_0\\) \u7ebf\u6027\u5730\u79fb\u52a8\u5230\u6700\u7ec8\u4f4d\u7f6e \\(\\lambda_f\\)\uff1a</p> \\[\\lambda(t) = \\lambda_0 + (\\lambda_f - \\lambda_0) \\frac{t}{t_f}\\] <p>\u975e\u5e73\u8861\u529f\uff1a\u6839\u636e\u524d\u9762\u7684\u5b9a\u4e49\uff0c\u6cbf\u7740\u4e00\u6761\u8f68\u8ff9 \\(x(t)\\) \u6240\u505a\u7684\u529f\u4e3a\uff1a</p> \\[W_J = \\int_0^{t_f} \\frac{\\partial V(x(t),t)}{\\partial \\lambda} \\frac{d\\lambda}{dt} dt = \\int_0^{t_f} k (x(t) - \\lambda(t)) \\frac{d\\lambda}{dt} dt\\] <p>\u81ea\u7531\u80fd\u53d8\u5316\uff1a\u7531\u4e8e\u52bf\u9631\u7684\u5f62\u72b6\uff08\u7531 \\(k\\) \u51b3\u5b9a\uff09\u6ca1\u6709\u6539\u53d8\uff0c\u59cb\u672b\u6001\u7684\u5e73\u8861\u81ea\u7531\u80fd\u5dee\u4e3a \\(\\Delta F = 0\\)\u3002\u56e0\u6b64\uff0cJarzynski \u7b49\u5f0f\u9884\u6d4b \\(\\langle e^{-\\beta W_J} \\rangle = e^0 = 1\\)\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#python","title":"Python \u5b9e\u73b0","text":"<p>\u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528\u7b80\u5355\u7684\u6b27\u62c9-\u4e38\u5c71\u65b9\u6cd5 (Euler-Maruyama method) \u5bf9\u6717\u4e4b\u4e07\u65b9\u7a0b\u8fdb\u884c\u6570\u503c\u79ef\u5206\uff0c\u5e76\u8ba1\u7b97\u591a\u6761\u8f68\u8ff9\u7684\u529f\uff0c\u6700\u540e\u9a8c\u8bc1 Jarzynski \u7b49\u5f0f\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\nfrom matplotlib.gridspec import GridSpec\nfrom tqdm import tqdm # Import tqdm to show progress bar\n\n# --- 1. Physical Parameters ---\nk = 2.0\ngamma = 1.0\nT = 1.0\nbeta = 1.0 / T\n\n# --- 2. Simulation Parameters ---\ndt = 0.01\nt_f = 5.0\nnum_steps = int(t_f / dt)\nnum_trajectories = 2000\n\n# --- Optimization: Animation Parameters ---\nFRAMES = 100 # We only generate 100 animation frames\nTRAJ_PER_FRAME = num_trajectories // FRAMES # How many trajectories per frame\n\n# --- 3. Protocol Definition ---\nlambda_0 = 0.0\nlambda_f = 5.0\nv_lambda = (lambda_f - lambda_0) / t_f\n\n# --- 4. Initialize Data Storage ---\nwork_values = np.zeros(num_trajectories)\ntrajectories = np.zeros((num_trajectories, num_steps + 1))\ntime_array = np.linspace(0, t_f, num_steps + 1)\n\n# --- 5. Main Simulation Loop (Generate All Data) ---\nprint(\"Generating all trajectory data...\")\nfor i in tqdm(range(num_trajectories)): # Use tqdm to show progress\n    x = np.random.normal(loc=lambda_0, scale=np.sqrt(T / k))\n    trajectories[i, 0] = x\n    total_work = 0.0\n\n    for step in range(num_steps):\n        t = step * dt\n        lambda_t = lambda_0 + v_lambda * t\n\n        force_on_trap = k * (x - lambda_t)\n        dW = -force_on_trap * v_lambda * dt # Corrected work calculation\n        total_work += dW\n\n        force_on_particle = -k * (x - lambda_t)\n        noise_term = np.sqrt(2 * gamma * T * dt) * np.random.randn()\n        x += (force_on_particle / gamma) * dt + noise_term / gamma\n        trajectories[i, step + 1] = x\n\n    work_values[i] = total_work\n\n# Pre-calculate convergence process of Jarzynski average\njarzynski_averages = [np.mean(np.exp(-beta * work_values[:(i+1)*TRAJ_PER_FRAME])) for i in range(FRAMES)]\n\nprint(\"Data generation completed, creating animation...\")\n\n# --- 6. Create Visualization ---\nplt.style.use('dark_background')  # Set black background\nfig = plt.figure(figsize=(16, 9))\ngs = GridSpec(2, 2, figure=fig)\nax_physics = fig.add_subplot(gs[:, 0])\nax_hist = fig.add_subplot(gs[0, 1])\nax_conv = fig.add_subplot(gs[1, 1])\nfig.suptitle('Jarzynski Equality Dynamic Verification (Optimized Version)', fontsize=20, y=0.95)\n\n# Initialize plot elements for efficient updates\nline_traj, = ax_physics.plot([], [], 'r-', lw=1.5, alpha=0.8)\npoint_traj, = ax_physics.plot([], [], 'ro', markersize=8, label='Particle Trajectory')\nline_conv, = ax_conv.plot([], [], 'm-', lw=2)\n\n# --- 7. Animation Update Function (Optimized Version) ---\ndef update(frame):\n    # Calculate total number of trajectories for current frame\n    num_traj_so_far = (frame + 1) * TRAJ_PER_FRAME\n\n    # --- Update Panel 1: Physical Process (Show only the last trajectory of current batch) ---\n    ax_physics.clear() # Physics panel structure is complex, easier to clear\n    current_traj_index = num_traj_so_far - 1\n    current_traj = trajectories[current_traj_index, :]\n    ax_physics.plot(current_traj, time_array, 'r-', lw=1.5, alpha=0.8)\n    ax_physics.plot(current_traj[-1], time_array[-1], 'ro', markersize=8, label='Particle Trajectory')\n\n    x_range = np.linspace(-5, 10, 200)\n    ax_physics.plot(x_range, 0.5 * k * (x_range - lambda_0)**2, 'b--', alpha=0.5, label='Initial Potential Well')\n    ax_physics.plot(x_range, 0.5 * k * (x_range - lambda_f)**2, 'b-', alpha=0.8, label='Final Potential Well')\n    lambda_t_array = lambda_0 + v_lambda * time_array\n    ax_physics.plot(lambda_t_array, time_array, 'k--', lw=1, label='Trap Center Trajectory')\n\n    ax_physics.set_xlabel('Position x', fontsize=12)\n    ax_physics.set_ylabel('Time t', fontsize=12)\n    ax_physics.set_title(f'Physical Process: Trajectory #{num_traj_so_far}', fontsize=14)\n    ax_physics.set_xlim(-4, 10)\n    ax_physics.set_ylim(0, t_f)\n    ax_physics.legend(loc='upper left')\n    ax_physics.grid(True, linestyle=':')\n\n    # --- Update Panel 2: Work Distribution Histogram ---\n    ax_hist.clear()\n    current_works = work_values[:num_traj_so_far]\n    ax_hist.hist(current_works, bins=50, density=True, alpha=0.7, color='skyblue', range=(0, np.max(work_values)*1.1))\n    mean_work = np.mean(current_works)\n    ax_hist.axvline(mean_work, color='r', linestyle='--', lw=2, label=f'&lt;W&gt; = {mean_work:.2f}')\n    ax_hist.axvline(0, color='g', linestyle='-', lw=2, label='\u0394F = 0')\n    ax_hist.set_xlabel('Work W', fontsize=12)\n    ax_hist.set_ylabel('Probability Density P(W)', fontsize=12)\n    ax_hist.set_title('Non-equilibrium Work Distribution', fontsize=14)\n    ax_hist.legend()\n    ax_hist.grid(True, linestyle=':')\n\n    # --- Update Panel 3: Convergence of Jarzynski Average ---\n    ax_conv.clear()\n    traj_counts = np.arange(1, frame + 2) * TRAJ_PER_FRAME\n    ax_conv.plot(traj_counts, jarzynski_averages[:frame+1], 'm-', lw=2)\n    ax_conv.axhline(1.0, color='k', linestyle='--', lw=2, label='Theoretical Value exp(-\u03b2\u0394F) = 1')\n    ax_conv.set_xlabel('Number of Trajectories', fontsize=12)\n    ax_conv.set_ylabel(r'$\\langle e^{-\\beta W} \\rangle$', fontsize=14)\n    ax_conv.set_title('Convergence of Jarzynski Average', fontsize=14)\n    ax_conv.set_xscale('log')\n    ax_conv.legend(loc='upper right')\n    ax_conv.grid(True, which=\"both\", linestyle=':')\n    current_avg_val = jarzynski_averages[frame]\n    ax_conv.text(0.95, 0.05, f'Current Value: {current_avg_val:.4f}', \n                 transform=ax_conv.transAxes, ha='right', va='bottom',\n                 bbox=dict(boxstyle='round,pad=0.5', fc='wheat', alpha=0.7))\n\n    plt.tight_layout(rect=[0, 0.03, 1, 0.92])\n\n# --- 8. Create and Save Animation ---\n# Create a progress bar to show animation saving progress\nani_pbar = tqdm(total=FRAMES, desc=\"Rendering animation\")\nani = animation.FuncAnimation(fig, update, frames=FRAMES, interval=50, repeat=False)\nani.save('jarzynski_verification_optimized.gif', writer='pillow', fps=20, \n         progress_callback=lambda i, n: ani_pbar.update(1))\nani_pbar.close()\nplt.show()\nprint(\"Animation 'jarzynski_verification_optimized.gif' saved successfully!\")\n</code></pre> </p> <p>\u7269\u7406\u8fc7\u7a0b\uff1a\u5de6\u4fa7\u7684\u7269\u7406\u8fc7\u7a0b\u56fe\u663e\u793a\uff0c\u7c92\u5b50\u8f68\u8ff9\uff08\u7ea2\u8272\u5b9e\u7ebf\uff09\u603b\u662f\u6ede\u540e\u4e8e\u52bf\u9631\u4e2d\u5fc3\uff08\u84dd\u8272\u865a\u7ebf\u4ee3\u8868\u7684\u521d\u59cb/\u6700\u7ec8\u4f4d\u7f6e\u548c\u672a\u663e\u793a\u7684\u79fb\u52a8\u8f68\u8ff9\uff09\u3002\u8fd9\u6b63\u662f\u4ea7\u751f\u8017\u6563\u529f\u7684\u7269\u7406\u6765\u6e90\u3002</p> <p>\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u6210\u7acb \uff1a\u53f3\u4e0a\u65b9\u7684\u529f\u5206\u5e03\u56fe\u663e\u793a\uff0c\u5e73\u5747\u529f\\(&lt;W&gt;\\)\u8fdc\u5927\u4e8e\u81ea\u7531\u80fd\u5dee \\(\u0394F = 0\\)\u3002\u8fd9\u9a8c\u8bc1\u4e86\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b \\(\u27e8W\u27e9 \u2265 \u0394F\\)\u3002</p> <p>Jarzynski \u5e73\u5747\u503c\u7684\u6536\u655b \uff1a  Jarzynski \u7b49\u5f0f\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u7279\u5f81\uff1a\u5b83\u7684\u6536\u655b\u901f\u5ea6\u975e\u5e38\u7f13\u6162\uff0c\u5e76\u4e14\u53d7\u5230\u7a00\u6709\u4e8b\u4ef6\u7684\u5267\u70c8\u5f71\u54cd\u3002Jarzynski \u5e73\u5747\u503c\u662f \\(\u27e8e^{-\u03b2W}\u27e9\\)\uff0c\u4e00\u4e2a\u975e\u7ebf\u6027\u7684\u6307\u6570\u5e73\u5747\u3002\u8fd9\u4e2a\u5e73\u5747\u5bf9\u529f \\(W\\) \u503c\u5f88\u5c0f\u751a\u81f3\u4e3a\u8d1f\u7684\u8f68\u8ff9\uff08\u5373\u53f3\u4e0a\u56fe\u4e2d\u76f4\u65b9\u56fe\u6700\u5de6\u4fa7\u7684\u90a3\u4e9b\u4e8b\u4ef6\uff09\u6781\u5176\u654f\u611f\u3002\u8fd9\u4e9b\u662f\u201c\u5e78\u8fd0\u201d\u7684\u8f68\u8ff9\uff0c\u70ed\u6da8\u843d\u6070\u597d\u5e2e\u52a9\u7c92\u5b50\u8ddf\u4e0a\u4e86\u52bf\u9631\u7684\u79fb\u52a8\uff0c\u51cf\u5c11\u4e86\u8017\u6563\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u8f68\u8ff9\u975e\u5e38\u7a00\u5c11\u3002\u5728\u6709\u9650\u7684\u6a21\u62df\u6b21\u6570\uff08\u59821480\u6b21\uff09\u4e2d\uff0c\u5f88\u53ef\u80fd\u6ca1\u6709\u5145\u5206\u5730\u91c7\u6837\u5230\u8db3\u591f\u591a\u7684\u8fd9\u7c7b\u7a00\u6709\u4e8b\u4ef6\u3002\u56e0\u6b64\uff0c\u8ba1\u7b97\u51fa\u7684\u5e73\u5747\u503c\u4f1a\u5b58\u5728\u7edf\u8ba1\u504f\u5dee\uff0c\u901a\u5e38\u4f1a\u5c0f\u4e8e1\u3002\u56fe\u4e2d\u7d2b\u8272\u66f2\u7ebf\u7684\u5267\u70c8\u6ce2\u52a8\u6b63\u53cd\u6620\u4e86\u8fd9\u79cd\u5bf9\u7a00\u6709\u4e8b\u4ef6\u7684\u654f\u611f\u6027\u3002\u5982\u679c\u5c06\u6a21\u62df\u7684\u8f68\u8ff9\u6570\u91cf\u589e\u52a0\u523010000\u751a\u81f3\u66f4\u591a\uff0c\u4f1a\u770b\u5230\u8fd9\u4e2a\u503c\u4f1a\u66f4\u7a33\u5b9a\u5730\u63a5\u8fd1\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#7-crooks","title":"7. Crooks \u6da8\u843d\u5b9a\u7406\uff1a\u4e00\u4e2a\u66f4\u7cbe\u7ec6\u7684\u5bf9\u79f0\u6027","text":"<p>Jarzynski \u7b49\u5f0f\u662f\u5bf9\u975e\u5e73\u8861\u529f\u7684\u4e00\u4e2a\u79ef\u5206\u7ea6\u675f\uff0c\u5b83\u4f5c\u7528\u4e8e\u529f\u7684\u6307\u6570\u7684\u5e73\u5747\u503c\u3002\u7136\u800c\uff0c\u5b83\u6e90\u4e8e\u4e00\u4e2a\u66f4\u666e\u9002\u3001\u66f4\u7cbe\u7ec6\u7684\u5173\u7cfb\uff0c\u5373 Crooks \u6da8\u843d\u5b9a\u7406\u3002\u8be5\u5b9a\u7406\u4e0d\u5bf9\u5e73\u5747\u503c\u8fdb\u884c\u7ea6\u675f\uff0c\u800c\u662f\u76f4\u63a5\u5173\u8054\u4e86\u6b63\u5411\u548c\u53cd\u5411\u8fc7\u7a0b\u7684\u6574\u4e2a\u529f\u5206\u5e03\u51fd\u6570\u3002</p> <p>Crooks \u6da8\u843d\u5b9a\u7406\u7531 Gavin E. Crooks \u57281999 \u5e74\u4f5c\u4e3a Jarzynski \u7b49\u5f0f\u7684\u63a8\u5e7f\u548c\u7cbe\u5316\u800c\u63d0\u51fa\u3002\u5b83\u7684\u7269\u7406\u672c\u8d28\u662f\u4e00\u79cd\u66f4\u4e3a\u7cbe\u7ec6\u548c\u5f3a\u529b\u7684\u5bf9\u79f0\u6027\u5173\u7cfb\uff0c\u5b83\u4e0d\u518d\u5c40\u9650\u4e8e\u5bf9\u529f\u7684\u67d0\u4e2a\u5e73\u5747\u503c\u8fdb\u884c\u7ea6\u675f\uff0c\u800c\u662f\u76f4\u63a5\u5173\u8054\u4e86\u6b63\u5411\u8fc7\u7a0b\u548c\u53cd\u5411\u8fc7\u7a0b\u7684\u6574\u4e2a\u529f\u7684\u6982\u7387\u5206\u5e03\u51fd\u6570\u3002\u8be5\u5b9a\u7406\u6307\u51fa\uff0c\u5728\u6b63\u5411\u8fc7\u7a0b\u4e2d\u505a\u51fa\u529f \\(W\\) \u7684\u6982\u7387 \\(P(W)\\)\uff0c\u4e0e\u5728\u53cd\u5411\u534f\u8bae\u4e0b\u505a\u51fa\u529f \\(-W\\) \u7684\u6982\u7387 \\(\\tilde{p}(-W)\\) \u4e4b\u6bd4\uff0c\u7531\u4e00\u4e2a\u7b80\u5355\u7684\u6307\u6570\u5173\u7cfb\u51b3\u5b9a\uff1a\\(P(W)/\\tilde{p}(-W) = e^{\\beta (W - \\Delta F)}\\)\u3002\u8fd9\u4e2a\u5173\u7cfb\u5b9a\u91cf\u5730\u89e3\u91ca\u4e86\u77ac\u65f6\u201c\u8fdd\u80cc\u201d\u7b2c\u4e8c\u5b9a\u5f8b\uff08\u5373 \\(W &lt; \\Delta F\\)\uff09\u7684\u4e8b\u4ef6\u662f\u4f55\u7b49\u7a00\u5c11\uff0c\u5e76\u63ed\u793a\u4e86\u975e\u5e73\u8861\u6da8\u843d\u4e2d\u6df1\u523b\u7684\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u3002</p> <p>\u5728\u5177\u4f53\u5e94\u7528\u4e2d\uff0cCrooks \u5b9a\u7406\u63d0\u4f9b\u4e86\u4e00\u79cd\u6bd4 Jarzynski \u7b49\u5f0f\u5728\u6570\u503c\u4e0a\u66f4\u7a33\u5065\u3001\u66f4\u53ef\u9760\u7684\u81ea\u7531\u80fd\u8ba1\u7b97\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u901a\u8fc7\u5bfb\u627e\u6b63\u5411\u548c\u53cd\u5411\u529f\u5206\u5e03\u66f2\u7ebf\u7684\u4ea4\u70b9\u6765\u76f4\u63a5\u786e\u5b9a \\(\\Delta F\\)\u3002\u8fd9\u4e00\u201c\u4ea4\u70b9\u6cd5\u201d\u5df2\u6210\u4e3a\u5206\u6790\u5355\u5206\u5b50\u529b\u8c31\u5b9e\u9a8c\uff08\u5982RNA\u6298\u53e0/\u89e3\u6298\u53e0\uff09\u548c\u8ba1\u7b97\u6a21\u62df\u6570\u636e\u7684\u6807\u51c6\u5de5\u5177\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#71","title":"7.1 \u5b9a\u7406\u7684\u63a8\u5bfc\u4e0e\u5f62\u5f0f","text":"<p>Crooks \u5b9a\u7406\u53ef\u4ee5\u4ece\u7b2c4\u8282\u7684\u666e\u9002\u5173\u7cfb\u5f0f\u4e2d\u63a8\u5bfc\u51fa\u6765\u3002\u901a\u8fc7\u9009\u62e9\u4e00\u4e2a\u7279\u6b8a\u7684\u53ef\u89c2\u6d4b\u91cf \\(O[\\vec{\\phi}] = \\delta(W - W_J[\\vec{\\phi}])\\)\uff0c\u8fd9\u4e2a\u9009\u62e9\u76f8\u5f53\u4e8e\u5728\u8def\u5f84\u79ef\u5206\u4e2d\u53ea\u7b5b\u9009\u51fa\u6240\u6709\u529f\u503c\u6070\u597d\u4e3a \\(W\\) \u7684\u8f68\u8ff9\u3002\u7ecf\u8fc7\u63a8\u5bfc\uff0c\u53ef\u4ee5\u5f97\u5230\u6b63\u5411\u8fc7\u7a0b\u7684\u529f\u5206\u5e03 \\(P(W_J)\\) \u4e0e\u53cd\u5411\u8fc7\u7a0b\u7684\u529f\u5206\u5e03 \\(P_R(-W_J)\\) \u4e4b\u95f4\u7684\u5173\u7cfb\uff1a</p> \\[\\frac{P(W_J)}{P_R(-W_J)} = e^{\\beta (W_J - \\Delta F)}\\] <ul> <li> <p>\\(P(W_J)\\) \u662f\u5728\u6b63\u5411\u534f\u8bae\u4e0b\uff0c\u6d4b\u5f97\u505a\u529f\u4e3a \\(W_J\\) \u7684\u6982\u7387\u5bc6\u5ea6\u3002</p> </li> <li> <p>\\(P_R(-W_J)\\) \u662f\u5728\u53cd\u5411\u534f\u8bae\u4e0b\uff0c\u6d4b\u5f97\u505a\u529f\u4e3a \\(-W_J\\) \u7684\u6982\u7387\u5bc6\u5ea6\u3002</p> </li> </ul> <p>\u8fd9\u4e2a\u5b9a\u7406\u7684\u7269\u7406\u5185\u6db5\u6bd4 Jarzynski \u7b49\u5f0f\u66f4\u4e3a\u4e30\u5bcc\u548c\u6df1\u523b\uff1a</p> <ul> <li> <p>\u7cbe\u7ec6\u7684\u5bf9\u79f0\u6027 (Detailed Symmetry) \uff1a\u5b83\u63ed\u793a\u4e86\u975e\u5e73\u8861\u6da8\u843d\u4e2d\u4e00\u79cd\u6df1\u523b\u7684\u5bf9\u79f0\u6027\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u201c\u529f\u7a7a\u95f4\u201d\u4e2d\u7684\u4e00\u79cd\u201c\u7ec6\u81f4\u5e73\u8861\u201d\u3002\u5b83\u7cbe\u786e\u5730\u91cf\u5316\u4e86\u5728\u6b63\u5411\u8fc7\u7a0b\u4e2d\u89c2\u5bdf\u5230\u4e00\u4e2a\u7279\u5b9a\u529f\u503c \\(W_J\\) \u7684\u6982\u7387\uff0c\u4e0e\u5728\u53cd\u5411\u8fc7\u7a0b\u4e2d\u89c2\u5bdf\u5230\u201c\u76f8\u53cd\u201d\u529f\u503c \\(-W_J\\) \u7684\u6982\u7387\u4e4b\u6bd4\u3002</p> </li> <li> <p>\u91cf\u5316\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u201c\u8fdd\u80cc\u201d \uff1a\u5f53\u4e00\u6761\u8f68\u8ff9\u7684\u529f \\(W_J &lt; \\Delta F\\) \u65f6\uff0c\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u5bf9\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u77ac\u65f6\u201c\u8fdd\u80cc\u201d\u3002Crooks \u5b9a\u7406\u7cbe\u786e\u5730\u544a\u8bc9\u6211\u4eec\u8fd9\u79cd\u4e8b\u4ef6\u7684\u7a00\u6709\u7a0b\u5ea6\u3002\u5c06\u516c\u5f0f\u91cd\u5199\u4e3a \\(P(W_J) / P_R(-W_J) = e^{\\beta (W_J - \\Delta F)}\\)\uff0c\u5f53 \\(W_J &lt; \\Delta F\\) \u65f6\uff0c\u6307\u6570\u9879\u4e3a\u8d1f\uff0c\u8fd9\u610f\u5473\u7740 \\(P(W_J)\\) \u76f8\u5bf9\u4e8e\u5728\u53cd\u5411\u8fc7\u7a0b\u4e2d\u53d1\u751f\u76f8\u5e94\u8017\u6563\u4e8b\u4ef6\uff08\u529f\u4e3a \\(-W_J &gt; -\\Delta F\\)\uff09\u7684\u6982\u7387 \\(P_R(-W_J)\\) \u800c\u8a00\uff0c\u662f\u6307\u6570\u7ea7\u7a00\u5c11\u7684 \u3002</p> </li> </ul> <p>\u81ea\u7531\u80fd\u7684\u51e0\u4f55\u89e3\u91ca \uff1a\u5c06\u5b9a\u7406\u65b9\u7a0b\u4e24\u8fb9\u53d6\u5bf9\u6570\uff0c\u5f97\u5230\uff1a     \\(\\(\\ln \\frac{P(W_J)}{P_R(-W_J)} = \\beta (W_J - \\Delta F)\\)\\)</p> <p>\u8fd9\u4e2a\u5f62\u5f0f\u63ed\u793a\u4e86\u4e00\u4e2a\u60ca\u4eba\u7684\u7ebf\u6027\u5173\u7cfb\u3002\u5b83\u8868\u660e\uff0c\u5982\u679c\u5c06\u4e24\u4e2a\u529f\u5206\u5e03\u7684\u5bf9\u6570\u6bd4\u7387 \\(\\ln(P/P_R)\\) \u4f5c\u4e3a y \u8f74\uff0c\u529f \\(W_J\\) \u4f5c\u4e3a x \u8f74\u4f5c\u56fe\uff0c\u5f97\u5230\u7684\u6570\u636e\u70b9\u5e94\u8be5\u843d\u5728\u4e00\u6761\u659c\u7387\u4e3a \\(\\beta=1/T\\)\uff0c\u4e14\u4e0e x \u8f74\u4ea4\u70b9\u6070\u597d\u4e3a \\(\\Delta F\\) \u7684\u76f4\u7ebf\u4e0a\u3002\u8fd9\u4e3a\u901a\u8fc7\u5b9e\u9a8c\u6216\u6a21\u62df\u6570\u636e\u7cbe\u786e\u786e\u5b9a\u81ea\u7531\u80fd\u5dee\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u6781\u5176\u5f3a\u5927\u548c\u76f4\u89c2\u7684\u51e0\u4f55\u65b9\u6cd5\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#72-crooks-jarzynski","title":"7.2 Crooks \u5b9a\u7406\u8574\u542b Jarzynski \u7b49\u5f0f","text":"<p>Crooks \u5b9a\u7406\u662f\u4e00\u4e2a\u6bd4 Jarzynski \u7b49\u5f0f\u66f4\u5f3a\u7684\u7ed3\u8bba\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9 Crooks \u5b9a\u7406\u8fdb\u884c\u79ef\u5206\u6765\u91cd\u65b0\u63a8\u5bfc\u51fa Jarzynski \u7b49\u5f0f\uff0c\u8bc1\u660e\u8fd9\u4e00\u70b9\uff1a</p> <ol> <li> <p>\u4ece Crooks \u5b9a\u7406\u51fa\u53d1\uff1a\\(P(W_J) = P_R(-W_J) e^{\\beta (W_J - \\Delta F)}\\)</p> </li> <li> <p>\u8ba1\u7b97 Jarzynski \u5e73\u5747\u503c\uff1a     \\(\\(\\langle e^{-\\beta W_J} \\rangle \\equiv \\int dW_J \\, P(W_J) e^{-\\beta W_J}\\)\\)</p> </li> <li> <p>\u4ee3\u5165 \\(P(W_J)\\) \u7684\u8868\u8fbe\u5f0f\uff1a     \\(\\(\\langle e^{-\\beta W_J} \\rangle = \\int dW_J \\, P_R(-W_J) e^{\\beta (W_J - \\Delta F)} e^{-\\beta W_J}\\)\\)</p> </li> <li> <p>\u5316\u7b80\u6307\u6570\u9879\uff1a     \\(\\(\\langle e^{-\\beta W_J} \\rangle = \\int dW_J \\, P_R(-W_J) e^{-\\beta \\Delta F} = e^{-\\beta \\Delta F} \\int dW_J \\, P_R(-W_J)\\)\\)</p> </li> <li> <p>\u7531\u4e8e \\(P_R\\) \u662f\u4e00\u4e2a\u5f52\u4e00\u5316\u7684\u6982\u7387\u5206\u5e03\uff0c\u5176\u79ef\u5206\u4e3a1\uff1a     \\(\\(\\int dW_J \\, P_R(-W_J) = 1\\)\\)</p> </li> <li> <p>\u6700\u7ec8\u5f97\u5230 Jarzynski \u7b49\u5f0f\uff1a     \\(\\(\\langle e^{-\\beta W_J} \\rangle = e^{-\\beta \\Delta F}\\)\\)</p> </li> </ol> <p>\u8fd9\u4e2a\u63a8\u5bfc\u6e05\u6670\u5730\u8868\u660e\uff0cJarzynski \u7b49\u5f0f\u662f Crooks \u5b9a\u7406\u5728\u79ef\u5206\u5c42\u9762\u4e0a\u7684\u4e00\u4e2a\u76f4\u63a5\u63a8\u8bba\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#8-crooks","title":"8.\u4ee3\u7801\u5b9e\u8df5 || \uff1a\u53ef\u89c6\u5316 Crooks \u5b9a\u7406","text":"<p>\u4e3a\u4e86\u76f4\u89c2\u5730\u7406\u89e3\u548c\u9a8c\u8bc1 Crooks \u5b9a\u7406\uff0c\u53ef\u4ee5\u6269\u5c55\u4e4b\u524d\u7684 Python \u6a21\u62df\uff0c\u52a0\u5165\u5bf9\u53cd\u5411\u534f\u8bae\u7684\u6a21\u62df\uff0c\u5e76\u4ee5\u4e24\u79cd\u65b9\u5f0f\u6bd4\u8f83\u6b63\u53cd\u5411\u8fc7\u7a0b\u7684\u529f\u5206\u5e03\u3002</p> <p>\u5728\u4e4b\u524d\u7684\u4ee3\u7801\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e00\u4e2a\u6a21\u62df\u53cd\u5411\u8fc7\u7a0b\u7684\u5faa\u73af\uff0c\u5e76\u7ed8\u5236\u4e24\u4e2a\u9a8c\u8bc1\u56fe\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# --- 1. Parameter settings (same as before) ---\nk = 2.0; gamma = 1.0; T = 1.0; beta = 1.0 / T\ndt = 0.01; t_f = 5.0; num_steps = int(t_f / dt)\nnum_trajectories = 20000 # Increase trajectory count for smoother distribution\n\n# --- 2. Forward protocol simulation ---\nlambda_0_fwd = 0.0; lambda_f_fwd = 5.0\nv_lambda_fwd = (lambda_f_fwd - lambda_0_fwd) / t_f\nwork_forward = np.zeros(num_trajectories)\n\nprint(\"Simulating forward protocol...\")\nfor i in range(num_trajectories):\n    x = np.random.normal(loc=lambda_0_fwd, scale=np.sqrt(T / k))\n    total_work = 0.0\n    for step in range(num_steps):\n        t = step * dt\n        lambda_t = lambda_0_fwd + v_lambda_fwd * t\n        force_lambda = k * (x - lambda_t)\n        # Key correction: definition of work\n        dW = -force_lambda * (v_lambda_fwd * dt)\n        total_work += dW\n        force_x = -k * (x - lambda_t)\n        noise_term = np.sqrt(2 * gamma * T * dt) * np.random.randn()\n        x += (force_x / gamma) * dt + noise_term / gamma\n    work_forward[i] = total_work\n\n# --- 3. Reverse protocol simulation ---\nlambda_0_rev = lambda_f_fwd; lambda_f_rev = lambda_0_fwd\nv_lambda_rev = (lambda_f_rev - lambda_0_rev) / t_f # Velocity is negative\nwork_reverse = np.zeros(num_trajectories)\n\nprint(\"Simulating reverse protocol...\")\nfor i in range(num_trajectories):\n    x = np.random.normal(loc=lambda_0_rev, scale=np.sqrt(T / k))\n    total_work = 0.0\n    for step in range(num_steps):\n        t = step * dt\n        lambda_t = lambda_0_rev + v_lambda_rev * t\n        force_lambda = k * (x - lambda_t)\n        # Key correction: definition of work\n        dW = -force_lambda * (v_lambda_rev * dt)\n        total_work += dW\n        force_x = -k * (x - lambda_t)\n        noise_term = np.sqrt(2 * gamma * T * dt) * np.random.randn()\n        x += (force_x / gamma) * dt + noise_term / gamma\n    work_reverse[i] = total_work\n\n# --- 4. Visualizing Crooks Theorem ---\nplt.style.use('dark_background')\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(16, 7))\nfig.suptitle('Numerical Verification of Crooks Fluctuation Theorem', fontsize=18)\n\n# --- Figure 1: Intersection point of work distributions ---\ndelta_F = 0.0\nbins = np.linspace(-15, 40, 75)\nax1.hist(work_forward, bins=bins, density=True, alpha=0.7, label=r'Forward work distribution $P(W)$')\n# Plot distribution of negative reverse work P_R(-W)\nax1.hist(-work_reverse, bins=bins, density=True, alpha=0.7, label=r'Reverse work distribution $P_R(-W)$')\nax1.axvline(delta_F, color='red', linestyle='--', linewidth=2, label=f'\u0394F = {delta_F:.1f}')\nax1.set_xlabel('Work W', fontsize=12)\nax1.set_ylabel('Probability Density', fontsize=12)\nax1.set_title('Verification Method 1: Work Distributions Intersect at \u0394F', fontsize=14)\nax1.legend()\n\n# --- Figure 2: Linear relationship of logarithmic probability ratio ---\n# Calculate histogram data\nhist_fwd, bin_edges = np.histogram(work_forward, bins=bins, density=True)\nhist_rev, _ = np.histogram(-work_reverse, bins=bins, density=True)\nbin_centers = (bin_edges[:-1] + bin_edges[1:]) / 2\n\n# Avoid division by zero, only select regions where both distributions are non-zero\nmask = (hist_fwd &gt; 1e-4) &amp; (hist_rev &gt; 1e-4)\nlog_ratio = np.log(hist_fwd[mask] / hist_rev[mask])\nwork_vals = bin_centers[mask]\n\n# Plot scatter diagram\nax2.scatter(work_vals, log_ratio, alpha=0.8, label='Simulation data (ln[P(W)/P_R(-W)])')\n\n# Plot theoretical prediction line\nw_theory = np.linspace(np.min(work_vals), np.max(work_vals), 100)\nlog_ratio_theory = beta * (w_theory - delta_F)\nax2.plot(w_theory, log_ratio_theory, 'r-', lw=3, label=f'Theoretical prediction: Slope \u03b2={beta:.1f}')\n\nax2.set_xlabel('Work W', fontsize=12)\nax2.set_ylabel(r'$\\ln[P(W) / P_R(-W)]$', fontsize=14)\nax2.set_title('Verification Method 2: Linear Relationship of Log Probability Ratio', fontsize=14)\nax2.legend()\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code></pre> <p></p> <p>\u5de6\u56fe\u5c55\u793a\u4e86\u6b63\u5411\u529f\u5206\u5e03 \\(P(W)\\)\uff08\u84dd\u8272\uff09\u548c\u53cd\u5411\u529f\u7684\u76f8\u53cd\u6570\u5206\u5e03 \\(P_R(-W)\\)\uff08\u6a59\u8272\uff09\u3002\u6b63\u5411\u8fc7\u7a0b\u5e73\u5747\u662f\u8017\u6563\u7684\uff0c\u6240\u4ee5 \\(P(W)\\) \u7684\u5cf0\u503c\u5728\u6b63\u529f\u533a\u57df\u3002\u53cd\u5411\u8fc7\u7a0b\u5e73\u5747\u4e5f\u662f\u8017\u6563\u7684\uff08\\(W_R &gt; \\Delta F_{rev} = -\\Delta F = 0\\)\uff09\uff0c\u6240\u4ee5 \\(-W_R\\) predominantly \u662f\u8d1f\u7684\uff0c\u5176\u5206\u5e03 \\(P_R(-W)\\) \u7684\u5cf0\u503c\u5728\u8d1f\u529f\u533a\u57df\u3002\u6700\u5173\u952e\u7684\u7279\u5f81\u662f\u4e24\u4e2a\u5206\u5e03\u7684\u4ea4\u70b9\u3002\u6839\u636e Crooks \u5b9a\u7406\uff0c\u8fd9\u4e2a\u4ea4\u70b9\u5e94\u8be5\u7cbe\u786e\u5730\u4f4d\u4e8e \\(W = \\Delta F\\) \u5904\u3002\u5728\u6a21\u62df\u4e2d\uff0c\u7531\u4e8e \\(\\Delta F = 0\\)\uff0c\u4e24\u4e2a\u76f4\u65b9\u56fe\u7684\u66f2\u7ebf\u5728 \\(W = 0\\) \u7684\u7ea2\u8272\u865a\u7ebf\u5904\u76f8\u4ea4\u3002</p> <p>\u53f3\u56fe\u63d0\u4f9b\u4e86\u66f4\u4e25\u683c\u3001\u66f4\u5b9a\u91cf\u7684\u9a8c\u8bc1\u3002\u5b83\u76f4\u63a5\u6d4b\u8bd5\u4e86 $$   \\ln\\left[\\frac{P(W)}{P_R(-W)}\\right] = \\beta (W - \\Delta F) $$ \u8fd9\u4e2a\u7ebf\u6027\u5173\u7cfb\u3002\u6a21\u62df\u6570\u636e\u70b9\uff08\u84dd\u8272\u6563\u70b9\uff09\u6e05\u6670\u5730\u843d\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff0c\u4e0e\u7406\u8bba\u9884\u6d4b\u7684\u7ea2\u7ebf\u9ad8\u5ea6\u543b\u5408\u3002\u8fd9\u6761\u76f4\u7ebf\u7684\u659c\u7387\u6b63\u662f \\(\\beta = 1/T = 1.0\\)\uff0cx\u8f74\u622a\u8ddd\u4e5f\u7cbe\u786e\u5730\u4f4d\u4e8e \\(\\Delta F = 0\\) \u5904\u3002</p>"},{"location":"zh/notes/33.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E5%8A%9F%E4%B8%8E%E6%B6%A8%E8%90%BD%E5%AE%9A%E7%90%86/#_3","title":"\u7ed3\u8bba","text":"<p>\u5728\u8fd9\u8282\u8bfe\u7684\u7ed3\u5c3e\uff0cErwin Frey \u6559\u6388\u63a8\u8350\u4e86\u4e00\u7bc7\u8be5\u9886\u57df\u7684\u6743\u5a01\u7efc\u8ff0\u6587\u7ae0\uff1a</p> <p>Seifert U. Stochastic thermodynamics, fluctuation theorems and molecular machines[J]. Reports on progress in physics, 2012, 75(12): 126001.</p> <p>\u8fd9\u7bc7\u7efc\u8ff0\u7cfb\u7edf\u6027\u5730\u6784\u5efa\u4e86\u968f\u673a\u70ed\u529b\u5b66 (Stochastic Thermodynamics) \u7684\u7406\u8bba\u6846\u67b6\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u7ecf\u5178\u70ed\u529b\u5b66\u7684\u5b8f\u89c2\u6982\u5ff5\uff0c\u5982\u529f\u3001\u70ed\u548c\u71b5\u4ea7\u751f\uff0c\u6210\u529f\u5730\u6269\u5c55\u5230\u4e86\u5355\u4e2a\u5fae\u89c2\u968f\u673a\u8f68\u8ff9\u7684\u5c42\u9762\u3002\u5bf9\u4e8e\u4e00\u4e2a\u4e0e\u6052\u6e29\u70ed\u5e93\u8026\u5408\u7684\u975e\u5e73\u8861\u7cfb\u7edf\uff08\u65e0\u8bba\u662f\u7528\u6717\u4e4b\u4e07\u65b9\u7a0b\u63cf\u8ff0\u7684\u8fde\u7eed\u7cfb\u7edf\uff0c\u8fd8\u662f\u7528\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u7684\u79bb\u6563\u7cfb\u7edf\uff09\uff0c\u5982\u4f55\u5728\u5355\u6761\u6da8\u843d\u8f68\u8ff9\u4e0a\u5efa\u7acb\u7b2c\u4e00\u5b9a\u5f8b\u822c\u7684\u80fd\u91cf\u5e73\u8861\u5173\u7cfb\u3002\u6587\u7ae0\u5c55\u793a\u4e86\u5982\u4f55\u4ece\u4e00\u4e2a\u201c\u4e3b\u5b9a\u7406\u201d (master theorem) \u51fa\u53d1\uff0c\u4ee5\u4e00\u79cd\u7edf\u4e00\u7684\u65b9\u5f0f\u63a8\u5bfc\u51fa\u8fd9\u8282\u8bfe\u5b66\u4e60\u7684 Jarzynski \u7b49\u5f0f\u3001Crooks \u5b9a\u7406\u4ee5\u53ca\u5176\u4ed6\u591a\u79cd\u79ef\u5206\u548c\u7cbe\u7ec6\u6da8\u843d\u5b9a\u7406 (IFT &amp; DFT)\u3002\u8bba\u6587\u6db5\u76d6\u4e86\u5927\u91cf\u7684 paradigmatic systems\uff08\u5178\u8303\u7cfb\u7edf\uff09\uff0c\u5305\u62ec\u6211\u4eec\u6a21\u62df\u8fc7\u7684\u80f6\u4f53\u9897\u7c92\u3001\u751f\u7269\u805a\u5408\u7269\u3001\u5206\u5b50\u9a6c\u8fbe\u4ee5\u53ca\u5c0f\u578b\u751f\u5316\u7f51\u7edc\u7b49\u3002\u6b63\u5982Frey\u6559\u6388\u6240\u8a00\uff0c\u8fd9\u662f\u4e00\u7bc7\u201c...beautiful review of all the different aspects of stochastic thermodynamics...\u201d\u3002</p> <p>\u8fd9\u8282\u8bfe\u6807\u5fd7\u7740\u8fd9\u7cfb\u5217\u8bfe\u7a0b\u4ece\u8fd1\u5e73\u8861\u5411\u975e\u5e73\u8861\u9886\u57df\u7684\u5173\u952e\u8f6c\u6298\u3002\u4ece\u56de\u987e\u8fd1\u5e73\u8861\u7cfb\u7edf\u7684\u6da8\u843d-\u8017\u6563\u5173\u7cfb\u51fa\u53d1\uff0c\u5c06\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u89c6\u91ce\u62d3\u5c55\u5230\u4e86\u7531\u4efb\u610f\u5916\u90e8\u534f\u8bae\u9a71\u52a8\u7684\u3001\u8fdc\u79bb\u5e73\u8861\u7684\u968f\u673a\u8fc7\u7a0b\u3002\u901a\u8fc7\u8fd0\u7528\u5f3a\u5927\u7684 JDD \u8def\u5f84\u79ef\u5206\u5de5\u5177\uff0c\u6700\u7ec8\u8bc1\u660e\u4e86\u5373\u4f7f\u5728\u7cfb\u7edf\u7ecf\u5386\u9ad8\u5ea6\u4e0d\u53ef\u9006\u7684\u8fc7\u7a0b\u65f6\uff0c\u4f9d\u7136\u80fd\u591f\u627e\u5230\u8d85\u8d8a\u7ecf\u5178\u70ed\u529b\u5b66\u4e0d\u7b49\u5f0f\u7684\u3001\u666e\u9002\u4e14\u7cbe\u786e\u7684\u7b49\u5f0f\u5173\u7cfb\u3002</p> <p>\u6838\u5fc3\u5185\u5bb9\u53ef\u4ee5\u603b\u7ed3\u4e3a\u4ee5\u4e0b\u56db\u70b9\uff1a</p> <ol> <li> <p>\u975e\u5e73\u8861\u529f\u662f\u968f\u673a\u53d8\u91cf\uff1a\u5728\u5fae\u89c2\u5c3a\u5ea6\uff0c\u7531\u4e8e\u70ed\u6da8\u843d\u7684\u5b58\u5728\uff0c\u5bf9\u7cfb\u7edf\u6240\u505a\u7684\u529f\u4e0d\u518d\u662f\u4e00\u4e2a\u786e\u5b9a\u503c\uff0c\u800c\u662f\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u5177\u4f53\u6f14\u5316\u8f68\u8ff9\u7684\u968f\u673a\u53d8\u91cf\uff0c\u56e0\u6b64\u5fc5\u987b\u7528\u5176\u5b8c\u6574\u7684\u6982\u7387\u5206\u5e03\u6765\u63cf\u8ff0\u3002</p> </li> <li> <p>Jarzynski \u7b49\u5f0f\uff1a\u529f\u7684\u6307\u6570\u5e73\u5747\u503c\uff0c\u8fd9\u4e2a\u5728\u975e\u5e73\u8861\u8fc7\u7a0b\u4e2d\u6d4b\u91cf\u7684\u91cf\uff0c\u88ab\u8bc1\u660e\u7cbe\u786e\u5730\u7b49\u4e8e\u7cfb\u7edf\u59cb\u672b\u5e73\u8861\u6001\u4e4b\u95f4\u7684\u81ea\u7531\u80fd\u5dee\u6240\u5bf9\u5e94\u7684\u70ed\u529b\u5b66\u56e0\u5b50\uff0c\u5373 \\(\\langle e^{-\\beta W_J} \\rangle = e^{-\\beta \\Delta F}\\)\u3002\u8fd9\u4e00\u5b9a\u7406\u4e3a\u4ece\u4e0d\u53ef\u9006\u8fc7\u7a0b\u4e2d\u63d0\u53d6\u5e73\u8861\u6001\u4fe1\u606f\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u7406\u8bba\u57fa\u7840\u3002</p> </li> <li> <p>Crooks \u6da8\u843d\u5b9a\u7406\uff1a\u8fd9\u662f\u4e00\u4e2a\u66f4\u4e3a\u7cbe\u7ec6\u548c\u5f3a\u5927\u7684\u201c\u7ec6\u81f4\u201d\u5bf9\u79f0\u5173\u7cfb\u3002\u5b83\u901a\u8fc7\u516c\u5f0f \\(\\frac{P(W_J)}{P_R(-W_J)} = e^{\\beta (W_J - \\Delta F)}\\)\uff0c\u7cbe\u786e\u5730\u5173\u8054\u4e86\u6b63\u5411\u548c\u53cd\u5411\u8fc7\u7a0b\u7684\u6574\u4e2a\u529f\u5206\u5e03\uff0c\u4ece\u800c\u5b9a\u91cf\u5730\u89e3\u91ca\u4e86\u77ac\u65f6\u201c\u8fdd\u80cc\u201d\u7b2c\u4e8c\u5b9a\u5f8b\u4e8b\u4ef6\u7684\u7a00\u6709\u6027\u3002</p> </li> <li> <p>\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u7684\u6838\u5fc3\u4f5c\u7528\uff1a\u6240\u6709\u8fd9\u4e9b\u975e\u5e73\u8861\u5b9a\u7406\u7684\u6839\u672c\u6765\u6e90\uff0c\u662f\u5e95\u5c42\u5fae\u89c2\u52a8\u529b\u5b66\u7684\u65f6\u95f4\u53ef\u9006\u6027\u3002\u5b8f\u89c2\u4e0a\u89c2\u5bdf\u5230\u7684\u4e0d\u53ef\u9006\u6027\u6e90\u4e8e\u4e0d\u5bf9\u79f0\u7684\u8fb9\u754c\u6761\u4ef6\uff08\u5373\u4ece\u4e00\u4e2a\u786e\u5b9a\u7684\u5e73\u8861\u6001\u5f00\u59cb\u5e76\u8ba9\u65f6\u95f4\u5411\u524d\u6d41\u901d\uff09\uff0c\u800c\u6da8\u843d\u5b9a\u7406\u6b63\u662f\u5bf9\u8fd9\u79cd\u8fb9\u754c\u6761\u4ef6\u4e0d\u5bf9\u79f0\u6027\u6240\u4ea7\u751f\u7684\u7edf\u8ba1\u540e\u679c\u7684\u7cbe\u786e\u63cf\u8ff0\u3002</p> </li> </ol> <p>\u8fd9\u8282\u8bfe\u5173\u6ce8\u7684\u662f\u4e00\u4e2a\u7cfb\u7edf\u5728\u6709\u9650\u65f6\u95f4\u5185\u4ece\u4e00\u4e2a\u5e73\u8861\u6001\u88ab\u9a71\u52a8\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u7684\u77ac\u6001 (transient) \u975e\u5e73\u8861\u8fc7\u7a0b\u3002\u7136\u800c\uff0c\u975e\u5e73\u8861\u4e16\u754c\u8fd8\u5305\u542b\u53e6\u4e00\u7c7b\u6781\u4e3a\u91cd\u8981\u7684\u7cfb\u7edf\uff1a\u90a3\u4e9b\u5728\u6301\u7eed\u7684\u80fd\u91cf\u6216\u7269\u8d28\u6d41\u9a71\u52a8\u4e0b\uff0c\u80fd\u591f\u8fbe\u5230\u975e\u5e73\u8861\u7a33\u6001 (Non-Equilibrium Steady State, NESS) \u7684\u7cfb\u7edf\u3002</p> <p>\u63a5\u4e0b\u6765\u7684\u8bfe\u7a0b\u5c06\u8f6c\u5411\u5bf9 NESS \u7684\u7814\u7a76\uff0c\u7279\u522b\u662f\u5c06\u4ee5\u6709\u5411\u6e17\u6d41 (Directed Percolation) \u4f5c\u4e3a\u7814\u7a76\u975e\u5e73\u8861\u76f8\u53d8\u7684\u5178\u8303\u6a21\u578b\u3002\u4e0e\u5e73\u8861\u76f8\u53d8\uff08\u5982\u4f0a\u8f9b\u6a21\u578b\uff09\u4e0d\u540c\uff0c\u6709\u5411\u6e17\u6d41\u6a21\u578b\u4e2d\u5185\u542b\u4e86\u4e00\u4e2a\u201c\u65f6\u95f4\u201d\u6216\u4f18\u5148\u65b9\u5411\uff0c\u4f7f\u5176\u672c\u8d28\u4e0a\u662f\u52a8\u6001\u548c\u4e0d\u53ef\u9006\u7684\u3002\u5b83\u63cf\u8ff0\u4e86\u8bf8\u5982\u6d41\u884c\u75c5\u4f20\u64ad\u3001\u50ac\u5316\u5242\u8868\u9762\u53cd\u5e94\u7b49\u591a\u79cd\u7cfb\u7edf\u4e2d\u4ece\u6d3b\u8dc3\u6001\u5230\u201c\u6b7b\u4ea1\u201d\uff08\u5438\u6536\uff09\u6001\u7684\u4e34\u754c\u884c\u4e3a\u3002</p> <p>\u7814\u7a76\u8fd9\u7c7b\u7cfb\u7edf\uff0c\u4e5f\u9884\u793a\u7740\u5206\u6790\u5de5\u5177\u7684\u8f6c\u53d8\u3002\u5bf9\u4e8e NESS \u7684\u957f\u65f6\u95f4\u884c\u4e3a\u3001\u5f1b\u8c6b\u901f\u7387\u4ee5\u53ca\u6da8\u843d\u7684\u8c31\u7279\u6027\uff0c\u5149\u8c31\u65b9\u6cd5 (Spectral Method) \u5c06\u6210\u4e3a\u6838\u5fc3\u5de5\u5177\u3002\u8be5\u65b9\u6cd5\u901a\u8fc7\u5206\u6790\u7cfb\u7edf\u6f14\u5316\u7b97\u7b26\uff08\u5982\u798f\u514b-\u666e\u6717\u514b\u7b97\u7b26\uff09\u7684\u672c\u5f81\u503c\u548c\u672c\u5f81\u51fd\u6570\u6765\u63ed\u793a\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u7279\u6027\u3002\u56e0\u6b64\uff0c\u540e\u7eed\u8bfe\u7a0b\u7684\u89c6\u89d2\u5c06\u4ece\u672c\u8bb2\u7684\u8def\u5f84\u79ef\u5206\u65b9\u6cd5\uff0c\u8f6c\u5411\u4f7f\u7528\u7b97\u7b26\u7406\u8bba\u6765\u5256\u6790\u975e\u5e73\u8861\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/","title":"\u5f15\u8a00:\u8fc8\u5411\u975e\u5e73\u8861\u4e16\u754c","text":"<p>\u5728\u5148\u524d\u7684\u8bfe\u7a0b\u4e2d,\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e00\u5957\u590d\u6742\u7684\u573a\u8bba\u6846\u67b6\u6765\u63cf\u8ff0\u8fd1\u5e73\u8861\u6001\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u3002\u4ece\u6602\u8428\u683c-\u9a6c\u8d6b\u5362\u666e\u6cdb\u51fd\u51fa\u53d1,\u5f15\u5165\u4e86\u529f\u80fd\u66f4\u5f3a\u5927\u7684Janssen-De Dominicis (J-D) \u4f5c\u7528\u91cf,\u5e76\u4ee5\u6b64\u4e3a\u57fa\u7840,\u7cfb\u7edf\u6027\u5730\u63a8\u5bfc\u4e86\u4f5c\u4e3a\u8fd1\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u57fa\u77f3\u7684\u6da8\u843d-\u8017\u6563\u5173\u7cfb (FDT)\u3002\u968f\u540e\u7684\u7b2c32\u8282\u5219\u5c06\u89c6\u91ce\u62d3\u5c55\u81f3\u8fdc\u79bb\u5e73\u8861\u7684\u9886\u57df,\u901a\u8fc7Jarzynski\u7b49\u5f0f\u4e0eCrooks\u6da8\u843d\u5b9a\u7406,\u63ed\u793a\u4e86\u5728\u4efb\u610f\u5916\u90e8\u534f\u8bae\u9a71\u52a8\u4e0b\u7684\u975e\u5e73\u8861\u77ac\u6001\u8fc7\u7a0b\u4e2d,\u975e\u5e73\u8861\u529f\u4e0e\u5e73\u8861\u6001\u81ea\u7531\u80fd\u4e4b\u95f4\u5b58\u5728\u7684\u6df1\u523b\u7b49\u5f0f\u5173\u7cfb\u3002\u8fd9\u4e9b\u7406\u8bba\u867d\u7136\u5f3a\u5927,\u4f46\u5176\u5173\u6ce8\u70b9\u4e3b\u8981\u5728\u4e8e\u7cfb\u7edf\u5982\u4f55\u54cd\u5e94\u5916\u90e8\u6270\u52a8,\u6216\u662f\u5728\u4e24\u4e2a\u5e73\u8861\u6001\u4e4b\u95f4\u88ab\u77ac\u65f6\u9a71\u52a8\u3002</p> <p>\u8fd9\u8282\u8bfe\u6807\u5fd7\u7740\u8bfe\u7a0b\u89c6\u89d2\u7684\u53c8\u4e00\u6b21\u5173\u952e\u8f6c\u53d8:\u4ece\u77ac\u6001\u7684\u975e\u5e73\u8861\u8fc7\u7a0b,\u8f6c\u5411\u90a3\u4e9b\u88ab\u6301\u7eed\u9a71\u52a8\u3001\u5e76\u80fd\u8fbe\u5230\u975e\u5e73\u8861\u7a33\u6001 (Non-Equilibrium Steady States, NESS) \u7684\u7cfb\u7edf\u3002\u8fd9\u91cc\u7684\u6838\u5fc3\u95ee\u9898\u4e0d\u518d\u662f\u5f1b\u8c6b\u8fc7\u7a0b\u672c\u8eab,\u800c\u662f\u7cfb\u7edf\u5728\u6301\u7eed\u7684\u80fd\u91cf\u6216\u7269\u8d28\u6d41\u4e0b,\u662f\u5426\u4f1a\u5c55\u73b0\u51fa\u7c7b\u4f3c\u4e8e\u5e73\u8861\u6001\u7cfb\u7edf\u4e2d\u7684\u76f8\u53d8\u884c\u4e3a\u3002\u8fd9\u4e9b\u975e\u5e73\u8861\u76f8\u53d8\u4e0d\u7531\u81ea\u7531\u80fd\u6700\u5c0f\u5316\u6240\u652f\u914d,\u800c\u662f\u6e90\u4e8e\u9a71\u52a8\u4e0e\u8017\u6563\u4e4b\u95f4\u590d\u6742\u7684\u52a8\u6001\u5e73\u8861,\u5f80\u5f80\u4f1a\u6d8c\u73b0\u51fa\u5168\u65b0\u7684\u4e34\u754c\u73b0\u8c61\u3002</p> <p>\u73b0\u5b9e\u4e16\u754c\u4e2d\u5145\u6ee1\u4e86\u8fd9\u6837\u7684\u7cfb\u7edf\u3002\u4e00\u4e2a\u6d3b\u7740\u7684\u7ec6\u80de\u4fbf\u662f\u7ef4\u6301\u5728\u975e\u5e73\u8861\u7a33\u6001 (NESS) \u6700\u76f4\u89c2\u7684\u4f8b\u5b50,\u5b83\u901a\u8fc7\u6301\u7eed\u7684\u80fd\u91cf\u4e0e\u7269\u8d28\u4ea4\u6362,\u7ef4\u6301\u7740\u4e00\u4e2a\u8fdc\u79bb\u70ed\u529b\u5b66\u5e73\u8861\u7684\u9ad8\u5ea6\u6709\u5e8f\u72b6\u6001\u3002\u800c\u8bb8\u591a\u975e\u5e73\u8861\u76f8\u53d8,\u5176\u6838\u5fc3\u7279\u5f81\u6b63\u662f\u7cfb\u7edf\u4ece\u4e00\u4e2a\u52a8\u6001\u6da8\u843d\u7684\"\u6d3b\u8dc3\u76f8\"\u5230\u4e00\u4e2a\u4e0d\u53ef\u9006\u7684\"\u6b7b\u5bc2\"\u5438\u6536\u6001\u7684\u8f6c\u53d8\u3002</p> <p>\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\u662f\u6d41\u884c\u75c5\u7684\u4f20\u64ad:\u5f53\u4f20\u67d3\u75c5\u5728\u4eba\u7fa4\u4e2d\u8513\u5ef6\u65f6,\u7cfb\u7edf\u5904\u4e8e\u611f\u67d3\u4eba\u6570\u4e0d\u65ad\u53d8\u5316\u7684\"\u6d3b\u8dc3\u76f8\";\u800c\u5f53\u6700\u540e\u4e00\u4e2a\u611f\u67d3\u8005\u5eb7\u590d\u6216\u88ab\u9694\u79bb\u540e,\u7cfb\u7edf\u4fbf\u8fdb\u5165\u4e86\u75c5\u6bd2\u65e0\u6cd5\u518d\u81ea\u884c\u4ea7\u751f\u7684\"\u96f6\u611f\u67d3\"\u5438\u6536\u6001\u3002\u8fd9\u573a\u4ece\u6d41\u884c\u5230\u6d88\u4ea1\u7684\u76f8\u53d8,\u7531\u57fa\u672c\u518d\u751f\u6570 \\(R_0\\) \u662f\u5426\u8d85\u8fc7\u4e34\u754c\u70b91\u6240\u51b3\u5b9a\u3002\u7c7b\u4f3c\u7684\u6a21\u578b\u53ef\u4ee5\u7528\u6765\u63cf\u8ff0\u68ee\u6797\u706b\u707e\u7684\u8513\u5ef6,\u5176\"\u6d3b\u8dc3\u76f8\"\u662f\u71c3\u70e7\u7684\u706b\u7130,\u800c\"\u5438\u6536\u6001\"\u662f\u706b\u7130\u7684\u5b8c\u5168\u7184\u706d,\u8fd9\u573a\u76f8\u53d8\u5219\u7531\u6811\u6728\u7684\u5bc6\u5ea6\u662f\u5426\u8d85\u8fc7\"\u6e17\u6d41\u9608\u503c\"\u6240\u63a7\u5236\u3002\u8fd9\u79cd\u4ece\u6d3b\u8dc3\u5230\u6c38\u4e45\"\u6c89\u5bc2\"\u7684\u8f6c\u53d8\u751a\u81f3\u53ef\u4ee5\u5728\u5fae\u89c2\u5316\u5b66\u4e16\u754c\u4e2d\u627e\u5230\u5bf9\u5e94,\u4f8b\u5982\u5728\u50ac\u5316\u5242\u8868\u9762,\u6301\u7eed\u8fdb\u884c\u7684\u5316\u5b66\u53cd\u5e94\u662f\"\u6d3b\u8dc3\u76f8\",\u800c\u5f53\u6240\u6709\u6d3b\u6027\u4f4d\u70b9\u90fd\u88ab\u4e0d\u53ef\u9006\u5438\u9644\u7684\"\u6bd2\u7269\"\u8986\u76d6\u540e,\u53cd\u5e94\u4fbf\u6c38\u4e45\u505c\u6b62,\u7cfb\u7edf\u8fdb\u5165\u4e86\"\u4e2d\u6bd2\"\u7684\u5438\u6536\u6001\u3002\u8fd9\u4e9b\u4f8b\u5b50\u6e05\u6670\u5730\u8868\u660e,\u4ece\u5b8f\u89c2\u751f\u6001\u5230\u5fae\u89c2\u53cd\u5e94,\u5411\u5438\u6536\u6001\u7684\u76f8\u53d8\u662f\u81ea\u7136\u754c\u4e2d\u4e00\u7c7b\u6781\u4e3a\u666e\u904d\u4e14\u91cd\u8981\u7684\u975e\u5e73\u8861\u73b0\u8c61\u3002</p> <p>\u5728\u6b64\u7c7b\u975e\u5e73\u8861\u76f8\u53d8\u7684\u7814\u7a76\u4e2d,\u4e00\u4e2a\u6838\u5fc3\u6982\u5ff5\u662f\u5438\u6536\u6001 (absorbing state) \u3002\u5438\u6536\u6001\u662f\u6307\u7cfb\u7edf\u4e00\u65e6\u8fdb\u5165,\u5c31\u518d\u4e5f\u65e0\u6cd5\u4ece\u4e2d\u9003\u9038\u7684\u4e00\u4e2a\u6216\u4e00\u7ec4\u7279\u6b8a\u72b6\u6001\u3002\u8fd9\u4e2a\u6982\u5ff5\u5728\u4e4b\u524d\u7684\u7ebf\u6027\u51fa\u751f-\u6b7b\u4ea1\u8fc7\u7a0b\u4e2d\u5df2\u6709\u6d89\u53ca,\u5176\u4e2d\u79cd\u7fa4\u6570\u91cf\u4e3a\u96f6\u7684\u72b6\u6001\u4fbf\u662f\u4e00\u4e2a\u5178\u578b\u7684\u5438\u6536\u6001,\u4e00\u65e6\u79cd\u7fa4\u706d\u7edd,\u82e5\u65e0\u5916\u90e8\u5e72\u9884,\u5176\u6570\u91cf\u5c06\u6c38\u8fdc\u4e3a\u96f6\u3002\u5438\u6536\u6001\u7684\u5b58\u5728\u4ece\u6839\u672c\u4e0a\u6253\u7834\u4e86\u7ec6\u81f4\u5e73\u8861,\u4e3a\u7cfb\u7edf\u6ce8\u5165\u4e86\u5f3a\u70c8\u7684\u4e0d\u53ef\u9006\u6027\u3002\u4ece\u4e00\u4e2a\u52a8\u6001\u6da8\u843d\u7684\u6d3b\u8dc3\u76f8\u5230\u4e00\u4e2a\u9759\u6b62\u6b7b\u5bc2\u7684\u5438\u6536\u76f8\u7684\u8f6c\u53d8,\u5b9a\u4e49\u4e86\u4e00\u7c7b\u72ec\u7279\u800c\u91cd\u8981\u7684\u975e\u5e73\u8861\u76f8\u53d8\u3002</p> <p>\u4e3a\u4e86\u5177\u4f53\u5730\u7814\u7a76\u8fd9\u7c7b\u73b0\u8c61,\u9700\u8981\u4e00\u4e2a\u539f\u578b\u6a21\u578b\u3002\u5728\u975e\u5e73\u8861\u76f8\u53d8\u9886\u57df,\u6709\u5411\u6e17\u6d41 (Directed Percolation, DP) \u6240\u626e\u6f14\u7684\u89d2\u8272,\u582a\u6bd4\u4f0a\u8f9b\u6a21\u578b (Ising model) \u5728\u5e73\u8861\u6001\u76f8\u53d8\u7406\u8bba\u4e2d\u7684\u57fa\u77f3\u5730\u4f4d\u3002\u5b83\u4ee5\u6700\u7b80\u6d01\u7684\u5f62\u5f0f,\u6355\u6349\u4e86\u4ece\u4e00\u4e2a\u6d3b\u8dc3\u7684\u3001\u6301\u7eed\u6ce2\u52a8\u7684\u76f8\u5230\u4e00\u4e2a\u6b7b\u5bc2\u7684\u3001\u9759\u6b62\u7684\u5438\u6536\u76f8\u7684\u8fde\u7eed\u76f8\u53d8\u3002\u8fd9\u8282\u8bfe\u7684\u76ee\u6807,\u4fbf\u662f\u6df1\u5165\u5256\u6790DP\u6a21\u578b,\u9996\u5148\u901a\u8fc7\u4e00\u79cd\u7b80\u5316\u7684\u5e73\u5747\u573a\u65b9\u6cd5\u6765\u7406\u89e3\u5176\u57fa\u672c\u7684\u7269\u7406\u56fe\u50cf\u3002\u7136\u800c,\u6b63\u5982\u5148\u524d\u8bfe\u7a0b\u6240\u5f3a\u8c03\u7684,\u5e73\u5747\u573a\u7406\u8bba\u5ffd\u7565\u4e86\u4e34\u754c\u70b9\u9644\u8fd1\u81f3\u5173\u91cd\u8981\u7684\u6da8\u843d\u3002\u56e0\u6b64,\u4e3a\u4e86\u6784\u5efa\u66f4\u5b8c\u5584\u7684\u7406\u8bba,\u6709\u5fc5\u8981\u91cd\u65b0\u5ba1\u89c6\u5e76\u53d1\u5c55\u5904\u7406\u79bb\u6563\u968f\u673a\u8fc7\u7a0b\u7684\u6570\u5b66\u5de5\u5177\u2014\u2014\u4e3b\u65b9\u7a0b (Master Equation) \u53ca\u5176\u6c42\u89e3\u65b9\u6cd5,\u4e3a\u540e\u7eed\u5efa\u7acb\u80fd\u591f\u7cbe\u786e\u63cf\u8ff0\u6da8\u843d\u7684\u573a\u8bba\u6a21\u578b\u5960\u5b9a\u575a\u5b9e\u7684\u57fa\u7840\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#1","title":"1. \u6709\u5411\u6e17\u6d41\u7684\u5e73\u5747\u573a\u7406\u8bba","text":"<p>\u6709\u5411\u6e17\u6d41(Directed Percolation, DP) \u662f\u4e00\u4e2a\u63cf\u8ff0\u5177\u6709\u5185\u5728\u65b9\u5411\u6027\u7684\u6da8\u843d\u8fc7\u7a0b\u5982\u4f55\u5728\u5a92\u4ecb\u4e2d\u4f20\u64ad\u7684\u8303\u5f0f\u6a21\u578b\u3002\u4e0e\u666e\u901a\u6e17\u6d41(\u5982\u6c34\u6e17\u900f\u591a\u5b54\u4ecb\u8d28)\u4e0d\u540c,\"\u6709\u5411\"\u8fd9\u4e00\u7ea6\u675f\u5f3a\u8c03\u4e86\u8fc7\u7a0b\u7684\u4e0d\u53ef\u9006\u6027,\u901a\u5e38\u5bf9\u5e94\u4e8e\u65f6\u95f4\u7684\u5355\u5411\u6d41\u901d\u3002\u8be5\u6a21\u578b\u7cbe\u786e\u5730\u6355\u6349\u4e86\u4e00\u7c7b\u975e\u5e73\u8861\u76f8\u53d8\u7684\u672c\u8d28,\u5373\u7cfb\u7edf\u4ece\u4e00\u4e2a\u80fd\u591f\u81ea\u6211\u7ef4\u6301\u3001\u6301\u7eed\u8fdb\u884c\u7684\u6d3b\u8dc3\u76f8(Active Phase)\u5230\u4e00\u4e2a\u52a8\u6001\u6700\u7ec8\u4f1a\u5b8c\u5168\u505c\u6b62\u7684\u5438\u6536\u76f8(Absorbing Phase)\u7684\u4e34\u754c\u884c\u4e3a\u3002\u73b0\u5b9e\u4e16\u754c\u4e2d,\u6b64\u7c7b\u73b0\u8c61\u5c61\u89c1\u4e0d\u9c9c:\u4f8b\u5982\u6d41\u884c\u75c5\u7684\u4f20\u64ad,\u5176\u6d3b\u8dc3\u76f8\u662f\u75be\u75c5\u5728\u4eba\u7fa4\u4e2d\u7684\u8513\u5ef6,\u800c\u5438\u6536\u76f8\u5219\u662f\u611f\u67d3\u4eba\u6570\u4e3a\u96f6\u7684\"\u65e0\u75c5\"\u72b6\u6001;\u68ee\u6797\u706b\u707e\u7684\u8513\u5ef6\u540c\u6837\u9075\u5faa\u6b64\u6a21\u5f0f,\u71c3\u70e7\u7684\u706b\u52bf\u4e3a\u6d3b\u8dc3\u76f8,\u800c\u706b\u7130\u7684\u5b8c\u5168\u7184\u706d\u5219\u5bf9\u5e94\u5438\u6536\u76f8\u3002\u56e0\u6b64,\u7406\u89e3\u6709\u5411\u6e17\u6d41\u6a21\u578b\u662f\u7814\u7a76\u8fd9\u7c7b\u975e\u5e73\u8861\u4e34\u754c\u73b0\u8c61\u7684\u7406\u8bba\u8d77\u70b9\u3002</p> <p>\u4e3a\u4e86\u4ece\u6570\u5b66\u4e0a\u6355\u6349\u5438\u6536\u6001\u76f8\u53d8\u7684\u672c\u8d28,\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u80fd\u591f\u4f53\u73b0\u7c92\u5b50\u751f\u3001\u706d\u548c\u76f8\u4e92\u4f5c\u7528\u7684\u52a8\u529b\u5b66\u6a21\u578b\u3002\u8fd9\u5c0f\u8282\u7684\u76ee\u6807,\u662f\u9996\u5148\u5efa\u7acb\u6709\u5411\u6e17\u6d41\u6a21\u578b(DP)\u7684\u5fae\u89c2\u89c4\u5219,\u7136\u540e\u901a\u8fc7\u5e73\u5747\u573a\u8fd1\u4f3c\u8fd9\u4e00\u7b80\u5316\u624b\u6bb5,\u5ffd\u7565\u968f\u673a\u6da8\u843d\u548c\u7a7a\u95f4\u7ec6\u8282,\u63a8\u5bfc\u51fa\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u5b8f\u89c2\u52a8\u529b\u5b66\u65b9\u7a0b\u3002\u901a\u8fc7\u5206\u6790\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7a33\u6001\u89e3,\u63ed\u793aDP\u6a21\u578b\u4e2d\u4ece\"\u6d3b\u8dc3\"\u5230\"\u6b7b\u5bc2\"\u7684\u76f8\u53d8\u662f\u5982\u4f55\u53d1\u751f\u7684\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#11","title":"1.1 \u5fae\u89c2\u53cd\u5e94\u673a\u5236","text":"<p>\u8003\u8651\u4e00\u4e2a\u5b9a\u4e49\u5728\u683c\u70b9\u4e0a\u7684\u7c92\u5b50\u7cfb\u7edf,\u7c92\u5b50(\u6807\u8bb0\u4e3aA)\u5728\u5176\u4e2d\u7ecf\u5386\u4e00\u7cfb\u5217\u968f\u673a\u7684\u751f\u706d\u8fc7\u7a0b\u3002\u8fd9\u4e9b\u8fc7\u7a0b\u6784\u6210\u4e86\u6a21\u578b\u7684\u5fae\u89c2\u52a8\u529b\u5b66\u89c4\u5219,\u53ef\u4ee5\u88ab\u6982\u62ec\u4e3a\u4ee5\u4e0b\u4e09\u79cd\u57fa\u672c\u7684\u5316\u5b66\u53cd\u5e94\u5f0f:</p> <p>1.\u81ea\u53d1\u8870\u53d8 (Spontaneous Decay): \\(A \\xrightarrow{\\alpha_0} \\varnothing\\)</p> <p>\u4e00\u4e2a\u7c92\u5b50A\u4ee5\u901f\u7387 \\(\\alpha_0\\) \u81ea\u53d1\u5730\u6d88\u5931\u6216\u6b7b\u4ea1\u3002\u8fd9\u91cc\u7684 \\(\\varnothing\\) \u4ee3\u8868\u4e00\u4e2a\u7a7a\u683c\u70b9\u6216\u96f6\u7c92\u5b50\u72b6\u6001\u3002\u8fd9\u662f\u9a71\u52a8\u7cfb\u7edf\u8d70\u5411\"\u6b7b\u5bc2\"\u7684\u8870\u51cf\u673a\u5236\u3002</p> <ol> <li>\u540e\u4ee3\u7e41\u6b96 (Offspring Creation): \\(A \\xrightarrow{\\alpha_2} 2A\\)</li> </ol> <p>\u4e00\u4e2a\u7c92\u5b50A\u4ee5\u901f\u7387 \\(\\alpha_2\\) \u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u7c92\u5b50,\u4f7f\u5f97\u7c92\u5b50\u603b\u6570\u589e\u52a0\u4e00\u3002\u8fd9\u4ee3\u8868\u4e86\u7cfb\u7edf\u7684\u589e\u957f\u673a\u5236,\u662f\u7ef4\u6301\u7cfb\u7edf\"\u6d3b\u6027\"\u7684\u6e90\u6cc9\u3002</p> <p>3.\u51dd\u805a (Coagulation): \\(2A \\xrightarrow{\\beta_1} A\\)</p> <p>\u4e24\u4e2a\u76f8\u90bb\u7684\u7c92\u5b50A\u4ee5\u901f\u7387 \\(\\beta_1\\) \u5408\u5e76\u6210\u4e00\u4e2a\u7c92\u5b50\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5728\u9ad8\u5bc6\u5ea6\u65f6\u53d8\u5f97\u91cd\u8981,\u5b83\u6a21\u62df\u4e86\u7531\u4e8e\u8d44\u6e90\u7ade\u4e89\u7b49\u56e0\u7d20\u5bfc\u81f4\u7684\u589e\u957f\u6291\u5236\u6548\u5e94,\u8d77\u5230\u4e86\u7a33\u5b9a\u7c92\u5b50\u6570\u91cf\u3001\u9632\u6b62\u5176\u65e0\u9650\u589e\u957f\u7684\u4f5c\u7528\u3002</p> <p>\u8fd9\u5957\u7b80\u5355\u7684\u89c4\u5219\u5305\u542b\u4e86\u751f\u547d(\u7e41\u6b96)\u3001\u6b7b\u4ea1(\u8870\u53d8)\u548c\u76f8\u4e92\u4f5c\u7528(\u51dd\u805a)\u8fd9\u4e09\u4e2a\u6838\u5fc3\u8981\u7d20\u3002\u5b83\u4eec\u4e4b\u95f4\u7684\u7ade\u4e89\u4e0e\u5e73\u8861,\u5c06\u5171\u540c\u51b3\u5b9a\u6574\u4e2a\u7cfb\u7edf\u7684\u5b8f\u89c2\u547d\u8fd0\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#12","title":"1.2 \u786e\u5b9a\u6027\u901f\u7387\u65b9\u7a0b","text":"<p>\u4e3a\u4e86\u4ece\u8fd9\u4e9b\u5fae\u89c2\u7684\u3001\u968f\u673a\u7684\u89c4\u5219\u8fc7\u6e21\u5230\u5bf9\u7cfb\u7edf\u5b8f\u89c2\u884c\u4e3a\u7684\u63cf\u8ff0,\u9996\u5148\u91c7\u7528\u5e73\u5747\u573a\u8fd1\u4f3c (mean-field approximation) \u3002\u8be5\u8fd1\u4f3c\u7684\u6838\u5fc3\u601d\u60f3\u662f:</p> <p>\u5ffd\u7565\u7a7a\u95f4\u5173\u8054:\u5047\u8bbe\u7cfb\u7edf\u662f\"\u5145\u5206\u6df7\u5408\"\u7684,\u7c92\u5b50\u5728\u4efb\u4f55\u4f4d\u7f6e\u51fa\u73b0\u7684\u6982\u7387\u90fd\u76f8\u540c\u3002</p> <p>\u5ffd\u7565\u968f\u673a\u6da8\u843d:\u7528\u4e00\u4e2a\u8fde\u7eed\u7684\u5b8f\u89c2\u5e73\u5747\u91cf\u2014\u2014\u7c92\u5b50\u5bc6\u5ea6 \\(n(t)\\) \u2014\u2014\u6765\u4ee3\u66ff\u79bb\u6563\u3001\u968f\u673a\u7684\u7c92\u5b50\u6570,\u4ece\u800c\u63cf\u8ff0\u6574\u4e2a\u7cfb\u7edf\u7684\u72b6\u6001\u3002</p> <p>\u5728\u8fd9\u79cd\u8fd1\u4f3c\u4e0b,\u7c92\u5b50\u5bc6\u5ea6\u7684\u968f\u65f6\u95f4\u6f14\u5316\u9075\u5faa\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u5e38\u5fae\u5206\u65b9\u7a0b,\u5373\u901f\u7387\u65b9\u7a0b:</p> \\[ \\frac{\\partial n(t)}{\\partial t} = (\\alpha_2 - \\alpha_0)n(t) - \\beta_1 n^2(t) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u5b9e\u9645\u4e0a\u662f\u5316\u5b66\u53cd\u5e94\u52a8\u529b\u5b66\u4e2d\u8d28\u91cf\u4f5c\u7528\u5b9a\u5f8b (law of mass action) \u7684\u4e00\u4e2a\u76f4\u63a5\u5e94\u7528\u3002\u5b83\u7684\u6bcf\u4e00\u9879\u90fd\u6709\u6e05\u6670\u7684\u7269\u7406\u6765\u6e90:</p> <p>\u7ebf\u6027\u9879 \\((\\alpha_2 - \\alpha_0)n(t)\\) :\u4ee3\u8868\u4e86\u5355\u7c92\u5b50\u8fc7\u7a0b\u7684\u51c0\u6548\u5e94\u3002</p> <p>\\(+\\alpha_2 n(t)\\): \u7c92\u5b50\u603b\u6570\u7684\u589e\u52a0\u7387\u3002\u5b83\u6b63\u6bd4\u4e8e\u73b0\u5b58\u7684\u3001\u53ef\u4ee5\u8fdb\u884c\u7e41\u6b96\u7684\u7c92\u5b50\u5bc6\u5ea6 \\(n(t)\\)\u3002</p> <p>\\(-\\alpha_0 n(t)\\): \u7c92\u5b50\u603b\u6570\u7684\u51cf\u5c11\u7387\u3002\u5b83\u6b63\u6bd4\u4e8e\u73b0\u5b58\u7684\u3001\u53ef\u80fd\u53d1\u751f\u8870\u53d8\u7684\u7c92\u5b50\u5bc6\u5ea6 \\(n(t)\\)\u3002</p> <p>\u975e\u7ebf\u6027\u9879 \\(-\\beta_1 n^2(t)\\) :\u4ee3\u8868\u4e86\u53cc\u7c92\u5b50\u8fc7\u7a0b\u7684\u6548\u5e94\u3002</p> <p>\u5728\u5e73\u5747\u573a\u8fd1\u4f3c\u4e0b,\u4e24\u4e2a\u7c92\u5b50\u76f8\u9047\u7684\u6982\u7387\u6b63\u6bd4\u4e8e\u7c92\u5b50\u5bc6\u5ea6\u7684\u5e73\u65b9 \\(n^2(t)\\)\u3002\u8fd9\u4e00\u9879\u662f\u975e\u7ebf\u6027\u7684,\u5b83\u5bf9\u4e8e\u9632\u6b62\u7c92\u5b50\u6570\u7206\u70b8\u6027\u589e\u957f\u81f3\u5173\u91cd\u8981,\u4f53\u73b0\u4e86\u9ad8\u5bc6\u5ea6\u4e0b\u7684\u6291\u5236\u4f5c\u7528\u3002</p> <p>\u901a\u8fc7\u5e73\u5747\u5316\u5904\u7406,\u8fd9\u4e2a\u65b9\u7a0b\u5c06\u79bb\u6563\u7684\u7c92\u5b50\u751f\u706d\u4e8b\u4ef6\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u8fde\u7eed\u53d8\u91cf \\(n(t)\\) \u7684\u786e\u5b9a\u6027\u6f14\u5316\u3002\u8fd9\u79cd\u7b80\u5316\u867d\u7136\u5ffd\u7565\u4e86\u6da8\u843d(fluctuations)\u7684\u5173\u952e\u4f5c\u7528,\u4f46\u5b83\u80fd\u591f\u4ee5\u6700\u5c0f\u7684\u4ee3\u4ef7\u63ed\u793a\u51fa\u7cfb\u7edf\u53ef\u80fd\u5b58\u5728\u7684\u4e0d\u540c\u5b8f\u89c2\u76f8\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#13","title":"1.3 \u7a33\u6001\u5206\u6790\u4e0e\u5438\u6536\u6001\u76f8\u53d8","text":"<p>\u7cfb\u7edf\u7684\u957f\u671f\u884c\u4e3a\u7531\u5176\u7a33\u6001 (steady state) \u51b3\u5b9a,\u5373\u7c92\u5b50\u5bc6\u5ea6\u4e0d\u518d\u968f\u65f6\u95f4\u53d8\u5316\u7684\u72b6\u6001,\u6b64\u65f6 \\(\\frac{\\partial n(t)}{\\partial t} = 0\\)\u3002\u901a\u8fc7\u6c42\u89e3\u4ee3\u6570\u65b9\u7a0b \\((\\alpha_2 - \\alpha_0)n - \\beta_1 n^2 = 0\\),\u53ef\u4ee5\u627e\u5230\u7cfb\u7edf\u7684\u6240\u6709\u4e0d\u52a8\u70b9(\u7a33\u6001\u89e3)\u3002</p> <p>\u5206\u6790\u7684\u5173\u952e\u5728\u4e8e\u5f15\u5165\u4e00\u4e2a\u63a7\u5236\u53c2\u6570 \\(\\Delta = \\alpha_2 - \\alpha_0\\)\u3002\u8fd9\u4e2a\u53c2\u6570\u5177\u6709\u660e\u786e\u7684\u7269\u7406\u610f\u4e49:\u5b83\u4ee3\u8868\u4e86\u5728\u6ca1\u6709\u76f8\u4e92\u4f5c\u7528\u65f6(\u5373\u5bc6\u5ea6\u6781\u4f4e,\\(n \\to 0\\)),\u5355\u4e2a\u7c92\u5b50\u7684\u51c0\u589e\u957f\u7387 \u3002\u6839\u636e \\(\\Delta\\) \u7684\u7b26\u53f7,\u7cfb\u7edf\u5c55\u73b0\u51fa\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u7684\u5b8f\u89c2\u884c\u4e3a:</p> <p>1.\u5438\u6536\u76f8 (Absorbing Phase, \\(\\Delta &lt; 0\\))</p> <p>\u5f53\u8870\u53d8\u901f\u7387 \\(\\alpha_0\\) \u5927\u4e8e\u7e41\u6b96\u901f\u7387 \\(\\alpha_2\\) \u65f6,\u51c0\u589e\u957f\u7387\u4e3a\u8d1f\u3002\u6b64\u65f6,\u901f\u7387\u65b9\u7a0b\u7684\u552f\u4e00\u7269\u7406\u7a33\u6001\u89e3\u662f \\(n_{ss} = 0\\)\u3002</p> <p>\u7269\u7406\u610f\u4e49:\u8fd9\u610f\u5473\u7740\u4efb\u4f55\u521d\u59cb\u7684\u7c92\u5b50\u5e03\u5c45\u6700\u7ec8\u90fd\u4f1a\u6d88\u4ea1,\u7cfb\u7edf\u4e0d\u53ef\u907f\u514d\u5730\u8fdb\u5165\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55\u7c92\u5b50\u7684\"\u6b7b\u5bc2\"\u72b6\u6001\u3002\u8fd9\u4e2a \\(n = 0\\) \u7684\u72b6\u6001\u6b63\u662f\u4e00\u4e2a\u5438\u6536\u6001 (Absorbing State),\u56e0\u4e3a\u4e00\u65e6\u8fdb\u5165,\u7e41\u6b96\u8fc7\u7a0b\u4fbf\u65e0\u6cd5\u542f\u52a8,\u7cfb\u7edf\u518d\u4e5f\u65e0\u6cd5\u4ece\u4e2d\u9003\u9038\u3002</p> <p>2.\u6d3b\u8dc3\u76f8 (Active Phase, \\(\\Delta &gt; 0\\))</p> <p>\u5f53\u7e41\u6b96\u901f\u7387 \\(\\alpha_2\\) \u8d85\u8fc7\u8870\u53d8\u901f\u7387 \\(\\alpha_0\\) \u65f6,\u51c0\u589e\u957f\u7387\u4e3a\u6b63\u3002\u6b64\u65f6,\u9664\u4e86 \\(n = 0\\) \u8fd9\u4e2a(\u73b0\u5728\u4e0d\u7a33\u5b9a\u7684)\u89e3\u4e4b\u5916,\u51fa\u73b0\u4e86\u4e00\u4e2a\u65b0\u7684\u3001\u7a33\u5b9a\u7684\u975e\u96f6\u7a33\u6001\u89e3: $$ n_{act} = \\frac{\\Delta}{\\beta_1} = \\frac{\\alpha_2 - \\alpha_0}{\\beta_1} $$</p> <p>\u7269\u7406\u610f\u4e49:\u5728\u8fd9\u4e2a\u76f8\u4e2d,\u7cfb\u7edf\u80fd\u591f\u7ef4\u6301\u4e00\u4e2a\u6709\u9650\u7684\u3001\u52a8\u6001\u5e73\u8861\u7684\u7c92\u5b50\u5bc6\u5ea6\u3002\u7c92\u5b50\u7684\u51c0\u589e\u957f\u88ab\u9ad8\u5bc6\u5ea6\u4e0b\u7684\u51dd\u805a\u8fc7\u7a0b\u6240\u5e73\u8861,\u5f62\u6210\u4e00\u4e2a\u6301\u7eed\u5b58\u5728\u3001\u4e0d\u65ad\u6da8\u843d\u7684\"\u6d3b\"\u7684\u72b6\u6001\u3002</p> <p>\u5728 \\(\\Delta = 0\\) \u8fd9\u4e2a\u70b9,\u7cfb\u7edf\u6070\u597d\u5904\u4e8e\u4ece\u6d3b\u8dc3\u76f8\u5230\u5438\u6536\u76f8\u7684\u4e34\u754c\u70b9\u3002\u8fd9\u662f\u4e00\u4e2a\u8fde\u7eed\u76f8\u53d8,\u6d3b\u8dc3\u76f8\u7684\u7a33\u6001\u5bc6\u5ea6 \\(n_{act}\\) \u5728\u6b64\u76f8\u53d8\u4e2d\u626e\u6f14\u4e86\u5e8f\u53c2\u6570 (order parameter) \u7684\u89d2\u8272,\u5b83\u4ece\u96f6\u5f00\u59cb\u8fde\u7eed\u589e\u957f\u3002\u8fd9\u79cd\u4ece\u4e00\u4e2a\u52a8\u6001\u6d3b\u8dc3\u72b6\u6001\u5230\u4e00\u4e2a\u9759\u6b62\u5438\u6536\u72b6\u6001\u7684\u8f6c\u53d8,\u88ab\u79f0\u4e3a\u5438\u6536\u6001\u76f8\u53d8\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#2","title":"2. \u5e73\u5747\u573a\u7406\u8bba\u4e0b\u7684\u4e34\u754c\u73b0\u8c61","text":"<p>\u5728\u786e\u5b9a\u4e86\u7cfb\u7edf\u5b58\u5728\u4e24\u79cd\u5b8f\u89c2\u76f8\u4e4b\u540e,\u4e0b\u4e00\u6b65\u662f\u6df1\u5165\u7814\u7a76\u76f8\u53d8\u4e34\u754c\u70b9\u9644\u8fd1\u7684\u884c\u4e3a\u3002\u7269\u7406\u5b66\u4e2d,\u4e34\u754c\u70b9\u9644\u8fd1\u7684\u52a8\u529b\u5b66\u548c\u6807\u5ea6\u884c\u4e3a\u5f80\u5f80\u63ed\u793a\u4e86\u7cfb\u7edf\u7684\u666e\u9002\u89c4\u5f8b,\u8fd9\u4e9b\u89c4\u5f8b\u4e0d\u4f9d\u8d56\u4e8e\u6a21\u578b\u7684\u5fae\u89c2\u7ec6\u8282\u3002\u8fd9\u5c0f\u8282\u5c06\u5206\u6790\u5e73\u5747\u573a\u901f\u7387\u65b9\u7a0b\u7684\u52a8\u529b\u5b66\u89e3,\u4ece\u4e2d\u63ed\u793a\u4e34\u754c\u6162\u5316\u8fd9\u4e00\u666e\u9002\u73b0\u8c61,\u5e76\u5f15\u5165\u4e34\u754c\u6307\u6570\u6765\u5b9a\u91cf\u523b\u753b\u4e34\u754c\u884c\u4e3a,\u6700\u7ec8\u63d0\u51fa\u6709\u5411\u6e17\u6d41\u666e\u9002\u7c7b\u8fd9\u4e00\u91cd\u8981\u731c\u60f3\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#21","title":"2.1 \u52a8\u529b\u5b66\u5f1b\u8c6b\u4e0e\u4e34\u754c\u6162\u5316","text":"<p>\u9664\u4e86\u7a33\u6001\u6027\u8d28,\u7cfb\u7edf\u5982\u4f55\u8d8b\u8fd1\u4e8e\u7a33\u6001\u7684\u52a8\u529b\u5b66\u8fc7\u7a0b\u4e5f\u5305\u542b\u4e86\u76f8\u53d8\u7684\u91cd\u8981\u4fe1\u606f\u3002\u4e0a\u8ff0\u7684\u975e\u7ebf\u6027\u901f\u7387\u65b9\u7a0b\u662f\u4e00\u4e2a\u4f2f\u52aa\u5229\u65b9\u7a0b (Bernoulli equation),\u53ef\u4ee5\u88ab\u7cbe\u786e\u6c42\u89e3\u3002\u7ed9\u5b9a\u521d\u59cb\u5bc6\u5ea6 \\(n(t=0) = n_0\\),\u5176\u89e3\u4e3a:</p> \\[ n(t) = \\frac{n_0 n_{act}}{n_0 + (n_{act} - n_0)e^{-\\Delta t}} \\] <p>\u5f53 \\(t \\to \\infty\\) \u65f6,\u6307\u6570\u9879\u6d88\u5931,\u5206\u5f0f\u5316\u7b80\u4e3a \\(\\frac{n_0 n_{act}}{n_0} = n_{act}\\),\u6b63\u786e\u5730\u8d8b\u5411\u4e8e\u6d3b\u8dc3\u76f8\u7684\u7a33\u6001\u5bc6\u5ea6\u3002</p> <p>\u4ece\u8fd9\u4e2a\u89e3\u4e2d\u53ef\u4ee5\u5206\u6790\u7cfb\u7edf\u7684\u5f1b\u8c6b (relaxation) \u884c\u4e3a:</p> <p>\u6307\u6570\u5f1b\u8c6b (\\(\\Delta &gt; 0\\))</p> <p>\u5728\u6d3b\u8dc3\u76f8\u5185\u90e8,\u7cfb\u7edf\u4f1a\u4ee5\u6307\u6570\u5f62\u5f0f\u8d8b\u8fd1\u4e8e\u7a33\u6001\u5bc6\u5ea6 \\(n_{act}\\)\u3002\u4ece\u89e3\u7684\u5206\u6bcd\u53ef\u4ee5\u770b\u51fa,\u5176\u7279\u5f81\u5f1b\u8c6b\u65f6\u95f4\u4e3a:</p> \\[ \\tau_{RELAX} = \\frac{1}{\\Delta} = \\frac{1}{\\alpha_2 - \\alpha_0} \\] <p>\u8fd9\u4e2a\u5f1b\u8c6b\u65f6\u95f4\u5c3a\u5ea6\u8861\u91cf\u4e86\u7cfb\u7edf\u4ece\u4e00\u4e2a\u5fae\u6270\u72b6\u6001\u6062\u590d\u5230\u7a33\u6001\u7684\u901f\u5ea6\u3002</p> <p>\u4e34\u754c\u6162\u5316 (Critical Slowing Down)</p> <p>\u5f53\u7cfb\u7edf\u4ece\u6d3b\u8dc3\u76f8\u8d8b\u8fd1\u4e8e\u4e34\u754c\u70b9\u65f6,\u5373 \\(\\Delta \\to 0^+\\),\u5f1b\u8c6b\u65f6\u95f4 \\(\\tau_{RELAX} \\to \\infty\\)\u3002\u8fd9\u610f\u5473\u7740\u5728\u4e34\u754c\u70b9\u9644\u8fd1,\u7cfb\u7edf\u7684\u6f14\u5316\u53d8\u5f97\u6781\u5176\u7f13\u6162,\u5bf9\u521d\u59cb\u72b6\u6001\u7684\"\u8bb0\u5fc6\"\u4f1a\u6301\u7eed\u975e\u5e38\u957f\u7684\u65f6\u95f4\u3002</p> <p>\u7269\u7406\u6839\u6e90:\u8fd9\u662f\u6240\u6709\u8fde\u7eed\u76f8\u53d8\u7684\u666e\u9002\u7279\u5f81\u4e4b\u4e00\u3002\u5728\u7269\u7406\u4e0a,\u8fd9\u6e90\u4e8e\u9a71\u52a8\u7cfb\u7edf\u6062\u590d\u5230\u7a33\u6001\u7684\"\u529b\"(\u5728\u6b64\u5904\u7531 \\(\\Delta\\) \u4f53\u73b0)\u5728\u4e34\u754c\u70b9\u6d88\u5931\u4e86,\u5bfc\u81f4\u7cfb\u7edf\u5bf9\u6270\u52a8\u7684\u54cd\u5e94\u53d8\u5f97\u65e0\u9650\u7f13\u6162\u3002</p> <p>\u4e34\u754c\u70b9\u7684\u5e42\u5f8b\u5f1b\u8c6b (\\(\\Delta = 0\\))</p> <p>\u6070\u597d\u5728\u4e34\u754c\u70b9\u4e0a,\u52a8\u529b\u5b66\u884c\u4e3a\u53d1\u751f\u8d28\u53d8\u3002\u6307\u6570\u5f1b\u8c6b\u88ab\u4e00\u79cd\u66f4\u6162\u7684\u4ee3\u6570\u5f1b\u8c6b(\u6216\u79f0\u5e42\u5f8b\u5f1b\u8c6b)\u6240\u53d6\u4ee3\u3002\u6b64\u65f6\u901f\u7387\u65b9\u7a0b\u7b80\u5316\u4e3a \\(\\frac{\\partial n(t)}{\\partial t} = -\\beta_1 n^2(t)\\),\u5176\u89e3\u4e3a:</p> \\[ n(t) = \\frac{n_0}{1 + \\beta_1 n_0 t} \\sim t^{-1} \\quad (\\text{for large } t) \\] <p>\u7cfb\u7edf\u5bc6\u5ea6\u968f\u65f6\u95f4\u4ee5 \\(t^{-1}\\) \u7684\u5e42\u5f8b\u5f62\u5f0f\u8870\u51cf,\u8fd9\u8fdc\u6bd4\u4efb\u4f55\u6307\u6570\u8870\u51cf\u90fd\u8981\u6162\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#22","title":"2.2 \u4e34\u754c\u6307\u6570\u4e0e\u666e\u9002\u7c7b","text":"<p>\u4e3a\u4e86\u66f4\u666e\u9002\u5730\u3001\u5b9a\u91cf\u5730\u523b\u753b\u4e34\u754c\u70b9\u9644\u8fd1\u7684\u884c\u4e3a,\u7269\u7406\u5b66\u5bb6\u5f15\u5165\u4e86\u4e00\u5957\u4e0d\u4f9d\u8d56\u4e8e\u5177\u4f53\u53c2\u6570\u7684\u4e34\u754c\u6307\u6570 (critical exponents) \u3002</p> <p>\u5e8f\u53c2\u6570\u6307\u6570 \\(\\beta\\) : \u63cf\u8ff0\u4e86\u5f53\u63a7\u5236\u53c2\u6570 \\(\\Delta\\) \u8d8b\u4e8e\u96f6\u65f6,\u5e8f\u53c2\u6570(\u8fd9\u91cc\u662f \\(n_{act}\\))\u5982\u4f55\u6d88\u5931\u3002\u5176\u5b9a\u4e49\u4e3a \\(n_{act} \\sim |\\Delta|^\\beta\\)\u3002\u6839\u636e\u5e73\u5747\u573a\u7406\u8bba\u7684\u7ed3\u679c \\(n_{act} = \\Delta/\\beta_1\\),\u53ef\u4ee5\u5f97\u5230 \\(\\beta = 1\\)\u3002</p> <p>\u5f1b\u8c6b\u65f6\u95f4\u6307\u6570 \\(\\nu z\\) : \u63cf\u8ff0\u4e86\u5f1b\u8c6b\u65f6\u95f4\u7684\u53d1\u6563\u884c\u4e3a,\u5b9a\u4e49\u4e3a \\(\\tau_{RELAX} \\sim |\\Delta|^{-\\nu z}\\)\u3002\u6839\u636e \\(\\tau_{RELAX} = 1/\\Delta\\),\u5f97\u5230 \\(\\nu z = 1\\)\u3002</p> <p>\u4e3a\u4e86\u4f7f\u6a21\u578b\u66f4\u8d34\u8fd1\u771f\u5b9e\u7269\u7406\u7cfb\u7edf,\u9700\u8981\u8003\u8651\u7a7a\u95f4\u7ef4\u5ea6\u548c\u7c92\u5b50\u7684\u6269\u6563\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5728\u901f\u7387\u65b9\u7a0b\u4e2d\u52a0\u5165\u4e00\u4e2a\u6269\u6563\u9879\u6765\u5b9e\u73b0,\u4ece\u800c\u5f97\u5230\u4e00\u4e2a\u53cd\u5e94-\u6269\u6563\u65b9\u7a0b (reaction-diffusion equation) :</p> \\[ \\frac{\\partial n(\\mathbf{x}, t)}{\\partial t} = (\\alpha_2 - \\alpha_0)n(\\mathbf{x}, t) - \\beta_1 n^2(\\mathbf{x}, t) + D \\nabla^2 n(\\mathbf{x}, t) \\] <p>\u5176\u4e2d \\(D\\) \u662f\u6269\u6563\u7cfb\u6570,\\(n(\\mathbf{x}, t)\\) \u662f\u4f9d\u8d56\u4e8e\u7a7a\u95f4\u548c\u65f6\u95f4\u7684\u5bc6\u5ea6\u573a\u3002\u6269\u6563\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u7279\u5f81\u5c3a\u5ea6\u2014\u2014\u5173\u8054\u957f\u5ea6 \\(\\xi\\),\u5b83\u63cf\u8ff0\u4e86\u7cfb\u7edf\u4e2d\u6da8\u843d\u7684\u7a7a\u95f4\u5173\u8054\u8303\u56f4\u3002\u5728\u4e34\u754c\u70b9\u9644\u8fd1,\u5173\u8054\u957f\u5ea6\u4e5f\u53d1\u6563,\\(\\xi \\sim |\\Delta|^{-\\nu}\\)\u3002\u800c\u65f6\u95f4\u5c3a\u5ea6\u548c\u957f\u5ea6\u5c3a\u5ea6\u901a\u8fc7\u52a8\u529b\u5b66\u6307\u6570 \\(z\\) \u5173\u8054\u8d77\u6765,\\(\\tau \\sim \\xi^z\\)\u3002\u5bf9\u4e0a\u8ff0\u53cd\u5e94-\u6269\u6563\u65b9\u7a0b\u7684\u5206\u6790\u53ef\u4ee5\u5f97\u5230\u5b8c\u6574\u7684\u6709\u5411\u6e17\u6d41\u5e73\u5747\u573a\u4e34\u754c\u6307\u6570:</p> \\[ \\beta = 1, \\quad \\nu = \\frac{1}{2}, \\quad z = 2 \\] <p>\u81f3\u6b64,\u63d0\u51fa\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u7269\u7406\u5b66\u731c\u60f3:\u6240\u6709\u5177\u6709\u5355\u4e2a\u5438\u6536\u6001\u3001\u6807\u91cf\u5e8f\u53c2\u6570\u548c\u77ed\u7a0b\u76f8\u4e92\u4f5c\u7528\u7684\u975e\u5e73\u8861\u76f8\u53d8,\u90fd\u5c5e\u4e8e\u6709\u5411\u6e17\u6d41(DP)\u666e\u9002\u7c7b  \u3002\u8fd9\u610f\u5473\u7740,\u65e0\u8bba\u7cfb\u7edf\u7684\u5fae\u89c2\u7ec6\u8282\u5982\u4f55(\u4f8b\u5982\u5177\u4f53\u7684\u53cd\u5e94\u901f\u7387\u3001\u683c\u70b9\u7ed3\u6784\u7b49),\u53ea\u8981\u5b83\u6ee1\u8db3\u4e0a\u8ff0\u57fa\u672c\u6761\u4ef6,\u5176\u5728\u4e34\u754c\u70b9\u9644\u8fd1\u7684\u884c\u4e3a\u5c31\u5e94\u8be5\u7531\u4e0eDP\u76f8\u540c\u7684\u4e34\u754c\u6307\u6570\u6240\u63cf\u8ff0\u3002</p> <p>\u7136\u800c,\u7cbe\u786e\u7684\u6570\u503c\u6a21\u62df\u548c\u5b9e\u9a8c\u8868\u660e,DP\u7684\u771f\u5b9e\u4e34\u754c\u6307\u6570(\u4f8b\u5982\u57281+1\u7ef4\u4e2d,\\(\\beta \\approx 0.276\\))\u4e0e\u5e73\u5747\u573a\u7406\u8bba\u7684\u9884\u6d4b\u503c\u6709\u663e\u8457\u5dee\u5f02\u3002\u8fd9\u63ed\u793a\u4e86\u5e73\u5747\u573a\u8fd1\u4f3c\u7684\u5c40\u9650\u6027:\u5b83\u5b8c\u5168\u5ffd\u7565\u4e86\u5728\u4e34\u754c\u70b9\u9644\u8fd1\u81f3\u5173\u91cd\u8981\u7684\u6da8\u843d\u3002\u4e3a\u4e86\u8d85\u8d8a\u5e73\u5747\u573a\u7406\u8bba,\u5fc5\u987b\u5efa\u7acb\u4e00\u4e2a\u80fd\u591f\u6070\u5f53\u5904\u7406\u968f\u673a\u6da8\u843d\u7684\u573a\u8bba\u63cf\u8ff0,\u800c\u8fd9\u4e00\u5207\u7684\u8d77\u70b9,\u6b63\u662f\u4e3b\u65b9\u7a0b\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#3","title":"3. \u79bb\u6563\u968f\u673a\u8fc7\u7a0b\u7684\u6570\u5b66\u5de5\u5177","text":"<p>\u5e73\u5747\u573a\u7406\u8bba\u4e3a\u6709\u5411\u6e17\u6d41(DP)\u63d0\u4f9b\u4e86\u4e00\u5e45\u5b8f\u89c2\u7684\u3001\u786e\u5b9a\u6027\u7684\u56fe\u50cf,\u4f46\u5b83\u6700\u5927\u7684\u7f3a\u9677\u5728\u4e8e\u5b8c\u5168\u5ffd\u7565\u4e86\u968f\u673a\u6da8\u843d\u2014\u2014\u800c\u8fd9\u6070\u6070\u662f\u4e34\u754c\u73b0\u8c61\u7684\u6838\u5fc3\u3002\u4e3a\u4e86\u5efa\u7acb\u4e00\u4e2a\u66f4\u57fa\u672c\u3001\u66f4\u51c6\u786e\u7684\u7406\u8bba,\u5fc5\u987b\u56de\u5230\u5bf9\u79bb\u6563\u7c92\u5b50\u968f\u673a\u751f\u706d\u8fc7\u7a0b\u7684\u76f4\u63a5\u63cf\u8ff0,\u5176\u6570\u5b66\u8bed\u8a00\u6b63\u662f\u4e3b\u65b9\u7a0b (Master Equation)\u3002</p> <p>\u7136\u800c,\u76f4\u63a5\u5904\u7406\u5305\u542b\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528(\u5982DP\u4e2d\u7684\u51dd\u805a\u8fc7\u7a0b)\u7684\u4e3b\u65b9\u7a0b\u6781\u5176\u56f0\u96be\u3002\u56e0\u6b64,\u5728\u6311\u6218DP\u6a21\u578b\u4e4b\u524d,\u672c\u90e8\u5206\u5c06\u91c7\u53d6\"\u8fc2\u56de\"\u7b56\u7565:\u9996\u5148,\u901a\u8fc7\u5206\u6790\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u3001\u7cbe\u786e\u53ef\u89e3\u7684\u968f\u673a\u6a21\u578b\u2014\u2014\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b,\u6765\u7cfb\u7edf\u6027\u5730\u53d1\u5c55\u548c\u638c\u63e1\u6c42\u89e3\u4e3b\u65b9\u7a0b\u6240\u5fc5\u9700\u7684\u6570\u5b66\u5de5\u5177\u7bb1\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#31","title":"3.1 \u7406\u8bba\u6846\u67b6\u56de\u987e\u4e0e\u6311\u6218","text":"<p>\u5728\u6df1\u5165\u7814\u7a76\u79bb\u6563\u7c92\u5b50\u7cfb\u7edf\u7684\u4e3b\u65b9\u7a0b\u4e4b\u524d,\u6709\u5fc5\u8981\u56de\u987e\u4e00\u4e0b\u4e4b\u524d\u8bb2\u5ea7(\u5982\u7b2c31\u8bb2)\u4e2d\u4e3a\u8fde\u7eed\u968f\u673a\u53d8\u91cf\u5efa\u7acb\u7684\u7406\u8bba\u6846\u67b6\u3002\u8fd9\u4e2a\u6846\u67b6\u6784\u6210\u4e86\u4e00\u4e2a\u5c42\u6b21\u5206\u660e\u7684\u4f53\u7cfb:</p> <p>\u5fae\u89c2\u5c42\u9762 : \u6717\u4e4b\u4e07\u65b9\u7a0b (Langevin Equation) ,\u5982 \\(dx = A(x)dt + C(x)dW\\),\u5b83\u63cf\u8ff0\u4e86\u5355\u4e2a\u968f\u673a\u8f68\u8ff9\u7684\u6f14\u5316\u3002</p> <p>\u4ecb\u89c2\u5c42\u9762 : \u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b (Fokker-Planck Equation) ,\u5b83\u63cf\u8ff0\u4e86\u6982\u7387\u5206\u5e03\u51fd\u6570 \\(P(\\mathbf{x}, t)\\) \u7684\u786e\u5b9a\u6027\u6f14\u5316\u3002</p> <p>\u5168\u5c40\u5c42\u9762 : \u8def\u5f84\u79ef\u5206\u8868\u8ff0 ,\u5c06\u6982\u7387\u6f14\u5316\u8868\u793a\u4e3a\u5bf9\u6240\u6709\u53ef\u80fd\u8def\u5f84\u7684\u6cdb\u51fd\u79ef\u5206,\u5176\u4e2d\u4f5c\u7528\u91cf \\(S\\) \u5305\u542b\u4e86\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u4fe1\u606f\u3002</p> <p>\u5f53\u524d\u9762\u4e34\u7684\u6311\u6218\u662f\u4e3a\u79bb\u6563\u53d8\u91cf(\u5982\u7c92\u5b50\u6570 \\(n \\in \\{0, 1, 2, \\ldots\\}\\))\u7cfb\u7edf\u6784\u5efa\u4e00\u4e2a\u7c7b\u4f3c\u7684\u5f3a\u5927\u6846\u67b6\u3002\u5bf9\u4e8e\u8fd9\u7c7b\u7cfb\u7edf,\u5176\u52a8\u529b\u5b66\u7684\u51fa\u53d1\u70b9\u4e0d\u518d\u662f\u6717\u4e4b\u4e07\u65b9\u7a0b,\u800c\u662f\u4e3b\u65b9\u7a0b\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#32","title":"3.2 \u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u4e0e\u4e3b\u65b9\u7a0b","text":"<p>\u4e3a\u4e86\u53d1\u5c55\u6c42\u89e3\u4e3b\u65b9\u7a0b\u7684\u6570\u5b66\u5de5\u5177,\u4ece\u6700\u7b80\u5355\u7684\u975e\u5e73\u51e1\u968f\u673a\u8fc7\u7a0b\u5f00\u59cb:\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b (linear death process) \u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5bf9\u5e94\u4e8e\u81ea\u53d1\u8870\u53d8\u53cd\u5e94:\\(A \\xrightarrow{\\lambda} \\varnothing\\),\u5176\u4e2d\u6bcf\u4e2a\u7c92\u5b50\u90fd\u4ee5\u6052\u5b9a\u7684\u4eba\u5747\u901f\u7387 \\(\\lambda\\) \u72ec\u7acb\u5730\u6d88\u5931\u3002</p> <p>\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u7684\u662f\u7cfb\u7edf\u5728\u65f6\u523b \\(t\\) \u6070\u597d\u6709 \\(n\\) \u4e2a\u7c92\u5b50\u7684\u6982\u7387 \\(P_n(t)\\) \u7684\u65f6\u95f4\u6f14\u5316\u3002\u5b83\u662f\u4e00\u4e2a\u5173\u4e8e\u6982\u7387\u6d41\u7684\u5e73\u8861\u65b9\u7a0b,\u5176\u5f62\u5f0f\u5982\u4e0b:</p> \\[ \\frac{d P_n(t)}{dt} = \\lambda(n+1)P_{n+1}(t) - \\lambda n P_n(t) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7269\u7406\u610f\u4e49,\u6b63\u662f\u7b2c7\u8bb2\u4e2d\u5efa\u7acb\u7684\"\u589e\u76ca-\u635f\u5931\"\u5e73\u8861\u601d\u60f3\u7684\u4f53\u73b0:</p> <p>\u589e\u76ca\u9879 (Gain Term) : \\(+\\lambda(n+1)P_{n+1}(t)\\)</p> <p>\u7cfb\u7edf\u8fdb\u5165\u72b6\u6001 \\(n\\) \u7684\u552f\u4e00\u9014\u5f84\u662f\u4ece\u72b6\u6001 \\(n+1\\) \u8dc3\u8fc1\u800c\u6765\u3002\u5f53\u7cfb\u7edf\u4e2d\u6709 \\(n+1\\) \u4e2a\u7c92\u5b50\u65f6,\u603b\u6b7b\u4ea1\u901f\u7387\u4e3a \\(\\lambda(n+1)\\)\u3002\u56e0\u6b64,\u4ece\u72b6\u6001 \\(n+1\\) \u6d41\u5165\u72b6\u6001 \\(n\\) \u7684\u603b\u6982\u7387\u6d41,\u6b63\u6bd4\u4e8e\u6e90\u72b6\u6001\u7684\u6982\u7387 \\(P_{n+1}(t)\\) \u548c\u8f6c\u79fb\u901f\u7387\u4e4b\u79ef\u3002</p> <p>\u635f\u5931\u9879 (Loss Term) : \\(-\\lambda n P_n(t)\\)</p> <p>\u5982\u679c\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001 \\(n\\),\u5b83\u4f1a\u56e0\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u7c92\u5b50\u8870\u53d8\u800c\u79bb\u5f00\u6b64\u72b6\u6001\u3002\u603b\u7684\u79bb\u5f00\u901f\u7387\u662f \\(\\lambda n\\)\u3002\u56e0\u6b64,\u4ece\u72b6\u6001 \\(n\\) \u6d41\u51fa\u7684\u603b\u6982\u7387\u6d41,\u6b63\u6bd4\u4e8e\u5f53\u524d\u72b6\u6001\u7684\u6982\u7387 \\(P_n(t)\\) \u548c\u8fd9\u4e2a\u901f\u7387\u4e4b\u79ef\u3002</p> <p>\u8fd9\u4e2a\u65b9\u7a0b\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u65e0\u9650\u7ef4\u7684\u3001\u8026\u5408\u7684\u7ebf\u6027\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4,\u76f4\u63a5\u6c42\u89e3\u76f8\u5f53\u7e41\u7410\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#33","title":"3.3 \u751f\u6210\u51fd\u6570\u65b9\u6cd5:\u4ece\u65e0\u9650\u5230\u5355\u4e00","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898,\u5f15\u5165\u4e00\u4e2a\u5728\u7b2c4\u8bb2\u4e2d\u5df2\u7ecf\u4f7f\u7528\u8fc7\u7684\u5f3a\u5927\u6570\u5b66\u5de5\u5177\u2014\u2014\u751f\u6210\u51fd\u6570 (generating function) \\(G(x, t)\\)\u3002\u5b83\u5c06\u65e0\u7a77\u5e8f\u5217\u7684\u6982\u7387 \\(P_n(t)\\) \u7f16\u7801\u4e3a\u4e00\u4e2a\u5173\u4e8e\u8f85\u52a9\u53d8\u91cf \\(x\\) \u7684\u5355\u4e00\u51fd\u6570:</p> \\[ G(x, t) = \\sum_{n=0}^{\\infty} P_n(t) x^n \\] <p>\u8fd9\u4e2a\u51fd\u6570\u7684\u4f18\u70b9\u5728\u4e8e,\u5b83\u53ef\u4ee5\u5c06\u4e3b\u65b9\u7a0b\u4e2d\u6d89\u53ca\u4e0d\u540c \\(n\\) \u503c\u7684\u5dee\u5206\u8fd0\u7b97 ,\u8f6c\u5316\u4e3a\u5bf9\u751f\u6210\u51fd\u6570\u7684\u8fde\u7eed\u5fae\u5206\u8fd0\u7b97 \u3002\u5bf9\u4e3b\u65b9\u7a0b\u4e24\u8fb9\u540c\u4e58 \\(x^n\\) \u5e76\u5bf9\u6240\u6709 \\(n\\) \u6c42\u548c,\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5173\u4e8e\u751f\u6210\u51fd\u6570\u7684\u3001\u5355\u4e00\u7684\u4e00\u9636\u504f\u5fae\u5206\u65b9\u7a0b:</p> \\[ \\frac{\\partial G(x, t)}{\\partial t} = \\lambda(1 - x)\\frac{\\partial G(x, t)}{\\partial x} \\] <p>\u5de6\u4fa7 : \\(\\sum_n \\frac{dP_n}{dt} x^n = \\frac{\\partial}{\\partial t} \\sum_n P_n x^n = \\frac{\\partial G}{\\partial t}\\)\u3002</p> <p>\u635f\u5931\u9879 : \\(\\sum_n (-\\lambda n P_n) x^n = -\\lambda x \\frac{\\partial}{\\partial x} \\sum_n P_n x^n = -\\lambda x \\frac{\\partial G}{\\partial x}\\)\u3002</p> <p>\u589e\u76ca\u9879 : \\(\\sum_n \\lambda(n+1)P_{n+1}x^n = \\lambda \\frac{\\partial}{\\partial x} \\sum_{n+1} P_{n+1}x^{n+1} = \\lambda \\frac{\\partial G}{\\partial x}\\)\u3002</p> <p>\u901a\u8fc7\u5f15\u5165\u751f\u6210\u51fd\u6570,\u6210\u529f\u5730\u5c06\u4e00\u4e2a\u65e0\u9650\u7ef4\u7684\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u7b80\u6d01\u7684\u504f\u5fae\u5206\u65b9\u7a0b,\u4e3a\u95ee\u9898\u7684\u89e3\u6790\u6c42\u89e3\u94fa\u5e73\u4e86\u9053\u8def\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#4","title":"4. \u8c31\u65b9\u6cd5\u6c42\u89e3\u4e0e\u7269\u7406\u8be0\u91ca","text":"<p>\u4e0a\u4e00\u90e8\u5206\u6210\u529f\u5730\u5c06\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u7684\u4e3b\u65b9\u7a0b\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u5173\u4e8e\u751f\u6210\u51fd\u6570\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u3002\u73b0\u5728,\u5c06\u5f15\u5165\u4e00\u79cd\u66f4\u4e3a\u6df1\u523b\u548c\u5f3a\u5927\u7684\u6c42\u89e3\u65b9\u6cd5\u2014\u2014\u8c31\u65b9\u6cd5 (spectral method) \u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\u501f\u9274\u91cf\u5b50\u529b\u5b66\u4e2d\u7684\u7b97\u7b26\u7406\u8bba,\u5c06\u6c42\u89e3\u504f\u5fae\u5206\u65b9\u7a0b\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5bfb\u627e\u7b97\u7b26\u672c\u5f81\u503c\u548c\u672c\u5f81\u51fd\u6570\u7684\u95ee\u9898\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u4ec5\u80fd\u7ed9\u51fa\u6700\u7ec8\u89e3,\u66f4\u80fd\u63ed\u793a\u7cfb\u7edf\u52a8\u529b\u5b66\u80cc\u540e\u6df1\u523b\u7684\u4ee3\u6570\u7ed3\u6784\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#41","title":"4.1 \u7b97\u7b26\u5f62\u5f0f\u4e0e\u91cf\u5b50\u529b\u5b66\u7c7b\u6bd4","text":"<p>\u53ef\u4ee5\u5c06\u5173\u4e8e\u751f\u6210\u51fd\u6570\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u6539\u5199\u6210\u7b97\u7b26\u5f62\u5f0f\u3002\u5b9a\u4e49\u4e00\u4e2a\u7ebf\u6027\u7b97\u7b26 \\(\\mathcal{H}\\):</p> \\[ \\mathcal{H} = \\lambda(x - 1)\\frac{\\partial}{\\partial x} \\] <p>\u4e8e\u662f,\u65b9\u7a0b\u53ef\u4ee5\u5199\u6210\u4e00\u4e2a\u4e0e(\u865a\u65f6\u95f4\u4e0b\u7684)\u859b\u5b9a\u8c14\u65b9\u7a0b\u5f62\u5f0f\u4e0a\u975e\u5e38\u76f8\u4f3c\u7684\u65b9\u7a0b:</p> \\[ \\frac{\\partial G(x, t)}{\\partial t} = -\\mathcal{H} G(x, t) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u5f62\u5f0f\u89e3\u662f \\(G(t) = e^{-\\mathcal{H}t}G(0)\\)\u3002\u4e3a\u4e86\u5f97\u5230\u5177\u4f53\u89e3,\u9700\u8981\u6c42\u89e3\u7b97\u7b26 \\(\\mathcal{H}\\) \u7684\u672c\u5f81\u503c\u95ee\u9898:</p> \\[ \\mathcal{H} \\varphi_j(x) = \\lambda_j \\varphi_j(x) \\] <p>\u5176\u4e2d \\(\\lambda_j\\) \u662f\u672c\u5f81\u503c,\\(\\varphi_j(x)\\) \u662f\u5bf9\u5e94\u7684\u672c\u5f81\u51fd\u6570\u3002</p> <p>\u7269\u7406\u610f\u4e49 :\u8fd9\u91cc\u7684 \\(\\mathcal{H}\\) \u867d\u7136\u5f62\u5f0f\u4e0a\u7c7b\u4f3c\u54c8\u5bc6\u987f\u7b97\u7b26,\u4f46\u5b83\u63cf\u8ff0\u7684\u662f\u7ecf\u5178\u6982\u7387\u7684\u6f14\u5316,\u800c\u975e\u91cf\u5b50\u6ce2\u51fd\u6570\u3002\u8fd9\u79cd\u7c7b\u6bd4\u7684\u4ef7\u503c\u5728\u4e8e,\u53ef\u4ee5\u501f\u7528\u91cf\u5b50\u529b\u5b66\u4e2d\u6210\u719f\u7684\u4ee3\u6570\u5de5\u5177\u6765\u89e3\u51b3\u7ecf\u5178\u968f\u673a\u8fc7\u7a0b\u95ee\u9898\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#42","title":"4.2 \u5347\u964d\u7b97\u7b26\u4e0e\u672c\u5f81\u8c31","text":"<p>\u4e3a\u4e86\u4ee3\u6570\u5316\u5730\u89e3\u51b3\u8fd9\u4e2a\u672c\u5f81\u95ee\u9898,\u5f15\u5165\u4e00\u5bf9\u5347\u964d\u7b97\u7b26 (ladder operators) ,\u8fd9\u4e0e\u91cf\u5b50\u8c10\u632f\u5b50\u7684\u5904\u7406\u65b9\u5f0f\u5982\u51fa\u4e00\u8f99:</p> <p>\u6e6e\u706d\u7b97\u7b26 (Annihilation operator) : \\(a := \\frac{\\partial}{\\partial x}\\)</p> <p>\u4ea7\u751f\u7b97\u7b26 (Creation operator) : \\(a^\\dagger := (x - 1)\\)</p> <p>\u8fd9\u4e24\u4e2a\u7b97\u7b26\u6ee1\u8db3\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u73bb\u8272\u5b50\u7b97\u7b26\u7684\u5bf9\u6613\u5173\u7cfb (commutation relation) :</p> \\[ [a, a^\\dagger] = a a^\\dagger - a^\\dagger a = \\partial_x(x-1) - (x-1)\\partial_x = 1 \\] <p>\u5229\u7528\u8fd9\u4e24\u4e2a\u7b97\u7b26,\u54c8\u5bc6\u987f\u7b97\u7b26 \\(\\mathcal{H}\\) \u53ef\u4ee5\u88ab\u7b80\u6d01\u5730\u8868\u793a\u4e3a:</p> \\[ \\mathcal{H} = \\lambda a^\\dagger a \\] <p>\u901a\u8fc7\u5206\u6790\u7b97\u7b26 \\(\\mathcal{H}\\) \u4e0e\u5347\u964d\u7b97\u7b26\u7684\u5bf9\u6613\u5173\u7cfb,\u53ef\u4ee5\u8bc1\u660e \\(a^\\dagger\\) \u4f1a\u5c06\u672c\u5f81\u503c\u5347\u9ad8 \\(\\lambda\\),\u800c \\(a\\) \u4f1a\u5c06\u672c\u5f81\u503c\u964d\u4f4e \\(\\lambda\\)\u3002\u7531\u4e8e\u6982\u7387\u5fc5\u987b\u6709\u754c,\u672c\u5f81\u503c\u8c31\u5fc5\u987b\u6709\u4e0b\u754c,\u56e0\u6b64\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u88ab\u6e6e\u706d\u7b97\u7b26\"\u6740\u6b7b\"\u7684\u57fa\u6001 \\(\\varphi_0\\):</p> <p>\\(a \\varphi_0(x) = \\frac{\\partial \\varphi_0(x)}{\\partial x} = 0 \\implies \\varphi_0(x) = \\text{const}\\)\u3002\u4e0d\u59a8\u53d6 \\(\\varphi_0(x) = 1\\)\u3002</p> <p>\u5bf9\u5e94\u7684\u57fa\u6001\u672c\u5f81\u503c\u4e3a \\(\\lambda_0 = 0\\)\u3002</p> <p>\u4ece\u57fa\u6001\u51fa\u53d1,\u901a\u8fc7\u4e0d\u65ad\u4f5c\u7528\u4ea7\u751f\u7b97\u7b26 \\(a^\\dagger\\),\u5c31\u53ef\u4ee5\u6784\u5efa\u51fa\u6574\u4e2a\u672c\u5f81\u8c31:</p> <p>\u672c\u5f81\u503c : \\(\\lambda_j = j \\lambda\\), for \\(j \\in \\mathbb{N}_0 = \\{0, 1, 2, \\ldots\\}\\)</p> <p>\u672c\u5f81\u51fd\u6570 : \\(\\varphi_j(x) \\propto (a^\\dagger)^j \\varphi_0 \\propto (x - 1)^j\\)</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#43","title":"4.3 \u5b8c\u6574\u7684\u65f6\u53d8\u89e3\u4e0e\u7269\u7406\u8be0\u91ca","text":"<p>\u6709\u4e86\u5b8c\u6574\u7684\u672c\u5f81\u8c31,\u5c31\u53ef\u4ee5\u5c06\u751f\u6210\u51fd\u6570 \\(G(x, t)\\) \u5728\u8fd9\u4e2a\u672c\u5f81\u51fd\u6570\u57fa\u4e0a\u5c55\u5f00:</p> \\[ G(x, t) = \\sum_{j=0}^{\\infty} G_{j0} e^{-\\lambda_j t} \\varphi_j(x) = \\sum_{j=0}^{\\infty} G_{j0} e^{-j \\lambda t} (x - 1)^j \\] <p>\u5176\u4e2d\u7cfb\u6570 \\(G_{j0}\\) \u7531\u521d\u59cb\u6761\u4ef6\u51b3\u5b9a\u3002\u5047\u8bbe\u7cfb\u7edf\u5728 \\(t = 0\\) \u65f6\u523b\u6709\u786e\u5b9a\u7684 \\(N\\) \u4e2a\u7c92\u5b50,\u5373 \\(P_n(0) = \\delta_{n,N}\\),\u5bf9\u5e94\u7684\u521d\u59cb\u751f\u6210\u51fd\u6570\u4e3a \\(G(x, 0) = x^N\\)\u3002</p> <p>\u4e3a\u4e86\u6c42\u51fa\u7cfb\u6570 \\(G_{j0}\\),\u5de7\u5999\u5730\u5229\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406,\u5c06 \\(x^N\\) \u5728 \\((x-1)\\) \u5904\u5c55\u5f00:</p> \\[ x^N = (1 + (x - 1))^N = \\sum_{j=0}^{N} \\binom{N}{j} (x - 1)^j \\] <p>\u901a\u8fc7\u6bd4\u8f83\u7cfb\u6570,\u7acb\u523b\u5f97\u5230 \\(G_{j0} = \\binom{N}{j}\\) for \\(j \\leq N\\),\u4e14\u5f53 \\(j &gt; N\\) \u65f6 \\(G_{j0} = 0\\)\u3002</p> <p>\u5c06\u7cfb\u6570\u4ee3\u56de\u65f6\u53d8\u89e3,\u5e76\u518d\u6b21\u5229\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\u6c42\u548c,\u5f97\u5230\u751f\u6210\u51fd\u6570\u7684\u6700\u7ec8\u7d27\u51d1\u5f62\u5f0f:</p> \\[ G(x, t) = \\sum_{j=0}^{N} \\binom{N}{j} e^{-j \\lambda t} (x - 1)^j = \\left(1 + (x-1)e^{-\\lambda t}\\right)^N \\] <p>\u6700\u540e\u4e00\u6b65,\u662f\u4ece\u751f\u6210\u51fd\u6570\u4e2d\u63d0\u53d6\u51fa\u6211\u4eec\u771f\u6b63\u5173\u5fc3\u7684\u6982\u7387 \\(P_n(t)\\)\u3002\u6839\u636e\u751f\u6210\u51fd\u6570\u7684\u5b9a\u4e49,\\(P_n(t)\\) \u5c31\u662f \\(G(x,t)\\) \u5c55\u5f00\u5f0f\u4e2d \\(x^n\\) \u9879\u7684\u7cfb\u6570\u3002\u5bf9\u4e0a\u5f0f\u518d\u6b21\u4f7f\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\u5c55\u5f00:</p> \\[ G(x, t) = \\left((1 - e^{-\\lambda t}) + x e^{-\\lambda t}\\right)^N = \\sum_{n=0}^{N} \\binom{N}{n} (x e^{-\\lambda t})^n (1 - e^{-\\lambda t})^{N-n} \\] <p>\u7531\u6b64,\u76f4\u63a5\u8bfb\u51fa\u6982\u7387\u5206\u5e03:</p> \\[ P(n, t | N, 0) = \\binom{N}{n} (e^{-\\lambda t})^n (1 - e^{-\\lambda t})^{N-n} \\] <p>\u8fd9\u662f\u4e00\u4e2a\u4e8c\u9879\u5206\u5e03 (Binomial Distribution) \u3002</p> <p>\u8fd9\u4e2a\u7cbe\u786e\u89e3\u5177\u6709\u6781\u5176\u4f18\u7f8e\u548c\u76f4\u89c2\u7684\u7269\u7406\u5185\u6db5\u3002\u5728\u65f6\u523b \\(t\\),\u521d\u59cb \\(N\\) \u4e2a\u7c92\u5b50\u4e2d\u7684\u6bcf\u4e00\u4e2a,\u90fd\u6709 \\(p = e^{-\\lambda t}\\) \u7684\u6982\u7387\u5b58\u6d3b\u4e0b\u6765(\u8fd9\u662f\u5355\u4e2a\u7c92\u5b50\u5b58\u6d3b\u6982\u7387\u7684\u89e3),\u6709 \\(1 - p = 1 - e^{-\\lambda t}\\) \u7684\u6982\u7387\u5df2\u7ecf\u8870\u53d8\u3002\u7531\u4e8e\u6bcf\u4e2a\u7c92\u5b50\u7684\u8870\u53d8\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u4e8b\u4ef6(\u8fd9\u662f\"\u7ebf\u6027\"\u8fc7\u7a0b\u7684\u6839\u672c\u5047\u8bbe),\u90a3\u4e48\u5728\u65f6\u523b \\(t\\) \u6070\u597d\u6709 \\(n\\) \u4e2a\u7c92\u5b50\u5b58\u6d3b\u7684\u6982\u7387,\u5c31\u7b49\u540c\u4e8e\u5728 \\(N\\) \u6b21\u72ec\u7acb\u7684\u4f2f\u52aa\u5229\u8bd5\u9a8c\u4e2d,\u53d6\u5f97 \\(n\\) \u6b21\"\u6210\u529f\"(\u5b58\u6d3b)\u7684\u6982\u7387\u2014\u2014\u8fd9\u6b63\u662f\u4e8c\u9879\u5206\u5e03\u7684\u5b9a\u4e49\u3002\u8fd9\u4e2a\u7cbe\u786e\u89e3\u5b8c\u7f8e\u5730\u9a8c\u8bc1\u4e86\u8c31\u65b9\u6cd5\u8fd9\u4e00\u62bd\u8c61\u6570\u5b66\u5de5\u5177\u7684\u5a01\u529b,\u5e76\u6df1\u523b\u5730\u63ed\u793a\u4e86\u5fae\u89c2\u8fc7\u7a0b\u7684\u72ec\u7acb\u6027\u662f\u5982\u4f55\u5728\u5b8f\u89c2\u6982\u7387\u5206\u5e03\u4e0a\u4f53\u73b0\u4e3a\u4e8c\u9879\u7edf\u8ba1\u7684\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#5","title":"5. \u4ee3\u7801\u5b9e\u8df5","text":""},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#51-i-vs","title":"5.1 \u4ee3\u7801\u5b9e\u8df5 I:\u53ef\u89c6\u5316\u6709\u5411\u6e17\u6d41\u8fc7\u7a0b (\u683c\u5b50\u6a21\u578b vs. \u5e73\u5747\u573a)","text":"<p>\u4e3a\u4e86\u5efa\u7acb\u5bf9\u6709\u5411\u6e17\u6d41(DP)\u7684\u76f4\u89c2\u7406\u89e3,\u9996\u5148\u901a\u8fc7\u4e00\u4e2a2D\u7684\u683c\u5b50\u6a21\u578b (Lattice Model) \u6765\u76f4\u63a5\u89c2\u5bdf\"\u6e17\u6d41\"\u7684\u52a8\u6001\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u968f\u673a\u6a21\u62df\u5c55\u793a\u4e86\"\u6d3b\u8dc3\"\u7684\u7c92\u5b50\u5982\u4f55\u5728\u7a7a\u95f4\u4e0a\u4f20\u64ad\u548c\u6d88\u4ea1\u3002\u968f\u540e,\u5c06\u5c55\u793a\u5e73\u5747\u573a\u7406\u8bba\u662f\u5982\u4f55\u5728\u5ffd\u7565\u7a7a\u95f4\u7ec6\u8282\u7684\u66f4\u9ad8\u62bd\u8c61\u5c42\u6b21\u4e0a,\u6765\u63cf\u8ff0\u8fd9\u4e2a\u590d\u6742\u8fc7\u7a0b\u7684\u5b8f\u89c2\u5e73\u5747\u884c\u4e3a\u7684\u3002</p> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u6a21\u62df\u4e86\u4e00\u4e2a\u7b80\u5316\u7248\u7684\u6709\u5411\u6e17\u6d41\u8fc7\u7a0b(\u4e5f\u79f0\u4e3a\u63a5\u89e6\u8fc7\u7a0b)\u3002\u5728\u4e00\u4e2a\u4e8c\u7ef4\u7f51\u683c\u4e0a,\u6bcf\u4e2a\"\u6d3b\u8dc3\"(\u7ea2\u8272)\u7684\u683c\u5b50\u4f1a\u5c1d\u8bd5\u6fc0\u6d3b\u5176\u90bb\u5c45,\u540c\u65f6\u81ea\u8eab\u4e5f\u6709\u4e00\u5b9a\u6982\u7387\u53d8\u4e3a\"\u4e0d\u6d3b\u8dc3\"(\u9ed1\u8272)\u3002\u6211\u4eec\u5c06\u5bf9\u6bd4\u4e24\u79cd\u4e0d\u540c\u4f20\u64ad\u6982\u7387\u4e0b\u7684\u7cfb\u7edf\u6f14\u5316:\u4e00\u79cd\u6700\u7ec8\u4f1a\u6d88\u4ea1(\u5438\u6536\u76f8),\u53e6\u4e00\u79cd\u5219\u80fd\u591f\u6301\u7eed\u4f20\u64ad(\u6d3b\u8dc3\u76f8)\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation, PillowWriter\n\n# --- Use dark background for plots ---\nplt.style.use('dark_background')\n\ndef run_dp_simulation(grid_size, p_spread, p_death, steps):\n    \"\"\"Runs a single 2D Directed Percolation (Contact Process) simulation.\"\"\"\n    # Initialize grid with a small active cluster in the center\n    grid = np.zeros((grid_size, grid_size), dtype=int)\n    center = grid_size // 2\n    grid[center-1:center+1, center-1:center+1] = 1\n\n    history = [grid.copy()]\n\n    for _ in range(steps):\n        new_grid = grid.copy()\n        active_sites = np.argwhere(grid == 1)\n\n        if active_sites.size == 0: # Extinction\n            for _ in range(steps - len(history) + 1):\n                history.append(new_grid.copy())\n            break\n\n        for r, c in active_sites:\n            # Spread to neighbors\n            for dr in [-1, 0, 1]:\n                for dc in [-1, 0, 1]:\n                    if dr == 0 and dc == 0:\n                        continue\n\n                    nr, nc = r + dr, c + dc\n                    # Check boundaries and if neighbor is inactive\n                    if 0 &lt;= nr &lt; grid_size and 0 &lt;= nc &lt; grid_size and new_grid[nr, nc] == 0:\n                        if np.random.rand() &lt; p_spread:\n                            new_grid[nr, nc] = 1\n\n            # Spontaneous death\n            if np.random.rand() &lt; p_death:\n                new_grid[r, c] = 0\n\n        grid = new_grid\n        history.append(grid.copy())\n\n    return history\n\n# --- Simulation Parameters ---\nGRID_SIZE = 100\nANIMATION_STEPS = 200\n\n# --- Case 1: Absorbing Phase (low spread probability) ---\np_spread_abs = 0.05\np_death_abs = 0.2\nhistory_abs = run_dp_simulation(GRID_SIZE, p_spread_abs, p_death_abs, ANIMATION_STEPS)\n\n# --- Case 2: Active Phase (high spread probability) ---\np_spread_act = 0.1\np_death_act = 0.2\nhistory_act = run_dp_simulation(GRID_SIZE, p_spread_act, p_death_act, ANIMATION_STEPS)\n\n# --- Create Animation ---\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 6))\n\ndef update(frame):\n    ax1.clear()\n    ax1.imshow(history_abs[frame], cmap='hot', vmin=0, vmax=1)\n    ax1.set_title(f'Absorbing Phase (p_spread={p_spread_abs})', fontsize=12)\n    ax1.set_xticks([])\n    ax1.set_yticks([])\n\n    ax2.clear()\n    ax2.imshow(history_act[frame], cmap='hot', vmin=0, vmax=1)\n    ax2.set_title(f'Active Phase (p_spread={p_spread_act})', fontsize=12)\n    ax2.set_xticks([])\n    ax2.set_yticks([])\n\n    fig.suptitle(f'2D Directed Percolation Simulation (Step {frame})', fontsize=16)\n\n# --- Generate and save the animation ---\nani = FuncAnimation(fig, update, frames=ANIMATION_STEPS, interval=50)\nani.save(\"dp_lattice_simulation.gif\", writer=PillowWriter(fps=20))\nplt.show()\n</code></pre> <p></p> <p>\u5de6\u56fe (\u5438\u6536\u76f8) :\u4f20\u64ad\u6982\u7387\u8f83\u4f4e\u3002\u521d\u59cb\u7684\u6d3b\u8dc3\u56e2\u7c07(\u4eae\u9ec4\u8272)\u867d\u7136\u5728\u65e9\u671f\u6709\u6240\u6269\u5f20,\u4f46\u6b7b\u4ea1\u7684\u901f\u7387\u8d85\u8fc7\u4e86\u4f20\u64ad\u7684\u901f\u7387\u3002\u6700\u7ec8,\u6240\u6709\u6d3b\u8dc3\u70b9\u90fd\u6d88\u5931\u4e86,\u7cfb\u7edf\u8fdb\u5165\u4e86\u5168\u9ed1\u7684\u3001\u9759\u6b62\u7684\u5438\u6536\u6001\u3002</p> <p>\u53f3\u56fe (\u6d3b\u8dc3\u76f8) :\u4f20\u64ad\u6982\u7387\u8f83\u9ad8\u3002\u521d\u59cb\u7684\u6d3b\u8dc3\u56e2\u7c07\u6210\u529f\u5730\u5411\u5916\u8513\u5ef6,\u5f62\u6210\u4e86\u4e00\u4e2a\u6301\u7eed\u5b58\u5728\u3001\u4e0d\u65ad\u53d8\u5316\u7684\u52a8\u6001\u6591\u56fe\u3002\u5c3d\u7ba1\u5c40\u90e8\u6709\u751f\u6709\u706d,\u4f46\u6574\u4f53\u4e0a\u7cfb\u7edf\u4fdd\u6301\"\u6d3b\u7740\",\u8fd9\u4fbf\u662f\u6d3b\u8dc3\u76f8\u3002</p> <p>\u8fd9\u4e2a\u6a21\u62df\u663e\u793a\u4e86\u7cfb\u7edf\u5b58\u5728\u4e00\u4e2a\u4e34\u754c\u4f20\u64ad\u6982\u7387,\u8de8\u8d8a\u8fd9\u4e2a\u4e34\u754c\u70b9,\u7cfb\u7edf\u7684\u957f\u671f\u884c\u4e3a\u4f1a\u53d1\u751f\u8d28\u53d8\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#52-ii-gif","title":"5.2 \u4ee3\u7801\u5b9e\u8df5 II: \u5e73\u5747\u573a\u52a8\u529b\u5b66\u4e0e\u76f8\u6d41 (GIF\u52a8\u753b)","text":"<p>\u73b0\u5728,\u56de\u5230\u5e73\u5747\u573a\u7406\u8bba\u3002\u5b83\u5ffd\u7565\u4e86\u4e0a\u8ff0\u6a21\u62df\u4e2d\u7684\u6240\u6709\u7a7a\u95f4\u7ed3\u6784\u548c\u968f\u673a\u7ec6\u8282,\u53ea\u5173\u6ce8\u7cfb\u7edf\u6574\u4f53\u7684\u5e73\u5747\u5bc6\u5ea6 \\(n(t)\\)\u3002\u4e0b\u9762\u7684\u52a8\u753b.\u5728\u76f8\u7a7a\u95f4\u4e2d\u53ef\u89c6\u5316\u4e86\u5e73\u5747\u5bc6\u5ea6\u7684\u6f14\u5316,\u5c55\u793a\u5b8f\u89c2\u5c42\u9762\u4e0a\u7684\u52a8\u6001\u89c4\u5f8b\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import solve_ivp\nfrom matplotlib.animation import FuncAnimation, PillowWriter\n\n# --- Use dark background for plots ---\nplt.style.use('dark_background')\n\n# --- Parameter setup ---\nbeta1 = 1.0\nn0 = 1.0\nt_span = [0, 10]\nt_eval = np.linspace(t_span[0], t_span[1], 200)\n\ndef rate_equation(t, n, delta, beta1):\n    \"\"\"The mean-field rate equation for DP.\"\"\"\n    return delta * n - beta1 * n**2\n\n# --- Solve for the three cases ---\ndelta_active = 0.5\nsol_active = solve_ivp(rate_equation, t_span, [n0], args=(delta_active, beta1), t_eval=t_eval)\nn_act_theory = delta_active / beta1\n\ndelta_absorbing = -0.5\nsol_absorbing = solve_ivp(rate_equation, t_span, [n0], args=(delta_absorbing, beta1), t_eval=t_eval)\n\ndelta_critical = 0.0\nsol_critical = solve_ivp(rate_equation, t_span, [n0], args=(delta_critical, beta1), t_eval=t_eval)\n\n# --- Create Animation ---\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(16, 7))\n\ndef update_mean_field(frame):\n    # --- Clear canvases for new frame ---\n    ax1.clear()\n    ax2.clear()\n\n    # --- Panel 1: Density vs. Time ---\n    ax1.plot(sol_active.t, sol_active.y[0], label=f'Active Phase ($\\\\Delta={delta_active}$)', color='lime')\n    ax1.axhline(y=n_act_theory, linestyle='--', color='lime', alpha=0.7)\n    ax1.plot(sol_absorbing.t, sol_absorbing.y[0], label=f'Absorbing Phase ($\\\\Delta={delta_absorbing}$)', color='tomato')\n    ax1.plot(sol_critical.t, sol_critical.y[0], label=f'Critical Point ($\\\\Delta=0$)', color='cyan')\n\n    # Dynamic timeline\n    current_time = t_eval[frame]\n    ax1.axvline(current_time, color='yellow', linestyle='--', lw=1)\n\n    ax1.set_xlabel('Time $t$', fontsize=12)\n    ax1.set_ylabel('Density $n(t)$', fontsize=12)\n    ax1.set_title('Density Evolution over Time', fontsize=14)\n    ax1.legend()\n    ax1.set_xlim(t_span)\n    ax1.set_ylim(-0.1, 1.1)\n\n    # --- Panel 2: Phase Space Flow ---\n    n_range = np.linspace(-0.2, 1.2, 200)\n    ax2.axhline(0, color='gray', lw=0.5)\n\n    # Plot phase flow curves\n    ax2.plot(n_range, rate_equation(0, n_range, delta_active, beta1), color='lime')\n    ax2.plot(n_range, rate_equation(0, n_range, delta_absorbing, beta1), color='tomato')\n    ax2.plot(n_range, rate_equation(0, n_range, delta_critical, beta1), color='cyan')\n\n    # Plot fixed points\n    ax2.plot(0, 0, 'wo', markersize=8, label='Fixed Point')\n    ax2.plot(n_act_theory, 0, 'wo', markersize=8)\n\n    # Plot dynamic evolution points\n    ax2.plot(sol_active.y[0, frame], rate_equation(0, sol_active.y[0, frame], delta_active, beta1), 'o', color='lime', markersize=10)\n    ax2.plot(sol_absorbing.y[0, frame], rate_equation(0, sol_absorbing.y[0, frame], delta_absorbing, beta1), 'o', color='tomato', markersize=10)\n    ax2.plot(sol_critical.y[0, frame], rate_equation(0, sol_critical.y[0, frame], delta_critical, beta1), 'o', color='cyan', markersize=10)\n\n    ax2.set_xlabel('Density $n$', fontsize=12)\n    ax2.set_ylabel('Rate of Change $\\\\partial_t n$', fontsize=12)\n    ax2.set_title('Dynamical Flow in Phase Space', fontsize=14)\n    ax2.legend()\n    ax2.set_xlim(-0.2, 1.2)\n    ax2.set_ylim(-0.3, 0.3)\n\n    fig.suptitle(f'Mean-Field Dynamics of Directed Percolation (Time t={current_time:.2f})', fontsize=16)\n    plt.tight_layout(rect=[0, 0, 1, 0.95])\n\n# --- Generate and save the animation ---\nani_mf = FuncAnimation(fig, update_mean_field, frames=len(t_eval), interval=50)\nani_mf.save(\"dp_mean_field_dynamics.gif\", writer=PillowWriter(fps=20))\nplt.show()\n</code></pre> </p> <p>\u8fd9\u4e2a\u76f8\u7a7a\u95f4\u6d41\u52a8\u753b\u662f\u5bf92D\u683c\u5b50\u6a21\u62df\u4e2d\u5b8f\u89c2\u884c\u4e3a\u7684\u62bd\u8c61\u603b\u7ed3\u3002\u5c55\u793a\u4e86\u5e73\u5747\u573a\u7406\u8bba\u6240\u9884\u6d4b\u7684\u7cfb\u7edf\u547d\u8fd0:</p> <p>\u6d3b\u8dc3\u76f8 (\u7eff\u8272) :\u7cfb\u7edf\u5b58\u5728\u4e00\u4e2a\u7a33\u5b9a\u7684\u975e\u96f6\u5bc6\u5ea6\u4e0d\u52a8\u70b9,\u52a8\u529b\u5b66\u6d41\u5c06\u7cfb\u7edf\"\u63a8\"\u5411\u8fd9\u4e2a\u72b6\u6001\u3002</p> <p>\u5438\u6536\u76f8 (\u7ea2\u8272) :\u7cfb\u7edf\u552f\u4e00\u7684\u7a33\u5b9a\u4e0d\u52a8\u70b9\u662f\u5bc6\u5ea6\u4e3a\u96f6,\u6240\u6709\u521d\u59cb\u72b6\u6001\u90fd\u4f1a\"\u6d41\"\u5411\u706d\u7edd\u3002</p> <p>\u4e34\u754c\u70b9 (\u84dd\u8272) :\u7cfb\u7edf\u6f14\u5316\u5230\u96f6\u9644\u8fd1\u65f6,\u6062\u590d\u529b(\u5373\\(\\partial_t n\\))\u53d8\u5f97\u6781\u5c0f,\u5bfc\u81f4\u4e86\u4e34\u754c\u6162\u5316 \u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#53-iii","title":"5.3 \u4ee3\u7801\u5b9e\u8df5 III:\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u7684\u52a8\u6001\u6982\u7387\u5206\u5e03","text":"<p>\u5bf9\u4e8e\u968f\u673a\u8fc7\u7a0b,\u6211\u4eec\u66f4\u5173\u5fc3\u7684\u662f\u6574\u4e2a\u6982\u7387\u5206\u5e03\u7684\u6f14\u5316\u3002\u4ee5\u4e0b\u4ee3\u7801\u5c06\u6a21\u62df\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b,\u5e76\u52a8\u6001\u5c55\u793a\u5176\u6982\u7387\u5206\u5e03 \\(P(n, t)\\) \u5982\u4f55\u4ece\u4e00\u4e2a\u521d\u59cb\u7684\u786e\u5b9a\u72b6\u6001(\\(\\delta\\)\u5206\u5e03)\u6f14\u53d8\u4e3a\u6700\u7ec8\u7684\u5438\u6536\u6001(\u6240\u6709\u7c92\u5b50\u6b7b\u4ea1)\u3002</p> <p>\u8fd9\u4e2a\u52a8\u753b\u5c06\u76f4\u89c2\u5730\u5c55\u793a\u4e3b\u65b9\u7a0b\u7684\u89e3,\u5e76\u5c06\u5176\u4e0e\u6211\u4eec\u63a8\u5bfc\u51fa\u7684\u4e8c\u9879\u5206\u5e03\u7406\u8bba\u89e3\u8fdb\u884c\u5b9e\u65f6\u5bf9\u6bd4\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.special import comb\nfrom matplotlib.animation import FuncAnimation, PillowWriter\n\n# --- Use dark background for plots ---\nplt.style.use('dark_background')\n\n# --- Simulation Parameters ---\nN = 50                 # Initial number of particles\nlambda_rate = 0.1      # Per-capita death rate\nt_final = 30.0         # Total simulation time\nnum_trials = 20000     # Number of independent simulations\n\n# --- Run full Gillespie simulations to get all trajectories ---\nall_trajectories_n = []\nall_trajectories_t = []\n\n# This loop pre-calculates all data needed for the animation\nfor _ in range(num_trials):\n    n, t = N, 0.0\n    ns, ts = [n], [t]\n    while n &gt; 0:\n        total_rate = lambda_rate * n\n        # Draw time step from exponential distribution\n        dt = np.random.exponential(1.0 / total_rate)\n        t += dt\n        n -= 1 # Only death events\n        ns.append(n)\n        ts.append(t)\n    all_trajectories_n.append(np.array(ns))\n    all_trajectories_t.append(np.array(ts))\n\n# --- Create Animation ---\nfig, ax = plt.subplots(figsize=(12, 7))\nn_values = np.arange(0, N + 1)\n\n# Initialize plot elements\nbar_container = ax.bar(n_values, np.zeros(N + 1), width=0.8, label='Stochastic Simulation (Gillespie)', color='cyan', alpha=0.7)\nline, = ax.plot(n_values, np.zeros(N + 1), 'ro-', label='Exact Theory (Binomial Distribution)', markersize=5)\ntime_text = ax.text(0.75, 0.9, '', transform=ax.transAxes, fontsize=14, color='yellow')\n\ndef get_pop_at_time(t_point, traj_t, traj_n):\n    \"\"\"Helper function to find the population at a specific time from a trajectory.\"\"\"\n    idx = np.searchsorted(traj_t, t_point, side='right') - 1\n    return traj_n[idx]\n\ndef update_death_process(frame):\n    \"\"\"Update function for the animation.\"\"\"\n    current_time = frame * t_final / 100\n\n    # Get particle counts at the current time from all trajectories\n    pops_at_time_t = [get_pop_at_time(current_time, T, n) for T, n in zip(all_trajectories_t, all_trajectories_n)]\n\n    # Calculate simulated probability distribution\n    counts_sim, _ = np.histogram(pops_at_time_t, bins=np.arange(0, N + 2) - 0.5)\n    freq_sim = counts_sim / num_trials\n\n    # Update the bar chart heights\n    for count, rect in zip(freq_sim, bar_container.patches):\n        rect.set_height(count)\n\n    # Calculate theoretical probability distribution (Binomial)\n    p_survival = np.exp(-lambda_rate * current_time)\n    prob_theory = comb(N, n_values) * (p_survival**n_values) * ((1 - p_survival)**(N - n_values))\n\n    # Update the theoretical curve\n    line.set_ydata(prob_theory)\n\n    # Update time text\n    time_text.set_text(f'Time t = {current_time:.2f}')\n\n    # Dynamically adjust y-axis limit for better visibility\n    max_prob = max(np.max(freq_sim), np.max(prob_theory)) if freq_sim.size &gt; 0 else 0.1\n    ax.set_ylim(0, max_prob * 1.15)\n\n    return bar_container.patches + [line, time_text]\n\n# --- Setup plot aesthetics ---\nax.set_xlabel('Number of Remaining Particles $n$', fontsize=12)\nax.set_ylabel('Probability $P(n, t)$', fontsize=12)\nax.set_title(f'Probability Distribution Evolution for Linear Death Process ($N_0={N}$)', fontsize=16)\nax.legend()\nax.set_xlim(-1, N + 1)\n\n# --- Generate and save the animation ---\nani_death = FuncAnimation(fig, update_death_process, frames=100, interval=100, blit=True)\nani_death.save(\"linear_death_distribution.gif\", writer=PillowWriter(fps=10))\nplt.show()\n</code></pre> </p> <p>\u8fd9\u4e2a\u52a8\u753b\u5c55\u793a\u4e86\u4e3b\u65b9\u7a0b\u6240\u63cf\u8ff0\u7684\u6838\u5fc3\u8fc7\u7a0b\u2014\u2014\u6982\u7387\u5206\u5e03\u7684\u6f14\u5316\u3002 \u521d\u59cb\u72b6\u6001:\u5728 \\(t=0\\) \u65f6,\u6982\u7387\u5206\u5e03\u662f\u4e00\u4e2a\u5c16\u9510\u7684\u5cf0(\\(\\delta\\)\u51fd\u6570),\u6240\u6709\u6982\u7387\u90fd\u96c6\u4e2d\u5728\u521d\u59cb\u7c92\u5b50\u6570 \\(N=50\\) \u5904\u3002</p> <p>\u6f14\u5316\u8fc7\u7a0b:\u968f\u7740\u65f6\u95f4\u63a8\u79fb,\u8fd9\u4e2a\u6982\u7387\u5cf0\u5f00\u59cb\u5411\u5de6\u79fb\u52a8(\u5e73\u5747\u7c92\u5b50\u6570\u51cf\u5c11)\u5e76\u9010\u6e10\u5c55\u5bbd(\u968f\u673a\u6027\u5bfc\u81f4\u7ed3\u679c\u7684\u4e0d\u786e\u5b9a\u6027\u589e\u52a0)\u3002\u53ef\u4ee5\u770b\u5230\u6982\u7387\u662f\u5982\u4f55\u4ece\u9ad8\u7c92\u5b50\u6570\u72b6\u6001\"\u6d41\u52a8\"\u5230\u4f4e\u7c92\u5b50\u6570\u72b6\u6001\u7684\u3002</p> <p>\u7406\u8bba\u4e0e\u6a21\u62df\u7684\u543b\u5408:\u5728\u52a8\u753b\u7684\u6bcf\u4e00\u6b65,\u7531\u4e0a\u4e07\u6b21\u968f\u673a\u6a21\u62df\u7edf\u8ba1\u51fa\u7684\u67f1\u72b6\u56fe(\u9752\u8272)\u90fd\u4e0e\u6211\u4eec\u7528\u8c31\u65b9\u6cd5\u63a8\u5bfc\u51fa\u7684\u4e8c\u9879\u5206\u5e03\u7406\u8bba\u89e3(\u7ea2\u8272\u66f2\u7ebf)\u5b8c\u7f8e\u543b\u5408\u3002\u8fd9\u5f3a\u6709\u529b\u5730\u8bc1\u660e\u4e86\u7406\u8bba\u7684\u6b63\u786e\u6027\u3002</p> <p>\u8d8b\u5411\u5438\u6536\u6001:\u5f53\u65f6\u95f4\u8db3\u591f\u957f\u65f6,\u6574\u4e2a\u6982\u7387\u5206\u5e03\u6700\u7ec8\u4f1a\u5b8c\u5168\u6c47\u96c6\u5230 \\(n=0\\) \u8fd9\u4e2a\u5438\u6536\u6001\u4e0a,\u5bf9\u5e94\u4e8e\u79cd\u7fa4\u7684\u5b8c\u5168\u706d\u7edd\u3002</p> <p>\u901a\u8fc7\u8fd9\u4e2a\u52a8\u6001\u53ef\u89c6\u5316,\u6211\u4eec\u4e0d\u518d\u662f\u89c2\u5bdf\u5355\u6761\u968f\u673a\u8f68\u8ff9,\u800c\u662f\u9e1f\u77b0\u4e86\u6574\u4e2a\u968f\u673a\u8fc7\u7a0b\u7684\u7cfb\u7efc\u884c\u4e3a,\u8fd9\u6b63\u662f\u4e3b\u65b9\u7a0b\u548c\u8c31\u65b9\u6cd5\u6240\u8981\u63cf\u8ff0\u7684\u7269\u7406\u73b0\u5b9e\u3002</p>"},{"location":"zh/notes/34.%20%E6%9C%89%E5%90%91%E6%B8%97%E6%B5%81%E3%80%81%E5%90%B8%E6%94%B6%E6%80%81%E4%B8%8E%E8%B0%B1%E6%96%B9%E6%B3%95/#_2","title":"\u603b\u7ed3:\u8fc8\u5411\u975e\u7ebf\u6027\u968f\u673a\u573a\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u6df1\u5165\u63a2\u8ba8\u4e86\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u4e2d\u7684\u4e24\u4e2a\u6838\u5fc3\u4e3b\u9898:\u4e00\u662f\u7269\u7406\u6a21\u578b,\u4e8c\u662f\u6570\u5b66\u65b9\u6cd5\u3002\u901a\u8fc7\u5c06\u7406\u8bba\u4e0e\u4ee3\u7801\u5b9e\u8df5\u76f8\u7ed3\u5408,\u52a0\u6df1\u4e86\u5bf9\u8fd9\u4e9b\u6982\u5ff5\u7684\u7406\u89e3\u3002</p> <ol> <li> <p>\u5438\u6536\u6001\u76f8\u53d8\u7684\u7269\u7406\u5b66: \u901a\u8fc7\u5bf9\u6709\u5411\u6e17\u6d41(DP)\u6a21\u578b\u7684\u5e73\u5747\u573a\u5206\u6790,\u63ed\u793a\u4e86\u4e00\u7c7b\u91cd\u8981\u7684\u975e\u5e73\u8861\u76f8\u53d8\u2014\u2014\u5438\u6536\u6001\u76f8\u53d8\u7684\u57fa\u672c\u7279\u5f81\u3002\u5176\u5173\u952e\u7269\u7406\u73b0\u8c61\u5305\u62ec\u5b58\u5728\u4e00\u4e2a\u4ece\u6d3b\u8dc3\u76f8\u5230\u5438\u6536\u76f8\u7684\u8fde\u7eed\u76f8\u53d8\u70b9,\u4ee5\u53ca\u5728\u4e34\u754c\u70b9\u9644\u8fd1\u8868\u73b0\u51fa\u7684\u4e34\u754c\u6162\u5316 (Critical Slowing Down) \u548c\u5e42\u5f8b\u52a8\u529b\u5b66\u884c\u4e3a (Power-Law Dynamics) \u3002\u66f4\u91cd\u8981\u7684\u662f,DP\u666e\u9002\u7c7b\u731c\u60f3\u7684\u63d0\u51fa,\u6697\u793a\u4e86\u8fd9\u7c7b\u76f8\u53d8\u80cc\u540e\u5b58\u5728\u6df1\u523b\u7684\u666e\u9002\u89c4\u5f8b,\u8fd9\u4fc3\u4f7f\u7269\u7406\u5b66\u5bb6\u5bfb\u6c42\u8d85\u8d8a\u5e73\u5747\u573a\u7406\u8bba\u7684\u3001\u80fd\u591f\u63cf\u8ff0\u6da8\u843d\u7684\u66f4\u7cbe\u786e\u7406\u8bba\u3002</p> </li> <li> <p>\u4e3b\u65b9\u7a0b\u7684\u6570\u5b66\u65b9\u6cd5 : \u4e3a\u4e86\u5904\u7406\u79bb\u6563\u968f\u673a\u8fc7\u7a0b,\u5f15\u5165\u4e86\u4e3b\u65b9\u7a0b\u8fd9\u4e00\u57fa\u672c\u5de5\u5177\u3002\u5bf9\u4e8e\u50cf\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u8fd9\u6837\u7684\u7b80\u5355\u7ebf\u6027\u4e3b\u65b9\u7a0b,\u672c\u8bb2\u5c55\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u751f\u6210\u51fd\u6570 (Generating Function) \u548c\u8c31\u65b9\u6cd5 (Spectral Method) (\u7279\u522b\u662f\u501f\u9274\u91cf\u5b50\u529b\u5b66\u7684\u7b97\u7b26\u4ee3\u6570)\u83b7\u5f97\u5176\u7cbe\u786e\u89e3\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u4ec5\u4f18\u96c5,\u800c\u4e14\u5176\u7ed3\u679c\u5177\u6709\u6e05\u6670\u7684\u7269\u7406\u8be0\u91ca,\u5b8c\u7f8e\u5730\u8fde\u63a5\u4e86\u62bd\u8c61\u7684\u6570\u5b66\u63a8\u5bfc\u4e0e\u5e95\u5c42\u7684\u968f\u673a\u4e8b\u4ef6\u3002</p> </li> </ol> <p>\u7136\u800c,\u8fd9\u8282\u8bfe\u4e5f\u63ed\u793a\u4e86\u672a\u6765\u7684\u6311\u6218\u3002\u8c31\u65b9\u6cd5\u4e4b\u6240\u4ee5\u80fd\u6210\u529f\u5e94\u7528\u4e8e\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b,\u5173\u952e\u5728\u4e8e\u5176\u54c8\u5bc6\u987f\u7b97\u7b26 \\(\\mathcal{H}\\) \u662f\u7ebf\u6027\u7684(\u5728 \\(\\frac{\\partial}{\\partial x}\\) \u4e0a\u662f\u4e00\u9636\u7684)\u3002\u5bf9\u4e8e\u50cf\u6709\u5411\u6e17\u6d41\u8fd9\u6837\u5305\u542b\u975e\u7ebf\u6027\u9879(\u5982 \\(2A \\to A\\) \u5bf9\u5e94\u4e8e \\(n^2\\) \u7684\u9879)\u7684\u7cfb\u7edf,\u5176\u4e3b\u65b9\u7a0b\u5c06\u5bfc\u81f4\u4e00\u4e2a\u5728\u751f\u6210\u51fd\u6570\u7a7a\u95f4\u4e2d\u5305\u542b\u9ad8\u9636\u5bfc\u6570(\u5982 \\(\\frac{\\partial^2}{\\partial x^2}\\))\u7684\u3001\u66f4\u590d\u6742\u7684\u7b97\u7b26,\u4f7f\u5f97\u8c31\u65b9\u6cd5\u901a\u5e38\u96be\u4ee5\u76f4\u63a5\u5e94\u7528\u3002</p> <p>\u5bf9\u4e8e\u8fde\u7eed\u53d8\u91cf\u7cfb\u7edf,\u4ece\u6717\u4e4b\u4e07\u65b9\u7a0b\u5230\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b,\u518d\u5230\u8def\u5f84\u79ef\u5206,\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e00\u6761\u6210\u719f\u7684\u8def\u5f84\u3002\u5bf9\u4e8e\u79bb\u6563\u53d8\u91cf\u7cfb\u7edf,\u4ece\u4e3b\u65b9\u7a0b\u51fa\u53d1,\u867d\u7136\u53ef\u4ee5\u901a\u8fc7 Kramers-Moyal \u5c55\u5f00\u5c06\u5176\u8fd1\u4f3c\u4e3a\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b,\u518d\u6784\u5efa\u8def\u5f84\u79ef\u5206,\u4f46\u8fd9\u6761\u8fd1\u4f3c\u8def\u5f84\u4f1a\u4e22\u5931\u53d8\u91cf\u7684\u79bb\u6563\u6027\u4fe1\u606f,\u4e14\u4e0d\u603b\u662f\u9002\u7528\u4e8e\u5f3a\u566a\u58f0\u6216\u8fdc\u79bb\u5e73\u8861\u7684\u7cfb\u7edf\u3002</p> <p>\u4e00\u4e2a\u66f4\u6839\u672c\u3001\u66f4\u5f3a\u5927\u7684\u65b9\u6cd5\u662f:\u76f4\u63a5\u4ece\u4e3b\u65b9\u7a0b\u51fa\u53d1,\u4e3a\u79bb\u6563\u968f\u673a\u8fc7\u7a0b\u6784\u5efa\u8def\u5f84\u79ef\u5206\u8868\u793a\u3002\u8fd9\u6b63\u662f\u4e0b\u4e00\u8bb2\u7684\u4e3b\u9898\u3002\u5c4a\u65f6\u5c06\u4ecb\u7ecd\u4e00\u79cd\u540d\u4e3aDoi-Peliti \u8def\u5f84\u79ef\u5206\u7684\u6280\u672f,\u5b83\u80fd\u591f\u5c06\u79bb\u6563\u4e3b\u65b9\u7a0b\u76f4\u63a5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u8fde\u7eed\u573a\u8bba\u7684\u6709\u6548\u4f5c\u7528\u91cf\u3002\u8fd9\u4e2a\u6846\u67b6\u4e0d\u4ec5\u80fd\u591f\u81ea\u7136\u5730\u5904\u7406\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528,\u8fd8\u80fd\u7cfb\u7edf\u5730\u8ba1\u5165\u6da8\u843d\u6548\u5e94,\u662f\u4f7f\u7528\u91cd\u6574\u5316\u7fa4 (Renormalization Group) \u7b49\u73b0\u4ee3\u573a\u8bba\u5de5\u5177\u7814\u7a76\u6709\u5411\u6e17\u6d41\u53ca\u5176\u4ed6\u975e\u5e73\u8861\u4e34\u754c\u73b0\u8c61\u7684\u7406\u8bba\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/","title":"\u5f15\u8a00:\u8d85\u8d8a\u8c31\u65b9\u6cd5 \u2014 \u4e3a\u4f55\u9700\u8981\u573a\u8bba?","text":"<p>\u4e0a\u4e00\u8bb2(\u7b2c34\u8bb2)\u63a2\u8ba8\u4e86\u6709\u5411\u6e17\u6d41(Directed Percolation)\u8fd9\u4e00\u5178\u578b\u7684\u3001\u5177\u6709\u5438\u6536\u6001\u76f8\u53d8\u7684\u975e\u5e73\u8861\u7cfb\u7edf\u3002\u901a\u8fc7\u5206\u6790\u5176\u4e3b\u65b9\u7a0b\u7684\u8f6c\u79fb\u77e9\u9635 \\(\\mathcal{W}\\),\u8c31\u65b9\u6cd5\u88ab\u7528\u6765\u7406\u89e3\u7cfb\u7edf\u7684\u957f\u65f6\u95f4\u884c\u4e3a\u3002\u8c31\u65b9\u6cd5\u7684\u6838\u5fc3\u5728\u4e8e\u6c42\u89e3\u8f6c\u79fb\u77e9\u9635\u7684\u672c\u5f81\u503c\u548c\u672c\u5f81\u77e2\u3002\u7279\u522b\u662f,\u96f6\u672c\u5f81\u503c\u5bf9\u5e94\u7684\u7a33\u6001\u63ed\u793a\u4e86\u7cfb\u7edf\u7684\u5438\u6536\u6001\u7279\u6027,\u800c\u5f53\u7cfb\u7edf\u53c2\u6570(\u5982\u7c92\u5b50\u4ea7\u751f\u7387)\u8de8\u8d8a\u4e34\u754c\u70b9\u65f6,\u672c\u5f81\u8c31\u4e2d\u51fa\u73b0\u4e00\u4e2a\u8d8b\u8fd1\u4e8e\u96f6\u7684\"\u6162\"\u6a21\u5f0f,\u5176\u5f1b\u8c6b\u65f6\u95f4\u53d1\u6563,\u6807\u5fd7\u7740\u76f8\u53d8\u7684\u53d1\u751f\u3002</p> <p>\u7136\u800c,\u8c31\u65b9\u6cd5\u867d\u7136\u5f3a\u5927,\u5374\u6709\u5176\u56fa\u6709\u7684\u5c40\u9650\u6027\u3002\u5bf9\u4e8e\u5305\u542b\u591a\u79cd\u7c92\u5b50\u3001\u591a\u79cd\u53cd\u5e94\u901a\u9053\u6216\u590d\u6742\u76f8\u4e92\u4f5c\u7528\u7684\u7cfb\u7edf,\u5176\u72b6\u6001\u7a7a\u95f4\u7ef4\u5ea6\u4f1a\u5448\u6307\u6570\u7ea7\u81a8\u80c0\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b,\u8f6c\u79fb\u77e9\u9635 \\(\\mathcal{W}\\) \u4f1a\u53d8\u5f97\u5f02\u5e38\u5de8\u5927\u548c\u590d\u6742,\u76f4\u63a5\u5bf9\u5176\u8fdb\u884c\u5bf9\u89d2\u5316\u6216\u6c42\u89e3\u5176\u5b8c\u6574\u7684\u672c\u5f81\u8c31\u5728\u5206\u6790\u4e0a\u548c\u8ba1\u7b97\u4e0a\u90fd\u53d8\u5f97\u4e0d\u5207\u5b9e\u9645\u3002\u66f4\u6839\u672c\u7684\u662f,\u8c31\u65b9\u6cd5\u867d\u7136\u80fd\u6307\u8ba4\u51fa\u4e34\u754c\u70b9\u6162\u5316\u6a21\u5f0f\u7684\u5b58\u5728,\u4f46\u5b83\u5728\u7cfb\u7edf\u5730\u5904\u7406\u6da8\u843d\u3001\u7a7a\u95f4\u5173\u8054\u4ee5\u53ca\u63a8\u5bfc\u4e34\u754c\u6307\u6570\u7b49\u666e\u9002\u884c\u4e3a\u65b9\u9762\u663e\u5f97\u529b\u4e0d\u4ece\u5fc3\u3002\u4e34\u754c\u73b0\u8c61\u7684\u7269\u7406\u672c\u8d28\u5728\u4e8e\u6da8\u843d\u7684\u96c6\u4f53\u884c\u4e3a,\u800c\u8c31\u65b9\u6cd5\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u7ebf\u6027\u5206\u6790\u5de5\u5177,\u96be\u4ee5\u6355\u6349\u8fd9\u4e9b\u975e\u7ebf\u6027\u7684\u3001\u8de8\u8d8a\u6240\u6709\u5c3a\u5ea6\u7684\u590d\u6742\u76f8\u4e92\u4f5c\u7528\u3002</p> <p>\u56e0\u6b64,\u4e3a\u4e86\u514b\u670d\u8fd9\u4e9b\u56f0\u96be,\u9700\u8981\u4e00\u4e2a\u66f4\u5f3a\u5927\u3001\u66f4\u5177\u6269\u5c55\u6027\u7684\u7406\u8bba\u6846\u67b6\u3002\u8fd9\u4e2a\u6846\u67b6\u5e94\u8be5\u80fd\u591f\u4ece\u5fae\u89c2\u7684\u968f\u673a\u89c4\u5219\u51fa\u53d1,\u7cfb\u7edf\u5730\u63a8\u5bfc\u51fa\u5b8f\u89c2\u7684\u3001\u666e\u9002\u7684\u7269\u7406\u884c\u4e3a,\u5c24\u5176\u662f\u5728\u4e34\u754c\u70b9\u9644\u8fd1\u3002</p> <p>\u8fd9\u8282\u8bfe\u7684\u76ee\u6807\u6b63\u662f\u6784\u5efa\u8fd9\u6837\u4e00\u4e2a\u6846\u67b6,\u5373\u4e3a\u7531\u4e3b\u65b9\u7a0b(Master Equation)\u63cf\u8ff0\u7684\u901a\u7528\u968f\u673a\u8fc7\u7a0b\u63a8\u5bfc\u51fa\u4e00\u4e2a\u8def\u5f84\u79ef\u5206(Path Integral)\u8868\u793a\u3002\u8fd9\u4e00\u65b9\u6cd5\u8bba\u7684\u8f6c\u53d8\u610f\u4e49\u6df1\u8fdc:\u5b83\u5c06\u4e00\u4e2a\u6c42\u89e3\u5927\u89c4\u6a21\u8026\u5408\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4(\u5373\u4e3b\u65b9\u7a0b)\u7684\"\u5fae\u5206\"\u6f14\u5316\u95ee\u9898,\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5bf9\u7cfb\u7edf\u6240\u6709\u53ef\u80fd\"\u5386\u53f2\"\u8fdb\u884c\u6c42\u548c\u7684\u7edf\u8ba1\u573a\u8bba\u95ee\u9898\u3002</p> <p>\u8fd9\u79cd\u8f6c\u53d8\u7684\u4f18\u52bf\u5728\u4e8e,\u53ef\u4ee5\u501f\u9274\u548c\u5e94\u7528\u5728\u91cf\u5b50\u573a\u8bba\u548c\u5e73\u8861\u6001\u7edf\u8ba1\u7269\u7406\u4e2d\u53d1\u5c55\u8d77\u6765\u7684\u6210\u719f\u5de5\u5177,\u4f8b\u5982\u978d\u70b9\u8fd1\u4f3c(\u5bf9\u5e94\u4e8e\u5e73\u5747\u573a\u7406\u8bba)\u3001\u5fae\u6270\u5c55\u5f00(\u8d39\u66fc\u56fe)\u3001\u4ee5\u53ca\u91cd\u6574\u5316\u7fa4\u7b49\u3002\u8fd9\u4e9b\u5de5\u5177\u6b63\u662f\u4e3a\u5904\u7406\u7531\u5927\u91cf\u81ea\u7531\u5ea6\u76f8\u4e92\u4f5c\u7528\u4ea7\u751f\u7684\u96c6\u4f53\u884c\u4e3a\u548c\u4e34\u754c\u73b0\u8c61\u800c\u8bbe\u8ba1\u7684\u3002</p> <p>\u8fd9\u4e2a\u601d\u8def\u5e76\u975e\u51ed\u7a7a\u800c\u6765,\u5b83\u4e0e\u5148\u524d\u8bfe\u7a0b\u4e2d\u5efa\u7acb\u7684\u7406\u8bba\u6846\u67b6\u5f62\u6210\u4e86\u5b8c\u7f8e\u7684\u5e73\u884c\u3002\u5728\u7b2c31\u8bb2\u548c\u7b2c32\u8bb2\u4e2d,\u5df2\u7ecf\u4e3a\u7531\u6717\u4e4b\u4e07\u65b9\u7a0b(Langevin Equation)\u63cf\u8ff0\u7684\u8fde\u7eed\u968f\u673a\u8fc7\u7a0b\u5efa\u7acb\u4e86\u573a\u8bba\u6846\u67b6,\u5373\u9a6c\u4e01-\u897f\u8d3e-\u7f57\u65af(Martin-Siggia-Rose, MSR)\u6216\u6768\u68ee-\u5fb7\u591a\u7c73\u5c3c\u897f\u65af(Janssen-De Dominicis, JDD)\u54cd\u5e94\u6cdb\u51fd\u3002\u8be5\u7406\u8bba\u63cf\u8ff0\u7684\u662f\u72b6\u6001\u53d8\u91cf\u8fde\u7eed\u53d8\u5316\u4e14\u53d7\u5230\u9ad8\u65af\u767d\u566a\u58f0\u9a71\u52a8\u7684\u7cfb\u7edf\u3002</p> <p>\u7136\u800c,\u8bb8\u591a\u7269\u7406\u3001\u5316\u5b66\u548c\u751f\u7269\u7cfb\u7edf,\u5176\u57fa\u672c\u8fc7\u7a0b\u662f\u79bb\u6563\u7684\"\u751f\"\u4e0e\"\u6b7b\"\u6216\u72b6\u6001\u7684\u8df3\u8dc3,\u4f8b\u5982\u5316\u5b66\u53cd\u5e94\u4e2d\u7684\u5206\u5b50\u6570\u53d8\u5316\u3001\u6d41\u884c\u75c5\u4f20\u64ad\u4e2d\u7684\u611f\u67d3\u4eba\u6570\u3001\u6216\u57fa\u56e0\u8868\u8fbe\u4e2d\u7684\u86cb\u767d\u8d28\u6570\u91cf\u3002\u8fd9\u4e9b\u8fc7\u7a0b\u7684\u81ea\u7136\u8bed\u8a00\u662f\u4e3b\u65b9\u7a0b,\u800c\u975e\u6717\u4e4b\u4e07\u65b9\u7a0b\u3002\u56e0\u6b64,\u8fd9\u8282\u8bfe\u7684\u4efb\u52a1\u5c31\u662f\u4e3a\u8fd9\u4e9b\u79bb\u6563\u7684\u3001\u57fa\u4e8e\u8ba1\u6570\u7684\u968f\u673a\u8fc7\u7a0b\u5efa\u7acb\u4e00\u4e2a\u4e0e\u4e4b\u5e73\u884c\u7684\u573a\u8bba\u5f62\u5f0f,\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u529f\u80fd\u4e0a\u4e0eJDD\u6cdb\u51fd\u7b49\u4ef7\u7684\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf(Action),\u4ece\u800c\u5b8c\u6210\u968f\u673a\u8fc7\u7a0b\u573a\u8bba\u5316\u7406\u8bba\u7684\u53e6\u4e00\u5757\u91cd\u8981\u62fc\u56fe\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#1","title":"1. \u6cca\u677e\u8868\u793a:\u4ece\u79bb\u6563\u7c92\u5b50\u5230\u8fde\u7eed\u573a","text":"<p>\u4ece\u6717\u4e4b\u4e07\u65b9\u7a0b\u5230\u8def\u5f84\u79ef\u5206\u7684\u9053\u8def,\u662f\u4e3a\u72b6\u6001\u53d8\u91cf\u8fde\u7eed\u7684\u7cfb\u7edf\u94fa\u8bbe\u7684\u3002\u7136\u800c,\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u7684\u662f\u7c92\u5b50\u6570 \\(n\\) \u8fd9\u6837\u79bb\u6563\u7684\u3001\u53d6\u6574\u6570\u503c\u7684\u968f\u673a\u53d8\u91cf\u3002\u573a\u8bba\u5f3a\u5927\u7684\u5fae\u79ef\u5206\u5de5\u5177(\u5982\u6cdb\u51fd\u5bfc\u6570\u3001\u6cdb\u51fd\u79ef\u5206)\u65e0\u6cd5\u76f4\u63a5\u5e94\u7528\u4e8e\u79bb\u6563\u7a7a\u95f4\u3002\u56e0\u6b64,\u5728\u6784\u5efa\u8def\u5f84\u79ef\u5206\u4e4b\u524d,\u5fc5\u987b\u9996\u5148\u89e3\u51b3\u8fd9\u4e2a\u6839\u672c\u6027\u7684\u969c\u788d:\u5982\u4f55\u5c06\u79bb\u6563\u7684\u7c92\u5b50\u6570\u7a7a\u95f4,\u6620\u5c04\u5230\u4e00\u4e2a\u7b49\u6548\u7684\u8fde\u7eed\u573a\u7a7a\u95f4\u4e2d\u3002\u8fd9\u5c0f\u8282\u5f15\u5165\u7684\u6cca\u677e\u8868\u793a(Poisson Representation) ,\u6b63\u662f\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u7684\u5173\u952e\u6570\u5b66\u6865\u6881\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#11","title":"1.1 \u4e3b\u65b9\u7a0b:\u968f\u673a\u8fc7\u7a0b\u7684\u8d77\u70b9","text":"<p>\u8003\u8651\u4e00\u4e2a\u5145\u5206\u6df7\u5408(well-mixed)\u7684\u7cfb\u7edf,\u5176\u72b6\u6001\u7531\u4e00\u4e2a\u5411\u91cf \\(\\vec{n}\\) \u63cf\u8ff0,\u5176\u4e2d\u5206\u91cf \\(n_i\\) \u4ee3\u8868\u7b2c \\(i\\) \u79cd\u7c92\u5b50\u7684\u6570\u91cf\u3002\u7cfb\u7edf\u7684\u6982\u7387\u5206\u5e03 \\(P(\\vec{n},t)\\) \u968f\u65f6\u95f4\u7684\u6f14\u5316\u7531\u4e3b\u65b9\u7a0b(Master Equation)\u51b3\u5b9a:</p> \\[ \\partial_t P(\\vec{n}, t) = \\sum_{\\vec{n}' \\neq \\vec{n}} \\left[ W(\\vec{n}|\\vec{n}')P(\\vec{n}',t) - W(\\vec{n}'|\\vec{n})P(\\vec{n},t) \\right] \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u662f\u6982\u7387\u5b88\u6052\u7684\u4f53\u73b0\u3002\u5de6\u4fa7\u662f\u72b6\u6001 \\(\\vec{n}\\) \u7684\u6982\u7387\u968f\u65f6\u95f4\u7684\u53d8\u5316\u7387\u3002\u53f3\u4fa7\u662f\u6d41\u5165\u548c\u6d41\u51fa\u8be5\u72b6\u6001\u7684\u603b\u6982\u7387\u6d41,\u7531\u4e24\u90e8\u5206\u7ec4\u6210:</p> <p>\u589e\u76ca\u9879 (Gain Term) : \\(\\sum_{\\vec{n}'} W(\\vec{n}|\\vec{n}')P(\\vec{n}',t)\\),\u4ee3\u8868\u4ece\u6240\u6709\u5176\u4ed6\u72b6\u6001 \\(\\vec{n}'\\) \u8dc3\u8fc1\u5230\u72b6\u6001 \\(\\vec{n}\\) \u7684\u603b\u6982\u7387\u6d41\u3002\\(W(\\vec{n}|\\vec{n}')\\) \u662f\u7cfb\u7edf\u4ece\u72b6\u6001 \\(\\vec{n}'\\) \u8dc3\u8fc1\u5230\u72b6\u6001 \\(\\vec{n}\\) \u7684\u8f6c\u79fb\u901f\u7387\u3002</p> <p>\u635f\u5931\u9879 (Loss Term) : \\(-\\sum_{\\vec{n}'} W(\\vec{n}'|\\vec{n})P(\\vec{n},t)\\),\u4ee3\u8868\u4ece\u72b6\u6001 \\(\\vec{n}\\) \u8dc3\u8fc1\u5230\u4efb\u4f55\u5176\u4ed6\u72b6\u6001 \\(\\vec{n}'\\) \u7684\u603b\u6982\u7387\u6d41\u3002</p> <p>\u4e3a\u4e86\u4e66\u5199\u65b9\u4fbf,\u53ef\u4ee5\u5c06\u5176\u5199\u6210\u66f4\u7d27\u51d1\u7684\u77e9\u9635\u5f62\u5f0f:</p> \\[ \\frac{d}{dt}|\\vec{P}(t)\\rangle = \\hat{Q} |\\vec{P}(t)\\rangle \\] <p>\u8fd9\u91cc \\(|\\vec{P}(t)\\rangle\\) \u662f\u4e00\u4e2a\u5217\u5411\u91cf,\u5176\u5206\u91cf\u4e3a\u5728\u6240\u6709\u53ef\u80fd\u72b6\u6001 \\(\\vec{n}\\) \u4e0a\u7684\u6982\u7387 \\(P(\\vec{n},t)\\),\u800c \\(\\hat{Q}\\) \u5219\u662f\u8f6c\u79fb\u77e9\u9635(\u5373\u7b2c7\u8bb2\u4e2d\u5f15\u5165\u7684Q\u77e9\u9635)\u3002</p> <p>\u4e3a\u7b80\u5316\u540e\u7eed\u63a8\u5bfc,\u9996\u5148\u8003\u8651\u53ea\u542b\u6709\u4e00\u79cd\u7c92\u5b50\u7684\u7cfb\u7edf,\u56e0\u6b64\u72b6\u6001\u5411\u91cf \\(\\vec{n}\\) \u7b80\u5316\u4e3a\u6807\u91cf \\(n\\)\u3002\u5173\u6ce8\u7684\u6838\u5fc3\u7269\u7406\u91cf\u662f\u6761\u4ef6\u6982\u7387 \\(p(n,t|n_0,t_0)\\),\u5373\u5728 \\(t_0\\) \u65f6\u523b\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001 \\(n_0\\) \u7684\u6761\u4ef6\u4e0b,\u5728 \\(t\\) \u65f6\u523b\u53d1\u73b0\u5176\u5904\u4e8e\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#12","title":"1.2 \u79bb\u6563\u6027\u7684\u6311\u6218\u4e0e\u6cca\u677e\u53d8\u6362\u7684\u5f15\u5165","text":"<p>\u4e3b\u65b9\u7a0b\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u65e0\u9650\u7ef4\u7684\u3001\u8026\u5408\u7684\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4,\u5176\u72b6\u6001\u53d8\u91cf \\(n\\) \u662f\u4e00\u4e2a\u79bb\u6563\u7684\u6574\u6570\u3002\u8fd9\u6784\u6210\u4e86\u76f4\u63a5\u5e94\u7528\u573a\u8bba\u65b9\u6cd5\u7684\u6839\u672c\u969c\u788d\u3002\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\"\u67b6\u6865\",\u5c06\u8fd9\u4e2a\u79bb\u6563\u7684\u7c92\u5b50\u6570\u7a7a\u95f4\u6620\u5c04\u5230\u4e00\u4e2a\u8fde\u7eed\u7684\u573a\u7a7a\u95f4\u4e2d\u3002</p> <p>\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u5173\u952e\u6280\u5de7\u662f\u6cca\u677e\u8868\u793a(Poisson Representation) \u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f,\u4e0d\u518d\u76f4\u63a5\u5904\u7406\u5355\u4e2a\u7684\u6761\u4ef6\u6982\u7387 \\(p(n,t|n_0,t_0)\\),\u800c\u662f\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61 \\(p(n,t|x,t_0)\\)\u3002\u8fd9\u4e2a\u65b0\u5bf9\u8c61\u662f\u901a\u8fc7\u5bf9\u4e00\u4e2a\u7279\u6b8a\u7684\u521d\u59cb\u6761\u4ef6\u5206\u5e03\u6c42\u5e73\u5747(\u8fb9\u7f18\u5316)\u5f97\u5230\u7684:\u5047\u8bbe\u5728\u521d\u59cb\u65f6\u523b \\(t_0\\),\u7cfb\u7edf\u7684\u7c92\u5b50\u6570 \\(n_0\\) \u5e76\u975e\u4e00\u4e2a\u786e\u5b9a\u503c,\u800c\u662f\u670d\u4ece\u4e00\u4e2a\u5747\u503c\u4e3a \\(x\\) \u7684\u6cca\u677e\u5206\u5e03 \u3002</p> <p>\u901a\u8fc7\u5c06\u539f\u59cb\u7684\u6761\u4ef6\u6982\u7387 \\(p(n,t|n_0,t_0)\\) \u4e0e\u8fd9\u4e2a\u6cca\u677e\u5206\u5e03\u52a0\u6743\u6c42\u548c,\u5b9a\u4e49\u4e86\u65b0\u7684\u6982\u7387\u51fd\u6570:</p> \\[ p(n, t | x, t_0) = \\sum_{n_0=0}^{\\infty} p(n, t | n_0, t_0) \\frac{x^{n_0}}{n_0!} e^{-x} \\] <p>\u8fd9\u4e2a\u53d8\u6362\u5728\u6570\u5b66\u4e0a\u88ab\u79f0\u4e3a\u6cca\u677e\u53d8\u6362 \u3002\u5b83\u5c06\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u79bb\u6563\u521d\u59cb\u503c \\(n_0\\) \u7684\u51fd\u6570\u65cf \\(\\{p(n, t | n_0, t_0)\\}_{n_0=0}^\\infty\\),\u901a\u8fc7\u6cca\u677e\u6838\u51fd\u6570 \\(\\frac{x^{n_0}}{n_0!} e^{-x}\\) \u8fdb\u884c\u79ef\u5206(\u6c42\u548c),\u4ece\u800c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u4f9d\u8d56\u4e8e \u8fde\u7eed\u53d8\u91cf \\(x\\) \u7684\u5355\u4e00\u51fd\u6570 \\(p(n, t | x, t_0)\\)\u3002</p> <p></p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#13-x","title":"1.3 \u8fde\u7eed\u573a \\(x\\) \u7684\u7269\u7406\u5185\u6db5","text":"<p>\u65b0\u5f15\u5165\u7684\u53d8\u91cf \\(x\\) \u662f\u4ec0\u4e48?\u5b83\u4e0d\u662f\u4e00\u4e2a\u7269\u7406\u7a7a\u95f4\u5750\u6807,\u4e5f\u4e0d\u662f\u7c92\u5b50\u6570\u3002\\(x\\) \u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u3001\u8fde\u7eed\u7684(\u751a\u81f3\u53ef\u4ee5\u662f\u590d\u7684)\u8f85\u52a9\u573a,\u5176\u672c\u8d28\u662f\u4e00\u4e2a\u751f\u6210\u51fd\u6570(Generating Function)\u7684\u53c2\u6570\u3002</p> <p>\u8fd9\u4e2a\u53d8\u6362\u7684\u7cbe\u5999\u4e4b\u5904\u5728\u4e8e:</p> <ol> <li> <p>\u7f16\u7801\u4fe1\u606f :\u5b83\u5c06\u5173\u4e8e\u79bb\u6563\u53d8\u91cf \\(n_0\\) \u7684\u5168\u90e8\u4fe1\u606f(\u5373\u6240\u6709 \\(p(n,t|n_0,t_0)\\) \u7684\u503c)\u5b8c\u6574\u5730\u7f16\u7801\u8fdb\u4e86\u4e00\u4e2a\u5173\u4e8e\u8fde\u7eed\u53d8\u91cf \\(x\\) \u7684\u5355\u4e00\u51fd\u6570 \\(p(n,t|x,t_0)\\) \u4e2d\u3002\u8fd9\u4e0e\u5728\u7b2c4\u8bb2\u4e2d\u7528\u751f\u6210\u51fd\u6570 \\(\\sum_n P_n x^n\\) \u6765\u7f16\u7801\u6574\u4e2a\u6982\u7387\u5206\u5e03 \\(\\{P_n\\}\\) \u7684\u601d\u60f3\u662f\u4e00\u8109\u76f8\u627f\u7684\u3002</p> </li> <li> <p>\u7269\u7406\u76f4\u89c9 :\u5f15\u5165\u6cca\u677e\u5206\u5e03\u5e76\u975e\u5076\u7136\u3002\u53ef\u4ee5\u60f3\u8c61\u5728\u4e00\u4e2a\u5927\u4f53\u79ef\u4e2d\u968f\u673a\u653e\u7f6e\u7c92\u5b50,\u4f7f\u5f97\u5e73\u5747\u7c92\u5b50\u6570\u4e3a \\(x\\)\u3002\u90a3\u4e48,\u5728\u8be5\u4f53\u79ef\u4e2d\u627e\u5230\u6070\u597d \\(n_0\\) \u4e2a\u7c92\u5b50\u7684\u6982\u7387\u5c31\u670d\u4ece\u6cca\u677e\u5206\u5e03\u3002\u56e0\u6b64,\u53d8\u91cf \\(x\\) \u53ef\u4ee5\u88ab\u76f4\u89c2\u5730\u7406\u89e3\u4e3a\u521d\u59cb\u7c92\u5b50\u6570\u5206\u5e03\u7684\u5e73\u5747\u503c\u3002</p> </li> <li> <p>\u4ee3\u6570\u4fbf\u5229\u6027 :\u9009\u62e9\u6cca\u677e\u5206\u5e03\u4f5c\u4e3a\"\u57fa\u5e95\",\u662f\u56e0\u4e3a\u5b83\u4e0e\u5bfc\u6570\u7b97\u5b50\u6709\u975e\u5e38\u7b80\u6d01\u7684\u4ee3\u6570\u5173\u7cfb,\u8fd9\u5c06\u5728\u540e\u7eed\u7684\u63a8\u5bfc\u4e2d\u53d1\u6325\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u3002</p> </li> </ol> <p>\u56e0\u6b64,\\(x\\) \u5e94\u8be5\u88ab\u7406\u89e3\u4e3a\u4e00\u4e2a\"\u751f\u6210\u573a\",\u5b83\u7684\u5f15\u5165\u7eaf\u7cb9\u662f\u4e3a\u4e86\u6570\u5b66\u4e0a\u7684\u4fbf\u5229,\u76ee\u7684\u662f\u5c06\u4e00\u4e2a\u79bb\u6563\u7684\u968f\u673a\u53d8\u91cf\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u8fde\u7eed\u7684\u573a\u8bba\u95ee\u9898,\u4ece\u800c\u4e3a\u4f7f\u7528\u5fae\u79ef\u5206\u548c\u8def\u5f84\u79ef\u5206\u7b49\u5de5\u5177\u94fa\u5e73\u9053\u8def\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#14","title":"1.4 \u7b97\u7b26\u5f62\u5f0f\u4e0e\u4fe1\u606f\u6062\u590d","text":"<p>\u4e3a\u4e86\u4f7f\u8fd9\u4e2a\u53d8\u6362\u66f4\u52a0\u89c4\u8303,\u53ef\u4ee5\u5f15\u5165\u91cf\u5b50\u529b\u5b66\u4e2d\u5e38\u7528\u7684\u72c4\u62c9\u514b\u7b26\u53f7(bra-ket)\u3002\u5b9a\u4e49\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u8fde\u7eed\u53d8\u91cf \\(x\\) \u7684\"\u6cca\u677e\u57fa\u5e95\u6001\" \\(|n_0\\rangle_x\\),\u5176\u51fd\u6570\u5f62\u5f0f\u5c31\u662f\u4e00\u4e2a\u6cca\u677e\u5206\u5e03:</p> \\[ \\langle x | n_0 \\rangle \\equiv |n_0\\rangle_x := \\frac{x^{n_0}}{n_0!} e^{-x} \\] <p>\u90a3\u4e48,\u7ecf\u8fc7\u6cca\u677e\u53d8\u6362\u540e\u7684\u7cfb\u7edf\u72b6\u6001\u53ef\u4ee5\u88ab\u770b\u4f5c\u4e00\u4e2a\"\u6001\u77e2\u91cf\" \\(|\\Psi(x,t)\\rangle\\),\u5b83\u662f\u8fd9\u4e9b\u57fa\u5e95\u6001\u7684\u7ebf\u6027\u53e0\u52a0,\u5176\u7cfb\u6570\u4e3a\u76f8\u5e94\u7684\u6761\u4ef6\u6982\u7387:</p> \\[ |\\Psi(x,t)\\rangle := p(n, t | x, t_0) = \\sum_{n_0=0}^{\\infty} p(n,t|n_0,t_0) |n_0\\rangle_x \\] <p>\u8fd9\u4e2a \\(|\\Psi(x,t)\\rangle\\) \u5c31\u662f\u7406\u8bba\u7684\u6838\u5fc3\u5bf9\u8c61\u3002\u5b83\u662f\u4e00\u4e2a\u5173\u4e8e\u8fde\u7eed\u53d8\u91cf \\(x\\) \u7684\u51fd\u6570,\u5e76\u4e14\u5b8c\u6574\u5730\u643a\u5e26\u4e86\u7cfb\u7edf\u5728 \\(t_0\\) \u65f6\u523b\u7684\u6240\u6709\u521d\u59cb\u6761\u4ef6\u4fe1\u606f\u3002</p> <p>\u5f53\u7136,\u8fd9\u4e2a\u53d8\u6362\u5fc5\u987b\u662f\u53ef\u9006\u7684,\u5426\u5219\u5c31\u4f1a\u4e22\u5931\u4fe1\u606f\u3002\u5fc5\u987b\u80fd\u591f\u4ece \\(|\\Psi(x,t)\\rangle\\) \u4e2d\u6062\u590d\u51fa\u4efb\u610f\u6307\u5b9a\u521d\u59cb\u6761\u4ef6 \\(n_0\\) \u6240\u5bf9\u5e94\u7684\u539f\u59cb\u6982\u7387 \\(p(n,t|n_0,t_0)\\)\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u5de7\u5999\u7684\u7b97\u7b26\u6765\u5b9e\u73b0:</p> \\[ p(n,t|n_0,t_0) = \\left. (\\partial_x + 1)^{n_0} |\\Psi(x,t)\\rangle \\right|_{x=0} \\] <p>\u8fd9\u4e2a\u516c\u5f0f\u662f\u6cca\u677e\u53d8\u6362\u7684\u9006\u53d8\u6362\u3002\u7b97\u7b26 \\((\\partial_x + 1)^{n_0}\\) \u4f5c\u7528\u5728\u51fd\u6570 \\(|\\Psi(x,t)\\rangle\\) \u4e0a,\u5e76\u6700\u540e\u53d6 \\(x=0\\),\u5176\u6548\u679c\u7b49\u540c\u4e8e\u4ece\u751f\u6210\u51fd\u6570\u4e2d\"\u6295\u5f71\"\u6216\"\u7b5b\u9009\"\u51fa\u4e0e\u521d\u59cb\u7c92\u5b50\u6570\u4e3a \\(n_0\\) \u76f8\u5bf9\u5e94\u7684\u90a3\u4e00\u9879\u3002\u8fd9\u786e\u4fdd\u4e86\u65b0\u7684\u8868\u793a\u6cd5\u6ca1\u6709\u4e22\u5931\u4efb\u4f55\u7269\u7406\u4fe1\u606f,\u4e3a\u540e\u7eed\u7684\u52a8\u529b\u5b66\u6f14\u5316\u63a8\u5bfc\u5960\u5b9a\u4e86\u575a\u5b9e\u7684\u57fa\u7840\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#2","title":"2. \u4e3b\u65b9\u7a0b\u7684\u859b\u5b9a\u8c14\u5f62\u5f0f","text":"<p>\u5f15\u5165\u6cca\u677e\u8868\u793a\u7684\u6700\u7ec8\u76ee\u7684,\u662f\u5c06\u4e3b\u65b9\u7a0b\u672c\u8eab\u4ece\u4e00\u4e2a\u64cd\u4f5c\u79bb\u6563\u6982\u7387\u5206\u5e03 \\(P(n,t)\\) \u7684\u77e9\u9635\u65b9\u7a0b,\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u64cd\u4f5c\u8fde\u7eed\u51fd\u6570 \\(|\\Psi(x,t)\\rangle\\) \u7684\u504f\u5fae\u5206\u65b9\u7a0b(PDE)\u3002\u8fd9\u4e00\u6b65\u662f\u901a\u5f80\u8def\u5f84\u79ef\u5206\u7684\u5173\u952e,\u56e0\u4e3a\u5b83\u5c06\u95ee\u9898\u8f6c\u5316\u5230\u4e86\u5fae\u79ef\u5206\u548c\u6cdb\u51fd\u5206\u6790\u7684\u9886\u57df\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#21","title":"2.1 \u8f6c\u79fb\u7b97\u7b26\u7684\u53d8\u6362\u4e0e\u6b63\u89c4\u6392\u5e8f","text":"<p>\u8fd9\u4e00\u6b65\u7684\u6838\u5fc3\u4efb\u52a1,\u662f\u5c06\u4e3b\u65b9\u7a0b\u4e2d\u7684\u79bb\u6563\u8f6c\u79fb\u77e9\u9635 \\(\\hat{Q}\\) \u53d8\u6362\u4e3a\u4e00\u4e2a\u4f5c\u7528\u4e8e\u8fde\u7eed \\(x\\) \u7a7a\u95f4\u7684\u5fae\u5206\u7b97\u7b26,\u8bb0\u4e3a \\(\\hat{Q}(x, \\partial_x)\\)\u3002\u8fd9\u4e2a\u6620\u5c04\u8fc7\u7a0b\u9075\u5faa\u4e00\u4e2a\u5173\u952e\u89c4\u5219:\u6b63\u89c4\u6392\u5e8f(Normal Ordering)\u3002</p> <ul> <li> <p>\u7269\u7406\u52a8\u673a:\u5728\u7c92\u5b50\u7cfb\u7edf\u4e2d,\u57fa\u672c\u8fc7\u7a0b\u662f\u7c92\u5b50\u7684\u4ea7\u751f(creation)\u548c\u6e6e\u706d(annihilation)\u3002\u5728\u6cca\u677e\u8868\u793a\u4e2d,\u8fd9\u4e24\u4e2a\u57fa\u672c\u64cd\u4f5c\u5206\u522b\u7531\u4e58\u6cd5\u7b97\u7b26 \\(x\\) \u548c\u5fae\u5206\u7b97\u7b26 \\(\\partial_x\\) \u6765\u4ee3\u8868(\u8fd9\u5c06\u5728\u4e0b\u4e00\u8bb2\u7684Doi-Peliti\u5f62\u5f0f\u4e2d\u88ab\u4e25\u683c\u5316)\u3002\u6b63\u89c4\u6392\u5e8f\u662f\u4e00\u4e2a\u89c4\u5b9a,\u65e8\u5728\u786e\u4fdd\u8fd9\u79cd\u7b97\u7b26\u66ff\u6362\u80fd\u591f\u5fe0\u5b9e\u5730\u518d\u73b0\u539f\u59cb\u4e3b\u65b9\u7a0b\u6240\u63cf\u8ff0\u7684\u79bb\u6563\u7c92\u5b50\u6570\u53d8\u5316\u3002</p> </li> <li> <p>\u6570\u5b66\u89c4\u5219:\u6b63\u89c4\u6392\u5e8f\u89c4\u5b9a,\u5728\u6784\u5efa\u7b97\u7b26 \\(\\hat{Q}(x, \\partial_x)\\) \u65f6,\u6240\u6709\u4e0e\u7c92\u5b50\u4ea7\u751f\u76f8\u5173\u7684\u7b97\u7b26(\u5373 \\(x\\))\u90fd\u5fc5\u987b\u5199\u5728\u6240\u6709\u4e0e\u7c92\u5b50\u6e6e\u706d\u76f8\u5173\u7684\u7b97\u7b26(\u5373 \\(\\partial_x\\))\u7684\u53f3\u8fb9\u3002\u6362\u53e5\u8bdd\u8bf4,\u6240\u6709\u7684\u5bfc\u6570\u7b97\u7b26 \\(\\partial_x\\) \u90fd\u5fc5\u987b\u88ab\u79fb\u52a8\u5230\u6240\u6709 \\(x\\) \u7b97\u7b26\u7684\u5de6\u8fb9\u3002</p> </li> </ul> <p>\u8fd9\u4e2a\u89c4\u5219\u662f\u540e\u7eed\u63a8\u5bfc\u80fd\u591f\u987a\u5229\u8fdb\u884c\u7684\u5173\u952e\u6280\u672f\u524d\u63d0\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#22-a-xrightarrowk-emptyset","title":"2.2 \u5b9e\u4f8b:\u7c92\u5b50\u8870\u53d8\u8fc7\u7a0b (\\(A \\xrightarrow{k} \\emptyset\\))","text":"<p>\u4e3a\u4e86\u8ba9\u8fd9\u4e2a\u62bd\u8c61\u7684\u89c4\u5219\u53d8\u5f97\u5177\u4f53,\u8003\u8651\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u968f\u673a\u8fc7\u7a0b:\u7c92\u5b50\u4ee5\u901f\u7387 \\(k\\) \u53d1\u751f\u8870\u53d8\u3002\u5176\u4e3b\u65b9\u7a0b\u4e3a:</p> \\[ \\frac{d}{dt} P(n,t) = k[(n+1)P(n+1,t) - nP(n,t)] \\] <p>\u73b0\u5728,\u5c06\u8fd9\u4e2a\u8fc7\u7a0b\u7ffb\u8bd1\u6210\u6cca\u677e\u8868\u793a\u4e0b\u7684\u7b97\u7b26 \\(\\hat{Q}(x, \\partial_x)\\)\u3002\u4e3a\u6b64,\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u57fa\u672c\u64cd\u4f5c\u7684\"\u7ffb\u8bd1\u8bcd\u5178\": - \u6e6e\u706d\u4e00\u4e2a\u7c92\u5b50(\\(n \\to n-1\\))\u7684\u64cd\u4f5c,\u5728\u6cca\u677e\u8868\u793a\u4e2d\u5bf9\u5e94\u4e8e\u7b97\u7b26 \\(\\partial_x\\)\u3002</p> <ul> <li> <p>\u4ea7\u751f\u4e00\u4e2a\u7c92\u5b50(\\(n \\to n+1\\))\u7684\u64cd\u4f5c,\u5bf9\u5e94\u4e8e\u7b97\u7b26 \\(x\\)\u3002</p> </li> <li> <p>\u6d4b\u91cf\u7c92\u5b50\u6570 \\(n\\) \u7684\u64cd\u4f5c,\u5bf9\u5e94\u4e8e\u7b97\u7b26 \\(x\\partial_x\\)\u3002</p> </li> </ul> <p>\u5728\u8870\u53d8\u8fc7\u7a0b\u4e2d,\\(n \\rightarrow n-1\\)\u3002\u8fd9\u4e2a\u8dc3\u8fc1\u7684\u901f\u7387\u6b63\u6bd4\u4e8e\u5f53\u524d\u7684\u7c92\u5b50\u6570 \\(n\\)\u3002\u56e0\u6b64,\u5bf9\u5e94\u7684\u7b97\u7b26 \\(\\hat{Q}\\) \u5e94\u8be5\u7531\u4ee3\u8868\"\u6d4b\u91cf\u7c92\u5b50\u6570 \\(n\\)\"\u7684\u7b97\u7b26\u548c\u4ee3\u8868\"\u6e6e\u706d\u4e00\u4e2a\u7c92\u5b50\"\u7684\u7b97\u7b26\u7ec4\u5408\u800c\u6210\u3002\u6839\u636e\u6b63\u89c4\u6392\u5e8f\u89c4\u5219,\u6211\u4eec\u5f97\u5230:</p> \\[ \\hat{Q}(x, \\partial_x) = k(\\partial_x - 1)x \\] <p>\u8fd9\u4e2a\u7b97\u7b26\u867d\u7136\u7b80\u6d01,\u4f46\u5b8c\u6574\u5730\u7f16\u7801\u4e86\u8870\u53d8\u8fc7\u7a0b\u3002</p> <ul> <li> <p>\\(k(\\partial_x)x\\) \u90e8\u5206\u5bf9\u5e94\u4e8e\u589e\u76ca\u9879 \\(k(n+1)P_{n+1}\\)\u3002</p> </li> <li> <p>\\(-kx\\) \u90e8\u5206\u5bf9\u5e94\u4e8e\u635f\u5931\u9879 \\(-knP_n\\)\u3002</p> </li> </ul> <p>\u7ecf\u8fc7\u4e25\u683c\u63a8\u5bfc\u53ef\u4ee5\u8bc1\u660e,\u5c06\u8fd9\u4e2a\u7b97\u7b26\u4f5c\u7528\u4e8e\u6cca\u677e\u57fa\u5e95\u6001,\u80fd\u591f\u7cbe\u786e\u5730\u518d\u73b0\u4e3b\u65b9\u7a0b\u7684\u79bb\u6563\u5dee\u5206\u7ed3\u6784\u3002\u8bb2\u5ea7\u4e2d\u7684\u677f\u4e66\u4e5f\u660e\u786e\u7ed9\u51fa\u4e86\u8fd9\u4e2a\u5f62\u5f0f\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#23","title":"2.3 \u6f14\u5316\u65b9\u7a0b:\u7c7b\u859b\u5b9a\u8c14\u65b9\u7a0b","text":"<p>\u4e00\u65e6\u83b7\u5f97\u4e86\u7b97\u7b26 \\(\\hat{Q}\\),\u6574\u4e2a\u4e3b\u65b9\u7a0b\u7684\u6f14\u5316\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f5c\u7528\u4e8e\u6001\u77e2\u91cf \\(|\\Psi(x,t)\\rangle\\) \u7684\u504f\u5fae\u5206\u65b9\u7a0b\u6765\u63cf\u8ff0\u3002\u8bb2\u5ea7\u4e2d\u7ed9\u51fa\u7684\u65b9\u7a0b\u662f\u5173\u4e8e\u521d\u59cb\u65f6\u95f4 \\(t_0\\) \u7684\u540e\u5411\u4e3b\u65b9\u7a0b(Backward Master Equation),\u5176\u6f14\u5316\u7b97\u7b26\u662f \\(\\hat{Q}\\)\u3002\u4e0e\u4e4b\u7b49\u4ef7\u7684\u524d\u5411\u4e3b\u65b9\u7a0b(Forward Master Equation)\u7684\u6f14\u5316\u7b97\u7b26\u662f \\(\\hat{Q}\\) \u7684\u5384\u7c73\u5171\u8f6d\u3002\u4e3a\u4e0e\u540e\u7eed\u8def\u5f84\u79ef\u5206\u63a8\u5bfc\u4fdd\u6301\u4e00\u81f4,\u6211\u4eec\u91c7\u7528\u524d\u5411\u6f14\u5316\u7684\u5f62\u5f0f:</p> \\[ \\frac{\\partial}{\\partial t} |\\Psi(x,t)\\rangle = \\hat{Q}(x,\\partial_x) |\\Psi(x,t)\\rangle \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u5728\u5f62\u5f0f\u4e0a\u4e0e\u91cf\u5b50\u529b\u5b66\u4e2d\u7684\u865a\u65f6\u859b\u5b9a\u8c14\u65b9\u7a0b(imaginary-time Schr\u00f6dinger equation)\u5b8c\u5168\u540c\u6784\u3002</p> <p>\u7269\u7406\u610f\u4e49\u4e0e\u7c7b\u6bd4:\u8fd9\u79cd\u5bf9\u5e94\u5173\u7cfb\u5e76\u975e\u5de7\u5408,\u5b83\u63ed\u793a\u4e86\u7ecf\u5178\u968f\u673a\u8fc7\u7a0b\u4e0e\u91cf\u5b50\u7cfb\u7edf\u4e4b\u95f4\u6df1\u523b\u7684\u6570\u5b66\u8054\u7cfb:</p> <ul> <li> <p>\u6001\u77e2\u91cf \\(|\\Psi(x,t)\\rangle\\) \u626e\u6f14\u4e86\u91cf\u5b50\u529b\u5b66\u4e2d\"\u6ce2\u51fd\u6570\"\u7684\u89d2\u8272,\u5b83\u5305\u542b\u4e86\u7cfb\u7edf\u6982\u7387\u5206\u5e03\u7684\u5168\u90e8\u4fe1\u606f\u3002</p> </li> <li> <p>\u7b97\u7b26 \\(\\hat{Q}(x, \\partial_x)\\) \u626e\u6f14\u4e86\"\u54c8\u5bc6\u987f\u91cf\"\u7684\u89d2\u8272,\u5b83\u751f\u6210\u4e86\u7cfb\u7edf\u7684\u65f6\u95f4\u6f14\u5316\u3002</p> </li> <li> <p>\u65f6\u95f4 \\(t\\) \u5bf9\u5e94\u4e8e\u91cf\u5b50\u529b\u5b66\u4e2d\u7684\"\u865a\u65f6\u95f4\" \\(\\tau = it\\)\u3002</p> </li> </ul> <p>\u8fd9\u4e2a\u7c7b\u6bd4\u7684\u610f\u4e49\u662f\u9769\u547d\u6027\u7684\u3002\u5b83\u610f\u5473\u7740,\u4e3a\u6c42\u89e3\u91cf\u5b50\u7cfb\u7edf\u800c\u53d1\u5c55\u8d77\u6765\u7684\u6574\u4e2a\u6570\u5b66\u6b66\u5e93\u2014\u2014\u7279\u522b\u662f\u8d39\u66fc\u7684\u8def\u5f84\u79ef\u5206\u65b9\u6cd5\u2014\u2014\u73b0\u5728\u53ef\u4ee5\u88ab\u76f4\u63a5\"\u79fb\u690d\"\u8fc7\u6765,\u7528\u4e8e\u89e3\u51b3\u4e3b\u65b9\u7a0b\u95ee\u9898\u3002</p> <p>\u4e00\u4e2a\u91cd\u8981\u7684\u533a\u522b:\u975e\u5384\u7c73\u6027</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f,\u8fd9\u91cc\u7684\"\u54c8\u5bc6\u987f\u91cf\" \\(\\hat{Q}\\) \u901a\u5e38\u4e0d\u662f\u5384\u7c73\u7684(non-Hermitian)\u3002\u5728\u91cf\u5b50\u529b\u5b66\u4e2d,\u54c8\u5bc6\u987f\u91cf\u7684\u5384\u7c73\u6027\u4fdd\u8bc1\u4e86\u603b\u6982\u7387 \\(\\int |\\psi|^2 dx\\) \u5b88\u6052\u3002\u7136\u800c,\u5728\u7ecf\u5178\u968f\u673a\u8fc7\u7a0b\u4e2d,\u5b88\u6052\u7684\u91cf\u662f\u603b\u6982\u7387 \\(\\sum_n P(n,t) = 1\\)\u3002\u6211\u4eec\u6784\u9020\u7684\"\u6ce2\u51fd\u6570\" \\(|\\Psi(x,t)\\rangle\\) \u7684\u67d0\u79cd\u8303\u6570(\u5982 \\(\\int |\\Psi(x,t)|^2 dx\\))\u5e76\u4e0d\u9700\u8981\u5b88\u6052\u3002\\(\\hat{Q}\\) \u7684\u975e\u5384\u7c73\u6027\u6b63\u53cd\u6620\u4e86\u968f\u673a\u8fc7\u7a0b\u7684\u8017\u6563\u6027\u8d28\u548c\u6982\u7387\u7684\u5355\u5411\u6d41\u52a8(\u4f8b\u5982,\u6d41\u5411\u5438\u6536\u6001),\u8fd9\u662f\u7ecf\u5178\u968f\u673a\u8fc7\u7a0b\u4e0e\u6807\u51c6\u91cf\u5b50\u529b\u5b66\u7684\u672c\u8d28\u533a\u522b\u4e4b\u4e00\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#3","title":"3. \u8def\u5f84\u79ef\u5206\u7684\u63a8\u5bfc","text":"<p>\u4e0a\u4e00\u8282\u6210\u529f\u5730\u5c06\u79bb\u6563\u7684\u4e3b\u65b9\u7a0b\u6620\u5c04\u4e3a\u4e86\u4e00\u4e2a\u5f62\u5f0f\u4e0a\u4e0e\u859b\u5b9a\u8c14\u65b9\u7a0b\u540c\u6784\u7684\u504f\u5fae\u5206\u65b9\u7a0b(PDE)\u3002\u73b0\u5728,\u4fbf\u53ef\u4ee5\u9075\u5faa\u8d39\u66fc\u7684\u7ecf\u5178\u6b65\u9aa4,\u4ece\u8fd9\u4e2aPDE\u51fa\u53d1,\u4e00\u6b65\u6b65\u6784\u5efa\u51fa\u5176\u7b49\u4ef7\u7684\u8def\u5f84\u79ef\u5206\u8868\u793a\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u6838\u5fc3\u601d\u60f3\u662f,\u5c06\u6709\u9650\u65f6\u95f4\u7684\u6f14\u5316\u8fc7\u7a0b\u770b\u4f5c\u662f\u65e0\u6570\u4e2a\u65e0\u7a77\u5c0f\u65f6\u95f4\u6b65\u6f14\u5316\u7684\"\u4e32\u8054\",\u5e76\u901a\u8fc7\u5bf9\u6240\u6709\u4e2d\u95f4\u72b6\u6001\u6c42\u548c,\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u5bf9\u5b8c\u6574\"\u5386\u53f2\u8def\u5f84\"\u7684\u79ef\u5206\u3002\u4e0b\u9762\u7684\u63a8\u5bfc\u5c06\u8be6\u7ec6\u89e3\u91ca\u8bb2\u5ea7\u9ed1\u677f\u4e0a\u7684\u6bcf\u4e00\u4e2a\u6b65\u9aa4\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#31","title":"3.1 \u65f6\u95f4\u79bb\u6563\u5316\u4e0e\u5355\u6b65\u6f14\u5316","text":"<p>\u4ece\u521d\u59cb\u65f6\u523b \\(t_0\\) \u5230\u6700\u7ec8\u65f6\u523b \\(t_N=t\\),\u5c06\u6574\u4e2a\u65f6\u95f4\u533a\u95f4\u5206\u5272\u6210 \\(N\\) \u4e2a\u5fae\u5c0f\u7684\u65f6\u95f4\u6b65\u957f \\(\\Delta t = (t - t_0)/N\\)\u3002\u8bb2\u5ea7\u4e2d\u7684\u63a8\u5bfc\u57fa\u4e8e\u540e\u5411\u4e3b\u65b9\u7a0b \\(\\partial_{t_0} |\\Psi(x, t_0)\\rangle = \\hat{Q}(x, \\partial_x) |\\Psi(x, t_0)\\rangle\\)\u3002\u5bf9\u4e8e\u4e00\u4e2a\u4ece \\(t_0\\) \u5230 \\(t_1 = t_0 + \\Delta t\\) \u7684\u5fae\u5c0f\u65f6\u95f4\u6b65,\u5176\u89e3\u53ef\u4ee5\u5f62\u5f0f\u4e0a\u5199\u4e3a \\(|\\Psi(x_0, t_0)\\rangle = e^{\\hat{Q}\\Delta t} |\\Psi(x_1, t_1)\\rangle\\)\u3002\u5f53 \\(\\Delta t \\to 0\\) \u65f6,\u53ef\u4ee5\u505a\u4e00\u9636\u6cf0\u52d2\u5c55\u5f00:</p> \\[ |\\Psi(x_0, t_0)\\rangle \\approx \\left[1 + \\Delta t \\hat{Q}(x_0, \\partial_{x_0})\\right] |\\Psi(x_1, t_1)\\rangle + O(\\Delta t^2) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u5c06\u521d\u59cb\u65f6\u523b \\(t_0\\) \u7684\u72b6\u6001 \\(|\\Psi(x_0, t_0)\\rangle\\) \u4e0e\u4e00\u4e2a\u5fae\u5c0f\u65f6\u95f4\u6b65\u4e4b\u540e \\(t_1\\) \u7684\u72b6\u6001 \\(|\\Psi(x_1, t_1)\\rangle\\) \u8054\u7cfb\u8d77\u6765\u3002\u5b83\u6784\u6210\u4e86\u8fde\u63a5\u4e0d\u540c\u65f6\u95f4\u70b9\u7684\"\u65e0\u7a77\u5c0f\u4f20\u64ad\u5b50 (infinitesimal propagator)\"\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#32","title":"3.2 \u5f15\u5165\u5085\u91cc\u53f6\u6052\u7b49\u5f0f:\u5c06\u7b97\u7b26\u4ee3\u6570\u5316","text":"<p>\u4e0a\u5f0f\u4e2d\u542b\u6709\u5fae\u5206\u7b97\u7b26 \\(\\partial_{x_0}\\),\u8fd9\u4f7f\u5f97\u540e\u7eed\u7684\u4ee3\u6570\u5904\u7406\u548c\u6307\u6570\u5316\u53d8\u5f97\u56f0\u96be\u3002\u8fd9\u91cc\u7684\u6838\u5fc3\u6280\u5de7\u662f,\u901a\u8fc7\u63d2\u5165\u4e00\u4e2a\u5085\u91cc\u53f6\u53d8\u6362\u5f62\u5f0f\u7684\u6052\u7b49\u7b97\u7b26,\u5c06\u5fae\u5206\u7b97\u7b26\u8f6c\u5316\u4e3a\u4e00\u4e2a\u666e\u901a\u7684\u4ee3\u6570\u53d8\u91cf\u3002</p> <p></p> <p>\u6b63\u5982\u8bb2\u5ea7\u7684\u65c1\u6ce8(Aside)\u6240\u793a,\u4efb\u4f55\u51fd\u6570 \\(f(x_1)\\) \u90fd\u53ef\u4ee5\u901a\u8fc7\u72c4\u62c9\u514b \\(\\delta\\) \u51fd\u6570\u5199\u6210 \\(f(x_0) = \\int dx_1 \\delta(x_1 - x_0) f(x_1)\\)\u3002\u518d\u5229\u7528 \\(\\delta\\) \u51fd\u6570\u7684\u5085\u91cc\u53f6\u8868\u793a \\(\\delta(x) = \\int \\frac{dq}{2\\pi} e^{-iqx}\\),\u6211\u4eec\u53ef\u4ee5\u5c06\u4f5c\u7528\u5728 \\(|\\Psi(x_0, t_1)\\rangle\\) \u4e0a\u7684\u7b97\u7b26 \\(\\partial_{x_0}\\) \u53d8\u6362\u4e3a\u4e00\u4e2a\u79ef\u5206\u6838\u5185\u7684\u4ee3\u6570\u56e0\u5b50 \\(iq_1\\):</p> \\[ \\partial_{x_0} |\\Psi(x_1, t_1)\\rangle = \\partial_{x_0} \\int dx_1 \\int \\frac{dq_1}{2\\pi} e^{-iq_1(x_1-x_0)} |\\Psi(x_1, t_1)\\rangle= \\int dx_1 \\int \\frac{dq_1}{2\\pi} (iq_1) e^{-iq_1(x_1-x_0)} |\\Psi(x_1, t_1)\\rangle \\] <p>\u7269\u7406\u610f\u4e49: \u8fd9\u4e2a\u64cd\u4f5c\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u79ef\u5206\u53d8\u91cf \\(q_1\\)\u3002\u8fd9\u4e2a\u53d8\u91cf\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e0e\u573a \\(x\\) \u5171\u8f6d\u7684\"\u54cd\u5e94\u573a\"\u6216\"\u52a8\u91cf\u573a\",\u5176\u4f5c\u7528\u662f\"\u6d4b\u91cf\"\u573a \\(x\\) \u7684\u65f6\u95f4\u53d8\u5316\u3002\u8fd9\u4e0e\u7b2c32\u8bb2\u4e2d\u4e3a\u6717\u4e4b\u4e07\u65b9\u7a0b\u5f15\u5165\u54cd\u5e94\u573a \\(\\tilde{\\phi}\\) \u7684\u601d\u60f3\u5f02\u66f2\u540c\u5de5\u3002</p> <p>\u5c06\u8fd9\u4e2a\u6280\u5de7\u5e94\u7528\u4e8e\u6f14\u5316\u65b9\u7a0b,\u7b97\u7b26 \\(\\hat{Q}(x_0, \\partial_{x_0})\\) \u5c31\u53d8\u6210\u4e86\u51fd\u6570 \\(\\hat{Q}(x_0, iq_1)\\)\u3002\u4e8e\u662f\u5f97\u5230:</p> \\[ |\\Psi(x_0, t_0)\\rangle\\approx \\int \\frac{dx_1 dq_1}{(2\\pi)^M} \\left[1 + \\Delta t \\hat{Q}(x_0, iq_1)\\right] e^{-iq_1(x_1-x_0)} |\\Psi(x_1, t_1)\\rangle \\] <p>\u8fd9\u91cc\u7684 \\(M\\) \u662f\u573a\u5206\u91cf\u7684\u4e2a\u6570(\u5728\u5355\u7c92\u5b50\u4f8b\u5b50\u4e2d \\(M=1\\))\u3002\u901a\u8fc7\u8fd9\u4e2a\u53d8\u6362,\u539f\u6765\u5305\u542b\u5fae\u5206\u7b97\u7b26\u7684\u590d\u6742\u8868\u8fbe\u5f0f,\u53d8\u6210\u4e86\u4e00\u4e2a\u5bf9\u666e\u901a\u51fd\u6570\u8fdb\u884c\u79ef\u5206\u7684\u3001\u66f4\u5bb9\u6613\u5904\u7406\u7684\u5f62\u5f0f\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#33","title":"3.3 \u6307\u6570\u5316\u4e0e\u5355\u6b65\u4f20\u64ad\u5b50","text":"<p>\u6ce8\u610f\u5230\u5bf9\u4e8e\u65e0\u7a77\u5c0f\u7684 \\(\\Delta t\\),\u65b9\u62ec\u53f7\u4e2d\u7684\u9879\u662f\u6307\u6570\u51fd\u6570\u7684\u4e00\u9636\u8fd1\u4f3c:\\(1 + \\Delta t \\hat{Q}(x_0, iq_1) \\approx \\exp[\\Delta t \\hat{Q}(x_0, iq_1)]\\)\u3002\u5c06\u5176\u4ee3\u56de,\u5e76\u5c06\u4e24\u4e2a\u6307\u6570\u9879\u5408\u5e76,\u6211\u4eec\u5f97\u5230\u4e86\u4ece\u65f6\u523b \\(t_1\\) \u5230 \\(t_0\\) \u7684\u5355\u6b65\u4f20\u64ad\u5b50(propagator)\u7684\u79ef\u5206\u8868\u793a:</p> \\[ |\\Psi(x_0, t_0)\\rangle \\] \\[ \\approx \\int \\frac{dx_1 dq_1}{(2\\pi)^M} \\exp\\left[-iq_1(x_1-x_0) + \\Delta t \\hat{Q}(x_0, iq_1)\\right] |\\Psi(x_1, t_1)\\rangle \\]"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#34","title":"3.4 \u8fed\u4ee3\u4e0e\u8fde\u7eed\u6781\u9650","text":"<p>\u73b0\u5728,\u5c06\u8fd9\u4e2a\u5355\u6b65\u8fc7\u7a0b\u8fed\u4ee3 \\(N\\) \u6b21,\u5c06 \\(t_N=t\\) \u7684\u72b6\u6001\u4e00\u8def\u4f20\u64ad\u56de \\(t_0\\)\u3002\u6bcf\u4e00\u6b65\u90fd\u63d2\u5165\u4e00\u4e2a\u7c7b\u4f3c\u7684\u79ef\u5206,\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u5305\u542b \\(N\\) \u6b21\u79ef\u5206\u7684\u8868\u8fbe\u5f0f:</p> <p>$$ |\\Psi(x_0, t_0)\\rangle =\\left(\\int \\prod_{i=1}^{N} \\frac{dx_i dq_i}{(2\\pi)^M}\\right) \\exp\\left[\\sum_{j=1}^{N} \\left(-iq_j(x_j-x_{j-1}) + \\Delta t \\hat{Q}(x_{j-1}, iq_j)\\right)\\right] |\\Psi(x_N, t_N)\\rangle $$ \u7269\u7406\u610f\u4e49: \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u5728\u65f6\u95f4\u79bb\u6563\u5316\u7684\u60c5\u51b5\u4e0b,\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u4e2d\u95f4\u8def\u5f84 \\((x_1, x_2, \\dots, x_{N-1})\\) \u548c\u6240\u6709\u53ef\u80fd\u7684\u54cd\u5e94\u573a\u5386\u53f2 \\((q_1, q_2, \\dots, q_N)\\) \u7684\u6c42\u548c\u3002</p> <p>\u63a5\u4e0b\u6765,\u53d6\u8fde\u7eed\u6781\u9650 \\(N \\to \\infty, \\Delta t \\to 0\\),\u540c\u65f6\u4fdd\u6301\u603b\u65f6\u95f4 \\(t - t_0\\) \u56fa\u5b9a\u3002\u5728\u8fd9\u4e2a\u6781\u9650\u4e0b:</p> <p>\u8fde\u4e58\u7684\u79ef\u5206\u6d4b\u5ea6 \\(\\prod_{i=1}^{N} \\frac{dx_i dq_i}{(2\\pi)^M}\\) \u53d8\u6210\u4e86\u6cdb\u51fd\u79ef\u5206\u7684\u6d4b\u5ea6 \\(\\int \\mathcal{D}[x]\\mathcal{D}[q]\\)\u3002</p> <p>\u6c42\u548c \\(\\sum_{j=1}^{N} \\dots \\Delta t\\) \u53d8\u6210\u4e86\u65f6\u95f4\u79ef\u5206 \\(\\int_{t_0}^{t} d\\tau \\dots\\)\u3002</p> <p>\u5dee\u5546 \\(\\frac{x_j - x_{j-1}}{\\Delta t}\\) \u53d8\u6210\u4e86\u65f6\u95f4\u5bfc\u6570 \\(\\partial_\\tau x(\\tau)\\)\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#35","title":"3.5 \u6700\u7ec8\u7684\u8def\u5f84\u79ef\u5206\u4e0e\u4f5c\u7528\u91cf","text":"<p>\u7ecf\u8fc7\u4e0a\u8ff0\u6b65\u9aa4,\u6700\u7ec8\u5f97\u5230\u4e86\u4ece\u521d\u59cb\u6cca\u677e\u5206\u5e03(\u7531 \\(x_0\\) \u53c2\u6570\u5316)\u6f14\u5316\u5230\u6700\u7ec8\u72b6\u6001 \\(|\\Psi(x_N, t_N)\\rangle\\) \u7684\u6982\u7387\u7684\u8def\u5f84\u79ef\u5206\u8868\u793a: $$ |\\Psi(x_0, t_0)\\rangle = \\int_{x(t_0)=x_0} \\mathcal{D}[x(\\tau)] \\mathcal{D}[q(\\tau)] \\exp\\left(-S'[x, q]\\right) |\\Psi(x(t), t)\\rangle $$ \u5176\u4e2d,\u79ef\u5206\u662f\u5bf9\u6240\u6709\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6 \\(x(t_0) = x_0\\) \u7684\u573a \\(x(\\tau)\\) \u548c\u54cd\u5e94\u573a \\(q(\\tau)\\) \u7684\u5386\u53f2\u8def\u5f84\u6c42\u548c\u3002\u6307\u6570\u4e2d\u7684 \\(S'[x,q]\\) \u5c31\u662f\u8def\u5f84\u79ef\u5206\u7684\u4f5c\u7528\u91cf(Action) ,\u5176\u5f62\u5f0f\u4e3a:</p> <p>$$ S'[x,q] = \\int_{t_0}^{t} d\\tau \\left[iq(\\tau) \\partial_\\tau x(\\tau) - \\hat{Q}(x(\\tau), iq(\\tau))\\right] $$ \u4f5c\u7528\u91cf\u7684\u7269\u7406\u5185\u6db5: \u8fd9\u4e2a\u4f5c\u7528\u91cf\u662f\u6574\u4e2a\u7406\u8bba\u7684\u6838\u5fc3\u3002\u5b83\u662f\u4e00\u4e2a\u6cdb\u51fd,\u4e3a\u6bcf\u4e00\u6761\u53ef\u80fd\u7684\u7cfb\u7edf\u5386\u53f2 \\((x(\\tau), q(\\tau))\\) \u8d4b\u4e88\u4e00\u4e2a\u590d\u6570\u6743\u91cd\u3002\u5b83\u5b8c\u6574\u5730\u7f16\u7801\u4e86\u5fae\u89c2\u7684\u968f\u673a\u52a8\u529b\u5b66\u89c4\u5219\u3002</p> <p>\u52a8\u529b\u5b66\u9879 \\(iq(\\tau) \\partial_\\tau x(\\tau)\\) : \u8fd9\u4e00\u9879\u662f\u6240\u6709\u8fd9\u7c7b\u8def\u5f84\u79ef\u5206\u4e2d\u666e\u904d\u5b58\u5728\u7684\"\u8d1d\u91cc\u76f8\u4f4d\"\u9879,\u5b83\u5173\u8054\u4e86\u573a \\(x\\) \u7684\u65f6\u95f4\u53d8\u5316\u7387\u548c\u5176\u5171\u8f6d\u573a \\(q\\)\u3002</p> <p>\u54c8\u5bc6\u987f\u9879 \\(-\\hat{Q}(x(\\tau), iq(\\tau))\\) : \u8fd9\u4e00\u9879\u6e90\u4e8e\u4e3b\u65b9\u7a0b\u7684\u6f14\u5316\u7b97\u7b26,\u5305\u542b\u4e86\u7cfb\u7edf\u7684\u5177\u4f53\u7269\u7406\u8fc7\u7a0b(\u5982\u51fa\u751f\u3001\u6b7b\u4ea1\u3001\u76f8\u4e92\u4f5c\u7528\u7b49)\u3002</p> <p>\u4e3a\u4e86\u5e2e\u52a9\u7406\u89e3\u8fd9\u4e2a\u590d\u6742\u7684\u63a8\u5bfc\u8fc7\u7a0b,\u4e0b\u8868\u603b\u7ed3\u4e86\u5176\u4e2d\u7684\u5173\u952e\u6b65\u9aa4\u53ca\u5176\u6982\u5ff5\u76ee\u7684\u3002</p> \u6b65\u9aa4 \u6570\u5b66\u5de5\u5177 \u6982\u5ff5\u76ee\u7684 1. \u65f6\u95f4\u79bb\u6563\u5316 \\(e^{\\Delta t \\hat{Q}} \\approx 1 + \\Delta t \\hat{Q}\\) \u5c06\u8fde\u7eed\u7684\u65f6\u95f4\u6f14\u5316\u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u5fae\u5c0f\u7684\u3001\u53ef\u5904\u7406\u7684\u6b65\u9aa4\u3002 2. \u5085\u91cc\u53f6\u6052\u7b49\u5f0f \\(\\partial_x f(x) \\to \\int (iq) e^{\\dots}\\) \u5c06\u5fae\u5206\u7b97\u7b26 \\(\\partial_x\\) \u8f6c\u5316\u4e3a\u4e00\u4e2a\u4ee3\u6570\u53d8\u91cf \\(iq\\),\u4ece\u800c\u53ef\u4ee5\u5c06\u5176\u653e\u5165\u6307\u6570\u4e2d\u3002 3. \u6307\u6570\u5316 \\(1+\\epsilon \\approx e^\\epsilon\\) \u5c06\u5355\u6b65\u6f14\u5316\u5199\u6210\u6307\u6570\u5f62\u5f0f,\u5f62\u6210\u4f20\u64ad\u5b50(Propagator)\u7684\u6838\u3002 4. \u8fed\u4ee3 \\(\\int \\prod_i dx_i dq_i\\) \u5bf9\u6240\u6709\u4e2d\u95f4\u72b6\u6001\u6c42\u548c,\u5c06\u5355\u6b65\u4f20\u64ad\u5b50\"\u94fe\u63a5\"\u6210\u6709\u9650\u65f6\u95f4\u7684\u6f14\u5316\u3002 5. \u8fde\u7eed\u6781\u9650 \\(\\sum \\Delta t \\to \\int d\\tau\\) \u5bf9\u6240\u6709\u53ef\u80fd\u7684\u573a\u6f14\u5316\u5386\u53f2\u8def\u5f84\u6c42\u548c,\u5f97\u5230\u5b8c\u6574\u7684\u6cdb\u51fd\u79ef\u5206\u548c\u4f5c\u7528\u91cf\u3002"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#4","title":"4. \u4ee3\u7801\u5b9e\u8df5:\u53cc\u7a33\u6001\u7cfb\u7edf\u4e2d\u7684\u968f\u673a\u8df3\u8dc3","text":"<p>\u4e3a\u4e86\u5c55\u793a\u8def\u5f84\u79ef\u5206\u7406\u8bba\u5728\u5904\u7406\u590d\u6742\u975e\u7ebf\u6027\u968f\u673a\u8fc7\u7a0b\u4e2d\u7684\u5a01\u529b,\u8fd9\u6b21\u7684\u4ee3\u7801\u5b9e\u8df5\u63a2\u7d22\u4e00\u4e2a\u975e\u5e73\u8861\u6001\u7edf\u8ba1\u7269\u7406\u4e2d\u7684\u7ecf\u5178\u6a21\u578b\u2014\u2014Schl\u00f6gl\u6a21\u578b\u3002\u8fd9\u4e2a\u6a21\u578b\u63cf\u8ff0\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5c55\u73b0\u53cc\u7a33\u6001(Bistability)\u7684\u5316\u5b66\u53cd\u5e94\u7cfb\u7edf,\u5373\u7cfb\u7edf\u5b58\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u5b8f\u89c2\u7a33\u5b9a\u72b6\u6001\u3002</p> <p>\u8fd9\u4e2a\u6a21\u578b\u7531\u4e3b\u65b9\u7a0b\u4e25\u683c\u63cf\u8ff0,\u968f\u673a\"\u8df3\u8dc3\"\u4e8b\u4ef6\u5728\u8def\u5f84\u79ef\u5206\u7406\u8bba\u4e2d\u6709\u6781\u5176\u6df1\u523b\u7684\u5bf9\u5e94\u7269,\u79f0\u4e3a\"\u77ac\u5b50\"(Instanton) ,\u5373\u7cfb\u7edf\u514b\u670d\u52bf\u5792\u7684\u6700\u53ef\u51e0\u8def\u5f84,\u56e0\u6b64\u8fd9\u4e2a\u4f8b\u5b50\u80fd\u4e0e\u66f4\u9ad8\u7b49\u7684\u573a\u8bba\u6982\u5ff5\u5efa\u7acb\u76f4\u89c2\u8054\u7cfb\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#41-schlogl","title":"4.1 Schl\u00f6gl\u5316\u5b66\u53cd\u5e94\u6a21\u578b","text":"<p>\u8be5\u6a21\u578b\u7531\u4e24\u5bf9\u6b63\u5411\u548c\u9006\u5411\u7684\u5316\u5b66\u53cd\u5e94\u7ec4\u6210:</p> <ol> <li> <p>\u4e09\u4f53\u81ea\u50ac\u5316\u4e0e\u8870\u53d8: \\(A + 2X \\underset{k_2}{\\stackrel{k_1}{\\rightleftharpoons}} 3X\\)</p> </li> <li> <p>\u4ea7\u751f\u4e0e\u7ebf\u6027\u8870\u53d8: \\(B \\underset{k_4}{\\stackrel{k_3}{\\rightleftharpoons}} X\\)</p> </li> </ol> <p>\u5176\u4e2d \\(A, B\\) \u7684\u6d53\u5ea6\u88ab\u89c6\u4e3a\u7531\u5916\u90e8\u73af\u5883\u7ef4\u6301\u7684\u5e38\u6570,\u800c \\(X\\) \u7684\u7c92\u5b50\u6570 \\(n\\) \u662f\u6211\u4eec\u5173\u5fc3\u7684\u968f\u673a\u53d8\u91cf\u3002\u901a\u8fc7\u8c03\u6574\u53cd\u5e94\u901f\u7387,\u8fd9\u4e2a\u7cfb\u7edf\u53ef\u4ee5\u88ab\u8bbe\u8ba1\u6210\u5728\u5e73\u5747\u573a\u5c42\u9762\u62e5\u6709\u4e24\u4e2a\u7a33\u5b9a\u7684\u4e0d\u52a8\u70b9\u548c\u4e00\u4e2a\u4e0d\u7a33\u5b9a\u7684\u4e0d\u52a8\u70b9\u3002</p> <p>\u5bf9\u4e8eGillespie\u6a21\u62df,\u6211\u4eec\u9700\u8981\u6bcf\u4e2a\u53cd\u5e94\u901a\u9053\u7684\u503e\u5411\u6027(propensity): $$ A + 2X \\to 3X: a_1 = k_1 [A] \\frac{n(n-1)}{2} $$</p> \\[ 3X \\to A + 2X: a_2 = k_2 \\frac{n(n-1)(n-2)}{6} \\] \\[ B \\to X: a_3 = k_3 [B] \\] \\[ X \\to B: a_4 = k_4 n \\]"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#42","title":"4.2 \u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.animation as animation\nfrom matplotlib.colors import LightSource\n\n# --- Use dark theme ---\nplt.style.use('dark_background')\n\ndef gillespie_schlogl_single(n0, k, t_max):\n    \"\"\"Single Gillespie simulation of Schlogl model\"\"\"\n    t, n = 0.0, float(n0) # Ensure n is a float\n    times, populations = [t], [n]\n    k1, k2, k3, k4 = k\n\n    while t &lt; t_max:\n        if n &lt; 0: n = 0 # *** Added robustness: prevent negative particle count ***\n\n        # Propensity calculations (for simplicity, constant concentrations are absorbed into rate constants)\n        a1 = k1 * n * (n - 1) / 2\n        a2 = k2 * n * (n - 1) * (n - 2) / 6\n        a3 = k3\n        a4 = k4 * n\n\n        a_total = a1 + a2 + a3 + a4\n        if a_total &lt;= 1e-9:\n            # If total rate is extremely small, jump forward a small step to avoid infinite loop\n            t += 0.1 \n            if t &gt; t_max: break\n            times.append(t)\n            populations.append(n)\n            continue\n\n        dt = -np.log(np.random.rand()) / a_total\n        t += dt\n        if t &gt; t_max: break\n\n        # Determine which reaction occurs\n        rand_val = np.random.rand() * a_total\n        if rand_val &lt; a1:\n            n += 1  # A + 2X -&gt; 3X\n        elif rand_val &lt; a1 + a2:\n            n -= 1  # 3X -&gt; A + 2X\n        elif rand_val &lt; a1 + a2 + a3:\n            n += 1  # B -&gt; X\n        else:\n            n -= 1  # X -&gt; B\n\n        times.append(t)\n        populations.append(n)\n\n    return times, populations\n\n\nk_params = [3e-7, 1e-4, 1e-3 * 105, 1.0] \nN_TRAJECTORIES = 10000\nT_MAX_SHORT = 50.0\nTIME_SLICES = 100\nN_BINS = 500\nN0_short = 100\n\nprint(\"Running large-scale simulations for probability landscape...\")\nfinal_trajectories = np.zeros((N_TRAJECTORIES, TIME_SLICES))\ntime_points = np.linspace(0, T_MAX_SHORT, TIME_SLICES)\n\nfor i in range(N_TRAJECTORIES):\n    if i % 1000 == 0:\n        print(f\"Simulating trajectory {i}/{N_TRAJECTORIES}\")\n    t, p = gillespie_schlogl_single(N0_short, k_params, T_MAX_SHORT)\n    interp_p = np.interp(time_points, t, p, right=p[-1])\n    final_trajectories[i, :] = interp_p\n\nprint(\"Building probability distribution surface P(n,t)...\")\nprob_surface = np.zeros((N_BINS, TIME_SLICES))\nn_values = np.arange(N_BINS)\nfor i in range(TIME_SLICES):\n    counts, _ = np.histogram(final_trajectories[:, i], bins=np.arange(N_BINS + 1) - 0.5)\n    prob_surface[:, i] = counts / N_TRAJECTORIES\n\n# --- 3D Visualization (corrected) ---\nfig2 = plt.figure(figsize=(16, 12))\nax2 = fig2.add_subplot(111, projection='3d')\n\n# *** Fix: Adjust meshgrid input order to match prob_surface dimensions ***\n# prob_surface dimensions are (N_BINS, TIME_SLICES) -&gt; (n, t)\n# We need T_mesh and N_mesh to have the same dimensions\nT_mesh, N_mesh = np.meshgrid(time_points, n_values)\n\nls = LightSource(azdeg=20, altdeg=45)\n\ndef update_surface(frame):\n    ax2.clear()\n\n    # Slice to get current frame and previous data\n    current_T = T_mesh[:, :frame+1]\n    current_N = N_mesh[:, :frame+1]\n    current_P = prob_surface[:, :frame+1]\n\n    # Apply lighting effects only when there is sufficient data\n    if current_P.shape[1] &gt; 1:\n        rgb = ls.shade(current_P, cmap=plt.cm.magma, vert_exag=0.1, blend_mode='soft')\n        surf = ax2.plot_surface(current_T, current_N, current_P, \n                               rstride=1, cstride=1, facecolors=rgb,\n                               linewidth=0, antialiased=True, alpha=1.0)\n    else: # For the first frame, use colormap without lighting\n        surf = ax2.plot_surface(current_T, current_N, current_P, \n                               rstride=1, cstride=1, cmap=plt.cm.magma,\n                               linewidth=0, antialiased=True, alpha=1.0)\n\n    ax2.set_title(f'Emergence of Bistability: $P(n,t)$ at t={time_points[frame]:.2f}', fontsize=20, pad=20)\n    # Swap X and Y axis labels to match the new grid\n    ax2.set_xlabel('Time (t)', fontsize=15, labelpad=20)\n    ax2.set_ylabel('Particle Number (n)', fontsize=15, labelpad=20)\n    ax2.set_zlabel('Probability P(n,t)', fontsize=15, labelpad=20)\n\n    ax2.set_xlim(0, T_MAX_SHORT)\n    ax2.set_ylim(0, N_BINS)\n    ax2.set_zlim(0, np.max(prob_surface) * 1.1 if np.max(prob_surface) &gt; 0 else 0.1)\n    ax2.view_init(elev=25, azim=-150 + frame * 0.5) \n\n    ax2.xaxis.set_pane_color((0.0, 0.0, 0.0, 1.0))\n    ax2.yaxis.set_pane_color((0.0, 0.0, 0.0, 1.0))\n    ax2.zaxis.set_pane_color((0.1, 0.1, 0.1, 1.0))\n\nani = animation.FuncAnimation(fig2, update_surface, frames=TIME_SLICES, interval=80)\n\nprint(\"Saving animation... (This may take a moment)\")\nani.save('schlogl_bistability_evolution.gif', writer='pillow', fps=15)\n</code></pre> <p>\u521d\u59cb\u72b6\u6001 (t=0) :\u6982\u7387\u5206\u5e03\u662f\u4e00\u4e2a\u4f4d\u4e8e \\(n=100\\) \u7684\u5c16\u9510\"\u8109\u51b2\"(\u5728\u56fe\u4e2d\u8868\u73b0\u4e3a\u4e00\u4e2a\u5728\u65f6\u95f4\u8f74\u8d77\u70b9\u5904\u7684\u5c16\u9510\"\u5c71\u810a\"),\u4ee3\u8868\u6240\u6709\u6a21\u62df\u8f68\u8ff9\u90fd\u4ece\u4e00\u4e2a\u786e\u5b9a\u7684\u521d\u59cb\u6761\u4ef6\u51fa\u53d1\u3002</p> <p>\u6f14\u5316\u8fc7\u7a0b\u4e0e\u5206\u88c2:\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb,\u8fd9\u4e2a\u5355\u4e00\u7684\u6982\u7387\"\u5c71\u5cf0\"\u8fc5\u901f\u5c55\u5bbd\u5e76\u79fb\u52a8\u3002\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u662f,\u5728\u7ecf\u8fc7\u4e00\u6bb5\u77ed\u6682\u7684\u65f6\u95f4\u540e,\u8fd9\u4e2a\u5355\u5cf0\u5206\u5e03\u5206\u88c2\u6210\u4e86\u4e24\u4e2a\u72ec\u7acb\u7684\u5cf0\u3002\u8fd9\u6b63\u662f\u53cc\u7a33\u6001(Bistability)\u5728\u6982\u7387\u5206\u5e03\u5c42\u9762\u4e0a\u7684\u76f4\u63a5\u4f53\u73b0\u3002</p> <p>\u53cc\u7a33\u6001\u7684\u6d8c\u73b0:\u4e00\u4e2a\u5cf0\u9010\u6e10\u5f62\u6210\u5e76\u7a33\u5b9a\u5728\u4f4e\u7c92\u5b50\u6570\u533a\u57df(\\(n \\approx 85\\)),\u53e6\u4e00\u4e2a\u5cf0\u5219\u5728\u9ad8\u7c92\u5b50\u6570\u533a\u57df(\\(n \\approx 380\\))\u5f62\u6210\u3002\u8fd9\u8868\u660e,\u968f\u7740\u65f6\u95f4\u7684\u6f14\u5316,\u4ece\u540c\u4e00\u4e2a\u521d\u59cb\u70b9\u51fa\u53d1\u7684\u7cfb\u7edf,\u6700\u7ec8\u4f1a\u4ee5\u4e00\u5b9a\u7684\u6982\u7387\u5206\u5e03\u5728\u8fd9\u4e24\u4e2a\u72b6\u6001\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u3002</p> <p>\u7a33\u6001\u5206\u5e03:\u968f\u7740\u52a8\u753b\u7684\u8fdb\u884c,\u4e24\u4e2a\u5cf0\u7684\u9ad8\u5ea6\u548c\u5f62\u72b6\u9010\u6e10\u7a33\u5b9a\u4e0b\u6765,\u5f62\u6210\u4e86\u7cfb\u7edf\u7684\u6700\u7ec8\u7a33\u6001\u6982\u7387\u5206\u5e03\u2014\u2014\u4e00\u4e2a\u5178\u578b\u7684\u53cc\u5cf0\u5206\u5e03\u3002\u5176\u4e2d,\u4f4e\u4f4d\u7a33\u5b9a\u6001\u7684\u5cf0\u66f4\u9ad8,\u8868\u660e\u8fd9\u4e2a\u72b6\u6001\u66f4\u7a33\u5b9a(\u5176\"\u52bf\u9631\"\u66f4\u6df1),\u7cfb\u7edf\u957f\u65f6\u95f4\u540e\u505c\u7559\u5728\u8be5\u72b6\u6001\u7684\u6982\u7387\u66f4\u5927\u3002</p> <p>\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u4e86\u6982\u7387\u5982\u4f55\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\"\u6d41\u52a8\"\u548c\u91cd\u65b0\u5206\u5e03\u3002\u800c\u8def\u5f84\u79ef\u5206,\u6b63\u662f\u8ba1\u7b97\u8fd9\u79cd\"\u6d41\u52a8\"\u7684\u4f20\u64ad\u5b50\u3001\u5e76\u6700\u7ec8\u63cf\u7ed8\u51fa\u6574\u4e2a\u6f14\u5316\u666f\u89c2\u7684\u6839\u672c\u6027\u7406\u8bba\u5de5\u5177\u3002</p>"},{"location":"zh/notes/35.%20%E4%B8%BB%E6%96%B9%E7%A8%8B%E7%9A%84%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E8%A1%A8%E7%A4%BA/#_2","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u4ece\u4e00\u4e2a\u57fa\u672c\u7684\u4e3b\u65b9\u7a0b\u5230\u4e00\u4e2a\u8def\u5f84\u79ef\u5206\u8868\u793a\u7684\u8fc7\u7a0b,\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u6cca\u677e\u8868\u793a,\u5de7\u5999\u5730\u5c06\u4e00\u4e2a\u63cf\u8ff0\u79bb\u6563\u7c92\u5b50\u6570\u7684\u7cfb\u7edf,\u6620\u5c04\u5230\u4e00\u4e2a\u7531\u8fde\u7eed\u573a \\(x(t)\\) \u548c\u5176\u5171\u8f6d\u573a \\(q(t)\\) \u6784\u6210\u7684\u573a\u8bba\u6846\u67b6\u3002</p> <p>\u5173\u952e\u6b65\u9aa4:</p> <ol> <li> <p>\u6cca\u677e\u53d8\u6362:\u5c06\u79bb\u6563\u7684\u6982\u7387\u5206\u5e03 \\(P(n,t)\\) \u7f16\u7801\u4e3a\u8fde\u7eed\u51fd\u6570 \\(|\\Psi(x,t)\\rangle\\),\u8fd9\u4e00\u6b65\u5c06\u539f\u59cb\u4e3b\u65b9\u7a0b\u4e2d\u7684\u79bb\u6563\u8f6c\u79fb\u77e9\u9635 \\(\\hat{Q}\\) \u8f6c\u5316\u4e3a\u4f5c\u7528\u4e8e\u8fde\u7eed\u7a7a\u95f4\u7684\u5fae\u5206\u7b97\u7b26 \\(\\hat{Q}(x, \\partial_x)\\)\u3002</p> </li> <li> <p>\u7c7b\u859b\u5b9a\u8c14\u65b9\u7a0b:\u7531\u6b64\u5f97\u5230\u4e00\u4e2a\u5f62\u5f0f\u4e0a\u4e0e\u865a\u65f6\u859b\u5b9a\u8c14\u65b9\u7a0b\u540c\u6784\u7684\u6f14\u5316\u65b9\u7a0b \\(\\frac{\\partial}{\\partial t} |\\Psi(x,t)\\rangle = \\hat{Q}(x,\\partial_x) |\\Psi(x,t)\\rangle\\)\u3002\u8fd9\u4e00\u7c7b\u6bd4\u63ed\u793a\u4e86\u7ecf\u5178\u968f\u673a\u8fc7\u7a0b\u4e0e\u91cf\u5b50\u529b\u5b66\u4e4b\u95f4\u6df1\u523b\u7684\u6570\u5b66\u8054\u7cfb,\u4e3a\u540e\u7eed\u501f\u7528\u91cf\u5b50\u573a\u8bba\u5de5\u5177\u5960\u5b9a\u4e86\u57fa\u7840\u3002</p> </li> <li> <p>\u8def\u5f84\u79ef\u5206\u63a8\u5bfc:\u5229\u7528\u65f6\u95f4\u79bb\u6563\u5316\u548c\u5085\u91cc\u53f6\u6052\u7b49\u5f0f\u7b49\u4e00\u7cfb\u5217\u5de7\u5999\u7684\u6570\u5b66\u6280\u5de7,\u6700\u7ec8\u5c06\u5fae\u5206\u65b9\u7a0b\u7684\u89e3\u8868\u793a\u4e3a\u5bf9\u6240\u6709\u573a\u5386\u53f2\u8def\u5f84\u7684\u79ef\u5206\u3002\u5176\u6743\u91cd\u7531\u6838\u5fc3\u7684\u4f5c\u7528\u91cf \\(S'[x,q] = \\int d\\tau [iq(\\tau)\\partial_\\tau x(\\tau) - \\hat{Q}(x(\\tau), iq(\\tau))]\\) \u51b3\u5b9a\u3002\u8fd9\u4e2a\u4f5c\u7528\u91cf\u5b8c\u6574\u5730\u7f16\u7801\u4e86\u5fae\u89c2\u7684\u968f\u673a\u52a8\u529b\u5b66\u89c4\u5219,\u5305\u542b\u4e86\u4e00\u4e2a\u63cf\u8ff0\u65f6\u95f4\u6f14\u5316\u7684\u52a8\u529b\u5b66\u9879 \\(iq(\\tau)\\partial_\\tau x(\\tau)\\) \u548c\u4e00\u4e2a\u5305\u542b\u4e86\u7cfb\u7edf\u5177\u4f53\u7269\u7406\u8fc7\u7a0b\u7684\u54c8\u5bc6\u987f\u9879 \\(-\\hat{Q}(x(\\tau), iq(\\tau))\\)\u3002</p> </li> </ol> <p>\u5b83\u4e3a\u5206\u6790\u590d\u6742\u7684\u975e\u5e73\u8861\u968f\u673a\u8fc7\u7a0b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7cfb\u7edf\u6027\u7684\u3001\u7b2c\u4e00\u6027\u7684\u51fa\u53d1\u70b9\u3002\u6709\u4e86\u8fd9\u4e2a\u4f5c\u7528\u91cf \\(S'[x,q]\\),\u5c31\u53ef\u4ee5\u4f7f\u7528\u7edf\u8ba1\u573a\u8bba\u7684\u5168\u90e8\u5de5\u5177\u7bb1:</p> <p>\u978d\u70b9\u8fd1\u4f3c:\u53ef\u4ee5\u65b9\u4fbf\u5730\u5bfc\u51fa\u7cfb\u7edf\u7684\u5e73\u5747\u573a\u884c\u4e3a(\u901f\u7387\u65b9\u7a0b),\u4f8b\u5982\u5728\u968f\u673a\u903b\u8f91\u65af\u8482\u589e\u957f\u4e2d,\u978d\u70b9\u8fd1\u4f3c\u6062\u590d\u4e86\u786e\u5b9a\u6027\u903b\u8f91\u65af\u8482\u65b9\u7a0b\u3002</p> <p>\u9ad8\u65af\u79ef\u5206(\u5355\u73af\u8fd1\u4f3c):\u5728\u978d\u70b9\u9644\u8fd1\u5c55\u5f00\u4f5c\u7528\u91cf,\u53ef\u4ee5\u7cfb\u7edf\u5730\u8ba1\u7b97\u56f4\u7ed5\u5e73\u5747\u573a\u7684\u6da8\u843d\u548c\u5173\u8054\u51fd\u6570\u3002</p> <p>\u91cd\u6574\u5316\u7fa4:\u5bf9\u4e8e\u4e34\u754c\u73b0\u8c61,\u53ef\u4ee5\u4f7f\u7528\u91cd\u6574\u5316\u7fa4\u65b9\u6cd5\u6765\u5206\u6790\u4f5c\u7528\u91cf,\u4ece\u800c\u8ba1\u7b97\u4e34\u754c\u6307\u6570\u7b49\u666e\u9002\u91cf,\u514b\u670d\u4e86\u4f20\u7edf\u8c31\u65b9\u6cd5\u5728\u5904\u7406\u6da8\u843d\u548c\u7a7a\u95f4\u5173\u8054\u65b9\u9762\u7684\u5c40\u9650\u3002</p> <p>\u8fd9\u4e2a\u573a\u8bba\u6846\u67b6\u5c06\u539f\u672c\u770b\u4f3c\u53ea\u80fd\u901a\u8fc7\u6570\u503c\u6a21\u62df\u5904\u7406\u7684\u590d\u6742\u968f\u673a\u95ee\u9898,\u5e26\u5165\u4e86\u5206\u6790\u8ba1\u7b97\u7684\u8303\u7574,\u4e3a\u7406\u89e3\u4ece\u5316\u5b66\u53cd\u5e94\u7f51\u7edc\u5230\u6d41\u884c\u75c5\u4f20\u64ad\u3001\u518d\u5230\u751f\u6001\u7cfb\u7edf\u52a8\u6001\u7b49\u4f17\u591a\u9886\u57df\u4e2d\u7684\u96c6\u4f53\u884c\u4e3a\u548c\u76f8\u53d8\u73b0\u8c61\u5f00\u8f9f\u4e86\u9053\u8def\u3002\u4f8b\u5982,\u672c\u8bb2\u901a\u8fc7Schl\u00f6gl\u6a21\u578b\u7684\u53ef\u89c6\u5316,\u751f\u52a8\u5730\u5c55\u793a\u4e86\u7cfb\u7edf\u5982\u4f55\u5728\u968f\u673a\u6da8\u843d\u7684\u9a71\u52a8\u4e0b,\u4ece\u5355\u4e00\u7a33\u5b9a\u6001\u6f14\u53d8\u4e3a\u53cc\u7a33\u6001,\u5f62\u6210\u52a8\u6001\u7684\u6982\u7387\u666f\u89c2,\u8fd9\u662f\u5e73\u5747\u573a\u7406\u8bba\u65e0\u6cd5\u5b8c\u5168\u6355\u6349\u7684\u4e30\u5bcc\u73b0\u8c61\u3002</p> <p>\u8fd9\u8282\u8bfe\u6240\u4ecb\u7ecd\u7684\u6cca\u677e\u8868\u793a\u548c\u5176\u884d\u751f\u7684\u8def\u5f84\u79ef\u5206\u5f62\u5f0f,\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u66f4\u6df1\u5c42\u3001\u66f4\u666e\u9002\u7684\u4ee3\u6570\u7ed3\u6784\u7684\u4e00\u4e2a\u5177\u4f53\u5b9e\u73b0\u3002\u8fd9\u4e2a\u6f5c\u5728\u7684\u7ed3\u6784\u4e0e\u91cf\u5b50\u529b\u5b66\u4e2d\u5904\u7406\u8c10\u632f\u5b50\u548c\u591a\u4f53\u7cfb\u7edf\u7684\u4ea7\u751f(creation)\u548c\u6e6e\u706d(annihilation)\u7b97\u7b26\u7684\u4ee3\u6570\u60ca\u4eba\u5730\u76f8\u4f3c\u3002</p> <p>\u5728\u4e0b\u4e00\u8bb2(\u7b2c36\u8bb2)\u4e2d,\u5c06\u6df1\u5165\u63a2\u8ba8\u8fd9\u4e2a\u4ee3\u6570\u57fa\u7840,\u5373\u6240\u8c13\u7684\u591a\u4f0a-\u4f69\u5229\u8482(Doi-Peliti)\u5f62\u5f0f\u4e3b\u4e49 \u3002\u5c4a\u65f6\u4f1a\u53d1\u73b0:</p> <ul> <li> <p>\u751f\u6210\u573a \\(x\\) \u53ef\u4ee5\u88ab\u4e25\u683c\u5730\u7b49\u540c\u4e8e\u4e00\u4e2a\u4ea7\u751f\u7b97\u7b26 \\(a^\\dagger\\) \u3002</p> </li> <li> <p>\u6c42\u5bfc\u7b97\u7b26 \\(\\partial_x\\) \u53ef\u4ee5\u88ab\u7b49\u540c\u4e8e\u4e00\u4e2a\u6e6e\u706d\u7b97\u7b26 \\(a\\) \u3002</p> </li> <li> <p>\u5b83\u4eec\u4e4b\u95f4\u7684\u57fa\u672c\u5bf9\u6613\u5173\u7cfb \\([\\partial_x, x] = 1\\) \u6b63\u662f\u73bb\u8272\u5b50\u4ea7\u751f-\u6e6e\u706d\u7b97\u7b26\u7684\u57fa\u672c\u5bf9\u6613\u5173\u7cfb \\([a, a^\\dagger] = 1\\) \u7684\u4f53\u73b0\u3002</p> </li> </ul> <p>\u4ece\u8fd9\u4e2a\u66f4\u57fa\u672c\u7684\u7b97\u7b26\u4ee3\u6570\u51fa\u53d1,\u5c06\u91cd\u65b0\u63a8\u5bfc\u8def\u5f84\u79ef\u5206,\u5f97\u5230\u6240\u8c13\u7684\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206(Coherent State Path Integral)\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u4ec5\u5728\u5f62\u5f0f\u4e0a\u66f4\u4e3a\u4f18\u96c5\u548c\u5f3a\u5927,\u8fd8\u80fd\u66f4\u6e05\u6670\u5730\u63ed\u793a\u7406\u8bba\u7684\u6df1\u5c42\u7ed3\u6784,\u5e76\u81ea\u7136\u5730\u89e3\u91ca\u5728\u67d0\u4e9b\u95ee\u9898\u4e2d\u51fa\u73b0\u7684\u6240\u8c13\"\u865a\u566a\u58f0\"(imaginary noise)\u9879\u7684\u6765\u6e90\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/","title":"\u5f15\u8a00\uff1a\u5bfb\u6c42\u66f4\u7cfb\u7edf\u6027\u7684\u8def\u5f84\u79ef\u5206","text":"<p>\u5728\u7b2c35\u8bb2\u4e2d\uff0c\u4e00\u4e2a\u57fa\u4e8e\u6cca\u677e\u8868\u793a\u7684\u8def\u5f84\u79ef\u5206\u6846\u67b6\u88ab\u6210\u529f\u6784\u5efa\u51fa\u6765\uff0c\u4ece\u800c\u5c06\u4e3b\u65b9\u7a0b\u6240\u63cf\u8ff0\u7684\u79bb\u6563\u968f\u673a\u8fc7\u7a0b\uff0c\u8f6c\u5316\u4e3a\u4e86\u201c\u5386\u53f2\u6c42\u548c\u201d\u7684\u8bed\u8a00\u3002\u8be5\u65b9\u6cd5\u867d\u7136\u6709\u6548\uff0c\u4f46\u4e5f\u63ed\u793a\u4e86\u4e00\u4e2a\u65b9\u6cd5\u8bba\u4e0a\u7684\u6311\u6218\uff1a\u5176\u4f5c\u7528\u91cf\uff08Action\uff09\u7684\u6784\u5efa\u8fc7\u7a0b\u663e\u5f97\u6709\u4e9b\u542f\u53d1\u5f0f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65b0\u7684\u53cd\u5e94\u7cfb\u7edf\uff0c\u4f3c\u4e4e\u90fd\u9700\u8981\u4e00\u5b9a\u7a0b\u5ea6\u7684\u91cd\u65b0\u6784\u9020\u3002\u8fd9\u5f15\u51fa\u4e86\u4e00\u4e2a\u5173\u952e\u95ee\u9898\uff1a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u66f4\u57fa\u672c\u3001\u66f4\u7cfb\u7edf\u6027\u7684\u7406\u8bba\u6846\u67b6\u2014\u2014\u4e00\u4e2a\u7406\u8bba\u201c\u673a\u5668\u201d\u2014\u2014\u80fd\u591f\u63a5\u6536\u4efb\u610f\u7ed9\u5b9a\u7684\u53cd\u5e94\u7f51\u7edc\uff0c\u5e76\u81ea\u52a8\u5730\u751f\u6210\u5176\u5bf9\u5e94\u7684\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\uff1f</p> <p>\u4e3a\u6b64\uff0c\u9700\u8981\u5efa\u7acb\u8fd9\u6837\u4e00\u79cd\u6846\u67b6\u3002\u5176\u6838\u5fc3\u7b56\u7565\u662f\u8fdb\u884c\u4e00\u6b21\u6df1\u523b\u7684\u8303\u5f0f\u8f6c\u6362\uff1a\u4e0d\u518d\u76f4\u63a5\u4ece\u6982\u7387\u672c\u8eab\u51fa\u53d1\uff0c\u800c\u662f\u9996\u5148\u5c06\u63cf\u8ff0\u79bb\u6563\u968f\u673a\u8fc7\u7a0b\u7684\u4e3b\u65b9\u7a0b\uff0c\u6620\u5c04\u5230\u4e00\u4e2a\u7b97\u7b26\u4ee3\u6570\uff08Operator Algebra\uff09\u7684\u6846\u67b6\u4e2d\u3002\u5728\u6b64\u4ee3\u6570\u7ed3\u6784\u5185\uff0c\u4e3b\u65b9\u7a0b\u5448\u73b0\u51fa\u4e00\u79cd\u4e0e\u91cf\u5b50\u529b\u5b66\u4e2d\u7684\u859b\u5b9a\u8c14\u65b9\u7a0b\u60ca\u4eba\u76f8\u4f3c\u7684\u5f62\u5f0f\u3002\u8fd9\u79cd\u7c7b\u6bd4\u5e76\u975e\u6d45\u5c1d\u8f84\u6b62\uff0c\u5b83\u63ed\u793a\u4e86\u7ecf\u5178\u968f\u673a\u8fc7\u7a0b\u4e0e\u91cf\u5b50\u7cfb\u7edf\u4e4b\u95f4\u6df1\u523b\u7684\u7ed3\u6784\u6027\u5bf9\u5e94\u5173\u7cfb\uff0c\u5e76\u6784\u6210\u4e86\u5728\u7b2c34\u8bb2\u4e2d\u4e3a\u6c42\u89e3\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u800c\u5f15\u5165\u7684\u8c31\u65b9\u6cd5\u548c\u5347\u964d\u7b97\u7b26\u601d\u60f3\u7684\u6709\u529b\u63a8\u5e7f\u3002</p> <p>\u4e3a\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u5c06\u53d1\u5c55\u4ee5\u4e0b\u51e0\u4e2a\u6838\u5fc3\u6982\u5ff5\uff1a</p> <ol> <li> <p>\u6cca\u677e\u8868\u793a\uff08Poisson Representation\uff09\uff1a\u4e3a\u79bb\u6563\u7c92\u5b50\u6570\u7cfb\u7edf\u5efa\u7acb\u4e00\u5957\u5b8c\u5907\u7684\u201c\u6001\u201d\u57fa\u77e2\uff0c\u4e3a\u6240\u6709\u540e\u7eed\u7684\u4ee3\u6570\u8fd0\u7b97\u63d0\u4f9b\u821e\u53f0\u3002</p> </li> <li> <p>\u4ea7\u751f\u4e0e\u6e6e\u706d\u7b97\u7b26\uff08Creation and Annihilation Operators\uff09\uff1a\u5c06\u5316\u5b66\u53cd\u5e94\u4e2d\u7c92\u5b50\u6570\u91cf\u7684\u589e\u51cf\uff0c\u4ece\u5177\u4f53\u7684\u8ba1\u6570\u64cd\u4f5c\u62bd\u8c61\u4e3a\u7b80\u6d01\u7684\u4ee3\u6570\u8fd0\u7b97\u3002</p> </li> <li> <p>\u7b97\u7b26\u5f62\u5f0f\u7684\u4e3b\u65b9\u7a0b\uff1a\u5c06\u4e3b\u65b9\u7a0b\u91cd\u5199\u4e3a\u4e00\u4e2a\u63cf\u8ff0\u201c\u6001\u77e2\u91cf\u201d\u5728\u7b97\u7b26\u4f5c\u7528\u4e0b\u8fdb\u884c\u65f6\u95f4\u6f14\u5316\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u3002</p> </li> <li> <p>\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\uff08Coherent State Path Integral\uff09\uff1a\u4ece\u8fd9\u79cd\u57fa\u4e8e\u7b97\u7b26\u7684\u52a8\u529b\u5b66\u51fa\u53d1\uff0c\u7cfb\u7edf\u6027\u5730\u63a8\u5bfc\u51fa\u4e00\u4e2a\u8def\u5f84\u79ef\u5206\u3002\u8be5\u79ef\u5206\u4e0d\u518d\u662f\u5bf9\u79bb\u6563\u7684\u7c92\u5b50\u6570\u8def\u5f84\u6c42\u548c\uff0c\u800c\u662f\u5bf9\u4e00\u4e2a\u8fde\u7eed\u8f85\u52a9\u573a\u7684\u6240\u6709\u53ef\u80fd\u8f68\u8ff9\u8fdb\u884c\u79ef\u5206\uff0c\u8fd9\u4e2a\u573a\u7684\u52a8\u529b\u5b66\u5c06\u5b8c\u7f8e\u5730\u7f16\u7801\u539f\u59cb\u79bb\u6563\u7cfb\u7edf\u7684\u5168\u90e8\u968f\u673a\u4fe1\u606f\u3002</p> </li> </ol> <p>\u8fd9\u79cd\u4ece\u6982\u7387\u63cf\u8ff0\u5230\u52a8\u529b\u5b66\u573a\u8bba\u7684\u8f6c\u53d8\uff0c\u5176\u610f\u4e49\u8fdc\u8d85\u6570\u5b66\u4e0a\u7684\u4fbf\u6377\u3002\u5b83\u4f7f\u5f97\u90a3\u4e9b\u5728\u91cf\u5b50\u573a\u8bba\u4e2d\u53d1\u5c55\u8d77\u6765\u7684\u5f3a\u5927\u5206\u6790\u5de5\u5177\u2014\u2014\u4f8b\u5982\u8d39\u66fc\u56fe\u548c\u91cd\u6574\u5316\u7fa4\uff0c\u8fd9\u4e9b\u5de5\u5177\u4e5f\u662f\u7b2c32\u8bb2\u4e2dJ-D\u5f62\u5f0f\u4f53\u7cfb\u5206\u6790\u8fde\u7eed\u7cfb\u7edf\u7684\u6838\u5fc3\u2014\u2014\u73b0\u5728\u53ef\u4ee5\u88ab\u7528\u6765\u7cfb\u7edf\u5730\u5206\u6790\u7ecf\u5178\u7684\u53cd\u5e94\u7cfb\u7edf\u3002\u8fd9\u8282\u8bfe\u6240\u6784\u5efa\u7684\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\uff0c\u6b63\u662f\u8fde\u63a5\u8fd9\u4e24\u4e2a\u5b8f\u4f1f\u7406\u8bba\u4e16\u754c\u7684\u5173\u952e\u6865\u6881\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#1","title":"1. \u6cca\u677e\u8868\u793a\uff1a\u7c92\u5b50\u7cfb\u7edf\u7684\u81ea\u7136\u57fa\u5e95","text":"<p>\u4e3a\u4e86\u5c06\u4e3b\u65b9\u7a0b\u4ee3\u6570\u5316\uff0c\u9996\u8981\u4efb\u52a1\u662f\u4e3a\u7cfb\u7edf\u7684\u72b6\u6001\u2014\u2014\u5373\u4e0d\u540c\u7c92\u5b50\u6570 \\(n\\) \u7684\u6982\u7387\u5206\u5e03 \\(P(n,t)\\)\u2014\u2014\u627e\u5230\u4e00\u4e2a\u5408\u9002\u7684\u6570\u5b66\u8868\u793a\u3002\u7531\u4e8e\u4e3b\u65b9\u7a0b\u7684\u53d8\u91cf\u662f\u79bb\u6563\u7684\u6574\u6570\uff0c\u65e0\u6cd5\u76f4\u63a5\u5e94\u7528\u573a\u8bba\u4e2d\u5f3a\u5927\u7684\u5fae\u79ef\u5206\u5de5\u5177\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4e00\u5ea7\u6570\u5b66\u7684\u6865\u6881\uff0c\u5c06\u8fd9\u4e2a\u79bb\u6563\u7684\u7c92\u5b50\u6570\u7a7a\u95f4\u6620\u5c04\u5230\u4e00\u4e2a\u7b49\u6548\u7684\u3001\u7531\u8fde\u7eed\u53d8\u91cf\u63cf\u8ff0\u7684\u5e0c\u5c14\u4f2f\u7279\u7a7a\u95f4\u4e2d\u3002\u501f\u9274\u91cf\u5b50\u529b\u5b66\u7684\u601d\u60f3\uff0c\u6b64\u5904\u5f15\u5165\u4e00\u5957\u7279\u6b8a\u7684\u57fa\u77e2\uff0c\u79f0\u4e3a\u6cca\u677e\u57fa\u77e2\uff08Poisson basis\uff09\uff0c\u5b83\u6784\u6210\u4e86\u540e\u7eed\u6240\u6709\u4ee3\u6570\u8fd0\u7b97\u7684\u821e\u53f0\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#11","title":"1.1 \u57fa\u77e2\u4e0e\u7b97\u7b26\u7684\u5b9a\u4e49","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5305\u542b \\(n\\) \u4e2a\u7c92\u5b50\u7684\u72b6\u6001\uff0c\u5176\u5bf9\u5e94\u7684\u6cca\u677e\u57fa\u77e2 \\(|n\\rangle_x\\) \u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5173\u4e8e\u8fde\u7eed\u53d8\u91cf \\(x\\) \u7684\u51fd\u6570\uff1a $$ |n\\rangle_x := \\frac{x^n}{n!} e^{-x} $$ \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u9009\u62e9\u5e76\u975e\u5076\u7136\u3002\u5b83\u6b63\u662f\u5747\u503c\u4e3a \\(x\\) \u7684\u6cca\u677e\u5206\u5e03\u7684\u6982\u7387\u8d28\u91cf\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u53d8\u91cf \\(x\\) \u53ef\u4ee5\u88ab\u76f4\u89c2\u5730\u7406\u89e3\u4e3a\u4e00\u4e2a\u6cca\u677e\u8fc7\u7a0b\u7684\u5e73\u5747\u7c92\u5b50\u6570\u6216\u751f\u6210\u573a\u53c2\u6570\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u5b9a\u4e49\u4f5c\u7528\u5728\u8fd9\u5957\u57fa\u77e2\u4e0a\u7684\u4e24\u79cd\u57fa\u672c\u7b97\u7b26\uff1a\u4ea7\u751f\u7b97\u7b26 \\(a^+\\) \u548c \u6e6e\u706d\u7b97\u7b26 \\(a\\) \u3002\u5b83\u4eec\u5bf9\u53d8\u91cf \\(x\\) \u7684\u64cd\u4f5c\u88ab\u5b9a\u4e49\u4e3a\uff1a $$ a^+ \\equiv x, \\quad a \\equiv \\partial_x + 1 $$ \u8fd9\u4e24\u4e2a\u7b97\u7b26\u662f\u6574\u4e2a\u4ee3\u6570\u6846\u67b6\u7684\u57fa\u77f3\u3002\u8fd9\u91cc\u7684\u6e6e\u706d\u7b97\u7b26\u5b9a\u4e49\u5305\u542b\u4e86\u4e00\u4e2a +1 \u7684\u9879\uff0c\u8fd9\u88ab\u79f0\u4e3a\u201cDoi-shift\u201d\u3002\u8fd9\u662f\u4e00\u79cd\u6570\u5b66\u4e0a\u7684\u7ea6\u5b9a\uff0c\u5176\u76ee\u7684\u662f\u4f7f\u7b97\u7b26\u7684\u4ee3\u6570\u5173\u7cfb\uff08\u5982\u4e0b\u6587\u6240\u793a\uff09\u4e0e\u91cf\u5b50\u529b\u5b66\u4e2d\u6807\u51c6\u7684\u73bb\u8272\u5b50\u7b97\u7b26\u4ee3\u6570\u5b8c\u5168\u4e00\u81f4\uff0c\u4ece\u800c\u6781\u5927\u5730\u7b80\u5316\u7406\u8bba\u6846\u67b6\u3002</p> <p>\u5b83\u4eec\u4e4b\u6240\u4ee5\u88ab\u79f0\u4e3a\u201c\u4ea7\u751f\u201d\u548c\u201c\u6e6e\u706d\u201d\u7b97\u7b26\uff0c\u662f\u56e0\u4e3a\u5b83\u4eec\u4f5c\u7528\u5728\u57fa\u77e2 \\(|n\\rangle_x\\) \u4e0a\u65f6\uff0c\u5176\u6548\u679c\u5206\u522b\u662f\u4f7f\u7c92\u5b50\u6570\u589e\u52a0\u6216\u51cf\u5c11\u4e00\u4e2a\u5355\u4f4d\u3002\u901a\u8fc7\u76f4\u63a5\u8ba1\u7b97\u53ef\u4ee5\u4e25\u683c\u9a8c\u8bc1\uff1a</p> <p>\u4ea7\u751f\u7b97\u7b26\u7684\u4f5c\u7528: $$ a^+ |n\\rangle_x = x \\left( \\frac{x^n}{n!} e^{-x} \\right) = \\frac{x^{n+1}}{n!} e^{-x} = (n+1) \\frac{x^{n+1}}{(n+1)!} e^{-x} = (n+1) |n+1\\rangle_x $$</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\\(a^+\\) \u5c06\u6001 \\(|n\\rangle_x\\) \u63d0\u5347\u5230\u4e86 \\(|n+1\\rangle_x\\)\uff0c\u5e76\u4f34\u968f\u4e00\u4e2a\u56e0\u5b50 \\((n+1)\\)\u3002</p> <p>\u6e6e\u706d\u7b97\u7b26\u7684\u4f5c\u7528: $$ a |n\\rangle_x = (\\partial_x + 1) \\left( \\frac{x^n}{n!} e^{-x} \\right) = \\left[ \\frac{\\partial}{\\partial_x}\\left( \\frac{x^n}{n!} e^{-x} \\right) \\right] + \\frac{x^n}{n!} e^{-x} $$</p> <p>$$ = \\left[ \\frac{nx^{n-1}}{n!}e^{-x} - \\frac{x^n}{n!}e^{-x} \\right] + \\frac{x^n}{n!}e^{-x} = \\frac{nx^{n-1}}{n!}e^{-x}= \\frac{x^{n-1}}{(n-1)!}e^{-x} = |n-1\\rangle_x $$ \u5728Doi-shift\u7684\u5b9a\u4e49\u4e0b\uff0c\u6e6e\u706d\u7b97\u7b26 \\(a\\) \u80fd\u7b80\u6d01\u5730\u5c06\u6001 \\(|n\\rangle_x\\) \u964d\u4f4e\u5230 \\(|n-1\\rangle_x\\)\u3002\u8fd9\u79cd\u7b80\u6d01\u6027\u6b63\u662f\u91c7\u7528\u8be5\u7ea6\u5b9a\u7684\u6838\u5fc3\u4f18\u52bf\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#12","title":"1.2 \u6838\u5fc3\u4ee3\u6570\u5173\u7cfb","text":"<p>\u8fd9\u4e9b\u7b97\u7b26\u6ee1\u8db3\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u5bf9\u6613\u5173\u7cfb\uff08Commutation Relation\uff09 \u3002\u5bf9\u4e8e\u4efb\u610f\u51fd\u6570 \\(f(x)\\)\uff1a $$ [a, a^+] f(x) = (a a^+ - a^+ a) f(x) = (\\partial_x + 1)(x f(x)) - x(\\partial_x + 1)f(x) $$ $$ = (f(x) + x f'(x) + x f(x)) - (x f'(x) + x f(x)) = f(x) $$ \u7531\u4e8e \\(f(x)\\) \u662f\u4efb\u610f\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f97\u5230\u7b97\u7b26\u7684\u5bf9\u6613\u5173\u7cfb\uff1a $$ [a, a^+] = 1 $$ \u7269\u7406\u610f\u4e49\uff1a\u8fd9\u4e2a\u5173\u7cfb\u4e0e\u91cf\u5b50\u529b\u5b66\u4e2d\u63cf\u8ff0\u73bb\u8272\u5b50\uff08\u5982\u5149\u5b50\uff09\u7684\u4ea7\u751f\u548c\u6e6e\u706d\u7b97\u7b26\u7684\u5bf9\u6613\u5173\u7cfb\u5b8c\u5168\u76f8\u540c\u3002\u8fd9\u4e00\u6df1\u523b\u7684\u6570\u5b66\u540c\u6784\u6027\uff0c\u662f\u80fd\u591f\u5c06\u91cf\u5b50\u573a\u8bba\u5de5\u5177\u5e94\u7528\u4e8e\u7ecf\u5178\u968f\u673a\u8fc7\u7a0b\u7684\u6839\u672c\u539f\u56e0\u3002\u5b83\u6697\u793a\u4e86\u65e0\u8bba\u662f\u5728\u91cf\u5b50\u4e16\u754c\u8fd8\u662f\u7ecf\u5178\u968f\u673a\u4e16\u754c\u4e2d\uff0c\u63cf\u8ff0\u201c\u7c92\u5b50\u201d\u589e\u51cf\u7684\u57fa\u672c\u4ee3\u6570\u7ed3\u6784\u662f\u7edf\u4e00\u7684\u3002</p> <p>\u5229\u7528\u8fd9\u4e9b\u7b97\u7b26\uff0c\u8fd8\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u7c92\u5b50\u6570\u7b97\u7b26\uff08Number Operator\uff09\\(\\hat{n}\\) \uff0c\u5176\u5b9a\u4e49\u4e3a\uff1a $$ \\hat{n} \\equiv a^+ a $$ \u5c06\u5b83\u4f5c\u7528\u5728\u57fa\u77e2 \\(|n\\rangle_x\\) \u4e0a\uff1a</p> \\[ \\hat{n} |n\\rangle_x = a^+ (a |n\\rangle_x) = a^+ |n-1\\rangle_x= x \\left( \\frac{x^{n-1}}{(n-1)!} e^{-x} \\right) = n \\left( \\frac{x^n}{n!} e^{-x} \\right) = n |n\\rangle_x \\] <p>\u7269\u7406\u610f\u4e49\uff1a\u8fd9\u4e2a\u7ed3\u679c\u8868\u660e\uff0c\u6cca\u677e\u57fa\u77e2 \\(|n\\rangle_x\\) \u662f\u7c92\u5b50\u6570\u7b97\u7b26 \\(\\hat{n}\\) \u7684\u672c\u5f81\u6001\uff0c\u5176\u672c\u5f81\u503c\u6070\u597d\u662f\u7c92\u5b50\u6570 \\(n\\)\u3002\u8fd9\u5b8c\u7f8e\u5730\u8bc1\u660e\u4e86\u8fd9\u5957\u4ee3\u6570\u8bed\u8a00\u7684\u81ea\u6d3d\u6027\uff1a\u5b83\u4e0d\u4ec5\u80fd\u589e\u51cf\u7c92\u5b50\uff0c\u8fd8\u80fd\u7cbe\u786e\u5730\u201c\u6d4b\u91cf\u201d\u51fa\u4efb\u4f55\u7ed9\u5b9a\u72b6\u6001\u4e0b\u7684\u7c92\u5b50\u6570\u3002</p> <p>\u6700\u540e\uff0c\u8003\u5bdf \\(n = 0\\) \u7684\u60c5\u51b5\uff0c\u5373\u771f\u7a7a\u6001\uff08Vacuum State\uff09 \u3002\u5176\u57fa\u77e2\u4e3a \\(|0\\rangle_x = e^{-x}\\)\u3002\u6e6e\u706d\u7b97\u7b26\u4f5c\u7528\u5728\u771f\u7a7a\u6001\u4e0a\u5f97\u5230\uff1a</p> <p>$$ a |0\\rangle_x = (\\partial_x+1)e^{-x} = -e^{-x} + e^{-x} = 0 $$ \u8fd9\u7b26\u5408\u7269\u7406\u76f4\u89c9\uff1a\u65e0\u6cd5\u4ece\u4e00\u4e2a\u7a7a\u65e0\u4e00\u7269\u7684\u72b6\u6001\u4e2d\u518d\u79fb\u8d70\u4efb\u4f55\u7c92\u5b50\u3002\\(a |0\\rangle_x = 0\\) \u662f\u5b9a\u4e49\u771f\u7a7a\u6001\u7684\u6838\u5fc3\u5c5e\u6027\uff0c\u5b83\u4e3a\u6240\u6709\u7c92\u5b50\u6001\u7684\u6784\u5efa\u63d0\u4f9b\u4e86\u903b\u8f91\u8d77\u70b9\u3002</p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u6cca\u677e\u8868\u793a\u4e4b\u6240\u4ee5\u662f\u63cf\u8ff0\u8fd9\u7c7b\u7cfb\u7edf\u7684\u201c\u81ea\u7136\u201d\u9009\u62e9\uff0c\u5e76\u975e\u5076\u7136\u3002\u5b83\u662f\u552f\u4e00\u80fd\u591f\u8ba9\u6e6e\u706d\u7b97\u7b26\uff08\u5fae\u5206\uff09\u548c\u4ea7\u751f\u7b97\u7b26\uff08\u4e58\u6cd5\uff09\u62e5\u6709\u5982\u6b64\u7b80\u6d01\u7684\u3001\u4e0e\u73bb\u8272\u5b50\u4ee3\u6570\u540c\u6784\u7684\u6570\u5b66\u7ed3\u6784\u7684\u8868\u793a\u3002\u6574\u4e2a\u7406\u8bba\u6846\u67b6\u6b63\u662f\u5efa\u7acb\u5728\u8fd9\u4e00\u575a\u5b9e\u7684\u6570\u5b66\u57fa\u7840\u4e4b\u4e0a\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#2","title":"2. \u7b97\u7b26\u5f62\u5f0f\u7684\u4e3b\u65b9\u7a0b\u4e0e\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf","text":"<p>\u5728\u4e0a\u4e00\u8282\u5efa\u7acb\u4e86\u5b8c\u5907\u7684\u7b97\u7b26\u4ee3\u6570\u540e\uff0c\u73b0\u5728\u4fbf\u53ef\u4ee5\u8fd0\u7528\u8fd9\u5957\u5de5\u5177\uff0c\u5c06\u7ecf\u5178\u7684\u4e3b\u65b9\u7a0b\u4ece\u4e00\u4e2a\u63cf\u8ff0\u6982\u7387\u6f14\u5316\u7684\u65b9\u7a0b\uff0c\u91cd\u94f8\u4e3a\u4e00\u4e2a\u63cf\u8ff0\u62bd\u8c61\u201c\u6001\u77e2\u91cf\u201d\u5728\u5e0c\u5c14\u4f2f\u7279\u7a7a\u95f4\u4e2d\u6f14\u5316\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u3002\u8fd9\u4e00\u6b65\u662f\u901a\u5f80\u8def\u5f84\u79ef\u5206\u7684\u5173\u952e\uff0c\u56e0\u4e3a\u5b83\u5c06\u95ee\u9898\u8f6c\u5316\u5230\u4e86\u66f4\u9002\u5408\u4f7f\u7528\u573a\u8bba\u5de5\u5177\u7684\u6570\u5b66\u9886\u57df\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#21","title":"2.1 \u4ece\u6982\u7387\u5230\u6001\u77e2\u91cf\uff1a\u7c7b\u859b\u5b9a\u8c14\u65b9\u7a0b","text":"<p>\u9996\u5148\uff0c\u5c06\u7cfb\u7edf\u7684\u6574\u4e2a\u6982\u7387\u5206\u5e03 \\(P(n,t)\\) \u63d0\u5347\u4e3a\u4e00\u4e2a\u5728\u6cca\u677e\u57fa\u77e2\u4e0a\u5c55\u5f00\u7684\u6001\u77e2\u91cf \\(|\\Phi(t)\\rangle\\)\uff1a $$ |\\Phi(t)\\rangle = \\sum_{n=0}^{\\infty} P(n,t) |n\\rangle_x $$ \u8fd9\u4e2a\u6001\u77e2\u91cf \\(|\\Phi(t)\\rangle\\) \u662f\u4e00\u4e2a\u5305\u542b\u4e86\u7cfb\u7edf\u5728\u65f6\u523b \\(t\\) \u5904\u4e8e\u6240\u6709\u53ef\u80fd\u7c92\u5b50\u6570 \\(n\\) \u7684\u5168\u90e8\u6982\u7387\u4fe1\u606f\u7684\u6570\u5b66\u5bf9\u8c61\u3002\u5b83\u672c\u8d28\u4e0a\u662f\u6982\u7387\u5206\u5e03 \\(P(n,t)\\) \u7684\u4e00\u79cd\u751f\u6210\u51fd\u6570\uff0c\u53ea\u4e0d\u8fc7\u88ab\u5199\u6210\u4e86\u66f4\u5177\u7269\u7406\u76f4\u89c9\u7684\u72c4\u62c9\u514b\u201c\u53f3\u77e2\u201d\uff08ket\uff09\u5f62\u5f0f\u3002</p> <p>\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u4e86 \\(P(n,t)\\) \u7684\u65f6\u95f4\u6f14\u5316\u3002\u5176\u4e00\u822c\u5f62\u5f0f\u5305\u542b\u589e\u76ca\u9879\u548c\u635f\u5931\u9879\u3002\u901a\u8fc7\u4e0a\u4e00\u8282\u5efa\u7acb\u7684\u4ee3\u6570\u89c4\u5219\uff0c\u6bcf\u4e00\u4e2a\u5177\u4f53\u7684\u8dc3\u8fc1\u8fc7\u7a0b\uff08\u4f8b\u5982\uff0c\\(k\\) \u4e2a\u7c92\u5b50\u53cd\u5e94\u751f\u6210 \\(\\ell\\) \u4e2a\u7c92\u5b50\uff09\u90fd\u53ef\u4ee5\u88ab\u7cbe\u786e\u5730\u7ffb\u8bd1\u6210\u4e00\u4e2a\u7531\u4ea7\u751f\u7b97\u7b26 \\(a^+\\) \u548c\u6e6e\u706d\u7b97\u7b26 \\(a\\) \u6784\u6210\u7684\u7b97\u7b26\u3002\u5c06\u7cfb\u7edf\u4e2d\u6240\u6709\u53cd\u5e94\u5bf9\u5e94\u7684\u7b97\u7b26\u52a0\u603b\uff0c\u4fbf\u5f97\u5230\u4e00\u4e2a\u603b\u7684\u8dc3\u8fc1\u7b97\u7b26 \\(\\hat{Q}(a^+, a)\\)\u3002</p> <p>\u4e8e\u662f\uff0c\u6574\u4e2a\u4e3b\u65b9\u7a0b\u5c31\u53ef\u4ee5\u88ab\u91cd\u5199\u4e3a\u4e00\u4e2a\u6781\u5176\u7b80\u6d01\u4e14\u5f3a\u5927\u7684\u7b97\u7b26\u65b9\u7a0b\uff1a $$ \\frac{\\partial}{\\partial t} |\\Phi(t)\\rangle = \\hat{Q}(a^+, a) |\\Phi(t)\\rangle $$ \u7269\u7406\u610f\u4e49\uff1a\u8fd9\u4e2a\u65b9\u7a0b\u5728\u5f62\u5f0f\u4e0a\u4e0e\u91cf\u5b50\u529b\u5b66\u4e2d\u865a\u65f6\u95f4\u4e0b\u7684\u859b\u5b9a\u8c14\u65b9\u7a0b\uff08\\(\\partial_\\tau |\\psi\\rangle = -\\hat{H}|\\psi\\rangle\\)\uff09\u5b8c\u5168\u540c\u6784\u3002</p> <ul> <li> <p>\u6001\u77e2\u91cf \\(|\\Phi(t)\\rangle\\) \u626e\u6f14\u4e86\u91cf\u5b50\u529b\u5b66\u4e2d\u201c\u6ce2\u51fd\u6570\u201d\u7684\u89d2\u8272\u3002</p> </li> <li> <p>\u8dc3\u8fc1\u7b97\u7b26 \\(\\hat{Q}\\) \u626e\u6f14\u4e86\u201c\u54c8\u5bc6\u987f\u91cf\u201d\u7684\u89d2\u8272\uff0c\u5b83\u5c01\u88c5\u4e86\u7cfb\u7edf\u7684\u5168\u90e8\u52a8\u529b\u5b66\u89c4\u5219\uff0c\u751f\u6210\u4e86\u7cfb\u7edf\u7684\u65f6\u95f4\u6f14\u5316\u3002</p> </li> </ul> <p>\u8fd9\u4e2a\u6df1\u523b\u7684\u7c7b\u6bd4\u610f\u5473\u7740\uff0c\u4e3a\u6c42\u89e3\u91cf\u5b50\u7cfb\u7edf\u800c\u53d1\u5c55\u8d77\u6765\u7684\u6574\u4e2a\u6570\u5b66\u6b66\u5e93\u2014\u2014\u7279\u522b\u662f\u8d39\u66fc\u7684\u8def\u5f84\u79ef\u5206\u65b9\u6cd5\u2014\u2014\u73b0\u5728\u53ef\u4ee5\u88ab\u76f4\u63a5\u201c\u79fb\u690d\u201d\u8fc7\u6765\uff0c\u7528\u4e8e\u89e3\u51b3\u4e3b\u65b9\u7a0b\u95ee\u9898\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#22","title":"2.2 \u8def\u5f84\u79ef\u5206\u7684\u63a8\u5bfc\u4e0e\u4f5c\u7528\u91cf","text":"<p>\u4e00\u65e6\u6709\u4e86\u5f62\u5982 \\(\\partial_t |\\Psi\\rangle = \\hat{H} |\\Psi\\rangle\\) \u7684\u52a8\u529b\u5b66\u65b9\u7a0b\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e00\u5957\u6807\u51c6\u6d41\u7a0b\u63a8\u5bfc\u51fa\u5176\u8def\u5f84\u79ef\u5206\u8868\u793a\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5728\u6982\u5ff5\u4e0a\u4e0e\u91cf\u5b50\u529b\u5b66\u4e2d\u7684\u63a8\u5bfc\u5b8c\u5168\u4e00\u81f4\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\u201c\u65f6\u95f4\u5207\u7247\u201d\uff1a</p> <ol> <li> <p>\u5c06\u603b\u65f6\u95f4\u533a\u95f4 \\(t_f - t_0\\) \u5206\u5272\u6210 \\(N\\) \u4e2a\u5fae\u5c0f\u7684\u65f6\u95f4\u7247 \\(\\Delta\\tau\\)\u3002</p> </li> <li> <p>\u5728\u6bcf\u4e2a\u65f6\u95f4\u7247\u4e4b\u95f4\uff0c\u63d2\u5165\u4e00\u5957\u5b8c\u5907\u7684\u57fa\u77e2\uff08\u5728\u6b64\u5373\u76f8\u5e72\u6001\u57fa\u77e2\uff09\u3002</p> </li> <li> <p>\u5229\u7528\u57fa\u77e2\u4e4b\u95f4\u7684\u5185\u79ef\u5173\u7cfb\uff0c\u5c06\u6574\u4e2a\u6f14\u5316\u8fc7\u7a0b\u8868\u793a\u4e3a\u4e00\u7cfb\u5217\u77ed\u65f6\u6f14\u5316\u77e9\u9635\u5143\u7684\u4e58\u79ef\u3002</p> </li> <li> <p>\u5728 \\(N \\to \\infty\\) \u7684\u6781\u9650\u4e0b\uff0c\u8fd9\u4e2a\u4e58\u79ef\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u5bf9\u6240\u6709\u53ef\u80fd\u8def\u5f84\u7684\u6cdb\u51fd\u79ef\u5206\u3002</p> </li> </ol> <p>\u5bf9\u4e8e\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u81ea\u7136\u5730\u5f15\u5165\u4e00\u4e2a\u4e0e\u573a \\(x\\) \u5171\u8f6d\u7684\u201c\u52a8\u91cf\u201d\u573a \\(q\\)\u3002\u6700\u7ec8\uff0c\u63cf\u8ff0\u7cfb\u7edf\u4ece\u521d\u59cb\u5206\u5e03\u6f14\u5316\u5230\u672b\u6001\u7684\u8dc3\u8fc1\u6982\u7387\u5e45\uff0c\u53ef\u4ee5\u8868\u793a\u4e3a\u5982\u4e0b\u7684\u8def\u5f84\u79ef\u5206\u5f62\u5f0f\uff1a $$ \\langle \\phi_f, t_f | \\phi_0, t_0 \\rangle = \\int_{x(t_0)=x_0}^{x(t_f)=x_f} \\mathcal{D}[x, q] \\, \\exp\\left( -S[x, iq] \\right) $$ \u5176\u4e2d\uff0c\u4f5c\u7528\u91cf \\(S[x, iq]\\) \u7531\u62c9\u683c\u6717\u65e5\u91cf \\(\\mathcal{L}[x, iq]\\) \u7684\u65f6\u95f4\u79ef\u5206\u7ed9\u51fa\uff1a $$ S[x, iq] = \\int_{t_0}^{t_f} d\\tau \\, \\mathcal{L}[x, iq] $$ \u800c\u62c9\u683c\u6717\u65e5\u91cf \\(\\mathcal{L}[x, iq]\\) \u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a $$ \\mathcal{L}[x, iq] = iq \\partial_\\tau x(\\tau) - Q(x, iq + 1) $$ \u8fd9\u4e2a\u62c9\u683c\u6717\u65e5\u91cf\u662f\u672c\u8bb2\u7684\u6838\u5fc3\u7ed3\u679c\uff0c\u5176\u7ed3\u6784\u503c\u5f97\u6df1\u5165\u89e3\u8bfb\uff1a</p> <ul> <li> <p>\u52a8\u529b\u5b66\u9879 (Kinetic Term) \\(iq \\partial_\\tau x\\) \uff1a\u8fd9\u4e00\u9879\u5728\u573a\u8bba\u4e2d\u5e38\u88ab\u79f0\u4e3a\u201c\u8d1d\u91cc\u76f8\u4f4d\u201d\uff08Berry phase\uff09\u9879\u3002\u5b83\u5e76\u975e\u6e90\u4e8e\u5177\u4f53\u7684\u7269\u7406\u53cd\u5e94\uff0c\u800c\u662f\u4ea7\u751f\u4e8e\u5728\u5fae\u5c0f\u65f6\u95f4\u6b65\u957f\u4e2d\uff0c\u4e0d\u540c\u65f6\u523b\u76f8\u5e72\u6001\u57fa\u77e2\u4e4b\u95f4\u7684\u6570\u5b66\u4ea4\u53e0\u3002\u5b83\u786e\u4fdd\u4e86\u8def\u5f84\u79ef\u5206\u6b63\u786e\u5730\u63cf\u8ff0\u4e86\u65f6\u95f4\u7684\u8fde\u7eed\u6f14\u5316\uff0c\u5e76\u5c06\u573a \\(x\\) \u4e0e\u5176\u5171\u8f6d\u573a \\(iq\\) \u52a8\u6001\u5730\u8054\u7cfb\u8d77\u6765\u3002</p> </li> <li> <p>\u53cd\u5e94\u9879 (Reaction Term) \\(Q(x, iq + 1)\\) \uff1a\u8fd9\u4e00\u9879\u662f\u8dc3\u8fc1\u7b97\u7b26 \\(\\hat{Q}(a^+, a)\\) \u5728\u8def\u5f84\u79ef\u5206\u4e2d\u7684\u201c\u7ecf\u5178\u201d\u5bf9\u5e94\u7269\uff0c\u5728\u6570\u5b66\u4e0a\u88ab\u79f0\u4e3a\u7b97\u7b26\u7684\u201c\u7b26\u53f7\u201d\uff08symbol\uff09\u3002\u5b83\u662f\u901a\u8fc7\u5728\u7b97\u7b26 \\(\\hat{Q}\\) \u4e2d\u8fdb\u884c\u5982\u4e0b\u7684\u4ee3\u6570\u66ff\u6362\u5f97\u5230\u7684\uff1a</p> \\[a^+ \\to x \\quad \\text{and} \\quad a \\to iq + 1\\] <p>\uff08\u6ce8\u610f\u8fd9\u91cc\u7684\u66ff\u6362\u5df2\u7ecf\u5305\u542b\u4e86Doi-shift\uff09\u3002\u8fd9\u4e00\u9879\u5305\u542b\u4e86\u6240\u6709\u5173\u4e8e\u5316\u5b66\u53cd\u5e94\u52a8\u529b\u5b66\u7684\u7269\u7406\u4fe1\u606f\uff0c\u4f8b\u5982\u53cd\u5e94\u901f\u7387\u548c\u5316\u5b66\u8ba1\u91cf\u6570\u3002</p> </li> </ul> <p>\u5171\u8f6d\u573a \\(iq\\) \u5e76\u975e\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6570\u5b66\u8ba1\u7b97\u4e2d\u7684\u8f85\u52a9\u5de5\u5177\u3002\u5728\u573a\u7684\u8bed\u8a00\u4e2d\uff0c\u5b83\u626e\u6f14\u7740\u54cd\u5e94\u573a\uff08response field\uff09\u7684\u89d2\u8272\uff0c\u8fd9\u4e0e\u7b2c32\u8bb2\u4e2d\u4e3a\u8fde\u7eed\u6717\u4e4b\u4e07\u7cfb\u7edf\u5f15\u5165\u7684\u54cd\u5e94\u573a \\(\\tilde{\\phi}\\) \u5728\u529f\u80fd\u4e0a\u662f\u5b8c\u5168\u4e00\u81f4\u7684\u3002\\(iq\\) \u7684\u5f15\u5165\uff0c\u672c\u8d28\u4e0a\u662f\u901a\u8fc7\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u7684\u65b9\u6cd5\uff0c\u5728\u8def\u5f84\u79ef\u5206\u4e2d\u5f3a\u5236\u7cfb\u7edf\u5728\u5e73\u5747\u610f\u4e49\u4e0a\u6ee1\u8db3\u7531\u54c8\u5bc6\u987f\u91cf \\(Q\\) \u6240\u751f\u6210\u7684\u52a8\u529b\u5b66\u7ea6\u675f\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u8def\u5f84\u79ef\u5206\u4e0d\u4ec5\u662f\u5bf9\u7cfb\u7edf\u201c\u72b6\u6001\u201d\u53d8\u91cf \\(x(\\tau)\\) \u7684\u6240\u6709\u53ef\u80fd\u8f68\u8ff9\u6c42\u548c\uff0c\u4e5f\u662f\u5bf9\u6240\u6709\u53ef\u80fd\u201c\u54cd\u5e94\u201d\u8f68\u8ff9 \\(q(\\tau)\\) \u7684\u6c42\u548c\u3002\u6b63\u662f\u8fd9\u79cd\u53cc\u53d8\u91cf\u7684\u8868\u8ff0\uff0c\u4f7f\u5f97\u8be5\u6846\u67b6\u80fd\u591f\u5728\u7edf\u4e00\u7684\u4f5c\u7528\u91cf\u4e2d\u540c\u65f6\u6355\u6349\u5230\u7cfb\u7edf\u7684\u786e\u5b9a\u6027\u6f02\u79fb\u548c\u968f\u673a\u6da8\u843d\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#3-i-ka-xrightarrowlambda-ell-a","title":"3. \u6848\u4f8b\u7814\u7a76 I\uff1a\u4e00\u822c\u53cd\u5e94 \\(kA \\xrightarrow{\\lambda} \\ell A\\)","text":"<p>\u4e3a\u4e86\u5c55\u793a\u524d\u8ff0\u5f62\u5f0f\u5316\u7406\u8bba\u7684\u5a01\u529b\uff0c\u73b0\u5c06\u5176\u5e94\u7528\u4e8e\u4e00\u4e2a\u4e00\u822c\u7684\u5316\u5b66\u53cd\u5e94\uff1a\\(k\\) \u4e2a \\(A\\) \u7c92\u5b50\u4ee5\u5fae\u89c2\u901f\u7387 \\(\\lambda\\) \u53cd\u5e94\u751f\u6210 \\(\\ell\\) \u4e2a \\(A\\) \u7c92\u5b50\u3002\u8fd9\u4e2a\u4f8b\u5b50\u5c06\u5b8c\u6574\u5730\u6f14\u793a\uff0c\u8be5\u7406\u8bba\u6846\u67b6\u5982\u4f55\u50cf\u4e00\u90e8\u201c\u673a\u5668\u201d\u4e00\u6837\uff0c\u5c06\u5177\u4f53\u7684\u5fae\u89c2\u53cd\u5e94\u89c4\u5219\uff0c\u4e00\u6b65\u6b65\u3001\u7cfb\u7edf\u6027\u5730\u8f6c\u5316\u4e3a\u4e00\u4e2a\u53ef\u5728\u8def\u5f84\u79ef\u5206\u4e2d\u4f7f\u7528\u7684\u4f5c\u7528\u91cf\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#31-hatq","title":"3.1 \u4ece\u53cd\u5e94\u89c4\u5219\u5230\u8dc3\u8fc1\u7b97\u7b26 \\(\\hat{Q}\\)","text":"<p>\u7b2c\u4e00\u6b65\uff1a\u5199\u51fa\u53cd\u5e94\u901f\u7387\uff08Propensity\uff09</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u542b\u6709 \\(n\\) \u4e2a\u7c92\u5b50\u7684\u7cfb\u7edf\uff0c\u8981\u53d1\u751f\u4e00\u6b21 \\(kA \\xrightarrow{\\lambda} \\ell A\\) \u7684\u53cd\u5e94\uff0c\u9996\u5148\u9700\u8981\u4ece \\(n\\) \u4e2a\u7c92\u5b50\u4e2d\u9009\u51fa \\(k\\) \u4e2a\u4f5c\u4e3a\u53cd\u5e94\u7269\u3002\u6839\u636e\u7ec4\u5408\u5b66\uff0c\u9009\u62e9\u7684\u65b9\u5f0f\u5171\u6709 \\(\\binom{n}{k}\\) \u79cd\u3002\u56e0\u6b64\uff0c\u4ece \\(n\\) \u7c92\u5b50\u6001\u8dc3\u8fc1\u5230 \\(m = n - k + \\ell\\) \u7c92\u5b50\u6001\u7684\u5b8f\u89c2\u53cd\u5e94\u901f\u7387\u4e3a\uff1a $$ \\omega_{n \\to m} = \\lambda \\binom{n}{k} = \\frac{\\lambda}{k!} n(n-1)\\cdots(n-k+1) $$ \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u7684\u8fde\u4e58\u79ef \\(n(n-1)\\cdots(n-k+1)\\) \u88ab\u79f0\u4e3a\u201c\u4e0b\u964d\u9636\u4e58\u5e42\u201d\u3002\u4e3a\u4e86\u7b80\u5316\u7b26\u53f7\uff0c\u5b9a\u4e49 \\(\\tilde{\\lambda} = \\lambda/k!\\)\u3002</p> <p>\u7b2c\u4e8c\u6b65\uff1a\u5c06\u901f\u7387\u7ffb\u8bd1\u6210\u7b97\u7b26</p> <p>\u73b0\u5728\u9700\u8981\u627e\u5230\u4e00\u4e2a\u7b97\u7b26\uff0c\u5f53\u5b83\u4f5c\u7528\u5728\u7c92\u5b50\u6570\u672c\u5f81\u6001 \\(|n\\rangle_x\\) \u4e0a\u65f6\uff0c\u5176\u672c\u5f81\u503c\u6070\u597d\u662f\u8fd9\u4e2a\u4e0b\u964d\u9636\u4e58\u5e42\u3002\u56de\u987e\u4e0a\u4e00\u8282\u5b9a\u4e49\u7684\u7b97\u7b26\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u4e2a\u6b63\u5e38\u6392\u5e8f\uff08normal-ordered\uff09\u7684\u7b97\u7b26\u4e58\u79ef\u2014\u2014\u5373\u6240\u6709\u4ea7\u751f\u7b97\u7b26 \\(a^+\\) \u90fd\u5728\u6e6e\u706d\u7b97\u7b26 \\(a\\) \u7684\u5de6\u8fb9\u2014\u2014\u6070\u597d\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\uff1a $$ (a^+)^k a^k |n\\rangle_x = n(n-1)\\cdots(n-k+1) |n\\rangle_x $$ \u7269\u7406\u610f\u4e49\uff1a\u8fd9\u4e2a\u4ee3\u6570\u5173\u7cfb\u662f\u6574\u4e2a\u7406\u8bba\u6846\u67b6\u7cbe\u5999\u4e4b\u5904\u7684\u6838\u5fc3\u4f53\u73b0\u3002\u5b83\u8868\u660e\uff0c\u53cd\u5e94\u901f\u7387\u4e2d\u770b\u4f3c\u590d\u6742\u7684\u7ec4\u5408\u8ba1\u6570\u56e0\u5b50\uff0c\u88ab\u4f18\u96c5\u5730\u5185\u5d4c\u5728\u4e86\u4ea7\u751f\u4e0e\u6e6e\u706d\u7b97\u7b26\u7684\u57fa\u672c\u4ee3\u6570\u7ed3\u6784\u4e4b\u4e2d\u3002\u8fd9\u5e76\u975e\u5de7\u5408\uff0c\u800c\u662f\u8be5\u6570\u5b66\u5f62\u5f0f\u80fd\u591f\u5b8c\u7f8e\u63cf\u8ff0\u7c92\u5b50\u7cfb\u7edf\u7684\u6839\u672c\u539f\u56e0\u3002</p> <p>\u7b2c\u4e09\u6b65\uff1a\u6784\u5efa\u8dc3\u8fc1\u7b97\u7b26 \\(\\hat{Q}\\)</p> <p>\u4e3b\u65b9\u7a0b\u7684\u7b97\u7b26\u5f62\u5f0f \\(\\partial_t |\\Phi\\rangle = \\hat{Q} |\\Phi\\rangle\\) \u4e2d\uff0c\\(\\hat{Q}\\) \u7b97\u7b26\u63cf\u8ff0\u4e86\u6001\u77e2\u91cf \\(|\\Phi\\rangle\\) \u7684\u603b\u53d8\u5316\u7387\u3002\u5bf9\u4e8e \\(kA \\to \\ell A\\) \u8fd9\u4e2a\u53cd\u5e94\uff0c\u5b83\u5305\u542b\u4e24\u4e2a\u8fc7\u7a0b\uff1a * \u589e\u76ca\uff08Gain\uff09\uff1a\u7cfb\u7edf\u4ece\u67d0\u4e2a\u72b6\u6001\u8dc3\u8fc1\u8fdb\u5165\u5f53\u524d\u72b6\u6001\u3002\u8fd9\u5bf9\u5e94\u4e8e\u7c92\u5b50\u6570\u4ece \\(n-k+\\ell\\) \u53d8\u4e3a \\(n\\) \u7684\u9006\u8fc7\u7a0b\uff0c\u5373\u4e00\u4e2a\u4ece \\(n\\) \u7c92\u5b50\u6001\u8dc3\u8fc1\u5230 \\(n-k+\\ell\\) \u7c92\u5b50\u6001\u7684\u8fc7\u7a0b\u3002\u8fd9\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u5148\u901a\u8fc7\u7b97\u7b26 \\(a^k\\) \u6e6e\u706d \\(k\\) \u4e2a\u7c92\u5b50\uff0c\u518d\u901a\u8fc7\u7b97\u7b26 \\((a^+)^\\ell\\) \u4ea7\u751f \\(\\ell\\) \u4e2a\u7c92\u5b50\u3002 * \u635f\u5931\uff08Loss\uff09\uff1a\u7cfb\u7edf\u79bb\u5f00\u5f53\u524d \\(n\\) \u7c92\u5b50\u6001\u3002\u5176\u901f\u7387\u7531 \\(\\tilde{\\lambda} n(n-1)\\cdots(n-k+1)\\) \u51b3\u5b9a\uff0c\u5bf9\u5e94\u7684\u7b97\u7b26\u4e3a \\(\\tilde{\\lambda} (a^+)^k a^k\\)\u3002</p> <p>\u56e0\u6b64\uff0c\u8be5\u53cd\u5e94\u5bf9\u5e94\u7684\u603b\u8dc3\u8fc1\u7b97\u7b26 \\(\\hat{Q}_{k \\to \\ell}\\) \u662f\u589e\u76ca\u9879\u51cf\u53bb\u635f\u5931\u9879\uff1a $$ \\hat{Q}_{k \\to \\ell} = \\tilde{\\lambda} \\left[ (a^+)^{\\ell} a^k - (a^+)^k a^k \\right] $$ \u8fd9\u4e2a\u7b97\u7b26\u5b8c\u6574\u5730\u7f16\u7801\u4e86\u53cd\u5e94 \\(kA \\to \\ell A\\) \u5bf9\u7cfb\u7edf\u6982\u7387\u5206\u5e03\u7684\u5168\u90e8\u5f71\u54cd\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#32-hatq-s","title":"3.2 \u4ece\u8dc3\u8fc1\u7b97\u7b26 \\(\\hat{Q}\\) \u5230\u4f5c\u7528\u91cf \\(S\\)","text":"<p>\u6709\u4e86\u7b97\u7b26 \\(\\hat{Q}_{k \\to \\ell}\\)\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u4e0a\u4e00\u8282\u5efa\u7acb\u7684\u66ff\u6362\u89c4\u5219\uff0c\u7cfb\u7edf\u6027\u5730\u5f97\u5230\u5b83\u5728\u62c9\u683c\u6717\u65e5\u91cf\u4e2d\u7684\u5bf9\u5e94\u9879 \\(Q(x, iq + 1)\\)\u3002</p> <p>\u7b2c\u56db\u6b65\uff1a\u5e94\u7528\u66ff\u6362\u89c4\u5219</p> <p>\u89c4\u5219\u5982\u4e0b\uff1a $$ a^+ \\to x, \\quad a \\to iq + 1 $$ \u5c06\u6b64\u89c4\u5219\u5e94\u7528\u4e8e\u8dc3\u8fc1\u7b97\u7b26 \\(\\hat{Q}_{k \\to \\ell}\\)\u3002\u8bfe\u7a0b\u4e2d\u91c7\u7528\u7684\u7279\u5b9a\u5bf9\u5e94\u6cd5\u5219\uff08Doi-Peliti formalism\u7684\u4e00\u79cd\u5e38\u89c1\u5f62\u5f0f\uff09\u5c06\u589e\u76ca\u548c\u635f\u5931\u9879\u6700\u7ec8\u7ec4\u5408\u4e3a\u5982\u4e0b\u5f62\u5f0f\uff1a $$ Q_{k \\to \\ell}(x, iq + 1) = \\tilde{\\lambda} x^k \\left[ (iq + 1)^{\\ell} - (iq + 1)^k \\right] $$ \u8fd9\u4e2a\u5f62\u5f0f\u53ef\u4ee5\u901a\u8fc7\u66f4\u4e25\u683c\u7684\u751f\u6210\u51fd\u6570\u6f14\u5316\u63a8\u5bfc\u5f97\u51fa\uff0c\u5b83\u76f4\u89c2\u5730\u8868\u793a\uff1a\u53cd\u5e94\u7684\u53d1\u751f\u901f\u7387\u4e0e \\(x^k\\)\uff08\u521d\u59cb\u7c92\u5b50\u6570\u7684\u7ec4\u5408\uff09\u6210\u6b63\u6bd4\uff0c\u800c\u72b6\u6001\u7684\u53d8\u5316\u5219\u7531 \\((iq+1)\\) \u7684\u5e42\u6b21\u5dee\u6765\u4f53\u73b0\u3002</p> <p>\u7b2c\u4e94\u6b65\uff1a\u5199\u51fa\u5b8c\u6574\u4f5c\u7528\u91cf</p> <p>\u5c06\u6b64\u9879\u4ee3\u5165\u603b\u7684\u62c9\u683c\u6717\u65e5\u91cf\u8868\u8fbe\u5f0f \\(\\mathcal{L} = iq\\partial_\\tau x - Q\\)\uff0c\u5c31\u5f97\u5230\u4e86\u8be5\u53cd\u5e94\u7684\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\uff1a $$ S[x, iq] = \\int d\\tau \\left[ iq\\partial_\\tau x - \\tilde{\\lambda} x^k \\left( (iq + 1)^{\\ell} - (iq + 1)^k \\right) \\right] $$ \u8fd9\u4e2a\u4f5c\u7528\u91cf\u8868\u8fbe\u5f0f\u5b8c\u7f8e\u5730\u4f53\u73b0\u4e86\u8be5\u6846\u67b6\u7684\u7cfb\u7edf\u6027\u3002\u6574\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u5982\u540c\u4e00\u6761\u5b9a\u4e49\u6e05\u6670\u7684\u6d41\u6c34\u7ebf\uff1a 1.  \u5199\u51fa\u53cd\u5e94\u5316\u5b66\u8ba1\u91cf\u5f0f\uff08\\(k \\to \\ell\\)\uff09\u3002</p> <ol> <li> <p>\u6839\u636e\u7ec4\u5408\u5b66\u5199\u51fa\u53cd\u5e94\u901f\u7387\uff08\\(\\propto n(n-1)\\cdots\\)\uff09\u3002</p> </li> <li> <p>\u5c06\u5176\u7ffb\u8bd1\u6210\u6b63\u5e38\u6392\u5e8f\u7684\u7b97\u7b26\uff08\\(\\propto (a^+)^k a^k\\)\uff09\u3002</p> </li> <li> <p>\u6784\u5efa\u589e\u76ca-\u635f\u5931\u5f62\u5f0f\u7684\u8dc3\u8fc1\u7b97\u7b26 \\(\\hat{Q}\\)\u3002</p> </li> <li> <p>\u5e94\u7528\u4ee3\u6570\u66ff\u6362\u89c4\u5219\u5f97\u5230 \\(Q(x, iq + 1)\\) \u5e76\u6784\u5efa\u4f5c\u7528\u91cf\u3002</p> </li> </ol> <p>\u8fd9\u4e2a\u6d41\u7a0b\u5c06\u4efb\u4f55\u4e00\u4e2a\u5177\u4f53\u7684\u7269\u7406\u53cd\u5e94\u89c4\u5219\uff0c\u7cfb\u7edf\u6027\u5730\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5728\u8def\u5f84\u79ef\u5206\u4e2d\u8fdb\u884c\u5206\u6790\u548c\u8ba1\u7b97\u7684\u6570\u5b66\u5bf9\u8c61\uff0c\u4e3a\u540e\u7eed\u4f7f\u7528\u573a\u8bba\u5de5\u5177\uff08\u5982\u978d\u70b9\u8fd1\u4f3c\u3001\u5fae\u6270\u5c55\u5f00\u7b49\uff09\u8fdb\u884c\u5b9a\u91cf\u5206\u6790\u94fa\u5e73\u4e86\u9053\u8def\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#4-ii-a-a-xrightarrowlambda-emptyset","title":"4. \u6848\u4f8b\u7814\u7a76 II\uff1a\u6e6e\u706d\u53cd\u5e94 \\(A + A \\xrightarrow{\\lambda} \\emptyset\\)","text":"<p>\u73b0\u5728\uff0c\u5c06\u4e0a\u4e00\u8282\u5efa\u7acb\u7684\u901a\u7528\u6846\u67b6\u5e94\u7528\u4e8e\u4e00\u4e2a\u5177\u4f53\u7684\u3001\u975e\u5e73\u51e1\u7684\u4f8b\u5b50\uff1a\u53cc\u5206\u5b50\u6e6e\u706d\u53cd\u5e94 \\(A + A \\to \\emptyset\\)\u3002\u8fd9\u4e2a\u4f8b\u5b50\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4ec5\u5c06\u6e05\u6670\u5730\u5c55\u793a\u7406\u8bba\u6846\u67b6\u5982\u4f55\u4e0e\u53ef\u8ba1\u7b97\u3001\u53ef\u6a21\u62df\u7684\u7269\u7406\u73b0\u8c61\u8054\u7cfb\u8d77\u6765\uff0c\u66f4\u5c06\u901a\u8fc7\u5bf9\u5176\u4f5c\u7528\u91cf\u7684\u7ed3\u6784\u5206\u6790\uff0c\u6700\u7ec8\u5f15\u51fa\u201c\u865a\u566a\u58f0\u201d\u8fd9\u4e00\u6838\u5fc3\u6982\u5ff5\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#41","title":"4.1 \u7406\u8bba\u8868\u8ff0\uff1a\u4ece\u53cd\u5e94\u5230\u4f5c\u7528\u91cf","text":"<p>\u5c06\u4e25\u683c\u9075\u5faa\u4e0a\u4e00\u8282\u603b\u7ed3\u7684\u201c\u6d41\u6c34\u7ebf\u201d\u6b65\u9aa4\uff0c\u4e3a\u8be5\u53cd\u5e94\u6784\u5efa\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u3002</p> <ol> <li> <p>\u53cd\u5e94\u5316\u5b66\u8ba1\u91cf\u5f0f: \\(A + A \\to \\emptyset\\) \u5bf9\u5e94\u4e8e\u901a\u7528\u6a21\u578b\u4e2d\u7684 \\(k = 2, \\ell = 0\\)\u3002</p> </li> <li> <p>\u53cd\u5e94\u901f\u7387: \u4ece\u4e00\u4e2a\u6709 \\(n\\) \u4e2a\u7c92\u5b50\u7684\u7cfb\u7edf\u4e2d\uff0c\u9009\u51fa\u4e24\u4e2a\u7c92\u5b50\u8fdb\u884c\u53cd\u5e94\uff0c\u6709 \\(\\binom{n}{2} = \\frac{n(n-1)}{2}\\) \u79cd\u65b9\u5f0f\u3002\u56e0\u6b64\uff0c\u8dc3\u8fc1\u901f\u7387\u4e3a\uff1a     $$     \\omega_{n \\to n-2} = \\lambda \\binom{n}{2} = \\frac{\\lambda}{2} n(n-1)     $$     \u5bf9\u5e94\u7684\u901f\u7387\u5e38\u6570 \\(\\tilde{\\lambda} = \\lambda/2\\)\u3002</p> </li> <li> <p>\u8dc3\u8fc1\u7b97\u7b26 \\(\\hat{Q}\\): \u6839\u636e\u901a\u7528\u516c\u5f0f \\(\\hat{Q} = \\tilde{\\lambda} [ (a^+)^{\\ell} a^k - (a^+)^k a^k ]\\)\uff0c\u4ee3\u5165 \\(k=2, \\ell=0\\) \u5f97\u5230\uff1a     $$     \\hat{Q} = \\frac{\\lambda}{2} \\left[ (a^+)^0 a^2 - (a^+)^2 a^2 \\right] = \\frac{\\lambda}{2} \\left[ a^2 - (a^+)^2 a^2 \\right]     $$</p> </li> <li> <p>\u5e94\u7528\u66ff\u6362\u89c4\u5219\u5f97\u5230 \\(Q(x, iq + 1)\\):     \u6839\u636e\u8bfe\u7a0b\u4e2d\u91c7\u7528\u7684\u5bf9\u5e94\u6cd5\u5219\uff0c\u5f97\u5230\uff1a     $$     Q(x, iq + 1) = \\frac{\\lambda}{2} x^2 \\left[ (iq + 1)^0 - (iq + 1)^2 \\right] = \\frac{\\lambda}{2} x^2 \\left[ 1 - (iq + 1)^2 \\right]     $$</p> </li> <li> <p>\u6269\u6563\u8fd1\u4f3c\u4e0e\u6700\u7ec8\u4f5c\u7528\u91cf: \u4e3a\u4e86\u4e0e\u8fde\u7eed\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u5efa\u7acb\u8054\u7cfb\uff0c\u901a\u5e38\u5c06 \\(Q(x, iq + 1)\\) \u5bf9 \\(iq\\) \u505a\u6cf0\u52d2\u5c55\u5f00\uff0c\u5e76\u4fdd\u7559\u81f3\u4e8c\u9636\u3002\u8fd9\u5bf9\u5e94\u4e8e\u4e00\u79cd\u6269\u6563\u8fd1\u4f3c\uff08diffusion approximation\uff09\uff0c\u5728\u7c92\u5b50\u6570\u8f83\u5927\u65f6\u975e\u5e38\u6709\u6548\u3002     $$     1 - (iq + 1)^2 = 1 - (1 + 2iq + (iq)^2) = -2iq - (iq)^2     $$     \u5c06\u6b64\u5c55\u5f00\u4ee3\u5165 \\(Q(x, iq+1)\\)\uff1a     $$     Q(x, iq+1) = \\frac{\\lambda}{2} x^2 \\left[-2iq - (iq)^2\\right] = -\\lambda x^2 (iq) - \\frac{\\lambda}{2} x^2 (iq)^2     $$     \u6700\u540e\uff0c\u5c06\u6b64\u7ed3\u679c\u4ee3\u5165\u62c9\u683c\u6717\u65e5\u91cf \\(\\mathcal{L} = iq\\partial_\\tau x - Q(x, iq + 1)\\)\uff1a     $$     \\mathcal{L} = iq\\partial_\\tau x - \\left( -\\lambda x^2 (iq) - \\frac{\\lambda}{2} x^2 (iq)^2 \\right) = iq(\\partial_\\tau x + \\lambda x^2) + \\frac{\\lambda}{2} x^2 (iq)^2     $$     \u7531\u6b64\u5f97\u5230\u6700\u7ec8\u7684\u4f5c\u7528\u91cf\uff1a     $$     S[x, iq] = \\int d\\tau \\left[ iq(\\partial_\\tau x + \\lambda x^2) + \\frac{1}{2} \\lambda x^2 (iq)^2 \\right]     $$     \u8fd9\u4e2a\u4f5c\u7528\u91cf\u662f\u672c\u8bb2\u540e\u534a\u90e8\u5206\u5206\u6790\u7684\u6838\u5fc3\u3002\u5b83\u5c06\u4e00\u4e2a\u79bb\u6563\u7684\u7c92\u5b50\u6e6e\u706d\u8fc7\u7a0b\uff0c\u5728\u6269\u6563\u8fd1\u4f3c\u4e0b\uff0c\u7cbe\u786e\u5730\u6620\u5c04\u5230\u4e86\u4e00\u4e2a\u8fde\u7eed\u573a \\(x(\\tau)\\) \u7684\u968f\u673a\u52a8\u529b\u5b66\u4e0a\u3002\u5176\u4e2d\uff0c\u4e0e \\(iq\\) \u7ebf\u6027\u76f8\u5173\u7684\u9879 \\(iq(\\partial_\\tau x + \\lambda x^2)\\) \u7f16\u7801\u4e86\u7cfb\u7edf\u7684\u786e\u5b9a\u6027\u6f14\u5316\uff0c\u800c\u4e0e \\((iq)^2\\) \u76f8\u5173\u7684\u9879\u5219\u7f16\u7801\u4e86\u7cfb\u7edf\u7684\u968f\u673a\u6da8\u843d\u3002</p> </li> </ol>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#42","title":"4.2 \u6570\u503c\u9a8c\u8bc1\uff1a\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u7684\u968f\u673a\u6e6e\u706d","text":"<p>\u4e3a\u4e86\u5efa\u7acb\u66f4\u6df1\u523b\u7684\u7269\u7406\u76f4\u89c9\uff0c\u5e76\u5c06\u7406\u8bba\u4e0e\u7a7a\u95f4\u7ef4\u5ea6\u8054\u7cfb\u8d77\u6765\uff0c\u53ef\u4ee5\u6a21\u62df\u4e00\u4e2a\u66f4\u771f\u5b9e\u7684\u573a\u666f\uff1a\u7c92\u5b50\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u6269\u6563\u5e76\u53cd\u5e94 \u3002\u4e0b\u9762\u7684Python\u4ee3\u7801\u6a21\u62df\u4e86\u5927\u91cf\u7c92\u5b50\u5728\u4e00\u4e2a\u65b9\u5f62\u533a\u57df\u5185\u8fdb\u884c\u5e03\u6717\u8fd0\u52a8\uff0c\u5f53\u4efb\u610f\u4e24\u4e2a\u7c92\u5b50\u8db3\u591f\u9760\u8fd1\u65f6\uff0c\u5b83\u4eec\u5c31\u4f1a\u53d1\u751f\u6e6e\u706d\uff08\\(A+A -&gt; \u2205\\)\uff09\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5728\u6570\u503c\u4e0a\u7cbe\u786e\u5730\u6355\u6349\u4e86\u53cd\u5e94-\u6269\u6563\u7cfb\u7edf\uff08reaction-diffusion system\uff09\u7684\u968f\u673a\u52a8\u529b\u5b66\u672c\u8d28\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\nfrom matplotlib.colors import ListedColormap\n\ndef initialize_particles(N0, size=100):\n    \"\"\"Initialize particle positions, ensuring sufficient distance between particles\"\"\"\n    x = []\n    y = []\n\n    attempts = 0\n    max_attempts = N0 * 100  # Prevent infinite loop\n\n    while len(x) &lt; N0 and attempts &lt; max_attempts:\n        # Generate candidate position\n        new_x = np.random.uniform(0, size)\n        new_y = np.random.uniform(0, size)\n\n        # Check if it's far enough from existing particles\n        valid = True\n        min_distance = 3.0  # Minimum distance\n\n        for i in range(len(x)):\n            distance = np.sqrt((new_x - x[i])**2 + (new_y - y[i])**2)\n            if distance &lt; min_distance:\n                valid = False\n                break\n\n        if valid or len(x) == 0:  # First particle is always valid\n            x.append(new_x)\n            y.append(new_y)\n\n        attempts += 1\n\n    return np.array(x), np.array(y)\n\ndef find_annihilation_pairs(x, y, radius=2.0):\n    \"\"\"Find pairs of particles close enough to annihilate\"\"\"\n    pairs = []\n    used = set()\n\n    for i in range(len(x)):\n        if i in used:\n            continue\n        for j in range(i+1, len(x)):\n            if j in used:\n                continue\n            # Calculate distance between particles\n            distance = np.sqrt((x[i] - x[j])**2 + (y[i] - y[j])**2)\n            if distance &lt;= radius:\n                pairs.append((i, j))\n                used.add(i)\n                used.add(j)\n                break\n\n    return pairs\n\ndef simulate_annihilation_2d(N0, lambd, t_max, size=100):\n    \"\"\"\n    Simulate annihilation process in 2D space\n\n    Parameters:\n    N0: Initial number of particles\n    lambd: Reaction rate constant\n    t_max: Maximum simulation time\n    size: Simulation area size\n    \"\"\"\n    # Initialize particles\n    x, y = initialize_particles(N0, size)\n\n    # Store trajectory data\n    frames = []\n    times = [0.0]\n    particle_counts = [N0]\n\n    t = 0.0\n    frames.append((x.copy(), y.copy()))\n\n    while t &lt; t_max and len(x) &gt; 1:\n        # Calculate reaction propensity\n        N = len(x)\n        propensity = 0.5 * lambd * N * (N - 1)\n\n        if propensity == 0:\n            break\n\n        # Generate random number to calculate next reaction time\n        r1 = np.random.rand()\n        dt = (1.0 / propensity) * np.log(1.0 / r1)\n\n        # Update time\n        t += dt\n\n        # Particle random movement (diffusion)\n        diffusion_step = np.sqrt(2 * dt) * 0.5  # Slow down diffusion\n        x += np.random.normal(0, diffusion_step, len(x))\n        y += np.random.normal(0, diffusion_step, len(y))\n\n        # Handle boundary conditions (periodic boundaries)\n        x = x % size\n        y = y % size\n\n        # Find and annihilate close particle pairs\n        pairs = find_annihilation_pairs(x, y)\n\n        # Remove annihilated particles\n        if pairs:\n            indices_to_remove = []\n            for i, j in pairs:\n                indices_to_remove.extend([i, j])\n\n            # Sort in descending order for easier deletion\n            indices_to_remove.sort(reverse=True)\n            for idx in indices_to_remove:\n                x = np.delete(x, idx)\n                y = np.delete(y, idx)\n\n        # Save frame data\n        times.append(t)\n        particle_counts.append(len(x))\n        frames.append((x.copy(), y.copy()))\n\n    return times, particle_counts, frames, size\n\n# Main program\nif __name__ == \"__main__\":\n    # Simulation parameters\n    N0 = 100          # Initial particle count\n    lambd = 0.001     # Reaction rate\n    t_max = 50.0      # Maximum simulation time\n    size = 100        # Simulation area size\n\n    print(\"Starting simulation...\")\n    times, particle_counts, frames, size = simulate_annihilation_2d(N0, lambd, t_max, size)\n    print(f\"Simulation completed with {len(frames)} frames\")\n\n    # Create side-by-side animation\n    fig = plt.figure(figsize=(16, 8))\n\n    # Left: Particle motion animation\n    ax1 = fig.add_subplot(121)\n    ax1.set_xlim(0, size)\n    ax1.set_ylim(0, size)\n    ax1.set_xlabel('X Position')\n    ax1.set_ylabel('Y Position')\n    ax1.set_title('Annihilation Process: A + A \u2192 \u2205')\n    ax1.grid(True, alpha=0.3)\n\n    # Set black background\n    ax1.set_facecolor('black')\n    fig.set_facecolor('black')\n    ax1.tick_params(colors='white')\n    ax1.spines['bottom'].set_color('white')\n    ax1.spines['top'].set_color('white')\n    ax1.spines['left'].set_color('white')\n    ax1.spines['right'].set_color('white')\n    ax1.xaxis.label.set_color('white')\n    ax1.yaxis.label.set_color('white')\n    ax1.title.set_color('white')\n\n    # Right: Particle count over time\n    ax2 = fig.add_subplot(122)\n    ax2.set_xlim(0, max(times) if times else t_max)\n    ax2.set_ylim(0, N0 + 10)\n    ax2.set_xlabel('Time')\n    ax2.set_ylabel('Number of Particles')\n    ax2.set_title('Particle Count Over Time')\n    ax2.grid(True, alpha=0.3)\n\n    # Set black background\n    ax2.set_facecolor('black')\n    ax2.tick_params(colors='white')\n    ax2.spines['bottom'].set_color('white')\n    ax2.spines['top'].set_color('white')\n    ax2.spines['left'].set_color('white')\n    ax2.spines['right'].set_color('white')\n    ax2.xaxis.label.set_color('white')\n    ax2.yaxis.label.set_color('white')\n    ax2.title.set_color('white')\n\n    # Plot theoretical curve\n    t_theory = np.linspace(0, max(times) if times else t_max, 200)\n    N_theory = N0 / (1 + N0 * lambd * t_theory)\n    ax2.plot(t_theory, N_theory, 'r--', linewidth=2, label='Theory')\n    ax2.legend()\n\n    # Particle scatter plot (colored particles)\n    scat = ax1.scatter([], [], s=50, alpha=0.7)\n\n    # Particle count curve\n    line2, = ax2.plot([], [], 'b-', linewidth=2, label='Simulation')\n    ax2.legend()\n\n    # Particle count text\n    text = ax1.text(0.02, 0.98, '', transform=ax1.transAxes, fontsize=12, \n                   verticalalignment='top', color='white', \n                   bbox=dict(boxstyle='round', facecolor='black', alpha=0.8))\n\n    def animate(frame_idx):\n        if frame_idx &gt;= len(frames):\n            return [scat, line2, text]\n\n        x, y = frames[frame_idx]\n\n        # Update particle scatter plot\n        points = np.column_stack((x, y)) if len(x) &gt; 0 else np.empty((0, 2))\n        scat.set_offsets(points)\n        scat.set_color(plt.cm.plasma(np.linspace(0, 1, max(1, len(x)))))\n\n        # Update particle count curve\n        line2.set_data(times[:frame_idx+1], particle_counts[:frame_idx+1])\n\n        # Update text\n        text.set_text(f'Time: {times[frame_idx]:.2f}\\nParticles: {len(x)}')\n\n        return [scat, line2, text]\n\n    # Create animation\n    anim = FuncAnimation(fig, animate, frames=min(len(frames), 200), interval=200, blit=True, repeat=True)\n\n    # Save animation\n    print(\"Saving animation...\")\n    anim.save('annihilation_colored.gif', writer='pillow', fps=5)\n    print(\"Animation saved as annihilation_colored.gif\")\n\n    plt.show()\n</code></pre> <p></p> <p>\u6bcf\u4e2a\u5f69\u8272\u5706\u70b9\u4ee3\u8868\u4e00\u4e2a\u7c92\u5b50\uff0c\u5b83\u4eec\u4e0d\u505c\u5730\u8fdb\u884c\u968f\u673a\u7684\u5e03\u6717\u8fd0\u52a8\uff08\u6269\u6563\uff09\u3002\u5f53\u4e24\u4e2a\u7c92\u5b50\u56e0\u968f\u673a\u8fd0\u52a8\u800c\u8fdb\u5165\u5f7c\u6b64\u7684\u201c\u53cd\u5e94\u534a\u5f84\u201d\u5185\u65f6\uff0c\u5b83\u4eec\u4fbf\u4f1a\u77ac\u65f6\u6e6e\u706d\u5e76\u4ece\u7cfb\u7edf\u4e2d\u6d88\u5931\u3002\u84dd\u8272\u66f2\u7ebf\u8ffd\u8e2a\u4e86\u5de6\u4fa7\u56fe\u4e2d\u7c92\u5b50\u603b\u6570\u968f\u65f6\u95f4\u7684\u53d8\u5316\u3002\u8fd9\u6761\u66f2\u7ebf\u5e76\u975e\u5e73\u6ed1\u4e0b\u964d\uff0c\u800c\u662f\u5448\u73b0\u51fa\u9636\u68af\u72b6\u6216\u952f\u9f7f\u72b6\u7684\u968f\u673a\u8f68\u8ff9\u3002 \u7ea2\u8272\u865a\u7ebf\uff08\u5e73\u5747\u573a\u7406\u8bba\uff09\u662f\u786e\u5b9a\u6027\u901f\u7387\u65b9\u7a0b \\(\\dot{N} = -\\lambda N^2\\) \u7684\u89e3\u3002\u8fd9\u4e2a\u65b9\u7a0b\u63cf\u8ff0\u4e86\u4e00\u4e2a\u201c\u5e73\u5747\u573a\u201d\u6216\u201c\u5145\u5206\u6df7\u5408\u201d\u7684\u7406\u60f3\u7cfb\u7edf\uff0c\u5b83\u5ffd\u7565\u4e86\u6240\u6709\u7a7a\u95f4\u6da8\u843d\u548c\u7c92\u5b50\u5206\u5e03\u7684\u4e0d\u5747\u5300\u6027\uff0c\u5047\u8bbe\u4efb\u610f\u4e24\u4e2a\u7c92\u5b50\u76f8\u9047\u7684\u6982\u7387\u90fd\u5b8c\u5168\u76f8\u540c\u3002</p> <p>\u6a21\u62df\u7684\u968f\u673a\u8f68\u8ff9\uff08\u84dd\u8272\u66f2\u7ebf\uff09\u5927\u4f53\u4e0a\u9075\u5faa\u5e73\u5747\u573a\u7406\u8bba\uff08\u7ea2\u8272\u66f2\u7ebf\uff09\u7684\u8d8b\u52bf\uff0c\u4f46\u53c8\u5728\u5176\u5468\u56f4\u4e0d\u65ad\u6da8\u843d\u3002\u8fd9\u6b63\u662f\u7406\u8bba\u4e0e\u73b0\u5b9e\u7684\u5173\u952e\u533a\u522b\uff1a\u5e73\u5747\u573a\u7406\u8bba\u7ed9\u51fa\u4e86\u7cfb\u7edf\u6f14\u5316\u7684\u5e73\u5747\u671f\u671b\uff0c\u800c\u968f\u673a\u6a21\u62df\u5219\u63ed\u793a\u4e86\u4efb\u4f55\u5355\u6b21\u5b9e\u9a8c\u90fd\u4f1a\u7ecf\u5386\u7684\u3001\u4e0d\u53ef\u907f\u514d\u7684\u968f\u673a\u6da8\u843d\u3002\u56e0\u6b64\uff0c\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u4e2d\u7684\u786e\u5b9a\u6027\u6f02\u79fb\u9879\uff08\u5bf9\u5e94\u7ea2\u8272\u66f2\u7ebf\uff09\u548c\u968f\u673a\u566a\u58f0\u9879\uff08\u5bf9\u5e94\u84dd\u8272\u66f2\u7ebf\u4e0e\u7ea2\u8272\u66f2\u7ebf\u7684\u5dee\u5f02\uff09\u5171\u540c\u6784\u6210\u4e86\u5bf9\u771f\u5b9e\u7269\u7406\u8fc7\u7a0b\u7684\u5b8c\u6574\u63cf\u8ff0\u3002</p> <p>\u4e0b\u8868\u5c06Gillespie\u6a21\u62df\u4e2d\u7684\u76f4\u89c2\u6982\u5ff5\u4e0e\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u4e2d\u7684\u62bd\u8c61\u7406\u8bba\u7cbe\u786e\u5730\u8054\u7cfb\u8d77\u6765\uff0c\u8fd9\u662f\u7406\u89e3\u8be5\u5f62\u5f0f\u4e3b\u4e49\u7684\u5173\u952e\u4e00\u6b65\uff1a</p> Gillespie\u6a21\u62df\u4e2d\u7684\u6982\u5ff5 \u6570\u5b66\u8868\u793a \u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u4e2d\u7684\u5bf9\u5e94\u9879 \u7269\u7406\u91ca\u4e49 \u53cd\u5e94\u503e\u5411\uff08\u901f\u7387\uff09 \\(a(N) = \\frac{\\lambda}{2} N(N - 1) \\approx \\frac{\\lambda}{2} N^2\\) \\(iq(\\lambda x^2)\\) \u7cfb\u7edf\u7684\u786e\u5b9a\u6027\u6f02\u79fb\u9879\uff0c\u5bf9\u5e94\u4e8e\u5e73\u5747\u573a\u52a8\u529b\u5b66\u3002 \u7c92\u5b50\u6570\u53d8\u5316 \\(\\Delta N = -2\\) \u7b97\u7b26 \\(a^2\\) \u63cf\u8ff0\u5355\u6b21\u53cd\u5e94\u4e8b\u4ef6\u7684\u5316\u5b66\u8ba1\u91cf\u3002 \u4e8b\u4ef6\u7684\u968f\u673a\u6027 \u6307\u6570\u5206\u5e03\u7684\u7b49\u5f85\u65f6\u95f4 \\(\\frac{1}{2} \\lambda x^2 (iq)^2\\) \u7cfb\u7edf\u7684\u968f\u673a\u6da8\u843d\u9879\uff08\u566a\u58f0\uff09\uff0c\u6e90\u4e8e\u7c92\u5b50\u79bb\u6563\u6027\u548c\u53cd\u5e94\u7684\u6982\u7387\u6027\u3002 <p>\u8fd9\u5f20\u8868\u5c55\u793a\u4e86\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u4e2d\u6bcf\u4e00\u9879\u7684\u7269\u7406\u6765\u6e90\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u8fd9\u4e2a\u770b\u4f3c\u62bd\u8c61\u7684\u573a\u8bba\u4f5c\u7528\u91cf\uff0c\u5b9e\u9645\u4e0a\u662f\u5bf9\u5fae\u89c2\u968f\u673a\u4e8b\u4ef6\uff08Gillespie\u6a21\u62df\uff09\u7684\u4e00\u79cd\u9ad8\u5ea6\u51dd\u7ec3\u548c\u7cbe\u786e\u7684\u6570\u5b66\u7f16\u7801\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#5","title":"5. \u865a\u566a\u58f0\uff1a\u8fde\u63a5\u79bb\u6563\u4e0e\u8fde\u7eed\u7684\u4ee3\u4ef7","text":"<p>\u5728\u4e0a\u4e00\u8282\u4e2d\u4e3a \\(A + A \\to \\emptyset\\) \u6e6e\u706d\u53cd\u5e94\u6784\u5efa\u4e86\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u3002\u8fd9\u4e00\u6570\u5b66\u5f62\u5f0f\u9690\u85cf\u7740\u6df1\u523b\u7684\u7269\u7406\u5185\u6db5\u3002\u8fd9\u5c0f\u8282\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u5c31\u662f\u901a\u8fc7\u5c06\u5176\u4e0e\u63cf\u8ff0\u6807\u51c6\u8fde\u7eed\u968f\u673a\u8fc7\u7a0b\u7684\u4f5c\u7528\u91cf\u8fdb\u884c\u5bf9\u6bd4\uff0c\u6765\u201c\u89e3\u5256\u201d\u8fd9\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5e76\u63ed\u793a\u4e00\u4e2a\u7ed3\u8bba\u2014\u2014\u4e3a\u4e86\u7528\u8fde\u7eed\u7684\u573a\u8bba\u8bed\u8a00\u7cbe\u786e\u63cf\u8ff0\u79bb\u6563\u7684\u7c92\u5b50\u751f\u706d\u8fc7\u7a0b\uff0c\u5fc5\u987b\u5f15\u5165\u201c\u865a\u566a\u58f0\u201d\u7684\u6982\u5ff5\u3002</p> <p></p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#51","title":"5.1 \u4f5c\u7528\u91cf\u7684\u7ed3\u6784\u5bf9\u6bd4","text":"<p>\u9996\u5148\uff0c\u56de\u5230 \\(A + A \\to \\emptyset\\) \u53cd\u5e94\u5728\u6269\u6563\u8fd1\u4f3c\u4e0b\u7684\u4f5c\u7528\u91cf\u8868\u8fbe\u5f0f\uff1a</p> \\[ S[x, iq] = \\int d\\tau \\left[ iq(\\partial_\\tau x + \\lambda x^2) + \\frac{1}{2} \\lambda x^2 (iq)^2 \\right] \\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u6784\uff0c\u4e0e\u5728\u7b2c32\u8bb2\u4e2d\u4e3a\u901a\u7528\u6717\u4e4b\u4e07\u65b9\u7a0b\u63a8\u5bfc\u51fa\u7684\u9a6c\u4e01-\u897f\u8d3e-\u7f57\u65af-\u6768\u68ee-\u5fb7\u591a\u7c73\u5c3c\u897f\u65af\uff08MSRJD\uff09\u4f5c\u7528\u91cf\u975e\u5e38\u76f8\u4f3c\u3002\u4e00\u4e2a\u7531\u4ee5\u4e0b\u901a\u7528\u6717\u4e4bVAN\u65b9\u7a0b\uff08\u91c7\u7528 It\u00f4 \u7ea6\u5b9a\uff09\u63cf\u8ff0\u7684\u8fde\u7eed\u968f\u673a\u8fc7\u7a0b\uff1a</p> \\[ dx = A(x)\\,dt + \\sqrt{B(x)}\\,dW(t) \\] <p>\u5176\u4e2d \\(A(x)\\) \u662f\u6f02\u79fb\u9879\uff0c\\(B(x)\\) \u662f\u6269\u6563\u7cfb\u6570\uff08\u566a\u58f0\u5f3a\u5ea6\uff09\uff0c\\(dW(t)\\) \u662f\u7ef4\u7eb3\u8fc7\u7a0b\u7684\u589e\u91cf\u3002\u5176\u5bf9\u5e94\u7684MSRJD\u4f5c\u7528\u91cf\u4e3a\uff1a</p> <p>$$ S_{\\text{MSRJD}}[x, iq] = \\int d\\tau \\left[ iq(\\partial_\\tau x - A(x)) - \\frac{1}{2} B(x) (iq)^2 \\right] $$ \u73b0\u5728\uff0c\u5c06\u4ece\u4e3b\u65b9\u7a0b\u63a8\u5bfc\u51fa\u7684\u4f5c\u7528\u91cf\u4e0e\u8fd9\u4e2a\u6807\u51c6\u5f62\u5f0f\u8fdb\u884c\u9010\u9879\u6bd4\u8f83\uff1a</p> <ul> <li> <p>\u6709\u6548\u6f02\u79fb\u9879 (Effective Drift) \uff1a\u901a\u8fc7\u5bf9\u6bd4 \\(iq\\partial_\\tau x\\) \u4e4b\u540e\u7684\u7ebf\u6027\u9879\uff0c\u53ef\u4ee5\u8bc6\u522b\u51fa \\(A(x) = -\\lambda x^2\\)\u3002</p> </li> <li> <p>\u6709\u6548\u6269\u6563\u9879 (Effective Diffusion) \uff1a\u901a\u8fc7\u5bf9\u6bd4 \\((iq)^2\\) \u7684\u7cfb\u6570\uff0c\u53ef\u4ee5\u8bc6\u522b\u51fa \\(B(x) = \\lambda x^2\\)\u3002</p> </li> </ul>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#52","title":"5.2 \u7269\u7406\u5185\u6db5\u7684\u89e3\u8bfb","text":"<p>\u8fd9\u4e2a\u5bf9\u6bd4\u7ed3\u679c\u7684\u7269\u7406\u610f\u4e49\u975e\u5e38\u6df1\u523b\uff1a</p> <ol> <li> <p>\u6f02\u79fb\u9879\u6355\u6349\u4e86\u5e73\u5747\u573a\u52a8\u529b\u5b66\uff1a\u6709\u6548\u6f02\u79fb\u9879 \\(A(x) = -\\lambda x^2\\) \u6b63\u662f\u63cf\u8ff0\u8be5\u7cfb\u7edf\u5b8f\u89c2\u884c\u4e3a\u7684\u5e73\u5747\u573a\uff08mean-field\uff09\u901f\u7387\u65b9\u7a0b\u3002\u8fd9\u8868\u660e\uff0c\u8def\u5f84\u79ef\u5206\u6846\u67b6\u6b63\u786e\u5730\u6355\u6349\u4e86\u7cfb\u7edf\u7684\u5e73\u5747\u786e\u5b9a\u6027\u52a8\u529b\u5b66\uff0c\u8fd9\u4e0eGillespie\u6a21\u62df\u4e2d\u7684\u7cfb\u7efc\u5e73\u5747\u884c\u4e3a\u76f8\u7b26\u3002</p> </li> <li> <p>\u6269\u6563\u9879\u6355\u6349\u4e86\u5185\u7980\u6da8\u843d\uff1a\u6709\u6548\u6269\u6563\u9879 \\(B(x) = \\lambda x^2\\) \u63cf\u8ff0\u4e86\u7cfb\u7edf\u4e2d\u7684\u566a\u58f0\u3002\u8fd9\u4e2a\u566a\u58f0\u5177\u6709\u4e24\u4e2a\u5173\u952e\u7279\u5f81\uff1a</p> <ul> <li> <p>\u4e58\u6027\u566a\u58f0\uff08multiplicative noise\uff09\uff0c\u56e0\u4e3a\u5176\u5f3a\u5ea6 \\(B(x)\\) \u4f9d\u8d56\u4e8e\u7cfb\u7edf\u5f53\u524d\u7684\u72b6\u6001 \\(x\\)\u3002\u5f53\u7c92\u5b50\u6570 \\(x\\) \u8d8a\u591a\u65f6\uff0c\u6da8\u843d\u4e5f\u8d8a\u5927\uff0c\u8fd9\u7b26\u5408\u5316\u5b66\u53cd\u5e94\u7684\u57fa\u672c\u76f4\u89c9\u3002</p> </li> <li> <p>\u5185\u7980\u566a\u58f0\uff08intrinsic noise\uff09\u6216\u6563\u7c92\u566a\u58f0\uff08shot noise\uff09\u3002\u8fd9\u79cd\u566a\u58f0\u5e76\u975e\u6765\u81ea\u5916\u90e8\u73af\u5883\uff08\u5982\u70ed\u6d74\uff09\uff0c\u800c\u662f\u6e90\u4e8e\u7cfb\u7edf\u5185\u90e8\u7c92\u5b50\u6570\u91cf\u7684\u79bb\u6563\u6027\u548c\u5316\u5b66\u53cd\u5e94\u672c\u8eab\u7684\u6982\u7387\u6027\u3002\u5b83\u662f\u7cfb\u7edf\u4e0d\u53ef\u5206\u5272\u7684\u4e00\u90e8\u5206\u3002</p> </li> </ul> </li> </ol>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#53","title":"5.3 \u5173\u952e\u7684\u7b26\u53f7\u5dee\u5f02\uff1a\u865a\u566a\u58f0\u7684\u8d77\u6e90","text":"<p>\u7136\u800c\uff0c\u5728\u6bd4\u8f83\u4e24\u4e2a\u4f5c\u7528\u91cf\u65f6\uff0c\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u7b26\u53f7\u5dee\u5f02\u6d6e\u73b0\u4e86\u51fa\u6765\u3002\u5728\u6807\u51c6\u7684MSRJD\u4f5c\u7528\u91cf\u4e2d\uff0c\\((iq)^2\\) \u9879\u7684\u7cfb\u6570\u662f\u8d1f\u7684\uff08\\(-\\frac{1}{2} B(x)\\)\uff09\uff0c\u800c\u5728\u6211\u4eec\u4ece\u4e3b\u65b9\u7a0b\u63a8\u5bfc\u7684\u4f5c\u7528\u91cf\u4e2d\uff0c\u8be5\u9879\u7684\u7cfb\u6570\u662f\u6b63\u7684\uff08\\(+\\frac{1}{2} \\lambda x^2\\)\uff09\u3002</p> <p>\u8fd9\u4e2a\u6b63\u53f7\u6b63\u662f\u201c\u865a\u566a\u58f0\uff08imaginary noise\uff09\u201d\u6982\u5ff5\u7684\u6765\u6e90\u3002\u4e3a\u4e86\u4f7f\u6211\u4eec\u63a8\u5bfc\u7684\u4f5c\u7528\u91cf\u5f62\u5f0f\u4e0a\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u6717\u4e4b\u4e07\u8fc7\u7a0b\uff0c\u5176\u5bf9\u5e94\u7684\u7b49\u6548\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e2d\u7684\u566a\u58f0\u9879\u5fc5\u987b\u662f\u7eaf\u865a\u6570\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u63cf\u8ff0\u79bb\u6563\u7c92\u5b50\u6e6e\u706d\u8fc7\u7a0b\u7684\u7b49\u6548\u8fde\u7eed\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u5e94\u8be5\u662f\uff1a $$ \\partial_\\tau x = -\\lambda x^2 + \\sqrt{-\\lambda x^2} \\cdot \\eta(\\tau) = -\\lambda x^2 + i\\sqrt{\\lambda x^2} \\cdot \\eta(\\tau) $$ \u5176\u4e2d \\(\\eta(\\tau)\\) \u662f\u4e00\u4e2a\u6807\u51c6\u7684\u9ad8\u65af\u767d\u566a\u58f0\u3002\u663e\u7136\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u63cf\u8ff0\u7269\u7406\u4e16\u754c\u4e2d\u771f\u5b9e\u968f\u673a\u529b\u7684\u65b9\u7a0b\u3002\u5b83\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u6570\u5b66\u6784\u9020\u3002</p> <p>\u201c\u865a\u566a\u58f0\u201d\u7684\u7269\u7406\u610f\u4e49\uff1a \u201c\u865a\u566a\u58f0\u201d\u7684\u51fa\u73b0\uff0c\u662f\u8fde\u7eed\u573a\u8bba\u5728\u63cf\u8ff0\u79bb\u6563\u968f\u673a\u6e6e\u706d\u8fc7\u7a0b\u65f6\u6240\u4ed8\u51fa\u7684\u201c\u4ee3\u4ef7\u201d\uff0c\u540c\u65f6\u4e5f\u662f\u5176\u6210\u529f\u7684\u5173\u952e\u3002\u5b83\u5e76\u975e\u771f\u5b9e\u7684\u7269\u7406\u566a\u58f0\uff0c\u800c\u662f\u4e00\u79cd\u6570\u5b66\u6807\u8bb0\uff0c\u5b83\u7cbe\u786e\u5730\u7f16\u7801\u4e86\u7531\u79bb\u6563\u8df3\u8dc3\u8fc7\u7a0b\u4ea7\u751f\u7684\u975e\u9ad8\u65af\u7edf\u8ba1\u7279\u6027\uff08\u7279\u522b\u662f\u6cca\u677e\u7edf\u8ba1\u7279\u6027\uff09\u3002</p> <ul> <li> <p>\u4e00\u4e2a\u5e26\u6709\u5b9e\u6570\u566a\u58f0\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\uff0c\u901a\u8fc7\u8def\u5f84\u79ef\u5206\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a\u8fd1\u4f3c\u9ad8\u65af\u8fc7\u7a0b\u7684\u6982\u7387\u5206\u5e03\u3002</p> </li> <li> <p>\u800c\u4e00\u4e2a\u5e26\u6709\u865a\u566a\u58f0\u7684\u7b49\u6548\u6717\u4e4b\u4e07\u65b9\u7a0b\uff0c\u901a\u8fc7\u8def\u5f84\u79ef\u5206\uff0c\u5374\u80fd\u6b63\u786e\u5730\u751f\u6210\u63cf\u8ff0\u79bb\u6563\u7c92\u5b50\u6570\u6f14\u5316\u7684\u4e3b\u65b9\u7a0b\u7684\u89e3\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0c\u865a\u566a\u58f0\u662f\u7406\u89e3\u5982\u4f55\u7528\u8fde\u7eed\u7684\u573a\u8bba\u8bed\u8a00\u6765\u7cbe\u786e\u63cf\u8ff0\u79bb\u6563\u968f\u673a\u4e16\u754c\u7684\u5173\u952e\u6982\u5ff5\u3002\u5b83\u63d0\u9192\u6211\u4eec\uff0c\u5c3d\u7ba1\u6570\u5b66\u5f62\u5f0f\u76f8\u4f3c\uff0c\u4f46\u7531\u4e3b\u65b9\u7a0b\u5bfc\u51fa\u7684\u573a\u8bba\u4e0e\u7531\u6717\u4e4b\u4e07\u65b9\u7a0b\u5bfc\u51fa\u7684\u573a\u8bba\u5728\u7269\u7406\u6839\u6e90\u4e0a\u5b58\u5728\u672c\u8d28\u533a\u522b\u3002</p>"},{"location":"zh/notes/36.%20%E7%9B%B8%E5%B9%B2%E6%80%81%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E3%80%81%E7%AE%97%E7%AC%A6%E4%BB%A3%E6%95%B0%E4%B8%8E%E8%99%9A%E5%99%AA%E5%A3%B0/#_2","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5f3a\u5927\u800c\u7cfb\u7edf\u7684\u65b9\u6cd5\u2014\u2014\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\u2014\u2014\u7528\u4e8e\u5206\u6790\u968f\u673a\u5316\u5b66\u53cd\u5e94\u52a8\u529b\u5b66\u3002\u901a\u8fc7\u5f15\u5165\u6cca\u677e\u8868\u793a\u548c\u7b97\u7b26\u4ee3\u6570\uff0c\u5c06\u79bb\u6563\u3001\u6982\u7387\u6027\u7684\u4e3b\u65b9\u7a0b\uff0c\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u5f62\u5f0f\u4e0a\u4e0e\u91cf\u5b50\u529b\u5b66\u859b\u5b9a\u8c14\u65b9\u7a0b\u9ad8\u5ea6\u76f8\u4f3c\u7684\u7b97\u7b26\u52a8\u529b\u5b66\u65b9\u7a0b\u3002\u8fd9\u4e00\u8f6c\u53d8\u6df1\u5316\u4e86\u5bf9\u7ecf\u5178\u968f\u673a\u8fc7\u7a0b\u6570\u5b66\u7ed3\u6784\u7684\u7406\u89e3\uff0c\u4e5f\u4e3a\u540e\u7eed\u5206\u6790\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u573a\u8bba\u5de5\u5177\u3002</p> <p>\u4ece\u8fd9\u4e2a\u7b97\u7b26\u65b9\u7a0b\u51fa\u53d1\uff0c\u7cfb\u7edf\u6027\u5730\u63a8\u5bfc\u51fa\u4e86\u4e00\u4e2a\u666e\u9002\u7684\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u3002\u8be5\u4f5c\u7528\u91cf\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u8fde\u7eed\u7684\u8f85\u52a9\u573a \\(x(\\tau)\\) \u53ca\u5176\u5171\u8f6d\u7684\u54cd\u5e94\u573a \\(q(\\tau)\\)\u3002\u6b64\u6846\u67b6\u7684\u5a01\u529b\u5728\u4e8e\u5176\u901a\u7528\u6027\uff1a\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u7684\u53cd\u5e94\u7f51\u7edc\uff0c\u90fd\u5b58\u5728\u4e00\u5957\u660e\u786e\u7684\u89c4\u5219\u6765\u6784\u5efa\u5176\u5bf9\u5e94\u7684\u4f5c\u7528\u91cf\uff0c\u8fd9\u514b\u670d\u4e86\u4ee5\u5f80\u542f\u53d1\u5f0f\u6784\u5efa\u4f5c\u7528\u91cf\u6240\u9762\u4e34\u7684\u5c40\u9650\u3002</p> <p>\u901a\u8fc7\u5bf9\u53cc\u5206\u5b50\u6e6e\u706d\u53cd\u5e94 \\(A + A \\to \\emptyset\\) \u7684\u6df1\u5165\u6848\u4f8b\u5206\u6790\uff0c\u63ed\u793a\u4e86\u8be5\u7406\u8bba\u6846\u67b6\u7684\u6df1\u523b\u7269\u7406\u5185\u6db5\uff1a</p> <ol> <li> <p>\u8fde\u63a5\u5b8f\u89c2\u4e0e\u5fae\u89c2: \u8be5\u6846\u67b6\u5b8c\u7f8e\u5730\u8fde\u63a5\u4e86\u63cf\u8ff0\u5fae\u89c2\u79bb\u6563\u4e8b\u4ef6\u7684\u968f\u673a\u6a21\u62df\uff08\u4f8b\u5982Gillespie\u7b97\u6cd5\uff09\u548c\u63cf\u8ff0\u5b8f\u89c2\u8fde\u7eed\u6f14\u5316\u7684\u573a\u8bba\u3002\u4f5c\u7528\u91cf\u4e2d\u7684\u6f02\u79fb\u9879\u7cbe\u786e\u5bf9\u5e94\u4e8e\u7cfb\u7edf\u7684\u5e73\u5747\u573a\u901f\u7387\u65b9\u7a0b\uff0c\u800c\u6269\u6563\u9879\u5219\u6355\u6349\u4e86\u6e90\u4e8e\u7c92\u5b50\u79bb\u6563\u6027\u672c\u8eab\u7684\u5185\u7980\u6da8\u843d\u6548\u5e94\u3002</p> </li> <li> <p>\u865a\u566a\u58f0\u7684\u7269\u7406\u610f\u4e49: \u4f5c\u7528\u91cf\u4e2d\u6269\u6563\u9879\u7684\u6b63\u53f7\uff0c\u63ed\u793a\u4e86\u63cf\u8ff0\u79bb\u6563\u751f\u706d\u8fc7\u7a0b\u7684\u7b49\u6548\u8fde\u7eed\u7406\u8bba\u4e2d\u5fc5\u987b\u5305\u542b\u201c\u865a\u566a\u58f0\u201d\u3002\u8fd9\u5e76\u975e\u7269\u7406\u4e16\u754c\u4e2d\u771f\u5b9e\u7684\u968f\u673a\u529b\uff0c\u800c\u662f\u4e00\u79cd\u5fc5\u8981\u7684\u6570\u5b66\u6784\u9020\uff0c\u5b83\u4f7f\u5f97\u8fde\u7eed\u7684\u8def\u5f84\u79ef\u5206\u80fd\u591f\u7cbe\u786e\u5730\u91cd\u73b0\u79bb\u6563\u4e3b\u65b9\u7a0b\u6240\u63cf\u8ff0\u7684\u975e\u9ad8\u65af\u7edf\u8ba1\u7279\u6027\uff08\u7279\u522b\u662f\u6cca\u677e\u7edf\u8ba1\u7279\u6027\uff09\uff0c\u4ece\u800c\u5f25\u5408\u4e86\u79bb\u6563\u8df3\u8dc3\u8fc7\u7a0b\u4e0e\u8fde\u7eed\u573a\u8bba\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002</p> </li> </ol> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u8282\u8bfe\u6240\u5efa\u7acb\u7684\u7406\u8bba\u6846\u67b6\uff0c\u4e0d\u4ec5\u4e3a\u89e3\u51b3\u590d\u6742\u968f\u673a\u52a8\u529b\u5b66\u95ee\u9898\u63d0\u4f9b\u4e86\u65b0\u7684\u8ba1\u7b97\u5de5\u5177\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u4e3a\u7406\u89e3\u7ecf\u5178\u7edf\u8ba1\u7269\u7406\u4e0e\u91cf\u5b50\u573a\u8bba\u4e4b\u95f4\u6df1\u523b\u7684\u7ed3\u6784\u6027\u8054\u7cfb\u63d0\u4f9b\u4e86\u5b9d\u8d35\u7684\u89c6\u89d2\u3002</p> <p>\u8fd9\u8282\u8bfe\u4e3a\u79bb\u6563\u7c92\u5b50\u7cfb\u7edf\uff08\u4e3b\u65b9\u7a0b\uff09\u6784\u5efa\u4e86\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\u3002\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\uff08\u4f8b\u5982\u7b2c19\u300122\u548c31\u8bb2\uff09\uff0c\u4e5f\u5b66\u4e60\u4e86\u7528\u4e8e\u63cf\u8ff0\u8fde\u7eed\u968f\u673a\u8fc7\u7a0b\uff08\u4f8b\u5982\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff09\u7684\u8def\u5f84\u79ef\u5206\u3002\u4e00\u4e2a\u81ea\u7136\u800c\u7136\u7684\u95ee\u9898\u662f\uff1a\u8fd9\u4e24\u79cd\u8def\u5f84\u79ef\u5206\u4e4b\u95f4\u5b58\u5728\u4f55\u79cd\u8054\u7cfb\uff1f</p> <p>\u7b2c37\u8bb2\u5c06\u81f4\u529b\u4e8e\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u3002\u6838\u5fc3\u7684\u6570\u5b66\u5de5\u5177\u5c06\u662fKramers-Moyal \u5c55\u5f00\u3002\u8fd9\u662f\u4e00\u4e2a\u53ef\u4ee5\u5c06\u4e3b\u65b9\u7a0b\uff08\u4e00\u4e2a\u79ef\u5206-\u5fae\u5206\u65b9\u7a0b\uff09\u5f62\u5f0f\u4e0a\u5c55\u5f00\u4e3a\u4e00\u4e2a\u65e0\u7a77\u9636\u504f\u5fae\u5206\u65b9\u7a0b\u7684\u6280\u672f\u3002\u8fd9\u4e2a\u5c55\u5f00\u7684\u524d\u4e24\u9879\uff0c\u6070\u597d\u5bf9\u5e94\u4e8e\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u4e2d\u7684\u6f02\u79fb\u9879\u548c\u6269\u6563\u9879\u3002\u5728\u4f4e\u566a\u58f0\u6781\u9650\u4e0b\uff0c\u4f8b\u5982\u5f53\u7cfb\u7edf\u5c3a\u5bf8\u6216\u7c92\u5b50\u6570\u975e\u5e38\u5927\u65f6\uff0cKramers-Moyal\u5c55\u5f00\u4e2d\u7684\u9ad8\u9636\u9879\u53ef\u4ee5\u88ab\u5ffd\u7565\u3002\u5728\u8fd9\u79cd\u8fd1\u4f3c\u4e0b\uff0c\u79bb\u6563\u7684\u4e3b\u65b9\u7a0b\u53ef\u4ee5\u6709\u6548\u5730\u7ea6\u5316\u4e3a\u4e00\u4e2a\u8fde\u7eed\u7684\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u3002</p> <p>\u56e0\u6b64\uff0c\u7b2c37\u8bb2\u5c06\u63a2\u8ba8\u5728\u8fd9\u4e2a\u6781\u9650\u4e0b\uff0c\u672c\u8bb2\u63a8\u5bfc\u7684\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\u5982\u4f55\u8fc7\u6e21\u5230\u6211\u4eec\u719f\u6089\u7684\u3001\u63cf\u8ff0\u5b9e\u566a\u58f0\u6717\u4e4b\u4e07\u8fc7\u7a0b\u7684Onsager-Machlup\u8def\u5f84\u79ef\u5206\uff08\u7b2c31\u8bb2\uff09\u3002\u8fd9\u5c06\u6700\u7ec8\u5b8c\u6210\u4ece\u5fae\u89c2\u79bb\u6563\u968f\u673a\u8fc7\u7a0b\u5230\u5b8f\u89c2\u8fde\u7eed\u968f\u673a\u52a8\u529b\u5b66\u63cf\u8ff0\u7684\u7406\u8bba\u95ed\u73af\uff0c\u5e76\u9610\u660e\u4e0d\u540c\u8def\u5f84\u79ef\u5206\u8868\u8ff0\u4e4b\u95f4\u7684\u5185\u5728\u5173\u7cfb\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/","title":"\u5f15\u8a00\uff1a\u8fde\u63a5\u79bb\u6563\u8df3\u8dc3\u4e0e\u8fde\u7eed\u63cf\u8ff0\u7684\u53e6\u4e00\u5ea7\u6865\u6881","text":"<p>\u5728\u7b2c36\u8bb2\u4e2d\uff0c\u4e00\u4e2a\u7cfb\u7edf\u6027\u7684\u6846\u67b6\u2014\u2014\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\uff08Coherent State Path Integral, CSP\uff09\u2014\u2014\u88ab\u6210\u529f\u6784\u5efa\u51fa\u6765\u3002\u8be5\u6846\u67b6\u4ee5\u7b97\u7b26\u4ee3\u6570\u4e3a\u57fa\u77f3\uff0c\u901a\u8fc7\u5f15\u5165\u6cca\u677e\u8868\u793a\u4e0e\u4ea7\u751f-\u6e6e\u706d\u7b97\u7b26\uff0c\u5c06\u63cf\u8ff0\u79bb\u6563\u7c92\u5b50\u751f\u706d\u8fc7\u7a0b\u7684\u4e3b\u65b9\u7a0b\uff0c\u7cbe\u786e\u5730\u8f6c\u5316\u4e3a\u4e00\u4e2a\u53ef\u5728\u5176\u4e2d\u8fd0\u7528\u573a\u8bba\u5de5\u5177\u7684\u8def\u5f84\u79ef\u5206\u8303\u5f0f\u3002\u8fd9\u79cd\u4ee3\u6570\u65b9\u6cd5\u4e3a\u5904\u7406\u968f\u673a\u5316\u5b66\u52a8\u529b\u5b66\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u7406\u8bba\u57fa\u7840\u3002</p> <p>\u8fd9\u8282\u8bfe\u5c06\u4ece\u4e00\u4e2a\u4e0d\u540c\u7684\u3001\u7269\u7406\u4e0a\u66f4\u4e3a\u76f4\u89c2\u7684\u89c6\u89d2\u51fa\u53d1\uff0c\u63a2\u5bfb\u8fde\u63a5\u79bb\u6563\u4e0e\u8fde\u7eed\u63cf\u8ff0\u7684\u53e6\u4e00\u6761\u8def\u5f84\u3002\u5176\u6838\u5fc3\u95ee\u9898\u4fdd\u6301\u4e0d\u53d8\uff1a\u5982\u4f55\u4ece\u4e00\u4e2a\u63cf\u8ff0\u5fae\u89c2\u3001\u79bb\u6563\u201c\u8df3\u8dc3\u201d\u4e8b\u4ef6\uff08\u4f8b\u5982\uff0c\u7c92\u5b50\u6570\u4ece \\(n\\) \u53d8\u4e3a \\(n + \\Delta n\\)\uff09\u7684\u4e3b\u65b9\u7a0b\u51fa\u53d1\uff0c\u7cfb\u7edf\u6027\u5730\u63a8\u5bfc\u51fa\u4e00\u4e2a\u7b49\u6548\u7684\u8fde\u7eed\u63cf\u8ff0\uff0c\u4f8b\u5982\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\uff08Fokker-Planck Equation\uff09\u6216\u4e0e\u4e4b\u5bf9\u5e94\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\uff08Langevin Equation\uff09\uff1f</p> <p>\u4e3a\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u8fd9\u8282\u8bfe\u5c06\u5f15\u5165\u7684\u5173\u952e\u6570\u5b66\u5de5\u5177\u662f\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u5c55\u5f00\uff08Kramers-Moyal Expansion\uff09\u3002\u5b83\u662f\u4e00\u79cd\u5bf9\u4e3b\u65b9\u7a0b\u8fdb\u884c\u7684\u5f62\u5f0f\u5316\u6cf0\u52d2\u7ea7\u6570\u5c55\u5f00\uff0c\u80fd\u591f\u5c06\u4e00\u4e2a\u79ef\u5206-\u5fae\u5206\u5f62\u5f0f\u7684\u4e3b\u65b9\u7a0b\uff0c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u65e0\u9650\u9636\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u3002\u6b64\u5c55\u5f00\u7684\u524d\u4e24\u9879\uff0c\u5c06\u81ea\u7136\u5730\u5bf9\u5e94\u4e8e\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u4e2d\u7684\u6f02\u79fb\u9879\u548c\u6269\u6563\u9879\uff0c\u4ece\u800c\u5728\u201c\u4f4e\u566a\u58f0\u6781\u9650\u201d\uff08low noise limit\uff09\u4e0b\uff0c\u4e3a\u4ece\u79bb\u6563\u4e3b\u65b9\u7a0b\u5230\u8fde\u7eed\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\u7684\u8fc7\u6e21\u63d0\u4f9b\u4e86\u4e25\u683c\u7684\u6570\u5b66\u4f9d\u636e\u3002</p> <p>\u56e0\u6b64\uff0c\u8fd9\u8282\u8bfe\u65e8\u5728\u5efa\u7acb\u4e00\u4e2a\u5f3a\u6709\u529b\u7684\u5bf9\u6bd4\uff1a\u4e00\u8fb9\u662f\u7b2c36\u8bb2\u4e2d\u6e90\u4e8e\u7b97\u7b26\u4ee3\u6570\u7684\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\uff08CSP\uff09\uff0c\u53e6\u4e00\u8fb9\u5219\u662f\u672c\u8bb2\u5c06\u8981\u6784\u5efa\u7684\u3001\u6e90\u4e8e\u6982\u7387\u8bba\u5c55\u5f00\u7684\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\uff08Kramers-Moyal Path Integral, KMPI\uff09\u3002\u6700\u7ec8\u7684\u76ee\u6807\u662f\u5c55\u793a\uff0c\u8fd9\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u7684\u7406\u8bba\u89c6\u89d2\u5982\u4f55\u5728\u9002\u5f53\u7684\u6781\u9650\u4e0b\u6536\u655b\u4e8e\u76f8\u540c\u7684\u7269\u7406\u63cf\u8ff0\u3002\u8fd9\u79cd\u4e0d\u540c\u5f62\u5f0f\u4e3b\u4e49\u4e4b\u95f4\u7684\u5bf9\u5076\u6027\u63ed\u793a\u4e86\u968f\u673a\u8fc7\u7a0b\u7406\u8bba\u5185\u5728\u7684\u6df1\u523b\u7edf\u4e00\u6027\u3002CSP\u65b9\u6cd5\u5728\u573a\u8bba\u5206\u6790\uff08\u5982\u91cd\u6574\u5316\u7fa4\uff09\u4e2d\u6781\u5176\u5f3a\u5927\uff0c\u800cKMPI\u65b9\u6cd5\u5219\u4e3a\u8fde\u63a5\u6f02\u79fb\u3001\u6269\u6563\u7b49\u7269\u7406\u6982\u5ff5\u63d0\u4f9b\u4e86\u66f4\u76f4\u63a5\u7684\u6865\u6881\u3002\u7406\u89e3\u8fd9\u79cd\u5bf9\u5076\u6027\uff0c\u662f\u638c\u63e1\u672c\u8bb2\u5185\u5bb9\u7684\u5173\u952e\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#1-kramers-moyal","title":"1. Kramers-Moyal \u5c55\u5f00\uff1a\u4ece\u4e3b\u65b9\u7a0b\u5230\u504f\u5fae\u5206\u65b9\u7a0b","text":"<p>\u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0c\u4e3b\u65b9\u7a0b\u88ab\u786e\u7acb\u4e3a\u63cf\u8ff0\u79bb\u6563\u72b6\u6001\uff08\u5982\u7c92\u5b50\u6570\uff09\u968f\u673a\u8fc7\u7a0b\u7684\u57fa\u7840\u3002\u7136\u800c\uff0c\u5176\u79ef\u5206-\u5fae\u5206\u7684\u5f62\u5f0f\u548c\u79bb\u6563\u7684\u53d8\u91cf\u7ed9\u76f4\u63a5\u5e94\u7528\u573a\u8bba\u7684\u5206\u6790\u5de5\u5177\u5e26\u6765\u4e86\u6311\u6218\u3002\u8fd9\u8282\u8bfe\u7684\u76ee\u6807\u4fbf\u662f\u8981\u642d\u5efa\u4e00\u5ea7\u4ece\u4e3b\u65b9\u7a0b\u7684\u79bb\u6563\u4e16\u754c\u901a\u5f80\u8fde\u7eed\u573a\u8bba\u63cf\u8ff0\u7684\u6865\u6881\u3002\u7b2c\u4e00\u4e2a\u5173\u952e\u6b65\u9aa4\uff0c\u5c31\u662f\u901a\u8fc7\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\uff08Kramers-Moyal\uff09\u5c55\u5f00\uff0c\u5c06\u4e3b\u65b9\u7a0b\u8f6c\u5316\u4e3a\u4e00\u79cd\u66f4\u6613\u4e8e\u5206\u6790\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u5f62\u5f0f\u3002</p> <p>Kramers-Moyal \u5c55\u5f00\u7531\u8377\u5170\u7269\u7406\u5b66\u5bb6 Hendrik Anthony Kramers \u548c\u540e\u6765\u7684 Josef L. Moyal \u5728 20 \u4e16\u7eaa 40 \u5e74\u4ee3\uff08Kramers, 1940; Moyal, 1949\uff09\u7cfb\u7edf\u6027\u5730\u5efa\u7acb\u4e0e\u53d1\u5c55\uff0c\u5176\u5386\u53f2\u6839\u6e90\u53ef\u8ffd\u6eaf\u81f3\u65e9\u671f\u7edf\u8ba1\u7269\u7406\u5bf9\u968f\u673a\u8fc7\u7a0b\uff08\u5982\u5e03\u6717\u8fd0\u52a8\uff09\u6f14\u5316\u7684\u7814\u7a76\u3002\u8be5\u5c55\u5f00\u7684\u7269\u7406\u672c\u8d28\u662f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7cbe\u786e\u7684\u6570\u5b66\u6846\u67b6\uff0c\u7528\u4e8e\u63cf\u8ff0\u4efb\u610f\u9a6c\u5c14\u53ef\u592b\u968f\u673a\u8fc7\u7a0b\uff08\u5305\u62ec\u975e\u9ad8\u65af\u3001\u975e\u6269\u6563\u8fc7\u7a0b\uff09\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u968f\u65f6\u95f4\u7684\u6f14\u5316\uff1a\u5b83\u5c06\u6982\u7387\u5206\u5e03\u51fd\u6570\u7684\u65f6\u53d8\u7387\u8868\u8fbe\u4e3a\u5bf9\u5176\u6240\u6709\u9636\u77e9\uff08\u5373 Kramers-Moyal \u7cfb\u6570\uff09\u7684\u65e0\u7a77\u9636\u504f\u5fae\u5206\u65b9\u7a0b\uff0c\u5373</p> \\[\\partial_t p(x, t) = \\sum_{n=1}^{\\infty} (-\\partial_x)^n \\left[ D^{(n)}(x, t) p(x, t) \\right]\\] <p>\u5176\u4e2d\u7cfb\u6570 \\(D^{(n)}\\) \u76f4\u63a5\u5173\u8054\u4e8e\u968f\u673a\u589e\u91cf\u7684\u77e9\u3002</p> <p>\u5728\u5177\u4f53\u5e94\u7528\u4e0a\uff0cKramers-Moyal \u5c55\u5f00\u662f\u63a8\u5bfc Fokker-Planck \u65b9\u7a0b\uff08\u5f53\u5c55\u5f00\u5728\u7b2c\u4e8c\u9636\u622a\u65ad\u65f6\uff09\u7684\u7406\u8bba\u57fa\u7840\uff0c\u5e76\u88ab\u5e7f\u6cdb\u7528\u4e8e\u4ece\u5b9e\u9a8c\u6216\u6a21\u62df\u6570\u636e\u4e2d\u63d0\u53d6\u52a8\u529b\u5b66\u7684\u6f02\u79fb\u548c\u6269\u6563\u9879\uff08\u5373 \\(D^{(1)}\\) \u548c \\(D^{(2)}\\)\uff09\uff0c\u4ece\u800c\u5728\u795e\u7ecf\u79d1\u5b66\uff08\u5206\u6790\u795e\u7ecf\u5143\u653e\u7535\uff09\u3001\u6d41\u4f53\u6e4d\u6d41\u3001\u91d1\u878d\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u4ee5\u53ca\u5355\u5206\u5b50\u751f\u7269\u7269\u7406\u7b49\u9886\u57df\u4e2d\uff0c\u4e3a\u8bc6\u522b\u6f5c\u5728\u7684\u968f\u673a\u52a8\u529b\u5b66\u89c4\u5f8b\u63d0\u4f9b\u4e86\u5173\u952e\u5de5\u5177\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#11","title":"1.1 \u901a\u7528\u4e3b\u65b9\u7a0b","text":"<p>\u8003\u8651\u4e00\u4e2a\u7531\u5355\u4e2a\u968f\u673a\u53d8\u91cf \\(n\\)\uff08\u4f8b\u5982\u7c92\u5b50\u6570\uff09\u63cf\u8ff0\u7684\u7cfb\u7edf\u3002\u7cfb\u7edf\u7684\u72b6\u6001\u901a\u8fc7\u4e00\u7cfb\u5217\u77ac\u65f6\u7684\u201c\u8df3\u8dc3\u201d\u4e8b\u4ef6\u53d1\u751f\u6539\u53d8\uff0c\u6bcf\u6b21\u8df3\u8dc3\u90fd\u4f7f\u7c92\u5b50\u6570\u4ece \\(n\\) \u53d8\u4e3a \\(n+\\Delta n\\)\u3002\u5bf9\u4e8e\u4e00\u4e2a\u53ea\u6d89\u53ca\u4e00\u79cd\u8df3\u8dc3\u8fc7\u7a0b\uff08\u6b65\u957f\u4e3a \\(\\Delta n\\)\uff09\u7684\u7cfb\u7edf\uff0c\u5176\u6982\u7387\u5206\u5e03 \\(p(n,t)\\) \u7684\u65f6\u95f4\u6f14\u5316\u7531\u4ee5\u4e0b\u4e3b\u65b9\u7a0b\u63cf\u8ff0\uff1a</p> \\[ \\partial_t p(n,t) = \\lambda(n - \\Delta n) p(n - \\Delta n, t) - \\lambda(n) p(n,t) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7cbe\u786e\u5730\u63cf\u8ff0\u4e86\u6982\u7387\u5728\u79bb\u6563\u72b6\u6001\u7a7a\u95f4\u4e2d\u7684\u5b88\u6052\u6d41\u52a8\uff1a</p> <ul> <li> <p>\u589e\u76ca\u9879 (Gain Term): \\(\\lambda(n - \\Delta n) p(n - \\Delta n, t)\\) \u4ee3\u8868\u4ece\u72b6\u6001 \\(n-\\Delta n\\) \u8df3\u8dc3\u5230\u72b6\u6001 \\(n\\) \u7684\u603b\u6982\u7387\u6d41\u3002\\(p(n - \\Delta n, t)\\) \u662f\u7cfb\u7edf\u5904\u4e8e\u6e90\u72b6\u6001\u7684\u6982\u7387\uff0c\u800c \\(\\lambda(n - \\Delta n)\\) \u662f\u4ece\u8be5\u6e90\u72b6\u6001\u51fa\u53d1\u7684\u8f6c\u79fb\u901f\u7387\uff08Propensity\uff09\u3002</p> </li> <li> <p>\u635f\u5931\u9879 (Loss Term): \\(-\\lambda(n) p(n,t)\\) \u4ee3\u8868\u4ece\u72b6\u6001 \\(n\\) \u8df3\u8dc3\u51fa\u53bb\u7684\u603b\u6982\u7387\u6d41\u3002\\(\\lambda(n)\\) \u662f\u5f53\u524d\u72b6\u6001 \\(n\\) \u53d1\u751f\u8df3\u8dc3\u7684\u603b\u901f\u7387\u3002</p> </li> </ul> <p>\u8fd9\u4e2a\u5f62\u5f0f\u867d\u7136\u7cbe\u786e\uff0c\u4f46\u5176\u201c\u5dee\u5206\u201d\u7684\u6027\u8d28\uff08\u5373\u540c\u65f6\u6d89\u53ca \\(p(n,t)\\) \u548c \\(p(n-\\Delta n, t)\\)\uff09\u4f7f\u5176\u96be\u4ee5\u76f4\u63a5\u5904\u7406\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#12","title":"1.2 \u6cf0\u52d2\u7ea7\u6570\u5c55\u5f00","text":"<p>Kramers-Moyal\u5c55\u5f00\u7684\u6838\u5fc3\u601d\u60f3\uff0c\u662f\u5c06\u4e3b\u65b9\u7a0b\u4e2d\u7684\u589e\u76ca\u9879\uff08\u4e00\u4e2a\u5173\u4e8e \\(n-\\Delta n\\) \u7684\u51fd\u6570\uff09\u5728\u70b9 \\(n\\) \u9644\u8fd1\u8fdb\u884c\u5f62\u5f0f\u5316\u7684\u6cf0\u52d2\u7ea7\u6570\u5c55\u5f00\u3002\u5c06\u51fd\u6570 \\(f(n) = \\lambda(n)p(n,t)\\) \u5728 \\(n\\) \u70b9\u5c55\u5f00\uff0c\u53ef\u4ee5\u5f97\u5230 \\(f(n-\\Delta n)\\) \u7684\u8868\u8fbe\u5f0f\uff1a</p> \\[ \\lambda(n - \\Delta n) p(n - \\Delta n, t) = \\sum_{\\mu=0}^{\\infty} \\frac{(-\\Delta n)^{\\mu}}{\\mu!} \\frac{\\partial^{\\mu}}{\\partial n^{\\mu}} \\left[ \\lambda(n) p(n,t) \\right] \\] <p>\u5c06\u8fd9\u4e2a\u65e0\u9650\u7ea7\u6570\u4ee3\u56de\u4e3b\u65b9\u7a0b\u3002\u4e00\u4e2a\u5173\u952e\u7684\u7b80\u5316\u968f\u4e4b\u53d1\u751f\uff1a</p> <ul> <li> <p>\u5f53 \\(\\mu = 0\\) \u65f6\uff0c\u5c55\u5f00\u5f0f\u7684\u7b2c\u4e00\u9879\u662f \\(\\frac{(-\\Delta n)^0}{0!} \\frac{\\partial^0}{\\partial n^0}[\\lambda(n)p(n,t)] = \\lambda(n)p(n,t)\\)\u3002</p> </li> <li> <p>\u8fd9\u4e00\u9879\u6070\u597d\u4e0e\u4e3b\u65b9\u7a0b\u4e2d\u7684\u635f\u5931\u9879 \\(-\\lambda(n)p(n,t)\\) \u76f8\u4e92\u62b5\u6d88\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0c\u4e3b\u65b9\u7a0b\u88ab\u7cbe\u786e\u5730\u91cd\u5199\u4e3a\u4e00\u4e2a\u4ece \\(\\mu=1\\) \u5f00\u59cb\u7684\u3001\u65e0\u9650\u9636\u7684\u504f\u5fae\u5206\u65b9\u7a0b\uff0c\u8fd9\u4fbf\u662fKramers-Moyal\u5c55\u5f00\uff1a</p> \\[ \\partial_t p(n,t) = \\sum_{\\mu=1}^{\\infty} \\frac{(-\\Delta n)^{\\mu}}{\\mu!} \\frac{\\partial^{\\mu}}{\\partial n^{\\mu}} \\left[ \\lambda(n) p(n,t) \\right] \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u5728\u6570\u5b66\u4e0a\u4e0e\u539f\u59cb\u4e3b\u65b9\u7a0b\u662f\u7b49\u4ef7\u7684\uff0c\u4f46\u5176\u5f62\u5f0f\u53d1\u751f\u4e86\u6839\u672c\u6027\u7684\u8f6c\u53d8\u3002\u5b83\u5c06\u4e00\u4e2a\u79bb\u6563\u7684\u5dee\u5206\u65b9\u7a0b\uff0c\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u5c06 \\(n\\) \u89c6\u4e3a\u8fde\u7eed\u53d8\u91cf\u7684\u3001\u5305\u542b\u5404\u9636\u5bfc\u6570\u7684\u504f\u5fae\u5206\u65b9\u7a0b\uff0c\u4e3a\u540e\u7eed\u7684\u5206\u6790\u94fa\u5e73\u4e86\u9053\u8def\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#13-pawula","title":"1.3 Pawula \u5b9a\u7406\u53ca\u5176\u7269\u7406\u610f\u4e49","text":"<p>\u8fd9\u4e2a\u65e0\u9650\u9636\u7684\u5c55\u5f00\u5f15\u51fa\u4e86\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u95ee\u9898\uff1a\u5728\u4f55\u79cd\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u7ea7\u6570\u8fdb\u884c\u622a\u65ad\uff1fPawula\u5b9a\u7406\u7ed9\u51fa\u4e86\u4e00\u4e2a\u975e\u5e73\u51e1\u7684\u3001\u5177\u6709\u6df1\u523b\u7269\u7406\u542b\u4e49\u7684\u7b54\u6848\uff1aKramers-Moyal\u5c55\u5f00\u8981\u4e48\u5728\u4e8c\u9636\uff08\\(\\mu = 2\\)\uff09\u4e4b\u540e\u7684\u6240\u6709\u9ad8\u9636\u9879\u90fd\u4e25\u683c\u4e3a\u96f6\uff0c\u8981\u4e48\u5b83\u5fc5\u987b\u5305\u542b\u65e0\u7a77\u591a\u4e2a\u975e\u96f6\u9879\u3002\u4e0d\u5141\u8bb8\u5728\u7b2c\u4e09\u9636\u6216\u66f4\u9ad8\u9636\u622a\u65ad\u3002</p> <p>\u8fd9\u4e2a\u5b9a\u7406\u5c06\u968f\u673a\u8fc7\u7a0b\u6e05\u6670\u5730\u5212\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a</p> <ol> <li> <p>\u7eaf\u6269\u6563\u8fc7\u7a0b (Fokker-Planck Processes) \uff1a\u5982\u679c\u5c55\u5f00\u5728 \\(\\mu = 2\\) \u5904\u7cbe\u786e\u505c\u6b62\uff0c\u90a3\u4e48\u4e3b\u65b9\u7a0b\u5c31\u4e25\u683c\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u3002\u8fd9\u5bf9\u5e94\u4e8e\u90a3\u4e9b\u72b6\u6001\u53d8\u91cf\u53ef\u4ee5\u8fde\u7eed\u53d8\u5316\u7684\u968f\u673a\u8fc7\u7a0b\uff0c\u4f8b\u5982\u5e03\u6717\u8fd0\u52a8\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u662f\u5bf9\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u7cbe\u786e\u63cf\u8ff0\u3002</p> </li> <li> <p>\u8df3\u8dc3\u8fc7\u7a0b (Jump Processes) \uff1a\u5982\u679c\u5c55\u5f00\u5728\u4e8c\u9636\u4e4b\u540e\u5e76\u4e0d\u505c\u6b62\uff0c\u90a3\u4e48\u6839\u636ePawula\u5b9a\u7406\uff0c\u5b83\u5fc5\u7136\u6709\u65e0\u7a77\u591a\u9879\u3002\u8fd9\u610f\u5473\u7740\u4efb\u4f55\u6709\u9650\u9636\u7684\u622a\u65ad\uff08\u4f8b\u5982\uff0c\u53ea\u4fdd\u7559\u5230\u4e8c\u9636\uff09\u90fd\u53ea\u80fd\u662f\u4e00\u4e2a\u8fd1\u4f3c\u3002\u8fd9\u5bf9\u5e94\u4e8e\u90a3\u4e9b\u5177\u6709\u5185\u7980\u79bb\u6563\u8df3\u8dc3\u7279\u6027\u7684\u8fc7\u7a0b\uff0c\u4f8b\u5982\u5316\u5b66\u53cd\u5e94\u4e2d\u7684\u5206\u5b50\u6570\u53d8\u5316\u6216\u79cd\u7fa4\u52a8\u529b\u5b66\u3002</p> </li> </ol> <p>\u56e0\u6b64\uff0c\u5bf9\u4e8e\u4efb\u4f55\u7531\u79bb\u6563\u4e8b\u4ef6\u9a71\u52a8\u7684\u771f\u5b9e\u7269\u7406\u7cfb\u7edf\uff08\u5982\u5316\u5b66\u53cd\u5e94\u7f51\u7edc\uff09\uff0c\u5c06\u5176\u7b80\u5316\u4e3a\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u672c\u8d28\u4e0a\u90fd\u662f\u4e00\u79cd\u8fd1\u4f3c\u3002\u8fd9\u79cd\u8fd1\u4f3c\u7684\u6709\u6548\u6027\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u6838\u5fc3\u7684\u7269\u7406\u5047\u8bbe\uff1a\u5355\u6b21\u8df3\u8dc3\u7684\u6b65\u957f \\(\\Delta n\\) \u76f8\u5bf9\u4e8e\u7cfb\u7edf\u7684\u5b8f\u89c2\u72b6\u6001\uff08\u5982\u603b\u7c92\u5b50\u6570 \\(n\\)\uff09\u975e\u5e38\u5c0f\u3002\u5f53\u7cfb\u7edf\u5c3a\u5ea6\u5f88\u5927\uff0c\u4e14\u8df3\u8dc3\u4e8b\u4ef6\u9891\u7e41\u53d1\u751f\u65f6\uff0c\u5927\u91cf\u5fae\u5c0f\u3001\u79bb\u6563\u7684\u8df3\u8dc3\u7684\u7d2f\u79ef\u6548\u5e94\uff0c\u5728\u5b8f\u89c2\u4e0a\u770b\u8d77\u6765\u5c31\u50cf\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u6269\u6563\u8fc7\u7a0b\u3002\u8fd9\u6b63\u662f\u6240\u8c13\u7684\u201c\u4f4e\u566a\u58f0\u6781\u9650\u201d\u6216\u201c\u7cfb\u7edf\u5927\u5c0f\u5c55\u5f00\u201d\uff08system size expansion\uff09\u7684\u7cbe\u9ad3\uff0c\u4e5f\u662f\u540e\u7eed\u5c06\u4e3b\u65b9\u7a0b\u4e0e\u6717\u4e4b\u4e07\u65b9\u7a0b\u8054\u7cfb\u8d77\u6765\u7684\u7406\u8bba\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#2","title":"2. \u8df3\u8dc3\u8fc7\u7a0b\u7684\u8def\u5f84\u79ef\u5206\u8868\u793a","text":"<p>\u4e0a\u4e00\u8282\u901a\u8fc7Kramers-Moyal\u5c55\u5f00\uff0c\u6210\u529f\u5c06\u4e3b\u65b9\u7a0b\u4ece\u4e00\u4e2a\u79bb\u6563\u7684\u5dee\u5206\u5f62\u5f0f\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u8fde\u7eed\u7684\u3001\u65e0\u9650\u9636\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u3002\u8fd9\u4e00\u6b65\u867d\u7136\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684\uff0c\u4f46\u5176\u771f\u6b63\u7684\u76ee\u7684\u662f\u4e3a\u6784\u5efa\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684\u7406\u8bba\u6846\u67b6\u2014\u2014\u8def\u5f84\u79ef\u5206\u2014\u2014\u94fa\u5e73\u9053\u8def\u3002\u8fd9\u8282\u8bfe\u7684\u76ee\u6807\uff0c\u4fbf\u662f\u5c06\u8fd9\u4e2a\u504f\u5fae\u5206\u65b9\u7a0b\u8f6c\u5316\u4e3a\u8def\u5f84\u79ef\u5206\u7684\u5f62\u5f0f\uff0c\u4ece\u800c\u63d0\u4f9b\u4e00\u79cd\u5168\u5c40\u7684\u3001\u57fa\u4e8e\u201c\u4f5c\u7528\u91cf\u201d\u7684\u52a8\u529b\u5b66\u89c6\u89d2\uff0c\u8fd9\u4e0e\u7b2c31\u8bb2\u548c\u7b2c32\u8bb2\u4e3a\u6717\u4e4b\u4e07\u65b9\u7a0b\u5efa\u7acb\u7684\u573a\u8bba\u6846\u67b6\u9065\u76f8\u547c\u5e94\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#21-tilden","title":"2.1 \u5f15\u5165\u54cd\u5e94\u573a \\(\\tilde{n}\\)","text":"<p>\u8f6c\u5316\u7684\u7b2c\u4e00\u6b65\uff0c\u662f\u901a\u8fc7\u4e00\u7cfb\u5217\u6570\u5b66\u6280\u5de7\uff0c\u5c06Kramers-Moyal\u5c55\u5f00\u8fd9\u4e2a\u504f\u5fae\u5206\u65b9\u7a0b\u91cd\u5199\u4e3a\u4e00\u4e2a\u79ef\u5206\u5f62\u5f0f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u6838\u5fc3\u662f\u5f15\u5165\u4e00\u4e2a\u8f85\u52a9\u7684\u54cd\u5e94\u573a (response field) \\(\\tilde{n}\\)\u3002</p> <p>\u9996\u5148\uff0c\u5229\u7528\u72c4\u62c9\u514b \\(\\delta\\) \u51fd\u6570\u7684\u6027\u8d28\uff0c\u5c06\u504f\u5fae\u5206\u65b9\u7a0b\u7684\u53f3\u4fa7\uff08\u4e00\u4e2a\u5173\u4e8e \\(n\\) \u7684\u51fd\u6570\uff09\u5199\u6210\u4e00\u4e2a\u79ef\u5206\u5f62\u5f0f\u3002\u8fd9\u662f\u4e00\u4e2a\u6052\u7b49\u53d8\u6362\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u5f15\u5165\u4e00\u4e2a\u79ef\u5206\u53d8\u91cf \\(m\\)\uff1a</p> \\[ \\partial_t p(n,t) = \\int dm\\ \\delta(m-n) \\sum_{\\mu=1}^{\\infty} \\frac{(-\\Delta n)^{\\mu}}{\\mu!} \\frac{\\partial^{\\mu}}{\\partial m^{\\mu}} [\\lambda(m) p(m,t)] \\] <p>\u63a5\u4e0b\u6765\uff0c\u5229\u7528 \\(\\delta\\) \u51fd\u6570\u7684\u5085\u91cc\u53f6\u79ef\u5206\u8868\u793a\uff0c\u8fd9\u662f\u5f15\u5165\u54cd\u5e94\u573a\u7684\u5173\u952e\u4e00\u6b65\uff1a</p> \\[ \\delta(m-n) = \\int \\frac{d\\tilde{n}}{2\\pi} e^{-i\\tilde{n}(n-m)} \\] <p>\u5c06\u6b64\u8868\u793a\u4ee3\u5165\uff0c\u4e3b\u65b9\u7a0b\u7684\u6f14\u5316\u88ab\u5199\u6210\u4e86\u4e00\u4e2a\u5728\u7269\u7406\u573a \\(m\\) \u548c\u65b0\u5f15\u5165\u7684\u54cd\u5e94\u573a \\(\\tilde{n}\\) \u4e0a\u7684\u53cc\u91cd\u79ef\u5206\uff1a</p> \\[ \\partial_t p(n,t) = \\int dm \\int \\frac{d\\tilde{n}}{2\\pi} e^{-i\\tilde{n}(n-m)} \\sum_{\\mu=1}^{\\infty} \\frac{(-\\Delta n)^{\\mu}}{\\mu!} \\frac{\\partial^{\\mu}}{\\partial m^{\\mu}} [\\lambda(m) p(m,t)] \\] <p>\u8fd9\u4e2a\u5f62\u5f0f\u7684\u4f18\u52bf\u5728\u4e8e\uff0c\u539f\u6765\u4f5c\u7528\u4e8e\u6982\u7387\u5bc6\u5ea6\u9879 \\(\\lambda(m)p(m,t)\\) \u7684\u5fae\u5206\u7b97\u7b26 \\(\\partial_m^\\mu\\) \u73b0\u5728\u4f4d\u4e8e\u4e00\u4e2a\u79ef\u5206\u5185\u90e8\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u901a\u8fc7\u5206\u90e8\u79ef\u5206 (integration by parts) \u5c06\u8fd9\u4e9b\u5bfc\u6570\u4ece\u590d\u6742\u7684\u6982\u7387\u5bc6\u5ea6\u9879\u4e0a\u8f6c\u79fb\u5f00\u3002\u5bf9 \\(m\\) \u8fdb\u884c \\(\\mu\\) \u6b21\u5206\u90e8\u79ef\u5206\uff0c\u6bcf\u6b21\u90fd\u4f1a\u5c06 \\(\\partial_m\\) \u4f5c\u7528\u5230\u6307\u6570\u9879 \\(e^{i\\tilde{n}m}\\) \u4e0a\uff0c\u5e76\u4ea7\u751f\u4e00\u4e2a\u56e0\u5b50 \\(i\\tilde{n}\\)\u3002\u91cd\u590d \\(\\mu\\) \u6b21\u540e\uff0c\u5f97\u5230\uff1a</p> \\[ \\partial_t p(n,t) = \\int dm\\ p(m,t)\\lambda(m) \\int \\frac{d\\tilde{n}}{2\\pi} e^{-i\\tilde{n}(n-m)} \\sum_{\\mu=1}^{\\infty} \\frac{(\\Delta n)^{\\mu}}{\\mu!} (i\\tilde{n})^{\\mu} \\] <p>\u901a\u8fc7\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u539f\u6765\u590d\u6742\u7684\u5fae\u5206\u7b97\u7b26\u88ab\u8f6c\u5316\u4e3a\u4e86\u5173\u4e8e\u54cd\u5e94\u573a \\(\\tilde{n}\\) \u7684\u7b80\u5355\u4ee3\u6570\u4e58\u79ef\u3002\u54cd\u5e94\u573a \\(\\tilde{n}\\) \u5728\u6b64\u626e\u6f14\u7684\u89d2\u8272\uff0c\u4e0e\u7b2c32\u8bb2\u7684J-D\u5f62\u5f0f\u4f53\u7cfb\u4e2d\u7684\u54cd\u5e94\u573a\u5b8c\u5168\u4e00\u81f4\uff0c\u5b83\u662f\u4e00\u4e2a\u4e0e\u4e3b\u72b6\u6001\u53d8\u91cf \\(n\\) \u5171\u8f6d\u7684\u573a\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#22","title":"2.2 \u91cd\u6c42\u548c\u4e0e\u8def\u5f84\u79ef\u5206\u7684\u6784\u5efa","text":"<p>\u89c2\u5bdf\u4e0a\u5f0f\u4e2d\u5173\u4e8e \\(\\mu\\) \u7684\u6c42\u548c\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u662f\u4e00\u4e2a\u5177\u6709\u660e\u786e\u6570\u5b66\u7ed3\u6784\u7684\u7ea7\u6570\uff1a</p> \\[ \\sum_{\\mu=1}^{\\infty} \\frac{(i\\tilde{n}\\Delta n)^{\\mu}}{\\mu!} = \\left( \\sum_{\\mu=0}^{\\infty} \\frac{(i\\tilde{n}\\Delta n)^{\\mu}}{\\mu!} \\right) - 1 = e^{i\\tilde{n}\\Delta n} - 1 \\] <p>\u8fd9\u4e2a\u7ea7\u6570\u6b63\u662f\u6307\u6570\u51fd\u6570 \\(e^{i\\tilde{n}\\Delta n}\\) \u7684\u6cf0\u52d2\u5c55\u5f00\u51cf\u53bb\u5176\u7b2c\u4e00\u9879\uff08\\(\\mu = 0\\) \u9879\uff09\u3002\u56e0\u6b64\uff0c\u6574\u4e2a\u65e0\u9650\u9636\u7684Kramers-Moyal\u5c55\u5f00\uff0c\u5728\u5f15\u5165\u54cd\u5e94\u573a\u540e\uff0c\u53ef\u4ee5\u88ab\u7cbe\u786e\u5730\u91cd\u6c42\u548c\u4e3a\u4e00\u4e2a\u7d27\u51d1\u7684\u6307\u6570\u5f62\u5f0f\u3002\u5c06\u6b64\u7ed3\u679c\u4ee3\u56de\uff0c\u4e3b\u65b9\u7a0b\u7684\u79ef\u5206\u5f62\u5f0f\u53d8\u4e3a\uff1a</p> \\[ \\partial_t p(n,t) = \\int dm\\ p(m,t)\\lambda(m) \\int \\frac{d\\tilde{n}}{2\\pi} e^{-i\\tilde{n}(n-m)} \\left( e^{i\\tilde{n}\\Delta n} - 1 \\right) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u662f\u539f\u59cb\u4e3b\u65b9\u7a0b\u7684\u4e00\u4e2a\u7cbe\u786e\u7684\u79ef\u5206\u91cd\u5199\uff0c\u5b83\u6784\u6210\u4e86\u6784\u5efa\u8def\u5f84\u79ef\u5206\u7684\u575a\u5b9e\u8d77\u70b9\u3002</p> <p>\u4e3a\u4e86\u6784\u5efa\u8def\u5f84\u79ef\u5206\uff0c\u9075\u5faa\u6807\u51c6\u7684\u201c\u65f6\u95f4\u5207\u7247\u201d\u65b9\u6cd5\u3002\u5728\u4e00\u4e2a\u5fae\u5c0f\u7684\u65f6\u95f4\u6b65\u957f \\(\\Delta t\\) \u5185\uff0c\u6982\u7387\u5206\u5e03\u7684\u6f14\u5316\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\uff1a</p> \\[ p(n,\\tau + \\Delta t) \\approx p(n,\\tau) + \\Delta t\\, \\partial_\\tau p(n,\\tau) \\] <p>\u5c06\u4e0a\u9762\u63a8\u5bfc\u7684 \\(\\partial_\\tau p\\) \u7684\u79ef\u5206\u5f62\u5f0f\u4ee3\u5165\uff0c\u5e76\u5c06 \\(1 + x\\Delta t\\) \u8fd1\u4f3c\u4e3a \\(e^{x\\Delta t}\\)\uff0c\u53ef\u4ee5\u5c06\u5355\u6b65\u6f14\u5316\u7b97\u5b50\u5199\u6210\u6307\u6570\u5f62\u5f0f\u3002\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u63cf\u8ff0\u4e86\u4ece\u65f6\u95f4 \\(\\tau\\) \u5230 \\(\\tau + \\Delta t\\) \u7684\u201c\u65e0\u7a77\u5c0f\u4f20\u64ad\u5b50\u201d\u3002\u901a\u8fc7\u5c06\u4ece\u521d\u59cb\u65f6\u95f4 \\(t_0\\) \u5230\u6700\u7ec8\u65f6\u95f4 \\(t\\) \u7684\u6574\u4e2a\u8fc7\u7a0b\u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u65e0\u7a77\u5c0f\u7684\u65f6\u95f4\u6b65\uff0c\u5e76\u5728\u6bcf\u4e00\u6b65\u4e4b\u95f4\u5bf9\u6240\u6709\u4e2d\u95f4\u72b6\u6001\u8fdb\u884c\u79ef\u5206\uff0c\u4fbf\u53ef\u4ee5\u5f97\u5230\u6761\u4ef6\u6982\u7387 \\(p(n,t|n_0,t_0)\\) \u7684\u8def\u5f84\u79ef\u5206\u8868\u793a\uff1a</p> \\[ p(n,t|n_0,t_0) = \\int_{n(t_0)=n_0}^{n(t)=n} \\mathcal{D}[n,\\tilde{n}] e^{iS[n,\\tilde{n}]} \\] <p>\u8fd9\u91cc\u7684\u79ef\u5206\u6d4b\u5ea6 \\(\\mathcal{D}[n,\\tilde{n}]\\) \u4ee3\u8868\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u5386\u53f2\u8def\u5f84 \\(n(\\tau)\\) \u548c\u6240\u6709\u53ef\u80fd\u7684\u54cd\u5e94\u573a\u5386\u53f2 \\(\\tilde{n}(\\tau)\\) \u8fdb\u884c\u6c42\u548c\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#23","title":"2.3 \u8df3\u8dc3\u8fc7\u7a0b\u7684\u4f5c\u7528\u91cf","text":"<p>\u4e0a\u8ff0\u8def\u5f84\u79ef\u5206\u7531\u4e00\u4e2a\u4f5c\u7528\u91cf (Action) \\(S\\) \u63a7\u5236\uff0c\u5176\u5bf9\u5e94\u7684\u62c9\u683c\u6717\u65e5\u91cf \\(\\mathcal{L}\\) \u4e3a\uff1a</p> \\[ S[n,\\tilde{n}] = \\int_{t_0}^{t} d\\tau\\ \\mathcal{L}[n,\\tilde{n}] = \\int_{t_0}^{t} d\\tau\\ \\left[ \\tilde{n} \\partial_\\tau n - i\\lambda(n) \\left(e^{i\\tilde{n}\\Delta n}-1\\right) \\right] \\] <p>\u4e3a\u4e86\u4e0e\u7edf\u8ba1\u7269\u7406\u4e2d\u5e38\u7528\u7684\u5b9e\u6570\u4f5c\u7528\u91cf\uff08\u5bf9\u5e94\u6982\u7387\u6743\u91cd \\(e^{-S'}\\)\uff09\u4fdd\u6301\u4e00\u81f4\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2aWick\u65cb\u8f6c\uff08\u4ee4 \\(\\tilde{n} \\to i\\tilde{n}'\\)\uff09\u5f97\u5230\uff1a</p> \\[ S'[n,i\\tilde{n}] = \\int_{t_0}^{t} d\\tau\\ \\left[ i\\tilde{n} \\partial_\\tau n - \\lambda(n) \\left(e^{i\\tilde{n}\\Delta n}-1\\right) \\right] \\] <p>\u8fd9\u4e2a\u4f5c\u7528\u91cf\u6982\u62ec\u4e86\u8df3\u8dc3\u8fc7\u7a0b\u7684\u5168\u90e8\u52a8\u529b\u5b66\u4fe1\u606f\uff1a</p> <p>\u52a8\u529b\u5b66\u9879 \\(i\\tilde{n} \\partial_\\tau n\\): \u8fd9\u662f\u4e00\u4e2a\u5728MSRJD\u7c7b\u578b\u7684\u4f5c\u7528\u91cf\u4e2d\u666e\u904d\u5b58\u5728\u7684\u201c\u52a8\u80fd\u201d\u6216\u201c\u8d1d\u91cc\u76f8\u4f4d\u201d\u9879\u3002\u5b83\u5728\u6570\u5b66\u4e0a\u5c06\u54cd\u5e94\u573a \\(\\tilde{n}\\) \u786e\u7acb\u4e3a\u53d8\u91cf \\(n\\) \u7684\u5171\u8f6d\u52a8\u91cf\uff0c\u786e\u4fdd\u4e86\u8def\u5f84\u79ef\u5206\u6b63\u786e\u5730\u63cf\u8ff0\u4e86\u65f6\u95f4\u7684\u8fde\u7eed\u6f14\u5316\u3002</p> <p>\u54c8\u5bc6\u987f\u91cf\u9879 \\(-\\lambda(n)(e^{i\\tilde{n}\\Delta n} - 1)\\): \u8fd9\u4e00\u9879\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u7cfb\u7edf\u7684\u201c\u54c8\u5bc6\u987f\u91cf\u201d \\(H(n, i\\tilde{n})\\)\uff0c\u5b83\u751f\u6210\u4e86\u7cfb\u7edf\u7684\u968f\u673a\u8df3\u8dc3\u3002\u5b83\u5305\u542b\u4e86\u6240\u6709\u5173\u4e8e\u7269\u7406\u8fc7\u7a0b\u7684\u5177\u4f53\u4fe1\u606f\uff1a</p> <p>\\(\\lambda(n)\\): \u8df3\u8dc3\u53d1\u751f\u7684\u901f\u7387\u3002</p> <p>\\(e^{i\\tilde{n}\\Delta n} - 1\\): \u63cf\u8ff0\u8df3\u8dc3\u4e8b\u4ef6\u672c\u8eab\u7684\u7b97\u7b26\uff0c\u5176\u4e2d \\(\\Delta n\\) \u662f\u8df3\u8dc3\u7684\u6b65\u957f\u3002</p> <p>\u81f3\u6b64\uff0c\u4e00\u4e2a\u4ece\u79bb\u6563\u4e3b\u65b9\u7a0b\u51fa\u53d1\uff0c\u7ecf\u7531Kramers-Moyal\u5c55\u5f00\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u8def\u5f84\u79ef\u5206\u8868\u793a\u88ab\u5b8c\u6574\u5730\u6784\u5efa\u4e86\u51fa\u6765\u3002\u8fd9\u4e2a\u6846\u67b6\u4e3a\u540e\u7eed\u5728\u201c\u4f4e\u566a\u58f0\u6781\u9650\u201d\u4e0b\u5206\u6790\u7cfb\u7edf\u884c\u4e3a\uff0c\u5e76\u5c06\u5176\u4e0e\u6717\u4e4b\u4e07\u65b9\u7a0b\u5efa\u7acb\u8054\u7cfb\u5960\u5b9a\u4e86\u57fa\u7840\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#3-fokker-planck","title":"3. \u4f4e\u566a\u58f0\u6781\u9650\u4e0eFokker-Planck\u4f5c\u7528\u91cf","text":"<p>\u4e0a\u4e00\u8282\u63a8\u5bfc\u51fa\u7684\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\uff0c\u867d\u7136\u5728\u6570\u5b66\u4e0a\u662f\u7cbe\u786e\u7684\uff0c\u4f46\u5176\u5305\u542b\u7684\u6307\u6570\u9879 \\(\\exp(i\\tilde{n}\\Delta n)\\) \u4f7f\u5f97\u76f4\u63a5\u8fdb\u884c\u89e3\u6790\u8ba1\u7b97\u53d8\u5f97\u5341\u5206\u56f0\u96be\u3002\u4e3a\u4e86\u4ece\u4e2d\u63d0\u53d6\u6709\u7528\u7684\u7269\u7406\u4fe1\u606f\uff0c\u9700\u8981\u5f15\u5165\u4e00\u4e2a\u5408\u7406\u7684\u8fd1\u4f3c\u3002\u8fd9\u4e2a\u8fd1\u4f3c\u7684\u7269\u7406\u57fa\u7840\uff0c\u6b63\u662f\u7b2c1\u8282\u672b\u5c3e\u63d0\u5230\u7684\u201c\u4f4e\u566a\u58f0\u6781\u9650\u201d\u3002</p> <p>\u201c\u4f4e\u566a\u58f0\u6781\u9650\u201d\u5728\u7269\u7406\u4e0a\u5bf9\u5e94\u4e8e\u7cfb\u7edf\u5c3a\u5bf8\u975e\u5e38\u5927\uff08\u5373\u5e73\u5747\u7c92\u5b50\u6570 \\(n \\gg 1\\)\uff09\u7684\u60c5\u666f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5355\u6b21\u8df3\u8dc3\u7684\u6b65\u957f \\(\\Delta n\\)\uff08\u901a\u5e38\u662f1\u62162\u8fd9\u6837\u7684\u5c0f\u6574\u6570\uff09\u76f8\u5bf9\u4e8e\u603b\u7c92\u5b50\u6570 \\(n\\) \u662f\u4e00\u4e2a\u5fae\u5c0f\u7684\u6270\u52a8\u3002\u8fd9\u4e2a\u7269\u7406\u56fe\u50cf\u4e3a\u5728\u6570\u5b66\u4e0a\u5bf9\u4f5c\u7528\u91cf\u8fdb\u884c\u7cfb\u7edf\u6027\u8fd1\u4f3c\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u4f9d\u636e\u3002\u8fd9\u8282\u8bfe\u7684\u76ee\u6807\uff0c\u5c31\u662f\u6267\u884c\u8fd9\u4e2a\u8fd1\u4f3c\uff0c\u5e76\u63ed\u793a\u79bb\u6563\u8df3\u8dc3\u8fc7\u7a0b\u5728\u5b8f\u89c2\u5c3a\u5ea6\u4e0b\u5982\u4f55\u81ea\u7136\u5730\u8fc7\u6e21\u5230\u4e00\u4e2a\u7531\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u6216\u6717\u4e4b\u4e07\u65b9\u7a0b\u63cf\u8ff0\u7684\u8fde\u7eed\u6269\u6563\u8fc7\u7a0b\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#31","title":"3.1 \u4f5c\u7528\u91cf\u7684\u5c55\u5f00","text":"<p>\u5728\u4f4e\u566a\u58f0\u6781\u9650\u4e0b\uff0c\u53ef\u4ee5\u5bf9\u4f5c\u7528\u91cf\u4e2d\u7684\u54c8\u5bc6\u987f\u91cf\u90e8\u5206 \\(H(n, i\\tilde{n}) = \\lambda(n)(e^{i\\tilde{n}\\Delta n} - 1)\\)\uff0c\u6309\u7167\u5c0f\u53c2\u6570 \\(\\Delta n\\) \u7684\u5e42\u6b21\u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c06\u6307\u6570\u9879 \\(e^{i\\tilde{n}\\Delta n}\\) \u5c55\u5f00\u81f3\u4e8c\u9636\uff1a</p> \\[ e^{i\\tilde{n}\\Delta n} \\approx 1 + (i\\tilde{n}\\Delta n) + \\frac{1}{2}(i\\tilde{n}\\Delta n)^2 + \\mathcal{O}((\\Delta n)^3) \\] <p>\u5c06\u8fd9\u4e2a\u8fd1\u4f3c\u4ee3\u5165\u54c8\u5bc6\u987f\u91cf\uff1a</p> \\[ \\lambda(n)\\left(e^{i\\tilde{n}\\Delta n} - 1\\right) \\approx \\lambda(n)\\left[ (i\\tilde{n}\\Delta n) + \\frac{1}{2}(i\\tilde{n})^2 (\\Delta n)^2 \\right] \\] <p>\u73b0\u5728\uff0c\u5c06\u8fd9\u4e2a\u5c55\u5f00\u540e\u7684\u54c8\u5bc6\u987f\u91cf\u4ee3\u56de\u5b8c\u6574\u7684\u62c9\u683c\u6717\u65e5\u91cf \\(\\mathcal{L}' = i\\tilde{n} \\partial_\\tau n - H(n, i\\tilde{n})\\) \u4e2d\uff1a</p> \\[ \\mathcal{L}' \\approx i\\tilde{n} \\partial_\\tau n - \\lambda(n)\\left[ i\\tilde{n}\\Delta n + \\frac{1}{2}(i\\tilde{n})^2 (\\Delta n)^2 \\right] \\] <p>\u5bf9\u5404\u9879\u91cd\u65b0\u7ec4\u5408\uff0c\u5c06\u4e0e \\(i\\tilde{n}\\) \u7ebf\u6027\u76f8\u5173\u7684\u9879\u548c\u4e8c\u6b21\u76f8\u5173\u7684\u9879\u5206\u5f00\uff1a</p> \\[ \\mathcal{L}' \\approx i\\tilde{n} \\left( \\partial_\\tau n - \\lambda(n) \\Delta n \\right) - \\frac{1}{2} \\lambda(n) (\\Delta n)^2 (i\\tilde{n})^2 \\] <p>\u5bf9\u8fd9\u4e2a\u62c9\u683c\u6717\u65e5\u91cf\u8fdb\u884c\u65f6\u95f4\u79ef\u5206\uff0c\u5c31\u5f97\u5230\u4e86\u8fd1\u4f3c\u540e\u7684\u798f\u514b-\u666e\u6717\u514b\u4f5c\u7528\u91cf\uff1a</p> \\[ S_{\\text{FP}}[n,i\\tilde{n}] \\approx \\int_{t_0}^{t} d\\tau\\ \\left[ i\\tilde{n} \\left( \\partial_\\tau n - \\lambda(n) \\Delta n \\right) - \\frac{1}{2} (i\\tilde{n})^2 \\lambda(n) (\\Delta n)^2 \\right] \\] <p>\u7269\u7406\u610f\u4e49\uff1a\u8fd9\u4e2a\u8fd1\u4f3c\u64cd\u4f5c\u7684\u610f\u4e49\u662f\u9769\u547d\u6027\u7684\u3002\u539f\u6765\u7684\u4f5c\u7528\u91cf\u5305\u542b\u4e86\u65e0\u7a77\u9636\u7684 \\(i\\tilde{n}\\) \u9879\uff08\u9690\u85cf\u5728\u6307\u6570\u51fd\u6570\u4e2d\uff09\uff0c\u5bf9\u5e94\u4e8eKramers-Moyal\u5c55\u5f00\u4e2d\u7684\u65e0\u7a77\u9636\u5bfc\u6570\u3002\u800c\u622a\u65ad\u5230\u4e8c\u9636\u540e\uff0c\u5f97\u5230\u7684\u4f5c\u7528\u91cf\u5728\u54cd\u5e94\u573a \\(i\\tilde{n}\\) \u4e2d\u662f\u4e8c\u6b21\u7684\uff08\u9ad8\u65af\u7684\uff09\u3002\u8fd9\u79cd\u5f62\u5f0f\u7684\u4f5c\u7528\u91cf\u5728\u968f\u673a\u573a\u8bba\u4e2d\u6781\u4e3a\u91cd\u8981\uff0c\u8fd9\u5c31\u662f\u4e4b\u524d\u4ecb\u7ecd\u8fc7\u591a\u6b21\u7684MSRJD\u4f5c\u7528\u91cf\uff0c\u5e76\u4e14\u4e0e\u4e00\u4e2a\u8fde\u7eed\u7684\u6717\u4e4b\u4e07\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u6709\u7740\u76f4\u63a5\u4e14\u6df1\u523b\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u8fd9\u5728\u7b2c32\u8bb2\u4e2d\u5df2\u6709\u8be6\u7ec6\u63a2\u8ba8\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#32-langevin","title":"3.2 \u4e0eLangevin\u65b9\u7a0b\u7684\u8054\u7cfb","text":"<p>\u4e00\u4e2a\u63cf\u8ff0\u8fde\u7eed\u968f\u673a\u53d8\u91cf \\(n(\\tau)\\) \u7684\u901a\u7528\u6717\u4e4b\u4e07\u65b9\u7a0b\u53ef\u4ee5\u5199\u4e3a\uff1a</p> \\[ \\partial_\\tau n = V(n) + \\sqrt{2D(n)}\\, \\eta(\\tau) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li> <p>\\(V(n)\\) \u662f\u786e\u5b9a\u6027\u7684\u6f02\u79fb (Drift) \u9879\u3002</p> </li> <li> <p>\\(D(n)\\) \u662f\u4f9d\u8d56\u4e8e\u72b6\u6001\u7684\u6269\u6563 (Diffusion) \u7cfb\u6570\u3002</p> </li> <li> <p>\\(\\eta(\\tau)\\) \u662f\u6807\u51c6\u9ad8\u65af\u767d\u566a\u58f0\uff0c\u6ee1\u8db3 \\(\\langle \\eta(\\tau) \\rangle = 0\\) \u548c \\(\\langle \\eta(\\tau)\\eta(\\tau') \\rangle = \\delta(\\tau - \\tau')\\)\u3002</p> </li> </ul> <p>\u6b63\u5982\u5728\u7b2c32\u8bb2\u4e2d\u5efa\u7acb\u7684\uff0c\u8fd9\u6837\u4e00\u4e2a\u6717\u4e4b\u4e07\u65b9\u7a0b\u6240\u5bf9\u5e94\u7684MSRJD\u4f5c\u7528\u91cf\u5177\u6709\u5982\u4e0b\u901a\u7528\u5f62\u5f0f\uff1a</p> \\[ S_{\\text{Langevin}}[n,i\\tilde{n}] = \\int d\\tau\\ \\left[ i\\tilde{n} \\left( \\partial_\\tau n - V(n) \\right) - D(n) (i\\tilde{n})^2 \\right] \\] <p>\u73b0\u5728\uff0c\u53ea\u9700\u5c06\u4e0a\u4e00\u5c0f\u8282\u63a8\u5bfc\u51fa\u7684\u798f\u514b-\u666e\u6717\u514b\u4f5c\u7528\u91cf \\(S_{\\text{FP}}\\) \u4e0e\u8fd9\u4e2a\u901a\u7528\u5f62\u5f0f\u8fdb\u884c\u9010\u9879\u6bd4\u8f83\uff1a</p> \\[ \\begin{aligned} S_{\\text{FP}} &amp;= \\int d\\tau\\ \\left[ i\\tilde{n} \\left( \\partial_\\tau n - \\underline{\\lambda(n) \\Delta n} \\right) - \\underline{\\frac{1}{2} \\lambda(n) (\\Delta n)^2} (i\\tilde{n})^2 \\right] \\\\ S_{\\text{Langevin}} &amp;= \\int d\\tau\\ \\left[ i\\tilde{n} \\left( \\partial_\\tau n - \\underline{V(n)} \\right) - \\underline{D(n)} (i\\tilde{n})^2 \\right] \\end{aligned} \\] <p>\u901a\u8fc7\u6bd4\u8f83\u4e0b\u5212\u7ebf\u6807\u51fa\u7684\u90e8\u5206\uff0c\u53ef\u4ee5\u7acb\u523b\u8bc6\u522b\u51fa\u7b49\u6548\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e2d\u7684\u6f02\u79fb\u9879 \\(V(n)\\) \u548c\u6269\u6563\u9879 \\(D(n)\\)\uff1a</p> <p>\u6f02\u79fb (Drift): \\(V(n) = \\lambda(n)\\Delta n\\)</p> <p>\u6269\u6563 (Diffusion): \\(D(n) = \\frac{1}{2}\\lambda(n)(\\Delta n)^2\\)</p> <p>\u8fd9\u4e00\u7ed3\u679c\u6781\u4e3a\u91cd\u8981\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ece\u5fae\u89c2\u8df3\u8dc3\u8fc7\u7a0b\u5230\u5b8f\u89c2\u8fde\u7eed\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u7684\u7cfb\u7edf\u6027\u63a8\u5bfc\u65b9\u6cd5\u3002\u5b83\u6e05\u6670\u5730\u63ed\u793a\u4e86\uff1a</p> <p>\u5b8f\u89c2\u7684\u786e\u5b9a\u6027\u6f02\u79fb \\(V(n)\\)\uff0c\u6e90\u4e8e\u5fae\u89c2\u8df3\u8dc3\u7684\u5e73\u5747\u6548\u5e94\uff08\u901f\u7387 \\(\\lambda(n)\\) \u4e58\u4ee5\u6b65\u957f \\(\\Delta n\\)\uff09\u3002</p> <p>\u5b8f\u89c2\u7684\u968f\u673a\u6269\u6563 \\(D(n)\\)\uff0c\u6e90\u4e8e\u5fae\u89c2\u8df3\u8dc3\u7684\u4e8c\u9636\u77e9\u6216\u6da8\u843d\uff08\u4e0e\u6b65\u957f\u7684\u5e73\u65b9 \\((\\Delta n)^2\\) \u6210\u6b63\u6bd4\uff09\u3002</p> <p>\u8fd9\u5957\u65b9\u6cd5\u8bba\u6784\u6210\u4e86\u8fde\u63a5\u79bb\u6563\u4e3b\u65b9\u7a0b\u4e16\u754c\u548c\u8fde\u7eed\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e16\u754c\u7684\u575a\u5b9e\u6865\u6881\uff0c\u4f7f\u5f97\u80fd\u591f\u8fd0\u7528\u8fde\u7eed\u573a\u8bba\u7684\u5f3a\u5927\u5de5\u5177\u6765\u5206\u6790\u672c\u8d28\u4e0a\u7531\u79bb\u6563\u4e8b\u4ef6\u9a71\u52a8\u7684\u590d\u6742\u7cfb\u7edf\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#4","title":"4. \u518d\u63a2\u6e6e\u706d\u8fc7\u7a0b\u4e0e\u968f\u673a\u903b\u8f91\u65af\u8482\u589e\u957f","text":"<p>\u5728\u7b2c36\u8bb2\u4e2d\uff0c\u53cc\u5206\u5b50\u6e6e\u706d\u53cd\u5e94 \\(A+A \\to \\emptyset\\) \u88ab\u7528\u4f5c\u5c55\u793a\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\uff08CSP\uff09\u548c\u201c\u865a\u566a\u58f0\u201d\u6982\u5ff5\u7684\u8303\u4f8b\u3002\u8fd9\u8282\u8bfe\u5c06\u518d\u6b21\u5ba1\u89c6\u8fd9\u4e2a\u6a21\u578b\uff0c\u4f46\u8fd9\u4e00\u6b21\u7684\u76ee\u7684\u662f\u5c55\u793aKramers-Moyal\u8def\u5f84\u79ef\u5206\uff08KMPI\uff09\u5982\u4f55\u901a\u8fc7\u4e00\u79cd\u66f4\u76f4\u63a5\u7684\u3001\u7269\u7406\u4e0a\u66f4\u76f4\u89c2\u7684\u8def\u5f84\uff0c\u5728\u4f4e\u566a\u58f0\u6781\u9650\u4e0b\u5bfc\u51fa\u4e00\u4e2a\u6807\u51c6\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u3002\u8fd9\u79cd\u5bf9\u6bd4\u5c06\u6df1\u523b\u5730\u63ed\u793a\u4e24\u79cd\u7406\u8bba\u6846\u67b6\u7684\u5f02\u540c\u3002\u968f\u540e\uff0c\u4e3a\u4e86\u5c55\u793a\u8be5\u65b9\u6cd5\u7684\u5e7f\u6cdb\u5e94\u7528\uff0c\u5c06\u628a\u4ee3\u7801\u5b9e\u8df5\u90e8\u5206\u66ff\u6362\u4e3a\u4e00\u4e2a\u5168\u65b0\u7684\u6a21\u578b\u2014\u2014\u968f\u673a\u903b\u8f91\u65af\u8482\u589e\u957f\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#41-aa-to-emptyset","title":"4.1 \u4e24\u79cd\u8def\u5f84\u79ef\u5206\u7684\u5bf9\u6bd4\uff1a\u6e6e\u706d\u8fc7\u7a0b \\(A+A \\to \\emptyset\\)","text":"<p>\u7b80\u8981\u56de\u987e\uff0c\u5bf9\u4e8e\u53cd\u5e94 \\(A+A \\to \\emptyset\\)\uff0c\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7\u4e24\u79cd\u4e0d\u540c\u7684\u8def\u5f84\u63a8\u5bfc\u4e86\u5176\u573a\u8bba\u63cf\u8ff0\uff1a</p> <ol> <li> <p>\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206 (CSP) \uff1a</p> <p>\u901a\u8fc7\u7b97\u7b26\u4ee3\u6570\u65b9\u6cd5\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u7cbe\u786e\u7684\u4f5c\u7528\u91cf\uff0c\u5b83\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u5305\u542b\u865a\u566a\u58f0\u7684\u7b49\u6548\u6717\u4e4b\u4e07\u65b9\u7a0b\u3002\u4f5c\u7528\u91cf\u4e2d\u7684\u566a\u58f0\u9879\u4e3a \\(+(\u03bb/2)x\u00b2(iq)\u00b2\\)\uff0c\u8fd9\u4e2a\u6b63\u53f7\u662f\u865a\u566a\u58f0\u7684\u6765\u6e90\uff0c\u5b83\u4f7f\u5f97\u8fde\u7eed\u573a\u8bba\u80fd\u591f\u7cbe\u786e\u91cd\u73b0\u79bb\u6563\u8df3\u8dc3\u7684\u6cca\u677e\u7edf\u8ba1\u7279\u6027\u3002</p> </li> <li> <p>Kramers-Moyal\u8def\u5f84\u79ef\u5206 (KMPI) \uff1a</p> <p>\u901a\u8fc7\u5bf9\u4e3b\u65b9\u7a0b\u8fdb\u884cK-M\u5c55\u5f00\u5e76\u53d6\u4f4e\u566a\u58f0\u6781\u9650\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u8fd1\u4f3c\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b \\(\\partial_t n = -\u03bbn(n-1) + \\sqrt{4\u03bbn(n-1)}\u03b7(t)\\)\u3002\u5176\u5bf9\u5e94\u7684MSRJD\u4f5c\u7528\u91cf\u4e2d\u7684\u566a\u58f0\u9879\u4e3a \\(-D(n)(i\\tilde{n})^2 = -2\u03bbn(n-1)(i\\tilde{n})^2\\)\u3002\u8fd9\u4e2a\u8d1f\u53f7\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u6807\u51c6\u7684\u5b9e\u6570\u566a\u58f0\u3002</p> </li> </ol> <p>\u6838\u5fc3\u533a\u522b\u4e0e\u8054\u7cfb\uff1a</p> <p>CSP\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7cbe\u786e\u4f46\u62bd\u8c61\u7684\u6620\u5c04\uff0c\u5176\u4ee3\u4ef7\u662f\u5f15\u5165\u4e86\u975e\u7269\u7406\u7684\u201c\u865a\u566a\u58f0\u201d\u3002\u5b83\u5728\u5f62\u5f0f\u4e0a\u66f4\u4f18\u96c5\uff0c\u662f\u8fdb\u884c\u4e25\u683c\u573a\u8bba\u5206\u6790\uff08\u5982\u91cd\u6574\u5316\u7fa4\uff09\u7684\u8d77\u70b9\u3002</p> <p>KMPI\u7684\u4f4e\u566a\u58f0\u6781\u9650\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8fd1\u4f3c\u4f46\u76f4\u89c2\u7684\u6620\u5c04\uff0c\u5b83\u76f4\u63a5\u901a\u5411\u4e86\u7269\u7406\u5b66\u5bb6\u6240\u719f\u6089\u7684\u3001\u63cf\u8ff0\u771f\u5b9e\u6da8\u843d\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\uff0c\u5e76\u6e05\u6670\u5730\u5c06\u6f02\u79fb\u548c\u6269\u6563\u4e0e\u5fae\u89c2\u8fc7\u7a0b\u8054\u7cfb\u8d77\u6765\u3002</p> <p>\u8fd9\u4e24\u79cd\u65b9\u6cd5\u6b8a\u9014\u540c\u5f52\uff0c\u4ece\u4e0d\u540c\u4fa7\u9762\u63cf\u8ff0\u4e86\u540c\u4e00\u4e2a\u7269\u7406\u7cfb\u7edf\u7684\u884c\u4e3a\uff0c\u4f53\u73b0\u4e86\u7406\u8bba\u7269\u7406\u6846\u67b6\u7684\u4e30\u5bcc\u6027\u548c\u5185\u5728\u4e00\u81f4\u6027\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#42","title":"4.2 \u5e94\u7528\u5b9e\u4f8b\uff1a\u968f\u673a\u903b\u8f91\u65af\u8482\u589e\u957f","text":"<p>\u73b0\u5728\uff0c\u5c06KMPI\u7684\u914d\u65b9\u5e94\u7528\u4e8e\u4e00\u4e2a\u5728\u751f\u6001\u5b66\u548c\u4eba\u53e3\u52a8\u529b\u5b66\u4e2d\u6781\u4e3a\u91cd\u8981\u7684\u6a21\u578b\uff1a\u903b\u8f91\u65af\u8482\u589e\u957f\u3002\u8be5\u6a21\u578b\u5305\u542b\u4e24\u79cd\u57fa\u672c\u53cd\u5e94\uff1a</p> <ol> <li> <p>\u7e41\u6b96 (Birth): \\(A \\xrightarrow{\\mu} 2A\\) (\u4e00\u4e2a\u751f\u7269\u4f53\u4ee5\u901f\u7387 \\(\\mu\\) \u5206\u88c2\u6210\u4e24\u4e2a)</p> </li> <li> <p>\u7ade\u4e89/\u6b7b\u4ea1 (Competition/Death): \\(A+A \\xrightarrow{\\lambda/2} A\\) (\u4e24\u4e2a\u751f\u7269\u4f53\u7ade\u4e89\u8d44\u6e90\uff0c\u5bfc\u81f4\u5176\u4e2d\u4e00\u4e2a\u6b7b\u4ea1\uff0c\u901f\u7387\u4e3a \\(\\lambda/2\\))</p> </li> </ol> <p>\u8fd9\u4e2a\u6a21\u578b\u63cf\u8ff0\u4e86\u79cd\u7fa4\u5728\u8d44\u6e90\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u7684\u589e\u957f\u8fc7\u7a0b\u3002</p> <p>1. \u5b9a\u4e49\u5fae\u89c2\u4e8b\u4ef6:</p> <p>\u7e41\u6b96: \\(\\Delta n = +1\\), \u901f\u7387 \\(\\lambda_1(n) = \\mu n\\)\u3002</p> <p>\u7ade\u4e89: \\(\\Delta n = -1\\), \u901f\u7387 \\(\\lambda_2(n) = (\\lambda/2)n(n-1)\\)\u3002</p> <p>2. \u8ba1\u7b97\u603b\u6f02\u79fb\u4e0e\u6269\u6563:</p> <p>\u7531\u4e8e\u4e24\u4e2a\u8fc7\u7a0b\u72ec\u7acb\u53d1\u751f\uff0c\u603b\u7684\u6f02\u79fb \\(V(n)\\) \u548c\u6269\u6563 \\(D(n)\\) \u662f\u4e24\u4e2a\u8fc7\u7a0b\u8d21\u732e\u7684\u548c\uff1a</p> <p>\u603b\u6f02\u79fb :</p> <p>$$ V(n) = V_1(n) + V_2(n) = (\\mu n)(+1) + \\left(\\frac{\\lambda}{2}n(n-1)\\right)(-1)= \\mu n - \\frac{\\lambda}{2}n(n-1) $$ \u603b\u6269\u6563 : $$ D(n) = D_1(n) + D_2(n) = \\frac{1}{2}(\\mu n)(+1)^2 + \\frac{1}{2}\\left(\\frac{\\lambda}{2}n(n-1)\\right)(-1)^2 = \\frac{1}{2}\\mu n + \\frac{1}{4}\\lambda n(n-1) $$ 3. \u6784\u5efaLangevin\u65b9\u7a0b: \u4ee3\u5165 \\(\\partial_t n = V(n) + \\sqrt{2D(n)}\u03b7(t)\\)\uff0c\u5f97\u5230\u968f\u673a\u903b\u8f91\u65af\u8482\u589e\u957f\u7684Langevin\u65b9\u7a0b\uff1a $$ \\partial_t n = \\left( \\mu n - \\frac{\\lambda}{2}n(n-1) \\right) + \\sqrt{\\mu n + \\frac{\\lambda}{2}n(n-1)}\\, \\eta(t) $$ \u5728 \\(n \\gg 1\\) \u7684\u8fd1\u4f3c\u4e0b\uff0c\u65b9\u7a0b\u7b80\u5316\u4e3a\uff1a $$ \\partial_t n = \\mu n \\left(1 - \\frac{n}{K}\\right) + \\sqrt{\\left(\\mu + \\frac{\\lambda}{2}n\\right)n}\\, \\eta(t) $$ \u5176\u4e2d \\(K = 2\\mu/\\lambda\\) \u662f\u8457\u540d\u7684\u73af\u5883\u627f\u8f7d\u91cf (Carrying Capacity) \u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#43-python","title":"4.3 Python\u6a21\u62df\uff1a\u4eba\u53e3\u6da8\u843d\u4e0e\u73af\u5883\u627f\u8f7d\u91cf","text":"<p>\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u6a21\u62df\u8fd9\u4e2a\u968f\u673a\u903b\u8f91\u65af\u8482\u589e\u957f\u8fc7\u7a0b\uff0c\u5e76\u4e0e\u786e\u5b9a\u6027\u7684\u903b\u8f91\u65af\u8482\u65b9\u7a0b\u89e3\u8fdb\u884c\u5bf9\u6bd4\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\n# --- 1. Parameter Settings ---\nn0 = 10.0         # Initial population size\nmu = 0.5          # Birth rate\nlambda_rate = 0.01 # Competition rate\nT_max = 100.0     # Total simulation time\ndt = 0.01         # Time step\nn_steps = int(T_max / dt)\nn_traj = 5        # Number of stochastic trajectories\n\n# Carrying capacity K\nK = 2 * mu / lambda_rate\n\n# --- 2. Time Axis ---\nt = np.linspace(0, T_max, n_steps + 1)\n\n# --- 3. Simulate Stochastic Trajectories ---\nplt.figure(figsize=(12, 7))\n# Set black background\nplt.style.use('dark_background')\n\nfor j in range(n_traj):\n    n_stochastic = np.zeros(n_steps + 1)\n    n_stochastic[0] = n0\n    for i in range(n_steps):\n        n = n_stochastic[i]\n        if n &lt;= 0:\n            n_stochastic[i+1:] = 0\n            break\n\n        # Drift term V(n)\n        drift = mu * n - (lambda_rate / 2) * n * (n - 1)\n\n        # Diffusion term D(n)\n        diffusion_term_squared = mu * n + (lambda_rate / 2) * n * (n - 1)\n\n        # Noise amplitude sqrt(2D(n))\n        noise_amp = np.sqrt(diffusion_term_squared) if diffusion_term_squared &gt; 0 else 0\n\n        # Euler-Maruyama step\n        noise = np.random.normal(0, 1)\n        n_stochastic[i+1] = n + drift * dt + noise_amp * np.sqrt(dt) * noise\n\n    plt.plot(t, n_stochastic, lw=1.5, alpha=0.8, label=f'Stochastic Trajectory {j+1}')\n\n# --- 4. Calculate Deterministic (Mean Field) Solution ---\n# Solution to dn/dt = \u03bcn(1 - n/K)\nn_deterministic = K / (1 + (K/n0 - 1) * np.exp(-mu * t))\nplt.plot(t, n_deterministic, 'r-', lw=2.5, label='Deterministic Logistic Eq.')\n\n# --- 5. Plotting ---\nplt.axhline(K, color='cyan', linestyle=':', lw=2, label=f'Carrying Capacity K = {K:.0f}')\nplt.xlabel('Time', fontsize=14)\nplt.ylabel('Population Size (n)', fontsize=14)\nplt.title('Stochastic vs. Deterministic Logistic Growth', fontsize=16)\nplt.legend()\nplt.grid(True, linestyle='--', alpha=0.5)\nplt.ylim(bottom=0)\nplt.xlim(left=0)\nplt.savefig('LogisticGrowth.png')\nplt.show()\n</code></pre> </p> <p>\u786e\u5b9a\u6027\u903b\u8f91\u65af\u8482\u66f2\u7ebf\uff08\u7ea2\u8272\u5b9e\u7ebf\uff09\uff1a\u8fd9\u6761\u7ecf\u5178\u7684S\u578b\u66f2\u7ebf\u662f\u5e73\u5747\u573a\u65b9\u7a0b \\(\\frac{dn}{dt} = \\mu n\\left(1 - \\frac{n}{K}\\right)\\) \u7684\u89e3\u3002\u5b83\u63cf\u8ff0\u4e86\u4e00\u4e2a\u79cd\u7fa4\u4ece\u521d\u59cb\u6570\u91cf\u5e73\u6ed1\u589e\u957f\uff0c\u5e76\u6700\u7ec8\u9971\u548c\u4e8e\u73af\u5883\u627f\u8f7d\u91cf \\(K\\) \u7684\u7406\u60f3\u8fc7\u7a0b\u3002</p> <p>\u73af\u5883\u627f\u8f7d\u91cf\uff08\u9752\u8272\u865a\u7ebf\uff09\uff1a\\(K\\) \u4ee3\u8868\u4e86\u5728\u7ed9\u5b9a\u8d44\u6e90\u4e0b\uff0c\u73af\u5883\u80fd\u7a33\u5b9a\u652f\u6301\u7684\u6700\u5927\u79cd\u7fa4\u89c4\u6a21\u3002</p> <p>\u968f\u673a\u8f68\u8ff9\uff1a\u8fd9\u4e9b\u66f2\u7ebf\u5c55\u793a\u4e86\u6709\u9650\u79cd\u7fa4\u7684\u771f\u5b9e\u52a8\u6001\u3002\u79cd\u7fa4\u6570\u91cf\u5e76\u4e0d\u4f1a\u7a33\u5b9a\u5728 \\(K\\) \u503c\u4e0a\uff0c\u800c\u662f\u5728\u5176\u5468\u56f4\u6c38\u4e0d\u505c\u6b47\u5730\u6da8\u843d\u3002\u8fd9\u79cd\u6e90\u4e8e\u4e2a\u4f53\u51fa\u751f\u548c\u6b7b\u4ea1\u4e8b\u4ef6\u79bb\u6563\u6027\u7684\u6da8\u843d\uff0c\u88ab\u79f0\u4e3a\u201c\u4eba\u53e3\u566a\u58f0\uff08demographic noise\uff09\u201d\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u6da8\u843d\u751a\u81f3\u53ef\u80fd\u5bfc\u81f4\u79cd\u7fa4\u610f\u5916\u5730\u706d\u7edd\uff0c\u5373\u4f7f \\(K\\) \u503c\u5f88\u9ad8\u3002</p> <p>\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86 KMPI \u5230 Langevin \u65b9\u7a0b\u7684\u63a8\u5bfc\u201c\u914d\u65b9\u201d\u7684\u901a\u7528\u6027\uff0c\u5b83\u4e0d\u4ec5\u9002\u7528\u4e8e\u7269\u7406\u5316\u5b66\u4e2d\u7684\u6e6e\u706d\u8fc7\u7a0b\uff0c\u540c\u6837\u9002\u7528\u4e8e\u751f\u6001\u5b66\u4e2d\u7684\u79cd\u7fa4\u52a8\u6001\uff0c\u4ee5\u53ca\u6da8\u843d\u5728\u5927\u81ea\u7136\u4e2d\u7684\u666e\u904d\u6027\u548c\u91cd\u8981\u6027\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#5-ii","title":"5. \u5e94\u7528II\uff1a\u518d\u63a2\u6709\u5411\u6e17\u6d41\u2014\u2014\u4ece\u683c\u5b50\u5230\u573a\u7684\u89c6\u89d2","text":"<p>\u5728\u7b2c34\u8bb2\u4e2d\uff0c\u6709\u5411\u6e17\u6d41\uff08DP\uff09\u6a21\u578b\u88ab\u4f5c\u4e3a\u975e\u5e73\u8861\u76f8\u53d8\u7684\u8303\u5f0f\u5f15\u5165\uff0c\u5176\u76f8\u53d8\u884c\u4e3a\u901a\u8fc7\u5e73\u5747\u573a\u7406\u8bba\u5f97\u5230\u4e86\u521d\u6b65\u7684\u9610\u91ca\u3002\u8fd9\u8282\u8bfe\u5c06\u91cd\u8fd4DP\u6a21\u578b\uff0c\u4f46\u89c6\u89d2\u5df2\u622a\u7136\u4e0d\u540c\u3002\u8fd9\u91cc\u7684\u76ee\u6807\u4e0d\u518d\u662f\u4ecb\u7ecdDP\u662f\u4ec0\u4e48\uff0c\u800c\u662f\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u201c\u8bd5\u91d1\u77f3\u201d\uff0c\u6765\u68c0\u9a8c\u5728\u7b2c36\u8bb2\u548c\u7b2c37\u8bb2\u4e2d\u53d1\u5c55\u7684\u5f3a\u5927\u968f\u673a\u573a\u8bba\u5de5\u5177\u2014\u2014\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\uff08CSP\uff09\u4e0eKramers-Moyal\u8def\u5f84\u79ef\u5206\uff08KMPI\uff09\u2014\u2014\u7684\u4e00\u81f4\u6027\u3002</p> <p>\u8fd9\u5c0f\u8282\u4eceDP\u7684\u5fae\u89c2\u53cd\u5e94\u89c4\u5219\u51fa\u53d1\uff0c\u901a\u8fc7KMPI\u7684\u7cfb\u7edf\u6027\u201c\u914d\u65b9\u201d\uff0c\u63a8\u5bfc\u51fa\u4e00\u4e2a\u5305\u542b\u6da8\u843d\u6548\u5e94\u7684\u5b8f\u89c2\u968f\u673a\u52a8\u529b\u5b66\u65b9\u7a0b\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#51-0langevin","title":"5.1 \u4ece\u5fae\u89c2\u89c4\u5219\u52300\u7ef4Langevin\u65b9\u7a0b","text":"<p>\u9996\u5148\uff0c\u7b80\u8981\u56de\u987e\u4eceDP\u7684\u5fae\u89c2\u53cd\u5e94\u89c4\u5219\u5230\u5176\u5728\u201c0\u7ef4\u201d\uff08\u5373\u5145\u5206\u6df7\u5408\uff0c\u65e0\u7a7a\u95f4\u7ef4\u5ea6\uff09\u7cfb\u7edf\u4e2d\u7684Langevin\u65b9\u7a0b\u7684\u63a8\u5bfc\u8fc7\u7a0b\u3002\u6839\u636e\u8bfe\u7a0b\u677f\u4e66\uff0cDP\u6a21\u578b\u7531\u589e\u6b96\u3001\u6b7b\u4ea1\u548c\u51dd\u805a\u4e09\u79cd\u53cd\u5e94\u6784\u6210\u3002\u901a\u8fc7KMPI\u6846\u67b6\u548c\u4f4e\u566a\u58f0\u5c55\u5f00\uff0c\u53ef\u4ee5\u5f97\u5230\u5176\u6f02\u79fb\u9879\\(V(n)\\)\u4e0e\u6269\u6563\u9879\\(D(n)\\)\uff1a</p> <ul> <li> <p>\u6f02\u79fb\u9879: \\(V(n) = (\\mu-\\lambda)n - \\gamma n(n-1)\\)</p> </li> <li> <p>\u6269\u6563\u9879: \\(D(n) = \\frac{1}{2} \\left[ (\\mu+\\lambda)n + \\gamma n(n-1) \\right]\\)</p> </li> </ul> <p>\u8fd9\u5bf9\u5e94\u4e8e\u63cf\u8ff0\u603b\u7c92\u5b50\u6570\\(n(t)\\)\u968f\u65f6\u95f4\u6f14\u5316\u76840\u7ef4Langevin\u65b9\u7a0b\uff1a $$ \\frac{d n}{d t} = V(n) + \\sqrt{2D(n)}\\, \\eta(t) $$ \u8fd9\u4e2a\u65b9\u7a0b\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5b64\u7acb\u70b9\u4e0a\u7684\u7c92\u5b50\u6570\u6da8\u843d\uff0c\u4f46\u672a\u80fd\u4f53\u73b0\u201c\u6e17\u6d41\u201d\u6240\u8574\u542b\u7684\u7a7a\u95f4\u4f20\u64ad\u7279\u6027\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#52-021spde","title":"5.2 \u4ece0\u7ef4\u5230(2+1)\u7ef4\uff1a\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\uff08SPDE\uff09","text":"<p>\u4e3a\u4e86\u63cf\u8ff0\u4e00\u4e2a\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u6f14\u5316\u7684\u771f\u5b9e\u7269\u7406\u7cfb\u7edf\uff0c\u9700\u8981\u5c06\u4e0a\u8ff0\u65b9\u7a0b\u63a8\u5e7f\u4e3a\u4e00\u4e2a\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\uff08SPDE\uff09\uff0c\u5176\u4e2d\u7c92\u5b50\u6570\\(n\\)\u53d8\u4e3a\u4e00\u4e2a\u8fde\u7eed\u7684\u5bc6\u5ea6\u573a\\(n(x, y, t)\\)\u3002\u4e3a\u6b64\uff0c\u9700\u8981\u52a0\u5165\u4e24\u4e2a\u5173\u952e\u7684\u7a7a\u95f4\u9879\uff1a</p> <ol> <li> <p>\u7a7a\u95f4\u6269\u6563 (Spatial Diffusion) \uff1a\u7c92\u5b50\u4f1a\u81ea\u53d1\u5730\u4ece\u9ad8\u5bc6\u5ea6\u533a\u57df\u6269\u6563\u5230\u4f4e\u5bc6\u5ea6\u533a\u57df\u3002\u8fd9\u4e00\u8fc7\u7a0b\u7531\u4e00\u4e2a\u62c9\u666e\u62c9\u65af\u9879 \\(D_{\\text{space}} \\nabla^2 n\\) \u6765\u63cf\u8ff0\uff0c\u5176\u4e2d\\(D_{\\text{space}}\\)\u662f\u7a7a\u95f4\u6269\u6563\u7cfb\u6570\u3002</p> </li> <li> <p>\u5b9a\u5411\u4f20\u64ad (Advection) \uff1a\u4e3a\u4e86\u4f53\u73b0\u201c\u6709\u5411\u201d\u6e17\u6d41\u7684\u672c\u8d28\u2014\u2014\u5373\u6d3b\u6027\u5728\u4e00\u4e2a\u4f18\u9009\u65b9\u5411\uff08\u901a\u5e38\u88ab\u89c6\u4e3a\u201c\u65f6\u95f4\u201d\uff09\u4e0a\u7684\u4e0d\u53ef\u9006\u4f20\u64ad\u2014\u2014\u5f15\u5165\u4e00\u4e2a\u5e73\u6d41\u9879 \\(-v_y \\frac{\\partial n}{\\partial y}\\) \u3002\u8fd9\u76f8\u5f53\u4e8e\u65bd\u52a0\u4e86\u4e00\u80a1\u6052\u5b9a\u7684\u201c\u98ce\u201d\uff0c\u5f3a\u5236\u6574\u4e2a\u5bc6\u5ea6\u573a\u4ee5\u901f\u5ea6\\(v_y\\)\u6cbf\u7740\\(y\\)\u8f74\u8d1f\u65b9\u5411\uff08\u5373\u4ece\u4e0a\u5230\u4e0b\uff09\u6d41\u52a8\u3002</p> </li> </ol> <p>\u5c06\u8fd9\u4e9b\u9879\u7ec4\u5408\u8d77\u6765\uff0c\u5c31\u5f97\u5230\u4e86\u63cf\u8ff0(2+1)\u7ef4\uff082\u4e2a\u7a7a\u95f4\u7ef4\u5ea6+1\u4e2a\u65f6\u95f4\u7ef4\u5ea6\uff09\u6709\u5411\u6e17\u6d41\u7684\u5b8c\u6574\u573a\u65b9\u7a0b\uff1a</p> \\[ \\frac{\\partial n}{\\partial t} = \\underbrace{V(n)}_{\\text{\u53cd\u5e94}} + \\underbrace{D_{\\text{space}} \\nabla^2 n}_{\\text{\u6a2a\u5411\u6269\u6563}} \\underbrace{- v_y \\frac{\\partial n}{\\partial y}}_{\\text{\u7eb5\u5411\u5e73\u6d41}} + \\underbrace{\\sqrt{2D(n)}\\, \\eta(\\mathbf{x},t)}_{\\text{\u65f6\u7a7a\u566a\u58f0}} \\] <p>\u8fd9\u4e2aSPDE\u662f\u672c\u8bb2\u7406\u8bba\u63a8\u5bfc\u5728\u65f6\u7a7a\u4e2d\u7684\u6700\u7ec8\u4f53\u73b0\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65e2\u5305\u542b\u5185\u90e8\u53cd\u5e94\u52a8\u529b\u5b66\uff0c\u53c8\u5305\u542b\u7a7a\u95f4\u4f20\u64ad\u7279\u6027\u7684\u5b8c\u6574\u573a\u8bba\u6a21\u578b\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#53","title":"5.3 \u4ee3\u7801\u5b9e\u8df5\uff1a\u6709\u5411\u6e17\u6d41\u7684\u573a\u8bba\u53ef\u89c6\u5316","text":"<p>\u4ee5\u4e0b\u4ee3\u7801\u6b63\u662f\u5bf9\u4e0a\u8ff0SPDE\u7684\u76f4\u63a5\u6570\u503c\u6a21\u62df\u3002\u5b83\u4e0d\u518d\u8ffd\u8e2a\u79bb\u6563\u7684\u7c92\u5b50\uff0c\u800c\u662f\u6c42\u89e3\u4e00\u4e2a\u8fde\u7eed\u5bc6\u5ea6\u573a\\(n(x,y,t)\\)\u7684\u6f14\u5316\u3002\u521d\u59cb\u6761\u4ef6\u8bbe\u7f6e\u4e3a\u5728\u7a7a\u95f4\u9876\u7aef\u7684\u4e00\u6761\u201c\u6d3b\u6027\u201d\u7ec6\u7ebf\uff0c\u4ee5\u89c2\u5bdf\u5176\u5982\u4f55\u5411\u4e0b\u201c\u6e17\u6d41\u201d\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.ndimage import laplace\nfrom matplotlib.animation import FuncAnimation, PillowWriter\n\n# --- 1. Parameter Settings ---\ngrid_size = 128\n# Reaction parameters\nlambda_death = 1.0\ngamma_coag = 0.1\nmu_active = 1.15   # Active phase (slightly increased for clearer pattern)\nmu_absorbing = 0.95 # Absorbing phase\n# Simulation parameters\nD_space = 0.2      # Spatial diffusion coefficient (horizontal)\nv_y = 15.0         # !!! New: Vertical advection velocity !!!\ndt = 0.01\ntotal_time = 10\nn_steps = int(total_time / dt)\n\ndef run_directed_spde_simulation(mu_rate):\n    \"\"\" Numerically simulate the \"directed\" SPDE \"\"\"\n    # Initialization: Activate a thin line at the top\n    n_field = np.zeros((grid_size, grid_size))\n    start_row = 5\n    n_field[start_row, grid_size//2 - 10 : grid_size//2 + 10] = 1.0\n\n    history = [n_field.copy()]\n    # Spatial step size\n    dy = 1.0 \n\n    for i in range(n_steps):\n        # Reaction term\n        reaction_drift = (mu_rate - lambda_death) * n_field - gamma_coag * n_field * (n_field - 1)\n\n        # Noise term\n        noise_strength_sq = (mu_rate + lambda_death) * n_field + gamma_coag * n_field * (n_field - 1)\n        noise_strength = np.sqrt(np.maximum(0, noise_strength_sq))\n        space_time_noise = np.random.normal(0, 1, (grid_size, grid_size)) * noise_strength / np.sqrt(dt)\n\n        # Spatial diffusion term (Laplacian operator)\n        laplacian = laplace(n_field, mode='wrap') # Periodic boundary conditions\n\n        # !!! New: Advection term (using simple upwind scheme) !!!\n        # np.roll(n_field, 1, axis=0) shifts entire rows down by one, simulating flow from above\n        advection = -v_y * (n_field - np.roll(n_field, 1, axis=0)) / dy\n\n        # Euler method to update field\n        n_field += (reaction_drift + D_space * laplacian + advection + space_time_noise) * dt\n        n_field = np.maximum(0, n_field) # Density cannot be negative\n\n        # Save a frame every few steps\n        if (i+1) % 2 == 0: \n            history.append(n_field.copy())\n\n    return history\n\n# --- 2. Run simulations for two scenarios ---\nprint(\"Running simulation for active phase...\")\nhistory_active = run_directed_spde_simulation(mu_active)\nprint(\"Running simulation for absorbing phase...\")\nhistory_absorbing = run_directed_spde_simulation(mu_absorbing)\n\n# --- 3. Create animation ---\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10, 5))\nfig.patch.set_facecolor('black')\nvmax = np.max(history_active) * 0.7 # Unified color range\n\ndef update(frame):\n    ax1.clear()\n    im1 = ax1.imshow(history_active[frame], cmap='hot', vmin=0, vmax=vmax)\n    ax1.set_title(f'Active Phase (\u03bc={mu_active})', color='white')\n    ax1.set_xticks([])\n    ax1.set_yticks([])\n\n    ax2.clear()\n    im2 = ax2.imshow(history_absorbing[frame], cmap='hot', vmin=0, vmax=vmax)\n    ax2.set_title(f'Absorbing Phase (\u03bc={mu_absorbing})', color='white')\n    ax2.set_xticks([])\n    ax2.set_yticks([])\n\n    fig.suptitle(f'Field Simulation of Directed Percolation (Time: {frame*dt*2:.2f})', color='white', fontsize=16)\n\n    # Force aspect ratio to stretch image, better reflecting \"directed\" nature\n    ax1.set_aspect(0.5)\n    ax2.set_aspect(0.5)\n\n    return [im1, im2]\n\n# --- 4. Generate and save animation ---\nframes_to_render = min(len(history_active), len(history_absorbing))\nani = FuncAnimation(fig, update, frames=frames_to_render, interval=40, blit=False)\nani.save(\"directed_percolation_field.gif\", writer=PillowWriter(fps=25))\nplt.show()\n</code></pre> </p> <p>\u5b9a\u5411\u4f20\u64ad\uff1a\u5f3a\u5236\u6027\u7684\u5411\u4e0b\u5e73\u6d41\u9879 \\((-v_y \\cdot \\partial n / \\partial y)\\) \u4e3b\u5bfc\u4e86\u7cfb\u7edf\u7684\u6574\u4f53\u8fd0\u52a8\u65b9\u5411\uff0c\u5f62\u6210\u4e86\u4ece\u4e0a\u5230\u4e0b\u4f20\u64ad\u7684\u7ecf\u5178\u201c\u6e17\u6d41\u9525\u201d\u3002</p> <p>\u6a2a\u5411\u6269\u5c55\uff1a\u7a7a\u95f4\u6269\u6563\u9879 \\((D_{\\text{space}} \\cdot \\nabla^2 n)\\) \u4f7f\u5f97\u6e17\u6d41\u9525\u5728\u4f20\u64ad\u7684\u540c\u65f6\u5411\u4e24\u4fa7\uff08\u7a7a\u95f4\u7ef4\u5ea6\uff09\u6269\u5c55\uff0c\u5f62\u6210\u4e86\u9525\u5f62\u7684\u8fb9\u754c\u3002</p> <p>\u5de6\u56fe\uff08\u6d3b\u6027\u76f8, \\(\\mu &gt; \\lambda\\)\uff09\uff1a\u5728\u6e17\u6d41\u9525\u5185\u90e8\uff0c\u53cd\u5e94\u9879\u7684\u589e\u6b96\u5360\u4f18\uff0c\u4f7f\u5f97\u5bc6\u5ea6\u573a\u80fd\u591f\u7ef4\u6301\u5e76\u53d1\u5c55\u51fa\u590d\u6742\u7684\u3001\u52a8\u6001\u6da8\u843d\u7684\u5185\u90e8\u7ed3\u6784\u3002\u6d3b\u6027\u6210\u529f\u5730\u4f20\u64ad\u5230\u7cfb\u7edf\u7684\u201c\u672a\u6765\u201d\u3002</p> <p>\u53f3\u56fe\uff08\u5438\u6536\u76f8, \\(\\mu &lt; \\lambda\\)\uff09\uff1a\u5c3d\u7ba1\u4e5f\u5f62\u6210\u4e86\u521d\u59cb\u7684\u6e17\u6d41\u9525\uff0c\u4f46\u5185\u90e8\u7684\u6b7b\u4ea1\u7387\u8fc7\u9ad8\uff0c\u5bfc\u81f4\u5bc6\u5ea6\u573a\u8fc5\u901f\u8870\u51cf\u3002\u566a\u58f0\u9879\u867d\u80fd\u5f15\u8d77\u6682\u65f6\u7684\u5c40\u90e8\u4eae\u8d77\uff0c\u4f46\u65e0\u6cd5\u6539\u53d8\u6574\u4f53\u6d88\u4ea1\u7684\u547d\u8fd0\uff0c\u6700\u7ec8\u6d3b\u6027\u5c06\u5728\u6709\u9650\u7684\u201c\u65f6\u95f4\u201d\u5185\u5b8c\u5168\u7184\u706d\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#54-","title":"5.4 \u7406\u8bba\u7684\u7edf\u4e00\uff1a\u79d1\u5c14-\u970d\u666e\u592b\u53d8\u6362","text":"<p>\u5728\u5206\u522b\u4ece\u6982\u7387\u8bba\uff08KMPI\uff09\u548c\u7b97\u7b26\u4ee3\u6570\uff08CSP\uff09\u4e24\u4e2a\u622a\u7136\u4e0d\u540c\u7684\u89d2\u5ea6\u6784\u5efa\u4e86\u8def\u5f84\u79ef\u5206\u4e4b\u540e\uff0c\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u95ee\u9898\u662f\uff1a\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u4f55\u79cd\u8054\u7cfb\uff1f\u7b54\u6848\u5728\u4e8e\u4e00\u4e2a\u6df1\u523b\u7684\u975e\u7ebf\u6027\u573a\u53d8\u6362\u2014\u2014\u79d1\u5c14-\u970d\u666e\u592b\uff08Cole-Hopf\uff09\u53d8\u6362\uff0c\u5728\u968f\u673a\u8fc7\u7a0b\u7684\u6587\u732e\u4e2d\uff0c\u5b83\u4e5f\u5e38\u88ab\u79f0\u4e3a\u683c\u62c9\u65af\u4f2f\u683c\uff08Grassberger\uff09\u53d8\u6362\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#_2","title":"\u53d8\u6362\u7684\u6838\u5fc3","text":"<p>\u79d1\u5c14-\u970d\u666e\u592b\u53d8\u6362\u5728\u5f53\u524d\u8bed\u5883\u4e0b\u7684\u6838\u5fc3\u4f5c\u7528\uff0c\u662f\u5efa\u7acbKMPI\u6846\u67b6\u4e2d\u7684\u573a\u53d8\u91cf \\((n, \\tilde{n})\\) \u4e0eCSP\u6846\u67b6\u4e2d\u7b97\u7b26\u7684\u201c\u7b26\u53f7\u201d \\((x, iq+1)\\) \u4e4b\u95f4\u7684\u7cbe\u786e\u6570\u5b66\u6620\u5c04\u3002\u6839\u636e\u8bfe\u7a0b\u677f\u4e66\uff0c\u5176\u5173\u952e\u5bf9\u5e94\u5173\u7cfb\u4e3a\uff1a</p> <ol> <li>\u8df3\u8dc3\u7b97\u7b26\u4e0e\u6e6e\u706d\u7b97\u7b26\u7684\u7b49\u4ef7:</li> </ol> <p>$$ e^{i\\tilde{n}} \\quad \\longleftrightarrow \\quad \\hat{a} \\quad (\\text{\u5176\u7b26\u53f7\u4e3a } iq+1) $$ \u8fd9\u4e2a\u5173\u7cfb\u662f\u6574\u4e2a\u53d8\u6362\u7684\u57fa\u77f3\u3002\u5b83\u63ed\u793a\u4e86\u5728KMPI\u4e2d\u63cf\u8ff0\u4e00\u6b21\u7c92\u5b50\u201c\u8df3\u8dc3\u201d\u7684\u7b97\u7b26 \\(e^{i\\tilde{n}}\\)\uff0c\u5728\u4ee3\u6570\u7ed3\u6784\u4e0a\u7b49\u4ef7\u4e8eCSP\u4e2d\u201c\u6e6e\u706d\u201d\u4e00\u4e2a\u7c92\u5b50\u7684\u7b97\u7b26 \\(\\hat{a}\\)\u3002</p> <ol> <li>\u7c92\u5b50\u6570\u573a\u4e0e\u7c92\u5b50\u6570\u7b97\u7b26\u7684\u7b49\u4ef7:     $$     n \\quad \\longleftrightarrow \\quad \\hat{a}^\\dagger \\hat{a} \\quad (\\text{\u5176\u7b26\u53f7\u4e3a } x(iq+1))     $$</li> </ol> <p>\u8fd9\u8868\u660eKMPI\u4e2d\u7684\u57fa\u672c\u53d8\u91cf\u2014\u2014\u7c92\u5b50\u6570 \\(n\\)\u2014\u2014\u5728CSP\u6846\u67b6\u4e2d\u662f\u4e00\u4e2a\u590d\u5408\u91cf\uff0c\u5373\u7c92\u5b50\u6570\u7b97\u7b26 \\(\\hat{a}^\\dagger \\hat{a}\\)\u3002</p> <p>\u8fd9\u4e2a\u53d8\u6362\u7684\u610f\u4e49\u8fdc\u4e0d\u6b62\u662f\u6570\u5b66\u4e0a\u7684\u7b26\u53f7\u66ff\u6362\uff0c\u5b83\u63ed\u793a\u4e86\u7406\u8bba\u7684\u6df1\u5c42\u7edf\u4e00\u6027\uff1a</p> <ul> <li> <p>\u7edf\u4e00\u7269\u7406\u56fe\u50cf \uff1a\u5b83\u8bc1\u660e\u4e86\u201c\u6982\u7387\u8bba\u201d\u7684\u89c6\u89d2\uff08KMPI\u5173\u6ce8\u7c92\u5b50\u6570 \\(n\\) \u7684\u53d8\u5316\uff09\u548c\u201c\u4ee3\u6570\u201d\u7684\u89c6\u89d2\uff08CSP\u5173\u6ce8\u4ea7\u751f \\(\\hat{a}^\\dagger\\) \u548c\u6e6e\u706d \\(\\hat{a}\\) \u7684\u57fa\u672c\u4e8b\u4ef6\uff09\u5728\u63cf\u8ff0\u540c\u4e00\u4e2a\u7269\u7406\u73b0\u5b9e\u65f6\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\u3002</p> </li> <li> <p>\u5316\u975e\u7ebf\u6027\u4e3a\u7ebf\u6027 \uff1a\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u79d1\u5c14-\u970d\u666e\u592b\u53d8\u6362\u6700\u8457\u540d\u7684\u5e94\u7528\u662f\u5c06\u5728\u6d41\u4f53\u529b\u5b66\u4e2d\u63cf\u8ff0\u51b2\u51fb\u6ce2\u7684\u975e\u7ebf\u6027\u4f2f\u683c\u65af\u65b9\u7a0b\uff08Burgers' equation\uff09\u7cbe\u786e\u5730\u8f6c\u5316\u4e3a\u7ebf\u6027\u7684\u70ed\u4f20\u5bfc\u65b9\u7a0b\u3002\u8fd9\u79cd\u5316\u7e41\u4e3a\u7b80\u3001\u63ed\u793a\u590d\u6742\u975e\u7ebf\u6027\u95ee\u9898\u80cc\u540e\u9690\u85cf\u7684\u7ebf\u6027\u7ed3\u6784\u7684\u80fd\u529b\uff0c\u6b63\u662f\u5b83\u5728\u7406\u8bba\u7269\u7406\u4e2d\u5982\u6b64\u5f3a\u5927\u7684\u539f\u56e0\u3002</p> </li> </ul> <p>\u5728\u672c\u8282\u8bfe\u4e2d\uff0c\u79d1\u5c14-\u970d\u666e\u592b\u53d8\u6362\u626e\u6f14\u4e86\u201c\u7ffb\u8bd1\u5668\u201d\u7684\u89d2\u8272\u3002\u5c3d\u7ba1\u63a8\u5bfc\u8def\u5f84\u4e0d\u540c\uff0c\u4f46KMPI\u548cCSP\u5728\u4f4e\u566a\u58f0\u6781\u9650\u4e0b\u5fc5\u7136\u4f1a\u6536\u655b\u5230\u540c\u4e00\u4e2a\u63cf\u8ff0\u5b8f\u89c2\u7269\u7406\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u3002\u4e3a\u6839\u636e\u95ee\u9898\u7684\u5177\u4f53\u60c5\u51b5\u9009\u62e9\u6700\u5408\u9002\u7684\u573a\u8bba\u5de5\u5177\uff08KMPI\u66f4\u76f4\u89c2\uff0cCSP\u66f4\u4fbf\u4e8e\u4f7f\u7528\u91cd\u6574\u5316\u7fa4\u7b49\u9ad8\u7b49\u5de5\u5177\uff09\u63d0\u4f9b\u4e86\u7406\u8bba\u4f9d\u636e\u3002</p> <p>KMPI \u63d0\u4f9b\u4e86\u4e00\u6761\u4ece\u6982\u7387\u8bba\u51fa\u53d1\u3001\u7269\u7406\u76f4\u89c2\u7684\u8def\u5f84\uff0c\u76f4\u8fbe\u6717\u4e4b\u4e07\u65b9\u7a0b\uff1b\u800c CSP \u5219\u63d0\u4f9b\u4e86\u4e00\u6761\u4ece\u7b97\u7b26\u4ee3\u6570\u51fa\u53d1\u3001\u5f62\u5f0f\u66f4\u4f18\u7f8e\u7684\u8def\u5f84\uff0c\u4fbf\u4e8e\u4f7f\u7528\u66f4\u9ad8\u7b49\u7684\u573a\u8bba\u5de5\u5177\u3002\u4e24\u8005\u7684\u6700\u7ec8\u6c47\u5408\uff0c\u4ee5\u53ca\u5b83\u4eec\u5171\u540c\u5bfc\u51fa\u7684\u3001\u80fd\u591f\u88ab\u76f4\u89c2\u53ef\u89c6\u5316\u7684 SPDE\u3002</p>"},{"location":"zh/notes/37.%20Kramers-Moyal%20%E5%B1%95%E5%BC%80%E4%B8%8E%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E7%9A%84%E4%BD%8E%E5%99%AA%E5%A3%B0%E6%9E%81%E9%99%90/#_3","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u7cfb\u7edf\u6027\u5730\u4ecb\u7ecd\u4e86\u5982\u4f55\u4ece\u63cf\u8ff0\u79bb\u6563\u8df3\u8dc3\u8fc7\u7a0b\u7684\u4e3b\u65b9\u7a0b\u51fa\u53d1\uff0c\u6784\u5efa\u4e00\u4e2a\u7b49\u6548\u7684\u8fde\u7eed\u968f\u673a\u573a\u8bba\u63cf\u8ff0\uff0c\u5e76\u6700\u7ec8\u63ed\u793a\u4e86\u968f\u673a\u8fc7\u7a0b\u7406\u8bba\u6846\u67b6\u5185\u5728\u7684\u7edf\u4e00\u6027\u3002</p> <p>\u4ece\u79bb\u6563\u5230\u8fde\u7eed\u7684\u6865\u6881\uff1a\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\uff08Kramers-Moyal\uff09\u5c55\u5f00\u88ab\u786e\u7acb\u4e3a\u4e00\u5ea7\u5173\u952e\u7684\u6570\u5b66\u6865\u6881\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u7cfb\u7edf\u6027\u7684\u65b9\u6cd5\uff0c\u5c06\u79bb\u6563\u7684\u3001\u79ef\u5206-\u5fae\u5206\u5f62\u5f0f\u7684\u4e3b\u65b9\u7a0b\uff0c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5c06\u72b6\u6001\u53d8\u91cf\u89c6\u4e3a\u8fde\u7eed\u7684\u3001\u65e0\u9650\u9636\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u3002</p> <p>\u7cbe\u786e\u7684\u8def\u5f84\u79ef\u5206\u8868\u8ff0\uff1a\u57fa\u4e8eK-M\u5c55\u5f00\uff0c\u4e00\u4e2a\u7cbe\u786e\u4ee3\u8868\u539f\u59cb\u4e3b\u65b9\u7a0b\u7684\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\uff08KMPI\uff09\u88ab\u6784\u5efa\u51fa\u6765\u3002\u5176\u4f5c\u7528\u91cf \\(S[n,\\tilde{n}]\\) \u4f18\u96c5\u5730\u5c06\u8df3\u8dc3\u901f\u7387 \\(\\lambda(n)\\) \u548c\u6b65\u957f \\(\\Delta n\\) \u7f16\u7801\u5728\u4e00\u4e2a\u7d27\u51d1\u7684\u6307\u6570\u201c\u54c8\u5bc6\u987f\u91cf\u201d \\(\\lambda(n)(e^{i\\tilde{n}\\Delta n} - 1)\\) \u4e2d\uff0c\u4fdd\u7559\u4e86\u8df3\u8dc3\u8fc7\u7a0b\u5b8c\u6574\u7684\u975e\u9ad8\u65af\u7edf\u8ba1\u7279\u6027\u3002</p> <p>\u4f4e\u566a\u58f0\u6781\u9650\u7684\u7269\u7406\u610f\u4e49\uff1a\u901a\u8fc7\u5728\u7269\u7406\u4e0a\u5408\u7406\u7684\u4f4e\u566a\u58f0\u6781\u9650\uff08\u7b49\u4ef7\u4e8e\u7cfb\u7edf\u5927\u5c0f\u5c55\u5f00\uff09\u4e0b\u5bf9\u4f5c\u7528\u91cf\u8fdb\u884c\u5c55\u5f00\uff0c\u81ea\u7136\u5730\u5f97\u5230\u4e86\u4e00\u4e2a\u9ad8\u65af\u5f62\u5f0f\u7684\u798f\u514b-\u666e\u6717\u514b\uff08\u6216MSRJD\uff09\u4f5c\u7528\u91cf\u3002\u8fd9\u4e00\u8fc7\u7a0b\u4e0d\u4ec5\u4e3a\u4ece\u4e3b\u65b9\u7a0b\u8fd1\u4f3c\u5f97\u5230\u798f\u514b-\u666e\u6717\u514b\u65b9\u7a0b\u63d0\u4f9b\u4e86\u7406\u8bba\u4f9d\u636e\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5efa\u7acb\u4e86\u4e00\u4e2a\u4ece\u5fae\u89c2\u8df3\u8dc3\u89c4\u5219\uff08\u901f\u7387\u4e0e\u6b65\u957f\uff09\u5230\u5b8f\u89c2\u6717\u4e4b\u4e07\u52a8\u529b\u5b66\uff08\u6f02\u79fb\u4e0e\u6269\u6563\u7cfb\u6570\uff09\u7684\u7cfb\u7edf\u6027\u63a8\u5bfc\u201c\u914d\u65b9\u201d\u3002</p> <p>\u7406\u8bba\u7684\u7edf\u4e00\u6027\uff1a\u8fd9\u8282\u8bfe\u7684\u6700\u9ad8\u6f6e\uff0c\u5728\u4e8e\u901a\u8fc7\u6709\u5411\u6e17\u6d41\uff08DP\uff09\u6a21\u578b\u7684\u5206\u6790\uff0c\u63ed\u793a\u4e86\u7406\u8bba\u7684\u6df1\u523b\u7edf\u4e00\u6027\u3002\u7ed3\u679c\u8868\u660e\uff0c\u5728\u4f4e\u566a\u58f0\u6781\u9650\u4e0b\uff0c\u7531\u6982\u7387\u8bba\u65b9\u6cd5\uff08KMPI\uff09\u63a8\u5bfc\u51fa\u7684\u5b8f\u89c2Langevin\u65b9\u7a0b\uff0c\u4e0e\u5728\u7b2c36\u8bb2\u4e2d\u7531\u5b8c\u5168\u4e0d\u540c\u7684\u7b97\u7b26\u4ee3\u6570\u65b9\u6cd5\uff08\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206, CSP\uff09\u63a8\u5bfc\u51fa\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\u3002Cole-Hopf\u53d8\u6362\u63ed\u793a\u4e86\u8fd9\u4e24\u79cd\u770b\u4f3c\u65e0\u5173\u7684\u5f62\u5f0f\u4e3b\u4e49\u4e4b\u95f4\u7684\u6df1\u5c42\u5bf9\u5076\u6027\uff0c\u8bc1\u660e\u4e86\u65e0\u8bba\u662f\u4ece\u54ea\u4e2a\u57fa\u672c\u89c6\u89d2\u51fa\u53d1\uff0c\u6240\u63cf\u8ff0\u7684\u666e\u9002\u5b8f\u89c2\u7269\u7406\u90fd\u662f\u76f8\u540c\u7684\u3002</p> <p>\u8fd9\u8282\u8bfe\u53d1\u5c55\u7684\u5355\u7269\u79cd\u7406\u8bba\u6846\u67b6 \\((n, \\tilde{n})\\) \u4e3a\u7814\u7a76\u66f4\u590d\u6742\u7684\u7cfb\u7edf\u5960\u5b9a\u4e86\u575a\u5b9e\u7684\u57fa\u7840\u3002\u4e0b\u4e00\u6b65\u81ea\u7136\u662f\u5c06\u8fd9\u4e9b\u6280\u672f\u63a8\u5e7f\u5230\u5305\u542b\u591a\u79cd\u76f8\u4e92\u4f5c\u7528\u7269\u79cd\u7684\u7cfb\u7edf\u3002\u5c4a\u65f6\uff0c\u5c06\u4e0d\u518d\u53ea\u6709\u4e00\u4e2a\u7c92\u5b50\u6570\u5bc6\u5ea6 \\(n\\) \u53ca\u5176\u54cd\u5e94\u573a \\(\\tilde{n}\\)\uff0c\u800c\u662f\u4e3a\u6bcf\u4e2a\u7269\u79cd \\(i\\) \u90fd\u5f15\u5165\u4e00\u7ec4\u573a \\(\\{n_i, \\tilde{n}_i\\}\\)\u3002</p> <p>\u4f5c\u7528\u91cf\uff08\u65e0\u8bba\u662fKMPI\u8fd8\u662fCSP\u5f62\u5f0f\uff09\u7684\u7ed3\u6784\u5c06\u53d8\u5f97\u66f4\u52a0\u4e30\u5bcc\uff0c\u9664\u4e86\u63cf\u8ff0\u6bcf\u4e2a\u7269\u79cd\u81ea\u8eab\u52a8\u529b\u5b66\u7684\u9879\u4e4b\u5916\uff0c\u8fd8\u4f1a\u51fa\u73b0\u8026\u5408\u9879\uff0c\u7528\u4e8e\u63cf\u8ff0\u7269\u79cd\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\uff0c\u4f8b\u5982\uff1a</p> <ul> <li> <p>\u6355\u98df-\u88ab\u6355\u98df\uff1a\\(A + B \\to 2A\\)</p> </li> <li> <p>\u7ade\u4e89\uff1a\\(A + B \\to A\\) \u6216 \\(A + B \\to B\\)</p> </li> <li> <p>\u5faa\u73af\u4e3b\u5bfc\uff1a\\(A + B \\to 2B\\), \\(B + C \\to 2C\\), \\(C + A \\to 2A\\)</p> </li> </ul> <p>\u8fd9\u79cd\u63a8\u5e7f\u5c06\u80fd\u591f\u7528\u4e8e\u7814\u7a76\u8fdc\u6bd4\u7b80\u5355\u8870\u51cf/\u589e\u957f\u8fc7\u7a0b\u66f4\u4e3a\u4e30\u5bcc\u7684\u52a8\u529b\u5b66\u73b0\u8c61\uff0c\u4f8b\u5982\u5728\u6355\u98df\u8005-\u88ab\u6355\u98df\u8005\u6a21\u578b\uff08Lotka-Volterra\uff09\u4e2d\u51fa\u73b0\u7684\u79cd\u7fa4\u6570\u91cf\u7684\u6301\u7eed\u632f\u8361\uff0c\u6216\u662f\u5728\u5faa\u73af\u7ade\u4e89\u6a21\u578b\uff08\u5982\u201c\u77f3\u5934-\u526a\u5200-\u5e03\u201d\u6e38\u620f\uff09\u4e2d\u81ea\u53d1\u6d8c\u73b0\u7684\u8ffd\u9010-\u9003\u9038\u87ba\u65cb\u6591\u56fe\u3002\u8fd9\u5c06\u5e26\u9886\u6211\u4eec\u4ece\u5355\u53d8\u91cf\u7684\u968f\u673a\u8fc7\u7a0b\uff0c\u8fdb\u5165\u5230\u7531\u591a\u573a\u8026\u5408\u9a71\u52a8\u7684\u3001\u8ff7\u4eba\u7684\u590d\u6742\u79cd\u7fa4\u52a8\u529b\u5b66\u4e0e\u65f6\u7a7a\u6591\u56fe\u5f62\u6210\u7684\u4e16\u754c\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/","title":"\u5f15\u8a00\uff1a\u4ece\u5355\u7269\u79cd\u5230\u590d\u6742\u751f\u6001\u7cfb\u7edf","text":"<p>\u5728\u524d\u9762\u7684\u8bb2\u5ea7\u4e2d\uff08\u7279\u522b\u662f\u7b2c35\u81f337\u8bb2\uff09\uff0c\u4e00\u4e2a\u7528\u4e8e\u63cf\u8ff0\u5355\u4e2a\u7269\u79cd\u968f\u673a\u8fc7\u7a0b\u7684\u5f3a\u5927\u7406\u8bba\u6846\u67b6\u5df2\u88ab\u7cfb\u7edf\u6027\u5730\u5efa\u7acb\u8d77\u6765\u3002\u65e0\u8bba\u662f\u901a\u8fc7\u57fa\u4e8e\u6982\u7387\u8bba\u7684\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u5c55\u5f00\uff08Kramers-Moyal Expansion\uff09\uff0c\u8fd8\u662f\u901a\u8fc7\u57fa\u4e8e\u7b97\u7b26\u4ee3\u6570\u7684\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\uff08Coherent State Path Integral\uff09\uff0c\u63cf\u8ff0\u79bb\u6563\u7c92\u5b50\u751f\u706d\u8fc7\u7a0b\u7684\u4e3b\u65b9\u7a0b\uff08Master Equation\uff09\u90fd\u5df2\u88ab\u7cbe\u786e\u5730\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u7528\u573a\u8bba\u5de5\u5177\u7684\u8def\u5f84\u79ef\u5206\u8303\u5f0f\u3002</p> <p>\u7136\u800c\uff0c\u81ea\u7136\u754c\u4e2d\u7edd\u5927\u591a\u6570\u6709\u8da3\u7684\u73b0\u8c61\u2014\u2014\u65e0\u8bba\u662f\u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u7269\u79cd\u7ade\u4e89\u3001\u6d41\u884c\u75c5\u5b66\u4e2d\u7684\u75be\u75c5\u4f20\u64ad\uff0c\u8fd8\u662f\u751f\u7269\u5316\u5b66\u4e2d\u7684\u53cd\u5e94\u7f51\u7edc\u2014\u2014\u90fd\u6d89\u53ca\u591a\u4e2a\u76f8\u4e92\u4f5c\u7528\u7684\u7269\u79cd\u3002\u56e0\u6b64\uff0c\u5355\u7269\u79cd\u7406\u8bba\u867d\u7136\u662f\u575a\u5b9e\u7684\u8d77\u70b9\uff0c\u4f46\u4e3a\u4e86\u63cf\u8ff0\u771f\u5b9e\u4e16\u754c\u7684\u590d\u6742\u6027\uff0c\u5fc5\u987b\u5c06\u5176\u8fdb\u884c\u63a8\u5e7f\u3002</p> <p>\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u76ee\u6807\uff0c\u6b63\u662f\u5c06\u5148\u524d\u53d1\u5c55\u7684\u8def\u5f84\u79ef\u5206\u5f62\u5f0f\u4ece\u5355\u7269\u79cd\u7cfb\u7edf\u63a8\u5e7f\u5230\u66f4\u4e3a\u590d\u6742\u548c\u73b0\u5b9e\u7684\u591a\u7269\u79cd\u7cfb\u7edf\u3002\u901a\u8fc7\u8fd9\u4e00\u63a8\u5e7f\uff0c\u5c06\u4e3a\u5305\u542b\u4efb\u610f\u6570\u91cf\u7269\u79cd\u548c\u4efb\u610f\u590d\u6742\u53cd\u5e94\u7f51\u7edc\u7684\u7cfb\u7edf\u6784\u5efa\u4e00\u4e2a\u7edf\u4e00\u7684\u968f\u673a\u52a8\u529b\u5b66\u7406\u8bba\u3002</p> <p>\u4e3a\u4e86\u5177\u4f53\u5c55\u793a\u8fd9\u4e00\u63a8\u5e7f\u7684\u5a01\u529b\uff0c\u5c06\u4ee5\u4e00\u4e2a\u7ecf\u5178\u4e14\u975e\u5e73\u51e1\u7684\u6a21\u578b\u4f5c\u4e3a\u6848\u4f8b\u7814\u7a76\uff1a\u77f3\u5934-\u526a\u5200-\u5e03\uff08Rock-Paper-Scissors\uff09\u6a21\u578b\uff0c\u5728\u751f\u6001\u5b66\u4e2d\u4e5f\u79f0\u4e3a May-Leonard\u6a21\u578b\u3002\u8fd9\u4e2a\u6a21\u578b\u662f\u7814\u7a76\u5faa\u73af\u4e3b\u5bfc\uff08cyclic dominance\uff09 \u548c\u975e\u5e73\u8861\u52a8\u529b\u5b66\u7684\u8303\u5f0f\u3002\u5b83\u867d\u7136\u89c4\u5219\u7b80\u5355\uff0c\u5374\u80fd\u5c55\u73b0\u51fa\u590d\u6742\u7684\u65f6\u7a7a\u52a8\u529b\u5b66\u884c\u4e3a\uff0c\u5982\u6301\u7eed\u7684\u79cd\u7fa4\u632f\u8361\u548c\u87ba\u65cb\u6ce2\u7684\u5f62\u6210\uff0c\u8fd9\u4e9b\u90fd\u662f\u7b80\u5355\u7684\u5e73\u8861\u6001\u7edf\u8ba1\u529b\u5b66\u65e0\u6cd5\u63cf\u8ff0\u7684\u4e30\u5bcc\u73b0\u8c61\u3002</p> <p>\u8fd9\u8282\u8bfe\u4e5f\u6807\u5fd7\u7740\u8bfe\u7a0b\u4ece\u6784\u5efa\u62bd\u8c61\u7684\u6570\u5b66\u5de5\u5177\u8f6c\u5411\u5176\u5728\u590d\u6742\u975e\u5e73\u8861\u7cfb\u7edf\u4e2d\u7684\u76f4\u63a5\u5e94\u7528\u3002\u5148\u524d\u8bb2\u5ea7\uff08\u7b2c31\u201337\u8bb2\uff09\u4e2d\u7cbe\u5fc3\u6784\u5efa\u7684\u7406\u8bba\u673a\u5668\u2014\u2014\u5305\u62ecJanssen-De Dominicis\u54cd\u5e94\u6cdb\u51fd\u3001Onsager-Machlup\u6cdb\u51fd\u4ee5\u53ca\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\u2014\u2014\u5728\u5904\u7406\u50cf\u77f3\u5934-\u526a\u5200-\u5e03\u6a21\u578b\u8fd9\u6837\u5177\u6709\u590d\u6742\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528\u7684\u975e\u5e73\u8861\u95ee\u9898\u65f6\uff0c\u5176\u5fc5\u8981\u6027\u548c\u5f3a\u5927\u4e4b\u5904\u5c06\u5f97\u5230\u5145\u5206\u7684\u8bc1\u660e\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#1","title":"1. \u56de\u987e\uff1a\u5355\u7269\u79cd\u7cfb\u7edf\u7684\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\u6846\u67b6","text":"<p>\u4e3a\u4e86\u5c06\u7406\u8bba\u4ece\u5355\u7269\u79cd\u63a8\u5e7f\u81f3\u591a\u7269\u79cd\u7cfb\u7edf\uff0c\u9996\u5148\u5fc5\u987b\u56de\u987e\u5728\u4e4b\u524d\u8bb2\u5ea7\uff08\u7279\u522b\u662f\u7b2c36\u548c37\u8bb2\uff09\u4e2d\u4e3a\u5355\u7269\u79cd\u968f\u673a\u8fc7\u7a0b\u5efa\u7acb\u7684\u6838\u5fc3\u6982\u5ff5\u4e0e\u6570\u5b66\u7ed3\u6784\u3002\u8fd9\u4e2a\u57fa\u4e8e\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\u7684\u6846\u67b6\uff0c\u662f\u4ece\u4e3b\u65b9\u7a0b\u51fa\u53d1\u3001\u901a\u5f80\u573a\u8bba\u5206\u6790\u7684\u575a\u5b9e\u6865\u6881\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#11","title":"1.1 \u4ece\u4e3b\u65b9\u7a0b\u5230\u751f\u6210\u51fd\u6570","text":"<p>\u968f\u673a\u751f\u706d\u8fc7\u7a0b\u7684\u7406\u8bba\u8d77\u70b9\u662f\u524d\u5411\u4e3b\u65b9\u7a0b (Forward Master Equation) \u3002\u5b83\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5728\u65f6\u523b \\(t\\) \u5904\u4e8e\u5177\u6709 \\(n\\) \u4e2a\u7c92\u5b50\u7684\u72b6\u6001\u7684\u6982\u7387 \\(p(n, t \\mid n_0, t_0)\\) \u7684\u65f6\u95f4\u6f14\u5316\uff1a $$ \\partial_t p(n, t \\mid n_0, t_0) = \\sum_m Q(n, m) p(m, t \\mid n_0, t_0) $$</p> <ul> <li> <p>\\(p(n, t \\mid n_0, t_0)\\) \u662f\u6761\u4ef6\u6982\u7387\uff0c\u5373\u5728\u521d\u59cb\u65f6\u523b \\(t_0\\) \u6709 \\(n_0\\) \u4e2a\u7c92\u5b50\u7684\u524d\u63d0\u4e0b\uff0c\u5728\u65f6\u523b \\(t\\) \u53d1\u73b0\u6709 \\(n\\) \u4e2a\u7c92\u5b50\u7684\u6982\u7387\u3002</p> </li> <li> <p>\\(Q(n, m)\\) \u662f\u8f6c\u79fb\u901f\u7387\u77e9\u9635\u7684\u5143\u7d20\uff0c\u4ee3\u8868\u7cfb\u7edf\u4ece\u5177\u6709 \\(m\\) \u4e2a\u7c92\u5b50\u7684\u72b6\u6001\u4ee5\u5355\u4f4d\u901f\u7387\u8f6c\u79fb\u5230\u5177\u6709 \\(n\\) \u4e2a\u7c92\u5b50\u72b6\u6001\u7684\u6982\u7387\u3002\u8fd9\u4e2a\u65b9\u7a0b\u672c\u8d28\u4e0a\u662f\u6982\u7387\u5728\u4e0d\u540c\u7c92\u5b50\u6570\u72b6\u6001\u4e4b\u95f4\u6d41\u52a8\u7684\u8be6\u7ec6\u8bb0\u8d26\u3002</p> </li> </ul> <p>\u76f4\u63a5\u6c42\u89e3\u8fd9\u4e2a\u65e0\u9650\u7ef4\u7684\u8026\u5408\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\u901a\u5e38\u975e\u5e38\u56f0\u96be\u3002\u4e3a\u4e86\u7b80\u5316\u95ee\u9898\uff0c\u7b2c36\u8bb2\u5f15\u5165\u4e86\u76f8\u5e72\u6001\u8868\u8c61 (Coherent State Representation)\uff0c\u5176\u6838\u5fc3\u662f\u5b9a\u4e49\u4e00\u4e2a\u8fb9\u7f18\u5316\u5206\u5e03\u51fd\u6570 (Marginalized Distribution Function) \u3002\u5b83\u672c\u8d28\u4e0a\u662f\u5173\u4e8e\u521d\u59cb\u7c92\u5b50\u6570 \\(n_0\\) \u7684\u4e00\u79cd\u751f\u6210\u51fd\u6570\uff1a</p> \\[ p(n, t \\mid x, \\tau) := \\sum_{n_0=0}^{\\infty} p(n, t \\mid n_0, \\tau) \\frac{x^{n_0}}{n_0!} e^{-x} \\] <ul> <li> <p>\u8fd9\u4e2a\u53d8\u6362\u5c06\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u79bb\u6563\u521d\u59cb\u503c \\(n_0\\) \u7684\u51fd\u6570\u65cf\uff0c\u901a\u8fc7\u6cca\u677e\u6838\u51fd\u6570 \\(\\frac{x^{n_0}}{n_0!} e^{-x}\\)\uff0c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u8fde\u7eed\u53d8\u91cf \\(x\\) \u7684\u5355\u4e00\u51fd\u6570 \u3002</p> </li> <li> <p>\u8fd9\u91cc\u7684\u521d\u59cb\u65f6\u95f4\u88ab\u8bb0\u4e3a \\(\\tau\\)\u3002\u9700\u8981\u7279\u522b\u5f3a\u8c03\u7684\u662f\uff0c\u53d8\u91cf \\(x\\) \u5e76\u975e\u7269\u7406\u91cf\uff08\u5982\u7c92\u5b50\u5bc6\u5ea6\u6216\u4f4d\u7f6e\uff09\uff0c\u800c\u662f\u4e00\u4e2a\u7528\u4e8e\u751f\u6210\u77e9\u7684\u6570\u5b66\u8f85\u52a9\u53d8\u91cf\u3002</p> </li> </ul> <p>\u8fd9\u4e2a\u53d8\u6362\u7684\u5a01\u529b\u5728\u4e8e\uff0c\u5b83\u5c06\u4e3b\u65b9\u7a0b\u4ece\u4e00\u4e2a\u65e0\u9650\u7ef4\u7684\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u66f4\u6613\u4e8e\u5904\u7406\u7684\u5355\u4e00\u504f\u5fae\u5206\u65b9\u7a0b\uff08PDE\uff09\uff1a</p> \\[ \\partial_{-\\tau} p(\\cdot \\mid x, \\tau) = \\mathcal{Q} p(\\cdot \\mid x, \\tau) \\] <p>\u5176\u4e2d \\(\\mathcal{Q}\\) \u662f\u5728\u76f8\u5e72\u6001\u8868\u8c61\u4e0b\u7684\u6f14\u5316\u7b97\u7b26\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u5218\u7ef4\u5c14\u7b97\u7b26 (Liouville Operator) \u3002</p> <p>\u5218\u7ef4\u5c14\u7b97\u7b26\u5f97\u540d\u4e8e\u6cd5\u56fd\u6570\u5b66\u5bb6\u7ea6\u745f\u592b\u00b7\u5218\u7ef4\u5c14\uff0c\u5176\u601d\u60f3\u6e0a\u6e90\u53ef\u8ffd\u6eaf\u81f3\u4ed619\u4e16\u7eaa30\u5e74\u4ee3\u5bf9\u7ecf\u5178\u529b\u5b66\u76f8\u7a7a\u95f4\u5b88\u6052\u89c4\u5f8b\u7684\u7814\u7a76\uff0c\u4f46\u8be5\u7b97\u7b26\u5728\u73b0\u4ee3\u7406\u8bba\u7269\u7406\u4e2d\u7684\u7cfb\u7edf\u5f62\u5f0f\u5316\u5219\u7531\u7ea6\u7ff0\u00b7\u51af\u00b7\u8bfa\u4f9d\u66fc\u7b49\u4eba\u5728\u4e8e20\u4e16\u7eaa30\u5e74\u4ee3\u5efa\u7acb\u7684\u91cf\u5b50\u7edf\u8ba1\u529b\u5b66\u4e2d\u5b8c\u6210\u3002\u5176\u7269\u7406\u672c\u8d28\u662f\u63cf\u8ff0\u7cfb\u7edf\u5728\u76f8\u7a7a\u95f4\uff08\u7ecf\u5178\uff09\u6216\u5e0c\u5c14\u4f2f\u7279\u7a7a\u95f4\uff08\u91cf\u5b50\uff09\u4e2d\u6982\u7387\u5206\u5e03\u6216\u5bc6\u5ea6\u77e9\u9635\u968f\u65f6\u95f4\u6f14\u5316\u7684\u751f\u6210\u5143\uff1a\u5728\u7ecf\u5178\u529b\u5b66\u4e2d\uff0c\u5218\u7ef4\u5c14\u7b97\u7b26 L \u7531\u54c8\u5bc6\u987f\u91cf\u901a\u8fc7\u6cca\u677e\u62ec\u53f7\u5b9a\u4e49\u4e3a \\(L \\cdot = i \\{H, \\cdot\\}\\)\uff0c\u5b83\u751f\u6210\u76f8\u7a7a\u95f4\u6d41\u7684\u65f6\u95f4\u6f14\u5316\uff1b\u5728\u91cf\u5b50\u529b\u5b66\u4e2d\uff0c\u5b83\u5219\u7531\u54c8\u5bc6\u987f\u91cf\u901a\u8fc7\u5bf9\u6613\u5173\u7cfb\u5b9a\u4e49\u4e3a \\(L \\hat{\\rho} = [H, \\hat{\\rho}] / i\\hbar\\)\uff0c\u652f\u914d\u7740\u5bc6\u5ea6\u77e9\u9635 \\(\\hat{\\rho}\\) \u7684\u52a8\u529b\u5b66\uff08\u5373\u51af\u00b7\u8bfa\u4f9d\u66fc\u65b9\u7a0b\uff09\u3002\u5176\u6838\u5fc3\u5e94\u7528\u8d2f\u7a7f\u4e8e\u7edf\u8ba1\u7269\u7406\u7684\u5404\u4e2a\u524d\u6cbf\u9886\u57df\uff0c\u5305\u62ec\u4f5c\u4e3a\u7ebf\u6027\u54cd\u5e94\u7406\u8bba\uff08\u5982\u4e45\u4fdd\u516c\u5f0f\uff09\u7684\u57fa\u77f3\u3001\u6784\u5efa\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u7684\u4e3b\u65b9\u7a0b\u6846\u67b6\u3001\u5206\u6790\u6df7\u6c8c\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u7684\u7279\u5f81\u503c\uff08Pollicott-Ruelle\u5171\u632f\u5b50\uff09\u3001\u4ee5\u53ca\u5728\u91cf\u5b50\u4fe1\u606f\u548c\u5f00\u653e\u7cfb\u7edf\u52a8\u529b\u5b66\u4e2d\u63cf\u8ff0\u9000\u76f8\u5e72\u8fc7\u7a0b\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#12","title":"1.2 \u5355\u7269\u79cd\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf","text":"<p>\u4ece\u8fd9\u4e2a\u5f62\u5f0f\u4e0a\u4e0e\uff08\u865a\u65f6\u95f4\uff09\u859b\u5b9a\u8c14\u65b9\u7a0b\u540c\u6784\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u51fa\u53d1\uff0c\u901a\u8fc7\u6807\u51c6\u7684\u8def\u5f84\u79ef\u5206\u6784\u9020\u65b9\u6cd5\uff08\u5982\u65f6\u95f4\u5207\u7247\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u7cfb\u7edf\u6f14\u5316\u4f20\u64ad\u5b50\u7684\u8def\u5f84\u79ef\u5206\u8868\u793a\u3002\u5176\u6838\u5fc3\u662f\u4f5c\u7528\u91cf (Action) \\(\\mathcal{S}\\)\uff0c\u5b83\u4e3a\u7cfb\u7edf\u5728\u7531\u8f85\u52a9\u53d8\u91cf \\(x(\\tau)\\) \u6784\u6210\u7684\u72b6\u6001\u7a7a\u95f4\u4e2d\u7684\u6bcf\u4e00\u6761\u53ef\u80fd\u8def\u5f84\u8d4b\u4e88\u4e00\u4e2a\u590d\u6570\u6743\u91cd\uff1a</p> \\[ \\mathcal{S}[x(\\tau), iq(\\tau)] = \\int_{t_{0}}^{t} d\\tau \\left[ iq(\\tau) \\partial_{\\tau} x(\\tau) - \\mathcal{Q}(x, iq + 1) \\right] \\] <p>\u8fd9\u4e2a\u4f5c\u7528\u91cf\u7684\u7ed3\u6784\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u8fd9\u4e0e\u7b2c32\u8bb2\u4e2d\u4e3a\u8fde\u7eed\u6717\u4e4b\u4e07\u7cfb\u7edf\u63a8\u5bfc\u7684J-D\u4f5c\u7528\u91cf\u5177\u6709\u76f8\u4f3c\u7684\u903b\u8f91\u7ed3\u6784 \uff1a</p> <ol> <li> <p>\u52a8\u529b\u5b66\u9879 (Kinetic Term) \\(iq \\partial_\\tau x\\)\uff1a\u8fd9\u4e00\u9879\u5728\u573a\u8bba\u4e2d\u5e38\u88ab\u79f0\u4e3a\u201c\u8d1d\u91cc\u76f8\u4f4d\u201d\uff08Berry phase\uff09\u9879\u3002\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u7684\u5177\u4f53\u53cd\u5e94\uff0c\u800c\u662f\u4ea7\u751f\u4e8e\u4e0d\u540c\u65f6\u523b\u76f8\u5e72\u6001\u57fa\u77e2\u4e4b\u95f4\u7684\u6570\u5b66\u4ea4\u53e0\u3002\u5b83\u786e\u4fdd\u4e86\u8def\u5f84\u79ef\u5206\u6b63\u786e\u5730\u63cf\u8ff0\u4e86\u65f6\u95f4\u7684\u8fde\u7eed\u6f14\u5316\uff0c\u5e76\u5c06\u573a \\(x(\\tau)\\) \u4e0e\u5176\u5171\u8f6d\u7684\u54cd\u5e94\u573a \\(q(\\tau)\\) \u52a8\u6001\u5730\u8054\u7cfb\u8d77\u6765\u3002</p> </li> <li> <p>\u54c8\u5bc6\u987f\u91cf/\u5218\u7ef4\u5c14\u91cf (Hamiltonian/Liouvillian) \\(\\mathcal{Q}(x, iq + 1)\\)\uff1a\u8fd9\u4e00\u9879\u662f\u4e3b\u65b9\u7a0b\u6f14\u5316\u7b97\u7b26 \\(\\hat{\\mathcal{Q}}\\) \u5728\u8def\u5f84\u79ef\u5206\u4e2d\u7684\u201c\u7ecf\u5178\u201d\u5bf9\u5e94\u7269\uff08\u5728\u6570\u5b66\u4e0a\u79f0\u4e3a\u7b97\u7b26\u7684\u201c\u7b26\u53f7\u201d\uff09\u3002\u5b83\u5305\u542b\u4e86\u7cfb\u7edf\u7684\u5168\u90e8\u52a8\u529b\u5b66\u4fe1\u606f\uff0c\u5373\u6240\u6709\u7684\u751f\u6b7b\u53cd\u5e94\u53ca\u5176\u901f\u7387\u3002\u5b83\u7684\u5177\u4f53\u5f62\u5f0f\u7531\u7cfb\u7edf\u7684\u53cd\u5e94\u7f51\u7edc\u51b3\u5b9a\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6cdb\u578b\u53cd\u5e94 \\(\\sum kA \\to \\sum lA\\)\uff0c\u5176\u5bf9\u5e94\u7684\u5218\u7ef4\u5c14\u7b97\u7b26\u90e8\u5206\u4e3a\uff1a</p> <p>$$ \\mathcal{Q} = \\tilde{\\gamma} \\left( (a^\\dagger)^k (a^l - a^k) \\right) $$ \u5176\u4e2d \\(a^\\dagger\\) \u548c \\(a\\) \u662f\u5728\u76f8\u5e72\u6001\u8868\u8c61\u4e0b\u7684\u521b\u751f\u548c\u6e6e\u706d\u7b97\u7b26\uff0c\u5728\u8def\u5f84\u79ef\u5206\u4e2d\u5b83\u4eec\u5206\u522b\u88ab\u66ff\u6362\u4e3a \\(x\\) \u548c \\((iq+1)\\)\u3002</p> </li> </ol> <p>\u8fd9\u4e2a\u4ece\u201c\u4e3b\u65b9\u7a0b \u2192 \u751f\u6210\u51fd\u6570 \u2192 \u504f\u5fae\u5206\u65b9\u7a0b \u2192 \u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u201d\u7684\u63a8\u5bfc\u6d41\u7a0b\uff0c\u4e3a\u5355\u7269\u79cd\u7cfb\u7edf\u5efa\u7acb\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u7406\u8bba\u6846\u67b6\u3002\u63a5\u4e0b\u6765\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u5c31\u662f\u5c55\u793a\u8fd9\u4e2a\u65b9\u6cd5\u5982\u4f55\u88ab\u7cfb\u7edf\u5730\u63a8\u5e7f\u5230\u5305\u542b\u4efb\u610f\u591a\u4e2a\u7269\u79cd\u7684\u7cfb\u7edf\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#2","title":"2. \u63a8\u5e7f\u81f3\u591a\u7269\u79cd\u7cfb\u7edf","text":"<p>\u5728\u56de\u987e\u4e86\u5355\u7269\u79cd\u8def\u5f84\u79ef\u5206\u4e4b\u540e\uff0c\u73b0\u5728\u53ef\u4ee5\u5f00\u59cb\u6838\u5fc3\u7684\u63a8\u5e7f\u5de5\u4f5c\u3002\u5176\u5173\u952e\u601d\u60f3\u5728\u4e8e\uff0c\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\u7684\u6570\u5b66\u6846\u67b6\u5177\u6709\u5f3a\u5927\u7684\u666e\u9002\u6027\u3002\u4ece\u5355\u7269\u79cd\u5230\u591a\u7269\u79cd\u7684\u8de8\u8d8a\uff0c\u672c\u8d28\u4e0a\u662f\u5c06\u7406\u8bba\u4e2d\u7684\u6807\u91cf\uff08\u5982\u7c92\u5b50\u6570 \\(n\\)\uff0c\u8f85\u52a9\u573a \\(x\\)\uff09\u63d0\u5347\u4e3a\u5411\u91cf\uff0c\u800c\u4f5c\u7528\u91cf\u7684\u57fa\u672c\u7ed3\u6784\u4fdd\u6301\u4e0d\u53d8\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#21","title":"2.1 \u591a\u7269\u79cd\u6001\u7a7a\u95f4\u4e0e\u7b97\u7b26","text":"<p>\u9996\u5148\uff0c\u9700\u8981\u6269\u5c55\u63cf\u8ff0\u7cfb\u7edf\u72b6\u6001\u7684\u6570\u5b66\u7a7a\u95f4\u3002</p> <p>\u5728\u591a\u7269\u79cd\u7cfb\u7edf\u4e2d\uff0c\u7cfb\u7edf\u7684\u5fae\u89c2\u72b6\u6001\u4e0d\u518d\u7531\u5355\u4e2a\u6574\u6570 \\(n\\) \u63cf\u8ff0\uff0c\u800c\u662f\u7531\u4e00\u4e2a\u7c92\u5b50\u6570\u5411\u91cf \\(\\boldsymbol{n} = (n_1, n_2, \\ldots, n_S)\\) \u63cf\u8ff0\uff0c\u5176\u4e2d \\(n_\\sigma\\) \u662f\u7269\u79cd \\(\\sigma\\) \u7684\u7c92\u5b50\u6570\u3002</p> <p>\u7269\u7406\u610f\u4e49\uff1a \u7cfb\u7edf\u7684\u72b6\u6001\u7a7a\u95f4\u56e0\u6b64\u4ece\u4e00\u7ef4\u7684\u6574\u6570\u8f74\uff0c\u6269\u5c55\u4e3a\u4e00\u4e2a \\(S\\) \u7ef4\u7684\u79bb\u6563\u683c\u70b9\u7a7a\u95f4 \\(\\mathbb{N}_0^S\\)\u3002\u8fd9\u4e2a\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u90fd\u4ee3\u8868\u4e86\u751f\u6001\u7cfb\u7edf\u6216\u5316\u5b66\u53cd\u5e94\u7f51\u7edc\u7684\u4e00\u6b21\u5b8c\u6574\u201c\u666e\u67e5\u201d\uff0c\u5373\u4e00\u4e2a\u7279\u5b9a\u7684\u79cd\u7fa4\u6784\u6210\u3002</p> <p>\u76f8\u5e94\u5730\uff0c\u76f8\u5e72\u6001\u8868\u8c61\u4e5f\u9700\u8981\u8fdb\u884c\u63a8\u5e7f\u3002\u591a\u7269\u79cd\u7684\u76f8\u5e72\u6001\u53ef\u4ee5\u88ab\u6784\u5efa\u4e3a\u5355\u7269\u79cd\u76f8\u5e72\u6001\u7684\u5f20\u91cf\u79ef\uff08tensor product\uff09\u3002\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u7269\u79cd\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u76f8\u5e72\u6001\u57fa\u5e95\uff0c\u800c\u6574\u4e2a\u7cfb\u7edf\u7684\u57fa\u5e95\u662f\u5b83\u4eec\u7684\u7ec4\u5408\uff1a</p> \\[ |\\boldsymbol{n}\\rangle_\\boldsymbol{x} = |n_1, n_2, \\ldots, n_S\\rangle_{\\{x_1, x_2, \\ldots, x_S\\}} = |n_1\\rangle_{x_1} \\otimes \\cdots \\otimes |n_S\\rangle_{x_s} \\] <ul> <li> <p>\\(\\boldsymbol{x} = (x_1, x_2, \\ldots, x_S)\\) \u662f\u4e00\u4e2a\u5305\u542b \\(S\\) \u4e2a\u5f62\u5f0f\u53d8\u91cf\u7684\u5411\u91cf\u3002</p> </li> <li> <p>\u5f20\u91cf\u79ef \\(\\otimes\\) \u662f\u7ec4\u5408\u72ec\u7acb\u7a7a\u95f4\u7684\u81ea\u7136\u6570\u5b66\u8bed\u8a00\uff0c\u5b83\u610f\u5473\u7740\u5728\u4e0d\u8003\u8651\u76f8\u4e92\u4f5c\u7528\u65f6\uff0c\u6bcf\u4e2a\u7269\u79cd\u7684\u72b6\u6001\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002</p> </li> </ul> <p>\u521b\u751f\u548c\u6e6e\u706d\u7b97\u7b26\u73b0\u5728\u4e5f\u9700\u8981\u5e26\u4e0a\u7269\u79cd\u6807\u7b7e \\(\\sigma\\)\u3002\u5b83\u4eec\u5728\u591a\u7269\u79cd\u6cca\u677e\u57fa\u5e95\u4e0a\u7684\u4f5c\u7528\u88ab\u5b9a\u4e49\u4e3a\uff1a</p> \\[ a^\\dagger_\\sigma = x_\\sigma, \\quad a_\\sigma = \\partial_{x_\\sigma} + 1 \\] <p>\u200b   \u7269\u7406\u610f\u4e49\uff1a\\(a^\\dagger_\\sigma\\) \u7684\u4f5c\u7528\u662f\u5728\u7cfb\u7edf\u4e2d\u589e\u52a0\u4e00\u4e2a \\(\\sigma\\) \u7269\u79cd\u7684\u7c92\u5b50\uff08\u5728\u6cca\u677e\u8868\u8c61\u4e2d\u7b49\u4ef7\u4e8e\u4e58\u4ee5 \\(x_\\sigma\\)\uff09\uff0c\u800c \\(a_\\sigma\\) \u7684\u4f5c\u7528\u662f\u79fb\u9664\u4e00\u4e2a \\(\\sigma\\) \u7269\u79cd\u7684\u7c92\u5b50\uff08\u5728\u6cca\u677e\u8868\u8c61\u4e2d\u7b49\u4ef7\u4e8e\u4f5c\u7528\u4e00\u4e2a\u5fae\u5206\u7b97\u5b50\uff09\u3002</p> <p>\u8fd9\u4e9b\u7b97\u7b26\u53ea\u4f5c\u7528\u4e8e\u5b83\u4eec\u5bf9\u5e94\u7269\u79cd\u7684\u5b50\u7a7a\u95f4\u3002\u5c5e\u4e8e\u4e0d\u540c\u7269\u79cd\u7684\u7b97\u7b26\u76f8\u4e92\u5bf9\u6613\uff0c\u4f8b\u5982 \\([a_\\sigma, a_\\tau^\\dagger] = \\delta_{\\sigma\\tau}\\)\uff0c\u8fd9\u518d\u6b21\u4f53\u73b0\u4e86\u5404\u7269\u79cd\u81ea\u7531\u5ea6\u7684\u72ec\u7acb\u6027\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#22","title":"2.2 \u591a\u7269\u79cd\u4f5c\u7528\u91cf","text":"<p>\u6709\u4e86\u5411\u91cf\u5316\u7684\u6001\u7a7a\u95f4\u548c\u7b97\u7b26\uff0c\u9075\u5faa\u5355\u7269\u79cd\u60c5\u51b5\u7684\u84dd\u56fe\uff0c\u53ef\u4ee5\u76f4\u63a5\u5199\u51fa\u591a\u7269\u79cd\u7cfb\u7edf\u7684\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u3002\u5176\u5f62\u5f0f\u4e0e\u5355\u7269\u79cd\u60c5\u51b5\u60ca\u4eba\u5730\u76f8\u4f3c\uff0c\u53ea\u662f\u6240\u6709\u7684\u6807\u91cf\u90fd\u88ab\u66ff\u6362\u4e3a\u4e86\u5411\u91cf\uff1a</p> \\[ S[\\boldsymbol{x}(\\tau), i\\boldsymbol{q}(\\tau)] = \\int_{t_0}^{t} d\\tau \\left[ i\\boldsymbol{q}(\\tau)^\\top \\partial_\\tau \\boldsymbol{x}(\\tau) - \\mathcal{Q}(\\boldsymbol{x}, i\\boldsymbol{q} + 1) \\right] \\] <p>\\(\\boldsymbol{x}(\\tau) = (x_1(\\tau), \\ldots, x_S(\\tau))\\) \u548c \\(\\boldsymbol{q}(\\tau) = (q_1(\\tau), \\ldots, q_S(\\tau))\\) \u73b0\u5728\u662f\u968f\u65f6\u95f4\u6f14\u5316\u7684 \\(S\\) \u7ef4\u5411\u91cf\u573a\u3002</p> <p>\\(i\\boldsymbol{q}^\\top \\partial_\\tau \\boldsymbol{x}\\) \u662f\u5411\u91cf\u7684\u5185\u79ef\uff0c\u5373 \\(\\sum_{\\sigma=1}^S i q_\\sigma(\\tau) \\partial_\\tau x_\\sigma(\\tau)\\)\uff0c\u4ee3\u8868\u4e86\u6240\u6709\u7269\u79cd\u52a8\u529b\u5b66\u9879\u7684\u603b\u548c\u3002</p> <p>\\(\\mathcal{Q}(\\boldsymbol{x}, i\\boldsymbol{q} + 1)\\) \u662f\u591a\u7269\u79cd\u7684\u5218\u7ef4\u5c14\u91cf\uff0c\u5b83\u73b0\u5728\u662f \\(S\\) \u5bf9\u53d8\u91cf \\((\\boldsymbol{x}, \\boldsymbol{q})\\) \u7684\u51fd\u6570\uff0c\u5e76\u4e14\u5305\u542b\u4e86\u7269\u79cd\u95f4\u76f8\u4e92\u4f5c\u7528\u7684\u5168\u90e8\u4fe1\u606f\u3002</p> <p>\u4ece\u6807\u91cf\u5230\u5411\u91cf\u7684\u8f6c\u53d8\u4e0d\u4ec5\u4ec5\u662f\u8bb0\u53f7\u4e0a\u7684\u53d8\u5316\uff0c\u5b83\u8574\u542b\u7740\u6df1\u523b\u7684\u7269\u7406\u548c\u51e0\u4f55\u56fe\u50cf\u3002\u5355\u7269\u79cd\u7cfb\u7edf\u7684\u72b6\u6001\u7a7a\u95f4\u662f\u4e00\u7ef4\u7684\u3002\u800c\u5bf9\u4e8e\u4e00\u4e2a\u4e09\u7269\u79cd\u7cfb\u7edf\uff08\u5982\u77f3\u5934-\u526a\u5200-\u5e03\uff09\uff0c\u72b6\u6001\u7a7a\u95f4\u5c31\u662f\u4e00\u4e2a\u4e09\u7ef4\u7684\u79cd\u7fa4\u683c\u70b9\u7a7a\u95f4 \\(\\mathbb{N}_0^3\\)\u3002\u8def\u5f84\u79ef\u5206\u7684\u672c\u8d28\uff0c\u5c31\u662f\u5bf9\u6240\u6709\u53ef\u80fd\u7a7f\u884c\u4e8e\u8fd9\u4e2a\u9ad8\u7ef4\u201c\u79cd\u7fa4\u7a7a\u95f4\u201d\u7684\u968f\u673a\u8f68\u8ff9 \\(\\boldsymbol{n}(t)\\) \u8fdb\u884c\u52a0\u6743\u6c42\u548c\u3002\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\u4e2d\u7684\u573a \\(\\boldsymbol{x}(\\tau)\\) \u548c \\(\\boldsymbol{q}(\\tau)\\) \u6b63\u662f\u8fd9\u4e9b\u79bb\u6563\u8f68\u8ff9\u7684\u8fde\u7eed\u573a\u8bba\u5bf9\u5e94\u7269\u3002\u56e0\u6b64\uff0c\u4f5c\u7528\u91cf \\(S[\\boldsymbol{x}, i\\boldsymbol{q}]\\) \u63cf\u8ff0\u4e86\u5728\u8fd9\u4e00\u9ad8\u7ef4\u79cd\u7fa4\u7a7a\u95f4\u4e2d\u4e00\u6761\u7279\u5b9a\u6f14\u5316\u8def\u5f84\u7684\u201c\u4ee3\u4ef7\u201d\u6216\u6982\u7387\u6743\u91cd\u3002\u8fd9\u4e00\u51e0\u4f55\u76f4\u89c9\u4e3a\u7406\u89e3\u62bd\u8c61\u7684\u573a\u8bba\u5f62\u5f0f\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u652f\u6491\u3002</p> <p>\u8fd9\u4e2a\u63a8\u5e7f\u63ed\u793a\u4e86\u4e00\u4e2a\u6838\u5fc3\u539f\u7406\uff1a\u591a\u7269\u79cd\u76f8\u4e92\u4f5c\u7528\u7684\u5168\u90e8\u590d\u6742\u6027\uff0c\u90fd\u88ab\u4f18\u96c5\u5730\u5c01\u88c5\u5728\u4e86\u591a\u7269\u79cd\u5218\u7ef4\u5c14\u7b97\u7b26 \\(\\mathcal{Q}\\) \u7684\u5177\u4f53\u5f62\u5f0f\u4e2d\uff0c\u800c\u8def\u5f84\u79ef\u5206\u7684\u57fa\u672c\u6846\u67b6\u672c\u8eab\u4fdd\u6301\u4e0d\u53d8\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4e0d\u9700\u8981\u4e3a\u6bcf\u4e00\u79cd\u65b0\u7684\u591a\u7269\u79cd\u7cfb\u7edf\u90fd\u91cd\u65b0\u53d1\u660e\u4e00\u5957\u7406\u8bba\uff1b\u53ea\u9700\u8981\u5b66\u4f1a\u5982\u4f55\u4e3a\u7ed9\u5b9a\u7684\u53cd\u5e94\u7f51\u7edc\u6b63\u786e\u5730\u201c\u6784\u5efa\u201d\u5176\u5bf9\u5e94\u7684\u5218\u7ef4\u5c14\u7b97\u7b26\u3002\u8fd9\u6b63\u662f\u4e0b\u4e00\u8282\u7684\u6838\u5fc3\u4efb\u52a1\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#3","title":"3. \u6784\u5efa\u5316\u5b66\u53cd\u5e94\u7f51\u7edc\u7684\u5218\u7ef4\u5c14\u7b97\u7b26","text":"<p>\u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u7406\u8bba\u6846\u67b6\u5df2\u7ecf\u4ece\u5355\u7269\u79cd\u7684\u6807\u91cf\u5f62\u5f0f\u6210\u529f\u63a8\u5e7f\u5230\u4e86\u591a\u7269\u79cd\u7684\u5411\u91cf\u5f62\u5f0f\u3002\u8fd9\u4e2a\u63a8\u5e7f\u63ed\u793a\u4e86\u4e00\u4e2a\u6838\u5fc3\u539f\u7406\uff1a\u591a\u7269\u79cd\u76f8\u4e92\u4f5c\u7528\u7684\u5168\u90e8\u590d\u6742\u6027\uff0c\u90fd\u88ab\u4f18\u96c5\u5730\u5c01\u88c5\u5728\u4e86\u591a\u7269\u79cd\u5218\u7ef4\u5c14\u7b97\u7b26 \\(\\mathcal{Q}\\) \u7684\u5177\u4f53\u5f62\u5f0f\u4e2d\u3002</p> <p>\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u5982\u4f55\u6839\u636e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u53cd\u5e94\u7f51\u7edc\uff0c\u7cfb\u7edf\u6027\u5730\u6784\u5efa\u51fa\u8fd9\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u5218\u7ef4\u5c14\u7b97\u7b26 \\(\\mathcal{Q}\\)\uff1f\u8fd9\u8282\u8bfe\u5c06\u63d0\u4f9b\u4e00\u4e2a\u901a\u7528\u7684\u201c\u914d\u65b9\u201d\u6216\u201c\u7b97\u6cd5\u201d\uff0c\u5b83\u80fd\u591f\u5c06\u4efb\u4f55\u7269\u7406\u3001\u5316\u5b66\u6216\u751f\u7269\u8fc7\u7a0b\uff08\u8868\u73b0\u4e3a\u4e00\u7cfb\u5217\u53cd\u5e94\u89c4\u5219\uff09\u7cbe\u786e\u5730\u7ffb\u8bd1\u6210\u4e00\u4e2a\u751f\u6210\u5176\u5b8c\u6574\u968f\u673a\u52a8\u529b\u5b66\u7684\u6570\u5b66\u5bf9\u8c61\uff08\u5373\u5218\u7ef4\u5c14\u7b97\u7b26\uff09\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u4e00\u822c\u7684\u5316\u5b66\u53cd\u5e94\uff0c\u5176\u4e2d \\(k_\\sigma\\) \u4e2a\u7269\u79cd \\(A_\\sigma\\) \u7684\u5206\u5b50\u4f5c\u4e3a\u53cd\u5e94\u7269\uff0c\u4ee5\u901f\u7387 \\(\\gamma\\) \u8f6c\u5316\u4e3a \\(l_\\sigma\\) \u4e2a\u7269\u79cd \\(A_\\sigma\\) \u7684\u5206\u5b50\u4f5c\u4e3a\u4ea7\u7269\uff1a</p> \\[ \\sum_{\\sigma=1}^{S} k_\\sigma A_\\sigma \\xrightarrow{\\gamma} \\sum_{\\sigma=1}^{S} l_\\sigma A_\\sigma \\]"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#31","title":"3.1 \u4ece\u53cd\u5e94\u89c4\u5219\u5230\u8f6c\u79fb\u77e9\u9635","text":"<p>\u5728\u6784\u5efa\u7b97\u7b26\u4e4b\u524d\uff0c\u9996\u5148\u56de\u987e\u4e3b\u65b9\u7a0b\u4e2d\u7684\u8f6c\u79fb\u901f\u7387\u77e9\u9635 \\(Q(\\boldsymbol{n}, \\boldsymbol{m})\\) \u662f\u5982\u4f55\u4ece\u57fa\u672c\u53cd\u5e94\u89c4\u5219\u4e2d\u4ea7\u751f\u7684\u3002</p> <p>\u5047\u8bbe\u7cfb\u7edf\u5f53\u524d\u72b6\u6001\u4e3a \\(\\boldsymbol{m} = (m_1, \\ldots, m_S)\\)\u3002\u4e3a\u4e86\u53d1\u751f\u53cd\u5e94\uff0c\u9700\u8981\u4ece \\(m_1\\) \u4e2a \\(A_1\\) \u7c92\u5b50\u4e2d\u9009\u51fa \\(k_1\\) \u4e2a\uff0c\u4ece \\(m_2\\) \u4e2a \\(A_2\\) \u7c92\u5b50\u4e2d\u9009\u51fa \\(k_2\\) \u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u603b\u7684\u53cd\u5e94\u901f\u7387\u6b63\u6bd4\u4e8e\u8fd9\u4e9b\u7ec4\u5408\u65b9\u5f0f\u7684\u4e58\u79ef\u3002\u53cd\u5e94\u53d1\u751f\u540e\uff0c\u7cfb\u7edf\u72b6\u6001\u4ece \\(\\boldsymbol{m}\\) \u8df3\u8f6c\u5230 \\(\\boldsymbol{n} = \\boldsymbol{m} - \\boldsymbol{k} + \\boldsymbol{l}\\)\u3002\u7efc\u5408\u8d77\u6765\uff0c\u8f6c\u79fb\u77e9\u9635\u5143\u7684\u5f62\u5f0f\u4e3a\uff1a</p> \\[ Q(\\boldsymbol{n}, \\boldsymbol{m}) = \\tilde{\\gamma} (m_1)_{k_1} \\cdots (m_S)_{k_S} \\left[ \\delta_{\\boldsymbol{n}, \\boldsymbol{m}-\\boldsymbol{k}+\\boldsymbol{l}} - \\delta_{\\boldsymbol{n},\\boldsymbol{m}} \\right] \\] <p>\\((m_\\sigma)_{k_\\sigma} = m_\\sigma(m_\\sigma - 1)\\cdots(m_\\sigma - k_\\sigma + 1)\\) \u662f\u4e0b\u964d\u9636\u4e58\u5e42\uff0c\u4ee3\u8868\u7ec4\u5408\u9009\u62e9\u6570\u3002</p> <p>\\(\\tilde{\\gamma} = \\gamma / (\\prod_\\sigma k_\\sigma!)\\) \u662f\u5305\u542b\u4e86\u7ec4\u5408\u5bf9\u79f0\u56e0\u5b50\u7684\u901f\u7387\u5e38\u6570\u3002</p> <p>\\([...]\\) \u4e2d\u7684\u7b2c\u4e00\u9879 \\(\\delta_{\\boldsymbol{n}, \\boldsymbol{m}-\\boldsymbol{k}+\\boldsymbol{l}}\\) \u63cf\u8ff0\u4e86\u72b6\u6001\u4ece \\(\\boldsymbol{m}\\) \u8df3\u8f6c\u8fdb\u5165\u65b0\u72b6\u6001 \\(\\boldsymbol{n}\\) \u7684\u201c\u589e\u76ca\u201d\u8fc7\u7a0b\u3002</p> <p>\u7b2c\u4e8c\u9879 \\(-\\delta_{\\boldsymbol{n},\\boldsymbol{m}}\\) \u63cf\u8ff0\u4e86\u6982\u7387\u4ece\u539f\u72b6\u6001 \\(\\boldsymbol{m}\\) \u6d41\u51fa\u7684\u201c\u635f\u5931\u201d\u8fc7\u7a0b\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#32","title":"3.2 \u5218\u7ef4\u5c14\u7b97\u7b26\u7684\u901a\u7528\u5f62\u5f0f","text":"<p>\u5173\u952e\u7684\u4e00\u6b65\u662f\u5c06\u4e0a\u8ff0\u79bb\u6563\u7684\u8f6c\u79fb\u77e9\u9635\uff0c\u7ffb\u8bd1\u6210\u5728\u76f8\u5e72\u6001\u8868\u8c61\u4e0b\u4f5c\u7528\u4e8e\u8fde\u7eed\u51fd\u6570\u7684\u7b97\u7b26\u5f62\u5f0f\u3002\u901a\u8fc7\u5229\u7528\u521b\u751f\u7b97\u7b26 \\(a^\\dagger_\\sigma\\) \u548c\u6e6e\u706d\u7b97\u7b26 \\(a_\\sigma\\) \u7684\u4ee3\u6570\u6027\u8d28\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6781\u5176\u4f18\u7f8e\u7684\u901a\u7528\u516c\u5f0f\uff1a</p> \\[ \\hat{\\mathcal{Q}} = \\tilde{\\gamma} \\left( (a^\\dagger_1)^{k_1} \\cdots (a^\\dagger_S)^{k_S} \\right) \\left( a_1^{l_1} \\cdots a_S^{l_S} - a_1^{k_1} \\cdots a_S^{k_S} \\right) \\] <p>\u8fd9\u4e2a\u516c\u5f0f\u7684\u7ed3\u6784\u53ef\u4ee5\u88ab\u76f4\u89c2\u5730\u89e3\u8bfb\u4e3a\uff1a\u901f\u7387\u56e0\u5b50 \u00d7 (\u8df3\u8f6c\u64cd\u4f5c) \u3002</p> <p>\u901f\u7387\u56e0\u5b50 (Rate Factor): \\(\\tilde{\\gamma} (a^\\dagger_1)^{k_1} \\cdots (a^\\dagger_S)^{k_S}\\)</p> <p>\u8fd9\u90e8\u5206\u5bf9\u5e94\u4e8e\u53cd\u5e94\u7684\u5b8f\u89c2\u901f\u7387\u3002\u5728\u76f8\u5e72\u6001\u8868\u8c61\u4e2d\uff0c\u521b\u751f\u7b97\u7b26 \\(a^\\dagger_\\sigma\\) \u5728\u8def\u5f84\u79ef\u5206\u4e2d\u6700\u7ec8\u5bf9\u5e94\u4e8e\u8f85\u52a9\u573a \\(x_\\sigma\\)\u3002\u56e0\u6b64\uff0c\u8fd9\u90e8\u5206\u5728\u4f5c\u7528\u91cf\u4e2d\u5c06\u53d8\u4e3a \\(\\tilde{\\gamma} x_1^{k_1} \\cdots x_S^{k_S}\\)\uff0c\u8fd9\u7cbe\u786e\u5730\u518d\u73b0\u4e86\u786e\u5b9a\u6027\u5316\u5b66\u52a8\u529b\u5b66\u4e2d\u7684\u8d28\u91cf\u4f5c\u7528\u5b9a\u5f8b (Law of Mass Action) \u3002\u5b83\u8868\u660e\uff0c\u4e00\u4e2a\u53cd\u5e94\u53d1\u751f\u7684\u603b\u503e\u5411\u6027\uff0c\u6b63\u6bd4\u4e8e\u5404\u53cd\u5e94\u7269\u6d53\u5ea6\u7684\u5e42\u6b21\u4e58\u79ef\u3002</p> <p>\u8df3\u8f6c\u64cd\u4f5c (Jump Operation): \\((a_1^{l_1} \\cdots a_S^{l_S} - a_1^{k_1} \\cdots a_S^{k_S})\\)</p> <p>\u8fd9\u90e8\u5206\u662f\u6267\u884c\u53cd\u5e94\u7684\u6838\u5fc3\uff0c\u5b83\u7cbe\u786e\u5730\u7f16\u7801\u4e86\u7c92\u5b50\u6570\u5411\u91cf\u7684\u53d8\u5316\u3002\u5b83\u9996\u5148\u901a\u8fc7\u9879 \\(-a_1^{k_1} \\cdots a_S^{k_S}\\) \u6e6e\u706d\u6389\u53cd\u5e94\u7269\u6784\u6210\u7684\u6001\uff0c\u7136\u540e\u901a\u8fc7\u9879 \\(a_1^{l_1} \\cdots a_S^{l_S}\\) \u521b\u751f\u51fa\u4ea7\u7269\u6784\u6210\u7684\u6001\u3002\u8fd9\u4e00\u201c\u51cf\u4e00\u52a0\u201d\u7684\u7ed3\u6784\uff0c\u5bf9\u5e94\u4e86\u4e3b\u65b9\u7a0b\u4e2d\u7684\u201c\u635f\u5931-\u589e\u76ca\u201d\u5f62\u5f0f\u3002</p> <p>\u8fd9\u4e2a\u516c\u5f0f\u5c06\u5218\u7ef4\u5c14\u7b97\u7b26\u7684\u6784\u5efa\u53d8\u6210\u4e86\u4e00\u4e2a\u201c\u901a\u7528\u7f16\u8bd1\u5668\u201d\u3002\u4efb\u4f55\u4e00\u4e2a\u57fa\u4e8e\u7ecf\u9a8c\u89c2\u5bdf\u7684\u53cd\u5e94\u5217\u8868\uff08\u7269\u7406\u7684\u201c\u6e90\u4ee3\u7801\u201d\uff09\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u516c\u5f0f\u88ab\u673a\u68b0\u5730\u3001\u65e0\u6b67\u4e49\u5730\u7ffb\u8bd1\u6210\u4e00\u4e2a\u552f\u4e00\u7684\u6570\u5b66\u7b97\u7b26\uff08\u52a8\u529b\u5b66\u7684\u201c\u53ef\u6267\u884c\u6587\u4ef6\u201d\uff09\uff0c\u800c\u8fd9\u4e2a\u7b97\u7b26\u751f\u6210\u4e86\u7cfb\u7edf\u7684\u5168\u90e8\u968f\u673a\u52a8\u529b\u5b66\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#33","title":"3.3 \u5b9e\u4f8b\u5206\u6790\uff1a\u5c06\u89c4\u5219\u8f6c\u5316\u4e3a\u7b97\u7b26","text":"<p>\u901a\u8fc7\u6559\u6388\u5728\u8bfe\u4e0a\u7ed9\u51fa\u7684\u51e0\u4e2a\u7b80\u5355\u4f8b\u5b50\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u8fd9\u4e2a\u6784\u9020\u8fc7\u7a0b\u3002</p> <ol> <li>\u6b7b\u4ea1 (Death) \uff1a\\(A \\xrightarrow{\\mu} \\emptyset\\)</li> </ol> <p>\u8bc6\u522b: \u7269\u79cdA: \\(k_A = 1\\), \\(l_A = 0\\)\u3002\u901f\u7387 \\(\\tilde{\\gamma} = \\mu\\)\u3002</p> <p>\u5e94\u7528\u516c\u5f0f: \\(\\hat{\\mathcal{Q}}_{\\text{death}} = \\mu (a^\\dagger)^1 (a^0 - a^1) = \\mu a^\\dagger (1 - a)\\)\u3002</p> <ol> <li>\u7e41\u6b96 (Birth) \uff1a\\(B \\xrightarrow{\\sigma} B + B\\)</li> </ol> <p>\u8bc6\u522b : \u7269\u79cdB: \\(k_B = 1\\), \\(l_B = 2\\)\u3002\u901f\u7387 \\(\\tilde{\\gamma} = \\sigma\\)\u3002</p> <p>\u5e94\u7528\u516c\u5f0f : \\(\\hat{\\mathcal{Q}}_{\\text{birth}} = \\sigma (b^\\dagger)^1 (b^2 - b^1) = \\sigma b^\\dagger (b^2 - b)\\)\u3002</p> <ol> <li>\u6355\u98df (Predation) \uff1a\\(A + B \\xrightarrow{\\lambda} A + A\\)</li> </ol> <p>\u8bc6\u522b: \u7269\u79cdA: \\(k_A = 1, l_A = 2\\)\u3002\u7269\u79cdB: \\(k_B = 1, l_B = 0\\)\u3002\u901f\u7387 \\(\\tilde{\\gamma} = \\lambda\\)\u3002</p> <p>\u5e94\u7528\u516c\u5f0f: \\(\\hat{\\mathcal{Q}}_{\\text{pred}} = \\lambda (a^\\dagger)^1 (b^\\dagger)^1 (a^2 b^0 - a^1 b^1) = \\lambda a^\\dagger b^\\dagger (a^2 - ab)\\)\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u53cd\u5e94\u7684\u590d\u6742\u7cfb\u7edf\uff0c\u5176\u603b\u7684\u5218\u7ef4\u5c14\u7b97\u7b26\u5c31\u662f\u6240\u6709\u5355\u4e2a\u53cd\u5e94\u7b97\u7b26\u7684\u7b80\u5355\u52a0\u548c\uff1a \\(\\(\\hat{\\mathcal{Q}}_{\\text{total}} = \\sum_{\\text{all reactions}} \\hat{\\mathcal{Q}}_{\\text{reaction}}\\)\\) \u8fd9\u79cd\u6a21\u5757\u5316\u7684\u7279\u6027\u4f7f\u5f97\u8be5\u6846\u67b6\u6781\u5176\u5f3a\u5927\uff0c\u80fd\u591f\u7cfb\u7edf\u5730\u5904\u7406\u4efb\u610f\u590d\u6742\u7684\u53cd\u5e94\u7f51\u7edc\uff0c\u4e3a\u4e0b\u4e00\u8282\u5206\u6790\u201c\u77f3\u5934-\u526a\u5200-\u5e03\u201d\u6a21\u578b\u5960\u5b9a\u4e86\u57fa\u7840\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#4-may-leonard-","title":"4. May-Leonard\u6a21\u578b\u7684\u77f3\u5934-\u526a\u5200-\u5e03\u52a8\u529b\u5b66","text":"<p>\u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u4e00\u4e2a\u5f3a\u5927\u7684\u201c\u7f16\u8bd1\u5668\u201d\u88ab\u5efa\u7acb\u8d77\u6765\uff0c\u80fd\u591f\u5c06\u4efb\u610f\u53cd\u5e94\u7f51\u7edc\u7ffb\u8bd1\u6210\u5176\u5bf9\u5e94\u7684\u5218\u7ef4\u5c14\u7b97\u7b26\u3002\u73b0\u5728\uff0c\u662f\u5c06\u8fd9\u4e2a\u5f62\u5f0f\u4f53\u7cfb\u5e94\u7528\u5230\u4e00\u4e2a\u5177\u4f53\u7684\u3001\u975e\u5e73\u51e1\u7684\u751f\u6001\u5b66\u6a21\u578b\u4e0a\u7684\u65f6\u5019\u4e86\uff1aMay-Leonard\u6a21\u578b\u3002</p> <p>May-Leonard\u6a21\u578b\u7531\u751f\u6001\u5b66\u5bb6Robert May\u548cJoseph Leonard\u4e8e1975\u5e74\u5171\u540c\u63d0\u51fa\uff0c\u5176\u5386\u53f2\u80cc\u666f\u6e90\u4e8e\u5bf9\"\u7ade\u4e89\u6392\u65a5\u539f\u7406\"\u7684\u53cd\u601d\u2014\u2014\u5373\u751f\u6001\u4f4d\u5b8c\u5168\u76f8\u540c\u7684\u7269\u79cd\u65e0\u6cd5\u7a33\u5b9a\u5171\u5b58\u3002\u8be5\u6a21\u578b\u7684\u7269\u7406\u672c\u8d28\u662f\u901a\u8fc7\u6784\u5efa\u4e00\u4e2a\u4e09\u7ef4\uff08\u6216\u66f4\u9ad8\u7ef4\uff09\u7684\u975e\u7ebf\u6027\u52a8\u529b\u7cfb\u7edf\uff08\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\uff09\uff0c\u63cf\u8ff0\u4e09\u79cd\u7269\u79cd\u95f4\u5b58\u5728\u7684\u5faa\u73af\u7ade\u4e89\u5173\u7cfb\uff08\u5373A\u80dcB\u3001B\u80dcC\u3001C\u80dcA\uff0c\u5f62\u6210\"\u77f3\u5934-\u526a\u5200-\u5e03\"\u5f0f\u7684\u975e\u4f20\u9012\u6027\u7ade\u4e89\uff09\uff0c\u5176\u6838\u5fc3\u7279\u5f81\u662f\u5728\u786e\u5b9a\u6027\u7684\u5fae\u5206\u65b9\u7a0b\u6846\u67b6\u4e0b\uff0c\u7531\u4e8e\u4e0d\u5b58\u5728\u7a33\u5b9a\u7684\u4e0d\u52a8\u70b9\uff0c\u7cfb\u7edf\u4f1a\u5c55\u73b0\u51fa\u6301\u7eed\u632f\u8361\u548c\u7269\u79cd\u4e30\u5ea6\u7684\u81ea\u53d1\u968f\u673a\u4ea4\u66ff\u7b49\u975e\u5e73\u8861\u884c\u4e3a\u3002\u8be5\u6a21\u578b\u7684\u5177\u4f53\u5e94\u7528\u5df2\u8fdc\u8d85\u7406\u8bba\u751f\u6001\u5b66\uff0c\u6210\u4e3a\u89e3\u91ca\u751f\u7269\u591a\u6837\u6027\u548c\u7a7a\u95f4\u81ea\u7ec4\u7ec7\u6a21\u5f0f\u7684\u5178\u8303\u5de5\u5177\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5fae\u751f\u7269\u5b9e\u9a8c\u7cfb\u7edf\uff08\u5982\u5927\u80a0\u6746\u83cc\u7684\u5faa\u73af\u7ade\u4e89\uff09\u3001\u73ca\u745a\u7901\u751f\u6001\u7cfb\u7edf\u6f14\u5316\u5206\u6790\uff0c\u4ee5\u53ca\u6f14\u5316\u535a\u5f08\u8bba\u4e2d\u7ef4\u6301\u5408\u4f5c\u884c\u4e3a\u7684\u673a\u5236\u7814\u7a76\uff0c\u5e76\u4e3a\u975e\u7ebf\u6027\u52a8\u529b\u5b66\u548c\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u63d0\u4f9b\u4e86\u5c55\u793a\u4e2d\u6027\u7a33\u5b9a\u6027\u3001\u6781\u9650\u73af\u548c\u968f\u673a\u6027\u5982\u4f55\u5171\u540c\u7ef4\u6301\u751f\u7269\u591a\u6837\u6027\u7684\u5173\u952e\u6570\u5b66\u6a21\u578b\u3002 </p> <p>\u8fd9\u4e2a\u7b80\u5355\u7684\u6e38\u620f\u89c4\u5219\u2014\u2014\u77f3\u5934\u80dc\u526a\u5200\uff0c\u526a\u5200\u80dc\u5e03\uff0c\u5e03\u80dc\u77f3\u5934\u2014\u2014\u5728\u81ea\u7136\u754c\u4e2d\u6709\u7740\u5e7f\u6cdb\u7684\u7c7b\u6bd4\u3002\u4f8b\u5982\uff0c\u5728\u67d0\u4e9b\u5927\u80a0\u6746\u83cc\u83cc\u682a\u4e2d\uff0c\u4e00\u4e9b\u83cc\u682a\u4ea7\u751f\u6bd2\u7d20\uff08\u77f3\u5934\uff09\uff0c\u6740\u6b7b\u654f\u611f\u83cc\u682a\uff08\u526a\u5200\uff09\uff1b\u654f\u611f\u83cc\u682a\u751f\u957f\u901f\u5ea6\u66f4\u5feb\uff0c\u80fd\u80dc\u8fc7\u4ea7\u751f\u6bd2\u7d20\u4f46\u751f\u957f\u7f13\u6162\u7684\u83cc\u682a\uff08\u5e03\uff09\uff1b\u800c\u7b2c\u4e09\u79cd\u83cc\u682a\u5219\u5bf9\u6bd2\u7d20\u514d\u75ab\uff0c\u4f46\u751f\u957f\u901f\u5ea6\u4e0d\u5982\u654f\u611f\u83cc\u682a\uff08\u5e03\u80dc\u77f3\u5934\uff09\u3002</p> <p></p> <p>May-Leonard\u6a21\u578b\u56e0\u80fd\u591f\u4ea7\u751f\u4e30\u5bcc\u7684\u3001\u8fdc\u79bb\u5e73\u8861\u6001\u7684\u65f6\u7a7a\u7ed3\u6784\u800c\u95fb\u540d\uff0c\u662f\u68c0\u9a8c\u968f\u673a\u79cd\u7fa4\u52a8\u529b\u5b66\u7406\u8bba\u7684\u7406\u60f3\u201c\u8bd5\u91d1\u77f3\u201d\u3002</p> <p>\u6a21\u578b\u5305\u542b\u4e09\u4e2a\u7269\u79cd A\u3001B\u3001C\uff08\u53ef\u7c7b\u6bd4\u4e3a\u77f3\u5934\u3001\u526a\u5200\u3001\u5e03\uff09\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u9075\u5faa\u5faa\u73af\u4e3b\u5bfc\u7684\u89c4\u5219\u3002\u6839\u636e\u6559\u6388\u5728\u8bfe\u5802\u4e0a\u5c55\u793a\u7684PPT\uff0c\u8fd9\u4e9b\u76f8\u4e92\u4f5c\u7528\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff1a</p> <p></p> <ol> <li> <p>\u7ade\u4e89 (Contest Competition / Predation): \u6355\u98df\u8005\u4e0e\u730e\u7269\u76f8\u9047\uff0c\u730e\u7269\u88ab\u79fb\u9664\u3002</p> <ul> <li>\\(A + B \\xrightarrow{\\sigma} A + \\emptyset\\) (A \u6355\u98df B)</li> <li>\\(B + C \\xrightarrow{\\sigma} B + \\emptyset\\) (B \u6355\u98df C)</li> <li>\\(C + A \\xrightarrow{\\sigma} C + \\emptyset\\) (C \u6355\u98df A)</li> </ul> </li> <li> <p>\u7e41\u6b96 (Scramble Competition / Reproduction): \u4e2a\u4f53\u5728\u53ef\u7528\u7a7a\u95f4\uff08\u7a7a\u683c \\(\\emptyset\\)\uff09\u4e0a\u4ea7\u751f\u540e\u4ee3\u3002</p> <ul> <li>\\(A + \\emptyset \\xrightarrow{\\mu} A + A\\)</li> <li>\\(B + \\emptyset \\xrightarrow{\\mu} B + B\\)</li> <li>\\(C + \\emptyset \\xrightarrow{\\mu} C + C\\)</li> </ul> </li> <li> <p>\u79fb\u52a8 (Mobility / Diffusion): \u4e2a\u4f53\u5728\u7a7a\u95f4\u4e2d\u79fb\u52a8\uff0c\u4ea4\u6362\u4f4d\u7f6e\u3002</p> <ul> <li>\\(A_i \\leftrightarrow A_j\\) (\u6b64\u5904 \\(i, j\\) \u4ee3\u8868\u7a7a\u95f4\u683c\u70b9)</li> </ul> </li> </ol>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#41","title":"4.1 \u5e73\u5747\u573a\u52a8\u529b\u5b66\uff1a\u786e\u5b9a\u6027\u7684\u201c\u6b7b\u4ea1\u87ba\u65cb\u201d","text":"<p>\u5728\u6df1\u5165\u7814\u7a76\u5b8c\u6574\u7684\u968f\u673a\u52a8\u529b\u5b66\u4e4b\u524d\uff0c\u9996\u5148\u5206\u6790\u4e00\u4e2a\u7b80\u5316\u7684\u7248\u672c\uff1a\u5e73\u5747\u573a\uff08mean-field\uff09\u6216\u5145\u5206\u6df7\u5408\uff08well-mixed\uff09 \u7cfb\u7edf\u3002\u8fd9\u4e2a\u8fd1\u4f3c\u5047\u8bbe\u7cfb\u7edf\u4e2d\u7684\u7c92\u5b50\u53ef\u4ee5\u77ac\u65f6\u5730\u4e0e\u4efb\u4f55\u5176\u4ed6\u7c92\u5b50\u76f8\u4e92\u4f5c\u7528\uff0c\u4ece\u800c\u5ffd\u7565\u4e86\u7a7a\u95f4\u7ed3\u6784\u548c\u968f\u673a\u6da8\u843d\u3002 </p> <p>\u6839\u636e\u8d28\u91cf\u4f5c\u7528\u5b9a\u5f8b\uff0c\u53ef\u4ee5\u5199\u51fa\u79cd\u7fa4\u5bc6\u5ea6 \\(a, b, c\\) \u7684\u786e\u5b9a\u6027\u901f\u7387\u65b9\u7a0b\uff1a</p> \\[ \\partial_t a = a[\\mu(1 - \\rho) - \\sigma c] \\\\ \\partial_t b = b[\\mu(1 - \\rho) - \\sigma a] \\\\ \\partial_t c = c[\\mu(1 - \\rho) - \\sigma b] \\] <ul> <li>\\(\\rho = a+b+c\\) \u662f\u603b\u5bc6\u5ea6\u3002</li> <li>\\(a\\mu(1 - \\rho)\\) \u4ee3\u8868\u7269\u79cdA\u5728\u53ef\u7528\u7a7a\u95f4 \\((1 - \\rho)\\) \u4e2d\u7684\u903b\u8f91\u65af\u8482\u589e\u957f\uff08\u7e41\u6b96\u9879\uff09\u3002</li> <li>\\(-\\sigma a c\\) \u4ee3\u8868\u7269\u79cdA\u88ab\u5176\u6355\u98df\u8005C\u6240\u6d88\u8017\uff08\u7ade\u4e89\u9879\uff09\u3002</li> </ul> <p>\u5bf9\u8fd9\u4e2a\u52a8\u529b\u5b66\u7cfb\u7edf\u8fdb\u884c\u7a33\u5b9a\u6027\u5206\u6790\uff0c\u53ef\u4ee5\u627e\u5230\u51e0\u4e2a\u4e0d\u52a8\u70b9\uff1a</p> <ul> <li> <p>\u5b8c\u5168\u706d\u7edd\u4e0d\u52a8\u70b9\uff1a\\((0, 0, 0)\\)\u3002</p> </li> <li> <p>\u5355\u7269\u79cd\u5438\u6536\u4e0d\u52a8\u70b9\uff1a\\((1, 0, 0), (0, 1, 0), (0, 0, 1)\\)\u3002\u8fd9\u4e9b\u662f\u7a33\u5b9a\u7684\u4e0d\u52a8\u70b9\u3002</p> </li> <li> <p>\u5171\u5b58\u4e0d\u52a8\u70b9\uff1a\u5728\u76f8\u7a7a\u95f4\u7684\u4e2d\u5fc3\u5b58\u5728\u4e00\u4e2a\u4e09\u7269\u79cd\u5171\u5b58\u7684\u4e0d\u52a8\u70b9\uff0c\u4f46\u5b83\u662f\u4e0d\u7a33\u5b9a\u7684\u3002</p> </li> </ul> <p>\u7269\u7406\u610f\u4e49\uff1a\u5f02\u5bbf\u73af</p> <p>\u7531\u4e8e\u4e2d\u5fc3\u5171\u5b58\u70b9\u4e0d\u7a33\u5b9a\uff0c\u4efb\u4f55\u5fae\u5c0f\u7684\u6270\u52a8\u90fd\u4f1a\u4f7f\u7cfb\u7edf\u72b6\u6001\u79bb\u5f00\u8fd9\u4e2a\u70b9\u3002\u7cfb\u7edf\u7684\u76f8\u7a7a\u95f4\u8f68\u8ff9\u5448\u73b0\u51fa\u4e00\u79cd\u5411\u5916\u53d1\u6563\u7684\u87ba\u65cb\u7ebf\uff0c\u8fd9\u79cd\u7ed3\u6784\u88ab\u79f0\u4e3a\u5f02\u5bbf\u73af (heteroclinic cycle) \u3002\u7269\u7406\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u79cd\u7fa4\u6570\u91cf\u4f1a\u7ecf\u5386\u632f\u5e45\u8d8a\u6765\u8d8a\u5927\u7684\u9707\u8361\uff1aA\u7684\u6570\u91cf\u589e\u52a0\uff0c\u5bfc\u81f4\u5176\u730e\u7269B\u51cf\u5c11\uff1bB\u7684\u51cf\u5c11\u4f7f\u5f97C\u7684\u5929\u654c\u51cf\u5c11\uff0cC\u5f00\u59cb\u589e\u52a0\uff1bC\u7684\u589e\u52a0\u53c8\u5bfc\u81f4A\u7684\u51cf\u5c11\uff0c\u5b8c\u6210\u4e00\u4e2a\u5faa\u73af\u3002</p> <p>\u5728\u786e\u5b9a\u6027\u7684\u5e73\u5747\u573a\u63cf\u8ff0\u4e2d\uff0c\u8fd9\u79cd\u632f\u8361\u4f1a\u65e0\u9650\u6301\u7eed\u4e0b\u53bb\uff0c\u632f\u5e45\u8d8a\u6765\u8d8a\u5927\uff0c\u6700\u7ec8\u8f68\u8ff9\u4f1a\u65e0\u9650\u8d8b\u8fd1\u4e8e\u7531\u4e09\u4e2a\u5438\u6536\u6001\u6784\u6210\u7684\u8fb9\u754c\uff0c\u5bfc\u81f4\u5176\u4e2d\u4e24\u4e2a\u7269\u79cd\u706d\u7edd\uff0c\u53ea\u5269\u4e0b\u4e00\u4e2a\u80dc\u5229\u8005\u3002\u5728\u6709\u9650\u4f46\u5f88\u5927\u7684\u79cd\u7fa4\u4e2d\uff0c\u53ef\u4ee5\u4f30\u7b97\u51fa\u8fd9\u79cd\u968f\u673a\u706d\u7edd\u53d1\u751f\u7684\u65f6\u95f4\u5c3a\u5ea6\u4e3a \\(T \\sim \\ln N\\)\u3002</p> <p>\u8bfe\u5802\u5c55\u793a\u7684\u89c6\u9891</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#42","title":"4.2 \u7a7a\u95f4\u968f\u673a\u52a8\u529b\u5b66\uff1a\u87ba\u65cb\u6ce2\u7684\u6d8c\u73b0\u4e0e\u7269\u79cd\u5171\u5b58","text":"<p>\u5e73\u5747\u573a\u7406\u8bba\uff084.1\u8282\uff09\u4e3a\u6211\u4eec\u63cf\u7ed8\u4e86\u7cfb\u7edf\u7684\u201c\u9aa8\u67b6\u201d\u2014\u2014\u4e00\u4e2a\u5bfc\u5411\u7269\u79cd\u706d\u7edd\u7684\u786e\u5b9a\u6027\u201c\u6b7b\u4ea1\u87ba\u65cb\u201d\u3002\u7136\u800c\uff0c\u8fd9\u4e2a\u7406\u8bba\u6709\u4e24\u4e2a\u81f4\u547d\u7684\u7b80\u5316\uff1a\u5b83\u5ffd\u7565\u4e86\u4eba\u53e3\u566a\u58f0\uff08\u6709\u9650\u79cd\u7fa4\u4e2d\u7684\u968f\u673a\u751f\u706d\u4e8b\u4ef6\uff09\u548c\u7a7a\u95f4\u7ed3\u6784\uff08\u76f8\u4e92\u4f5c\u7528\u7684\u5c40\u57df\u6027\uff09\u3002</p> <p>\u4e3a\u4e86\u63a2\u7a76\u8fd9\u4e24\u4e2a\u56e0\u7d20\u5982\u4f55\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u7cfb\u7edf\u7684\u547d\u8fd0\uff0c\u6211\u4eec\u9700\u8981\u4ece0\u7ef4\u7684\u201c\u5145\u5206\u6df7\u5408\u201d\u6a21\u578b\u5347\u7ea7\u52302\u7ef4\u7684\u7a7a\u95f4\u968f\u673a\u6a21\u578b\u3002\u6211\u4eec\u5c06\u4e0d\u518d\u8ffd\u8e2a\u6574\u4e2a\u7cfb\u7edf\u7684\u7269\u79cd\u603b\u6570\uff0c\u800c\u662f\u6a21\u62df\u5728\u4e00\u4e2a\u4e8c\u7ef4\u7f51\u683c\u4e0a\uff0c\u6bcf\u4e2a\u683c\u70b9\u88ab\u4f55\u79cd\u7269\u79cd\u5360\u636e\uff0c\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u4e0e\u90bb\u5c45\u53d1\u751f\u53cd\u5e94\u3002\u4f7f\u7528\u4e00\u79cd\u5143\u80de\u81ea\u52a8\u673a\uff08Cellular Automaton\uff09\u7684\u65b9\u6cd5\uff0c\u5b83\u80fd\u6355\u6349\u8fd9\u79cd\u5c40\u57df\u76f8\u4e92\u4f5c\u7528\u7684\u52a8\u529b\u5b66\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_2","title":"\u7a7a\u95f4\u6a21\u62df\u65b9\u6cd5\u4e0e\u4ee3\u7801","text":"<p>\u4e0eGillespie\u7b97\u6cd5\u8ffd\u8e2a\u6574\u4e2a\u7cfb\u7edf\u7684\u4e0b\u4e00\u6b21\u53cd\u5e94\u4e0d\u540c\uff0c\u5143\u80de\u81ea\u52a8\u673a\u5728\u79bb\u6563\u7684\u65f6\u95f4\u6b65\u4e2d\uff0c\u6839\u636e\u6bcf\u4e2a\u683c\u70b9\u5468\u56f4\u7684\u90bb\u5c45\u72b6\u6001\u6765\u66f4\u65b0\u8be5\u683c\u70b9\u7684\u72b6\u6001\u3002\u5176\u6838\u5fc3\u89c4\u5219\u5982\u4e0b\uff1a</p> <ol> <li>\u521d\u59cb\u5316\uff1a\u521b\u5efa\u4e00\u4e2a\u4e8c\u7ef4\u7f51\u683c\uff0c\u5e76\u5728\u6bcf\u4e2a\u683c\u70b9\u4e0a\u968f\u673a\u653e\u7f6e\u4e00\u4e2a\u7269\u79cd\uff08A, B, C\uff09\u6216\u7559\u4e3a\u7a7a\u4f4d\uff08\u2205\uff09\u3002</li> <li>\u6f14\u5316\uff1a\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\uff0c\u5bf9\u7f51\u683c\u4e0a\u6240\u6709\u683c\u70b9\u540c\u65f6\u8ba1\u7b97\u5176\u72b6\u6001\u53d8\u5316\uff1a<ul> <li>\u88ab\u6355\u98df\uff1a\u4e00\u4e2a\u683c\u70b9\u88ab\u5176\u201c\u5929\u654c\u201d\u90bb\u5c45\u5305\u56f4\u5f97\u8d8a\u591a\uff0c\u5b83\u5728\u8fd9\u4e00\u6b65\u53d8\u6210\u7a7a\u683c\u7684\u6982\u7387\u5c31\u8d8a\u5927\u3002</li> <li>\u7e41\u6b96\uff1a\u4e00\u4e2a\u7a7a\u683c\u88ab\u67d0\u4e00\u7269\u79cd\u7684\u90bb\u5c45\u5305\u56f4\u5f97\u8d8a\u591a\uff0c\u5b83\u5728\u8fd9\u4e00\u6b65\u88ab\u8be5\u7269\u79cd\u5360\u636e\u7684\u6982\u7387\u5c31\u8d8a\u5927\u3002</li> <li>\u79fb\u52a8\uff1a\u683c\u70b9\u4e0a\u7684\u4e2a\u4f53\u6709\u4e00\u5b9a\u6982\u7387\u4e0e\u90bb\u8fd1\u7684\u7a7a\u683c\u4ea4\u6362\u4f4d\u7f6e\u3002</li> </ul> </li> <li>\u66f4\u65b0\uff1a\u5c06\u6240\u6709\u8ba1\u7b97\u51fa\u7684\u53d8\u5316\u5e94\u7528\u5230\u4e00\u4e2a\u65b0\u7f51\u683c\u4e0a\uff0c\u5b8c\u6210\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u6f14\u5316\u3002</li> </ol> <p>\u4e0b\u9762\u7684Python\u4ee3\u7801\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u7a7a\u95f4\u6a21\u578b\uff0c\u5e76\u7ecf\u8fc7\u4f18\u5316\uff0c\u80fd\u591f\u7a33\u5b9a\u5730\u590d\u73b0\u8bfe\u5802\u4e0a\u5c55\u793a\u7684\u87ba\u65cb\u6ce2\u52a8\u753b\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\nfrom matplotlib.colors import ListedColormap\nfrom scipy.signal import convolve2d\n\ndef simulate_spatial_rps_spirals(grid_size, rates, steps):\n    \"\"\"\n    Simulates the spatial Rock-Paper-Scissors model.\n\n    Args:\n        grid_size (int): The width and height of the grid.\n        rates (dict): A dictionary of probabilities {'repro', 'pred', 'mobil'}.\n        steps (int): The number of animation frames to generate.\n\n    Returns:\n        list: A history of the grid states for animation.\n    \"\"\"\n    # Grid states: 0=Empty, 1=A (Rock/Red), 2=B (Paper/Blue), 3=C (Scissors/Yellow)\n    grid = np.random.randint(0, 4, size=(grid_size, grid_size))\n    history = [grid.copy()]\n\n    # Kernel for counting neighbors\n    kernel = np.array([[1, 1, 1],\n                       [1, 0, 1],\n                       [1, 1, 1]])\n\n    for step in range(steps):\n        # Create a copy to store the changes for this step\n        new_grid = grid.copy()\n\n        # --- 1. Reaction Phase ---\n        # Count neighbors for each species\n        neighbors_A = convolve2d((grid == 1), kernel, mode='same', boundary='wrap')\n        neighbors_B = convolve2d((grid == 2), kernel, mode='same', boundary='wrap')\n        neighbors_C = convolve2d((grid == 3), kernel, mode='same', boundary='wrap')\n\n        # Identify predators for each species\n        # Predators: C(3) for A(1), A(1) for B(2), B(2) for C(3)\n        predators_for_A = neighbors_C\n        predators_for_B = neighbors_A\n        predators_for_C = neighbors_B\n\n        # Calculate probabilities of events for each cell\n        # Predation happens to non-empty cells\n        prob_predation_A = rates['pred'] * predators_for_A\n        prob_predation_B = rates['pred'] * predators_for_B\n        prob_predation_C = rates['pred'] * predators_for_C\n\n        # Reproduction happens in empty cells\n        prob_repro_A = rates['repro'] * neighbors_A\n        prob_repro_B = rates['repro'] * neighbors_B\n        prob_repro_C = rates['repro'] * neighbors_C\n\n        # Generate random numbers for all cells at once\n        rand_field = np.random.rand(grid_size, grid_size)\n\n        # Apply predation rules\n        new_grid[(grid == 1) &amp; (rand_field &lt; prob_predation_A)] = 0\n        new_grid[(grid == 2) &amp; (rand_field &lt; prob_predation_B)] = 0\n        new_grid[(grid == 3) &amp; (rand_field &lt; prob_predation_C)] = 0\n\n        # Apply reproduction rules (only to cells that are still empty)\n        # Find empty cells and rank reproduction probabilities\n        empty_mask = (new_grid == 0)\n        repro_chances = np.stack([prob_repro_A, prob_repro_B, prob_repro_C], axis=-1)\n\n        # The species with the most neighbors has the best chance to reproduce\n        colonizer = np.argmax(repro_chances, axis=-1) + 1\n\n        # Check if the max probability is &gt; 0 and beats a random threshold\n        max_prob = np.max(repro_chances, axis=-1)\n        new_grid[empty_mask &amp; (rand_field &lt; max_prob)] = colonizer[empty_mask &amp; (rand_field &lt; max_prob)]\n\n        # --- 2. Mobility Phase ---\n        # A fraction of individuals try to move into empty spaces\n        for _ in range(int(grid_size * grid_size * rates['mobil'])):\n            r, c = np.random.randint(0, grid_size, 2)\n            # Only non-empty sites can move\n            if new_grid[r, c] != 0:\n                # Pick a random neighbor\n                dr, dc = [(0,1), (0,-1), (1,0), (-1,0)][np.random.randint(4)]\n                nr, nc = (r + dr) % grid_size, (c + dc) % grid_size\n                # If neighbor is empty, swap\n                if new_grid[nr, nc] == 0:\n                    new_grid[r, c], new_grid[nr, nc] = new_grid[nr, nc], new_grid[r, c]\n\n        grid = new_grid\n        history.append(grid.copy())\n\n        if (step + 1) % 50 == 0:\n            print(f\"Step {step + 1}/{steps} completed.\")\n\n    return history\n\n# --- Simulation Parameters ---\nGRID_SIZE = 150\n# These rates are chosen to favor spiral formation\nRATES = {'repro': 0.1, 'pred': 0.3, 'mobil': 0.05}\nANIMATION_STEPS = 500\n\n# --- Run Simulation ---\nprint(\"Starting spatial simulation for spirals...\")\nsimulation_history = simulate_spatial_rps_spirals(GRID_SIZE, RATES, ANIMATION_STEPS)\nprint(\"Simulation finished. Creating animation...\")\n\n# --- Create and Save Animation ---\nfig, ax = plt.subplots(figsize=(8, 8))\ncmap = ListedColormap(['black', 'red', 'blue', 'yellow'])\nim = ax.imshow(simulation_history[0], cmap=cmap, interpolation='nearest', vmin=0, vmax=3)\nax.set_xticks([])\nax.set_yticks([])\ntitle = ax.set_title(\"Spatial Rock-Paper-Scissors (Step 0)\")\n\ndef update(frame):\n    im.set_array(simulation_history[frame])\n    title.set_text(f\"Spatial Rock-Paper-Scissors (Step {frame})\")\n    return [im, title]\n\nani = animation.FuncAnimation(fig, update, frames=len(simulation_history), interval=30, blit=True)\nani.save('spatial_rps_spirals.gif', writer='pillow', fps=30)\nprint(\"Animation saved as 'spatial_rps_spirals.gif'\")\nplt.show()\n</code></pre> <p></p> <p>1.\u4ece\u6df7\u4e71\u5230\u6709\u5e8f\uff1a\u6a21\u62df\u4ece\u4e00\u4e2a\u968f\u673a\u5206\u5e03\u7684\u201c\u6912\u76d0\u566a\u58f0\u201d\u72b6\u6001\u5f00\u59cb\u3002\u5728\u77ed\u65f6\u95f4\u5185\uff0c\u7269\u79cd\u5f00\u59cb\u5f62\u6210\u5c0f\u7247\u7684\u805a\u96c6\u533a\u3002</p> <p>2.\u8ffd\u9010\u6ce2\u524d\u7684\u5f62\u6210\uff1a\u5728\u4e0d\u540c\u7269\u79cd\u805a\u96c6\u533a\u7684\u8fb9\u754c\u4e0a\uff0c\u6355\u98df\u53cd\u5e94\u5f00\u59cb\u53d1\u751f\u3002\u4f1a\u770b\u5230\u4e00\u4e2a\u7ea2\u8272\u7684\u201c\u6ce2\u524d\u201d\u5f00\u59cb\u4fb5\u8680\u84dd\u8272\u7684\u533a\u57df\uff0c\u540c\u65f6\u84dd\u8272\u7684\u6ce2\u524d\u4fb5\u8680\u9ec4\u8272\u7684\u533a\u57df\uff0c\u9ec4\u8272\u7684\u6ce2\u524d\u53c8\u53cd\u8fc7\u6765\u4fb5\u8680\u7ea2\u8272\u7684\u533a\u57df\uff0c\u5f62\u6210\u4e86\u4e00\u6761\u201c\u8ffd-\u9003\u201d\u7684\u52a8\u6001\u94fe\u6761\u3002</p> <p>3.\u87ba\u65cb\u6ce2\u7684\u6d8c\u73b0\uff1a\u7531\u4e8e\u968f\u673a\u6da8\u843d\uff0c\u8fd9\u4e9b\u5e73\u76f4\u7684\u6ce2\u524d\u4f1a\u53d8\u5f97\u4e0d\u7a33\u5b9a\u5e76\u5f00\u59cb\u5377\u66f2\u3002\u6700\u7ec8\uff0c\u5b83\u4eec\u4f1a\u81ea\u7ec4\u7ec7\u5730\u5f62\u6210\u5b8f\u4f1f\u3001\u7a33\u5b9a\u4f20\u64ad\u7684\u87ba\u65cb\u6ce2\u3002\u87ba\u65cb\u6ce2\u7684\u4e2d\u5fc3\u50cf\u4e00\u4e2a\u8d77\u640f\u70b9\uff0c\u4e0d\u65ad\u5730\u5411\u5916\u53d1\u5c04\u5faa\u73af\u7684\u7269\u79cd\u6ce2\u3002</p> <p>\u4e0e\u5e73\u5747\u573a\u548c\u5145\u5206\u6df7\u5408\u6a21\u578b\u6700\u7ec8\u90fd\u5bfc\u5411\u7269\u79cd\u706d\u7edd\u4e0d\u540c\uff0c\u7a7a\u95f4\u6a21\u578b\u901a\u8fc7\u5f62\u6210\u87ba\u65cb\u6ce2\uff0c\u5b9e\u73b0\u4e86\u7269\u79cd\u7684\u7a33\u5b9a\u5171\u5b58\u3002\u4e3a\u4ec0\u4e48\u7a7a\u95f4\u6709\u5982\u6b64\u9b54\u529b\uff1f</p> <ul> <li> <p>\u5c40\u57df\u6027\u521b\u9020\u201c\u907f\u96be\u6240\u201d\uff08Refuges\uff09\uff1a\u5728\u7a7a\u95f4\u6a21\u578b\u4e2d\uff0c\u6355\u98df\u8005\u53ea\u80fd\u653b\u51fb\u5b83\u7684\u76f4\u63a5\u90bb\u5c45\u3002\u8fd9\u610f\u5473\u7740\uff0c\u8fdc\u79bb\u5176\u5929\u654c\u7684\u7269\u79cd\u7fa4\u4f53\u53ef\u4ee5\u5b89\u5168\u5730\u5b58\u5728\u4e8e\u201c\u907f\u96be\u6240\u201d\u4e2d\u3002\u4e00\u4e2a\u7269\u79cd\u5e76\u4e0d\u4f1a\u9762\u4e34\u6765\u81ea\u6574\u4e2a\u7cfb\u7edf\u4e2d\u6240\u6709\u5929\u654c\u7684\u201c\u56f4\u527f\u201d\u3002</p> </li> <li> <p>\u87ba\u65cb\u6ce2\u662f\u52a8\u6001\u7684\u907f\u96be\u6240\uff1a\u87ba\u65cb\u6ce2\u7ed3\u6784\u662f\u4e00\u79cd\u52a8\u6001\u7684\u3001\u81ea\u6211\u7ef4\u6301\u7684\u907f\u96be\u6240\u3002\u6ce2\u7684\u4f20\u64ad\u786e\u4fdd\u4e86\u6ca1\u6709\u4e00\u4e2a\u7269\u79cd\u53ef\u4ee5\u5360\u636e\u6574\u4e2a\u7a7a\u95f4\uff0c\u603b\u6709\u730e\u7269\u80fd\u201c\u9003\u201d\u5230\u6355\u98df\u8005\u5c1a\u672a\u5230\u8fbe\u7684\u533a\u57df\uff0c\u4ece\u800c\u4e3a\u7269\u79cd\u7684\u5ef6\u7eed\u63d0\u4f9b\u4e86\u673a\u4f1a\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0c\u7a7a\u95f4\u7ef4\u5ea6\u5e76\u975e\u4e00\u4e2a\u53ef\u6709\u53ef\u65e0\u7684\u7ec6\u8282\uff0c\u5b83\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u4e86\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u884c\u4e3a\u548c\u6700\u7ec8\u547d\u8fd0\uff0c\u5c06\u4e00\u4e2a\u6ce8\u5b9a\u4f1a\u4e27\u5931\u591a\u6837\u6027\u7684\u7cfb\u7edf\uff0c\u53d8\u6210\u4e86\u4e00\u4e2a\u53ef\u4ee5\u7ef4\u6301\u52a8\u6001\u5e73\u8861\u3001\u7269\u79cd\u5171\u5b58\u7684\u590d\u6742\u751f\u6001\u7cfb\u7edf\u3002</p> <p>\u5728\u4e0b\u4e00\u8282\uff0c\u5c06\u6b63\u5f0f\u628a\u7a7a\u95f4\u7ef4\u5ea6\u5f15\u5165\u6211\u4eec\u7684\u7406\u8bba\u6846\u67b6\uff0c\u4e3a\u7406\u89e3\u8fd9\u4e9b\u5728\u6a21\u62df\u4e2d\u770b\u5230\u7684\u3001\u7f8e\u4e3d\u7684\u87ba\u65cb\u6ce2\u7b49\u65f6\u7a7a\u6591\u56fe\u7684\u5f62\u6210\u673a\u5236\u5960\u5b9a\u57fa\u7840\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#5","title":"5. \u5728\u7406\u8bba\u4e2d\u5f15\u5165\u7a7a\u95f4\uff1a\u6269\u6563\u4e0e\u5c40\u57df\u6027","text":"<p>\u57284.2\u8282\u7684\u6570\u503c\u6a21\u62df\u4e2d\uff0c\u770b\u5230\u4e86\u5f53\u5f15\u5165\u7a7a\u95f4\u7ef4\u5ea6\u540e\uff0c\u539f\u672c\u5728\u201c\u5145\u5206\u6df7\u5408\u201d\u7cfb\u7edf\u4e2d\u6ce8\u5b9a\u706d\u7edd\u7684\u4e09\u4e2a\u7269\u79cd\uff0c\u901a\u8fc7\u5f62\u6210\u87ba\u65cb\u6ce2\u800c\u5b9e\u73b0\u4e86\u7a33\u5b9a\u7684\u5171\u5b58\u3002\u8fd9\u8868\u660e\uff0c\u7a7a\u95f4\u5e76\u975e\u4e00\u4e2a\u53ef\u6709\u53ef\u65e0\u7684\u7ec6\u8282\uff0c\u800c\u662f\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u7cfb\u7edf\u5b8f\u89c2\u884c\u4e3a\u548c\u6700\u7ec8\u547d\u8fd0\u7684\u5173\u952e\u56e0\u7d20\u3002</p> <p>\u56e0\u6b64\uff0c\u4e3a\u4e86\u8ba9\u8def\u5f84\u79ef\u5206\u7406\u8bba\u80fd\u591f\u63cf\u8ff0\u8fd9\u4e9b\u4e30\u5bcc\u7684\u65f6\u7a7a\u73b0\u8c61\uff0c\u5fc5\u987b\u5c06\u7a7a\u95f4\u7ed3\u6784\u548c\u5c40\u57df\u76f8\u4e92\u4f5c\u7528 (local interactions) \u6b63\u5f0f\u5730\u7eb3\u5165\u6a21\u578b\u3002\u8fd9\u8282\u8bfe\u7684\u76ee\u6807\uff0c\u5c31\u662f\u5c06\u4e4b\u524d\u53ea\u8003\u8651\u603b\u7c92\u5b50\u6570\u76840\u7ef4\u7406\u8bba\uff0c\u6269\u5c55\u4e3a\u4e00\u4e2a\u5b9a\u4e49\u5728\u7a7a\u95f4\u683c\u70b9\u4e0a\u7684\u5b8c\u6574\u7406\u8bba\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#51","title":"5.1 \u683c\u70b9\u5316\u4e0e\u65b0\u72b6\u6001\u63cf\u8ff0","text":"<p>\u4e3a\u4e86\u5c06\u7a7a\u95f4\u7ed3\u6784\u7eb3\u5165\u6a21\u578b\uff0c\u5728\u4e00\u4e2a\uff08\u4f8b\u5982\u4e8c\u7ef4\u65b9\u683c\uff09\u683c\u70b9 (lattice) \u4e0a\u5b9a\u4e49\u52a8\u529b\u5b66\u3002</p> <p></p> <p>\u7cfb\u7edf\u7684\u72b6\u6001\u63cf\u8ff0\u4e5f\u968f\u4e4b\u6539\u53d8\u3002\u72b6\u6001\u4e0d\u518d\u662f\u5355\u4e2a\u7c92\u5b50\u6570\u5411\u91cf \\(\\boldsymbol{n}\\)\uff0c\u800c\u662f\u7531\u6bcf\u4e2a\u683c\u70b9 \\(i\\) \u4e0a\u7684\u6bcf\u4e2a\u7269\u79cd \\(\\sigma\\) \u7684\u7c92\u5b50\u6570 \\(n_i^\\sigma\\) \u6765\u5171\u540c\u63cf\u8ff0\u3002</p> <p>\u7269\u7406\u610f\u4e49\uff1a</p> <ul> <li> <p>\u7cfb\u7edf\u7684\u5b8c\u6574\u72b6\u6001\u73b0\u5728\u662f\u4e00\u4e2a\u7ef4\u5ea6\u6781\u9ad8\u7684\u5411\u91cf\uff0c\u5b83\u5305\u542b\u4e86\u5728\u6240\u6709\u4f4d\u7f6e\u3001\u6240\u6709\u7269\u79cd\u7684\u7c92\u5b50\u6570\u91cf\u4fe1\u606f\uff0c\u662f\u6574\u4e2a\u201c\u751f\u6001\u5730\u56fe\u201d\u7684\u4e00\u5f20\u5feb\u7167\u3002</p> </li> <li> <p>\u4e4b\u524d\u5b9a\u4e49\u7684\u201c\u5728\u4f4d (on-site)\u201d\u53cd\u5e94\uff08\u5982\u6355\u98df\u3001\u7e41\u6b96\uff09\u73b0\u5728\u88ab\u7406\u89e3\u4e3a\u5728\u540c\u4e00\u4e2a\u683c\u70b9 \\(i\\) \u5185\u90e8\uff0c\u6216\u5728\u76f8\u90bb\u683c\u70b9 \\(i\\) \u548c \\(j\\) \u4e4b\u95f4\u53d1\u751f\u7684\u5c40\u57df\u4e8b\u4ef6\u3002</p> </li> </ul>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#52","title":"5.2 \u5c06\u6269\u6563\u5f62\u5f0f\u5316\u4e3a\u201c\u5316\u5b66\u53cd\u5e94\u201d","text":"<p>\u9664\u4e86\u5c40\u57df\u53cd\u5e94\uff0c\u8fd8\u9700\u8981\u5f15\u5165\u7c92\u5b50\u5728\u4e0d\u540c\u683c\u70b9\u4e4b\u95f4\u79fb\u52a8\u7684\u8fc7\u7a0b\uff0c\u5373\u6269\u6563 (diffusion) \u6216\u8fc1\u79fb (mobility) \u3002\u5728\u6211\u4eec\u7684\u7406\u8bba\u6846\u67b6\u4e2d\uff0c\u6269\u6563\u53ef\u4ee5\u88ab\u4f18\u96c5\u5730\u5f62\u5f0f\u5316\u5730\u770b\u4f5c\u662f\u53e6\u4e00\u79cd\u201c\u5316\u5b66\u53cd\u5e94\u201d\u2014\u2014\u5373\u4e00\u4e2a\u7269\u79cd \\(\\sigma\\) \u7684\u7c92\u5b50\u4ece\u683c\u70b9 \\(i\\) \u201c\u8df3\u8dc3\u201d\u5230\u5176\u90bb\u8fd1\u683c\u70b9 \\(j\\)\uff1a</p> \\[ A_i^\\sigma \\xrightarrow{D_{i \\to j}^\\sigma} A_j^\\sigma \\] <ul> <li> <p>\\(A_i^\\sigma\\) \u4ee3\u8868\u4e00\u4e2a\u4f4d\u4e8e\u683c\u70b9 \\(i\\) \u7684 \\(\\sigma\\) \u7269\u79cd\u7c92\u5b50\u3002</p> </li> <li> <p>\\(D_{i \\to j}^\\sigma\\) \u662f\u8fd9\u6b21\u8df3\u8dc3\u4e8b\u4ef6\u7684\u8f6c\u79fb\u901f\u7387 (hopping rate) \u3002\u8fd9\u4e2a\u901f\u7387\u7684\u5177\u4f53\u5f62\u5f0f\uff0c\u53d6\u51b3\u4e8e\u6211\u4eec\u5bf9\u7cfb\u7edf\u7269\u7406\u6027\u8d28\u7684\u5047\u8bbe\u3002</p> </li> </ul>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#d_i-to-jsigma","title":"\u8df3\u8dc3\u901f\u7387 \\(D_{i \\to j}^\\sigma\\) \u7684\u4e0d\u540c\u9009\u62e9","text":"<p>\u8df3\u8dc3\u901f\u7387\u7684\u9009\u62e9\uff0c\u6df1\u523b\u5730\u53cd\u6620\u4e86\u7cfb\u7edf\u662f\u5904\u4e8e\u5e73\u8861\u6001\u8fd8\u662f\u975e\u5e73\u8861\u6001\u3002</p> <ol> <li> <p>\u6700\u7b80\u975e\u5e73\u8861\u6a21\u578b:     \u5728\u8bb8\u591a\u975e\u5e73\u8861\u6a21\u578b\uff08\u5305\u62ecMay-Leonard\u6a21\u578b\uff09\u7684\u7814\u7a76\u4e2d\uff0c\u6700\u7b80\u5355\u7684\u5047\u8bbe\u662f\u8df3\u8dc3\u901f\u7387\u4e3a\u4e00\u4e2a\u5e38\u6570 \\(D\\)\uff0c\u5b83\u4e0e\u7269\u79cd\u3001\u4f4d\u7f6e\u548c\u65b9\u5411\u90fd\u65e0\u5173\u3002     \\(\\(D_{i \\to j}^{\\sigma} = D\\)\\)     \u8fd9\u4e2a\u5047\u8bbe\u610f\u5473\u7740\u7c92\u5b50\u8fdb\u884c\u7684\u662f\u65e0\u504f\u7684\u3001\u7eaf\u7cb9\u7684\u968f\u673a\u6e38\u8d70\u3002</p> </li> <li> <p>\u5e73\u8861\u6001\u6a21\u578b (\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861):</p> </li> </ol> <p>\u5982\u679c\u7cfb\u7edf\u5b58\u5728\u4e00\u4e2a\u80fd\u91cf\u666f\u89c2\uff08\u4f8b\u5982\uff0c\u6bcf\u4e2a\u683c\u70b9 \\(i\\) \u90fd\u6709\u4e00\u4e2a\u52bf\u80fd \\(U_i\\)\uff09\uff0c\u5e76\u4e14\u6211\u4eec\u8981\u6c42\u7cfb\u7edf\u5728\u957f\u65f6\u95f4\u6f14\u5316\u540e\u80fd\u5f1b\u8c6b\u5230\u70ed\u529b\u5b66\u5e73\u8861\u6001\uff08\u5373\u73bb\u5c14\u5179\u66fc\u5206\u5e03\uff09\uff0c\u90a3\u4e48\u8df3\u8dc3\u901f\u7387\u5c31\u5fc5\u987b\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861 (detailed balance) \u6761\u4ef6\u3002</p> <p></p> <p>\u7ec6\u81f4\u5e73\u8861\u8981\u6c42\u4ece \\(j\\) \u5230 \\(i\\) \u7684\u6b63\u5411\u6982\u7387\u6d41\u7b49\u4e8e\u4ece \\(i\\) \u5230 \\(j\\) \u7684\u9006\u5411\u6982\u7387\u6d41\uff0c\u5373 \\(D_{ij} e^{-\\beta U_j} = D_{ji} e^{-\\beta U_i}\\)\u3002\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u8df3\u8dc3\u901f\u7387\u6709\u591a\u79cd\u9009\u62e9\uff0c\u4f8b\u5982\uff1a</p> \\[D_{ij} = D \\exp\\left[-\\frac{1}{2}\\beta(U_i - U_j)\\right]\\] <p>\u8fd9\u79cd\u5f62\u5f0f\u786e\u4fdd\u4e86\u7c92\u5b50\u4f1a\u66f4\u503e\u5411\u4e8e\u4ece\u9ad8\u80fd\u91cf\u4f4d\u7f6e\u8df3\u8dc3\u5230\u4f4e\u80fd\u91cf\u4f4d\u7f6e\uff0c\u4ece\u800c\u4f7f\u7cfb\u7edf\u6700\u7ec8\u80fd\u591f\u8fbe\u5230\u80fd\u91cf\u6700\u4f4e\u7684\u5e73\u8861\u6001\u3002</p> <p>\u91cd\u8981\u533a\u522b :\u5fc5\u987b\u5f3a\u8c03\u7684\u662f\uff0cMay-Leonard\u6a21\u578b\u7531\u4e8e\u5176\u5faa\u73af\u6355\u98df\u7684\u53cd\u5e94\u89c4\u5219\uff0c\u662f\u4e00\u4e2a\u5185\u7980\u7684\u975e\u5e73\u8861\u7cfb\u7edf \uff0c\u5b83\u4e0d\u5b58\u5728\u4e00\u4e2a\u53ef\u4ee5\u6700\u5c0f\u5316\u7684\u201c\u80fd\u91cf\u201d\u51fd\u6570\uff0c\u56e0\u6b64\u5176\u52a8\u529b\u5b66\u4e0d\u670d\u4ece\u7ec6\u81f4\u5e73\u8861 \u3002\u56e0\u6b64\uff0c\u5728\u7814\u7a76\u5176\u975e\u5e73\u8861\u7279\u6027\u65f6\uff0c\u91c7\u7528\u7b80\u5355\u7684\u5e38\u6570\u8df3\u8dc3\u901f\u7387 \\(D\\) \u662f\u4e00\u4e2a\u5408\u7406\u4e14\u6709\u6548\u7684\u8d77\u70b9\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#53","title":"5.3 \u7a7a\u95f4\u5982\u4f55\u6539\u53d8\u7cfb\u7edf\u547d\u8fd0\uff1a\u907f\u96be\u6240\u4e0e\u6591\u56fe\u5f62\u6210","text":"<p>\u5f15\u5165\u7a7a\u95f4\u7ef4\u5ea6\u548c\u5c40\u57df\u76f8\u4e92\u4f5c\u7528\uff0c\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u4e86\u7cfb\u7edf\u7684\u884c\u4e3a\u3002</p> <ul> <li> <p>\u5728\u5145\u5206\u6df7\u5408\u6a21\u578b\u4e2d\uff0c\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u7269\u79cd\u53ef\u4ee5\u65e0\u5dee\u522b\u5730\u653b\u51fb\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u730e\u7269\uff0c\u8fc5\u901f\u5bfc\u81f4\u5168\u5c40\u6027\u7684\u79cd\u7fa4\u5d29\u6e83\u548c\u7269\u79cd\u706d\u7edd\u3002</p> </li> <li> <p>\u4f46\u5728\u7a7a\u95f4\u6a21\u578b\u4e2d\uff0c\u4e00\u4e2a\u4e2a\u4f53\u53ea\u80fd\u4e0e\u5b83\u90bb\u8fd1\u7684\u4e2a\u4f53\u8fdb\u884c\u7e41\u6b96\u6216\u6355\u98df\u3002</p> </li> </ul> <p>\u8fd9\u79cd\u5c40\u57df\u6027 (locality) \u4f7f\u5f97\u730e\u7269\u53ef\u4ee5\u5728\u8fdc\u79bb\u6355\u98df\u8005\u79cd\u7fa4\u7684\u533a\u57df\u627e\u5230\u201c\u907f\u96be\u6240\u201d (refuges) \u3002\u4e00\u4e2a\u7269\u79cd\u7684\u6591\u5757\u53ef\u4ee5\u5728\u5176\u5929\u654c\u5c1a\u672a\u5230\u8fbe\u7684\u533a\u57df\u84ec\u52c3\u53d1\u5c55\u3002</p> <p>\u8fd9\u79cd\u5c40\u57df\u76f8\u4e92\u4f5c\u7528\u4e0e\u6269\u6563\u7684\u7ed3\u5408\uff0c\u6700\u7ec8\u963b\u6b62\u4e86\u5728\u5145\u5206\u6df7\u5408\u7cfb\u7edf\u4e2d\u770b\u5230\u7684\u5168\u5c40\u706d\u7edd\uff0c\u5e76\u50ac\u751f\u4e86\u4e30\u5bcc\u7684\u81ea\u7ec4\u7ec7\u65f6\u7a7a\u6591\u56fe\uff0c\u4f8b\u5982\u6211\u4eec\u57284.2\u8282\u6a21\u62df\u4e2d\u770b\u5230\u7684\u87ba\u65cb\u6ce2\u3002\u5728\u8fd9\u4e9b\u87ba\u65cb\u6ce2\u4e2d\uff0c\u4e09\u4e2a\u7269\u79cd\u5728\u5168\u5c40\u5c3a\u5ea6\u4e0a\u52a8\u6001\u5171\u5b58\uff0c\u5c3d\u7ba1\u5728\u5c40\u90e8\u5c3a\u5ea6\u4e0a\u5b83\u4eec\u603b\u662f\u5728\u4e0d\u65ad\u5730\u76f8\u4e92\u53d6\u4ee3\u3002</p> <p>\u56e0\u6b64\uff0c\u4ece\u5145\u5206\u6df7\u5408\u6a21\u578b\u5230\u7a7a\u95f4\u6a21\u578b\u7684\u8de8\u8d8a\uff0c\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7ec6\u8282\u4e0a\u7684\u4fee\u6b63\uff0c\u800c\u662f\u5bf9\u7cfb\u7edf\u52a8\u529b\u5b66\u884c\u4e3a\u7684\u8d28\u7684\u6539\u53d8\u3002\u7406\u89e3\u4e86\u5982\u4f55\u5c06\u7a7a\u95f4\u52a8\u529b\u5b66\u5f62\u5f0f\u5316\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u96c6\u9f50\u4e86\u6784\u5efa\u5b8c\u6574\u65f6\u7a7a\u8def\u5f84\u79ef\u5206\u7684\u6240\u6709\u8981\u7d20\u3002</p>"},{"location":"zh/notes/38.%20%E5%A4%9A%E7%89%A9%E7%A7%8D%E8%B7%AF%E5%BE%84%E7%A7%AF%E5%88%86%E4%B8%8E%E5%BE%AA%E7%8E%AF%E7%AB%9E%E4%BA%89%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_3","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u6210\u529f\u5730\u5c06\u8def\u5f84\u79ef\u5206\u5f62\u5f0f\u4f53\u7cfb\u4ece\u63cf\u8ff0\u5355\u7269\u79cd\u968f\u673a\u8fc7\u7a0b\uff0c\u63a8\u5e7f\u5230\u4e86\u80fd\u591f\u5904\u7406\u4efb\u610f\u590d\u6742\u7684\u591a\u7269\u79cd\u76f8\u4e92\u4f5c\u7528\u7cfb\u7edf\u3002\u8fd9\u4e00\u63a8\u5e7f\u7684\u6838\u5fc3\u5728\u4e8e\u5c06\u6807\u91cf\u72b6\u6001\u53d8\u91cf\u548c\u7b97\u7b26\u63d0\u5347\u4e3a\u5411\u91cf\u5f62\u5f0f\uff0c\u540c\u65f6\u4fdd\u6301\u4e86\u4f5c\u7528\u91cf\u7684\u57fa\u672c\u7ed3\u6784\u4e0d\u53d8\u3002</p> <p>\u901a\u8fc7\u6b64\u8fc7\u7a0b\uff0c\u5efa\u7acb\u4e86\u4e00\u5957\u901a\u7528\u7684\u3001\u7b97\u6cd5\u5316\u7684\u7a0b\u5e8f\uff0c\u7528\u4e8e\u6839\u636e\u4efb\u4f55\u7ed9\u5b9a\u7684\u53cd\u5e94\u7f51\u7edc\u6784\u5efa\u5176\u5bf9\u5e94\u7684\u5218\u7ef4\u5c14\u7b97\u7b26\u3002\u8fd9\u4e2a\u201c\u7f16\u8bd1\u5668\u201d\u5f0f\u7684\u5de5\u5177\uff0c\u5c06\u7269\u7406\u3001\u5316\u5b66\u6216\u751f\u7269\u5b66\u4e2d\u7684\u53cd\u5e94\u89c4\u5219\u76f4\u63a5\u7ffb\u8bd1\u4e3a\u968f\u673a\u52a8\u529b\u5b66\u7684\u6570\u5b66\u751f\u6210\u5143\uff0c\u6781\u5927\u5730\u589e\u5f3a\u4e86\u8be5\u7406\u8bba\u6846\u67b6\u7684\u5b9e\u7528\u6027\u548c\u666e\u9002\u6027\u3002</p> <p>\u901a\u8fc7\u5bf9May-Leonard\uff08\u77f3\u5934-\u526a\u5200-\u5e03\uff09\u6a21\u578b\u7684\u6df1\u5165\u5206\u6790\uff0c\u8fd9\u4e00\u7406\u8bba\u6846\u67b6\u7684\u5f3a\u5927\u5a01\u529b\u5f97\u5230\u4e86\u5145\u5206\u5c55\u793a\u3002\u4e0d\u540c\u5c42\u6b21\u7684\u7406\u8bba\u63ed\u793a\u4e86\u622a\u7136\u4e0d\u540c\u7684\u7cfb\u7edf\u547d\u8fd0\uff1a</p> <ul> <li> <p>\u5e73\u5747\u573a\u7406\u8bba\u63ed\u793a\u4e86\u7cfb\u7edf\u7684\u786e\u5b9a\u6027\u9aa8\u67b6\u2014\u2014\u4e00\u4e2a\u5bfc\u5411\u7269\u79cd\u706d\u7edd\u7684\u5f02\u5bbf\u73af\u3002</p> </li> <li> <p>\u7a7a\u95f4\u968f\u673a\u6a21\u62df\u5219\u5c55\u793a\u4e86\u5b8c\u5168\u76f8\u53cd\u7684\u56fe\u666f\uff1a\u5c40\u57df\u76f8\u4e92\u4f5c\u7528\u548c\u4eba\u53e3\u566a\u58f0\u5171\u540c\u4fc3\u6210\u4e86\u87ba\u65cb\u6ce2\u7684\u6d8c\u73b0\uff0c\u4f7f\u7269\u79cd\u5f97\u4ee5\u7a33\u5b9a\u5171\u5b58 \u3002</p> </li> </ul> <p>\u8fd9\u4e00\u9c9c\u660e\u5bf9\u6bd4\u6e05\u6670\u5730\u8868\u660e\uff0c\u5bf9\u4e8e\u7406\u89e3\u8fd9\u7c7b\u975e\u5e73\u8861\u7cfb\u7edf\u7684\u547d\u8fd0\uff0c\u4e00\u4e2a\u5305\u542b\u4e86\u7a7a\u95f4\u7ed3\u6784\u548c\u968f\u673a\u6da8\u843d\u7684\u5b8c\u6574\u968f\u673a\u63cf\u8ff0\u662f\u4e0d\u53ef\u6216\u7f3a\u7684\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u8282\u8bfe\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u7406\u8bba\u5de5\u5177\u2014\u2014\u591a\u7269\u79cd\u8def\u5f84\u79ef\u5206\uff0c\u4e5f\u901a\u8fc7\u4e00\u4e2a\u7ecf\u5178\u7684\u975e\u5e73\u8861\u6a21\u578b\uff0c\u6df1\u5316\u4e86\u5bf9\u968f\u673a\u6027\u3001\u76f8\u4e92\u4f5c\u7528\u548c\u7a7a\u95f4\u7ed3\u6784\u5728\u590d\u6742\u7cfb\u7edf\u4e2d\u4f5c\u7528\u7684\u7406\u89e3\u3002</p> <p>\u5728\u8fd9\u8282\u8bfe\u4e2d\uff0c\u6240\u6709\u5fc5\u8981\u7684\u7269\u7406\u6210\u5206\u2014\u2014\u5c40\u57df\u53cd\u5e94\u548c\u683c\u70b9\u95f4\u7684\u6269\u6563\u2014\u2014\u90fd\u5df2\u5728\u79bb\u6563\u7684\u683c\u70b9\u4e0a\u5f97\u5230\u4e86\u5f62\u5f0f\u5316\u7684\u5b9a\u4e49\u3002\u8fd9\u81ea\u7136\u5730\u5f15\u51fa\u4e86\u4e0b\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u5728\u8fd9\u4e2a\u79bb\u6563\u7684\u683c\u70b9\u7cfb\u7edf\u4e0a\u6784\u5efa\u5b8c\u6574\u7684\u8def\u5f84\u79ef\u5206\uff0c\u5e76\u4ece\u4e2d\u63a8\u5bfc\u51fa\u5b8f\u89c2\u7684\u573a\u8bba\u63cf\u8ff0\uff1f</p> <p>\u4e0b\u4e00\u8282\u8bfe\uff08\u7b2c39\u8bb2\uff09\u201c\u683c\u70b9\u4e0a\u7684\u8def\u5f84\u79ef\u5206\uff1a\u4ece\u8df3\u8dc3\u5230\u8fde\u7eed\u573a\u8bba\u201d\u5c06\u76f4\u63a5\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd9\u8282\u8bfe\u53d1\u5c55\u7684\u591a\u7269\u79cd\u4f5c\u7528\u91cf\u5c06\u4e0e\u7a7a\u95f4\u683c\u70b9\u7684\u6982\u5ff5\u7ed3\u5408\u8d77\u6765\uff0c\u6784\u5efa\u4e00\u4e2a\u63cf\u8ff0\u65f6\u7a7a\u968f\u673a\u8fc7\u7a0b\u7684\u8def\u5f84\u79ef\u5206\u3002</p> <p>\u66f4\u8fdb\u4e00\u6b65\uff0c\u8bfe\u7a0b\u5c06\u63a2\u8ba8\u4ece\u8fd9\u4e2a\u79bb\u6563\u7684\u3001\u57fa\u4e8e\u7c92\u5b50\u7684\u63cf\u8ff0\u5230\u4e00\u4e2a\u8fde\u7eed\u7684\u3001\u57fa\u4e8e\u573a\u7684\u63cf\u8ff0\u7684\u8fc7\u6e21\u3002\u901a\u8fc7\u6267\u884c\u4e00\u4e2a\u8fde\u7eed\u6781\u9650\uff08continuum limit\uff09\u2014\u2014\u5373\u5bf9\u683c\u70b9\u95f4\u8ddd\u548c\u7c92\u5b50\u6570\u8fdb\u884c\u7c97\u7c92\u5316\u2014\u2014\u5c06\u6700\u7ec8\u63a8\u5bfc\u51fa\u63cf\u8ff0\u79cd\u7fa4\u5bc6\u5ea6\u573a\u65f6\u7a7a\u6da8\u843d\u7684\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\uff08Stochastic Partial Differential Equation, SPDE\uff09\u53ca\u5176\u5bf9\u5e94\u7684\u573a\u8bba\u3002</p> <p>\u8fd9\u5c06\u5b8c\u6210\u4ece\u5fae\u89c2\u7c92\u5b50\u89c4\u5219\uff08\u4e3b\u65b9\u7a0b\uff09\u5230\u5b8f\u89c2\u8fde\u7eed\u573a\uff08\u968f\u673a\u573a\u8bba\uff09\u7684\u6574\u4e2a\u7406\u8bba\u6784\u5efa\u4e4b\u65c5\uff0c\u4e3a\u4f7f\u7528\u91cd\u6574\u5316\u7fa4\u7b49\u5f3a\u5927\u7684\u73b0\u4ee3\u573a\u8bba\u5de5\u5177\u6765\u5206\u6790\u975e\u5e73\u8861\u7cfb\u7edf\u7684\u4e34\u754c\u884c\u4e3a\u548c\u76f8\u53d8\u6253\u5f00\u5927\u95e8\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/","title":"\u5f15\u8a00\uff1a\u4ece\u79bb\u6563\u8df3\u8dc3\u5230\u8fde\u7eed\u573a\u8bba\u7684\u4e24\u79cd\u8def\u5f84","text":"<p>\u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff08\u7279\u522b\u662f\u7b2c32\u8bb2 \u81f3\u7b2c37\u8bb2\uff09\uff0c\u591a\u79cd\u5f3a\u5927\u7684\u8def\u5f84\u79ef\u5206\u5f62\u5f0f\u5df2\u88ab\u7cfb\u7edf\u6027\u5730\u5efa\u7acb\u8d77\u6765\uff0c\u7528\u4ee5\u63cf\u8ff0\u968f\u673a\u591a\u4f53\u7cfb\u7edf\u7684\u96c6\u4f53\u884c\u4e3a\u3002\u65e0\u8bba\u662f\u57fa\u4e8e\u8fde\u7eed\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684Janssen-De Dominicis\u54cd\u5e94\u6cdb\u51fd\uff0c\u8fd8\u662f\u5904\u7406\u79bb\u6563\u7c92\u5b50\u751f\u706d\u7684\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\uff0c\u5176\u6838\u5fc3\u76ee\u6807\u90fd\u662f\u5c06\u63cf\u8ff0\u4e2a\u4f53\u968f\u673a\u4e8b\u4ef6\u7684\u5fae\u89c2\u52a8\u529b\u5b66\uff08\u4e3b\u65b9\u7a0b\u6216\u6717\u4e4b\u4e07\u65b9\u7a0b\uff09\uff0c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u7b49\u6548\u7684\u3001\u66f4\u4fbf\u4e8e\u5206\u6790\u7684\u573a\u8bba\u3002</p> <p>\u7b2c38\u8bb2 \u5c06\u8fd9\u4e00\u6846\u67b6\u63a8\u5e7f\u5230\u4e86\u7a7a\u95f4\u7ef4\u5ea6\uff0c\u901a\u8fc7\u5c06\u591a\u7269\u79cd\u7684\u5c40\u57df\u53cd\u5e94\u548c\u6269\u6563\u8fc7\u7a0b\u5b9a\u4e49\u5728\u4e00\u4e2a\u79bb\u6563\u7684\u7a7a\u95f4\u683c\u70b9\uff08lattice\uff09\u4e0a\uff0c\u4e3a\u63cf\u8ff0\u65f6\u7a7a\u52a8\u529b\u5b66\u5960\u5b9a\u4e86\u57fa\u7840\u3002\u8fd9\u81ea\u7136\u5f15\u51fa\u4e86\u4e00\u4e2a\u57fa\u7840\u4e14\u81f3\u5173\u91cd\u8981\u7684\u95ee\u9898\uff1a\u5982\u4f55\u5728\u8fd9\u4e2a\u79bb\u6563\u7684\u683c\u70b9\u7cfb\u7edf\u4e0a\u6784\u5efa\u8def\u5f84\u79ef\u5206\uff0c\u5e76\u4ece\u4e2d\u6b63\u786e\u5730\u63a8\u5bfc\u51fa\u4e00\u4e2a\u5b8f\u89c2\u7684\u3001\u8fde\u7eed\u7684\u573a\u8bba\u63cf\u8ff0\uff1f</p> <p>\u8fd9\u4e2a\u95ee\u9898\u770b\u4f3c\u53ea\u662f\u4e00\u4e2a\u53d6\u6781\u9650\uff08\u5373\u8ba9\u683c\u70b9\u95f4\u8ddd \\(a \\to 0\\)\uff09\u7684\u6570\u5b66\u64cd\u4f5c\uff0c\u4f46\u5176\u80cc\u540e\u9690\u85cf\u7740\u6df1\u523b\u7684\u7269\u7406\u5185\u6db5\u3002\u8fd9\u4e2a\u6781\u9650\u8fc7\u7a0b\u5e76\u975e\u603b\u662f\u76f4\u622a\u4e86\u5f53\uff0c\u4e0d\u540c\u7684\u6570\u5b66\u5f62\u5f0f\uff08\u8def\u5f84\u79ef\u5206\u7684\u6784\u5efa\u65b9\u5f0f\uff09\u5728\u53d6\u6781\u9650\u540e\u53ef\u80fd\u4f1a\u5f97\u5230\u622a\u7136\u4e0d\u540c\u7684\u7269\u7406\u7ed3\u679c\u3002</p> <p>\u8fd9\u8282\u8bfe\u5c06\u901a\u8fc7\u5bf9\u6bd4\u4e24\u79cd\u8457\u540d\u7684\u8def\u5f84\u79ef\u5206\u65b9\u6cd5\uff0c\u6765\u63ed\u793a\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u7684\u5fae\u5999\u4e4b\u5904\u3002\u5176\u6838\u5fc3\u8bae\u9898\u662f\uff0c\u54ea\u79cd\u65b9\u6cd5\u80fd\u591f\u771f\u6b63\u6355\u6349\u5230\u5e95\u5c42\u79bb\u6563\u7c92\u5b50\u7cfb\u7edf\u968f\u673a\u8df3\u8dc3\u6240\u56fa\u6709\u7684\u968f\u673a\u6da8\u843d\uff08stochastic fluctuations\uff09\uff1f</p> <p>\u8fd9\u8282\u8bfe\u5c06\u805a\u7126\u4e8e\u4e24\u79cd\u6784\u5efa\u8def\u5f84\u79ef\u5206\u7684\u4e3b\u8981\u65b9\u6cd5\uff1a</p> <ol> <li> <p>Doi-Peliti (DP) \u8def\u5f84\u79ef\u5206\uff1a\u8fd9\u662f\u4e00\u79cd\u201c\u573a\u4e3a\u5148\u201d\u7684\u65b9\u6cd5\uff0c\u5176\u601d\u60f3\u6e90\u4e8e\u7b2c36\u8bb2 \u7684\u76f8\u5e72\u6001\u8868\u8c61\u3002\u5b83\u4ece\u4e00\u5f00\u59cb\u5c31\u5c06\u7c92\u5b50\u4ea7\u751f\u548c\u6e6e\u706d\u7b97\u7b26\u6620\u5c04\u4e3a\u8fde\u7eed\u7684\u573a\u53d8\u91cf\u53ca\u5176\u5bfc\u6570\uff0c\u5929\u7136\u5730\u5bfc\u5411\u4e00\u4e2a\u5173\u4e8e\u5e73\u6ed1\u573a\u7684\u63cf\u8ff0\u3002</p> </li> <li> <p>\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206 (Kramers-Moyal Path Integral, KMPI)\uff1a\u8fd9\u662f\u4e00\u79cd\u201c\u4e8b\u4ef6\u4e3a\u5148\u201d\u7684\u65b9\u6cd5\uff0c\u5176\u601d\u60f3\u6e90\u4e8e\u7b2c37\u8bb2 \u7684\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u5c55\u5f00\u3002\u5b83\u76f4\u63a5\u4ece\u4e3b\u65b9\u7a0b\u4e2d\u7684\u8df3\u8dc3\u8fc7\u7a0b\u51fa\u53d1\uff0c\u5728\u6570\u5b66\u5f62\u5f0f\u4e0a\u660e\u786e\u4fdd\u7559\u4e86\u7c92\u5b50\u4ece\u4e00\u4e2a\u683c\u70b9\u8df3\u5230\u53e6\u4e00\u4e2a\u683c\u70b9\u7684\u79bb\u6563\u4e8b\u4ef6\u7279\u5f81\u3002</p> </li> </ol> <p>\u901a\u8fc7\u5bf9\u6bd4\u8fd9\u4e24\u79cd\u65b9\u6cd5\u5bf9\u540c\u4e00\u4e2a\u7269\u7406\u8fc7\u7a0b\u2014\u2014\u6269\u6563\u2014\u2014\u7684\u63cf\u8ff0\uff0c\u5c06\u4f1a\u770b\u5230\uff0cDoi-Peliti\u8def\u5f84\u79ef\u5206\u6700\u7ec8\u7ed9\u51fa\u4e86\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u3001\u5e73\u5747\u573a\u6c34\u5e73\u7684\u63cf\u8ff0\uff0c\u800c\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\u5219\u6210\u529f\u5730\u4fdd\u7559\u4e86\u7cfb\u7edf\u7684\u968f\u673a\u6027\uff0c\u6700\u7ec8\u5bfc\u51fa\u4e86\u4e00\u4e2a\u5305\u542b\u5185\u7980\u566a\u58f0\uff08intrinsic noise\uff09\u7684\u968f\u673a\u573a\u8bba\u3002\u8fd9\u573a\u201c\u5bf9\u51b3\u201d\u5c06\u6df1\u523b\u63ed\u793a\uff0c\u6570\u5b66\u5f62\u5f0f\u7684\u9009\u62e9\u5982\u4f55\u51b3\u5b9a\u4e86\u6700\u7ec8\u80fd\u591f\u770b\u5230\u7684\u7269\u7406\u56fe\u50cf\u7684\u6df1\u5ea6\u548c\u5e7f\u5ea6\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#1-doi-peliti","title":"1. Doi-Peliti \u5f62\u5f0f\uff1a\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u5e73\u5747\u573a\u56fe\u50cf","text":"<p>\u5728\u7b2c38\u8bb2\u4e2d\uff0c\u7406\u8bba\u6846\u67b6\u5df2\u88ab\u6269\u5c55\u81f3\u7a7a\u95f4\u7ef4\u5ea6\uff0c\u901a\u8fc7\u5c06\u53cd\u5e94\u548c\u6269\u6563\u8fc7\u7a0b\u5b9a\u4e49\u5728\u4e00\u4e2a\u79bb\u6563\u7684\u683c\u70b9\u4e0a\u3002\u8fd9\u8282\u8bfe\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\uff0c\u4fbf\u662f\u5e94\u7528\u5728\u7b2c36\u8bb2\u4e2d\u5efa\u7acb\u7684Doi-Peliti (DP) \u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\u65b9\u6cd5\uff0c\u4e3a\u8fd9\u4e2a\u683c\u70b9\u4e0a\u7684\u6269\u6563\u8fc7\u7a0b\u6784\u5efa\u8def\u5f84\u79ef\u5206\uff0c\u5e76\u5c1d\u8bd5\u63a8\u5bfc\u5176\u8fde\u7eed\u573a\u8bba\u3002DP\u5f62\u5f0f\u4ee5\u5176\u6570\u5b66\u4e0a\u7684\u7b80\u6d01\u4f18\u7f8e\u8457\u79f0\uff0c\u80fd\u9ad8\u6548\u5730\u63a8\u5bfc\u51fa\u7cfb\u7edf\u7684\u5e73\u5747\u884c\u4e3a\u3002\u901a\u8fc7\u8fd9\u4e2a\u63a8\u5bfc\uff0c\u5c06\u6e05\u6670\u5730\u770b\u5230\u8be5\u65b9\u6cd5\u7684\u5f3a\u5927\u4e4b\u5904\uff0c\u4ee5\u53ca\u5b83\u4e3a\u6355\u6349\u771f\u5b9e\u968f\u673a\u6027\u6240\u4ed8\u51fa\u7684\u4ee3\u4ef7\u3002</p> <p>Doi-Peliti\u8def\u5f84\u79ef\u5206\u7531\u65e5\u672c\u7269\u7406\u5b66\u5bb6Masaki Doi\u548c\u610f\u5927\u5229\u7269\u7406\u5b66\u5bb6Graham Peliti\u572820\u4e16\u7eaa70\u5e74\u4ee3\u672b\u81f380\u5e74\u4ee3\u521d\u72ec\u7acb\u63d0\u51fa\u5e76\u7cfb\u7edf\u5316\uff0c\u5176\u5386\u53f2\u6e0a\u6e90\u662f\u5c06\u91cf\u5b50\u573a\u8bba\u4e2d\u7684\u76f8\u5e72\u6001\u4e0e\u8def\u5f84\u79ef\u5206\u6280\u672f\u521b\u9020\u6027\u5730\u5f15\u5165\u7ecf\u5178\u968f\u673a\u7cfb\u7edf\u3002\u8be5\u65b9\u6cd5\u7684\u7269\u7406\u672c\u8d28\u662f\u4e3a\u63cf\u8ff0\u7c92\u5b50\u6570\u53ef\u53d8\u7684\u968f\u673a\u8fc7\u7a0b\uff08\u5982\u5316\u5b66\u53cd\u5e94\u3001\u79cd\u7fa4\u52a8\u529b\u5b66\u3001\u751f\u6001\u6f14\u66ff\uff09\u6784\u5efa\u4e00\u4e2a\u4e25\u683c\u7684\u573a\u8bba\u6846\u67b6\uff1a\u901a\u8fc7\u5f15\u5165\u521b\u751f\u548c\u6e6e\u706d\u7b97\u7b26\uff0c\u5b83\u5c06\u4e3b\u65b9\u7a0b\u6620\u5c04\u4e3a\u4e00\u79cd\u57fa\u4e8e\u76f8\u5e72\u6001\u7684\u6cdb\u51fd\u79ef\u5206\u5f62\u5f0f\uff0c\u5176\u4f5c\u7528\u91cf\u81ea\u7136\u5305\u542b\u4e86\u7c92\u5b50\u95f4\u76f8\u4e92\u4f5c\u7528\u6240\u5bfc\u81f4\u7684\u591a\u4f53\u5173\u8054\u4e0e\u6da8\u843d\u6548\u5e94\u3002Doi-Peliti\u573a\u8bba\u7684\u5177\u4f53\u5e94\u7528\u6781\u4e3a\u5e7f\u6cdb\uff0c\u5df2\u6210\u4e3a\u7814\u7a76\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u7684\u6838\u5fc3\u6570\u5b66\u5de5\u5177\uff0c\u6df1\u523b\u5e94\u7528\u4e8e\u53cd\u5e94\u6269\u6563\u7cfb\u7edf\u7684\u975e\u5e73\u8861\u76f8\u53d8\uff08\u5982\u5b9a\u5411\u6e17\u6d41\uff09\u3001\u79cd\u7fa4\u751f\u7269\u5b66\u7684\u968f\u673a\u6f14\u5316\u3001\u57fa\u56e0\u8c03\u63a7\u7f51\u7edc\u7684\u566a\u58f0\u4f20\u64ad\u3001\u6d3b\u6027\u7269\u8d28\u96c6\u4f53\u8fd0\u52a8\u4ee5\u53ca\u6d41\u884c\u75c5\u4f20\u64ad\u52a8\u529b\u5b66\u7b49\u9886\u57df\uff0c\u4e3a\u7406\u89e3\u6da8\u843d\u4e3b\u5bfc\u7684\u7a00\u6709\u4e8b\u4ef6\u548c\u4e34\u754c\u73b0\u8c61\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u89e3\u6790\u4e0e\u6570\u503c\u8ba1\u7b97\u624b\u6bb5\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#11","title":"1.1 \u6269\u6563\u7b97\u7b26\u7684\u573a\u8868\u793a","text":"<p>\u7406\u8bba\u7684\u8d77\u70b9\uff0c\u662f\u5c06\u7c92\u5b50\u5728\u683c\u70b9\u95f4\u7684\u8df3\u8dc3\uff08\u6269\u6563\uff09\u8fc7\u7a0b\uff0c\u7528\u7b2c36\u8bb2\u53d1\u5c55\u7684\u4ea7\u751f-\u6e6e\u706d\u7b97\u7b26\u8bed\u8a00\u6765\u63cf\u8ff0\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5355\u7269\u79cd\u7cfb\u7edf\uff0c\u5176\u603b\u7684\u5218\u7ef4\u5c14\uff08Liouvillian\uff09\u7b97\u7b26\u4e2d\u53ea\u5305\u542b\u6269\u6563\u7684\u90e8\u5206\u53ef\u4ee5\u5199\u4e3a\uff1a</p> \\[ \\hat{\\mathcal{Q}}_{\\text{DIFF}} = \\sum_{i} \\sum_{j \\sim i} D_{ij} \\left( a_i^\\dagger a_j - a_i^\\dagger a_i \\right) = \\sum_{i} \\sum_{j \\sim i} D_{ij} a_i^\\dagger (a_j - a_i) \\] <ul> <li> <p>\\(i, j\\) \u662f\u683c\u70b9\uff08lattice site\uff09\u7684\u7d22\u5f15\u3002</p> </li> <li> <p>\\(j \\sim i\\) \u8868\u793a \\(j\\) \u662f \\(i\\) \u7684\u6700\u8fd1\u90bb\u683c\u70b9\u3002</p> </li> <li> <p>\\(D_{ij}\\) \u662f\u7c92\u5b50\u4ece\u683c\u70b9 \\(j\\) \u8df3\u5230\u683c\u70b9 \\(i\\) \u7684\u901f\u7387\u3002</p> </li> <li> <p>\\(a_j\\) \u548c \\(a_i^\\dagger\\) \u5206\u522b\u662f\u683c\u70b9 \\(j\\) \u4e0a\u7684\u6e6e\u706d\u7b97\u7b26\u548c\u683c\u70b9 \\(i\\) \u4e0a\u7684\u4ea7\u751f\u7b97\u7b26\u3002</p> </li> </ul> <p>\u7269\u7406\u610f\u4e49: \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u63cf\u8ff0\u4e86\u683c\u70b9 \\(i\\) \u4e0a\u7684\u7c92\u5b50\u6570\u51c0\u53d8\u5316\u3002</p> <ul> <li> <p>\u7b2c\u4e00\u9879 \\(D_{ij} a_i^\\dagger a_j\\) \u63cf\u8ff0\u4e86\u7c92\u5b50\u4ece\u90bb\u5c45\u683c\u70b9 \\(j\\) \u4ee5\u901f\u7387 \\(D_{ij}\\) \u8df3\u5165\u683c\u70b9 \\(i\\) \u7684\u589e\u76ca\u8fc7\u7a0b\uff08\u5728 \\(j\\) \u5904\u6e6e\u706d\uff0c\u5728 \\(i\\) \u5904\u4ea7\u751f\uff09\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u9879 \\(-D_{ij} a_i^\\dagger a_i\\) \u63cf\u8ff0\u4e86\u7c92\u5b50\u4ece\u683c\u70b9 \\(i\\) \u8df3\u51fa\u5230\u90bb\u5c45\u683c\u70b9 \\(j\\) \u7684\u635f\u5931\u8fc7\u7a0b\u3002\u5bf9\u6240\u6709\u90bb\u5c45 \\(j\\) \u6c42\u548c\uff0c\u5c31\u5f97\u5230\u4e86\u4ece\u683c\u70b9 \\(i\\) \u6d41\u51fa\u7684\u603b\u6982\u7387\u6d41\u3002</p> </li> </ul> <p>Doi-Peliti\u5f62\u5f0f\u7684\u6838\u5fc3\u6b65\u9aa4\uff0c\u662f\u5c06\u8fd9\u4e9b\u62bd\u8c61\u7684\u7b97\u7b26\u6620\u5c04\u4e3a\u8fde\u7eed\u7684\u573a\u53d8\u91cf\u548c\u5b83\u4eec\u7684\u5fae\u5206\u7b97\u7b26\u3002\u6839\u636e\u7b2c36\u8bb2\u5efa\u7acb\u7684\u89c4\u5219\uff08\u5305\u542bDoi-shift\uff09\uff1a $$ a_i^\\dagger \\to \\phi_i \\quad \\text{and} \\quad a_i \\to \\partial_i + 1 \\quad \\text{where} \\quad \\partial_i \\equiv \\frac{\\partial}{\\partial \\phi_i} $$</p> <ul> <li> <p>\u8fd9\u91cc\u7684 \\(\\phi_i\\) \u662f\u4e00\u4e2a\u8fde\u7eed\u7684\uff08\u590d\u6570\uff09\u573a\uff0c\u53ef\u7406\u89e3\u4e3a\u5728\u683c\u70b9 \\(i\\) \u4e0a\u7684\u67d0\u79cd\u573a\u632f\u5e45\u6216\u751f\u6210\u51fd\u6570\u53d8\u91cf\u3002</p> </li> <li> <p>Doi-shift \"+1\" \u7684\u5f15\u5165\u662f\u4e3a\u4e86\u4f7f\u7b97\u7b26\u4ee3\u6570\u4e0e\u73bb\u8272\u5b50\u4ee3\u6570\u5b8c\u7f8e\u5bf9\u5e94\u3002</p> </li> </ul> <p>\u5c06\u6b64\u6620\u5c04\u4ee3\u5165 \\(\\hat{\\mathcal{Q}}_{\\text{DIFF}}\\)\uff0c\u4f1a\u53d1\u751f\u4e00\u4e2a\u91cd\u8981\u7684\u7b80\u5316\uff1a</p> \\[a_j - a_i = (\\partial_j + 1) - (\\partial_i + 1) = \\partial_j - \\partial_i\\] <p>Doi-shift\u5728\u63cf\u8ff0\u7c92\u5b50\u6570\u5b88\u6052\u7684\u6269\u6563\u8fc7\u7a0b\u4e2d\u6070\u597d\u76f8\u4e92\u62b5\u6d88\u3002\u56e0\u6b64\uff0c\u7b97\u7b26\u7684\u573a\u8868\u793a\u4e3a\uff1a</p> \\[\\hat{\\mathcal{Q}}_{\\text{DIFF}} \\to \\sum_{i} \\sum_{j \\sim i} D_{ij} \\phi_i (\\partial_j - \\partial_i)\\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7ecf\u8fc7\u57fa\u4e8e\u683c\u70b9\u5bf9\u79f0\u6027\u7684\u91cd\u65b0\u6392\u5217\uff0c\u53ef\u4ee5\u5199\u6210\u4e00\u79cd\u5728\u540e\u7eed\u63a8\u5bfc\u4e2d\u66f4\u65b9\u4fbf\u7684\u5f62\u5f0f\uff1a</p> \\[\\hat{\\mathcal{Q}}_{\\text{DIFF}} \\to \\sum_{i} \\sum_{j \\sim i} (D_{ij} \\phi_j - D_{ji} \\phi_i) \\partial_i\\] <p>\u7269\u7406\u610f\u4e49: \u8fd9\u4e2a\u4ece\u7b97\u7b26\u5230\u5fae\u5206\u7b97\u5b50\u7684\u8f6c\u6362\uff0c\u662fDP\u65b9\u6cd5\u7684\u7b2c\u4e00\u6b65\uff0c\u4e5f\u662f\u5173\u952e\u4e00\u6b65\u3002\u5b83\u5c06\u4e00\u4e2a\u63cf\u8ff0\u79bb\u6563\u7c92\u5b50\u8df3\u8dc3\u7684\u91cf\u5b50\u5316\u8bed\u8a00\uff0c\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u63cf\u8ff0\u8fde\u7eed\u573a\u6f14\u5316\u7684\u7ecf\u5178\u504f\u5fae\u5206\u65b9\u7a0b\u8bed\u8a00\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#12-doi-peliti","title":"1.2 Doi-Peliti\u4f5c\u7528\u91cf\u53ca\u5176\u8fde\u7eed\u6781\u9650","text":"<p>\u6709\u4e86\u7b97\u7b26\u7684\u573a\u8868\u793a\uff0c\u5c31\u53ef\u4ee5\u9075\u5faa\u7b2c32\u8bb2\u4e2d\u5f15\u5165\u7684Janssen-De Dominicis\u5f62\u5f0f\uff0c\u6784\u5efa\u51fa\u63cf\u8ff0\u7cfb\u7edf\u6f14\u5316\u7684\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5305\u542b\u6269\u6563\u548c\u5c40\u57df\u53cd\u5e94\u7684\u7cfb\u7edf\uff0c\u5176\u4f5c\u7528\u91cf\u4e3a\uff1a</p> \\[S[\\{\\phi_i, i\\tilde{\\phi}_i\\}] = \\int_{t_0}^{t} d\\tau \\sum_{i \\in L} \\left[ i\\tilde{\\phi}_i \\partial_\\tau \\phi_i - \\mathcal{Q}^{(i)}_{\\text{DIFF}} - \\mathcal{Q}^{(i)}_{\\text{REACT}} \\right]\\] <ul> <li> <p>\u5f15\u5165\u4e86\u54cd\u5e94\u573a \\(i\\tilde{\\phi}_i\\)\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u4f5c\u4e3a\u62c9\u683c\u6717\u65e5\u4e58\u5b50\uff0c\u6765\u5f3a\u5236\u7cfb\u7edf\u6f14\u5316\u9075\u5faa\u7531\u5218\u7ef4\u5c14\u7b97\u7b26 \\(\\mathcal{Q}\\) \u5b9a\u4e49\u7684\u52a8\u529b\u5b66\u65b9\u7a0b\u3002</p> </li> <li> <p>\\(\\mathcal{Q}^{(i)}_{\\text{DIFF}}\\) \u662f\u4e0a\u4e00\u5c0f\u8282\u63a8\u5bfc\u7684\u6269\u6563\u7b97\u7b26\u7684\u201c\u7b26\u53f7\u201d\u5f62\u5f0f\uff0c\u901a\u8fc7\u66ff\u6362 \\(\\partial_i \\to i\\tilde{\\phi}_i\\) \u5f97\u5230\uff0c\u5373 \\(\\sum_{j \\sim i} (D_{ij} \\phi_j - D_{ji} \\phi_i) (i\\tilde{\\phi}_i)\\)\u3002</p> </li> </ul> <p>\u73b0\u5728\uff0c\u4e13\u6ce8\u4e8e\u6269\u6563\u90e8\u5206\uff0c\u5e76\u53d6\u8fde\u7eed\u6781\u9650 (continuum limit) \u3002\u4e3a\u7b80\u5316\uff0c\u5047\u8bbe\u4e00\u4e2a\u5747\u5300\u5404\u5411\u540c\u6027\u7684\u7cfb\u7edf\uff0c\u5373\u6240\u6709\u8df3\u8dc3\u901f\u7387\u90fd\u76f8\u540c\uff0c\\(D_{ij} = D_{ji} = D\\)\u3002\u6b64\u65f6\uff0c\u4f5c\u7528\u91cf\u4e2d\u7684\u6269\u6563\u9879\u53d8\u4e3a\uff1a $$ - \\sum_i (i\\tilde{\\phi}i) D \\sum{j \\sim i} (\\phi_j - \\phi_i) $$</p> <p>\u6c42\u548c\u9879 \\(\\sum_{j \\sim i} (\\phi_j - \\phi_i)\\) \u6b63\u662f\u683c\u70b9\u62c9\u666e\u62c9\u65af\u7b97\u7b26 (lattice Laplacian) \u3002\u53d6\u8fde\u7eed\u6781\u9650\u7684\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u683c\u70b9\u95f4\u8ddd\u4e3a \\(a\\)\u3002</p> </li> <li> <p>\u683c\u70b9\u6c42\u548c\u66ff\u6362\u4e3a\u7a7a\u95f4\u79ef\u5206\uff1a\\(\\sum_{i \\in L} a^d \\to \\int d^d x\\)\u3002</p> </li> <li> <p>\u573a\u53d8\u91cf\u5f52\u4e00\u5316\u4e3a\u5bc6\u5ea6\uff1a\\(\\frac{1}{a^d} \\phi_i(t) \\to \\phi(\\vec{r}_i, t)\\)\u3002</p> </li> <li> <p>\u54cd\u5e94\u573a\u505a\u7c7b\u4f3c\u66ff\u6362\uff1a\\(\\tilde{\\phi}_i(t) \\to \\tilde{\\phi}(\\vec{r}_i, t)\\)\u3002</p> </li> </ul> <p>\u683c\u70b9\u62c9\u666e\u62c9\u65af\u7b97\u7b26\u5728 \\(a \\to 0\\) \u7684\u6781\u9650\u4e0b\uff0c\u4f1a\u6536\u655b\u5230\u8fde\u7eed\u7684\u62c9\u666e\u62c9\u65af\u7b97\u7b26 \\(\\nabla^2\\)\uff1a $$ \\sum_{j \\sim i} (\\phi_j - \\phi_i) \\xrightarrow{a \\to 0} a^2 \\nabla^2 \\phi $$ \u5c06\u6240\u6709\u89c4\u5219\u4ee3\u5165\u5e76\u6574\u7406\uff0c\u6700\u7ec8\u5f97\u5230\u6269\u6563\u8fc7\u7a0b\u7684\u8fde\u7eed\u4f5c\u7528\u91cf\uff1a $$ S_{\\text{DIFF}}[\\phi, i\\tilde{\\phi}] = \\int dt \\int d^d x \\left[ i\\tilde{\\phi}(\\vec{r}, t) \\left( \\partial_t - D \\nabla^2 \\right) \\phi(\\vec{r}, t) \\right] $$ \u7269\u7406\u610f\u4e49:</p> <p>\u8fd9\u4e2a\u4f5c\u7528\u91cf\u662f\u6807\u51c6\u7684MSRJD\u5f62\u5f0f\uff0c\u5b83\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5b8c\u5168\u786e\u5b9a\u6027\u7684\u8fc7\u7a0b\u3002\u8def\u5f84\u79ef\u5206\u7684\u7269\u7406\u56fe\u50cf\u7531\u978d\u70b9 (saddle-point) \u51b3\u5b9a\uff0c\u5373\u4ee4\u4f5c\u7528\u91cf\u5bf9\u54cd\u5e94\u573a \\(i\\tilde{\\phi}\\) \u7684\u53d8\u5206\u4e3a\u96f6\u7684\u8def\u5f84\u3002\u6267\u884c\u8be5\u53d8\u5206 (\\(\\delta S / \\delta(i\\tilde{\\phi}) = 0\\))\uff0c\u76f4\u63a5\u5f97\u5230\u7cfb\u7edf\u7684\u201c\u7ecf\u5178\u201d\u8fd0\u52a8\u65b9\u7a0b\uff1a</p> \\[ \\partial_t \\phi(\\vec{r}, t) = D \\nabla^2 \\phi(\\vec{r}, t) \\] <p>\u8fd9\u6b63\u662f\u7ecf\u5178\u7684\u3001\u786e\u5b9a\u6027\u7684\u6269\u6563\u65b9\u7a0b (diffusion equation) \u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#13-doi-peliti","title":"1.3 \u6df1\u5c42\u89e3\u8bfb\uff1aDoi-Peliti\u5f62\u5f0f\u7684\u201c\u8fc7\u65e9\u5e73\u5747\u201d","text":"<p>\u8fd9\u4e2a\u63a8\u5bfc\u5f97\u5230\u4e86\u4e00\u4e2a\u5b8c\u5168\u786e\u5b9a\u6027\u7684\u7ed3\u679c\u3002\u8fd9\u5f15\u51fa\u4e86\u4e00\u4e2a\u5173\u952e\u95ee\u9898\uff1a\u7cfb\u7edf\u4e2d\u7531\u7c92\u5b50\u79bb\u6563\u6027\u5e26\u6765\u7684\u968f\u673a\u6da8\u843d\u53bb\u54ea\u91cc\u4e86\uff1f</p> <p>\u7b54\u6848\u5728\u4e8eDoi-Peliti\u5f62\u5f0f\u7684\u6784\u5efa\u65b9\u5f0f\u672c\u8eab\u3002\u901a\u8fc7\u4ece\u4e00\u5f00\u59cb\u5c31\u4f7f\u7528 \\(a^\\dagger \\to \\phi\\)\uff0c\\(a \\to \\partial_\\phi + 1\\) \u8fd9\u79cd\u8fde\u7eed\u7684\u573a\u8868\u793a\uff0c\u8be5\u65b9\u6cd5\u5b9e\u9645\u4e0a\u5728\u7b2c\u4e00\u6b65\u5c31\u5df2\u7ecf\u8fdb\u884c\u4e86\u4e00\u79cd\u201c\u5e73\u5747\u5316\u201d\u6216\u201c\u5e73\u6ed1\u5316\u201d\u5904\u7406\u3002</p> <ol> <li> <p>\u7b97\u7b26\u4ee3\u6570\u7684\u6a21\u7cca\u5316 \uff1a\u5e95\u5c42\u7684\u4ea7\u751f\u548c\u6e6e\u706d\u7b97\u7b26\u6ee1\u8db3\u5bf9\u6613\u5173\u7cfb \\([a_i, a_j^\\dagger] = \\delta_{ij}\\)\uff0c\u8fd9\u5176\u4e2d\u5305\u542b\u4e86\u7c92\u5b50\u4e0d\u53ef\u5206\u5272\u7684\u79bb\u6563\u6027\u4fe1\u606f\u3002\u867d\u7136 \\([\\partial_i, \\phi_j] = \\delta_{ij}\\) \u7684\u6620\u5c04\u4fdd\u7559\u4e86\u8fd9\u79cd\u4ee3\u6570\u7ed3\u6784\uff0c\u4f46\u5b83\u7acb\u5373\u5c06\u95ee\u9898\u6295\u5c04\u5230\u4e86\u4e00\u4e2a\u7531\u8fde\u7eed\u51fd\u6570\u6784\u6210\u7684\u7a7a\u95f4\u4e2d\uff0c\u4ece\u800c\u6a21\u7cca\u4e86\u8ba1\u6570\u7684\u79bb\u6563\u672c\u8d28\u3002</p> </li> <li> <p>\u4f5c\u7528\u91cf\u7684\u4e8c\u6b21\u578b\u7ed3\u6784 \uff1a\u6700\u7ec8\u5f97\u5230\u7684DP\u4f5c\u7528\u91cf\u662f\u573a\u53d8\u91cf \\(\\phi\\) \u548c \\(i\\tilde{\\phi}\\) \u7684\u4e8c\u6b21\u578b\uff08\u5373\u53ea\u5305\u542b\u50cf \\(i\\tilde{\\phi}\\phi\\) \u6216 \\(i\\tilde{\\phi}\\nabla^2\\phi\\) \u8fd9\u6837\u7684\u9879\uff09\u3002\u5728\u573a\u8bba\u4e2d\uff0c\u4e8c\u6b21\u578b\u7684\u4f5c\u7528\u91cf\u603b\u662f\u5bf9\u5e94\u7740\u7ebf\u6027\u7684\u3001\u975e\u76f8\u4e92\u4f5c\u7528\u7684\u6216\u786e\u5b9a\u6027\u7684\u7406\u8bba\u3002\u6240\u6709\u5173\u4e8e\u6da8\u843d\u548c\u5173\u8054\u7684\u4fe1\u606f\u90fd\u9690\u85cf\u5728\u66f4\u9ad8\u9636\u7684\u9879\u4e2d\uff08\u4f8b\u5982 \\((i\\tilde{\\phi})^2\\phi^2\\)\uff09\uff0c\u800c\u8fd9\u4e9b\u9879\u5728DP\u5f62\u5f0f\u5bf9\u6269\u6563\u7684\u63a8\u5bfc\u4e2d\u5e76\u672a\u51fa\u73b0\u3002</p> </li> </ol> <p>Doi-Peliti\u5f62\u5f0f\u975e\u5e38\u9002\u5408\u63a8\u5bfc\u7cfb\u7edf\u7684\u5e73\u5747\u573a\u884c\u4e3a (mean-field dynamics) \u3002\u5b83\u51c6\u786e\u5730\u56de\u7b54\u4e86\u201c\u7c92\u5b50\u7684\u5e73\u5747\u6d53\u5ea6\u5982\u4f55\u6f14\u5316\uff1f\u201d\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u5176\u5185\u5728\u7684\u6784\u9020\uff0c\u5b83\u201c\u8fc7\u6ee4\u201d\u6389\u4e86\u6240\u6709\u5173\u4e8e\u6d53\u5ea6\u5982\u4f55\u56f4\u7ed5\u5176\u5e73\u5747\u503c\u8fdb\u884c\u968f\u673a\u6da8\u843d\u7684\u4fe1\u606f\u3002\u5b83\u7ed9\u51fa\u7684\uff0c\u662f\u4e00\u4e2a\u5e73\u6ed1\u3001\u65e0\u566a\u58f0\u7684\u5b8f\u89c2\u56fe\u50cf\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#14","title":"1.4 \u7b97\u7b26\u4ee3\u6570\u7684\u201c\u7ecf\u5178\u201d\u672c\u8d28","text":"<p>\u5728\u6574\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u9891\u7e41\u4f7f\u7528\u4e86\u201c\u4ea7\u751f\u7b97\u7b26\u201d\u3001\u201c\u6e6e\u706d\u7b97\u7b26\u201d\u3001\u201c\u5bf9\u6613\u5173\u7cfb\u201d\u7b49\u6e90\u81ea\u91cf\u5b50\u529b\u5b66\u7684\u672f\u8bed\uff0c\u5e76\u4e14\u5176\u4ee3\u6570\u7ed3\u6784 \\([a, a^\\dagger]=1\\) \u4e0e\u73bb\u8272\u5b50\u7b97\u7b26\u5b8c\u5168\u76f8\u540c\u3002\u8fd9\u662f\u5426\u610f\u5473\u7740\u6211\u4eec\u6b63\u5728\u5904\u7406\u4e00\u4e2a\u91cf\u5b50\u7cfb\u7edf\uff1f</p> <p>\u7b54\u6848\u662f\u5426\u5b9a\u7684\u3002\u6b63\u5982\u6559\u6388\u5728\u8bfe\u7a0b\u4e2d\u6240\u5f3a\u8c03\u7684\uff0c\u8fd9\u91cc\u7684\u7406\u8bba\u6846\u67b6\u672c\u8d28\u4e0a\u662f\u7ecf\u5178\u7684\u3002\u7b97\u7b26\u4ee3\u6570\u5728\u6b64\u5904\u5e76\u975e\u63cf\u8ff0\u91cf\u5b50\u6001\u7684\u53e0\u52a0\u4e0e\u7ea0\u7f20\uff0c\u800c\u662f\u4f5c\u4e3a\u4e00\u79cd\u6781\u5176\u5f3a\u5927\u7684\u6570\u5b66\u5de5\u5177\uff0c\u7528\u4ee5\u6c42\u89e3\u63cf\u8ff0\u7ecf\u5178\u6982\u7387\u6f14\u5316\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u3002</p> <ul> <li> <p>\u7ecf\u5178\u6982\u7387 vs. \u91cf\u5b50\u6982\u7387\u5e45\uff1a\u6211\u4eec\u5904\u7406\u7684\u6001\u77e2\u91cf \\(|\\Phi(t)\\rangle\\)\uff0c\u5176\u5c55\u5f00\u7cfb\u6570\u662f\u771f\u5b9e\u7684\u6982\u7387 \\(P(n,t)\\)\uff1b\u800c\u5728\u91cf\u5b50\u529b\u5b66\u4e2d\uff0c\u6ce2\u51fd\u6570\u7684\u5c55\u5f00\u7cfb\u6570\u662f\u590d\u6570\u7684\u6982\u7387\u5e45\uff0c\u9700\u8981\u53d6\u6a21\u5e73\u65b9\u624d\u80fd\u5f97\u5230\u6982\u7387\u3002</p> </li> <li> <p>\u6570\u5b66\u540c\u6784\u6027\uff1a\u7ecf\u5178\u968f\u673a\u8fc7\u7a0b\u4e0e\u91cf\u5b50\u7cfb\u7edf\u4e4b\u6240\u4ee5\u80fd\u5171\u4eab\u540c\u4e00\u5957\u7b97\u7b26\u4ee3\u6570\uff0c\u662f\u56e0\u4e3a\u5b83\u4eec\u5e95\u5c42\u7684\u6f14\u5316\u65b9\u7a0b\uff08\u4e3b\u65b9\u7a0b vs. \u859b\u5b9a\u8c14\u65b9\u7a0b\uff09\u5728\u6570\u5b66\u4e0a\u662f\u540c\u6784\u7684\u3002\u5347\u964d\u7b97\u7b26\u5728\u6b64\u5904\u662f\u6c42\u89e3\u7ebf\u6027\u7b97\u5b50\u8c31\u7cfb\u7684\u901a\u7528\u6280\u5de7\uff0c\u800c\u975e\u91cf\u5b50\u73b0\u8c61\u7684\u4e13\u5229\u3002</p> </li> </ul> <p>\u523b\u610f\u907f\u514d\u4f7f\u7528\u201c\u76f8\u5e72\u6001\u201d\u7b49\u7eaf\u7cb9\u7684\u91cf\u5b50\u672f\u8bed\uff0c\u800c\u91c7\u7528\u201c\u6cca\u677e\u8868\u793a\u201d\u3001\u201c\u751f\u6210\u51fd\u6570\u201d\u7b49\u66f4\u8d34\u8fd1\u7ecf\u5178\u6982\u7387\u8bba\u7684\u8bed\u8a00\uff0c\u6b63\u662f\u4e3a\u4e86\u5f3a\u8c03\u8fd9\u4e00\u6982\u5ff5\u4e0a\u7684\u533a\u522b\uff0c\u907f\u514d\u5c06\u7ecf\u5178\u7684\u968f\u673a\u8fc7\u7a0b\u4e0e\u771f\u6b63\u7684\u91cf\u5b50\u591a\u4f53\u95ee\u9898\u76f8\u6df7\u6dc6\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#15-vs","title":"1.5 \u80cc\u666f\u77e5\u8bc6\uff1a\u73bb\u8272\u5b50\u6a21\u578b vs. \u6392\u4ed6\u8fc7\u7a0b","text":"<p>\u8fd9\u8282\u8bfe\u6784\u5efa\u7684\u573a\u8bba\u6a21\u578b\uff0c\u9690\u542b\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u7269\u7406\u5047\u8bbe\uff1a\u6bcf\u4e2a\u683c\u70b9\u53ef\u4ee5\u5bb9\u7eb3\u4efb\u610f\u6570\u91cf\u7684\u7c92\u5b50\u3002\u8fd9\u5728\u7b97\u7b26\u4ee3\u6570\u4e2d\u4f53\u73b0\u4e3a\uff0c\u6765\u81ea\u4e0d\u540c\u683c\u70b9\u7684\u7b97\u7b26\u76f8\u4e92\u5bf9\u6613\uff0c\u4e14\u5355\u4e2a\u683c\u70b9\u4e0a\u7684\u4ea7\u751f\u7b97\u7b26 \\(a_i^\\dagger\\) \u53ef\u4ee5\u65e0\u9650\u6b21\u4f5c\u7528\u3002\u8fd9\u79cd\u6a21\u578b\u5728\u7269\u7406\u5b66\u4e0a\u88ab\u79f0\u4e3a\u73bb\u8272\u5b50\u6a21\u578b\uff08Bosonic Model\uff09\u3002</p> <p>\u4e0e\u4e4b\u76f8\u5bf9\u7684\u662f\u53e6\u4e00\u7c7b\u91cd\u8981\u7684\u7269\u7406\u6a21\u578b\u2014\u2014\u6392\u4ed6\u8fc7\u7a0b\uff08Exclusion Processes\uff09\uff0c\u4f8b\u5982\u201c\u7b80\u5355\u5bf9\u79f0\u6392\u4ed6\u8fc7\u7a0b\u201d\uff08SSEP\uff09\u3002\u5728\u8fd9\u7c7b\u6a21\u578b\u4e2d\uff0c\u6bcf\u4e2a\u683c\u70b9\u6700\u591a\u53ea\u80fd\u5bb9\u7eb3\u4e00\u4e2a\u7c92\u5b50\uff08\u8d39\u7c73\u5b50\u7279\u6027\uff09\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5f53\u4e00\u4e2a\u7c92\u5b50\u8bd5\u56fe\u8df3\u5165\u4e00\u4e2a\u5df2\u88ab\u5360\u636e\u7684\u683c\u70b9\u65f6\uff0c\u8fd9\u6b21\u8df3\u8dc3\u4f1a\u88ab\u7981\u6b62\u3002</p> <p>\u63cf\u8ff0\u6392\u4ed6\u8fc7\u7a0b\u9700\u8981\u4e00\u5957\u4e0d\u540c\u7684\u3001\u66f4\u590d\u6742\u7684\u7b97\u7b26\u4ee3\u6570\uff08\u4f8b\u5982\u81ea\u65cb\u7b97\u7b26\u6216\u8d39\u7c73\u5b50\u7b97\u7b26\uff09\u3002\u7406\u89e3\u6211\u4eec\u5f53\u524d\u6a21\u578b\u7684\u201c\u73bb\u8272\u5b50\u201d\u5c5e\u6027\uff0c\u6709\u52a9\u4e8e\u660e\u786e\u5176\u9002\u7528\u8303\u56f4\uff0c\u5e76\u4e3a\u5c06\u6765\u5b66\u4e60\u66f4\u590d\u6742\u7684\u6a21\u578b\uff08\u5982\u5305\u542b\u4f53\u79ef\u6392\u9664\u6548\u5e94\u7684\u7cfb\u7edf\uff09\u5960\u5b9a\u6982\u5ff5\u57fa\u7840\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#2-","title":"2. \u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\uff1a\u6355\u6349\u968f\u673a\u8df3\u8dc3","text":"<p>\u4e0a\u4e00\u8282\u7684\u63a8\u5bfc\u8868\u660e\uff0cDoi-Peliti\u5f62\u5f0f\u5728\u53d6\u8fde\u7eed\u6781\u9650\u540e\uff0c\u4e22\u5931\u4e86\u6240\u6709\u5173\u4e8e\u968f\u673a\u6da8\u843d\u7684\u4fe1\u606f\uff0c\u6700\u7ec8\u53ea\u5f97\u5230\u4e86\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u5e73\u5747\u573a\u7406\u8bba\u3002\u4e3a\u4e86\u6784\u5efa\u4e00\u4e2a\u66f4\u5b8c\u6574\u7684\u3001\u80fd\u591f\u63cf\u8ff0\u771f\u5b9e\u968f\u673a\u6027\u7684\u573a\u8bba\uff0c\u9700\u8981\u4e00\u79cd\u4e0d\u8d70\u201c\u6377\u5f84\u201d\u3001\u5fe0\u5b9e\u4e8e\u5e95\u5c42\u79bb\u6563\u8df3\u8dc3\u4e8b\u4ef6\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002</p> <p>\u8fd9\u8282\u8bfe\u5c06\u8f6c\u5411\u5728\u7b2c37\u8bb2\u4e2d\u4ecb\u7ecd\u7684\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\uff08Kramers-Moyal Path Integral, KMPI\uff09\u3002\u8fd9\u79cd\u65b9\u6cd5\u76f4\u63a5\u4ece\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u7684\u79bb\u6563\u8df3\u8dc3\u4e8b\u4ef6\u51fa\u53d1\uff0c\u5176\u6570\u5b66\u5f62\u5f0f\u80fd\u591f\u5b8c\u6574\u5730\u4fdd\u7559\u8df3\u8dc3\u8fc7\u7a0b\u7684\u5168\u90e8\u7edf\u8ba1\u4fe1\u606f\uff0c\u4ece\u800c\u4e3a\u6b63\u786e\u63a8\u5bfc\u5305\u542b\u5185\u7980\u566a\u58f0\u7684\u968f\u673a\u573a\u8bba\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u57fa\u7840\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#21","title":"2.1 \u4f5c\u7528\u91cf\u7684\u6784\u5efa\uff1a\u5fe0\u5b9e\u4e8e\u8df3\u8dc3\u4e8b\u4ef6","text":"<p>\u4e0eDP\u5f62\u5f0f\u4e0d\u540c\uff0cKMPI\u76f4\u63a5\u4ece\u4e3b\u65b9\u7a0b\u7684\u79ef\u5206\u5f62\u5f0f\u51fa\u53d1\uff0c\u5176\u5bf9\u5e94\u7684\u4f5c\u7528\u91cf\u5177\u6709\u4e00\u79cd\u622a\u7136\u4e0d\u540c\u7684\u7ed3\u6784\u3002\u6839\u636e\u7b2c37\u8bb2\u7684\u63a8\u5bfc\uff0c\u5bf9\u4e8e\u683c\u70b9\u4e0a\u7684\u7eaf\u6269\u6563\u8fc7\u7a0b\uff0c\u5176KMPI\u4f5c\u7528\u91cf\u4e3a\uff1a</p> \\[S[\\{n_i, i\\tilde{n}_i\\}] = \\int_{t_0}^{t} d\\tau \\sum_{i \\in L} \\left[ i\\tilde{n}_i\\partial_\\tau n_i - \\sum_{j \\sim i} D_{ji} n_i \\left(e^{i (\\tilde{n}_j- \\tilde{n}_i)}-1\\right) \\right]\\] <ul> <li> <p>\u8fd9\u91cc\u7684\u53d8\u91cf \\(n_i\\) \u4ee3\u8868\u683c\u70b9 \\(i\\) \u4e0a\u7684\u771f\u5b9e\u7c92\u5b50\u6570\uff08\u6216\u5bc6\u5ea6\uff09\uff0c\u800c\u975eDP\u5f62\u5f0f\u4e2d\u7684\u62bd\u8c61\u573a \\(\\phi_i\\)\u3002\\(\\tilde{n}_i\\) \u662f\u5176\u5bf9\u5e94\u7684\u54cd\u5e94\u573a\u3002</p> </li> <li> <p>\u4f5c\u7528\u91cf\u7684\u6838\u5fc3\u662f\u6307\u6570\u9879 \\(\\left(e^{i (\\tilde{n}_j - \\tilde{n}_i)}-1\\right)\\)\uff0c\u5b83\u7cbe\u786e\u5730\u7f16\u7801\u4e86\u5355\u6b21\u7c92\u5b50\u8df3\u8dc3\u4e8b\u4ef6\u3002</p> </li> </ul> <p>\u7269\u7406\u610f\u4e49: \u8fd9\u4e00\u9879\u7684\u7ed3\u6784\u53ef\u4ee5\u88ab\u89e3\u8bfb\u4e3a\u603b\u8df3\u8dc3\u901f\u7387 \u00d7 (\u8df3\u8dc3\u7b97\u7b26) \u3002</p> <ul> <li> <p>\\(D_{ji} n_i\\) \u662f\u7c92\u5b50\u4ece\u683c\u70b9 \\(i\\) \u8df3\u5f80\u5176\u90bb\u5c45 \\(j\\) \u7684\u603b\u901f\u7387\u3002</p> </li> <li> <p>\u6307\u6570\u9879 \\(e^{i (\\tilde{n}_j - \\tilde{n}_i)}\\) \u5728\u8def\u5f84\u79ef\u5206\u7684\u6846\u67b6\u4e0b\uff0c\u662f\u4e00\u4e2a\u201c\u79fb\u4f4d\u7b97\u7b26\u201d\u7684\u5085\u91cc\u53f6\u8868\u793a\u3002\u5b83\u7cbe\u786e\u5730\u6267\u884c\u4e86\u8fd9\u6837\u4e00\u4e2a\u64cd\u4f5c\uff1a\u5c06\u683c\u70b9 \\(i\\) \u7684\u7c92\u5b50\u6570\u51cf\u4e00\uff08\u5bf9\u5e94\u56e0\u5b50 \\(e^{-i\\tilde{n}_i}\\)\uff09\uff0c\u540c\u65f6\u5c06\u683c\u70b9 \\(j\\) \u7684\u7c92\u5b50\u6570\u52a0\u4e00\uff08\u5bf9\u5e94\u56e0\u5b50 \\(e^{i\\tilde{n}_j}\\)\uff09\u3002</p> </li> <li> <p>\u51cf\u53bb 1 \u662f\u4e3a\u4e86\u786e\u4fdd\u5728\u6ca1\u6709\u8df3\u8dc3\u53d1\u751f\u65f6\uff0c\u8be5\u9879\u4e3a\u96f6\uff0c\u4e0d\u8d21\u732e\u4efb\u4f55\u52a8\u529b\u5b66\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0cKMPI\u7684\u4f5c\u7528\u91cf\u6ca1\u6709\u50cfDP\u5f62\u5f0f\u90a3\u6837\u9884\u5148\u5c06\u8df3\u8dc3\u8fc7\u7a0b\u7ebf\u6027\u5316\uff0c\u800c\u662f\u5b8c\u6574\u5730\u4fdd\u7559\u4e86\u5176\u6307\u6570\u5f62\u5f0f\uff0c\u4ece\u800c\u4e5f\u4fdd\u7559\u4e86\u8df3\u8dc3\u4e8b\u4ef6\u7684\u5168\u90e8\u7edf\u8ba1\u4fe1\u606f\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#22-kramers-moyal","title":"2.2 \u8fde\u7eed\u6781\u9650\u4e0eKramers-Moyal\u5c55\u5f00\uff1a\u566a\u58f0\u7684\u6d6e\u73b0","text":"<p>\u73b0\u5728\uff0c\u5bf9KMPI\u4f5c\u7528\u91cf\u6267\u884c\u540c\u6837\u7684\u64cd\u4f5c\uff1a\u53d6\u8fde\u7eed\u6781\u9650\u3002\u8fd9\u6b63\u662f\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u8ba1\u7b97\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c06\u63ed\u793a\uff0c\u5bf9\u6307\u6570\u9879\u8fdb\u884c\u7cfb\u7edf\u6027\u7684\u5c55\u5f00\uff0c\u7b49\u4ef7\u4e8e\u4e00\u6b21\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u5c55\u5f00\uff0c\u5e76\u4ece\u4e2d\u81ea\u7136\u5730\u6d6e\u73b0\u51fa\u566a\u58f0\u9879\u3002</p> <p>\u5c06\u6307\u6570\u9879\u8fdb\u884c\u6cf0\u52d2\u7ea7\u6570\u5c55\u5f00\uff1a</p> \\[ e^x - 1 = x + \\frac{1}{2}x^2 + \\mathcal{O}(x^3) \\] <p>\u4ee4 \\(x = i(\\tilde{n}_j - \\tilde{n}_i)\\)\uff0c\u5e76\u5c06\u5747\u5300\u901f\u7387 \\(D_{ij} = D\\) \u4ee3\u5165\uff0c\u4f5c\u7528\u91cf\u4e2d\u7684\u52a8\u529b\u5b66\u9879\u53d8\u4e3a\uff1a</p> \\[ \\sum_{j \\sim i} D n_i \\left( e^{i(\\tilde{n}_j - \\tilde{n}_i)} - 1 \\right) = D n_i \\sum_{j \\sim i} \\left[ i(\\tilde{n}_j - \\tilde{n}_i) + \\frac{1}{2}(i(\\tilde{n}_j - \\tilde{n}_i))^2 + \\cdots \\right] \\] <p>\u73b0\u5728\u9010\u9879\u5206\u6790\u8fd9\u4e2a\u5c55\u5f00\u5f0f\u5728 \\(a \\to 0\\) \u65f6\u7684\u884c\u4e3a\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#1-drift-term","title":"1. \u4e00\u9636\u9879 (Drift Term)","text":"<p>$$ D n_i \\sum_{j \\sim i} i(\\tilde{n}_j - \\tilde{n}_i) $$ \u8fd9\u4e00\u9879\u6b63\u6bd4\u4e8e\u683c\u70b9\u62c9\u666e\u62c9\u65af\u7b97\u7b26\u4f5c\u7528\u5728 \\(i\\tilde{n}_i\\) \u4e0a\u3002\u5728\u8fde\u7eed\u6781\u9650\u4e0b\uff0c\u5b83\u6536\u655b\u4e8e \\(D n(\\vec{r}, t) \\nabla^2(i\\tilde{n}(\\vec{r}, t))\\)\u3002\u5728\u4f5c\u7528\u91cf\u7684\u79ef\u5206\u4e2d\uff0c\u901a\u8fc7\u4e00\u6b21\u5206\u90e8\u79ef\u5206\uff0c\u53ef\u4ee5\u5c06\u62c9\u666e\u62c9\u65af\u7b97\u7b26\u4ece\u54cd\u5e94\u573a \\(\\tilde{n}\\) \u8f6c\u79fb\u5230\u7269\u7406\u573a \\(n\\) \u4e0a\uff0c\u5f97\u5230 \\(-D \\nabla(i\\tilde{n}) \\cdot \\nabla n\\) \u6216 \\(i\\tilde{n} D \\nabla^2 n\\)\u3002</p> <p>\u7269\u7406\u610f\u4e49: \u8fd9\u4e2a\u7ed3\u679c\u4e0eDP\u5f62\u5f0f\u5f97\u5230\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\uff0c\u5b83\u8d21\u732e\u4e86\u7cfb\u7edf\u7684\u786e\u5b9a\u6027\u6269\u6563\u6f02\u79fb\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#2-noise-term","title":"2. \u4e8c\u9636\u9879 (Noise Term)","text":"\\[ D n_i \\sum_{j \\sim i} \\frac{1}{2}(i(\\tilde{n}_j - \\tilde{n}_i))^2 = -\\frac{D n_i}{2} \\sum_{j \\sim i} (\\tilde{n}_j - \\tilde{n}_i)^2 \\] <p>\u5dee\u5206 \\((\\tilde{n}_j - \\tilde{n}_i)\\) \u662f\u5bf9\u68af\u5ea6 \\(\\nabla\\tilde{n}\\) \u7684\u79bb\u6563\u8fd1\u4f3c\uff0c\u5373 \\((\\tilde{n}_j - \\tilde{n}_i) \\approx a \\nabla\\tilde{n}\\)\u3002\u56e0\u6b64\uff0c\u5728\u8fde\u7eed\u6781\u9650\u4e0b\uff0c\u4e8c\u9636\u9879\u6536\u655b\u4e8e\uff1a</p> \\[ - \\frac{D n_i}{2} \\sum_{j \\sim i} (\\tilde{n}_j - \\tilde{n}_i)^2 \\xrightarrow{a \\to 0} - D n(\\vec{r}, t) (\\nabla \\tilde{n}(\\vec{r}, t))^2 = D n(\\vec{r}, t) (\\nabla (i\\tilde{n}))^2 \\] <p>\u7269\u7406\u610f\u4e49: \u8fd9\u4e2a\u4e8c\u6b21\u9879\u5728DP\u5f62\u5f0f\u7684\u63a8\u5bfc\u4e2d\u5b8c\u5168\u6ca1\u6709\u51fa\u73b0\u3002\u5b83\u6b63\u662f\u5728\u573a\u8bba\u4e2d\u4ee3\u8868\u968f\u673a\u566a\u58f0\u7684\u9879\u3002</p> <p>\u5c06\u4e00\u9636\u9879\u548c\u4e8c\u9636\u9879\u7ec4\u5408\u8d77\u6765\uff08\u66f4\u9ad8\u9636\u9879\u5728 \\(a \\to 0\\) \u65f6\u53ef\u4ee5\u88ab\u5ffd\u7565\uff0c\u8fd9\u4e0e\u7b2c37\u8bb2\u4e2dPawula\u5b9a\u7406\u7684\u7cbe\u795e\u4e00\u81f4\uff09\uff0c\u5f97\u5230\u7684\u8fde\u7eed\u4f5c\u7528\u91cf\u4e3a\uff1a</p> \\[ S[n, i\\tilde{n}] = \\int dt \\int d^d x \\left\\{ i\\tilde{n} \\partial_t n - D n \\left[ \\nabla^2(i\\tilde{n}) + (\\nabla i\\tilde{n})^2 \\right] \\right\\} \\] <p>\u8fd9\u4e2a\u4f5c\u7528\u91cf\u4e0d\u4ec5\u5305\u542b\u4e86\u786e\u5b9a\u6027\u7684\u6f02\u79fb\u9879\uff0c\u8fd8\u5305\u542b\u4e86\u4e00\u4e2a\u5173\u952e\u7684\u3001\u6b63\u6bd4\u4e8e \\((i\\tilde{n})^2\\) \u7684\u566a\u58f0\u9879\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#23","title":"2.3 \u6307\u6570\u9879\u4f5c\u4e3a\u79bb\u6563\u6027\u7684\u201c\u8bb0\u5fc6\u201d","text":"<p>\u4e3a\u4ec0\u4e48KMPI\u6210\u529f\u5730\u5bfc\u51fa\u4e86\u8fd9\u4e2a\u989d\u5916\u7684\u4e8c\u6b21\u9879\uff0c\u800cDP\u5374\u5931\u8d25\u4e86\uff1f</p> <p>\u6839\u672c\u539f\u56e0\u5728\u4e8e\uff0c\u6307\u6570\u9879 \\(e^{i(\\tilde{n}_j - \\tilde{n}_i)}\\) \u662f\u8df3\u8dc3\u8fc7\u7a0b\u77e9\uff08moment\uff09\u7684\u751f\u6210\u51fd\u6570\u3002\u6cf0\u52d2\u5c55\u5f00\u8fd9\u4e2a\u6307\u6570\u51fd\u6570\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u7cfb\u7edf\u5730\u8ba1\u7b97\u8df3\u8dc3\u8fc7\u7a0b\u7684\u6240\u6709\u77e9\uff1a</p> <ul> <li> <p>\u5c55\u5f00\u5f0f\u7684\u4e00\u6b21\u9879\uff0c\u6b63\u6bd4\u4e8e \\(i\\Delta\\tilde{n}\\)\uff0c\u5bf9\u5e94\u4e8e\u8df3\u8dc3\u7684\u4e00\u9636\u77e9\uff08\u5e73\u5747\u4f4d\u79fb\uff09\uff0c\u8fd9\u4ea7\u751f\u4e86\u786e\u5b9a\u6027\u7684\u6f02\u79fb\uff08drift\uff09\u3002</p> </li> <li> <p>\u5c55\u5f00\u5f0f\u7684\u4e8c\u6b21\u9879\uff0c\u6b63\u6bd4\u4e8e \\((i\\Delta\\tilde{n})^2\\)\uff0c\u5bf9\u5e94\u4e8e\u8df3\u8dc3\u7684\u4e8c\u9636\u77e9\uff08\u4f4d\u79fb\u7684\u65b9\u5dee\uff09\uff0c\u8fd9\u4ea7\u751f\u4e86\u566a\u58f0\u9879\uff08noise\uff09\u3002</p> </li> </ul> <p>Doi-Peliti\u5f62\u5f0f\u4ece\u4e00\u5f00\u59cb\u5c31\u5047\u8bbe\u4e86\u4e00\u4e2a\u7ebf\u6027\u7684\u52a8\u529b\u5b66\u7ed3\u6784\uff08\\(\\phi(\\partial_j - \\partial_i)\\)\uff09\uff0c\u8fd9\u7b49\u4ef7\u4e8e\u53ea\u4fdd\u7559\u4e86\u6cf0\u52d2\u5c55\u5f00\u7684\u7b2c\u4e00\u9879\u3002\u5b83\u53ea\u6355\u6349\u4e86\u8df3\u8dc3\u7684\u5e73\u5747\u6548\u679c\uff0c\u800c\u5b8c\u5168\u5ffd\u7565\u4e86\u8df3\u8dc3\u8fc7\u7a0b\u7684\u968f\u673a\u6027\uff08\u65b9\u5dee\uff09\u3002</p> <p>KMPI\u662f\u4e00\u79cd\u66f4\u5fe0\u5b9e\u7684\u8868\u793a\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u5728\u5f00\u59cb\u65f6\u5c31\u5bf9\u8df3\u8dc3\u8fc7\u7a0b\u505a\u4efb\u4f55\u8fd1\u4f3c\u3002\u5b83\u5c06\u63cf\u8ff0\u79bb\u6563\u4e8b\u4ef6\u7684\u5b8c\u6574\u6570\u5b66\u7ed3\u6784\uff08\u6307\u6570\u9879\uff09\u5e26\u5165\u4e86\u8fde\u7eed\u6781\u9650\u7684\u8ba1\u7b97\u4e2d\u3002\u53d6\u6781\u9650\u7684\u8fc7\u7a0b\uff0c\u53d8\u6210\u4e86\u4e00\u6b21\u7cfb\u7edf\u7684Kramers-Moyal\u5c55\u5f00\u3002\u5c55\u5f00\u7684\u7b2c\u4e00\u9879\u7ed9\u51fa\u4e86\u5b8f\u89c2\u7684\u3001\u786e\u5b9a\u6027\u7684\u52a8\u529b\u5b66\uff0c\u800c\u7b2c\u4e8c\u9879\u5219\u7ed9\u51fa\u4e86\u7531\u7c92\u5b50\u79bb\u6563\u6027\u5bfc\u81f4\u7684\u3001\u4e0d\u53ef\u907f\u514d\u7684\u968f\u673a\u6da8\u843d\u3002\u8fd9\u4e2a\u566a\u58f0\u9879\uff0c\u662f\u5e95\u5c42\u79bb\u6563\u8df3\u8dc3\u4e8b\u4ef6\u65b9\u5dee\u5728\u5b8f\u89c2\u5c3a\u5ea6\u4e0a\u7684\u76f4\u63a5\u4f53\u73b0\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#3","title":"3. \u4e58\u6027\u566a\u58f0\u7684\u6d6e\u73b0","text":"<p>\u5728\u4e0a\u4e00\u8282\u7684\u8ba1\u7b97\u4e2d\uff0c\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\uff08KMPI\uff09\u901a\u8fc7\u4e00\u79cd\u66f4\u4e25\u8c28\u7684\u6781\u9650\u8fc7\u7a0b\uff0c\u5bfc\u51fa\u4e86\u4e00\u4e2a\u4e0eDoi-Peliti\uff08DP\uff09\u5f62\u5f0f\u4e0d\u540c\u7684\u4f5c\u7528\u91cf\u3002\u5176\u5173\u952e\u533a\u522b\u5728\u4e8eKMPI\u4f5c\u7528\u91cf\u4e2d\u591a\u51fa\u4e86\u4e00\u4e2a\u6b63\u6bd4\u4e8e \\(n (\\nabla (i\\tilde{n}))^2\\) \u7684\u9879\u3002\u8fd9\u4e2a\u770b\u4f3c\u7eaf\u6570\u5b66\u7684\u989d\u5916\u9879\uff0c\u5b9e\u9645\u4e0a\u8574\u542b\u7740\u6df1\u523b\u7684\u7269\u7406\u5185\u5bb9\u3002\u8fd9\u8282\u8bfe\u7684\u76ee\u6807\uff0c\u5c31\u662f\u63ed\u793a\u8fd9\u4e00\u9879\u5982\u4f55\u6210\u4e3a\u8fde\u63a5\u5fae\u89c2\u7c92\u5b50\u79bb\u6563\u6027\u4e0e\u5b8f\u89c2\u968f\u673a\u6da8\u843d\u7684\u6865\u6881\uff0c\u5e76\u6700\u7ec8\u5f15\u51fa\u4e58\u6027\u566a\u58f0\uff08multiplicative noise\uff09\u8fd9\u4e00\u6838\u5fc3\u7269\u7406\u6982\u5ff5\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#31","title":"3.1 \u4ece\u4f5c\u7528\u91cf\u5230\u6717\u4e4b\u4e07\u65b9\u7a0b","text":"<p>\u4e3a\u4e86\u7ffb\u8bd1KMPI\u4f5c\u7528\u91cf\u7684\u7269\u7406\u610f\u4e49\uff0c\u53ef\u4ee5\u5c06\u5176\u4e0e\u5728\u7b2c32\u8bb2\u548c\u7b2c37\u8bb2\u4e2d\u5efa\u7acb\u7684\u3001\u63cf\u8ff0\u901a\u7528\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684MSRJD\u4f5c\u7528\u91cf\u7684\u6807\u51c6\u5f62\u5f0f\u8fdb\u884c\u5bf9\u6bd4\u3002\u4e00\u4e2a\u7531\u4ee5\u4e0b\u6717\u4e4b\u4e07\u968f\u673a\u5fae\u5206\u65b9\u7a0b\uff08SPDE\uff0c\u91c7\u7528Ito\u7ea6\u5b9a\uff09\u63cf\u8ff0\u7684\u8fde\u7eed\u968f\u673a\u8fc7\u7a0b\uff1a</p> \\[ \\partial_t \\phi = F[\\phi] + G[\\phi] \\eta(t) \\] <p>\u5176\u5bf9\u5e94\u7684MSRJD\u4f5c\u7528\u91cf\u4e3a\uff1a</p> \\[ S[\\phi, i\\tilde{\\phi}] = \\int dt \\int d^d x \\left[ i\\tilde{\\phi} (\\partial_t \\phi - F[\\phi]) - \\frac{1}{2} G^2[\\phi] (i\\tilde{\\phi})^2 \\right] \\] <ul> <li> <p>\\(F[\\phi]\\) \u662f\u786e\u5b9a\u6027\u7684\u6f02\u79fb\u9879 (Drift Term) \u3002</p> </li> <li> <p>\\(G[\\phi]\\) \u662f\u566a\u58f0\u5f3a\u5ea6 (Noise Amplitude) \u3002</p> </li> <li> <p>\\(\\eta(t)\\) \u662f\u5747\u503c\u4e3a\u96f6\u3001\u65b9\u5dee\u4e3a \\(\\langle \\eta(t) \\eta(t') \\rangle = 2\\delta(t - t')\\) \u7684\u9ad8\u65af\u767d\u566a\u58f0\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u56e0\u5b502\u662f\u4e00\u79cd\u5e38\u89c1\u7ea6\u5b9a\uff0c\u5b83\u4f1a\u5f71\u54cd\u566a\u58f0\u5f3a\u5ea6\u7684\u5b9a\u4e49\uff09\u3002</p> </li> </ul> <p>\u73b0\u5728\uff0c\u5c06\u4e0a\u4e00\u8282\u63a8\u5bfc\u51fa\u7684KMPI\u4f5c\u7528\u91cf\uff08\u4e3a\u4fbf\u4e8e\u6bd4\u8f83\uff0c\u5df2\u901a\u8fc7\u5206\u90e8\u79ef\u5206\u6574\u7406\uff09\u4e0e\u8fd9\u4e2a\u6807\u51c6\u5f62\u5f0f\u8fdb\u884c\u9010\u9879\u5bf9\u6bd4\uff1a</p> \\[ S_{KMPI}[n, i\\tilde{n}] = \\int dt \\int d^d x \\left\\{ i\\tilde{n} (\\partial_t n - D \\nabla^2 n) - D n (i\\tilde{n})^2 \\right\\} \\] <p>\u901a\u8fc7\u76f4\u63a5\u6bd4\u8f83\uff0c\u53ef\u4ee5\u7acb\u523b\u8bc6\u522b\u51fa\u7b49\u6548\u6717\u4e4b\u4e07\u65b9\u7a0b\u4e2d\u7684\u5404\u9879\uff1a</p> <ul> <li> <p>\u6f02\u79fb\u9879: \\(F[n] = D \\nabla^2 n\\)</p> </li> <li> <p>\u566a\u58f0\u5f3a\u5ea6\u5e73\u65b9: \\(\\frac{1}{2} G^2[n] = D n \\implies G[n] = \\sqrt{2Dn}\\)</p> </li> </ul> <p>\u56e0\u6b64\uff0cKMPI\u4f5c\u7528\u91cf\u6240\u63cf\u8ff0\u7684\u7269\u7406\u8fc7\u7a0b\uff0c\u7531\u4ee5\u4e0b\u7684\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\uff08SPDE\uff09\u7ed9\u51fa\uff1a</p> \\[ \\partial_t n(\\vec{r}, t) = D \\nabla^2 n(\\vec{r}, t) + \\nabla \\cdot \\left( \\sqrt{2D n(\\vec{r}, t)} \\, \\vec{\\eta}(\\vec{r}, t) \\right) \\] <ul> <li> <p>\\(\\vec{\\eta}\\) \u662f\u65f6\u7a7a\u9ad8\u65af\u767d\u566a\u58f0\uff0c\u6ee1\u8db3 \\(\\langle \\eta_\\alpha(\\vec{r}, t) \\eta_\\beta(\\vec{r}', t') \\rangle = \\delta_{\\alpha\\beta} \\delta(\\vec{r} - \\vec{r}') \\delta(t - t')\\)\u3002</p> </li> <li> <p>\u566a\u58f0\u9879\u88ab\u5199\u6210\u4e86\u6563\u5ea6\u5f62\u5f0f \\(\\nabla \\cdot (\\dots)\\)\uff0c\u8fd9\u4f53\u73b0\u4e86\u7c92\u5b50\u6570\u5b88\u6052\u7684\u7279\u6027\uff1a\u566a\u58f0\u4e0d\u4f1a\u51ed\u7a7a\u521b\u9020\u6216\u6d88\u706d\u7c92\u5b50\uff0c\u800c\u662f\u5728\u7a7a\u95f4\u4e2d\u91cd\u65b0\u5206\u5e03\u5b83\u4eec\uff0c\u5f62\u6210\u968f\u673a\u7684\u7c92\u5b50\u6d41\u3002</p> </li> </ul> <p>\u6ce8\uff1a\u8bb2\u5ea7\u677f\u4e66\u4e0a\u7684\u566a\u58f0\u9879\u4e3a \\(\\nabla \\cdot (\\sqrt{D n} \\, \\vec{\\lambda})\\)\u3002\u8fd9\u91cc\u7684 \\(\\sqrt{2}\\) \u56e0\u5b50\u5dee\u5f02\u6e90\u4e8e\u5bf9\u566a\u58f0\u5173\u8054\u51fd\u6570\u5b9a\u4e49\u7684\u4e0d\u540c\uff08\u5355\u4f4d\u65b9\u5dee\u6216\u65b9\u5dee\u4e3a2\uff09\uff0c\u7269\u7406\u672c\u8d28\u5b8c\u5168\u76f8\u540c\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#32","title":"3.2 \u4ec0\u4e48\u662f\u4e58\u6027\u566a\u58f0\uff1f","text":"<p>\u8fd9\u4e2aSPDE\u4e0eDP\u5f62\u5f0f\u5bfc\u51fa\u7684\u786e\u5b9a\u6027\u6269\u6563\u65b9\u7a0b\u7684\u5173\u952e\u533a\u522b\u5728\u4e8e\u7b2c\u4e8c\u9879\uff0c\u5373\u566a\u58f0\u9879\u3002\u7279\u522b\u5730\uff0c\u566a\u58f0\u7684\u5f3a\u5ea6\uff08\u632f\u5e45\uff09\\(\\sqrt{2Dn}\\) \u4e0d\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u800c\u662f\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u72b6\u6001\uff08\u7c92\u5b50\u5bc6\u5ea6 \\(n\\)\uff09\u672c\u8eab\u3002\u8fd9\u79cd\u566a\u58f0\u88ab\u79f0\u4e3a \u4e58\u6027\u566a\u58f0\uff08multiplicative noise\uff09\u3002</p> <p>\u5b83\u7684\u7269\u7406\u610f\u4e49\u975e\u5e38\u76f4\u89c2\u548c\u6df1\u523b\uff1a</p> <ul> <li> <p>\u5728\u7c92\u5b50\u5bc6\u5ea6\u5f88\u9ad8\uff08\\(n\\) \u5f88\u5927\uff09\u7684\u533a\u57df\uff0c\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u968f\u673a\u8df3\u8dc3\u4e8b\u4ef6\u975e\u5e38\u9891\u7e41\uff0c\u56e0\u6b64\u6d53\u5ea6\u7684\u6da8\u843d\u4e5f\u5f88\u5927\u3002</p> </li> <li> <p>\u5728\u7c92\u5b50\u5bc6\u5ea6\u5f88\u4f4e\u751a\u81f3\u4e3a\u96f6\uff08\\(n \\to 0\\)\uff09\u7684\u533a\u57df\uff0c\u51e0\u4e4e\u6ca1\u6709\u7c92\u5b50\u53ef\u4ee5\u8df3\u8dc3\uff0c\u56e0\u6b64\u968f\u673a\u6da8\u843d\u4e5f\u8d8b\u4e8e\u96f6\u3002</p> </li> </ul> <p>\u8fd9\u79cd\u6e90\u4e8e\u6784\u6210\u7cfb\u7edf\u7684\u201c\u4e2a\u4f53\u201d\u6570\u91cf\u6709\u9650\u4e14\u884c\u4e3a\u968f\u673a\u6240\u4ea7\u751f\u7684\u566a\u58f0\uff0c\u88ab\u79f0\u4e3a \u4eba\u53e3\u566a\u58f0\uff08demographic noise\uff09\u6216 \u6563\u7c92\u566a\u58f0\uff08shot noise\uff09\u3002\u5b83\u662f\u4efb\u4f55\u7531\u79bb\u6563\u5355\u5143\uff08\u65e0\u8bba\u662f\u7c92\u5b50\u3001\u5206\u5b50\u3001\u52a8\u7269\u8fd8\u662f\u7ec6\u80de\uff09\u7ec4\u6210\u7684\u968f\u673a\u7cfb\u7edf\u7684\u5185\u7980\u5c5e\u6027\u3002</p> <p>\u7269\u7406\u6839\u6e90\u7684\u6df1\u523b\u8054\u7cfb:</p> <p>\u8fd9\u79cd \\(\\sqrt{n}\\) \u7684\u4f9d\u8d56\u5173\u7cfb\u5e76\u975e\u5076\u7136\u3002\u6839\u636e\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5305\u542b\u5927\u91cf\u72ec\u7acb\u968f\u673a\u4e2a\u4f53\u7684\u7cfb\u7edf\uff0c\u5176\u603b\u6570 \\(N\\) \u7684\u6da8\u843d\uff08\u6807\u51c6\u5dee \\(\\sigma_N\\)\uff09\u6b63\u6bd4\u4e8e\u5e73\u5747\u6570 \\(\\bar{N}\\) \u7684\u5e73\u65b9\u6839\uff0c\u5373 \\(\\sigma_N \\propto \\sqrt{\\bar{N}}\\)\u3002KMPI\u7684\u63a8\u5bfc\u4ece\u7b2c\u4e00\u6027\u539f\u7406\u51fa\u53d1\uff0c\u7cbe\u786e\u5730\u5728\u5b8f\u89c2\u573a\u8bba\u4e2d\u91cd\u73b0\u4e86\u8fd9\u4e00\u57fa\u672c\u7edf\u8ba1\u89c4\u5f8b\u3002</p> <p>Doi-Peliti\u5f62\u5f0f\u4e4b\u6240\u4ee5\u5931\u8d25\uff0c\u6b63\u662f\u56e0\u4e3a\u5b83\u65e0\u6cd5\u63cf\u8ff0\u8fd9\u79cd\u4f9d\u8d56\u4e8e\u7c92\u5b50\u6570\u672c\u8eab\u7684\u6da8\u843d\u3002\u800cKMPI\u901a\u8fc7\u4fdd\u7559\u8df3\u8dc3\u8fc7\u7a0b\u7684\u5b8c\u6574\u7edf\u8ba1\u4fe1\u606f\uff0c\u6210\u529f\u5730\u5bfc\u51fa\u4e86\u63cf\u8ff0\u8fd9\u4e00\u57fa\u672c\u7269\u7406\u73b0\u8c61\u7684\u6b63\u786e\u6570\u5b66\u5f62\u5f0f\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#33","title":"3.3 \u4e24\u79cd\u7406\u8bba\u7684\u5bf9\u6bd4\u603b\u7ed3","text":"<p>\u4e3a\u4e86\u6e05\u6670\u5730\u603b\u7ed3\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u8bba\u70b9\uff0c\u53ef\u4ee5\u5c06\u4e24\u79cd\u5f62\u5f0f\u8fdb\u884c\u76f4\u63a5\u5bf9\u6bd4\uff1a</p> \u7279\u5f81 Doi-Peliti \u8def\u5f84\u79ef\u5206 \u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206 \u683c\u70b9\u4f5c\u7528\u91cf\u5173\u952e\u9879 \\(\\tilde{\\phi}_i \\sum_j (\\phi_j - \\phi_i)\\) \\(n_i (e^{i(\\tilde{n}_j - \\tilde{n}_i)} - 1)\\) \u7269\u7406\u57fa\u7840 \u76f8\u5e72\u6001\u8868\u8c61\uff08\u7c7b\u573a\uff09 \u4e3b\u65b9\u7a0b\u8df3\u8dc3\u8fc7\u7a0b\uff08\u7c7b\u4e8b\u4ef6\uff09 \u8fde\u7eed\u6781\u9650\u4f5c\u7528\u91cf \\(i\\tilde{\\phi} (\\partial_t - D \\nabla^2) \\phi\\) \\(i\\tilde{n} \\partial_t n - D n [\\nabla^2 (i\\tilde{n}) + (\\nabla i\\tilde{n})^2]\\) \u7b49\u4ef7\u7684\u52a8\u529b\u5b66\u65b9\u7a0b \\(\\partial_t \\phi = D \\nabla^2 \\phi\\) \\(\\partial_t n = D \\nabla^2 n + \\nabla \\cdot (\\sqrt{2D n} \\, \\vec{\\eta})\\) \u52a8\u529b\u5b66\u7c7b\u578b \u786e\u5b9a\u6027\uff08\u5e73\u5747\u573a\uff09 \u968f\u673a\u6027\uff08\u6da8\u843d\uff09 \u63cf\u8ff0\u7684\u7269\u7406\u566a\u58f0 \u7f3a\u5931 \u6355\u6349\u5230\u4eba\u53e3/\u6563\u7c92\u566a\u58f0\uff08\u4e58\u6027\u566a\u58f0\uff09 <p>\u4e00\u4e2a\u770b\u4f3c\u7eaf\u6570\u5b66\u4e0a\u7684\u9009\u62e9\uff08\u5982\u4f55\u8868\u793a\u8df3\u8dc3\u8fc7\u7a0b\uff09\uff0c\u6700\u7ec8\u5bfc\u81f4\u4e86\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u7684\u7269\u7406\u7406\u8bba\uff1a\u4e00\u4e2a\u53ea\u63cf\u8ff0\u4e86\u5e73\u5747\u884c\u4e3a\uff0c\u53e6\u4e00\u4e2a\u5219\u5b8c\u6574\u5730\u63cf\u8ff0\u4e86\u5e73\u5747\u884c\u4e3a\u53ca\u5176\u5468\u56f4\u7684\u968f\u673a\u6da8\u843d\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#4","title":"4. \u5c06\u53cd\u5e94\u7eb3\u5165\u573a\u8bba\u6846\u67b6","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u7684\u5206\u6790\u4e25\u683c\u805a\u7126\u4e8e\u6269\u6563\u8fc7\u7a0b\u3002\u7136\u800c\uff0c\u4e00\u4e2a\u5b8c\u6574\u7684\u7a7a\u95f4\u6a21\u578b\uff08\u5982\u7b2c38\u8bb2\u6240\u8ff0\uff09\u5fc5\u7136\u5305\u542b\u5728\u4f4d\u53cd\u5e94\uff08on-site reactions\uff09\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u628a\u5904\u7406\u6269\u6563\u7684\u8fde\u7eed\u6781\u9650\u65b9\u6cd5\uff0c\u63a8\u5e7f\u5230\u53cd\u5e94\u8fc7\u7a0b\uff0c\u4ece\u800c\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u53cd\u5e94-\u6269\u6563\u573a\u8bba\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#41","title":"4.1 \u201c\u5728\u4f4d\u53cd\u5e94\u201d\u7684\u7269\u7406\u56fe\u50cf\u4e0e\u6807\u5ea6\u53d8\u6362","text":"<p>\u9996\u5148\uff0c\u9700\u8981\u660e\u786e\u5728\u7a7a\u95f4\u6a21\u578b\u4e2d\u201c\u53cd\u5e94\u201d\u7684\u542b\u4e49\u3002\u5f53\u6211\u4eec\u5c06\u7a7a\u95f4\u79bb\u6563\u5316\u4e3a\u4e00\u4e2a\u4e2a\u8fb9\u957f\u4e3a \\(a\\) \u7684\u5c0f\u5ba4\uff08cell\uff09\u65f6\uff0c\u201c\u5728\u4f4d\u53cd\u5e94\u201d\u88ab\u7406\u89e3\u4e3a\u5728\u540c\u4e00\u4e2a\u5c0f\u5ba4\u5185\u90e8\u53d1\u751f\u7684\u4e8b\u4ef6\u3002\u6559\u6388\u89e3\u91ca\u9053\uff0c\u8fd9\u4e9b\u5c0f\u5ba4\u5728\u7269\u7406\u4e0a\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4ecb\u89c2\u5c3a\u5ea6\uff08mesoscopic\uff09\u7684\u4f53\u79ef\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u542b\u5927\u91cf\u7c92\u5b50\uff0c\u8db3\u4ee5\u8ba9\u5b8f\u89c2\u7684\u5316\u5b66\u53cd\u5e94\u5b9a\u5f8b\u5728\u5176\u4e2d\u751f\u6548\u3002</p> <p>\u5728\u4ece\u79bb\u6563\u683c\u70b9\u8fc7\u6e21\u5230\u8fde\u7eed\u7a7a\u95f4\u7684\u6781\u9650\u8fc7\u7a0b\u4e2d (\\(a \\to 0\\))\uff0c\u53cd\u5e94\u901f\u7387\u672c\u8eab\u4e5f\u9700\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u6807\u5ea6\u53d8\u6362\uff08scaling\uff09\u3002\u4e00\u4e2a\u6d89\u53ca \\(k\\) \u4e2a\u53cd\u5e94\u7269\u7684\u53cd\u5e94\uff08\\(kA \\to \\dots\\)\uff09\uff0c\u5176\u901f\u7387\u5728\u8fde\u7eed\u6781\u9650\u4e0b\u9700\u8981\u6309\u5982\u4e0b\u65b9\u5f0f\u91cd\u6574\u5316\uff1a</p> \\[ \\lambda_{\\text{discrete}} \\cdot a^{d(k-1)} \\to \\lambda_{\\text{continuum}} \\] <p>\u7269\u7406\u610f\u4e49\uff1a\u8fd9\u4e2a\u53d8\u6362\u786e\u4fdd\u4e86\u5f53\u6211\u4eec\u5c06\u7c92\u5b50\u6570 \\(\\phi_i\\) \u8f6c\u5316\u4e3a\u7c92\u5b50\u5bc6\u5ea6 \\(\\phi(\\vec{r}) = \\phi_i/a^d\\) \u65f6\uff0c\u8d28\u91cf\u4f5c\u7528\u5b9a\u5f8b\u7684\u5f62\u5f0f\u5f97\u4ee5\u4fdd\u6301\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u53cc\u5206\u5b50\u53cd\u5e94 \\(2A \\to \\dots\\)\uff0c\u5176\u901f\u7387\u4e0e \\((\\phi/a^d)^2\\) \u6210\u6b63\u6bd4\u3002\u4e3a\u4e86\u4f7f\u8fde\u7eed\u7406\u8bba\u4e2d\u7684\u901f\u7387 \\(\\lambda_{\\text{continuum}}\\) \u6709\u6b63\u786e\u7684\u5355\u4f4d\uff0c\u79bb\u6563\u901f\u7387 \\(\\lambda_{\\text{discrete}}\\) \u5fc5\u987b\u5438\u6536\u4e00\u4e2a\u56e0\u5b50 \\(a^d\\)\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#42-dp","title":"4.2 DP\u6846\u67b6\u4e0b\u7684\u53cd\u5e94\u4f5c\u7528\u91cf","text":"<p>\u9075\u5faa\u4e0e\u6269\u6563\u8fc7\u7a0b\u5b8c\u5168\u76f8\u540c\u7684\u903b\u8f91\uff0c\u53ef\u4ee5\u5c06\u4efb\u4f55\u901a\u7528\u53cd\u5e94 \\(kA \\xrightarrow{\\lambda} \\ell A\\) \u6240\u5bf9\u5e94\u7684\u5218\u7ef4\u5c14\u7b97\u7b26\uff08\u5728\u7b2c38\u8bb2\u4e2d\u5df2\u5efa\u7acb\uff09\u8f6c\u5316\u4e3a\u8fde\u7eed\u4f5c\u7528\u91cf\u7684\u4e00\u90e8\u5206\u3002\u6839\u636e\u677f\u4e66\u7b14\u8bb0\uff0c\u5176\u5728\u4f5c\u7528\u91cf\u4e2d\u7684\u8d21\u732e\u4e3a\uff1a $$ S_{\\text{REACT}} = - \\int dt \\int d^d x \\, Q_{\\text{REACT}}(\\phi, i\\tilde{\\phi}+1) $$ \u5176\u4e2d\uff0c $$ Q_{\\text{REACT}}(\\phi, i \\tilde{\\phi} + 1) = \\lambda_{\\text{continuum}} \\phi^k \\left( (i \\tilde{\\phi} + 1)^\\ell - (i \\tilde{\\phi} + 1)^k \\right) $$ \u4e00\u4e2a\u6df1\u523b\u7684\u89c2\u70b9\u662f\uff0c\u8fd9\u4e9b\u5728\u8fde\u7eed\u573a\u8bba\u4e2d\u51fa\u73b0\u7684\u201c\u4ecb\u89c2\u201d\u53cd\u5e94\u901f\u7387 \\(\\lambda_{\\text{continuum}}\\) \u548c\u6269\u6563\u7cfb\u6570 \\(D\\)\uff0c\u901a\u5e38\u88ab\u89c6\u4e3a\u552f\u8c61\u53c2\u6570\uff08phenomenological parameters\uff09\u3002\u5982\u540c\u9ad8\u80fd\u7269\u7406\u4e2d\u7684\u7535\u5b50\u8d28\u91cf\u65e0\u6cd5\u4ece\u7b2c\u4e00\u6027\u539f\u7406\u7b97\u51fa\u4e00\u6837\uff0c\u8fd9\u4e9b\u53c2\u6570\u4e5f\u6781\u96be\u4ece\u66f4\u5fae\u89c2\u7684\u5c42\u9762\u7cbe\u786e\u63a8\u5bfc\uff0c\u901a\u5e38\u9700\u8981\u901a\u8fc7\u5b9e\u9a8c\u6765\u6d4b\u91cf\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#43-kmpi","title":"4.3 KMPI\u6846\u67b6\u4e0b\u7684\u53cd\u5e94\u9879","text":"<p>\u540c\u6837\u5730\uff0c\u5728KMPI\u7684\u683c\u70b9\u4f5c\u7528\u91cf\u4e2d\uff0c\u4e5f\u5b58\u5728\u4e00\u4e2a\u63cf\u8ff0\u53cd\u5e94\u7684\u9879 \\(\\mathcal{L}_{\\text{REACT}}^{(i)}\\)\u3002\u8fd9\u4e2a\u9879\u540c\u6837\u53ef\u4ee5\u8fdb\u884cKramers-Moyal\u5c55\u5f00\uff0c\u5e76\u8d21\u732e\u4e8e\u6700\u7ec8SPDE\u7684\u6f02\u79fb\u9879\u548c\u566a\u58f0\u9879\u3002</p> <p>\u4f8b\u5982\uff0c\u5bf9\u4e8e\u589e\u6b96\u53cd\u5e94 \\(A \\to 2A\\)\uff08\u901f\u7387 \\(\\mu n\\)\uff09\uff0c\u548c\u6b7b\u4ea1\u53cd\u5e94 \\(A \\to \\emptyset\\)\uff08\u901f\u7387 \\(\\lambda n\\)\uff09\uff0c\u9075\u5faa\u7b2c37\u8bb2\u7684\u914d\u65b9\uff0c\u53ef\u4ee5\u5f97\u5230\u5b83\u4eec\u5404\u81ea\u5bf9\u6f02\u79fb \\(V(n)\\) \u548c\u6269\u6563 \\(D(n)\\) \u7684\u8d21\u732e\uff1a</p> <ul> <li> <p>\u6f02\u79fb: \\(V_{\\text{REACT}} = (\\mu n)(+1) + (\\lambda n)(-1) = (\\mu - \\lambda)n\\)</p> </li> <li> <p>\u6269\u6563: \\(D_{\\text{REACT}} = \\frac{1}{2} (\\mu n)(+1)^2 + \\frac{1}{2} (\\lambda n)(-1)^2 = \\frac{1}{2}(\\mu + \\lambda)n\\)</p> </li> </ul> <p>\u5c06\u8fd9\u4e9b\u9879\u4e0e\u6269\u6563\u7684\u8d21\u732e\u76f8\u52a0\uff0c\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u53cd\u5e94-\u6269\u6563SPDE\u7684\u6f02\u79fb\u548c\u566a\u58f0\u9879\u3002\u8fd9\u4e3a\u7b2c5\u8282\u6a21\u62df\u4e2d\u4f7f\u7528\u7684SPDE\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u7406\u8bba\u4f9d\u636e\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#5","title":"5. \u4ee3\u7801\u5b9e\u8df5\uff1a\u968f\u673a\u6027\u5982\u4f55\u201c\u96d5\u523b\u201d\u53cd\u5e94\u524d\u6cbf","text":"<p>\u524d\u4e09\u8282\u7684\u7406\u8bba\u63a8\u5bfc\u63ed\u793a\u4e86\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\uff08KMPI\uff09\u80fd\u591f\u6355\u6349\u5230\u7531\u7c92\u5b50\u79bb\u6563\u6027\u5f15\u8d77\u7684\u3001Doi-Peliti\uff08DP\uff09\u65b9\u6cd5\u6240\u5ffd\u7565\u7684\u5185\u7980\u566a\u58f0\u3002\u4e3a\u4e86\u4ee5\u4e00\u79cd\u66f4\u76f4\u89c2\u7684\u65b9\u5f0f\u6765\u89c2\u5bdf\u8fd9\u79cd\u566a\u58f0\u7684\u540e\u679c\uff0c\u8fd9\u8282\u8bfe\u7684\u6a21\u62df\u5c06\u8d85\u8d8a\u7eaf\u6269\u6563\uff0c\u8fdb\u5165\u4e00\u4e2a\u66f4\u52a8\u6001\u7684\u53cd\u5e94-\u6269\u6563\u7cfb\u7edf\u3002</p> <p>\u8fd9\u8282\u5c06\u6a21\u62df\u4e00\u4e2a\u7ecf\u5178\u7684Fisher-Kolmogorov\u53cd\u5e94\u6ce2\uff0c\u5b83\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7269\u79cd\uff08\u6216\u4e00\u79cd\u72b6\u6001\uff09\u4fb5\u5165\u53e6\u4e00\u7247\u533a\u57df\u7684\u8fc7\u7a0b\u3002\u901a\u8fc7\u5bf9\u6bd4\u786e\u5b9a\u6027\u7406\u8bba\u548c\u968f\u673a\u7406\u8bba\u4e0b\u7684\u6ce2\u524d\u4f20\u64ad\uff0c\u53ef\u4ee5\u76f4\u89c2\u5730\u770b\u5230\uff0c\u5728\u51b3\u5b9a\u6ce2\u524d\u201c\u547d\u8fd0\u201d\u7684\u5173\u952e\u533a\u57df\u2014\u2014\u4f4e\u5bc6\u5ea6\u524d\u6cbf\uff0c\u968f\u673a\u6da8\u843d\u662f\u5982\u4f55\u4ece\u4e00\u4e2a\u5fae\u4e0d\u8db3\u9053\u7684\u201c\u6296\u52a8\u201d\u6f14\u53d8\u6210\u4e3a\u5851\u9020\u5b8f\u89c2\u5f62\u6001\u7684\u4e3b\u5bfc\u529b\u91cf\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#51","title":"5.1 \u6a21\u62df\u8bbe\u7f6e\uff1a\u4e24\u79cd\u7406\u8bba\u4e0b\u7684\u7269\u79cd\u5165\u4fb5","text":"<p>\u6a21\u62df\u5c06\u5728\u4e00\u4e2a\u4e8c\u7ef4\u957f\u65b9\u5f62\u7f51\u683c\u4e0a\u8fdb\u884c\u3002\u521d\u59cb\u65f6\uff0c\u5de6\u4fa7\u7684\u4e00\u5c0f\u7247\u533a\u57df\u88ab\u201c\u6d3b\u6027\u201d\u7c92\u5b50\u5360\u636e\uff0c\u5176\u4f59\u533a\u57df\u4e3a\u7a7a\u3002\u7136\u540e\uff0c\u5c06\u89c2\u5bdf\u8fd9\u4e2a\u6d3b\u6027\u533a\u57df\u5982\u4f55\u5411\u53f3\u4fa7\u201c\u5165\u4fb5\u201d\u3002</p> <ol> <li> <p>\u786e\u5b9a\u6027\u53cd\u5e94-\u6269\u6563 (DP/\u5e73\u5747\u573a\u7406\u8bba) \uff1a\u6570\u503c\u6c42\u89e3\u7ecf\u5178\u7684Fisher-Kolmogorov\u65b9\u7a0b\u3002\u8fd9\u4ee3\u8868\u4e86\u5165\u4fb5\u6ce2\u524d\u7684\u5e73\u5747\u884c\u4e3a \u3002</p> \\[ \\frac{\\partial n}{\\partial t} = D \\nabla^2 n + \\mu n \\left(1 - \\frac{n}{K}\\right) \\] </li> <li> <p>\u968f\u673a\u53cd\u5e94-\u6269\u6563 (KMPI\u7406\u8bba) \uff1a\u6570\u503c\u6c42\u89e3\u5305\u542b\u5185\u7980\u566a\u58f0\u7684\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\uff08SPDE\uff09\u3002\u8fd9\u4ee3\u8868\u4e86\u5355\u6b21\u5165\u4fb5\u5b9e\u9a8c\u7684\u771f\u5b9e\u7269\u7406\u8fc7\u7a0b\u3002\u5176\u566a\u58f0\u9879\u73b0\u5728\u7531\u6269\u6563\u548c\u53cd\u5e94\u5171\u540c\u8d21\u732e\uff1a</p> \\[ \\frac{\\partial n}{\\partial t} = D \\nabla^2 n + \\mu n \\left(1 - \\frac{n}{K}\\right) + \\nabla \\cdot \\left( \\sqrt{2Dn + \\frac{\\mu n}{K}(K-n)} \\, \\vec{\\eta} \\right) \\] </li> </ol> <p>\u6ce8\uff1a\u566a\u58f0\u9879\u7684\u7cbe\u786e\u5f62\u5f0f\u7531KMPI\u914d\u65b9\u7cfb\u7edf\u6027\u5730\u7ed9\u51fa\uff0c\u5b83\u7ed3\u5408\u4e86\u6269\u6563\u566a\u58f0\uff08\\(\\propto n\\)\uff09\u548c\u53cd\u5e94\u566a\u58f0\uff08\u751f\u706d\u8fc7\u7a0b\uff09\u3002\u8fd9\u91cc\u4e3a\u4e86\u7b80\u5316\u548c\u7a81\u51fa\u7269\u7406\uff0c\u4f7f\u7528\u4e00\u4e2a\u8fd1\u4f3c\u4f46\u5b9a\u6027\u6b63\u786e\u7684\u5f62\u5f0f \\(\\sqrt{2Dn + \\mu n}\\)\uff0c\u5b83\u540c\u6837\u6293\u4f4f\u4e86\u566a\u58f0\u5f3a\u5ea6\u4f9d\u8d56\u4e8e\u7c92\u5b50\u6570 \\(n\\) \u7684\u6838\u5fc3\u7279\u5f81\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#52-python","title":"5.2 Python \u5b9e\u73b0\uff1a\u53cd\u5e94\u524d\u6cbf\u6a21\u62df\u5668","text":"<p>\u4e0b\u9762\u7684Python\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u4e24\u79cd\u7406\u8bba\u7684\u4e8c\u7ef4\u6570\u503c\u6c42\u89e3\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u5e76\u6392\u5bf9\u6bd4\u7684\u52a8\u6001\u6f14\u5316\u56fe\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.signal import convolve2d\nimport matplotlib.animation as animation\n\n# --- 1. Simulation Parameters ---\nGRID_WIDTH = 256\nGRID_HEIGHT = 128\nD = 0.2              # Diffusion coefficient\nMU = 0.1             # Reaction rate (birth rate)\nK = 1.0              # Carrying capacity\nT_FINAL = 300.0      # Total simulation time\nDT = 0.1             # Time step\nN_STEPS = int(T_FINAL / DT)\nDX = 1.0             # Spatial step\n\n# --- 2. Initial Condition: A front on the left side ---\nn0 = np.zeros((GRID_HEIGHT, GRID_WIDTH))\nfront_width = 10\nn0[:, :front_width] = K\n\n# --- 3. Setup for Numerical Simulation ---\nlaplacian_kernel = np.array([[0, 1, 0], [1, -4, 1], [0, 1, 0]]) / (DX**2)\nn_deterministic = n0.copy()\nn_stochastic = n0.copy()\n\n# Store history for animation\nhistory_det = [n_deterministic.copy()]\nhistory_sto = [n_stochastic.copy()]\nsave_interval = 20 # Save one frame every 20 steps\n\n# --- 4. Main Simulation Loop ---\nprint(\"Running simulations for reaction fronts...\")\nfor step in range(N_STEPS):\n    # --- Deterministic (Mean-Field) Simulation ---\n    lap_det = convolve2d(n_deterministic, laplacian_kernel, mode='same', boundary='wrap')\n    reaction_det = MU * n_deterministic * (1 - n_deterministic / K)\n    n_deterministic += (D * lap_det + reaction_det) * DT\n\n    # --- Stochastic (KMPI) Simulation ---\n    n_stochastic[n_stochastic &lt; 0] = 0\n\n    # Drift part (same as deterministic)\n    lap_sto = convolve2d(n_stochastic, laplacian_kernel, mode='same', boundary='wrap')\n    reaction_sto = MU * n_stochastic * (1 - n_stochastic / K)\n    drift_term = D * lap_sto + reaction_sto\n\n    # Noise part: Combined reaction and diffusion noise\n    # The term is approximately sqrt(2*D*n + mu*n)\n    noise_strength_sq = 2 * D * n_stochastic + MU * n_stochastic\n    noise_amplitude = np.sqrt(np.maximum(0, noise_strength_sq) / (DX**2 * DT))\n\n    eta_x = np.random.normal(0, 1, n_stochastic.shape)\n    eta_y = np.random.normal(0, 1, n_stochastic.shape)\n\n    flux_x = noise_amplitude * eta_x\n    flux_y = noise_amplitude * eta_y\n\n    grad_flux_y, _ = np.gradient(flux_y, DX, axis=(0, 1))\n    _, grad_flux_x = np.gradient(flux_x, DX, axis=(0, 1))\n    noise_term = grad_flux_x + grad_flux_y\n\n    n_stochastic += (drift_term + noise_term) * DT\n\n    if (step + 1) % save_interval == 0:\n        history_det.append(n_deterministic.copy())\n        history_sto.append(n_stochastic.copy())\n\nprint(\"Simulation finished. Creating animation...\")\n\n# --- 5. Visualization ---\nfig, axes = plt.subplots(1, 2, figsize=(16, 8))\nfig.patch.set_facecolor('black')\nplt.style.use('dark_background')\n\ndef update(frame):\n    for ax in axes:\n        ax.clear()\n\n    n_det = history_det[frame]\n    n_sto = history_sto[frame]\n\n    vmax = K * 1.1\n\n    # --- Plot Deterministic Front ---\n    axes[0].imshow(n_det, cmap='viridis', vmin=0, vmax=vmax, origin='lower', interpolation='bicubic')\n    axes[0].set_title('Deterministic Front (DP/Mean-Field Theory)', color='white')\n    axes[0].set_xticks([]); axes[0].set_yticks([])\n\n    # --- Plot Stochastic Front ---\n    axes[1].imshow(n_sto, cmap='viridis', vmin=0, vmax=vmax, origin='lower', interpolation='bicubic')\n    axes[1].set_title('Stochastic Front (KMPI Theory)', color='white')\n    axes[1].set_xticks([]); axes[1].set_yticks([])\n\n    fig.suptitle(f'Reaction-Diffusion Front Propagation (Time: {frame*DT*save_interval:.1f})', color='white', fontsize=16)\n    fig.tight_layout(rect=[0, 0, 1, 0.95])\n\n    return axes[0], axes[1]\n\nani = animation.FuncAnimation(fig, update, frames=len(history_det), interval=50, blit=False)\ntry:\n    ani.save('reaction_front_comparison.gif', writer='pillow', fps=20)\n    print(\"Animation saved as 'reaction_front_comparison.gif'.\")\nexcept Exception as e:\n    print(f\"Could not save animation: {e}\")\n\nplt.show()\n</code></pre> </p> <p>\u5de6\u4fa7\uff08\u786e\u5b9a\u6027/DP\u7406\u8bba\uff09 \uff1a\u5165\u4fb5\u6ce2\u524d\u662f\u4e00\u6761\u7b14\u76f4\u3001\u5149\u6ed1\u7684\u7ebf\u3002\u5b83\u4ee5\u4e00\u4e2a\u6052\u5b9a\u7684\u3001\u53ef\u9884\u6d4b\u7684\u901f\u5ea6\u5411\u53f3\u4f20\u64ad\u3002\u8fd9\u4ee3\u8868\u4e86\u4e00\u4e2a\u7406\u60f3\u5316\u7684\u3001\u65e0\u9650\u591a\u7c92\u5b50\u6781\u9650\u4e0b\u7684\u5e73\u5747\u884c\u4e3a\u3002</p> <p>\u53f3\u4fa7\uff08\u968f\u673a/KMPI\u7406\u8bba\uff09 \uff1a\u5b8f\u89c2\u4e0a\uff0c\u6ce2\u524d\u540c\u6837\u5728\u5411\u53f3\u4f20\u64ad\uff0c\u4f46\u5176\u5f62\u6001\u53d1\u751f\u4e86\u8d28\u7684\u6539\u53d8\u3002\u6ce2\u524d\u4e0d\u518d\u662f\u7b14\u76f4\u7684\uff0c\u800c\u662f\u53d8\u5f97\u7c97\u7cd9\u3001\u72ac\u7259\u4ea4\u9519 \uff0c\u5e76\u4e14\u5728\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u52a8\u6001\u5730\u6539\u53d8\u5f62\u72b6 \u3002</p> <p>\u566a\u58f0\u7684\u201c\u96d5\u523b\u201d\u4f5c\u7528\uff1a\u8fd9\u79cd\u7c97\u7cd9\u6027\u6b63\u662f\u4eba\u53e3\u566a\u58f0\u7684\u76f4\u63a5\u4f5c\u7528\u3002\u5728\u6ce2\u524d\u7684\u6700\u524d\u7aef\uff0c\u7c92\u5b50\u5bc6\u5ea6 \\(n\\) \u975e\u5e38\u4f4e\u3002\u6839\u636e KMPI \u7406\u8bba\uff0c\u566a\u58f0\u7684\u76f8\u5bf9\u5f3a\u5ea6\u5728\u8fd9\u91cc\u8fbe\u5230\u6700\u5927\u3002\u968f\u673a\u7684\u7e41\u6b96\u4e8b\u4ef6\uff08\u6216\u6269\u6563\u8df3\u8dc3\uff09\u4f1a\u5bfc\u81f4\u524d\u6cbf\u7684\u67d0\u4e9b\u90e8\u5206\u201c\u5e78\u8fd0\u5730\u201d\u5411\u524d\u8df3\u8dc3\u4e00\u5c0f\u6b65\uff0c\u800c\u53e6\u4e00\u4e9b\u90e8\u5206\u5219\u4f1a\u6682\u65f6\u505c\u6ede\u6216\u540e\u9000\u3002\u65e5\u79ef\u6708\u7d2f\uff0c\u8fd9\u4e9b\u5fae\u89c2\u7684\u968f\u673a\u4e8b\u4ef6\u201c\u96d5\u523b\u201d\u51fa\u4e86\u4e00\u4e2a\u5b8f\u89c2\u4e0a\u5d99\u5ccb\u4e0d\u5e73\u7684\u3001\u4e0d\u65ad\u6f14\u5316\u7684\u771f\u5b9e\u524d\u6cbf\u3002</p> <p>\u8fd9\u4e2a\u53cd\u5e94-\u6269\u6563\u6ce2\u7684\u4f8b\u5b50\u8868\u660e\uff0cKMPI \u6355\u6349\u5230\u7684\u5185\u7980\u566a\u58f0\uff0c\u5e76\u4e0d\u4ec5\u4ec5\u662f\u5728\u5e73\u5747\u573a\u89e3\u4e0a\u6dfb\u52a0\u7684\u4e00\u5c42\u65e0\u5173\u7d27\u8981\u7684\u201c\u6bdb\u523a\u201d\u3002\u76f8\u53cd\uff0c\u5728\u8bf8\u5982\u53cd\u5e94\u524d\u6cbf\u8fd9\u6837\u7684\u7269\u7406\u60c5\u5883\u4e2d\uff0c\u566a\u58f0\u662f\u51b3\u5b9a\u7cfb\u7edf\u5b8f\u89c2\u5f62\u6001\u548c\u52a8\u529b\u5b66\u884c\u4e3a\u7684\u5173\u952e\u56e0\u7d20\u3002\u5b83\u5c06\u4e00\u4e2a\u5728\u786e\u5b9a\u6027\u4e16\u754c\u4e2d\u5e73\u6de1\u65e0\u5947\u7684\u76f4\u7ebf\uff0c\u53d8\u6210\u4e86\u4e00\u4e2a\u5728\u968f\u673a\u4e16\u754c\u4e2d\u5145\u6ee1\u52a8\u6001\u548c\u7ed3\u6784\u7684\u3001\u7c97\u7cd9\u7684\u754c\u9762\u3002\u8fd9\u6b63\u662f\u6784\u5efa\u4e00\u4e2a\u80fd\u591f\u63cf\u8ff0\u771f\u5b9e\u7269\u7406\u4e16\u754c\u7684\u968f\u673a\u573a\u8bba\u7684\u5fc5\u8981\u6027\u6240\u5728\u3002</p>"},{"location":"zh/notes/39.%20%E4%BB%8E%E7%B2%92%E5%AD%90%E8%B7%B3%E8%B7%83%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%9C%BA%E8%AE%BA/#_2","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u4ece\u4e00\u4e2a\u57fa\u672c\u7269\u7406\u8fc7\u7a0b\u2014\u2014\u7c92\u5b50\u5728\u683c\u70b9\u4e0a\u7684\u968f\u673a\u8df3\u8dc3\u2014\u2014\u51fa\u53d1\uff0c\u901a\u8fc7\u4e24\u79cd\u4e0d\u540c\u7684\u8def\u5f84\u79ef\u5206\u5f62\u5f0f\u4e3b\u4e49\u63a2\u7d22\u4e86\u5176\u8fde\u7eed\u6781\u9650\u3002\u8fd9\u6b21\u63a2\u7d22\u63ed\u793a\u4e86\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u7ed3\u8bba\uff1a\u6570\u5b66\u5f62\u5f0f\u7684\u9009\u62e9\u6df1\u523b\u5730\u5f71\u54cd\u4e86\u6700\u7ec8\u7684\u7269\u7406\u56fe\u50cf\u3002</p> <ul> <li> <p>Doi-Peliti (DP) \u8def\u5f84\u79ef\u5206\uff0c\u6e90\u4e8e\u7b2c36\u8bb2\u7684\u76f8\u5e72\u6001\u8868\u8c61\uff0c\u901a\u8fc7\u5176\u4f18\u96c5\u7684\u4ee3\u6570\u7ed3\u6784\uff0c\u9ad8\u6548\u5730\u5bfc\u51fa\u4e86\u7cfb\u7edf\u7684\u5e73\u5747\u573a\u52a8\u529b\u5b66\uff0c\u5373\u7ecf\u5178\u7684\u786e\u5b9a\u6027\u6269\u6563\u65b9\u7a0b\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7684\u4ee3\u4ef7\u662f\u5b8c\u5168\u4e22\u5931\u4e86\u5173\u4e8e\u7cfb\u7edf\u968f\u673a\u6da8\u843d\u7684\u4fe1\u606f\u3002</p> </li> <li> <p>\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206 (KMPI)\uff0c\u7ee7\u627f\u81ea\u7b2c37\u8bb2\u7684\u5c55\u5f00\u601d\u60f3\uff0c\u901a\u8fc7\u5fe0\u5b9e\u5730\u4fdd\u7559\u63cf\u8ff0\u79bb\u6563\u8df3\u8dc3\u4e8b\u4ef6\u7684\u6307\u6570\u9879\uff0c\u5728\u8fde\u7eed\u6781\u9650\u4e0b\u8fdb\u884c\u7cfb\u7edf\u7684Kramers-Moyal\u5c55\u5f00\u3002\u8fd9\u4e2a\u66f4\u4e25\u8c28\u7684\u8fc7\u7a0b\u4e0d\u4ec5\u91cd\u73b0\u4e86\u786e\u5b9a\u6027\u7684\u6f02\u79fb\u9879\uff0c\u8fd8\u63ed\u793a\u4e86\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u4e8c\u9636\u9879\u3002\u8be5\u9879\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u4e58\u6027\u566a\u58f0\uff0c\u5176\u7269\u7406\u6839\u6e90\u662f\u7c92\u5b50\u79bb\u6563\u6027\u6240\u5e26\u6765\u7684\u4eba\u53e3\u566a\u58f0\uff08demographic noise\uff09\u3002</p> </li> </ul> <p>\u6700\u7ec8\uff0cKMPI\u5bfc\u51fa\u4e86\u4e00\u4e2a\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\uff08SPDE\uff09\uff0c\u5b83\u5b8c\u6574\u5730\u63cf\u8ff0\u4e86\u7cfb\u7edf\u7684\u5b8f\u89c2\u884c\u4e3a\uff08\u6f02\u79fb\uff09\u548c\u5185\u7980\u7684\u968f\u673a\u6da8\u843d\uff08\u566a\u58f0\uff09\u3002\u8fd9\u8bc1\u660e\u4e86\uff0c\u8981\u4ece\u5fae\u89c2\u7684\u3001\u79bb\u6563\u7684\u968f\u673a\u8fc7\u7a0b\u6b63\u786e\u5730\u63a8\u5bfc\u51fa\u5b8f\u89c2\u7684\u3001\u8fde\u7eed\u7684\u968f\u673a\u573a\u8bba\uff0c\u5fc5\u987b\u5c0f\u5fc3\u5904\u7406\u6781\u9650\u8fc7\u7a0b\uff0c\u786e\u4fdd\u63cf\u8ff0\u4e8b\u4ef6\u968f\u673a\u6027\u7684\u6838\u5fc3\u6570\u5b66\u7ed3\u6784\u6ca1\u6709\u5728\u65e9\u671f\u5c31\u88ab\u201c\u5e73\u5747\u6389\u201d\u3002</p> <p>\u81f3\u6b64\uff0cKMPI\u5728\u5904\u7406\u6269\u6563\u95ee\u9898\u4e0a\u7684\u4f18\u8d8a\u6027\u5df2\u7ecf\u5f97\u5230\u8bc1\u5b9e\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u6761\u4ece\u4efb\u4f55\u4e3b\u65b9\u7a0b\u7684\u8df3\u8dc3\u8fc7\u7a0b\u51fa\u53d1\uff0c\u7cfb\u7edf\u6027\u5730\u63a8\u5bfc\u5176\u5bf9\u5e94\u7684\u968f\u673a\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u666e\u9002\u8def\u5f84\u3002\u7136\u800c\uff0c\u5728\u7b2c38\u8bb2\u4e2d\u5f15\u5165\u7684\u7a7a\u95f4\u6a21\u578b\uff0c\u4e0d\u4ec5\u5305\u542b\u6269\u6563\uff0c\u8fd8\u5305\u542b\u66f4\u590d\u6742\u7684\u5728\u4f4d\u53cd\u5e94\uff08on-site reactions\uff09\u3002</p> <p>\u56e0\u6b64\uff0c\u4e00\u4e2a\u81ea\u7136\u4e14\u5173\u952e\u7684\u95ee\u9898\u662f\uff1a\u8fd9\u4e2a\u5df2\u88ab\u8bc1\u660e\u5bf9\u6269\u6563\u6709\u6548\u7684KMPI\u6846\u67b6\uff0c\u662f\u5426\u4e5f\u80fd\u88ab\u7528\u6765\u6b63\u786e\u5730\u63cf\u8ff0\u53cd\u5e94\u8fc7\u7a0b\uff0c\u5e76\u6700\u7ec8\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u968f\u673a\u53cd\u5e94-\u6269\u6563\u573a\u8bba\uff1f</p> <p>\u8fd9\u6b63\u662f\u4e0b\u4e00\u8bb2\u201c\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\u65b9\u6cd5\uff1a\u53cd\u5e94\u7684\u573a\u8bba\u201d\u5c06\u8981\u89e3\u51b3\u7684\u6838\u5fc3\u95ee\u9898\u3002\u8bfe\u7a0b\u5c06\u628a\u8fd9\u8282\u8bfe\u5efa\u7acb\u7684\u5f3a\u5927\u5de5\u5177\u5e94\u7528\u5230\u66f4\u5e7f\u9614\u7684\u9886\u57df\uff1a</p> <ul> <li> <p>\u5c06KMPI\u63a8\u5e7f\u5230\u53cd\u5e94\u7cfb\u7edf\uff1a\u5c06\u63a2\u8ba8\u5982\u4f55\u8fd0\u7528KMPI\u7684\u6307\u6570\u7b97\u7b26\u5f62\u5f0f\uff0c\u6765\u63cf\u8ff0\u8bf8\u5982\u7c92\u5b50\u4ea7\u751f (\\(A \\to 2A\\))\u3001\u6e6e\u706d (\\(2A \\to A\\)) \u548c\u8870\u53d8 (\\(A \\to \\emptyset\\)) \u7b49\u4efb\u610f\u5316\u5b66\u8ba1\u91cf\u6bd4\u7684\u53cd\u5e94\u8fc7\u7a0b\u3002</p> </li> <li> <p>\u6784\u5efa\u5b8c\u6574\u7684\u53cd\u5e94-\u6269\u6563\u573a\u8bba\uff1a\u901a\u8fc7\u5c06\u8fd9\u8282\u8bfe\u63a8\u5bfc\u7684\u6269\u6563\u4f5c\u7528\u91cf\u4e0e\u4e0b\u4e00\u8bb2\u5c06\u8981\u63a8\u5bfc\u7684\u53cd\u5e94\u4f5c\u7528\u91cf\u76f8\u7ed3\u5408\uff0c\u6700\u7ec8\u5c06\u80fd\u591f\u4ece\u7b2c\u4e00\u6027\u539f\u7406\u51fa\u53d1\uff0c\u4e3a\u50cf\u6709\u5411\u6e17\u6d41\uff08\u5728\u7b2c34\u8bb2\u4e2d\u5f15\u5165\uff09\u8fd9\u6837\u7684\u590d\u6742\u975e\u5e73\u8861\u6a21\u578b\uff0c\u6784\u5efa\u51fa\u5176\u5b8c\u6574\u7684\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\uff08SPDE\uff09\u3002</p> </li> <li> <p>\u7406\u8bba\u7684\u7edf\u4e00\u4e0e\u5e94\u7528\uff1a\u6700\u7ec8\u5c06\u5efa\u6210\u4e00\u4e2a\u7edf\u4e00\u7684\u7406\u8bba\u6846\u67b6\uff0c\u80fd\u591f\u7cfb\u7edf\u6027\u5730\u4ece\u4efb\u4f55\u5fae\u89c2\u4e3b\u65b9\u7a0b\uff08\u5305\u542b\u53cd\u5e94\u548c\u6269\u6563\uff09\u51fa\u53d1\uff0c\u63a8\u5bfc\u5176\u5b8f\u89c2\u968f\u673a\u573a\u8bba\u63cf\u8ff0\u3002\u8fd9\u5c06\u4e3a\u4f7f\u7528\u91cd\u6574\u5316\u7fa4\u7b49\u73b0\u4ee3\u573a\u8bba\u5de5\u5177\uff0c\u6765\u5206\u6790\u8fdc\u79bb\u5e73\u8861\u6001\u7684\u590d\u6742\u968f\u673a\u7cfb\u7edf\u7684\u4e34\u754c\u884c\u4e3a\u548c\u76f8\u53d8\uff0c\u94fa\u5e73\u6700\u540e\u7684\u9053\u8def\u3002</p> </li> </ul> <p>\u901a\u8fc7\u8fd9\u8282\u8bfe\u7684\u5b66\u4e60\uff0c\u7406\u89e3\u968f\u673a\u573a\u8bba\u8d77\u6e90\u7684\u5173\u952e\u4e00\u6b65\u5df2\u7ecf\u5b8c\u6210\u3002\u4e0b\u4e00\u8bb2\u5c06\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u7ee7\u7eed\u6784\u5efa\u4e00\u4e2a\u66f4\u5b8c\u6574\u3001\u66f4\u5f3a\u5927\u7684\u7406\u8bba\u6846\u67b6\u3002</p> <p>\u6700\u540e\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cKMPI\u6846\u67b6\u5728\u5904\u7406\u66f4\u590d\u6742\u7684\u7269\u7406\u60c5\u5883\u65f6\uff0c\u5c55\u73b0\u51fa\u6bd4DP\u5f62\u5f0f\u66f4\u5f3a\u7684\u7a33\u5065\u6027\u3002\u6559\u6388\u5728\u8bfe\u7a0b\u4e2d\u63d0\u5230\uff0c\u5982\u679c\u6269\u6563\u7cfb\u6570\u672c\u8eab\u4f9d\u8d56\u4e8e\u7c92\u5b50\u5bc6\u5ea6\u6216\u7a7a\u95f4\u6784\u578b \\(D(n)\\)\uff0cDP\u5f62\u5f0f\u7684\u63a8\u5bfc\u4f1a\u56e0\u5176\u56fa\u6709\u7684\u573a\u53d8\u91cf\u66ff\u6362\u800c\u53d8\u5f97\u201c\u5361\u58f3\u201d\uff08stuck\uff09\uff0c\u96be\u4ee5\u5904\u7406\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cKMPI\u4ece\u771f\u5b9e\u7684\u7c92\u5b50\u6570 \\(n\\) \u51fa\u53d1\uff0c\u53ef\u4ee5\u66f4\u81ea\u7136\u5730\u5c06\u8fd9\u79cd\u4f9d\u8d56\u6027\u7eb3\u5165\u7406\u8bba\u6846\u67b6\u3002\u8fd9\u4e00\u4f18\u52bf\u51f8\u663e\u4e86KMPI\u4f5c\u4e3a\u4e00\u79cd\u66f4\u63a5\u8fd1\u7269\u7406\u672c\u6e90\u7684\u5efa\u6a21\u5de5\u5177\uff0c\u5728\u9762\u5bf9\u590d\u6742\u975e\u5e73\u8861\u7cfb\u7edf\u65f6\u6240\u5177\u6709\u7684\u6f5c\u529b\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/","title":"\u56de\u987e\uff1a\u6cca\u677e\u8fc7\u7a0b\u53ca\u5176\u6a21\u62df","text":"<p>\u5728\u4e0a\u4e00\u8bb2\u4e2d\uff0cErwin Frey \u6559\u6388\u8be6\u7ec6\u63a2\u8ba8\u4e86\u6cca\u677e\u8fc7\u7a0b\uff0c\u5b83\u63cf\u8ff0\u4e86\u5728\u8fde\u7eed\u65f6\u95f4\u4e2d\uff0c\u4e8b\u4ef6\u4ee5\u6052\u5b9a\u5e73\u5747\u901f\u7387\u53d1\u751f\u7684\u968f\u673a\u8fc7\u7a0b\u3002\u672c\u8282\u8bfe\u7a0b\u4ece\u56de\u987e\u6cca\u677e\u8fc7\u7a0b\u7684\u6838\u5fc3\u6570\u5b66\u7279\u5f81\u5f00\u59cb\uff0c\u5e76\u4ee5\u6b64\u4e3a\u57fa\u7840\uff0c\u5f15\u51fa\u66f4\u9ad8\u7ea7\u7684\u968f\u673a\u8fc7\u7a0b\u6a21\u62df\u4e0e\u5206\u6790\u65b9\u6cd5\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_2","title":"\u7b49\u5f85\u65f6\u95f4\u5206\u5e03\u4e0e\u65e0\u8bb0\u5fc6\u6027","text":"<p>\u6cca\u677e\u8fc7\u7a0b\u7684\u4e00\u4e2a\u6838\u5fc3\u7279\u5f81\u662f\u5176\"\u65e0\u8bb0\u5fc6\u6027\"\uff08Memorylessness\uff09\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u5728\u672a\u6765\u67d0\u4e2a\u65f6\u95f4\u6bb5\u5185\u53d1\u751f\u7684\u6982\u7387\uff0c\u4e0e\u6211\u4eec\u5df2\u7ecf\u7b49\u5f85\u4e86\u591a\u957f\u65f6\u95f4\u65e0\u5173\u3002\u8fd9\u79cd\u7269\u7406\u7279\u6027\u5728\u6570\u5b66\u4e0a\u8868\u73b0\u4e3a\u4e8b\u4ef6\u4e4b\u95f4\u7684\u7b49\u5f85\u65f6\u95f4\u670d\u4ece\u6307\u6570\u5206\u5e03\u3002</p> <p>\u6559\u6388\u5728\u9ed1\u677f\u4e0a\u56de\u987e\u4e86\u63cf\u8ff0\u8fd9\u4e00\u7279\u6027\u7684\u51e0\u4e2a\u5173\u952e\u516c\u5f0f\uff1a</p> <p></p> <p>\u5b58\u6d3b\u6982\u7387 (Survival Probability) \\(S(t)\\)\uff1a\u4ece\u4efb\u610f\u65f6\u523b\u5f00\u59cb\uff0c\u7b49\u5f85\u65f6\u95f4\u8d85\u8fc7 \\(t\\) \u4ecd\u672a\u53d1\u751f\u4efb\u4f55\u4e8b\u4ef6\u7684\u6982\u7387\u3002\u5bf9\u4e8e\u6cca\u677e\u8fc7\u7a0b\uff0c\u8fd9\u4e2a\u6982\u7387\u968f\u65f6\u95f4\u6307\u6570\u8870\u51cf\uff1a</p> \\[ S(t)=e^{-\\nu t} \\] <p>\u5176\u4e2d \\(\\nu\\) \u662f\u4e8b\u4ef6\u53d1\u751f\u7684\u6052\u5b9a\u901f\u7387\uff08rate\uff09\u3002</p> <p>\u7b49\u5f85\u65f6\u95f4\u7d2f\u79ef\u5206\u5e03\u51fd\u6570 (Cumulative Distribution Function) \\(W(t)\\)\uff1a\u7b49\u5f85\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8e \\(t\\) \u7684\u6982\u7387\u3002\u5b83\u7b49\u4e8e 1 \u51cf\u53bb\u5b58\u6d3b\u6982\u7387\uff1a</p> \\[ W(t)=1-S(t)=1-e^{-\\nu t} \\] <p>\u7b49\u5f85\u65f6\u95f4\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 (Probability Density Function) \\(w(t)\\)\uff1a\u5728\u65f6\u95f4 \\(t\\) \u9644\u8fd1\u4e00\u4e2a\u6781\u5c0f\u65f6\u95f4\u7a97 \\(dt\\) \u5185\u53d1\u751f\u4e8b\u4ef6\u7684\u6982\u7387\u5bc6\u5ea6\u3002\u5b83\u662f\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\u7684\u5bfc\u6570\uff1a</p> \\[ w(t)=\\frac{dW(t)}{dt}=\\nu e^{-\\nu t} \\] <p>\u8fd9\u7ec4\u516c\u5f0f\u662f\u6cca\u677e\u8fc7\u7a0b\u7684\u57fa\u77f3\u3002\u6307\u6570\u5f62\u5f0f\u7684\u7b49\u5f85\u65f6\u95f4\u5206\u5e03 \\(w(t)\\) \u76f4\u63a5\u4f53\u73b0\u4e86\u65e0\u8bb0\u5fc6\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u6761\u4ef6\u6982\u7387\u6765\u9a8c\u8bc1\u8fd9\u4e00\u70b9\uff1a\u5047\u8bbe\u5728\u65f6\u95f4 \\(t_0\\) \u4e4b\u524d\u6ca1\u6709\u4e8b\u4ef6\u53d1\u751f\uff0c\u90a3\u4e48\u5728\u63a5\u4e0b\u6765\u7684 \\(dt\\) \u65f6\u95f4\u5185\u53d1\u751f\u4e8b\u4ef6\u7684\u6761\u4ef6\u6982\u7387\u662f\uff1a</p> \\[ P(t_0 &lt; T \\leq t_0 + dt \\mid T &gt; t_0) = \\frac{w(t_0) \\, dt}{S(t_0)} = \\frac{\\nu e^{-\\nu t_0} \\, dt}{e^{-\\nu t_0}} = \\nu \\, dt \\] <p>\u8fd9\u4e2a\u7ed3\u679c\u4e0e \\(t_0\\) \u65e0\u5173\uff0c\u8868\u660e\u65e0\u8bba\u6211\u4eec\u5df2\u7ecf\u7b49\u4e86\u591a\u4e45\uff0c\u5728\u4e0b\u4e00\u4e2a\u77ac\u95f4\u53d1\u751f\u4e8b\u4ef6\u7684\u6982\u7387\u59cb\u7ec8\u662f \\(\\nu dt\\)\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_3","title":"\u6a21\u62df\u7684\u56f0\u5883\uff1a\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f\u6cd5\u7684\u5c40\u9650","text":"<p>\u6709\u4e86\u6cca\u677e\u8fc7\u7a0b\u7684\u89e3\u6790\u63cf\u8ff0\uff0c\u4e00\u4e2a\u81ea\u7136\u800c\u7136\u7684\u95ee\u9898\u662f\uff1a\u6211\u4eec\u5982\u4f55\u5728\u8ba1\u7b97\u673a\u4e0a\u6a21\u62df\u8fd9\u6837\u7684\u8fc7\u7a0b\uff1f\u4e00\u4e2a\u6700\u76f4\u89c2\u7684\u65b9\u6cd5\u662f\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f\u7b97\u6cd5(Fixed time step algorithm)\u3002</p> <p></p> <p>\u8be5\u65b9\u6cd5\u7684\u601d\u8def\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u5c06\u65f6\u95f4\u79bb\u6563\u5316\u4e3a\u4e00\u7cfb\u5217\u5fae\u5c0f\u7684\u65f6\u95f4\u6b65\u957f \\(\\Delta t\\)\u3002</p> </li> <li> <p>\u5728\u6bcf\u4e00\u4e2a\u65f6\u95f4\u6b65\u957f\u5185\uff0c\u7c92\u5b50\u6709\u4e00\u5b9a\u6982\u7387\u5411\u524d\"\u8df3\u8dc3\"\u4e00\u6b65\uff08\u5373\u53d1\u751f\u4e00\u6b21\u4e8b\u4ef6\uff09\u3002</p> </li> <li> <p>\u8fd9\u4e2a\u6982\u7387 \\(p_+\\) \u88ab\u8bbe\u5b9a\u4e3a\u901f\u7387 \\(\\nu\\) \u4e58\u4ee5\u65f6\u95f4\u6b65\u957f \\(\\Delta t\\)\uff0c\u5373 \\(p_+=\\nu\\Delta t\\)\u3002</p> </li> <li> <p>\u76f8\u5e94\u5730\uff0c\u5728\u8fd9\u4e00\u6b65\u957f\u5185\u4e0d\u53d1\u751f\u8df3\u8dc3\u7684\u6982\u7387\u4e3a \\(p_0=1-p_+=1-\\nu\\Delta t\\)\u3002</p> </li> </ol> <p>\u7136\u800c\uff0c\u8fd9\u79cd\u770b\u4f3c\u7b80\u5355\u7684\u65b9\u6cd5\u5b58\u5728\u7740\u6df1\u523b\u7684\u7406\u8bba\u7f3a\u9677\u548c\u5b9e\u9645\u64cd\u4f5c\u4e0a\u7684\u56f0\u96be\uff1a</p> <ul> <li> <p>\u7cbe\u5ea6\u95ee\u9898\uff1a\u8be5\u65b9\u6cd5\u6210\u7acb\u7684\u524d\u63d0\u662f \\(\\nu\\Delta t\\ll 1\\)\uff0c\u5373\u5728\u4e00\u4e2a\u65f6\u95f4\u6b65\u957f\u5185\u53d1\u751f\u4e8b\u4ef6\u7684\u6982\u7387\u5fc5\u987b\u975e\u5e38\u5c0f\u3002\u5982\u679c \\(\\Delta t\\) \u4e0d\u591f\u5c0f\uff0c\u8fd9\u4e2a\u8fd1\u4f3c\u5c31\u4e0d\u518d\u6210\u7acb\u3002\u66f4\u4e25\u91cd\u7684\u662f\uff0c\u5b83\u5b8c\u5168\u5ffd\u7565\u4e86\u5728\u4e00\u4e2a \\(\\Delta t\\) \u5185\u53d1\u751f\u4e24\u6b21\u6216\u66f4\u591a\u6b21\u4e8b\u4ef6\u7684\u53ef\u80fd\u6027\uff08\u5176\u6982\u7387\u6b63\u6bd4\u4e8e \\((\\nu\\Delta t)^2\\) \u6216\u66f4\u9ad8\u9636\u9879\uff09\u3002</p> </li> <li> <p>\u6548\u7387\u95ee\u9898\uff1a\u5982\u679c\u4e8b\u4ef6\u53d1\u751f\u7684\u901f\u7387 \\(\\nu\\) \u975e\u5e38\u5c0f\uff0c\u90a3\u4e48\u5728\u7edd\u5927\u591a\u6570\u65f6\u95f4\u6b65\u957f\u5185\uff0c\u7cfb\u7edf\u90fd\u5904\u4e8e\"\u4ec0\u4e48\u4e5f\u6ca1\u53d1\u751f\"\u7684\u72b6\u6001 (\\(p_0\\approx 1\\))\u3002\u8ba1\u7b97\u673a\u4f1a\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u6a21\u62df\u8fd9\u4e9b\"\u65e0\u4e8b\u4ef6\"\u7684\u6b65\u9aa4\uff0c\u6548\u7387\u6781\u4f4e\u3002</p> </li> <li> <p>\u6b63\u786e\u6027\u95ee\u9898\uff1a\u8be5\u65b9\u6cd5\u5f15\u5165\u4e86\u4eba\u4e3a\u7684\u65f6\u95f4\u7f51\u683c\uff0c\u8feb\u4f7f\u4e8b\u4ef6\u53ea\u80fd\u5728 \\(k\\cdot\\Delta t\\)\uff08\\(k\\) \u4e3a\u6574\u6570\uff09\u8fd9\u4e9b\u79bb\u6563\u7684\u65f6\u95f4\u70b9\u4e0a\u53d1\u751f\uff0c\u8fd9\u4e0e\u771f\u5b9e\u6cca\u677e\u8fc7\u7a0b\u4e2d\u4e8b\u4ef6\u53ef\u4ee5\u53d1\u751f\u5728\u4efb\u610f\u8fde\u7eed\u65f6\u95f4\u7684\u7279\u6027\u76f8\u6096\u3002</p> </li> </ul> <p>\u8fd9\u4e9b\u5c40\u9650\u6027\u4fc3\u4f7f\u6211\u4eec\u53bb\u5bfb\u627e\u4e00\u79cd\u66f4\u7cbe\u786e\u3001\u66f4\u9ad8\u6548\u7684\u6a21\u62df\u65b9\u6cd5\uff0c\u8fd9\u4fbf\u662f\u672c\u8bb2\u7684\u6838\u5fc3\u5185\u5bb9\u4e4b\u4e00\u2014\u2014Gillespie \u7b97\u6cd5\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#1-gillespie","title":"1. Gillespie \u7b97\u6cd5\uff1a\u4e00\u79cd\u7cbe\u786e\u7684\u968f\u673a\u6a21\u62df\u65b9\u6cd5","text":"<p>Gillespie \u7b97\u6cd5\uff08\u5409\u83b1\u65af\u76ae\u7b97\u6cd5\uff09\uff0c\u53c8\u79f0\u968f\u673a\u6a21\u62df\u7b97\u6cd5 (Stochastic Simulation Algorithm, SSA)\uff0c\u662f\u4e00\u79cd\u4e8b\u4ef6\u9a71\u52a8 (event-driven) \u7684\u65b9\u6cd5\uff0c\u5b83\u5b8c\u5168\u6452\u5f03\u4e86\u56fa\u5b9a\u65f6\u95f4\u6b65\u957f\u7684\u6982\u5ff5\u3002\u5176\u6838\u5fc3\u601d\u60f3\u4e0d\u662f\u95ee\u5728\u4e0b\u4e00\u4e2a \\(\\Delta t\\) \u5185\u662f\u5426\u4f1a\u53d1\u751f\u4e8b\u4ef6\uff1f\uff0c\u800c\u662f\u76f4\u63a5\u95ee\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u5c06\u5728\u4f55\u65f6\u53d1\u751f\uff1f\u3002\u901a\u8fc7\u76f4\u63a5\u4ece\u7406\u8bba\u4e0a\u6b63\u786e\u7684\u7b49\u5f85\u65f6\u95f4\u5206\u5e03\u4e2d\u62bd\u53d6\u968f\u673a\u6570\uff0c\u8be5\u7b97\u6cd5\u80fd\u591f\u7cbe\u786e\u5730\u6a21\u62df\u968f\u673a\u8fc7\u7a0b\u7684\u6bcf\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u79cd\"\u7cbe\u786e\"\u7684\u6a21\u62df\u65b9\u6cd5\uff0c\u5176\u7ed3\u679c\u5728\u7edf\u8ba1\u610f\u4e49\u4e0a\u4e0e\u7406\u8bba\u89e3\u6790\u89e3\u5b8c\u5168\u4e00\u81f4\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#11","title":"1.1 \u6838\u5fc3\u601d\u60f3\uff1a\u9006\u53d8\u6362\u91c7\u6837","text":"<p>Gillespie \u7b97\u6cd5\u7684\u57fa\u77f3\u662f\u5982\u4f55\u751f\u6210\u4e00\u4e2a\u670d\u4ece\u7279\u5b9a\u6982\u7387\u5206\u5e03\uff08\u5728\u8fd9\u91cc\u662f\u6307\u6570\u5206\u5e03 \\(w(t)=\\nu e^{-\\nu t}\\)\uff09\u7684\u968f\u673a\u6570\u3002\u8fd9\u9700\u8981\u501f\u52a9\u4e00\u79cd\u5f3a\u5927\u7684\u7edf\u8ba1\u5b66\u6280\u5de7\u2014\u2014\u9006\u53d8\u6362\u91c7\u6837(Inverse Transform Sampling)\u3002</p> <p>\u5176\u539f\u7406\u5982\u4e0b\uff1a</p> <p>1.\u6211\u4eec\u6709\u4e00\u4e2a\u76ee\u6807\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \\(w(t)\\)\uff0c\u4ee5\u53ca\u5b83\u5bf9\u5e94\u7684\u7d2f\u79ef\u5206\u5e03\u51fd\u6570 \\(W(t)=\\int_0^t w(t')dt'\\)\u3002</p> <p>2.\u6211\u4eec\u8fd8\u62e5\u6709\u4e00\u4e2a\u80fd\u591f\u5728 \\([0, 1]\\) \u533a\u95f4\u5185\u751f\u6210\u5747\u5300\u5206\u5e03\u968f\u673a\u6570\u7684\u5de5\u5177\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u968f\u673a\u6570\u4e3a \\(\\xi\\)\u3002</p> <p>3.\u6838\u5fc3\u7684\u7b49\u5f0f\u662f\u6982\u7387\u5b88\u6052\uff1a\u5728 t \u9644\u8fd1 dt \u8303\u56f4\u5185\u7684\u6982\u7387 w(t)dt \u5e94\u8be5\u7b49\u4e8e\u5728 \u03be \u9644\u8fd1 d\u03be \u8303\u56f4\u5185\u7684\u6982\u7387 1\u22c5d\u03be\u3002\u5373\uff1a</p> \\[ w(t)dt=d\\xi \\] <p>4.\u5bf9\u8fd9\u4e2a\u7b49\u5f0f\u4e24\u8fb9\u4ece 0 \u5230 t \u8fdb\u884c\u79ef\u5206\uff0c\u5de6\u8fb9\u5f97\u5230\u7d2f\u79ef\u5206\u5e03\u51fd\u6570 W(t)\uff0c\u53f3\u8fb9\u5f97\u5230 \u03be\uff1a</p> \\[ \\xi=\\int_0^t w(t')dt'=W(t) \\] <p>5.\u5bf9\u4e8e\u6cca\u677e\u8fc7\u7a0b\uff0c\u6211\u4eec\u6709 \\(W(t)=1-e^{-\\nu t}\\)\uff0c\u6240\u4ee5\uff1a</p> \\[ \\xi=1-e^{-\\nu t} \\] <p>6.\u73b0\u5728\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u6839\u636e\u5df2\u77e5\u7684 \\(\\xi\\) \u6765\u6c42\u89e3 \\(t\\)\u3002\u901a\u8fc7\u7b80\u5355\u7684\u4ee3\u6570\u53d8\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \\(t\\) \u7684\u8868\u8fbe\u5f0f\uff1a</p> \\[ e^{-\\nu t}=1-\\xi \\] \\[ -\\nu t=\\ln(1-\\xi) \\] \\[ t=-\\frac{1}{\\nu}\\ln(1-\\xi) \\] <p>7.\u8fd9\u91cc\u6709\u4e00\u4e2a\u5de7\u5999\u7684\u7b80\u5316\uff1a\u56e0\u4e3a \\(\\xi\\) \u662f\u5728 \\([0, 1]\\) \u533a\u95f4\u5185\u5747\u5300\u5206\u5e03\u7684\u968f\u673a\u6570\uff0c\u90a3\u4e48 \\(1-\\xi\\) \u540c\u6837\u4e5f\u662f\u5728 \\([0, 1]\\) \u533a\u95f4\u5185\u5747\u5300\u5206\u5e03\u7684\u968f\u673a\u6570\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u53e6\u4e00\u4e2a\u5747\u5300\u968f\u673a\u6570 \\(\\xi'\\) \u6765\u4ee3\u66ff \\(1-\\xi\\)\uff0c\u4ece\u800c\u5f97\u5230\u6700\u7ec8\u7684\u91c7\u6837\u516c\u5f0f\uff1a</p> \\[ t=-\\frac{1}{\\nu}\\ln(\\xi') \\] <p>\u5728\u8bb2\u5ea7\u7b14\u8bb0\u4e2d\uff0c\u6559\u6388\u4f7f\u7528\u4e86\u7279\u5f81\u65f6\u95f4 \\(\\tau=1/\\nu\\) \u6765\u8868\u793a\uff0c\u516c\u5f0f\u5199\u4f5c \\(t=-\\tau\\ln(\\xi)\\)\u3002</p> <p>\u8fd9\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u4e0d\u4ec5\u7ed9\u51fa\u4e86\u6cca\u677e\u8fc7\u7a0b\u7b49\u5f85\u65f6\u95f4\u7684\u751f\u6210\u65b9\u6cd5\uff0c\u66f4\u91cd\u8981\u7684\u662f\u5b83\u63ed\u793a\u4e86\u4e00\u4e2a\u666e\u9002\u7684\u539f\u7406\uff1a\u8981\u4ece\u4efb\u610f\u6982\u7387\u5206\u5e03\u4e2d\u62bd\u6837\uff0c\u53ea\u9700\u5148\u751f\u6210\u4e00\u4e2a \\([0, 1]\\) \u4e0a\u7684\u5747\u5300\u968f\u673a\u6570 \\(\\xi\\)\uff0c\u7136\u540e\u8ba1\u7b97\u5176\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\u7684\u53cd\u51fd\u6570 \\(W^{-1}(\\xi)\\) \u5373\u53ef\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#12-gillespie","title":"1.2 \u6cca\u677e\u8fc7\u7a0b\u7684 Gillespie \u7b97\u6cd5\u6b65\u9aa4","text":"<p>\u57fa\u4e8e\u4e0a\u8ff0\u539f\u7406\uff0c\u6a21\u62df\u6cca\u677e\u8fc7\u7a0b\u7684 Gillespie \u7b97\u6cd5\u53ef\u4ee5\u88ab\u6e05\u6670\u5730\u603b\u7ed3\u4e3a\u4ee5\u4e0b\u4e09\u6b65\u5faa\u73af\uff1a</p> <p>1.\u521d\u59cb\u5316\uff1a\u8bbe\u5b9a\u521d\u59cb\u65f6\u95f4 \\(T=0\\)\uff0c\u521d\u59cb\u4f4d\u7f6e\uff08\u4e8b\u4ef6\u53d1\u751f\u6b21\u6570\uff09\\(n=0\\)\u3002</p> <p>2.\u62bd\u53d6\u7b49\u5f85\u65f6\u95f4\uff1a</p> <p>a. \u751f\u6210\u4e00\u4e2a\u5728 \\([0, 1]\\) \u533a\u95f4\u5185\u5747\u5300\u5206\u5e03\u7684\u968f\u673a\u6570 \\(\\xi\\)\u3002</p> <p>b. \u6839\u636e\u516c\u5f0f \\(t=-\\frac{1}{\\nu}\\ln(\\xi)\\) \u8ba1\u7b97\u4e0b\u4e00\u6b21\u4e8b\u4ef6\u53d1\u751f\u7684\u7b49\u5f85\u65f6\u95f4 \\(t\\)\u3002</p> <p>3.\u66f4\u65b0\u7cfb\u7edf\u72b6\u6001\uff1a</p> <p>a. \u5c06\u5f53\u524d\u65f6\u95f4\u5411\u524d\u63a8\u8fdb \\(t\\)\uff1a\\(T \\leftarrow T+t\\)\u3002</p> <p>b. \u4e8b\u4ef6\u53d1\u751f\u6b21\u6570\u52a0\u4e00\uff1a\\(n \\leftarrow n+1\\)\u3002</p> <p>4.\u5faa\u73af\uff1a\u91cd\u590d\u6b65\u9aa4 2 \u548c 3\uff0c\u76f4\u5230\u6a21\u62df\u65f6\u95f4 \\(T\\) \u8fbe\u5230\u9884\u8bbe\u7684\u7ec8\u6b62\u65f6\u95f4\u3002</p> <p>\u8fd9\u79cd\u4e8b\u4ef6\u9a71\u52a8\u7684\u6a21\u62df\u65b9\u5f0f\uff0c\u5176\u65f6\u95f4\u6b65\u957f \\(t\\) \u672c\u8eab\u5c31\u662f\u968f\u673a\u7684\uff0c\u5b8c\u7f8e\u5730\u590d\u73b0\u4e86\u968f\u673a\u8fc7\u7a0b\u7684\u5185\u5728\u4e0d\u786e\u5b9a\u6027\u3002\u5b83\u65e2\u7cbe\u786e\u53c8\u9ad8\u6548\uff0c\u56e0\u4e3a\u8ba1\u7b97\u673a\u53ea\u5728\u4e8b\u4ef6\u771f\u6b63\u53d1\u751f\u65f6\u624d\u8fdb\u884c\u8ba1\u7b97\u3002</p> <p></p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#13-python","title":"1.3 Python \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 Python \u5b9e\u73b0 Gillespie \u7b97\u6cd5\u6765\u6a21\u62df\u6cca\u677e\u8fc7\u7a0b\u7684\u793a\u4f8b\u4ee3\u7801\u3002\u4ee3\u7801\u4f1a\u751f\u6210\u5e76\u590d\u73b0PPT\u6240\u793a\u7684\u8f68\u8ff9\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef gillespie_poisson(nu, t_max):\n    \"\"\"\n    Simulate a Poisson process using the Gillespie algorithm.\n\n    Parameters:\n    nu (float): Event rate.\n    t_max (float): Total simulation time.\n\n    Returns:\n    tuple: Two lists containing event times and corresponding event counts.\n    \"\"\"\n    # Initialization\n    t = 0.0  # Current time\n    n = 0    # Current event count\n\n    # Lists to store trajectory\n    times = [t]\n    counts = [n]\n\n    # Simulation loop until maximum time is reached\n    while t &lt; t_max:\n        # 1. Draw a uniform random number from (0, 1]\n        #    Note: xi cannot be 0 because log(0) is negative infinity.\n        #    np.random.random() generates random numbers in (0, 1), which meets the requirement.\n        xi = np.random.random()\n\n        # 2. Calculate waiting time according to the formula\n        dt = -1.0/nu * np.log(xi)\n\n        # 3. Update time and count\n        t += dt\n        n += 1\n\n        # 4. Record trajectory point\n        times.append(t)\n        counts.append(n)\n\n    return times, counts\n\n# --- Simulation and plotting ---\n# Set parameters\nnu = 1.0      # Event rate\nt_max = 100   # Total simulation time\nnum_traj = 10 # Number of simulated trajectories\n\n# Create figure with two subplots\nplt.figure(figsize=(15, 6))\n\n# Left subplot: Single trajectory\nplt.subplot(1, 2, 1)\ntimes, counts = gillespie_poisson(nu, t_max)\nplt.step(times, counts, where='post', linewidth=1.5, color='blue')\n# Add theoretical expectation line (straight line y = vt)\nt_theory = np.linspace(0, t_max, 100)\nn_theory = nu * t_theory\nplt.plot(t_theory, n_theory, 'k--', linewidth=2)\nplt.xlabel('Time ($t$)')\nplt.ylabel('Event Count ($x$)')\nplt.title('Single Trajectory')\nplt.grid(True, alpha=0.3)\n\n# Right subplot: Multiple trajectories\nplt.subplot(1, 2, 2)\nfor i in range(num_traj):\n    times, counts = gillespie_poisson(nu, t_max)\n    plt.step(times, counts, where='post', linewidth=1.5, alpha=0.7)\n\n# Add theoretical expectation line (straight line y = \u8c13t)\nt_theory = np.linspace(0, t_max, 100)\nn_theory = nu * t_theory\nplt.plot(t_theory, n_theory, 'k--', linewidth=2, label='Expected $\\\\nu t$')\n\n# Set chart properties\nplt.xlabel('Time ($t$)')\nplt.ylabel('Event Count ($x$)')\nplt.title('Multiple Trajectories')\nplt.grid(True, alpha=0.3)\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n</code></pre> </p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#2","title":"2. \u4e3b\u65b9\u7a0b\uff1a\u6982\u7387\u5206\u5e03\u7684\u786e\u5b9a\u6027\u6f14\u5316","text":"<p>\u867d\u7136 Gillespie \u7b97\u6cd5\u80fd\u591f\u751f\u6210\u5355\u6761\u968f\u673a\u8f68\u8ff9\uff0c\u4f46\u8981\u7406\u89e3\u6574\u4e2a\u968f\u673a\u8fc7\u7a0b\u7684\u7edf\u8ba1\u7279\u6027\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u5b8f\u89c2\u7684\u63cf\u8ff0\u5de5\u5177\u3002\u8fd9\u5c31\u662f\u4e3b\u65b9\u7a0b (Master Equation)\u3002\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u7684\u662f\u7cfb\u7edf\u5904\u4e8e\u5404\u4e2a\u53ef\u80fd\u72b6\u6001\u7684\u6982\u7387\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\uff0c\u5b83\u662f\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u5fae\u5206\u65b9\u7a0b\u3002</p> <p>\u4e3b\u65b9\u7a0b\u7684\u5386\u53f2\u53ef\u4ee5\u8ffd\u6eaf\u523020\u4e16\u7eaa\u521d\uff0c\u7531\u7269\u7406\u5b66\u5bb6\u9a6c\u514b\u65af\u00b7\u73bb\u6069(Max Born)\u548c\u7ef4\u5c14\u7eb3\u00b7\u6d77\u68ee\u5821(Werner Heisenberg)\u7b49\u4eba\u5728\u91cf\u5b50\u529b\u5b66\u548c\u7edf\u8ba1\u7269\u7406\u7684\u7814\u7a76\u4e2d\u9996\u6b21\u63d0\u51fa\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u5fae\u89c2\u7684\u968f\u673a\u8fc7\u7a0b\u8f6c\u5316\u4e3a\u5b8f\u89c2\u7684\u6982\u7387\u6f14\u5316\u63cf\u8ff0\uff0c\u4ece\u800c\u80fd\u591f\u7cfb\u7edf\u5730\u5206\u6790\u968f\u673a\u7cfb\u7edf\u7684\u6574\u4f53\u884c\u4e3a\u7279\u5f81\u3002</p> <p>\u4e3b\u65b9\u7a0b\u65b9\u6cd5\u7684\u57fa\u672c\u539f\u7406\u662f\u6982\u7387\u5b88\u6052\uff1a\u7cfb\u7edf\u5728\u67d0\u4e00\u65f6\u523b\u5904\u4e8e\u7279\u5b9a\u72b6\u6001\u7684\u6982\u7387\u53d8\u5316\u7387\u7b49\u4e8e\u6d41\u5165\u8be5\u72b6\u6001\u7684\u6982\u7387\u6d41\u51cf\u53bb\u6d41\u51fa\u8be5\u72b6\u6001\u7684\u6982\u7387\u6d41\u3002\u8fd9\u79cd\"\u589e\u76ca-\u635f\u5931\"\u7684\u5e73\u8861\u601d\u60f3\u4e0d\u4ec5\u9002\u7528\u4e8e\u7269\u7406\u7cfb\u7edf\uff0c\u4e5f\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5316\u5b66\u53cd\u5e94\u3001\u751f\u7269\u79cd\u7fa4\u52a8\u529b\u5b66\u3001\u91d1\u878d\u5efa\u6a21\u7b49\u4f17\u591a\u9886\u57df\u3002</p> <p>\u5728\u5177\u4f53\u5e94\u7528\u65b9\u9762\uff0c\u4e3b\u65b9\u7a0b\u7279\u522b\u9002\u7528\u4e8e\u5904\u7406\u5177\u6709\u79bb\u6563\u72b6\u6001\u7a7a\u95f4\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u3002\u4f8b\u5982\uff1a</p> <ul> <li> <p>\u5728\u5316\u5b66\u53cd\u5e94\u4e2d\uff0c\u63cf\u8ff0\u53cd\u5e94\u7269\u5206\u5b50\u6570\u968f\u65f6\u95f4\u53d8\u5316\u7684\u6982\u7387\u5206\u5e03</p> </li> <li> <p>\u5728\u751f\u7269\u79cd\u7fa4\u52a8\u529b\u5b66\u4e2d\uff0c\u523b\u753b\u79cd\u7fa4\u5927\u5c0f\u7684\u6982\u7387\u6f14\u5316\u8fc7\u7a0b</p> </li> <li> <p>\u5728\u4f20\u67d3\u75c5\u6a21\u578b\u4e2d\uff0c\u5206\u6790\u6613\u611f\u8005\u3001\u611f\u67d3\u8005\u548c\u5eb7\u590d\u8005\u6570\u91cf\u7684\u6982\u7387\u5206\u5e03</p> </li> <li> <p>\u5728\u91d1\u878d\u9886\u57df\uff0c\u7528\u4e8e\u5efa\u6a21\u8d44\u4ea7\u4ef7\u683c\u53d8\u52a8\u7684\u6982\u7387\u7279\u5f81</p> </li> </ul> <p>\u4e0eGillespie\u7b97\u6cd5\u76f8\u6bd4\uff0c\u4e3b\u65b9\u7a0b\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u4e3a\u7cfb\u7edf\u548c\u5168\u9762\u7684\u5206\u6790\u6846\u67b6\u3002Gillespie\u7b97\u6cd5\u5173\u6ce8\u5355\u6761\u8f68\u8ff9\u7684\u968f\u673a\u6f14\u5316\uff0c\u800c\u4e3b\u65b9\u7a0b\u5173\u6ce8\u6574\u4e2a\u6982\u7387\u5206\u5e03\u7684\u786e\u5b9a\u6027\u6f14\u5316\u3002\u4e24\u8005\u76f8\u8f85\u76f8\u6210\uff0c\u5171\u540c\u6784\u6210\u4e86\u968f\u673a\u8fc7\u7a0b\u5206\u6790\u7684\u91cd\u8981\u5de5\u5177\u96c6\u3002</p> <p>\u5bf9\u4e8e\u521d\u5b66\u8005\uff0c\u9700\u8981\u533a\u5206\u4e3b\u65b9\u7a0b\u4e0e\u4e4b\u540e\u4ecb\u7ecd\u7684\u5e73\u5747\u573a\u81ea\u6d3d\u65b9\u7a0b\u3002\u4e24\u8005\u5728\u6570\u5b66\u7ed3\u6784\u548c\u7269\u7406\u610f\u4e49\u4e0a\u90fd\u6709\u672c\u8d28\u533a\u522b\uff0c\u4e0d\u5e94\u6df7\u6dc6\u3002</p> <p>\u81ea\u6d3d\u65b9\u7a0b\u4e0e\u4e3b\u65b9\u7a0b\u7684\u533a\u522b\u5728\u4e8e\uff1a\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u7684\u662f\u6982\u7387\u5206\u5e03\u7684\u65f6\u95f4\u6f14\u5316\uff0c\u800c\u81ea\u6d3d\u65b9\u7a0b\u5173\u6ce8\u7684\u662f\u7cfb\u7edf\u7a33\u6001\u89e3\u7684\u5185\u90e8\u4e00\u81f4\u6027\u3002</p> <ul> <li> <p>\u4e3b\u65b9\u7a0b\uff1a\u63cf\u8ff0\u6982\u7387\u5206\u5e03\u7684\u65f6\u95f4\u6f14\u5316\uff0c\u5f62\u5f0f\u4e3a \\(\\frac{d}{dt}p(n,t) = \\text{\u589e\u76ca\u9879} - \\text{\u635f\u5931\u9879}\\)\uff0c\u5173\u6ce8\u7684\u662f\u6574\u4e2a\u7cfb\u7efc(ensemble)\u7684\u7edf\u8ba1\u884c\u4e3a\u3002</p> </li> <li> <p>\u81ea\u6d3d\u65b9\u7a0b\uff1a\u901a\u5e38\u6307\u5f62\u5982 \\(x = f(x)\\) \u7684\u65b9\u7a0b\uff0c\u5176\u4e2d\u672a\u77e5\u91cf\\(x\\)\u540c\u65f6\u51fa\u73b0\u5728\u65b9\u7a0b\u7684\u4e24\u8fb9\uff0c\u8981\u6c42\u89e3\u5fc5\u987b\u4e0e\u81ea\u8eab\u4fdd\u6301\u4e00\u81f4\u3002\u5728\u7269\u7406\u4e2d\u5e38\u89c1\u4e8e\u5e73\u5747\u573a\u8fd1\u4f3c\uff0c\u5982 \\(m = \\tanh(\\beta(Jm + h))\\) \u8fd9\u6837\u7684\u81ea\u6d3d\u65b9\u7a0b\uff0c\u5176\u4e2d\u78c1\u5316\u5f3a\u5ea6\\(m\\)\u901a\u8fc7\u81ea\u8eab\u7684\u503c\u6765\u786e\u5b9a\u3002</p> </li> </ul>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#21","title":"2.1 \u4ece\u5fae\u89c2\u8fc7\u7a0b\u5230\u5b8f\u89c2\u6f14\u5316","text":"<p>\u8ba9\u6211\u4eec\u56de\u5230\u6cca\u677e\u8fc7\u7a0b\u7684\u5fae\u89c2\u63cf\u8ff0\u3002\u5728\u63a8\u5bfc Gillespie \u7b97\u6cd5\u65f6\uff0c\u6211\u4eec\u8003\u8651\u5728\u65f6\u95f4 \\(t+dt\\) \u65f6\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001 \\(n\\)\uff08\u5373\u53d1\u751f\u4e86 \\(n\\) \u6b21\u4e8b\u4ef6\uff09\u7684\u6982\u7387 \\(p(n, t+dt)\\)\u3002\u8981\u8fbe\u5230\u8fd9\u4e2a\u72b6\u6001\uff0c\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u524d\u7f6e\u8def\u5f84\uff1a</p> <p>1.\u5728\u65f6\u95f4 \\(t\\) \u65f6\uff0c\u7cfb\u7edf\u5df2\u7ecf\u5904\u4e8e\u72b6\u6001 \\(n-1\\)\uff0c\u7136\u540e\u5728\u63a5\u4e0b\u6765\u7684 \\(dt\\) \u65f6\u95f4\u5185\u53d1\u751f\u4e86\u4e00\u6b21\u8df3\u8dc3\u3002\u8fd9\u6b21\u8df3\u8dc3\u7684\u6982\u7387\u662f \\(\\nu dt\\)\u3002\u56e0\u6b64\uff0c\u8fd9\u6761\u8def\u5f84\u7684\u8d21\u732e\u662f \\(p(n-1, t) \\cdot \\nu dt\\)\u3002</p> <p>2.\u5728\u65f6\u95f4 \\(t\\) \u65f6\uff0c\u7cfb\u7edf\u5df2\u7ecf\u5904\u4e8e\u72b6\u6001 \\(n\\)\uff0c\u7136\u540e\u5728\u63a5\u4e0b\u6765\u7684 \\(dt\\) \u65f6\u95f4\u5185\u6ca1\u6709\u53d1\u751f\u8df3\u8dc3\u3002\u4e0d\u53d1\u751f\u8df3\u8dc3\u7684\u6982\u7387\u662f \\(1 - \\nu dt\\)\u3002\u56e0\u6b64\uff0c\u8fd9\u6761\u8def\u5f84\u7684\u8d21\u732e\u662f \\(p(n, t) \\cdot (1 - \\nu dt)\\)\u3002</p> <p>\u5c06\u8fd9\u4e24\u79cd\u4e92\u65a5\u60c5\u51b5\u7684\u6982\u7387\u76f8\u52a0\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86 \\(p(n, t+dt)\\) \u7684\u8868\u8fbe\u5f0f\uff1a</p> \\[p(n, t+dt) = p(n-1, t) \\cdot \\nu dt + p(n, t) \\cdot (1 - \\nu dt)\\] <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u65b9\u7a0b\u8fdb\u884c\u6574\u7406\uff1a</p> \\[p(n, t+dt) - p(n, t) = \\nu p(n-1, t) dt - \\nu p(n, t) dt\\] \\[\\frac{p(n, t+dt) - p(n, t)}{dt} = \\nu p(n-1, t) - \\nu p(n, t)\\] <p>\u5f53 \\(dt \\to 0\\) \u65f6\uff0c\u5de6\u8fb9\u5c31\u662f \\(p(n, t)\\) \u5bf9\u65f6\u95f4\u7684\u5bfc\u6570\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u6cca\u677e\u8fc7\u7a0b\u7684\u4e3b\u65b9\u7a0b\uff1a</p> \\[\\frac{d}{dt} p(n, t) = \\nu p(n-1, t) - \\nu p(n, t)\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u5bf9\u4e8e\u6240\u6709 \\(n \\ge 1\\) \u6210\u7acb\u3002\u5bf9\u4e8e \\(n=0\\) \u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u7531\u4e8e\u4e0d\u5b58\u5728 \\(n=-1\\) \u7684\u72b6\u6001\uff0c\u7cfb\u7edf\u53ea\u80fd\u4ece\u72b6\u6001 0 \u79bb\u5f00\uff0c\u800c\u4e0d\u80fd\u8fdb\u5165\u3002\u56e0\u6b64\uff0c\u5176\u65b9\u7a0b\u4e3a\uff1a</p> \\[\\frac{d}{dt} p(0, t) = -\\nu p(0, t)\\]"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#22-gain-loss","title":"2.2 \u589e\u76ca-\u635f\u5931 (Gain-Loss) \u8be0\u91ca","text":"<p>\u4e3b\u65b9\u7a0b\u7684\u7ed3\u6784\u5177\u6709\u975e\u5e38\u6e05\u6670\u7684\u7269\u7406\u610f\u4e49\uff0c\u5b83\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u6bcf\u4e2a\u72b6\u6001 \\(n\\) \u4e0a\u7684\u6982\u7387\u6d41\u7684\u5e73\u8861\u65b9\u7a0b\uff1a</p> \\[\\frac{d}{dt} p(n, t) = \\underbrace{\\nu p(n-1, t)}_{\\text{GAIN}} - \\underbrace{\\nu p(n, t)}_{\\text{LOSS}}\\] <ul> <li> <p>\u589e\u76ca\u9879 (GAIN)\uff1a\\(\\nu p(n-1, t)\\) \u4ee3\u8868\u4ece\u72b6\u6001 \\(n-1\\) \u6d41\u5165\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\u901a\u91cf\u3002\u5176\u5927\u5c0f\u7b49\u4e8e\u6e90\u72b6\u6001\u7684\u6982\u7387 \\(p(n-1, t)\\) \u4e58\u4ee5\u8f6c\u79fb\u901f\u7387 \\(\\nu\\)\u3002</p> </li> <li> <p>\u635f\u5931\u9879 (LOSS)\uff1a\\(\\nu p(n, t)\\) \u4ee3\u8868\u4ece\u72b6\u6001 \\(n\\) \u6d41\u51fa\u5230\u72b6\u6001 \\(n+1\\) \u7684\u6982\u7387\u901a\u91cf\u3002\u5176\u5927\u5c0f\u7b49\u4e8e\u5f53\u524d\u72b6\u6001\u7684\u6982\u7387 \\(p(n, t)\\) \u4e58\u4ee5\u79bb\u5f00\u8be5\u72b6\u6001\u7684\u603b\u901f\u7387 \\(\\nu\\)\u3002</p> </li> </ul> <p></p> <p>\u8fd9\u79cd\"\u589e\u76ca-\u635f\u5931\"\u7684\u7ed3\u6784\u662f\u6240\u6709\u4e3b\u65b9\u7a0b\u7684\u5171\u540c\u7279\u5f81\u3002\u5b83\u672c\u8d28\u4e0a\u662f\u5728\u79bb\u6563\u72b6\u6001\u7a7a\u95f4\u4e0a\u7684\u4e00\u4e2a\u8fde\u7eed\u6027\u65b9\u7a0b\uff0c\u63cf\u8ff0\u4e86\u6982\u7387\"\u5bc6\u5ea6\"\\(p(n, t)\\) \u7684\u53d8\u5316\u7387\u7b49\u4e8e\u6d41\u5165\u548c\u6d41\u51fa\u8be5\u72b6\u6001\u7684\u6982\u7387\"\u6d41\"\u7684\u51c0\u5dee\u989d\u3002\u8fd9\u4e5f\u4fdd\u8bc1\u4e86\u603b\u6982\u7387\u5b88\u6052\uff0c\u5373 \\(\\frac{d}{dt} \\sum_n p(n, t) = 0\\)\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#23","title":"2.3 \u4ece\u968f\u673a\u8f68\u8ff9\u5230\u786e\u5b9a\u6027\u6f14\u5316","text":"<p>\u8fd9\u91cc\u6211\u4eec\u770b\u5230\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u89c2\u5ff5\u8f6c\u53d8\u3002Gillespie \u7b97\u6cd5\u6a21\u62df\u7684\u662f\u4e00\u6761\u968f\u673a\u7684\u3001\u4e0d\u53ef\u9884\u6d4b\u7684\u8def\u5f84 \\(n(t)\\)\u3002\u800c\u4e3b\u65b9\u7a0b\u5219\u662f\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u5b83\u7684\u89e3 \\(p(n, t)\\) \u662f\u4e00\u4e2a\u5e73\u6ed1\u3001\u53ef\u9884\u6d4b\u7684\u51fd\u6570\u3002</p> <p>\u8fd9\u4e24\u8005\u4e4b\u95f4\u7684\u8054\u7cfb\u5728\u4e8e\uff1a\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u7684\u662f\u7531\u65e0\u9650\u591a\u4e2a Gillespie \u8f68\u8ff9\u6784\u6210\u7684\u7cfb\u7efc (ensemble) \u7684\u7edf\u8ba1\u884c\u4e3a\u3002\u5982\u679c\u6211\u4eec\u8fd0\u884c\u65e0\u6570\u6b21 Gillespie \u6a21\u62df\uff0c\u7136\u540e\u5728\u67d0\u4e2a\u56fa\u5b9a\u7684\u65f6\u95f4 \\(t\\) \u7edf\u8ba1\u6240\u6709\u6a21\u62df\u7ed3\u679c\u4e2d \\(n\\) \u7684\u503c\u7684\u5206\u5e03\u76f4\u65b9\u56fe\uff0c\u90a3\u4e48\u8fd9\u4e2a\u76f4\u65b9\u56fe\u7684\u5f62\u72b6\u5c31\u4f1a\u8d8b\u8fd1\u4e8e\u4e3b\u65b9\u7a0b\u7684\u89e3 \\(p(n, t)\\)\u3002\u56e0\u6b64\uff0c\u4e3b\u65b9\u7a0b\u5c06\u5fae\u89c2\u7684\u968f\u673a\u6027\u4e0e\u5b8f\u89c2\u6982\u7387\u7684\u786e\u5b9a\u6027\u6f14\u5316\u8054\u7cfb\u4e86\u8d77\u6765\u3002</p> <p>\u5728\u8bb2\u5ea7\u7684\u7a0d\u540e\u90e8\u5206\uff0c\u6559\u6388\u8fd8\u5c55\u793a\u4e86\u4e3b\u65b9\u7a0b\u7684\u77e9\u9635\u5f62\u5f0f\uff1a</p> \\[\\frac{d}{dt} \\vec{p}(t) = W \\vec{p}(t)\\] <p>\u5176\u4e2d \\(\\vec{p}(t)\\) \u662f\u4e00\u4e2a\u5217\u5411\u91cf\uff0c\u5176\u5143\u7d20\u4e3a \\([p(0,t), p(1,t), \\dots]^T\\)\uff0c\\(W\\) \u662f\u4e00\u4e2a\u8f6c\u79fb\u901f\u7387\u77e9\u9635 (transition rate matrix)\u3002\u8fd9\u79cd\u5f62\u5f0f\u63ed\u793a\u4e86\u4e3b\u65b9\u7a0b\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u7ebf\u6027\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u4e3a\u4f7f\u7528\u7ebf\u6027\u4ee3\u6570\u7684\u5de5\u5177\uff08\u5982\u7279\u5f81\u503c\u5206\u89e3\uff09\u6765\u6c42\u89e3\u7cfb\u7edf\u52a8\u529b\u5b66\u5f00\u8f9f\u4e86\u9053\u8def\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#3","title":"3. \u7528\u751f\u6210\u51fd\u6570\u6c42\u89e3\u4e3b\u65b9\u7a0b","text":"<p>\u4e3b\u65b9\u7a0b\u867d\u7136\u5f62\u5f0f\u4f18\u7f8e\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u65e0\u9650\u7ef4\u7684\u8026\u5408\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\uff0c\u76f4\u63a5\u6c42\u89e3\u901a\u5e38\u975e\u5e38\u56f0\u96be\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6570\u5b66\u7269\u7406\u4e2d\u53d1\u5c55\u51fa\u4e86\u4e00\u79cd\u5f3a\u5927\u7684\u5de5\u5177\u2014\u2014\u751f\u6210\u51fd\u6570 (Generating Function)\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#31","title":"3.1 \u751f\u6210\u51fd\u6570\u7684\u5b9a\u4e49\u4e0e\u8f6c\u6362","text":"<p>\u751f\u6210\u51fd\u6570\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u4e00\u4e2a\u65e0\u7a77\u5e8f\u5217\u7684\u6982\u7387 \\(p(0,t), p(1,t), \\dots\\) \u7f16\u7801\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u51fd\u6570 \\(G(s, t)\\) \u4e2d\u3002\u5176\u5b9a\u4e49\u4e3a\uff1a</p> \\[G(s, t) = \\sum_{n=0}^{\\infty} p(n, t) s^n\\] <p>\u8fd9\u91cc\u7684\u53d8\u91cf \\(s\\) \u662f\u4e00\u4e2a\u8f85\u52a9\u53d8\u91cf\uff0c\u6ca1\u6709\u76f4\u63a5\u7684\u7269\u7406\u610f\u4e49\uff0c\u4f46\u5b83\u50cf\u4e00\u4e2a\"\u8d26\u672c\"\uff0c\\(s^n\\) \u7684\u7cfb\u6570\u5c31\u662f\u6211\u4eec\u5173\u5fc3\u7684\u6982\u7387 \\(p(n, t)\\)\u3002</p> <p>\u751f\u6210\u51fd\u6570\u7684\u9b54\u529b\u5728\u4e8e\u5b83\u80fd\u5c06\u4e3b\u65b9\u7a0b\u4e2d\u7684\u5dee\u5206\u8fd0\u7b97\uff08\u5982 \\(p(n-1, t)\\)\uff09\u8f6c\u5316\u4e3a\u4ee3\u6570\u8fd0\u7b97\u3002\u6211\u4eec\u5c06\u4e3b\u65b9\u7a0b \\(\\frac{d}{dt} p(n, t) = \\nu p(n-1, t) - \\nu p(n, t)\\) \u7684\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5 \\(s^n\\)\uff0c\u7136\u540e\u5bf9\u6240\u6709 \\(n\\) \u6c42\u548c\uff1a</p> \\[\\sum_{n=0}^{\\infty} \\frac{d}{dt} p(n, t) s^n = \\sum_{n=0}^{\\infty} \\nu p(n-1, t) s^n - \\sum_{n=0}^{\\infty} \\nu p(n, t) s^n\\] <p>\u6211\u4eec\u9010\u9879\u6765\u5904\u7406\u8fd9\u4e2a\u65b9\u7a0b\uff1a</p> <ul> <li>\u5de6\u8fb9\uff1a\u7531\u4e8e\u6c42\u548c\u4e0e\u6c42\u5bfc\u53ef\u4ee5\u4ea4\u6362\u6b21\u5e8f\uff0c\u6211\u4eec\u5f97\u5230 </li> </ul> \\[ \\frac{d}{dt} \\sum_{n=0}^{\\infty} p(n, t) s^n = \\frac{dG(s, t)}{dt} \\] <ul> <li>\u53f3\u8fb9\u7b2c\u4e8c\u9879\uff1a</li> </ul> \\[ \\sum_{n=0}^{\\infty} \\nu p(n, t) s^n = \\nu \\sum_{n=0}^{\\infty} p(n, t) s^n = \\nu G(s, t) \\] <ul> <li>\u53f3\u8fb9\u7b2c\u4e00\u9879\uff1a\u8fd9\u662f\u6700\u5173\u952e\u7684\u4e00\u6b65\u3002\u6211\u4eec\u505a\u4e00\u4e2a\u53d8\u91cf\u4ee3\u6362\uff0c\u4ee4 \\(m=n-1\\)\uff0c\u5219 \\(n=m+1\\)\u3002</li> </ul> \\[ \\sum_{n=1}^{\\infty} \\nu p(n-1, t) s^n = \\nu \\sum_{m=0}^{\\infty} p(m, t) s^{m+1} = \\nu s \\sum_{m=0}^{\\infty} p(m, t) s^m = \\nu s G(s, t) \\] <p>\uff08\u6ce8\u610f\u6c42\u548c\u4ece \\(n=1\\) \u5f00\u59cb\uff0c\u56e0\u4e3a \\(p(-1,t)=0\\)\uff09</p> <p>\u5c06\u8fd9\u4e09\u9879\u5408\u5e76\uff0c\u6211\u4eec\u6210\u529f\u5730\u5c06\u65e0\u9650\u7ef4\u7684\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u5355\u53d8\u91cf\u504f\u5fae\u5206\u65b9\u7a0b\uff1a</p> \\[ \\frac{dG(s, t)}{dt} = \\nu s G(s, t) - \\nu G(s, t) = \\nu(s-1) G(s, t) \\]"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#32","title":"3.2 \u6c42\u89e3\u4e0e\u7ed3\u679c\u8fd8\u539f","text":"<p>\u8fd9\u4e2a\u5173\u4e8e \\(G(s,t)\\) \u7684\u65b9\u7a0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u9636\u7ebf\u6027\u5e38\u5fae\u5206\u65b9\u7a0b\uff08\u5bf9\u4e8e\u56fa\u5b9a\u7684 \\(s\\)\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u79ef\u5206\u6c42\u89e3\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u521d\u59cb\u6761\u4ef6\u3002\u901a\u5e38\uff0c\u6211\u4eec\u5047\u8bbe\u7cfb\u7edf\u5728 \\(t=0\\) \u65f6\u4ece \\(n=0\\) \u5f00\u59cb\uff0c\u5373 \\(p(n, 0) = \\delta_{n,0}\\)\uff08\u5f53 \\(n=0\\) \u65f6\u4e3a 1\uff0c\u5426\u5219\u4e3a 0\uff09\u3002\u8fd9\u4e2a\u521d\u59cb\u6761\u4ef6\u5728\u751f\u6210\u51fd\u6570\u7a7a\u95f4\u4e2d\u5bf9\u5e94\u4e3a\uff1a</p> \\[ G(s, 0) = \\sum_{n=0}^{\\infty} p(n, 0) s^n = p(0, 0) s^0 = 1 \\] <p>\u73b0\u5728\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b \\(\\frac{dG}{G} = \\nu(s-1) dt\\)\uff0c\u4ece \\(t=0\\) \u5230 \\(t\\) \u79ef\u5206\uff0c\u5f97\u5230\uff1a</p> \\[\\ln(G(s, t)) - \\ln(G(s, 0)) = \\nu(s-1)t\\] \\[\\ln(G(s, t)) = \\nu(s-1)t\\] \\[G(s, t) = e^{\\nu t(s-1)}\\] <p>\u6211\u4eec\u5df2\u7ecf\u6c42\u5f97\u4e86\u751f\u6210\u51fd\u6570\u7684\u89e3\u6790\u8868\u8fbe\u5f0f\u3002\u6700\u540e\u4e00\u6b65\u662f\u5982\u4f55\u4ece \\(G(s,t)\\) \u4e2d\"\u89e3\u7801\"\u51fa\u6211\u4eec\u60f3\u8981\u7684 \\(p(n,t)\\)\u3002\u6839\u636e\u6cf0\u52d2\u5c55\u5f00\u7684\u5b9a\u4e49\uff0c\\(p(n,t)\\) \u6b63\u662f \\(G(s,t)\\) \u5728 \\(s=0\\) \u70b9\u7684\u6cf0\u52d2\u5c55\u5f00\u5f0f\u4e2d \\(s^n\\) \u9879\u7684\u7cfb\u6570\u9664\u4ee5 \\(n!\\)\u3002\u4e00\u4e2a\u66f4\u76f4\u89c2\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u5bf9 \\(G(s,t)\\) \u8fdb\u884c\u5c55\u5f00\uff1a</p> \\[G(s, t) = e^{\\nu t s} e^{-\\nu t} = e^{-\\nu t} \\sum_{n=0}^{\\infty} \\frac{(\\nu t s)^n}{n!} = \\sum_{n=0}^{\\infty} \\left[ e^{-\\nu t} \\frac{(\\nu t)^n}{n!} \\right] s^n\\] <p>\u901a\u8fc7\u5c06\u8fd9\u4e2a\u5c55\u5f00\u5f0f\u4e0e\u751f\u6210\u51fd\u6570\u7684\u5b9a\u4e49 \\(G(s, t) = \\sum_{n=0}^{\\infty} p(n, t) s^n\\) \u8fdb\u884c\u9010\u9879\u6bd4\u8f83\uff0c\u6211\u4eec\u7acb\u523b\u53ef\u4ee5\u5f97\u5230\u4e3b\u65b9\u7a0b\u7684\u89e3\uff1a</p> \\[p(n, t) = e^{-\\nu t} \\frac{(\\nu t)^n}{n!}\\] <p>\u8fd9\u6b63\u662f\u6211\u4eec\u719f\u6089\u7684\u6cca\u677e\u5206\u5e03\uff0c\u5176\u5747\u503c\u4e3a \\(\\lambda = \\nu t\\)\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#33","title":"3.3 \u751f\u6210\u51fd\u6570\u7684\u5a01\u529b\uff1a\u8ba1\u7b97\u77e9","text":"<p>\u751f\u6210\u51fd\u6570\u4e0d\u4ec5\u80fd\u7528\u6765\u6c42\u89e3\u6982\u7387\u5206\u5e03\uff0c\u5b83\u8fd8\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\"\u77e9\u751f\u6210\u673a\u5668\"\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9 \\(G(s,t)\\) \u6c42\u5bfc\u6765\u65b9\u4fbf\u5730\u8ba1\u7b97\u5206\u5e03\u7684\u5404\u9636\u77e9\u3002</p> <ul> <li>\u5e73\u5747\u503c \\(\\langle n(t) \\rangle\\)\uff1a</li> </ul> \\[ \\langle n(t) \\rangle = \\sum_{n=0}^{\\infty} n \\cdot p(n, t) \\] <p>\u6ce8\u610f\u5230 \\(\\frac{\\partial G}{\\partial s} = \\sum n \\cdot p(n,t) s^{n-1}\\)\u3002\u56e0\u6b64\uff0c</p> \\[ \\langle n(t) \\rangle = \\left. \\frac{\\partial G(s, t)}{\\partial s} \\right|_{s=1} = \\left. \\nu t e^{\\nu t(s-1)} \\right|_{s=1} = \\nu t \\] <ul> <li>\u65b9\u5dee \\(\\text{Var}[n(t)]\\)\uff1a</li> </ul> <p>\u65b9\u5dee\u7684\u8ba1\u7b97\u9700\u8981\u4e8c\u9636\u77e9\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u8ba1\u7b97 \\(\\langle n(n-1) \\rangle = \\left. \\frac{\\partial^2 G(s, t)}{\\partial s^2} \\right|_{s=1} = (\\nu t)^2\\)</p> <p>\u7136\u540e\u5229\u7528\u516c\u5f0f \\(\\text{Var}(n) = \\langle n^2 \\rangle - \\langle n \\rangle^2 = \\langle n(n-1) \\rangle + \\langle n \\rangle - \\langle n \\rangle^2\\)\uff1a</p> \\[ \\text{Var}[n(t)] = (\\nu t)^2 + \\nu t - (\\nu t)^2 = \\nu t \\] <p>\u8fd9\u4e24\u4e2a\u7ed3\u679c \\(\\langle n(t) \\rangle = \\nu t\\) \u548c \\(\\text{Var}[n(t)] = \\nu t\\) \u662f\u6cca\u677e\u5206\u5e03\u7684\u6807\u5fd7\u6027\u7279\u5f81\uff0c\u73b0\u5728\u6211\u4eec\u901a\u8fc7\u751f\u6210\u51fd\u6570\u8fd9\u4e00\u7cfb\u7edf\u6027\u65b9\u6cd5\u518d\u6b21\u5f97\u5230\u4e86\u5b83\u4eec\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#4","title":"4. \u5e94\u7528\uff1a\u79cd\u7fa4\u52a8\u529b\u5b66\u7b80\u4ecb","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u8ba8\u8bba\u7684\u6240\u6709\u5185\u5bb9\u90fd\u56f4\u7ed5\u7740\u901f\u7387\u6052\u5b9a\u7684\u6cca\u677e\u8fc7\u7a0b\u3002\u7136\u800c\uff0c\u4e3b\u65b9\u7a0b\u6846\u67b6\u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5176\u666e\u9002\u6027\u3002\u901a\u8fc7\u6539\u53d8\u8f6c\u79fb\u901f\u7387\u7684\u51fd\u6570\u5f62\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u63cf\u8ff0\u5404\u79cd\u5404\u6837\u66f4\u590d\u6742\u7684\u968f\u673a\u8fc7\u7a0b\u3002\u8bb2\u5ea7\u7684\u6700\u540e\u4e00\u90e8\u5206\uff0c\u6559\u6388\u901a\u8fc7\u4e00\u4e2a\u79cd\u7fa4\u52a8\u529b\u5b66 (Population Dynamics) \u7684\u4f8b\u5b50\u6765\u5c55\u793a\u8fd9\u4e00\u70b9\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#41","title":"4.1 \u7b80\u5355\u6b7b\u4ea1\u8fc7\u7a0b","text":"<p>\u8003\u8651\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u6a21\u578b\uff1a\u7b80\u5355\u6b7b\u4ea1\u8fc7\u7a0b (Simple Death Process)\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u4e00\u4e2a\u7c7b\u4f3c\u5316\u5b66\u53cd\u5e94\u7684\u5f0f\u5b50\u6765\u8868\u793a\uff1a</p> \\[A \\xrightarrow{\\lambda} \\varnothing\\] <p>\u8fd9\u8868\u793a\u7269\u79cd \\(A\\) \u7684\u4e2a\u4f53\u4ee5\u4e00\u5b9a\u7684\u901f\u7387\u6b7b\u4ea1\u6216\u4ece\u7cfb\u7edf\u4e2d\u6d88\u5931\u3002\u8fd9\u91cc\u7684\u5173\u952e\u662f \\(\\lambda\\) \u7684\u7269\u7406\u610f\u4e49\uff1a\u5b83\u662f\u4eba\u5747\u6b7b\u4ea1\u901f\u7387 (per capita death rate)\u3002</p> <p>\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u7cfb\u7edf\u4e2d\u5f53\u524d\u6709 \\(n\\) \u4e2a\u4e2a\u4f53\uff0c\u90a3\u4e48\u6574\u4e2a\u79cd\u7fa4\u7684\u603b\u6b7b\u4ea1\u901f\u7387\u662f \\(n \\cdot \\lambda\\)\u3002\u8fd9\u662f\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u533a\u522b\uff1a\u8f6c\u79fb\u901f\u7387\u4e0d\u518d\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u800c\u662f\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u5f53\u524d\u7684\u72b6\u6001 \\(n\\)\u3002\u8fd9\u79cd\u72b6\u6001\u4f9d\u8d56\u7684\u901f\u7387 (state-dependent rates) \u662f\u968f\u673a\u5efa\u6a21\u4e2d\u975e\u5e38\u666e\u904d\u4e14\u91cd\u8981\u7684\u6982\u5ff5\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#42","title":"4.2 \u6b7b\u4ea1\u8fc7\u7a0b\u7684\u4e3b\u65b9\u7a0b","text":"<p>\u6211\u4eec\u53ef\u4ee5\u518d\u6b21\u8fd0\u7528\"\u589e\u76ca-\u635f\u5931\"\u7684\u903b\u8f91\u6765\u6784\u5efa\u8be5\u8fc7\u7a0b\u7684\u4e3b\u65b9\u7a0b\u3002\u6211\u4eec\u5173\u5fc3\u7684\u662f\u5728\u65f6\u95f4 \\(t\\) \u79cd\u7fa4\u5927\u5c0f\u4e3a \\(n\\) \u7684\u6982\u7387 \\(p(n,t)\\)\u3002</p> <ul> <li> <p>\u589e\u76ca\u9879 (GAIN)\uff1a\u8981\u4f7f\u7cfb\u7edf\u5728 \\(t\\) \u65f6\u523b\u8fbe\u5230\u72b6\u6001 \\(n\\)\uff0c\u5b83\u5fc5\u987b\u662f\u4ece\u72b6\u6001 \\(n+1\\) \u7ecf\u8fc7\u4e00\u6b21\u6b7b\u4ea1\u4e8b\u4ef6\u800c\u6765\u3002\u5f53\u79cd\u7fa4\u5927\u5c0f\u4e3a \\(n+1\\) \u65f6\uff0c\u603b\u6b7b\u4ea1\u901f\u7387\u662f \\((n+1)\\lambda\\)\u3002\u56e0\u6b64\uff0c\u4ece\u72b6\u6001 \\(n+1\\) \u6d41\u5165\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\u901a\u91cf\u662f \\(\\lambda (n+1) p(n+1, t)\\)\u3002</p> </li> <li> <p>\u635f\u5931\u9879 (LOSS)\uff1a\u5982\u679c\u7cfb\u7edf\u5f53\u524d\u5904\u4e8e\u72b6\u6001 \\(n\\)\uff0c\u5b83\u4f1a\u56e0\u4e3a\u53d1\u751f\u6b7b\u4ea1\u4e8b\u4ef6\u800c\u79bb\u5f00\u6b64\u72b6\u6001\u3002\u6b64\u65f6\u7684\u603b\u6b7b\u4ea1\u901f\u7387\u662f \\(n\\lambda\\)\u3002\u56e0\u6b64\uff0c\u4ece\u72b6\u6001 \\(n\\) \u6d41\u51fa\u7684\u6982\u7387\u901a\u91cf\u662f \\(\\lambda n p(n, t)\\)\u3002</p> </li> </ul> <p>\u5c06\u589e\u76ca\u548c\u635f\u5931\u9879\u7ec4\u5408\u8d77\u6765\uff0c\u6211\u4eec\u5f97\u5230\u7b80\u5355\u6b7b\u4ea1\u8fc7\u7a0b\u7684\u4e3b\u65b9\u7a0b\uff1a</p> \\[\\frac{d}{dt} p(n, t) = \\lambda (n+1) p(n+1, t) - \\lambda n p(n, t)\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u7ed3\u6784\u4e0e\u6cca\u677e\u8fc7\u7a0b\u7684\u4e3b\u65b9\u7a0b\u7c7b\u4f3c\uff0c\u4f46\u8f6c\u79fb\u901f\u7387\u4ece\u5e38\u6570 \\(\\nu\\) \u53d8\u6210\u4e86\u4f9d\u8d56\u4e8e\u72b6\u6001\u7684 \\(n\\lambda\\)\u3002\u8fd9\u4e00\u4e2a\u7b80\u5355\u7684\u6539\u53d8\uff0c\u4f7f\u5f97\u6a21\u578b\u7684\u52a8\u529b\u5b66\u884c\u4e3a\u53d1\u751f\u4e86\u8d28\u7684\u53d8\u5316\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#43-vs","title":"4.3 \u968f\u673a\u6a21\u578b vs. \u786e\u5b9a\u6027\u6a21\u578b","text":"<p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e0e\u8fd9\u4e2a\u968f\u673a\u6a21\u578b\u76f8\u5bf9\u5e94\u7684\u786e\u5b9a\u6027\u6a21\u578b\u662f\u5fae\u5206\u65b9\u7a0b \\(\\frac{dN}{dt} = -\\lambda N\\)\uff0c\u5176\u89e3\u4e3a\u6307\u6570\u8870\u51cf \\(N(t) = N_0 e^{-\\lambda t}\\)\u3002</p> <p>\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u7684\u968f\u673a\u6a21\u578b\u63d0\u4f9b\u4e86\u6bd4\u786e\u5b9a\u6027\u6a21\u578b\u4e30\u5bcc\u5f97\u591a\u7684\u4fe1\u606f\uff1a</p> <ul> <li> <p>\u5b83\u4e0d\u4ec5\u80fd\u7ed9\u51fa\u5e73\u5747\u79cd\u7fa4\u5927\u5c0f\u7684\u6f14\u5316\uff08\u53ef\u4ee5\u8bc1\u660e \\(\\langle n(t) \\rangle = n_0 e^{-\\lambda t}\\)\uff0c\u4e0e\u786e\u5b9a\u6027\u6a21\u578b\u4e00\u81f4\uff09\uff0c\u8fd8\u80fd\u63cf\u8ff0\u79cd\u7fa4\u5927\u5c0f\u5728\u5e73\u5747\u503c\u9644\u8fd1\u7684\u6da8\u843d (fluctuations)\u3002</p> </li> <li> <p>\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u80fd\u8ba1\u7b97\u706d\u7edd\u6982\u7387 (extinction probability)\uff0c\u5373 \\(p(0,t)\\)\u3002\u8fd9\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u968f\u673a\u73b0\u8c61\uff0c\u5728\u786e\u5b9a\u6027\u6a21\u578b\u4e2d\uff0c\u79cd\u7fa4\u5927\u5c0f\u53ea\u4f1a\u6e10\u8fd1\u4e8e\u96f6\u800c\u6c38\u8fdc\u4e0d\u4f1a\u771f\u6b63\u8fbe\u5230\u96f6\u3002\u5bf9\u4e8e\u5c0f\u79cd\u7fa4\uff0c\u8fd9\u79cd\u7531\u968f\u673a\u6027\u5bfc\u81f4\u7684\u706d\u7edd\u662f\u81f3\u5173\u91cd\u8981\u7684\u52a8\u529b\u5b66\u7279\u5f81\u3002</p> </li> </ul>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#44-python-gillespie","title":"4.4 Python \u4ee3\u7801\u5b9e\u73b0\uff1aGillespie \u6a21\u62df\u6b7b\u4ea1\u8fc7\u7a0b","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u4e4b\u524d\u7684 Gillespie \u7b97\u6cd5\u6765\u6a21\u62df\u8fd9\u4e2a\u72b6\u6001\u4f9d\u8d56\u7684\u6b7b\u4ea1\u8fc7\u7a0b\u3002\u552f\u4e00\u7684\u5173\u952e\u6539\u52a8\u662f\u5728\u8ba1\u7b97\u7b49\u5f85\u65f6\u95f4\u65f6\uff0c\u4f7f\u7528\u7684\u901f\u7387\u4e0d\u518d\u662f\u5e38\u6570\uff0c\u800c\u662f\u5f53\u524d\u79cd\u7fa4\u5927\u5c0f \\(n\\) \u7684\u51fd\u6570\u3002 <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef gillespie_death_process(lam, n0, t_max):\n    \"\"\"\n    Simulate a simple death process using the Gillespie algorithm.\n\n    Parameters:\n    lam (float): Per capita death rate.\n    n0 (int): Initial population size.\n    t_max (float): Total simulation time.\n\n    Returns:\n    tuple: Two lists containing event times and corresponding population sizes.\n    \"\"\"\n    # Initialization\n    t = 0.0\n    n = n0\n\n    times = [t]\n    counts = [n]\n\n    while t &lt; t_max and n &gt; 0:\n        # Key difference: Rate depends on state\n        rate = lam * n\n\n        # Draw waiting time\n        xi = np.random.random()\n        dt = -1.0 / rate * np.log(xi)\n\n        # Update time\n        t += dt\n\n        # Check if exceeding maximum time\n        if t &gt;= t_max:\n            # If exceeding maximum time, record final state and exit\n            times.append(t_max)\n            counts.append(n)\n            break\n\n        # Record state before event occurs\n        times.append(t)\n        counts.append(n)\n\n        # Update population size (one individual dies)\n        n -= 1\n\n        # Record state after event occurs\n        times.append(t)\n        counts.append(n)\n\n    # If extinction occurs before t_max, extend trajectory to t_max\n    if t &lt; t_max and n == 0:\n        times.append(t_max)\n        counts.append(0)\n\n    return times, counts\n\n# --- Simulation and plotting ---\n# Set parameters\nlam = 0.1     # Per capita death rate\nn0 = 50       # Initial population size\nt_max = 50    # Total simulation time\nnum_traj = 5  # Simulate 5 trajectories\n\n# Create figure\nplt.figure(figsize=(12, 7))\n\n# Plot multiple trajectories to show randomness\nfor i in range(num_traj):\n    times, counts = gillespie_death_process(lam, n0, t_max)\n    plt.step(times, counts, where='post', label=f'Trajectory {i+1}')\n\n# Plot deterministic model solution for comparison\nt_deterministic = np.linspace(0, t_max, 200)\nn_deterministic = n0 * np.exp(-lam * t_deterministic)\nplt.plot(t_deterministic, n_deterministic, 'k--', linewidth=2, label='Deterministic Model ($N_0 e^{-\\lambda t}$)')\n\nplt.xlabel('Time (t)')\nplt.ylabel('Population Size (n)')\nplt.title('Simple Death Process: Stochastic vs. Deterministic')\nplt.grid(True)\nplt.legend()\nplt.show()\n</code></pre> </p> <p>\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\uff0c\u4f1a\u770b\u5230\u591a\u6761\u5f69\u8272\u7684\u9636\u68af\u72b6\u66f2\u7ebf\uff0c\u6bcf\u4e00\u6761\u90fd\u4ee3\u8868\u4e00\u6b21\u6a21\u62df\u7684\u968f\u673a\u5386\u53f2\u3002\u4f60\u4f1a\u53d1\u73b0\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u603b\u4f53\u8d8b\u52bf\u662f\u4e0b\u964d\u7684\uff0c\u4f46\u5177\u4f53\u7684\u4e0b\u964d\u65f6\u95f4\u548c\u6700\u7ec8\u7684\u706d\u7edd\u65f6\u95f4\uff08\u66f2\u7ebf\u63a5\u89e6\u6a2a\u8f74\u7684\u65f6\u523b\uff09\u90fd\u662f\u968f\u673a\u7684\u3002\u9ed1\u8272\u7684\u865a\u7ebf\u4ee3\u8868\u786e\u5b9a\u6027\u6a21\u578b\u7684\u89e3\uff0c\u5b83\u63cf\u7ed8\u4e86\u6240\u6709\u968f\u673a\u8f68\u8ff9\u7684\u5e73\u5747\u884c\u4e3a\u3002\u8fd9\u4e2a\u5bf9\u6bd4\u9c9c\u660e\u5730\u5c55\u793a\u4e86\u968f\u673a\u6a21\u578b\u6240\u80fd\u6355\u6349\u5230\u7684\u4e30\u5bcc\u52a8\u6001\u3002</p>"},{"location":"zh/notes/4.%20Gillespie%20%E7%AE%97%E6%B3%95%E3%80%81%E4%B8%BB%E6%96%B9%E7%A8%8B%E3%80%81%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E4%B8%8E%E7%A7%8D%E7%BE%A4%E5%8A%A8%E5%8A%9B%E5%AD%A6/#_4","title":"\u603b\u7ed3","text":"<p>\u6b64\u8282\u8bfe\u5e26\u9886\u6211\u4eec\u4ece\u4e09\u4e2a\u4e92\u8865\u7684\u89c6\u89d2\u6df1\u5165\u7406\u89e3\u4e86\u968f\u673a\u8fc7\u7a0b\uff1aGillespie \u7b97\u6cd5\u3001\u4e3b\u65b9\u7a0b\u548c\u751f\u6210\u51fd\u6570\u3002\u8fd9\u4e09\u8005\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u5f3a\u5927\u800c\u5b8c\u5907\u7684\u7406\u8bba\u4e0e\u8ba1\u7b97\u6846\u67b6\u3002</p> <ol> <li> <p>Gillespie \u7b97\u6cd5\uff1a\u63d0\u4f9b\u4e86\u4e00\u79cd\u6570\u503c\u6a21\u62df\u7684\u89c6\u89d2\u3002\u5b83\u662f\u4e00\u79cd\u4e8b\u4ef6\u9a71\u52a8\u7684\u7cbe\u786e\u7b97\u6cd5\uff0c\u80fd\u591f\u751f\u6210\u968f\u673a\u8fc7\u7a0b\u7684\u5355\u6761\u5177\u4f53\u8f68\u8ff9\uff0c\u8ba9\u6211\u4eec\u76f4\u89c2\u5730\u770b\u5230\u968f\u673a\u6027\u662f\u5982\u4f55\u5c55\u73b0\u7684\u3002</p> </li> <li> <p>\u4e3b\u65b9\u7a0b\uff1a\u63d0\u4f9b\u4e86\u4e00\u79cd\u6982\u7387\u6f14\u5316\u7684\u89c6\u89d2\u3002\u5b83\u662f\u4e00\u4e2a\u786e\u5b9a\u6027\u7684\u5fae\u5206\u65b9\u7a0b\uff0c\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5904\u4e8e\u5404\u4e2a\u53ef\u80fd\u72b6\u6001\u7684\u6982\u7387\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\uff0c\u6355\u6349\u4e86\u6574\u4e2a\u968f\u673a\u8fc7\u7a0b\u7cfb\u7efc\u7684\u7edf\u8ba1\u89c4\u5f8b\u3002</p> </li> <li> <p>\u751f\u6210\u51fd\u6570\uff1a\u63d0\u4f9b\u4e86\u4e00\u79cd\u89e3\u6790\u6c42\u89e3\u7684\u89c6\u89d2\u3002\u5b83\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u6570\u5b66\u5de5\u5177\uff0c\u80fd\u5c06\u590d\u6742\u7684\u4e3b\u65b9\u7a0b\uff08\u65e0\u9650\u7ef4\u5fae\u5206\u65b9\u7a0b\u7ec4\uff09\u8f6c\u5316\u4e3a\u7b80\u5355\u7684\u5355\u4e00\u65b9\u7a0b\uff0c\u4ece\u800c\u6c42\u5f97\u6982\u7387\u5206\u5e03\u7684\u89e3\u6790\u89e3\uff0c\u5e76\u65b9\u4fbf\u5730\u8ba1\u7b97\u5176\u5404\u9636\u77e9\u3002</p> </li> </ol> <p>\u8fd9\u4e09\u79cd\u65b9\u6cd5\u5404\u6709\u4fa7\u91cd\uff0c\u5171\u540c\u4e3a\u6211\u4eec\u5206\u6790\u4ece\u7269\u7406\u5b66\u4e2d\u7684\u7c92\u5b50\u8fd0\u52a8\u5230\u751f\u7269\u5b66\u4e2d\u7684\u79cd\u7fa4\u52a8\u6001\u7b49\u5404\u79cd\u968f\u673a\u73b0\u8c61\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u57fa\u7840\u3002</p> <p>\u901a\u8fc7\u5f15\u5165\u72b6\u6001\u4f9d\u8d56\u7684\u901f\u7387\uff0c\u6211\u4eec\u5df2\u7ecf\u521d\u6b65\u7aa5\u89c1\u4e86\u5982\u4f55\u5c06\u8fd9\u4e00\u6846\u67b6\u5e94\u7528\u4e8e\u66f4\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u5982\u5316\u5b66\u53cd\u5e94\u7f51\u7edc\u548c\u66f4\u771f\u5b9e\u7684\u751f\u6001\u6a21\u578b\u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/","title":"\u5f15\u8a00\uff1a\u7edf\u4e00\u4e4b\u8def\u7684\u7ec8\u70b9\u2014\u2014\u6784\u5efa\u76f8\u4e92\u4f5c\u7528\u7cfb\u7edf\u7684\u968f\u673a\u573a\u8bba","text":"<p>\u4f5c\u4e3a\u7cfb\u5217\u8bfe\u7a0b\u7684\u7ec8\u7ae0\uff0c\u8fd9\u8282\u8bfe\u5c06\u6c47\u96c6\u5148\u524d\u6240\u6709\u63a2\u7d22\u7684\u6210\u679c\uff0c\u6807\u5fd7\u7740\u4ece\u79bb\u6563\u968f\u673a\u8fc7\u7a0b\u62b5\u8fbe\u5f3a\u5927\u8fde\u7eed\u573a\u8bba\u7684\u7edf\u4e00\u7ec8\u70b9\u3002\u8fd9\u8282\u8bfe\u5c06\u4e4b\u524d\u53d1\u5c55\u7684\u6982\u5ff5\u4e0e\u5de5\u5177\u878d\u4f1a\u8d2f\u901a\uff0c\u65e8\u5728\u6784\u5efa\u4e00\u4e2a\u80fd\u591f\u63cf\u8ff0\u590d\u6742\u7cfb\u7edf\u4e2d\u96c6\u4f53\u884c\u4e3a\u7684\u7edf\u4e00\u7406\u8bba\u6846\u67b6\u3002</p> <p>\u6574\u4e2a\u7406\u8bba\u7684\u57fa\u77f3\u662f\u63cf\u8ff0\u7c92\u5b50\u6570\u53d8\u5316\u7684\u79bb\u6563\u4e3b\u65b9\u7a0b\uff08\u7b2c34\u300135\u8bb2\uff09\u3002\u4e3a\u4e86\u5904\u7406\u4e3b\u65b9\u7a0b\uff0c\u4e24\u6761\u901a\u5f80\u573a\u8bba\u7684\u9053\u8def\u88ab\u5f00\u8f9f\u51fa\u6765\uff1a\u4e00\u662f\u57fa\u4e8e\u7b97\u7b26\u4ee3\u6570\u7684\u76f8\u5e72\u6001\u8def\u5f84\u79ef\u5206\uff08\u7b2c36\u8bb2\uff09\uff0c\u4e8c\u662f\u901a\u8fc7\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u5c55\u5f00\uff08\u7b2c37\u8bb2\uff09\u642d\u5efa\u7684\u3001\u4ece\u79bb\u6563\u8df3\u8dc3\u901a\u5f80\u8fde\u7eed\u6717\u4e4b\u4e07\u65b9\u7a0b\u7684\u6865\u6881\u3002\u4e0a\u4e00\u8bb2\uff08\u7b2c39\u8bb2\uff09\u6b63\u662f\u6cbf\u7740\u540e\u4e00\u6761\u8def\u5f84\uff0c\u4e3a\u7b80\u5355\u7684\u7a7a\u95f4\u6269\u6563\u8fc7\u7a0b\u5efa\u7acb\u4e86\u5305\u542b\u5185\u7980\u6da8\u843d\u7684\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\uff08KMPI\uff09\uff0c\u4e3a\u8fd9\u8282\u8bfe\u7684\u5de5\u4f5c\u5960\u5b9a\u4e86\u575a\u5b9e\u7684\u57fa\u7840\u3002</p> <p>\u8fd9\u8282\u6536\u5b98\u4e4b\u8bfe\u65e8\u5728\u5b8c\u6210\u4e24\u4e2a\u6838\u5fc3\u76ee\u6807\uff1a</p> <ol> <li> <p>\u5c06\u5316\u5b66\u53cd\u5e94\u52a8\u529b\u5b66\u6574\u5408\u8fdb\u4e0a\u4e00\u8bb2\u5efa\u7acb\u7684\u6269\u6563\u573a\u8bba\u6846\u67b6\u4e2d\uff0c\u4ece\u800c\u7edf\u4e00\u63cf\u8ff0\u7c92\u5b50\u5728\u7a7a\u95f4\u4e2d\u7684\u8fd0\u52a8\u548c\u6570\u91cf\u4e0a\u7684\u589e\u51cf\u3002</p> </li> <li> <p>\u5b9e\u73b0\u6574\u4e2a\u8bfe\u7a0b\u6700\u91cd\u8981\u7684\u76ee\u6807\u4e4b\u4e00\uff1a\u4ece\u7b2c\u4e00\u6027\u539f\u7406\u51fa\u53d1\uff0c\u63a8\u5bfc\u51fa\u4e00\u4e2a\u63cf\u8ff0\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u7cfb\u7edf\u7684\u968f\u673a\u573a\u8bba\u3002\u5c4a\u65f6\u5c06\u6df1\u523b\u63ed\u793a\uff0c\u5fae\u89c2\u7c92\u5b50\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u529b\u662f\u5982\u4f55\u5728\u5b8f\u89c2\u5c3a\u5ea6\u4e0a\u50ac\u751f\u51fa\u6a21\u5f0f\u5f62\u6210 (pattern formation) \u7684\u6d8c\u73b0\u73b0\u8c61\u3002</p> </li> </ol> <p>\u66f4\u8fdb\u4e00\u6b65\uff0c\u8fd9\u8282\u8bfe\u5c06\u5c55\u793a\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\u4e0d\u4ec5\u662f\u4e00\u4e2a\u8ba1\u7b97\u5de5\u5177\uff0c\u66f4\u662f\u4e00\u79cd\u7cfb\u7edf\u6027\u7684\u7406\u8bba\u6784\u5efa\u673a\u5668\u3002\u5b83\u80fd\u591f\u63a5\u6536\u5fae\u89c2\u968f\u673a\u89c4\u5219\uff08\u5982\u7c92\u5b50\u8df3\u8dc3\u3001\u5316\u5b66\u53cd\u5e94\u3001\u76f8\u4e92\u4f5c\u7528\uff09\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u7cfb\u7edf\u6027\u5730\u8f93\u51fa\u4e00\u4e2a\u63cf\u8ff0\u7cfb\u7edf\u5b8f\u89c2\u52a8\u529b\u5b66\u7684\u6709\u6548\u4f5c\u7528\u91cf\uff08action\uff09\\(S[n, i\\tilde{n}]\\)\u3002\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u610f\u5473\u7740\u638c\u63e1\u4e86\u4e00\u79cd\u4ece\u5fae\u89c2\u6784\u5efa\u5b8f\u89c2\u7684\u7814\u7a76\u65b9\u6cd5\u8bba\u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#1","title":"1. \u56de\u987e\uff1a\u65e0\u76f8\u4e92\u4f5c\u7528\u5e03\u6717\u7c92\u5b50\u7684\u4f5c\u7528\u91cf","text":"<p>\u4e3a\u4e86\u6784\u5efa\u4e00\u4e2a\u80fd\u591f\u63cf\u8ff0\u5316\u5b66\u53cd\u5e94\u4e0e\u7c92\u5b50\u95f4\u76f8\u4e92\u4f5c\u7528\u7684\u590d\u6742\u7406\u8bba\uff0c\u5fc5\u987b\u4ece\u4e00\u4e2a\u575a\u5b9e\u4e14\u6e05\u6670\u7684\u8d77\u70b9\u5f00\u59cb\u3002\u8fd9\u4e2a\u8d77\u70b9\uff0c\u6b63\u662f\u4e0a\u4e00\u8bb2\uff08\u7b2c39\u8bb2\uff09\u901a\u8fc7\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\uff08KMPI\uff09\u65b9\u6cd5\uff0c\u4e3a\u5927\u91cf\u65e0\u76f8\u4e92\u4f5c\u7528\u7684\u5e03\u6717\u7c92\u5b50\u96c6\u4f53\u884c\u4e3a\u63a8\u5bfc\u51fa\u7684\u573a\u8bba\u4f5c\u7528\u91cf\u3002\u8fd9\u4e2a\u4f5c\u7528\u91cf\u662fKMPI\u65b9\u6cd5\u5e94\u7528\u4e8e\u7a7a\u95f4\u6269\u6563\u8fc7\u7a0b\u7684\u76f4\u63a5\u6210\u679c\uff0c\u5b83\u5c06\u6784\u6210\u8fd9\u8282\u8bfe\u6240\u6709\u7406\u8bba\u6269\u5c55\u7684\u57fa\u7840\u3002</p> <p>\u5176\u5f62\u5f0f\u5982\u4e0b\uff1a</p> \\[ S[n, i\\tilde{n}] = \\int_{t_0}^{t_f} dt \\int d^d x \\left\\{ i\\tilde{n} \\partial_t n - Dn \\left[ \\nabla^2 (i\\tilde{n}) + (\\nabla i\\tilde{n})^2 \\right] \\right\\} \\] <p>\u8fd9\u4e2a\u4f5c\u7528\u91cf\u7f16\u7801\u4e86\u7eaf\u6269\u6563\u8fc7\u7a0b\u7684\u5168\u90e8\u4fe1\u606f\uff0c\u5305\u62ec\u5176\u786e\u5b9a\u6027\u884c\u4e3a\u548c\u968f\u673a\u6da8\u843d\u3002\u4e3a\u4e86\u6df1\u523b\u7406\u89e3\u5b83\uff0c\u9700\u8981\u5bf9\u6bcf\u4e00\u9879\u8fdb\u884c\u7ec6\u81f4\u7684\u7269\u7406\u5256\u6790\uff1a</p> <p>\\(i\\tilde{n} \\partial_t n\\)\uff1a\u8fd9\u662f\u6807\u51c6\u7684\u52a8\u529b\u5b66\u9879\uff0c\u5728\u573a\u8bba\u4e2d\u626e\u6f14\u7740\u7c7b\u4f3c\u4e8e\u7ecf\u5178\u529b\u5b66\u91cc \\(p\\dot{q}\\) \u7684\u89d2\u8272\u3002\u5b83\u5728\u6570\u5b66\u4e0a\u5c06\u7c92\u5b50\u5bc6\u5ea6\u573a \\(n(\\vec{r},t)\\) \u548c\u4e0e\u4e4b\u5171\u8f6d\u7684\u54cd\u5e94\u573a \\(i\\tilde{n}(\\vec{r},t)\\) \u786e\u7acb\u4e3a\u52a8\u529b\u5b66\u53d8\u91cf\uff0c\u4ece\u800c\u5b9a\u4e49\u4e86\u7406\u8bba\u7684\u65f6\u95f4\u6f14\u5316\u7ed3\u6784\u3002</p> <p>\\(-Dn\\nabla^2(i\\tilde{n})\\)\uff1a\u8fd9\u4e00\u9879\u4ee3\u8868\u4e86\u786e\u5b9a\u6027\u7684\u6269\u6563\u8fc7\u7a0b\u3002\u901a\u8fc7\u5206\u90e8\u79ef\u5206\uff0c\u5b83\u53ef\u4ee5\u88ab\u6539\u5199\u4e3a\u66f4\u76f4\u89c2\u7684\u5f62\u5f0f \\(i\\tilde{n} (D \\nabla^2 n)\\)\u3002\u5728\u8def\u5f84\u79ef\u5206\u7684\u6846\u67b6\u4e0b\uff0c\u5bf9\u54cd\u5e94\u573a \\(i\\tilde{n}\\) \u6c42\u53d8\u5206\u4f1a\u5f97\u5230\u7cfb\u7edf\u7684\u201c\u7ecf\u5178\u201d\u8fd0\u52a8\u65b9\u7a0b\uff08\u978d\u70b9\u65b9\u7a0b\uff09\u3002\u8fd9\u4e00\u9879\u6070\u597d\u4f1a\u751f\u6210\u83f2\u514b\u7b2c\u4e8c\u5b9a\u5f8b\uff08Fick's second law\uff09\u4e2d\u7684\u6269\u6563\u9879 \\(D\\nabla^2 n\\)\uff0c\u63cf\u8ff0\u4e86\u7c92\u5b50\u5bc6\u5ea6\u5982\u4f55\u56e0\u6d53\u5ea6\u68af\u5ea6\u800c\u8d8b\u4e8e\u5747\u5300\u7684\u5b8f\u89c2\u3001\u5e73\u5747\u884c\u4e3a\u3002</p> <p>\\(-Dn(\\nabla i\\tilde{n})^2\\) \uff1a\u8fd9\u662f\u6574\u4e2a\u4f5c\u7528\u91cf\u4e2d\u6700\u4e3a\u5173\u952e\u7684\u9879\uff0c\u5b83\u662f\u7cfb\u7edf\u968f\u673a\u6027\u7684\u552f\u4e00\u6765\u6e90\uff0c\u4e5f\u662fKMPI\u65b9\u6cd5\u4e0eDoi-Peliti\u65b9\u6cd5\u63a8\u5bfc\u7ed3\u679c\u7684\u6838\u5fc3\u533a\u522b\u6240\u5728\u3002\u8fd9\u4e00\u9879\u5728\u54cd\u5e94\u573a \\(i\\tilde{n}\\) \u4e2d\u662f\u4e8c\u6b21\u7684\uff0c\u8fd9\u6b63\u662f\u9ad8\u65af\u566a\u58f0\u5728\u8def\u5f84\u79ef\u5206\u8868\u793a\u4e2d\u7684\u5178\u578b\u7279\u5f81\u3002</p> <p>\u7269\u7406\u610f\u4e49 : \u5b83\u7684\u7269\u7406\u610f\u4e49\u662f\u6269\u6563\u566a\u58f0\u6216\u6563\u7c92\u566a\u58f0 (shot noise) \u3002</p> <p>\u4e58\u6027\u566a\u58f0 : \u524d\u9762\u7684\u7cfb\u6570 \\(Dn\\) \u8868\u660e\u566a\u58f0\u5f3a\u5ea6\u4e0e\u5c40\u90e8\u7c92\u5b50\u5bc6\u5ea6 \\(n\\) \u6210\u6b63\u6bd4\u3002\u8fd9\u975e\u5e38\u7b26\u5408\u7269\u7406\u76f4\u89c9\uff1a\u7c92\u5b50\u8d8a\u591a\u7684\u5730\u65b9\uff0c\u7531\u7c92\u5b50\u79bb\u6563\u8df3\u8dc3\u5f15\u8d77\u7684\u968f\u673a\u6da8\u843d\u81ea\u7136\u4e5f\u8d8a\u5927\u3002\u8fd9\u79cd\u4e0e\u72b6\u6001\u53d8\u91cf\uff08\u5bc6\u5ea6 \\(n\\)\uff09\u76f8\u5173\u7684\u566a\u58f0\uff0c\u88ab\u79f0\u4e3a\u4e58\u6027\u566a\u58f0 (multiplicative noise) \uff0c\u5728\u7b2c22\u8bb2\u4ecb\u7ecd\u8fc7\u3002</p> <p>\u8fd9\u4e2a\u4f5c\u7528\u91cf\u5728\u6570\u5b66\u4e0a\u5b8c\u5168\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\uff08SPDE\uff09\uff0c\u5373\u4e00\u4e2a\u573a\u8bba\u7248\u672c\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\uff1a</p> \\[ \\partial_t n(\\vec{r},t) = D \\nabla^2 n(\\vec{r}, t) + \\nabla \\cdot \\left[ \\sqrt{2D n(\\vec{r}, t)} \\, \\vec{\\eta}(\\vec{r}, t) \\right] \\] <p>\u5176\u4e2d \\(\\vec{\\eta}(\\vec{r},t)\\) \u662f\u4e00\u4e2a\u65f6\u7a7a\u9ad8\u65af\u767d\u566a\u58f0\u573a\u3002\u8def\u5f84\u79ef\u5206\u7684\u5a01\u529b\u5728\u4e8e\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u566a\u58f0\u5386\u53f2 \\(\\vec{\\eta}\\) \u8fdb\u884c\u52a0\u6743\u5e73\u5747\u7684\u7cfb\u7edf\u6027\u65b9\u6cd5\u3002\u4e0a\u8ff0\u4f5c\u7528\u91cf\u4e2d\u7684 \\(-Dn(\\nabla i\\tilde{n})^2\\) \u9879\uff0c\u6b63\u662f\u5bf9\u8fd9\u4e2a\u5177\u6709 \\(\\sqrt{n}\\) \u4f9d\u8d56\u6027\u7684\u4e58\u6027\u566a\u58f0\u9879\u7684\u7cbe\u786e\u7f16\u7801\u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#2","title":"2. \u6269\u5c55\u573a\u8bba\uff1a\u5f15\u5165\u5316\u5b66\u53cd\u5e94","text":"<p>\u6709\u4e86\u63cf\u8ff0\u7c92\u5b50\u7eaf\u7cb9\u7a7a\u95f4\u8fd0\u52a8\u7684\u573a\u8bba\u6846\u67b6\u540e\uff0c\u4e00\u4e2a\u81ea\u7136\u4e14\u5173\u952e\u7684\u6b65\u9aa4\u4fbf\u662f\u5f15\u5165\u7c92\u5b50\u6570\u91cf\u672c\u8eab\u7684\u53d8\u5316\uff0c\u5373\u5316\u5b66\u53cd\u5e94\u3002\u8fd9\u8282\u8bfe\u5c06\u5c55\u793a\uff0c\u5728\u4e0a\u4e00\u8282\u5efa\u7acb\u7684\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\uff08KMPI\uff09\u6846\u67b6\u5177\u6709\u5f3a\u5927\u7684\u901a\u7528\u6027\uff0c\u80fd\u591f\u4ee5\u4e00\u79cd\u7cfb\u7edf\u6027\u7684\u65b9\u5f0f\uff0c\u5c06\u5c40\u57df\u7684\u5316\u5b66\u53cd\u5e94\u4e0e\u7a7a\u95f4\u6269\u6563\u65e0\u7f1d\u5730\u7edf\u4e00\u8d77\u6765\u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#21","title":"2.1 \u4ece\u5fae\u89c2\u7ec4\u5408\u5230\u5b8f\u89c2\u53cd\u5e94\u901f\u7387","text":"<p>\u8003\u8651\u4e00\u4e2a\u53d1\u751f\u5728\u7a7a\u95f4\u4e2d\u67d0\u5904\u7684\u666e\u901a\u5316\u5b66\u53cd\u5e94\uff1a\\(k\\) \u4e2a A \u7c92\u5b50\u4ee5\u5fae\u89c2\u901f\u7387 \\(\\lambda'\\) \u8f6c\u5316\u4e3a \\(\\ell\\) \u4e2a A \u7c92\u5b50\u3002</p> \\[ kA \\xrightarrow{\\lambda'} \\ell A \\] <p>\u4e3a\u4e86\u5c06\u5176\u7eb3\u5165\u8fde\u7eed\u7684\u573a\u8bba\u6846\u67b6\uff0c\u9700\u8981\u8fdb\u884c\u4e00\u4e2a\u5173\u952e\u7684\u7269\u7406\u6b65\u9aa4\uff1a\u7c97\u7c92\u5316 (coarse-graining) \u3002\u9996\u5148\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5c06\u7a7a\u95f4\u5212\u5206\u4e3a\u8bb8\u591a\u8fb9\u957f\u4e3a \\(a\\) \u7684\u5fae\u5c0f\u6676\u683c\u5355\u5143\uff0c\u4f53\u79ef\u4e3a \\(a^d\\)\u3002\u7136\u540e\u5728\u6bd4 \\(a\\) \u5927\u5f97\u591a\u4f46\u6bd4\u6574\u4e2a\u7cfb\u7edf \\(L\\) \u5c0f\u5f97\u591a\u7684\u4ecb\u89c2\u5c3a\u5ea6 \\(l\\) \u4e0a\u8fdb\u884c\u5e73\u5747\u3002</p> <p></p> <p>\u5047\u8bbe\u5728\u7b2c \\(i\\) \u4e2a\u6676\u683c\u4e2d\uff0c\u6709 \\(n_i\\) \u4e2a\u7c92\u5b50\u3002\u90a3\u4e48\uff0c\u53d1\u751f\u4e0a\u8ff0\u53cd\u5e94\u7684\u5fae\u89c2\u901f\u7387\u6b63\u6bd4\u4e8e\u4ece \\(n_i\\) \u4e2a\u7c92\u5b50\u4e2d\u9009\u51fa \\(k\\) \u4e2a\u4e0d\u540c\u7c92\u5b50\u7684\u7ec4\u5408\u6570\uff0c\u5373\u6240\u8c13\u7684\u4e0b\u964d\u9636\u4e58\u5e42\uff1a</p> <p>\u5fae\u89c2\u901f\u7387 \\(\\propto \\lambda' n_i(n_i - 1) \\cdots (n_i - k + 1)\\)</p> <p>\u73b0\u5728\uff0c\u5b9a\u4e49\u8fde\u7eed\u7684\u7c92\u5b50\u5bc6\u5ea6\u573a \\(n(\\vec{r},t) = n_i / a^d\\)\u3002\u5728\u53d6\u8fde\u7eed\u6781\u9650\uff08\\(a \\to 0\\)\uff09\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u6838\u5fc3\u7684\u7269\u7406\u5047\u8bbe\u662f\uff0c\u6bcf\u4e2a\u7c97\u7c92\u5316\u7684\u6676\u683c\u5355\u5143\u5185\u4ecd\u7136\u5305\u542b\u5927\u91cf\u7c92\u5b50\uff0c\u5373 \\(n_i \\gg k\\)\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u79bb\u6563\u7684\u7ec4\u5408\u6570\u56e0\u5b50\u5c31\u53ef\u4ee5\u5f88\u597d\u5730\u8fd1\u4f3c\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u5e42\u5f8b\u5f62\u5f0f\uff1a</p> \\[ \\lambda' n_i(n_i - 1) \\cdots (n_i - k + 1) \\approx \\lambda' n_i^k = \\lambda' (a^d n)^k = (\\lambda' a^{d(k-1)})(a^d n^k) \\] <p>\u4e3a\u4e86\u5f97\u5230\u4e00\u4e2a\u5728\u8fde\u7eed\u6781\u9650\u4e0b\u6709\u826f\u597d\u5b9a\u4e49\u7684\u5b8f\u89c2\u53cd\u5e94\u901f\u7387 \\(\\lambda\\)\uff0c\u9700\u8981\u5c06\u6240\u6709\u4e0e\u6676\u683c\u5927\u5c0f\u76f8\u5173\u7684\u56e0\u5b50\u5438\u6536\u5230\u65b0\u7684\u901f\u7387\u5e38\u6570\u4e2d\uff0c\u5373 \\(\\lambda = \\lambda' a^{d(k-1)}\\)\u3002\u8fd9\u6837\uff0c\u5b8f\u89c2\u7684\u53cd\u5e94\u901f\u7387\u5bc6\u5ea6\u5c31\u6b63\u6bd4\u4e8e \\(n(\\vec{r},t)^k\\)\u3002\u8fd9\u6b63\u662f\u5316\u5b66\u52a8\u529b\u5b66\u4e2d\u8457\u540d\u7684\u8d28\u91cf\u4f5c\u7528\u5b9a\u5f8b (law of mass action) \u3002\u8fd9\u4e2a\u4ece\u79bb\u6563\u7ec4\u5408\u5230\u8fde\u7eed\u5e42\u5f8b\u7684\u8f6c\u53d8\uff0c\u662f\u8fde\u63a5\u5fae\u89c2\u968f\u673a\u6027\u4e0e\u5b8f\u89c2\u786e\u5b9a\u6027\u52a8\u529b\u5b66\u7684\u6838\u5fc3\u6b65\u9aa4\u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#22-","title":"2.2 \u53cd\u5e94-\u6269\u6563\u4f5c\u7528\u91cf\u4e0e\u6da8\u843d\u7684\u8d77\u6e90","text":"<p>\u9075\u5faa\u5728\u7b2c37\u8bb2\u4e2d\u4e3a\u8df3\u8dc3\u8fc7\u7a0b\u5efa\u7acb\u7684KMPI\u201c\u914d\u65b9\u201d\uff0c\u63cf\u8ff0\u4e0a\u8ff0\u53cd\u5e94\u8fc7\u7a0b\u5728\u4f5c\u7528\u91cf\u4e2d\u7684\u8d21\u732e\u9879\u53ef\u4ee5\u88ab\u7cfb\u7edf\u6027\u5730\u6784\u5efa\u51fa\u6765\u3002\u5c06\u8fd9\u4e2a\u65b0\u9879\u52a0\u5165\u5230\u4e0a\u4e00\u8282\u7684\u6269\u6563\u4f5c\u7528\u91cf\u4e2d\uff0c\u4fbf\u5f97\u5230\u4e86\u4e00\u4e2a\u66f4\u5b8c\u5907\u7684\u53cd\u5e94-\u6269\u6563\u7cfb\u7edf\u7684\u4f5c\u7528\u91cf\uff1a</p> \\[ S[n, i\\tilde{n}] =\\int d^d x \\, dt \\left\\{ i\\tilde{n} (\\partial_t - D \\nabla^2) n - D n (\\nabla i \\tilde{n})^2 - \\lambda n^k \\left( e^{i\\tilde{n}(\\ell-k)} - 1 \\right) \\right\\} \\] <p>\u65b0\u589e\u7684\u6700\u540e\u4e00\u9879 \\(S_{\\text{react}} = -\\int \\lambda n^k \\left( e^{i\\tilde{n}(\\ell-k)} - 1 \\right)\\) \u5305\u542b\u4e86\u53cd\u5e94\u8fc7\u7a0b\u7684\u6240\u6709\u4fe1\u606f\u3002</p> <p>\u8fd9\u4e2a\u6307\u6570\u5f62\u5f0f\u7684\u7ed3\u6784 \\(e^{i\\tilde{n}\\Delta N} - 1\\) \u662f\u8def\u5f84\u79ef\u5206\u4e2d\u63cf\u8ff0\u7c92\u5b50\u6570\u8df3\u8dc3\u8fc7\u7a0b\u7684\u901a\u7528\u201c\u6307\u7eb9\u201d\uff0c\u5176\u4e2d \\(\\Delta N = \\ell - k\\) \u662f\u6bcf\u6b21\u53cd\u5e94\u4e8b\u4ef6\u4e2d\u7c92\u5b50\u6570\u7684\u51c0\u53d8\u5316\u91cf\u3002\u4e3a\u4e86\u63ed\u793a\u5176\u6df1\u523b\u7684\u7269\u7406\u5185\u6db5\uff0c\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\uff0c\u8fd9\u5728\u672c\u8d28\u4e0a\u662f\u4e00\u6b21\u7cfb\u7edf\u7684Kramers-Moyal\u5c55\u5f00\uff1a</p> \\[ \\lambda n^k \\left( e^{i\\tilde{n}(\\ell-k)} - 1 \\right) \\approx \\lambda n^k \\left[ i\\tilde{n}(\\ell - k) + \\frac{1}{2} (i\\tilde{n}(\\ell - k))^2 + \\cdots \\right] \\] <p>\u8fd9\u4e2a\u5c55\u5f00\u63ed\u793a\u4e86\u53cd\u5e94\u8fc7\u7a0b\u5bf9\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u53cc\u91cd\u8d21\u732e\uff1a</p> <ul> <li> <p>\u4e00\u9636\u9879 (\u6f02\u79fb\u9879): \u5bf9\u5e94\u4e8e\u4f5c\u7528\u91cf\u4e2d\u7684 \\(- \\lambda n^k (\\ell - k) i\\tilde{n}\\)\u3002\u8fd9\u4e00\u9879\u5728\u54cd\u5e94\u573a \\(i\\tilde{n}\\) \u4e2d\u662f\u7ebf\u6027\u7684\uff0c\u5b83\u5728\u53d8\u5206\u540e\u4f1a\u751f\u6210\u786e\u5b9a\u6027\u7684\u53cd\u5e94\u52a8\u529b\u5b66\u65b9\u7a0b\uff0c\u5373 \\(\\partial_t n = \\cdots + \\lambda (\\ell - k) n^k\\)\uff0c\u8fd9\u6b63\u662f\u8d28\u91cf\u4f5c\u7528\u5b9a\u5f8b\u7684\u5fae\u5206\u5f62\u5f0f\u3002\u5b83\u63cf\u8ff0\u4e86\u53cd\u5e94\u8fc7\u7a0b\u7684\u5e73\u5747\u6548\u679c\u6216\u786e\u5b9a\u6027\u6f02\u79fb\u3002</p> </li> <li> <p>\u4e8c\u9636\u9879 (\u566a\u58f0\u9879): \u5bf9\u5e94\u4e8e\u4f5c\u7528\u91cf\u4e2d\u7684 \\(-\\frac{1}{2} \\lambda n^k (\\ell - k)^2 (i\\tilde{n})^2\\)\u3002\u8fd9\u4e00\u9879\u5728\u54cd\u5e94\u573a \\(i\\tilde{n}\\) \u4e2d\u662f\u4e8c\u6b21\u7684\uff0c\u5b83\u5219\u7f16\u7801\u4e86\u53cd\u5e94\u8fc7\u7a0b\u7684\u968f\u673a\u6027\u3002\u8fd9\u79cd\u6e90\u4e8e\u5355\u6b21\u53cd\u5e94\u4e8b\u4ef6\u79bb\u6563\u6027\u7684\u6da8\u843d\uff0c\u88ab\u79f0\u4e3a\u4eba\u53e3\u566a\u58f0 (demographic noise) \u6216\u53cd\u5e94\u566a\u58f0\u3002\u566a\u58f0\u7684\u5f3a\u5ea6\u6b63\u6bd4\u4e8e\u53cd\u5e94\u901f\u7387 \\(\\lambda n^k\\)\uff0c\u8fd9\u540c\u6837\u7b26\u5408\u7269\u7406\u76f4\u89c9\uff1a\u53cd\u5e94\u8d8a\u5feb\u3001\u8d8a\u9891\u7e41\uff0c\u7531\u5355\u6b21\u4e8b\u4ef6\u7684\u968f\u673a\u6027\u6240\u5e26\u6765\u7684\u6da8\u843d\u5c31\u8d8a\u663e\u8457\u3002</p> </li> </ul> <p>\u81f3\u6b64\uff0cKMPI\u8def\u5f84\u79ef\u5206\u65b9\u6cd5\u518d\u6b21\u5c55\u793a\u4e86\u5176\u4f18\u96c5\u4e4b\u5904\uff1a\u4e00\u4e2a\u7b80\u6d01\u7684\u6307\u6570\u9879\uff0c\u4fbf\u5c06\u786e\u5b9a\u6027\u53cd\u5e94\u901f\u7387\uff08\u4e00\u9636\u77e9\uff09\u548c\u968f\u673a\u7684\u4eba\u53e3\u566a\u58f0\uff08\u4e8c\u9636\u77e9\uff09\u7edf\u4e00\u5728\u4e86\u4e00\u8d77\uff0c\u4e3a\u63cf\u8ff0\u771f\u5b9e\u7684\u3001\u6da8\u843d\u7684\u53cd\u5e94-\u6269\u6563\u7cfb\u7edf\u63d0\u4f9b\u4e86\u7b2c\u4e00\u6027\u7684\u7406\u8bba\u57fa\u7840\u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#3","title":"3. \u6784\u5efa\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u7684\u573a\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\uff0c\u4e5f\u662f\u6574\u4e2a\u8bfe\u7a0b\u7684\u9ad8\u6f6e\uff0c\u5728\u4e8e\u5c06\u524d\u4e24\u8282\u5efa\u7acb\u7684\u53cd\u5e94-\u6269\u6563\u6846\u67b6\uff0c\u63d0\u5347\u5230\u4e00\u4e2a\u80fd\u591f\u63cf\u8ff0\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u7cfb\u7edf\u7684\u5168\u65b0\u9ad8\u5ea6\u3002\u81f3\u6b64\uff0c\u7c92\u5b50\u4e0d\u518d\u662f\u72ec\u7acb\u7684\u201c\u5e7d\u7075\u201d\uff0c\u5b83\u4eec\u5c06\u901a\u8fc7\u76f8\u4e92\u4f5c\u7528\u529b\u201c\u611f\u77e5\u201d\u5f7c\u6b64\u7684\u5b58\u5728\u3002\u8fd9\u4e2a\u6700\u7ec8\u7684\u3001\u4e5f\u662f\u6700\u5173\u952e\u7684\u6b65\u9aa4\uff0c\u5c06\u4f7f\u7406\u8bba\u80fd\u591f\u4ece\u7b2c\u4e00\u6027\u539f\u7406\u51fa\u53d1\uff0c\u9884\u6d4b\u7531\u7c92\u5b50\u95f4\u5438\u5f15\u6216\u6392\u65a5\u6240\u5bfc\u81f4\u7684\u805a\u96c6\u3001\u5206\u79bb\u7b49\u590d\u6742\u7684\u96c6\u4f53\u73b0\u8c61 (collective phenomena) \u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#31","title":"3.1 \u5fae\u89c2\u6a21\u578b\uff1a\u8ba9\u7c92\u5b50\u201c\u611f\u53d7\u201d\u5f7c\u6b64","text":"<p>\u4e3a\u4e86\u8ba9\u573a\u8bba\u80fd\u591f\u63cf\u8ff0\u76f8\u4e92\u4f5c\u7528\uff0c\u5fc5\u987b\u4ece\u4e00\u4e2a\u5305\u542b\u4e86\u76f8\u4e92\u4f5c\u7528\u7269\u7406\u7684\u5fae\u89c2\u6a21\u578b\u51fa\u53d1\u3002\u8fd9\u4e2a\u6a21\u578b\u5efa\u7acb\u5728\u4e00\u4e2a\u79bb\u6563\u7684\u7a7a\u95f4\u683c\u70b9\u4e0a\uff0c\u5176\u6838\u5fc3\u7269\u7406\u8f93\u5165\u5728\u4e8e\uff0c\u7c92\u5b50\u4ece\u4e00\u4e2a\u683c\u70b9\u8df3\u8dc3\u5230\u76f8\u90bb\u683c\u70b9\u7684\u901f\u7387\uff0c\u4e0d\u518d\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u800c\u662f\u4f9d\u8d56\u4e8e\u5176\u6240\u5904\u7684\u80fd\u91cf\u73af\u5883\u3002</p> <p>\u4e00\u4e2a\u7269\u7406\u4e0a\u5408\u7406\u4e14\u80fd\u4fdd\u8bc1\u7cfb\u7edf\u6b63\u786e\u8d8b\u5411\u70ed\u5e73\u8861\u7684\u9009\u62e9\uff0c\u662f\u6240\u8c13\u7684\u201c\u70ed\u6d74\u89c4\u5219 (heat-bath rule) \u201d\uff1a</p> \\[ D_{ij} = \\frac{2D}{1 + \\exp[\\beta(u_i - u_j)]} \\] <ul> <li>\\(D\\) \u662f\u4e00\u4e2a\u57fa\u7840\u7684\u6269\u6563\u7cfb\u6570\u3002</li> <li>\\(\\beta = 1/(k_B T)\\) \u662f\u9006\u6e29\u5ea6\uff0c\u4ee3\u8868\u4e86\u70ed\u6da8\u843d\u7684\u5f3a\u5ea6\u3002</li> <li>\\(u_i\\) \u548c \\(u_j\\) \u5206\u522b\u662f\u7c92\u5b50\u5728\u683c\u70b9 \\(i\\) \u548c \\(j\\) \u7684\u5c40\u57df\u52bf\u80fd\u3002</li> </ul> <p>\u7269\u7406\u610f\u4e49: \u8fd9\u4e2a\u89c4\u5219\u7f16\u7801\u4e86\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u7684\u503e\u5411\u3002\u5982\u679c\u76ee\u6807\u4f4d\u7f6e \\(j\\) \u7684\u80fd\u91cf \\(u_j\\) \u4f4e\u4e8e\u5f53\u524d\u4f4d\u7f6e \\(i\\) \u7684\u80fd\u91cf \\(u_i\\)\uff0c\u6307\u6570\u9879\u4f1a\u5c0f\u4e8e1\uff0c\u8df3\u8dc3\u901f\u7387 \\(D_{ij}\\) \u589e\u5927\uff1b\u53cd\u4e4b\uff0c\u5219\u8df3\u8dc3\u901f\u7387\u51cf\u5c0f\u3002\u8fd9\u76f4\u89c2\u5730\u63cf\u8ff0\u4e86\u7c92\u5b50\u503e\u5411\u4e8e\u5411\u80fd\u91cf\u66f4\u4f4e\u5904\u79fb\u52a8\u7684\u8d8b\u52bf\uff0c\u4ece\u800c\u786e\u4fdd\u5728\u6ca1\u6709\u5176\u4ed6\u975e\u5e73\u8861\u9a71\u52a8\u65f6\uff0c\u7cfb\u7edf\u4f1a\u81ea\u53d1\u5730\u5411\u80fd\u91cf\u6700\u5c0f\u5316\u7684\u5e73\u8861\u6001\uff08\u73bb\u5c14\u5179\u66fc\u5206\u5e03\uff09\u6f14\u5316\u3002\u8fd9\u4e0e\u5728\u7b2c38\u8bb2\u4e2d\u8ba8\u8bba\u7684\u3001\u9700\u8981\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861 (detailed balance) \u7684\u5e73\u8861\u6001\u6a21\u578b\u4e00\u8109\u76f8\u627f\u3002</p> <p>\u800c\u771f\u6b63\u5f15\u5165\u201c\u76f8\u4e92\u4f5c\u7528\u201d\u7684\uff0c\u662f\u5c40\u57df\u52bf\u80fd \\(u_i\\) \u7684\u5b9a\u4e49\u3002\u5b83\u672c\u8eab\u662f\u7531\u7c92\u5b50\u95f4\u7684\u6210\u5bf9\u76f8\u4e92\u4f5c\u7528 (pairwise interactions) \u51b3\u5b9a\u7684\uff1a</p> \\[ u_i(t) = \\sum_{j \\in L} V(\\vec{r}_i - \\vec{r}_j) n_j(t) \\] <ul> <li> <p>\\(V(\\vec{r}_i - \\vec{r}_j)\\) \u662f\u7c92\u5b50\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u52bf\uff08\u4f8b\u5982\uff0cLennard-Jones\u52bf\uff0c\u6216\u7b80\u5355\u7684\u5438\u5f15/\u6392\u65a5\u52bf\uff09\u3002</p> </li> <li> <p>\\(n_j(t)\\) \u662f\u683c\u70b9 \\(j\\) \u5904\u7684\u7c92\u5b50\u6570\u3002</p> </li> </ul> <p>\u7269\u7406\u610f\u4e49: \u8fd9\u4e2a\u8bbe\u5b9a\u5f15\u5165\u4e86\u6df1\u523b\u7684\u975e\u7ebf\u6027\uff08\\(D_{ij}\\) \u4f9d\u8d56\u4e8e \\(n_j\\)\uff09\u548c\u975e\u5c40\u57df\u6027\uff08\\(u_i\\) \u4f9d\u8d56\u4e8e\u6240\u6709\u5176\u4ed6\u683c\u70b9 \\(j\\)\uff09\u3002\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8df3\u8dc3\u901f\u7387\uff0c\u53d6\u51b3\u4e8e\u6574\u4e2a\u7cfb\u7edf\u4e2d\u6240\u6709\u5176\u4ed6\u7c92\u5b50\u7684\u5206\u5e03\u60c5\u51b5\u3002\u8fd9\u4f7f\u5f97\u95ee\u9898\u4ece\u5355\u7c92\u5b50\u6269\u6563\u7684\u7b80\u5355\u56fe\u50cf\uff0c\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u771f\u6b63\u7684\u3001\u68d8\u624b\u7684\u591a\u4f53\u95ee\u9898 (many-body problem) \u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#32","title":"3.2 \u4ece\u5fae\u89c2\u8df3\u8dc3\u89c4\u5219\u5230\u5b8f\u89c2\u4f5c\u7528\u91cf","text":"<p>\u76ee\u6807\u662f\u4ece\u8fd9\u4e2a\u79bb\u6563\u7684\u3001\u57fa\u4e8e\u683c\u70b9\u7684\u5fae\u89c2\u8df3\u8dc3\u89c4\u5219\u51fa\u53d1\uff0c\u901a\u8fc7Kramers-Moyal\u5c55\u5f00\u548c\u8fde\u7eed\u6781\u9650\uff0c\u63a8\u5bfc\u51fa\u5b8f\u89c2\u7684\u573a\u8bba\u4f5c\u7528\u91cf\u3002\u8fd9\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u662f\u4e00\u6b21\u7cbe\u5999\u7684\u201c\u53cc\u91cd\u5c55\u5f00\u201d\uff1a</p> <ol> <li> <p>\u4e3b\u65b9\u7a0b\u7684\u8df3\u8dc3\u9879: \u9075\u5faaKMPI\u7684\u914d\u65b9\uff0c\u6765\u81ea\u7c92\u5b50\u8df3\u8dc3\u7684\u9879\u5728\u4f5c\u7528\u91cf\u4e2d\u5177\u6709\u5982\u4e0b\u5f62\u5f0f\uff1a     $$     S_{\\text{hop}} \\propto \\sum_i \\int dt \\sum_{j \\sim i} D_{ij} n_i \\left( e^{i(\\tilde{n}_j - \\tilde{n}_i)} - 1 \\right)     $$     \u5176\u4e2d \\(j \\sim i\\) \u8868\u793a\u5bf9 \\(i\\) \u7684\u6240\u6709\u90bb\u5c45 \\(j\\) \u6c42\u548c\u3002</p> </li> <li> <p>\u5c55\u5f00 1 (KM\u5c55\u5f00): \u5047\u8bbe\u54cd\u5e94\u573a\u5728\u76f8\u90bb\u683c\u70b9\u95f4\u53d8\u5316\u5e73\u7f13\uff0c\u5bf9\u6307\u6570\u9879\u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\uff0c\u4fdd\u7559\u81f3\u4e8c\u9636\uff1a     $$     e^{i(\\tilde{n}_j - \\tilde{n}_i)} - 1\\approx i(\\tilde{n}_j - \\tilde{n}_i) - \\frac{1}{2}(\\tilde{n}_j - \\tilde{n}_i)^2     $$     \u8fd9\u662f\u6807\u51c6\u7684Kramers-Moyal\u5c55\u5f00\uff0c\u622a\u65ad\u5230\u4e8c\u9636\u610f\u5473\u7740\u5047\u8bbe\u8fc7\u7a0b\u662f\u7c7b\u6269\u6563\u7684\uff0c\u7531\u4e00\u9636\u77e9\uff08\u6f02\u79fb\uff09\u548c\u4e8c\u9636\u77e9\uff08\u6269\u6563\uff09\u4e3b\u5bfc\u3002</p> </li> <li> <p>\u5c55\u5f00 2 (\u5f31\u76f8\u4e92\u4f5c\u7528\u5c55\u5f00): \u5047\u8bbe\u76f8\u4e92\u4f5c\u7528\u8f83\u5f31\u6216\u6e29\u5ea6\u8f83\u9ad8\uff0c\u4f7f\u5f97\u76f8\u90bb\u683c\u70b9\u95f4\u7684\u80fd\u91cf\u5dee\u5f88\u5c0f\uff0c\u5373 \\(\\beta(u_i - u_j) \\ll 1\\)\u3002\u5bf9\u8df3\u8dc3\u901f\u7387 \\(D_{ij}\\) \u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\uff1a     $$     D_{ij} = \\frac{2D}{1 + e^{\\beta(u_i - u_j)}} \\approx \\frac{2D}{1 + (1 + \\beta(u_i - u_j))} \\approx D \\left( 1 - \\frac{\\beta}{2}(u_i - u_j) \\right)     $$</p> </li> <li> <p>\u5408\u5e76\u4e0e\u5316\u7b80: \u5c06\u4e0a\u8ff0\u4e24\u4e2a\u5c55\u5f00\u5f0f\u4ee3\u5165\uff0c\u5e76\u4ed4\u7ec6\u6574\u7406\u5404\u9879\u3002\u53ea\u5173\u6ce8\u5230\u54cd\u5e94\u573a\u7684\u4e00\u9636\u548c\u4e8c\u9636\u9879\uff0c\u5ffd\u7565\u66f4\u9ad8\u9636\u7684\u4ea4\u53c9\u9879\uff1a</p> \\[ \\sum_{j \\sim i} \\underbrace{D \\left( 1 - \\frac{\\beta}{2}(u_i - u_j) \\right)}_{D_{ij}} \\underbrace{\\left( i(\\tilde{n}_j - \\tilde{n}_i) - \\frac{1}{2}(\\tilde{n}_j - \\tilde{n}_i)^2 \\right)}_{e^{\\dots}-1} \\] <p>\u5c55\u5f00\u540e\uff0c\u4e3b\u8981\u6709\u4e24\u7c7b\u9879\uff1a * \u7eaf\u6269\u6563\u9879: \\(D \\sum_{j \\sim i} \\left( i(\\tilde{n}_j - \\tilde{n}_i) - \\frac{1}{2}(\\tilde{n}_j - \\tilde{n}_i)^2 \\right)\\)\u3002\u8fd9\u90e8\u5206\u4e0e\u65e0\u76f8\u4e92\u4f5c\u7528\u7684\u60c5\u51b5\u5b8c\u5168\u76f8\u540c\uff0c\u5728\u8fde\u7eed\u6781\u9650\u4e0b\u4f1a\u4ea7\u751f \\(i\\tilde{n} D \\nabla^2 n\\) \u548c \\(-D n (\\nabla i\\tilde{n})^2\\) \u9879\uff0c\u5373\u786e\u5b9a\u6027\u6269\u6563\u548c\u6269\u6563\u566a\u58f0\u3002 * \u76f8\u4e92\u4f5c\u7528\u6f02\u79fb\u9879: \\(-\\frac{D\\beta}{2} \\sum_{j \\sim i} (u_i - u_j) i(\\tilde{n}_j - \\tilde{n}_i)\\)\u3002\u8fd9\u662f\u7531\u76f8\u4e92\u4f5c\u7528\u5f15\u8d77\u7684\u65b0\u9879\uff0c\u5b83\u53ea\u8d21\u732e\u4e8e\u6f02\u79fb\uff08\u54cd\u5e94\u573a\u7684\u4e00\u9636\u9879\uff09\uff0c\u800c\u4e0d\u6539\u53d8\u566a\u58f0\u7ed3\u6784\u3002</p> </li> <li> <p>\u53d6\u8fde\u7eed\u6781\u9650: \u5c06\u79bb\u6563\u5dee\u5206\u66ff\u6362\u4e3a\u8fde\u7eed\u68af\u5ea6\u3002\u7279\u522b\u5173\u6ce8\u76f8\u4e92\u4f5c\u7528\u6f02\u79fb\u9879\uff0c\u5b83\u6700\u7ec8\u5728\u4f5c\u7528\u91cf\u4e2d\u8d21\u732e\u4e86\u63cf\u8ff0\u786e\u5b9a\u6027\u6f02\u79fb\u7684\u65b0\u90e8\u5206\u3002</p> </li> </ol>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#33","title":"3.3 \u7406\u8bba\u7684\u57fa\u77f3\uff1a\u8fd1\u4f3c\u7684\u5185\u6db5","text":"<p>\u5728\u5ba3\u5e03\u6700\u7ec8\u7ed3\u679c\u4e4b\u524d\uff0c\u6709\u5fc5\u8981\u505c\u4e0b\u6765\u53cd\u601d\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\u6240\u505a\u8fd1\u4f3c\u7684\u6df1\u523b\u7269\u7406\u542b\u4e49\u3002\u6700\u7ec8\u7684\u4f5c\u7528\u91cf\u5e76\u975e\u4e00\u4e2a\u7edd\u5bf9\u7cbe\u786e\u7684\u7406\u8bba\uff0c\u800c\u662f\u4e00\u4e2a\u5728\u7279\u5b9a\u7269\u7406\u6761\u4ef6\u4e0b\u7684\u6709\u6548\u573a\u8bba (effective field theory) \u3002</p> <ul> <li> <p>\u622a\u65adKramers-Moyal\u5c55\u5f00: \u5ffd\u7565 \\((\\Delta \\tilde{n})^3\\) \u53ca\u66f4\u9ad8\u9636\u9879\uff0c\u610f\u5473\u7740\u5047\u8bbe\u7c92\u5b50\u7684\u8fd0\u52a8\u662f\u8fde\u7eed\u7684\u3001\u7c7b\u6269\u6563\u7684\u3002\u8fd9\u6392\u9664\u4e86\u7c92\u5b50\u8fdb\u884c\u957f\u7a0b\u8df3\u8dc3\uff08\u5982L\u00e9vy\u98de\u884c\uff09\u7b49\u975e\u9ad8\u65af\u884c\u4e3a\u7684\u53ef\u80fd\u6027\u3002</p> </li> <li> <p>\u622a\u65ad\u5f31\u76f8\u4e92\u4f5c\u7528\u5c55\u5f00: \u5047\u8bbe \\(\\beta(u_i - u_j) \\ll 1\\)\uff0c\u610f\u5473\u7740\u8be5\u7406\u8bba\u9002\u7528\u4e8e\u5f31\u76f8\u4e92\u4f5c\u7528\u6216\u9ad8\u6e29\u7cfb\u7edf\u3002\u5b83\u65e0\u6cd5\u7cbe\u786e\u63cf\u8ff0\u5728\u4f4e\u6e29\u4e0b\u53ef\u80fd\u53d1\u751f\u7684\u5f3a\u5173\u8054\u6548\u5e94\uff0c\u5982\u76f8\u53d8\u6216\u73bb\u7483\u5316\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0c\u63a8\u5bfc\u8fc7\u7a0b\u672c\u8eab\u5c31\u5b9a\u4e49\u4e86\u7406\u8bba\u7684\u9002\u7528\u8303\u56f4\u3002\u6559\u6388\u5728\u8bb2\u5ea7\u7ed3\u5c3e\u7684\u63d0\u9192\u201cCaution: Coarse-graining procedure &amp; expansion\u201d \u7edd\u975e\u4e00\u53e5\u5ba2\u5957\u8bdd\uff0c\u800c\u662f\u7406\u8bba\u7269\u7406\u7814\u7a76\u4e2d\u7684\u4e00\u4e2a\u6838\u5fc3\u6559\u8bad\uff1a\u4efb\u4f55\u4e00\u4e2a\u7406\u8bba\u90fd\u6709\u5176\u6210\u7acb\u7684\u8fb9\u754c\uff0c\u7406\u89e3\u8fd9\u4e9b\u8fb9\u754c\u4e0e\u7406\u89e3\u7406\u8bba\u672c\u8eab\u540c\u7b49\u91cd\u8981\u3002</p> <p></p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#4","title":"4. \u4f5c\u7528\u91cf\u53ca\u5176\u7269\u7406\u63a8\u8bba","text":"<p>\u7ecf\u8fc7\u4e0a\u4e00\u8282\u4e25\u8c28\u7684\u63a8\u5bfc\uff0c\u90a3\u53f0\u201c\u7406\u8bba\u6784\u5efa\u673a\u5668\u201d\u2014\u2014\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\u2014\u2014\u7ec8\u4e8e\u8f93\u51fa\u4e86\u8fd9\u8282\u8bfe\uff0c\u4e43\u81f3\u6574\u4e2a\u7cfb\u5217\u8bfe\u7a0b\u7684\u6700\u7ec8\u6210\u679c\uff1a\u4e00\u4e2a\u63cf\u8ff0\u5f31\u76f8\u4e92\u4f5c\u7528\u5e03\u6717\u7c92\u5b50\u7cfb\u7edf\u7684\u6709\u6548\u573a\u8bba\u4f5c\u7528\u91cf\u3002\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u5c31\u662f\u6df1\u5165\u89e3\u8bfb\u8fd9\u4e2a\u4f5c\u7528\u91cf\uff0c\u7406\u89e3\u5176\u6bcf\u4e00\u9879\u7684\u6df1\u523b\u7269\u7406\u5185\u6db5\uff0c\u5e76\u63ed\u793a\u5b83\u6240\u63cf\u7ed8\u7684\u3001\u7531\u5fae\u89c2\u76f8\u4e92\u4f5c\u7528\u9a71\u52a8\u7684\u5b8f\u89c2\u96c6\u4f53\u52a8\u529b\u5b66\u84dd\u56fe\u3002</p> <p>\u5c06\u7b2c\u4e00\u8282\u7684\u7eaf\u6269\u6563\u4f5c\u7528\u91cf\u4e0e\u4e0a\u4e00\u8282\u63a8\u5bfc\u51fa\u7684\u76f8\u4e92\u4f5c\u7528\u9879 \u5408\u5e76\uff0c\u4fbf\u5f97\u5230\u4e86\u6700\u7ec8\u7684\u5b8c\u6574\u4f5c\u7528\u91cf\uff1a</p> \\[ S[n, i\\tilde{n}] =\\int d^d x\\, dt \\left[ i\\tilde{n} (\\partial_t n - D \\nabla^2 n) - D n (\\nabla i\\tilde{n})^2 - i\\tilde{n} \\frac{D}{k_B T} \\nabla \\cdot (n \\nabla u) \\right] \\] <p>\u5176\u4e2d\uff0c\u52bf\u80fd \\(u\\) \u4ecd\u7136\u662f\u901a\u8fc7\u5377\u79ef\u5b9a\u4e49\u7684\u975e\u5c40\u57df\u9879\uff0c\u5b83\u4f53\u73b0\u4e86\u591a\u4f53\u76f8\u4e92\u4f5c\u7528\u7684\u672c\u8d28\uff1a</p> \\[ u(\\vec{r}, t) = \\int d^d r' V(\\vec{r} - \\vec{r}') n(\\vec{r}', t) \\]"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#41","title":"4.1 \u65b0\u589e\u76f8\u4e92\u4f5c\u7528\u9879\u7684\u7269\u7406\u8be0\u91ca\uff1a\u5185\u751f\u529b\u4e0e\u96c6\u4f53\u6f02\u79fb","text":"<p>\u4e0e\u65e0\u76f8\u4e92\u4f5c\u7528\u7684\u60c5\u51b5\u76f8\u6bd4\uff0c\u4f5c\u7528\u91cf\u4e2d\u51fa\u73b0\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u9879\uff1a</p> \\[ S_{\\text{int}} = - \\int d^d x dt \\left( i\\tilde{n} \\frac{D}{k_B T} \\nabla \\cdot (n \\nabla u) \\right) \\] <p>\u8fd9\u4e00\u9879\u53ea\u5305\u542b\u54cd\u5e94\u573a \\(i\\tilde{n}\\) \u7684\u4e00\u9636\uff0c\u56e0\u6b64\u5b83\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u786e\u5b9a\u6027\u8fc7\u7a0b \uff0c\u5373\u7531\u7c92\u5b50\u95f4\u76f8\u4e92\u4f5c\u7528\u529b\u9a71\u52a8\u7684\u96c6\u4f53\u6f02\u79fb (collective drift) \u3002\u5b83\u7684\u7269\u7406\u610f\u4e49\u53ef\u4ee5\u6309\u4ee5\u4e0b\u5c42\u6b21\u6765\u6df1\u523b\u7406\u89e3\uff1a</p> <p>\u5e73\u5747\u529b (Mean Force) : \\(-\\nabla u = -\\nabla \\int V n'\\) \u662f\u4f5c\u7528\u5728\u4f4d\u4e8e \\(\\vec{r}\\) \u7684\u5355\u4e2a\u7c92\u5b50\u4e0a\u7684\u5e73\u5747\u529b\u3002\u8fd9\u4e2a\u529b\u662f\u7531\u5468\u56f4\u6240\u6709\u5176\u4ed6\u7c92\u5b50\u901a\u8fc7\u76f8\u4e92\u4f5c\u7528\u52bf \\(V\\) \u5171\u540c\u4ea7\u751f\u7684\u201c\u529b\u573a\u201d\u3002</p> <p>\u529b\u5bc6\u5ea6 (Force Density): \\(n(-\\nabla u)\\) \u5219\u662f\u5355\u4f4d\u4f53\u79ef\u5185\u7684\u603b\u529b\u5bc6\u5ea6\u3002\u5b83\u4ee3\u8868\u4e86\u5728 \\(\\vec{r}\\) \u5904\uff0c\u6240\u6709\u7c92\u5b50\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u6240\u53d7\u5230\u7684\u6765\u81ea\u5176\u4ed6\u533a\u57df\u7c92\u5b50\u7684\u5408\u529b\u3002</p> <p>\u8fc1\u79fb\u7387 (Mobility) \u4e0e\u7231\u56e0\u65af\u5766\u5173\u7cfb: \u524d\u9762\u7684\u7cfb\u6570 \\(\\mu = \\frac{D}{k_B T}\\) \u6b63\u662f\u8457\u540d\u7684\u7231\u56e0\u65af\u5766\u5173\u7cfb \u3002\u5b83\u63ed\u793a\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u7269\u7406\u8054\u7cfb\uff1a\u4e00\u4e2a\u7c92\u5b50\u7684\u8fc1\u79fb\u7387 \\(\\mu\\) \uff08\u5728\u5355\u4f4d\u529b\u4f5c\u7528\u4e0b\u7684\u6f02\u79fb\u901f\u5ea6\uff09\u4e0e\u5176\u6269\u6563\u7cfb\u6570 \\(D\\) \uff08\u8861\u91cf\u5176\u968f\u673a\u70ed\u8fd0\u52a8\u7684\u5267\u70c8\u7a0b\u5ea6\uff09\u6210\u6b63\u6bd4\u3002\u8fd9\u672c\u8d28\u4e0a\u662f\u6da8\u843d-\u8017\u6563\u5b9a\u7406\u5728\u5355\u7c92\u5b50\u5c42\u9762\u7684\u4f53\u73b0\u3002</p> <p>\u6f02\u79fb\u6d41 (Drift Flux) : \u56e0\u6b64\uff0c\\(\\vec{J}_{\\text{drift}} = n \\mu (-\\nabla u)\\) \u5c31\u4ee3\u8868\u4e86\u7531\u76f8\u4e92\u4f5c\u7528\u529b\u9a71\u52a8\u7684\u7c92\u5b50\u5bc6\u5ea6\u6d41 \u3002</p> <p>\u8fde\u7eed\u6027\u65b9\u7a0b: \u6574\u4e2a\u9879 \\(\\nabla \\cdot (n \\mu (-\\nabla u))\\) \u63cf\u8ff0\u4e86\u7c92\u5b50\u6570\u5b88\u6052\u7684\u8fde\u7eed\u6027\u65b9\u7a0b \\(\\partial_t n = -\\nabla \\cdot \\vec{J}_{\\text{drift}}\\)\u3002\u5982\u679c\u76f8\u4e92\u4f5c\u7528\u662f\u5438\u5f15\u7684\uff08\\(V &lt; 0\\)\uff09\uff0c\u7c92\u5b50\u4f1a\u503e\u5411\u4e8e\u5411\u5bc6\u5ea6\u66f4\u9ad8\u7684\u5730\u65b9\u79fb\u52a8\uff08\u529b\u6307\u5411\u5bc6\u5ea6\u4e2d\u5fc3\uff09\uff0c\u5bfc\u81f4\u805a\u96c6\uff1b\u5982\u679c\u662f\u6392\u65a5\u7684\uff08\\(V &gt; 0\\)\uff09\uff0c\u7c92\u5b50\u5219\u4f1a\u76f8\u4e92\u63a8\u79bb\u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#42","title":"4.2 \u5b8c\u6574\u7684\u8fd0\u52a8\u65b9\u7a0b\uff1a\u63cf\u8ff0\u6a21\u5f0f\u5f62\u6210\u7684\u84dd\u56fe","text":"<p>\u4e0e\u8be5\u4f5c\u7528\u91cf\u7b49\u4ef7\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\uff08SPDE\uff09\u662f\uff1a</p> \\[ \\partial_t n = D \\nabla^2 n + \\frac{D}{k_B T} \\nabla \\cdot (n \\nabla u) + \\nabla \\cdot \\left( \\sqrt{2Dn} \\, \\vec{\\eta} \\right) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u5728\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u4e2d\u6781\u4e3a\u91cd\u8981\uff0c\u88ab\u79f0\u4e3aDean-Kawasaki\u65b9\u7a0b\u3002 Dean-Kawasaki\u65b9\u7a0b\u7531\u82f1\u56fd\u7269\u7406\u5b66\u5bb6David Dean\u548c\u65e5\u672c\u7269\u7406\u5b66\u5bb6Kunimasa Kawasaki\u4e8e1996\u5e74\u51e0\u4e4e\u540c\u65f6\u72ec\u7acb\u63d0\u51fa\uff0c\u5176\u5386\u53f2\u6e0a\u6e90\u662f\u8bd5\u56fe\u5728\u6d41\u4f53\u529b\u5b66\u63cf\u8ff0\u5c42\u9762\u4e25\u683c\u523b\u753b\u7a20\u5bc6\u76f8\u4e92\u4f5c\u7528\u7684\u5e03\u6717\u7c92\u5b50\u7cfb\u7edf\u7684\u5fae\u89c2\u6da8\u843d\u3002\u8be5\u65b9\u7a0b\u7684\u7269\u7406\u672c\u8d28\u662f\u4e00\u4e2a\u5173\u4e8e\u5fae\u89c2\u7c92\u5b50\u6570\u5bc6\u5ea6\u573a\u7684\u3001\u5177\u6709\u4e58\u6027\u566a\u58f0\u7684\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\uff0c\u5b83\u4ece\u5fae\u89c2\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u51fa\u53d1\uff0c\u901a\u8fc7\u6295\u5f71\u6620\u5c04\u6280\u672f\u7cbe\u786e\u63a8\u5bfc\u800c\u6765\uff0c\u5176\u51b3\u5b9a\u6027\u9879\u63cf\u8ff0\u4e86\u7c92\u5b50\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u52bf\u4e0e\u6269\u6563\uff0c\u800c\u968f\u673a\u9879\u5219\u672c\u8d28\u5730\u53cd\u6620\u4e86\u7531\u4e8e\u7c92\u5b50\u6570\u5b88\u6052\u6240\u5bfc\u81f4\u7684\u5fae\u89c2\u5bc6\u5ea6\u6da8\u843d\uff0c\u5176\u566a\u58f0\u5f3a\u5ea6\u4e0e\u5bc6\u5ea6\u5e73\u65b9\u6839\u6210\u6b63\u6bd4\u3002</p> <p>\u8be5\u65b9\u7a0b\u7684\u5177\u4f53\u5e94\u7528\u662f\u6c9f\u901a\u5fae\u89c2\u7c92\u5b50\u52a8\u529b\u5b66\u4e0e\u5b8f\u89c2\u8fde\u7eed\u4ecb\u8d28\u63cf\u8ff0\u7684\u6865\u6881\uff0c\u4e3a\u7814\u7a76\u80f6\u4f53\u60ac\u6d6e\u6db2\u7684\u975e\u5e73\u8861\u7edf\u8ba1\u7269\u7406\u3001\u73bb\u7483\u5316\u8f6c\u53d8\u4e2d\u7684\u52a8\u529b\u5b66\u5f02\u8d28\u6027\u3001\u4ee5\u53ca\u53d1\u5c55\u7cbe\u786e\u7684\u52a8\u6001\u5bc6\u5ea6\u6cdb\u51fd\u7406\u8bba\u63d0\u4f9b\u4e86\u6838\u5fc3\u7684\u7406\u8bba\u6846\u67b6\uff0c\u5c24\u5176\u64c5\u957f\u63cf\u8ff0\u5728\u76f8\u5206\u79bb\u4e34\u754c\u70b9\u9644\u8fd1\u7531\u6da8\u843d\u4e3b\u5bfc\u7684\u7a00\u6709\u4e8b\u4ef6\u3002</p> <p>\u8fd9\u4e2a\u65b9\u7a0b\u63cf\u7ed8\u4e86\u4e00\u5e45\u7269\u7406\u56fe\u666f\uff1a\u4e00\u4e2a\u5bc6\u5ea6\u573a\u5982\u4f55\u540c\u65f6\u5728\u4e09\u79cd\u6c38\u4e0d\u505c\u6b47\u7684\u7269\u7406\u673a\u5236\u7684\u7ade\u4e89\u4e0e\u534f\u4f5c\u4e0b\u6f14\u5316\uff1a</p> <ol> <li> <p>\u6269\u6563 (\\(D \\nabla^2 n\\)): \u8fd9\u662f\u71b5\u7684\u4f53\u73b0\uff0c\u4e00\u79cd\u65e0\u60c5\u7684\u3001\u4f7f\u7cfb\u7edf\u5747\u5300\u5316\u7684\u529b\u91cf\u3002\u5b83\u603b\u662f\u8bd5\u56fe\u62b9\u5e73\u4efb\u4f55\u5bc6\u5ea6\u5dee\u5f02\uff0c\u5c06\u56e2\u7c07\u548c\u7ed3\u6784\u201c\u6eb6\u89e3\u201d\u6389\u3002</p> </li> <li> <p>\u76f8\u4e92\u4f5c\u7528\u6f02\u79fb (\\(\\frac{D}{k_B T} \\nabla \\cdot (n \\nabla u)\\)): \u8fd9\u662f\u80fd\u91cf\u7684\u4f53\u73b0\uff0c\u4e00\u79cd\u6784\u5efa\u7ed3\u6784\u7684\u529b\u91cf\u3002\u5bf9\u4e8e\u5438\u5f15\u76f8\u4e92\u4f5c\u7528\uff0c\u5b83\u4f1a\u653e\u5927\u5fae\u5c0f\u7684\u5bc6\u5ea6\u4e0d\u5747\u5300\u6027\uff0c\u5c06\u7c92\u5b50\u62c9\u5411\u9ad8\u5bc6\u5ea6\u533a\u57df\uff0c\u662f\u5f62\u6210\u56e2\u7c07\u548c\u76f8\u5206\u79bb\u7684\u9a71\u52a8\u529b\u3002</p> </li> <li> <p>\u566a\u58f0 (\\(\\nabla \\cdot ( \\sqrt{2Dn} \\, \\vec{\\eta} )\\)): \u8fd9\u662f\u968f\u673a\u6027\u7684\u4f53\u73b0\uff0c\u662f\u7cfb\u7edf\u6f14\u5316\u7684\u201c\u50ac\u5316\u5242\u201d\u548c\u201c\u63a2\u9669\u5bb6\u201d\u3002\u5b83\u6e90\u4e8e\u7c92\u5b50\u8fd0\u52a8\u7684\u79bb\u6563\u6027\uff0c\u4e0d\u65ad\u5730\u968f\u673a\u6270\u52a8\u7cfb\u7edf\uff0c\u4e3a\u76f8\u4e92\u4f5c\u7528\u6f02\u79fb\u63d0\u4f9b\u4e86\u53ef\u4ee5\u653e\u5927\u7684\u521d\u59cb\u201c\u79cd\u5b50\u201d\uff0c\u662f\u65b0\u7ed3\u6784\u840c\u53d1\u7684\u6e90\u6cc9\u3002</p> </li> </ol> <p>\u4e0b\u8868\u6e05\u6670\u5730\u603b\u7ed3\u4e86\u4f5c\u7528\u91cf\u4e2d\u5404\u9879\u4e0e\u6717\u4e4bvis\u65b9\u7a0b\u4e2d\u5404\u9879\u53ca\u5176\u7269\u7406\u610f\u4e49\u7684\u5bf9\u5e94\u5173\u7cfb\u3002</p> <p>\u88681\uff1a\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u7cfb\u7edf\u4f5c\u7528\u91cf\u7684\u5256\u6790</p> \u4f5c\u7528\u91cf\u4e2d\u7684\u9879 \u6717\u4e4b\u4e07\u65b9\u7a0b\u4e2d\u7684\u9879 \u7269\u7406\u610f\u4e49 \\(i\\tilde{n} \\partial_t n\\) \\(\\partial_t n\\) \u65f6\u95f4\u6f14\u5316\uff1a\u5b9a\u4e49\u4e86\u52a8\u529b\u5b66\u672c\u8eab\u3002 \\(-i\\tilde{n} D \\nabla^2 n\\) \\(D \\nabla^2 n\\) \u786e\u5b9a\u6027\u6269\u6563\uff1a\u71b5\u9a71\u52a8\u7684\u5747\u5300\u5316\u8fc7\u7a0b (\u83f2\u514b\u5b9a\u5f8b)\u3002 \\(-i\\tilde{n} \\frac{D}{k_B T} \\nabla \\cdot (n \\nabla u)\\) \\(\\frac{D}{k_B T} \\nabla \\cdot (n \\nabla u)\\) \u76f8\u4e92\u4f5c\u7528\u6f02\u79fb\uff1a\u80fd\u91cf\u9a71\u52a8\u7684\u7ed3\u6784\u5f62\u6210\u8fc7\u7a0b\u3002 \\(-D n (\\nabla i\\tilde{n})^2\\) \\(\\nabla \\cdot ( \\sqrt{2Dn} \\, \\vec{\\eta} )\\) \u4e58\u6027\u6269\u6563\u566a\u58f0\uff1a\u6e90\u4e8e\u7c92\u5b50\u79bb\u6563\u6027\u7684\u968f\u673a\u6da8\u843d (\u6563\u7c92\u566a\u58f0)\u3002"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#5","title":"5. \u4ee3\u7801\u5b9e\u8df5\uff1a\u4ece\u7b80\u5355\u89c4\u5219\u5230\u7fa4\u4f53\u7684\u6d8c\u73b0","text":"<p>\u4e0a\u4e00\u5c0f\u8282\u6700\u7ec8\u63a8\u5bfc\u51fa\u4e86\u63cf\u8ff0\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u7684\u968f\u673a\u573a\u8bba\uff08Dean-Kawasaki\u65b9\u7a0b\uff09\uff0c\u6210\u529f\u5730\u5c06\u6269\u6563\u3001\u566a\u58f0\u548c\u57fa\u4e8e\u7269\u7406\u529b\u7684\u76f8\u4e92\u4f5c\u7528\u7edf\u4e00\u5728\u4e86\u4e00\u4e2a\u6846\u67b6\u5185\u3002\u4e3a\u4e86\u66f4\u76f4\u89c2\u5c55\u793a\u8fd9\u4e00\u7406\u8bba\u6846\u67b6\uff0c\u4ee3\u7801\u5b9e\u8df5\u5c06\u5b9e\u73b0\u4e00\u4e2a\u66f4\u524d\u6cbf\u3001\u66f4\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u5176\u201c\u76f8\u4e92\u4f5c\u7528\u201d\u4e0d\u518d\u662f\u7b80\u5355\u7684\u7269\u7406\u63a8\u62c9\uff0c\u800c\u662f\u57fa\u4e8e\u4fe1\u606f\u4f20\u9012\u7684\u5bf9\u9f50\u884c\u4e3a\u2014\u2014\u8fd9\u6b63\u662f\u5bf9\u771f\u5b9e\u690b\u9e1f\u98de\u884c\u7b49\u751f\u7269\u7fa4\u4f53\u884c\u4e3a\u7684\u62bd\u8c61\u3002</p> <p>\u8fd9\u6b21\u6a21\u62df\u5c06\u590d\u73b0\u9886\u57df\u5185\u6781\u5177\u5f71\u54cd\u529b\u7684\u60ef\u6027\u81ea\u65cb\u6a21\u578b (Inertial Spin Model) \u3002\u5176\u76ee\u662f\u4e3a\u4e86\u4ece\u4e09\u4e2a\u5c42\u9762\u6df1\u523b\u5730\u547c\u5e94\u8fd9\u8282\u7684\u6838\u5fc3\u601d\u60f3\uff1a</p> <p>\u6a21\u62df\u4e2d\u201c\u4fe1\u606f\u6ce2\u201d\u548c\u5168\u5c40\u6709\u5e8f\u9e1f\u7fa4\u7684\u6d8c\u73b0\uff0c\u6b63\u662f\u8fd9\u7cfb\u5217\u53d1\u5c55\u7684\u573a\u8bba\u5de5\u5177\u6240\u81f4\u529b\u4e8e\u89e3\u91ca\u548c\u9884\u6d4b\u7684\u3001\u6700\u524d\u6cbf\u7684\u975e\u5e73\u8861\u96c6\u4f53\u73b0\u8c61\u3002\u60ef\u6027\u81ea\u65cb\u6a21\u578b\u5f15\u5165\u4e86\u65b0\u7684\u5185\u90e8\u81ea\u7531\u5ea6\uff08\u89d2\u901f\u5ea6\uff09\uff0c\u6784\u6210\u4e86\u4e00\u5957\u66f4\u590d\u6742\u7684\u8026\u5408\u6717\u4e4b\u4e07\u65b9\u7a0b\u3002\u8fd9\u7cfb\u5217\u8bfe\u7a0b\u5efa\u7acb\u7684\u3001\u4ece\u5fae\u89c2\u968f\u673a\u89c4\u5219\u51fa\u53d1\u6784\u5efa\u8def\u5f84\u79ef\u5206\u7684\u201c\u7406\u8bba\u673a\u5668\u201d\uff0c\u5176\u539f\u7406\u540c\u6837\u9002\u7528\u4e8e\u8fd9\u7c7b\u66f4\u9ad8\u7ea7\u3001\u66f4\u8d34\u8fd1\u751f\u7269\u73b0\u5b9e\u7684\u7cfb\u7edf\u3002</p> <p>\u56e0\u6b64\uff0c\u8fd9\u6b21\u6a21\u62df\u5c06\u4ee5\u6700\u76f4\u89c2\u7684\u65b9\u5f0f\uff0c\u5b8c\u6210\u672c\u8bfe\u7a0b\u4ece\u59cb\u81f3\u7ec8\u7684\u4e3b\u9898\u2014\u2014\u89c1\u8bc1\u6700\u7b80\u5355\u7684\u5fae\u89c2\u89c4\u5219\uff08\u4e2a\u4f53\u95f4\u7684\u5c40\u90e8\u5bf9\u9f50\uff09\u662f\u5982\u4f55\u901a\u8fc7\u591a\u4f53\u7cfb\u7edf\u7684\u975e\u7ebf\u6027\u52a8\u529b\u5b66\uff0c\u81ea\u4e0b\u800c\u4e0a\u5730\u6d8c\u73b0\u51fa\u5b8f\u4f1f\u3001\u6709\u5e8f\u4e14\u5145\u6ee1\u201c\u751f\u547d\u611f\u201d\u7684\u5b8f\u89c2\u96c6\u4f53\u8fd0\u52a8\u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#51","title":"5.1 \u7406\u8bba\u7684\u6e90\u5934\uff1a\u6765\u81ea\u771f\u5b9e\u9e1f\u7fa4\u7684\u7269\u7406\u96be\u9898","text":"<p>\u572821\u4e16\u7eaa\u521d\uff0c\u4e00\u4e2a\u7531\u7269\u7406\u5b66\u5bb6 Andrea Cavagna\u3001Irene Giardina \u4ee5\u53ca\u540e\u6765\u7684\u8bfa\u8d1d\u5c14\u7269\u7406\u5b66\u5956\u5f97\u4e3b\u4e54\u6cbb\u00b7\u5e15\u91cc\u897f (Giorgio Parisi) \u7b49\u4eba\u7ec4\u6210\u7684\u7814\u7a76\u56e2\u961f\u5b8c\u6210\u4e86\u4e00\u9879\u58ee\u4e3e\uff1a\u4ed6\u4eec\u5229\u7528\u591a\u53f0\u9ad8\u901f\u6444\u50cf\u673a\uff0c\u4ee5\u524d\u6240\u672a\u6709\u7684\u7cbe\u5ea6\u4e09\u7ef4\u91cd\u5efa\u4e86\u7f57\u9a6c\u8857\u5934\u6570\u5343\u53ea\u690b\u9e1f\u7ec4\u6210\u7684\u5e9e\u5927\u9e1f\u7fa4\u7684\u98de\u884c\u8f68\u8ff9\u3002\u8fd9\u4e9b\u6d77\u91cf\u7684\u3001\u771f\u5b9e\u7684\u6570\u636e\u63ed\u793a\u4e86\u4e24\u4e2a\u7ecf\u5178\u6a21\u578b\uff08\u5982Vicsek\u6a21\u578b\uff09\u65e0\u6cd5\u89e3\u91ca\u7684\u60ca\u4eba\u73b0\u8c61\uff1a</p> <ol> <li> <p>\u65e0\u6807\u5ea6\u7684\u5173\u8054 (Scale-free Correlations) : \u4ed6\u4eec\u53d1\u73b0\uff0c\u4e00\u53ea\u9e1f\u7684\u901f\u5ea6\u6da8\u843d\u4f1a\u4e0e\u9e1f\u7fa4\u4e2d\u6240\u6709\u5176\u4ed6\u9e1f\u4ea7\u751f\u5173\u8054\uff0c\u4e14\u8fd9\u79cd\u5173\u8054\u7684\u5f3a\u5ea6\u4e0d\u968f\u8ddd\u79bb\u8870\u51cf\u3002\u8fd9\u610f\u5473\u7740\u9e1f\u7fa4\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u8868\u73b0\u5f97\u50cf\u4e00\u4e2a\u5904\u4e8e\u201c\u4e34\u754c\u70b9\u201d\u7684\u7269\u7406\u7cfb\u7edf\uff0c\u80fd\u591f\u5bf9\u5916\u90e8\u6270\u52a8\uff08\u5982\u5929\u654c\uff09\u505a\u51fa\u6781\u5176\u9ad8\u6548\u7684\u96c6\u4f53\u54cd\u5e94\u3002</p> </li> <li> <p>\u58f0\u6ce2\u822c\u7684\u201c\u4fe1\u606f\u6ce2\u201d : \u5f53\u9e1f\u7fa4\u8f6c\u5411\u65f6\uff0c\u8f6c\u5411\u7684\u201c\u6307\u4ee4\u201d\u5e76\u975e\u50cf\u70ed\u91cf\u4e00\u6837\u5728\u7fa4\u4f53\u4e2d\u7f13\u6162\u6269\u6563\uff0c\u800c\u662f\u4ee5\u4e00\u79cd\u6052\u5b9a\u7684\u3001\u8fdc\u8d85\u6269\u6563\u7684\u901f\u5ea6\uff0c\u50cf\u58f0\u6ce2\u4e00\u6837\u5728\u7fa4\u4f53\u4e2d\u4f20\u64ad\u3002</p> </li> </ol> <p>\u8fd9\u4e24\u4e2a\u89c2\u6d4b\u4e8b\u5b9e\u90fd\u6307\u5411\u4e00\u4e2a\u7ed3\u8bba\uff1a\u9e1f\u7fa4\u7684\u52a8\u529b\u5b66\u4e2d\u5fc5\u7136\u5b58\u5728\u4e00\u4e2aVicsek\u6a21\u578b\u5ffd\u7565\u4e86\u7684\u5173\u952e\u7269\u7406\u6210\u5206\u3002\u8fd9\u4e2a\u6210\u5206\uff0c\u5c31\u662f\u60ef\u6027\u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#52","title":"5.2 \u5fae\u89c2\u52a8\u529b\u5b66\u6a21\u578b\uff1a\u60ef\u6027\u81ea\u65cb\u6a21\u578b","text":"<p>\u4e3a\u4e86\u89e3\u91ca\u4e0a\u8ff0\u96be\u9898\uff0c\u8be5\u7814\u7a76\u56e2\u961f\u63d0\u51fa\u4e86\u60ef\u6027\u81ea\u65cb\u6a21\u578b (Inertial Spin Model, ISM)\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u4e2a\u4f53\u7684\u65b9\u5411 \\(\u03b8\\) \u4e0d\u80fd\u77ac\u65f6\u6539\u53d8\uff0c\u5b83\u7684\u53d8\u5316\u7387\u7531\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u2014\u2014\u89d2\u901f\u5ea6 \\(\u03c9\\)\u2014\u2014\u6240\u51b3\u5b9a\u3002\u8fd9\u5957\u201c\u4e8c\u9636\u201d\u52a8\u529b\u5b66\u5b8c\u7f8e\u5730\u5f15\u5165\u4e86\u60ef\u6027\uff1a</p> <ol> <li> <p>\u89d2\u52a0\u901f\u5ea6\u65b9\u7a0b: \u4e2a\u4f53\u89d2\u901f\u5ea6\u7684\u53d8\u5316\uff0c\u7531\u4e09\u4e2a\u201c\u529b\u77e9\u201d\u5171\u540c\u51b3\u5b9a\uff1a </p> \\[ I \\frac{d\\omega_i}{dt} = -\\gamma_r \\omega_i + F_i^{\\text{align}} + \\eta_i^{\\text{torque}}(t) \\] </li> </ol> <p>\u60ef\u6027 (\\(I\\)): \\(I\\) \u662f\u8f6c\u52a8\u60ef\u91cf\uff0c\u4ee3\u8868\u4e2a\u4f53\u62b5\u6297\u89d2\u901f\u5ea6\u53d8\u5316\u7684\u201c\u60f0\u6027\u201d\u3002\u60ef\u6027\u8d8a\u5927\uff0c\u8f6c\u5411\u8d8a\u201c\u8fdf\u949d\u201d\u3002</p> <p>\u8f6c\u52a8\u6469\u64e6 (\\(-\\gamma_r \\omega_i\\)): \u4eff\u4f5b\u7a7a\u6c14\u963b\u529b\u4e00\u822c\uff0c\u4f7f\u4e2a\u4f53\u7684\u8f6c\u52a8\u8d8b\u4e8e\u5e73\u606f\uff0c\u503e\u5411\u4e8e\u76f4\u7ebf\u98de\u884c\u3002</p> <p>\u5bf9\u9f50\u529b\u77e9 (\\(F_i^{\\text{align}}\\)): \u8fd9\u662f\u6765\u81ea\u90bb\u5c45\u7684\u201c\u540c\u4f34\u538b\u529b\u201d\u6216\u201c\u793e\u4f1a\u529b\u77e9\u201d\uff0c\u5b83\u6b63\u6bd4\u4e8e\u4e2a\u4f53\u5f53\u524d\u65b9\u5411\u4e0e\u90bb\u5c45\u5e73\u5747\u65b9\u5411\u7684\u5dee\u503c\uff0c\u9a71\u52a8\u4e2a\u4f53\u5411\u7fa4\u4f53\u5bf9\u9f50\u3002</p> <p>\u566a\u58f0\u529b\u77e9 (\\(\\eta_i^{\\text{torque}}\\)): \u4ee3\u8868\u4e2a\u4f53\u51b3\u7b56\u7684\u968f\u673a\u6027\u6216\u73af\u5883\u7684\u968f\u673a\u6270\u52a8\u3002</p> <ol> <li> <p>\u89d2\u5ea6\u66f4\u65b0\u65b9\u7a0b: \u65b9\u5411\u7684\u53d8\u5316\u7387\u5c31\u662f\u89d2\u901f\u5ea6\uff0c\u8fd9\u662f\u8fd0\u52a8\u5b66\u7684\u57fa\u672c\u5b9a\u4e49\uff1a     $$     \\frac{d\\theta_i}{dt} = \\omega_i     $$</p> </li> <li> <p>\u4f4d\u7f6e\u66f4\u65b0\u65b9\u7a0b: \u4e0e\u4e4b\u524d\u76f8\u540c\uff0c\u7531\u6052\u5b9a\u7684\u901f\u5ea6\u548c\u968f\u65f6\u95f4\u53d8\u5316\u7684\u65b9\u5411\u51b3\u5b9a\uff1a     $$     \\frac{d\\vec{r}_i}{dt} = v_0 \\begin{pmatrix} \\cos\\theta_i \\ \\sin\\theta_i \\end{pmatrix}     $$</p> </li> </ol> <p>\u8fd9\u4e2a\u6a21\u578b\u770b\u4f3c\u6bd4\u6211\u4eec\u4e4b\u524d\u5904\u7406\u7684\u6717\u4e4b\u4e07\u65b9\u7a0b\u66f4\u590d\u6742\uff0c\u4f46\u5b83\u7684\u672c\u8d28\u5e76\u672a\u8131\u79bb\u672c\u8bfe\u7a0b\u7684\u7406\u8bba\u6846\u67b6\u3002\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u7c92\u5b50\u7684\u72b6\u6001\u770b\u4f5c\u4e00\u4e2a\u7531\u4f4d\u7f6e \\((x, y)\\)\u3001\u89d2\u5ea6 \\(\u03b8\\) \u548c\u89d2\u901f\u5ea6 \\(\u03c9\\) \u6784\u6210\u7684\u9ad8\u7ef4\u72b6\u6001\u5411\u91cf\u3002\u4e0a\u8ff0\u65b9\u7a0b\u7ec4\u6b63\u662f\u4e00\u5957\u63cf\u8ff0\u8fd9\u4e2a\u9ad8\u7ef4\u5411\u91cf\u6f14\u5316\u7684\u8026\u5408\u6717\u4e4b\u4e07\u65b9\u7a0b\u3002\u539f\u5219\u4e0a\uff0c\u53ef\u4ee5\u8fd0\u7528\u672c\u8bfe\u7a0b\u53d1\u5c55\u7684\u8def\u5f84\u79ef\u5206\u6280\u672f\uff08\u5982KMPI\uff09\uff0c\u4e3a\u8fd9\u4e2a\u66f4\u590d\u6742\u7684\u3001\u5305\u542b\u201c\u52a8\u91cf\u201d\uff08\u89d2\u901f\u5ea6\uff09\u53d8\u91cf\u7684\u7cfb\u7edf\uff0c\u6784\u5efa\u4e00\u4e2a\u66f4\u4e3a\u4e30\u5bcc\u7684\u6709\u6548\u4f5c\u7528\u91cf\uff0c\u5e76\u63a8\u5bfc\u5176\u5b8f\u89c2\u7684\u573a\u8bba\u63cf\u8ff0\uff08\u5373\u5305\u542b\u60ef\u6027\u7684Toner-Tu\u7406\u8bba\uff09\u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#53-python","title":"5.3 Python \u5b9e\u73b0\uff1a\u60ef\u6027\u9e1f\u7fa4\u6a21\u62df\u5668","text":"<p>\u4ee3\u7801\u5728Vicsek\u6a21\u578b\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u5347\u7ea7\uff0c\u5f15\u5165\u4e86\u89d2\u901f\u5ea6\u4f5c\u4e3a\u6838\u5fc3\u53d8\u91cf\uff0c\u5e76\u76f8\u5e94\u5730\u4fee\u6539\u4e86\u66f4\u65b0\u89c4\u5219\u3002\u5bf9\u9f50\u89c4\u5219\u4ece\u76f4\u63a5\u8bbe\u5b9a\u89d2\u5ea6\uff0c\u53d8\u4e3a\u4e86\u65bd\u52a0\u4e00\u4e2a\u6539\u53d8\u89d2\u901f\u5ea6\u7684\u201c\u529b\u77e9\u201d\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\nfrom scipy.spatial import KDTree\n\ndef simulate_inertial_flocking(\n    num_particles=400, box_size=100.0, v0=0.5,\n    R=10.0, dt=0.2, total_time=400.0\n):\n    \"\"\"\n    Simulates the Inertial Spin Model for collective motion,\n    showcasing realistic turning waves.\n    \"\"\"\n    # Model parameters\n    inertia = 0.5  # Moment of inertia\n    friction = 0.2 # Rotational friction\n    align_strength = 0.5 # How strongly individuals align\n\n    # Initialization\n    positions = np.random.rand(num_particles, 2) * box_size\n    orientations = np.random.rand(num_particles) * 2 * np.pi\n    angular_velocities = np.zeros(num_particles)\n\n    # --- Animation Setup ---\n    fig, ax = plt.subplots(figsize=(10, 10))\n    fig.patch.set_facecolor('black')\n    ax.set_facecolor('black')\n    ax.set_xlim(0, box_size)\n    ax.set_ylim(0, box_size)\n    ax.set_xticks([])\n    ax.set_yticks([])\n\n    quiver = ax.quiver(\n        positions[:, 0], positions[:, 1],\n        np.cos(orientations), np.sin(orientations),\n        color='cyan', scale=40, headwidth=4, pivot='middle'\n    )\n    title = ax.set_title(\"Disordered State | t = 0.0\", color='white', fontsize=16)\n\n    noise_strength = 0.1 # Constant low noise\n\n    def update(frame):\n        nonlocal positions, orientations, angular_velocities\n\n        # --- Find neighbors using KDTree ---\n        tree = KDTree(positions, boxsize=[box_size, box_size])\n        neighbor_indices = tree.query_ball_point(positions, r=R)\n\n        # --- Calculate Alignment Torques ---\n        align_torques = np.zeros(num_particles)\n        for i in range(num_particles):\n            neighbors = neighbor_indices[i]\n            if len(neighbors) &gt; 1:\n                # Calculate the vector difference to the mean orientation\n                # This is a more stable way to calculate the torque\n                mean_vec = np.array([\n                    np.mean(np.cos(orientations[neighbors])),\n                    np.mean(np.sin(orientations[neighbors]))\n                ])\n                # The torque is proportional to the \"cross product\" in 2D\n                # (sin(theta_mean - theta_i))\n                current_vec = np.array([np.cos(orientations[i]), np.sin(orientations[i])])\n                # Normalize mean_vec to avoid magnitude effects\n                mean_vec /= np.linalg.norm(mean_vec)\n                # Torque is sin of angle difference: u x v = u_x v_y - u_y v_x\n                torque = current_vec[0]*mean_vec[1] - current_vec[1]*mean_vec[0]\n                align_torques[i] = align_strength * torque\n\n        # --- Update Angular Velocities (Second-order dynamics) ---\n        random_torques = noise_strength * (np.random.rand(num_particles) - 0.5)\n        angular_accelerations = (\n            -friction * angular_velocities + align_torques + random_torques\n        ) / inertia\n        angular_velocities += angular_accelerations * dt\n\n        # --- Update Orientations and Positions ---\n        orientations += angular_velocities * dt\n        positions[:, 0] += v0 * np.cos(orientations) * dt\n        positions[:, 1] += v0 * np.sin(orientations) * dt\n\n        # Periodic boundary conditions\n        positions %= box_size\n\n        # --- Update Visualization ---\n        quiver.set_offsets(positions)\n        quiver.set_UVC(np.cos(orientations), np.sin(orientations))\n\n        title.set_text(f\"Inertial Flocking | t = {frame*dt:.1f}\")\n        return quiver, title\n\n    ani = FuncAnimation(\n        fig, update, frames=int(total_time / dt),\n        blit=True, interval=20\n    )\n    ani.save('inertial_flocking.gif', writer='pillow', fps=30)\n    plt.show()\n\n# Run the simulation\nsimulate_inertial_flocking(num_particles=300, R=8.0)\n</code></pre> <p>\u8fd0\u884c\u4ee3\u7801\u8f93\u51fa</p> <p>\u5e73\u6ed1\u7684\u96c6\u4f53\u52a8\u6001\uff1a\u4e0eVicsek\u6a21\u578b\u6700\u76f4\u89c2\u7684\u533a\u522b\u662f\uff0c\u6574\u4e2a\u7fa4\u4f53\u7684\u8fd0\u52a8\u6781\u5176\u5e73\u6ed1\u3001\u8fde\u8d2f\u3002\u5f53\u7fa4\u4f53\u8f6c\u5411\u65f6\uff0c\u5b83\u4e0d\u518d\u662f\u751f\u786c\u7684\u201c\u6298\u65ad\u201d\uff0c\u800c\u662f\u50cf\u4e00\u6574\u5757\u67d4\u8f6f\u7684\u7ef8\u7f0e\u5728\u7a7a\u4e2d\u98d8\u821e\uff0c\u5c55\u73b0\u51fa\u4f18\u7f8e\u7684\u5f27\u7ebf\u3002\u8fd9\u6b63\u662f\u60ef\u6027\u7684\u76f4\u63a5\u4f53\u73b0\u3002</p> <p>\u4fe1\u606f\u6ce2\u7684\u4f20\u64ad\uff1a\u4ed4\u7ec6\u89c2\u5bdf\u7fa4\u4f53\u7684\u8f6c\u5411\u8fc7\u7a0b\u4f1a\u53d1\u73b0\uff0c\u8f6c\u5411\u7684\u201c\u51b3\u7b56\u201d\u5f80\u5f80\u4ece\u7fa4\u4f53\u7684\u67d0\u4e2a\u5c40\u90e8\u5f00\u59cb\uff0c\u7136\u540e\u50cf\u4e00\u9053\u6ce2\u7eb9\u4e00\u6837\uff0c\u8fc5\u901f\u4f46\u4ee5\u6709\u9650\u901f\u5ea6\u4f20\u64ad\u5230\u6574\u4e2a\u7fa4\u4f53\u3002\u4e00\u4e2a\u7c92\u5b50\u8f6c\u5411\uff0c\u901a\u8fc7\u5bf9\u9f50\u529b\u77e9\u201c\u62c9\u52a8\u201d\u5b83\u7684\u90bb\u5c45\uff0c\u90bb\u5c45\u518d\u62c9\u52a8\u90bb\u5c45\u7684\u90bb\u5c45\u2026\u2026\u60ef\u6027\u4f7f\u5f97\u8fd9\u4e2a\u62c9\u52a8\u8fc7\u7a0b\u9700\u8981\u65f6\u95f4\uff0c\u4ece\u800c\u5f62\u6210\u4e86\u8089\u773c\u53ef\u89c1\u7684\u4fe1\u606f\u6ce2\u3002\u8fd9\u4e0e\u771f\u5b9e\u690b\u9e1f\u7fa4\u4e2d\u89c2\u5bdf\u5230\u7684\u73b0\u8c61\u4e00\u81f4\u3002</p> <p>\u9ad8\u5ea6\u7684\u5185\u90e8\u79e9\u5e8f\uff1a\u5728\u6709\u5e8f\u72b6\u6001\u4e0b\uff0c\u5c3d\u7ba1\u6574\u4e2a\u7fa4\u4f53\u5728\u8fdb\u884c\u590d\u6742\u7684\u8f6c\u5f2f\u548c\u673a\u52a8\uff0c\u4f46\u5176\u5185\u90e8\u7684\u4e2a\u4f53\u6392\u5217\u548c\u65b9\u5411\u534f\u540c\u6027\u975e\u5e38\u9ad8\u3002\u60ef\u6027\u548c\u8f6c\u52a8\u6469\u64e6\u5171\u540c\u4f5c\u7528\uff0c\u6709\u6548\u5730\u6291\u5236\u4e86\u4e2a\u4f53\u504f\u79bb\u7fa4\u4f53\u65b9\u5411\u7684\u5267\u70c8\u6da8\u843d\uff0c\u4f7f\u5f97\u7fa4\u4f53\u8868\u73b0\u5f97\u5982\u4e00\u4e2a\u9ad8\u5ea6\u534f\u8c03\u7684\u201c\u8d85\u4e2a\u4f53\u201d\u3002</p> <p>\u8fd9\u4e2a\u6a21\u62df\u4ece\u7b80\u5355\u7684\u7c92\u5b50\u7269\u7406\uff0c\u4e00\u8def\u5230\u4e86\u590d\u6742\u751f\u547d\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u95e8\u524d\u3002\u5728\u6574\u4e2a\u8bfe\u7a0b\u4e2d\u6240\u5b66\u7684\u7406\u8bba\u5de5\u5177\u2014\u2014\u4ece\u4e3b\u65b9\u7a0b\u3001\u8def\u5f84\u79ef\u5206\u5230\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u2014\u2014\u4e0d\u4ec5\u4ec5\u662f\u6c42\u89e3\u7269\u7406\u4e60\u9898\u7684\u5de5\u5177\uff0c\u66f4\u662f\u6211\u4eec\u7406\u89e3\u548c\u6a21\u62df\u4ece\u7c92\u5b50\u5230\u751f\u547d\u3001\u4ece\u65e0\u5e8f\u5230\u6709\u5e8f\u8fd9\u4e00\u5b8f\u4f1f\u5b87\u5b99\u56fe\u666f\u7684\u5f3a\u5927\u601d\u60f3\u6b66\u5668\u3002</p>"},{"location":"zh/notes/40.%20%E7%BB%9F%E4%B8%80%E7%9A%84%E5%9C%BA%E8%AE%BA%E6%A1%86%E6%9E%B6/#_2","title":"\u7ed3\u8bba\uff1a\u4e00\u4e2a\u7edf\u4e00\u7684\u89c6\u89d2","text":"<p>\u8fd9\u8282\u8bfe\u4f5c\u4e3a\u6574\u4e2a\u7cfb\u5217\u8bfe\u7a0b\u7684\u7ec8\u7ae0\uff0c\u5b8c\u6210\u4e86\u4ece\u5fae\u89c2\u968f\u673a\u89c4\u5219\u5230\u5b8f\u89c2\u8fde\u7eed\u573a\u8bba\u7684\u6784\u5efa\u3002\u901a\u8fc7\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206 (KMPI) \u8fd9\u4e00\u5f3a\u5927\u800c\u7cfb\u7edf\u6027\u7684\u5de5\u5177\uff0c\u6700\u7ec8\u5c06\u6269\u6563\u3001\u5316\u5b66\u53cd\u5e94\u548c\u7c92\u5b50\u95f4\u76f8\u4e92\u4f5c\u7528\u8fd9\u4e09\u79cd\u6838\u5fc3\u7684\u7269\u7406\u8fc7\u7a0b\uff0c\u65e0\u7f1d\u5730\u6574\u5408\u8fdb\u4e00\u4e2a\u7edf\u4e00\u3001\u81ea\u6d3d\u7684\u7406\u8bba\u6846\u67b6\u4e2d\u3002</p> <p>\u56de\u987e\u8fd9\u8d9f\u65c5\u7a0b\uff0c\u4e00\u6761\u6e05\u6670\u7684\u7406\u8bba\u6784\u5efa\u8def\u5f84\u5df2\u7136\u94fa\u5c31\uff1a</p> <p>\u4ece\u5fae\u89c2\u89c4\u5219\u51fa\u53d1: \u6574\u4e2a\u7406\u8bba\u7684\u57fa\u77f3\uff0c\u662f\u63cf\u8ff0\u5355\u4e2a\u3001\u79bb\u6563\u968f\u673a\u4e8b\u4ef6\u7684\u4e3b\u65b9\u7a0b\u3002\u8bfe\u7a0b\u5c55\u793a\u4e86\u5982\u4f55\u5c06\u79bb\u6563\u7684\u5316\u5b66\u53cd\u5e94\u548c\u8df3\u8dc3\u89c4\u5219\uff0c\u901a\u8fc7KMPI\u8f6c\u5316\u4e3a\u8def\u5f84\u79ef\u5206\u4f5c\u7528\u91cf\u4e2d\u4e00\u4e2a\u7b80\u6d01\u7684\u6307\u6570\u9879\uff0c\u8be5\u9879\u5df2\u7136\u5305\u542b\u4e86\u786e\u5b9a\u6027\u52a8\u529b\u5b66\uff08\u4e00\u9636\u77e9\uff09\u548c\u968f\u673a\u7684\u4eba\u53e3\u566a\u58f0\uff08\u4e8c\u9636\u77e9\uff09\u7684\u5168\u90e8\u4fe1\u606f\u3002</p> <p>\u63a8\u5bfc\u5b8f\u89c2\u7406\u8bba: \u8bfe\u7a0b\u7684\u6838\u5fc3\u5185\u5bb9\uff0c\u662f\u4ece\u4e00\u4e2a\u57fa\u4e8e\u7269\u7406\u76f4\u89c9\u7684\u3001\u4f9d\u8d56\u4e8e\u80fd\u91cf\u7684\u5fae\u89c2\u8df3\u8dc3\u6a21\u578b\u51fa\u53d1\uff0c\u901a\u8fc7\u7cfb\u7edf\u6027\u7684\u5c55\u5f00\u548c\u7c97\u7c92\u5316\uff0c\u4ece\u7b2c\u4e00\u6027\u539f\u7406\u63a8\u5bfc\u51fa\u4e86\u63cf\u8ff0\u76f8\u4e92\u4f5c\u7528\u7c92\u5b50\u7cfb\u7edf\u7684\u968f\u673a\u504f\u5fae\u5206\u65b9\u7a0b\uff08Dean-Kawasaki\u65b9\u7a0b\uff09\u3002\u6700\u7ec8\u5f97\u5230\u7684\u65b9\u7a0b\u4e0d\u662f\u4e00\u4e2a\u552f\u8c61\u7684\u5047\u8bbe\uff0c\u800c\u662f\u5fae\u89c2\u7269\u7406\u89c4\u5f8b\u5728\u5b8f\u89c2\u5c3a\u5ea6\u4e0a\u7684\u76f4\u63a5\u3001\u6df1\u523b\u7684\u4f53\u73b0\u3002</p> <p>\u8fd9\u8282\u8bfe\u4ecb\u7ecd\u7684\u662f\u4e00\u79cd\u666e\u9002\u7684\u7406\u8bba\u6784\u5efa\u65b9\u6cd5\u8bba\u3002\u514b\u83b1\u9ed8-\u83ab\u4e9a\u5c14\u8def\u5f84\u79ef\u5206\u5206\u4f5c\u4e3a\u4e00\u4e2a\u201c\u7406\u8bba\u6784\u5efa\u673a\u5668\u201d\uff0c\u5176\u5e94\u7528\u8303\u56f4\u4e5f\u8fdc\u8d85\u4f20\u7edf\u7684\u7269\u7406\u5b66\u8fb9\u754c\u3002\u5728\u751f\u7269\u5b66\u4e2d\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u5efa\u7acb\u79cd\u7fa4\u52a8\u6001\u3001\u7ec6\u80de\u8d8b\u5316\u548c\u751f\u7269\u6a21\u5f0f\u5f62\u6210\u7684\u7406\u8bba\uff1b\u5728\u751f\u6001\u5b66\u4e2d\uff0c\u53ef\u4ee5\u6a21\u62df\u6355\u98df\u8005-\u88ab\u6355\u98df\u8005\u7cfb\u7edf\u7684\u7a7a\u95f4\u5206\u5e03\u6f14\u5316\uff1b\u751a\u81f3\u5728\u6700\u7ec8\u7684\u4ee3\u7801\u5b9e\u8df5\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5176\u601d\u60f3\u4e5f\u5ef6\u4f38\u81f3\u4e86\u63cf\u8ff0\u9e1f\u7fa4\u3001\u9c7c\u7fa4\u4e43\u81f3\u4eba\u7fa4\u7b49\u751f\u547d\u7cfb\u7edf\u4e2d\uff0c\u7531\u4fe1\u606f\u4f20\u9012\u800c\u975e\u7269\u7406\u529b\u4e3b\u5bfc\u7684\u96c6\u4f53\u884c\u4e3a\u3002</p> <p>\u901a\u8fc7\u672c\u7cfb\u5217\u8bfe\u7a0b\u7684\u5b66\u4e60\uff0c\u6211\u4eec\u57fa\u672c\u4e86\u89e3\u73b0\u4ee3\u975e\u5e73\u8861\u7edf\u8ba1\u529b\u5b66\u4e2d\u6700\u5f3a\u5927\u7684\u7406\u8bba\u5de5\u5177\u4e4b\u4e00\uff0c\u62e5\u6709\u4e86\u4ece\u5fae\u89c2\u968f\u673a\u4e8b\u4ef6\u51fa\u53d1\uff0c\u7406\u89e3\u548c\u9884\u6d4b\u5b8f\u89c2\u96c6\u4f53\u884c\u4e3a\u7684\u7406\u8bba\u80fd\u529b\u3002\u8fd9\u65e2\u662f\u4e00\u5ea7\u8fde\u63a5\u5fae\u89c2\u89c4\u5219\u4e0e\u5b8f\u89c2\u73b0\u8c61\u4e16\u754c\u7684\u575a\u5b9e\u6865\u6881\uff0c\u4e5f\u662f\u4e00\u67c4\u5f00\u542f\u66f4\u524d\u6cbf\u7814\u7a76\u9886\u57df\uff08\u5982\u6d3b\u6027\u7269\u8d28\u3001\u751f\u547d\u7269\u7406\u3001\u590d\u6742\u7cfb\u7edf\uff09\u7684\u94a5\u5319\u3002</p> <p>\u773c\u524d\u7684\u7ec8\u70b9\uff0c\u4ea6\u662f\u5168\u65b0\u63a2\u7d22\u7684\u8d77\u70b9\uff01</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/","title":"\u5f15\u8a00\uff1a\u5c06\u968f\u673a\u5de5\u5177\u5305\u5e94\u7528\u4e8e\u751f\u547d\u52a8\u6001\u5b66","text":"<p>\u5728\u524d\u51e0\u8282\u8bfe\u4e2d\uff0c\u6559\u6388\u5df2\u7ecf\u5e2e\u6211\u4eec\u5efa\u7acb\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u7406\u8bba\u6846\u67b6\u6765\u63cf\u8ff0\u968f\u673a\u8fc7\u7a0b\u3002\u672c\u8282\u8bfe\u5c06\u8fd9\u4e9b\u62bd\u8c61\u7684\u5de5\u5177\u5e94\u7528\u4e8e\u4e00\u4e2a\u5177\u4f53\u4e14\u91cd\u8981\u7684\u9886\u57df\uff1a\u79cd\u7fa4\u52a8\u529b\u5b66\u3002\u8fd9\u8282\u8bfe\u7684\u76ee\u6807\u662f\u5229\u7528\u6211\u4eec\u5b66\u5230\u7684\u77e5\u8bc6\u6765\u6a21\u62df\u7531\u79bb\u6563\u4e2a\u4f53\u7ec4\u6210\u7684\u79cd\u7fa4\u7684\u751f\u3001\u6b7b\u548c\u76f8\u4e92\u4f5c\u7528\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#1","title":"1. \u6838\u5fc3\u6982\u5ff5\u56de\u987e","text":"<p>\u5728\u6df1\u5165\u7814\u7a76\u65b0\u7684\u6a21\u578b\u4e4b\u524d\uff0c\u6559\u6388\u5e26\u6211\u4eec\u7b80\u8981\u56de\u987e\u4e86\u4e00\u4e0b\u5de5\u5177\u7bb1\u4e2d\u7684\u51e0\u4e2a\u5173\u952e\u6982\u5ff5\uff1a</p> <p>\u4e3b\u65b9\u7a0b (Master Equation)\uff1a\u8fd9\u662f\u63cf\u8ff0\u968f\u673a\u7cfb\u7edf\u6982\u7387\u5206\u5e03\u968f\u65f6\u95f4\u6f14\u5316\u7684\u6838\u5fc3\u65b9\u7a0b\u3002\u5b83\u7684\u672c\u8d28\u601d\u60f3\u975e\u5e38\u76f4\u89c2\uff0c\u5373\u7cfb\u7edf\u5904\u4e8e\u67d0\u4e2a\u7279\u5b9a\u72b6\u6001 \\(n\\) \u7684\u6982\u7387 \\(p(n,t)\\) \u7684\u53d8\u5316\u7387\uff0c\u7b49\u4e8e\u4ece\u5176\u4ed6\u72b6\u6001\u8f6c\u79fb\u5230\u72b6\u6001 \\(n\\) \u7684\u901f\u7387\uff08\"\u589e\u76ca\"\u9879\uff09\u51cf\u53bb\u4ece\u72b6\u6001 \\(n\\) \u8f6c\u79fb\u5230\u5176\u4ed6\u72b6\u6001\u7684\u901f\u7387\uff08\"\u635f\u5931\"\u9879\uff09\u3002\u5176\u901a\u7528\u5f62\u5f0f\u4e3a\uff1a</p> \\[\\frac{d}{dt}p(n,t) = \\text{\"gain\"} - \\text{\"loss\"}\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u3001\u6982\u7387\u6027\u7684\u7cfb\u7edf\u63cf\u8ff0\u3002</p> <p>Gillespie \u7b97\u6cd5\uff1a\u4e3b\u65b9\u7a0b\u867d\u7136\u7cbe\u786e\uff0c\u4f46\u901a\u5e38\u662f\u4e00\u7ec4\u96be\u4ee5\u89e3\u6790\u6c42\u89e3\u7684\u8026\u5408\u5fae\u5206\u65b9\u7a0b\u3002Gillespie \u7b97\u6cd5\u662f\u4e00\u79cd\u7cbe\u5999\u7684\u6570\u503c\u65b9\u6cd5\uff0c\u5b83\u5e76\u975e\u5bf9\u4e3b\u65b9\u7a0b\u7684\u8fd1\u4f3c\uff0c\u800c\u662f\u5176\u7cbe\u786e\u7684\u968f\u673a\u5b9e\u73b0\u3002\u8be5\u7b97\u6cd5\u80fd\u591f\u751f\u6210\u4e00\u7cfb\u5217\u968f\u673a\u8f68\u8ff9\uff08stochastic trajectories\uff09\uff0c\u8fd9\u4e9b\u8f68\u8ff9\u7684\u7edf\u8ba1\u7279\u6027\u4e0e\u4e3b\u65b9\u7a0b\u6240\u63cf\u8ff0\u7684\u5b8c\u5168\u4e00\u81f4\u3002</p> <p>\u7406\u8bba\u4e0e\u6a21\u62df\u7684\u8054\u7cfb\uff1a\u7406\u8bba\uff08\u4e3b\u65b9\u7a0b\uff09\u548c\u6a21\u62df\uff08Gillespie \u7b97\u6cd5\uff09\u4e4b\u95f4\u5b58\u5728\u7740\u6df1\u523b\u7684\u8054\u7cfb\u3002\u5982\u679c\u6211\u4eec\u8fd0\u884c\u5927\u91cf\u7684 Gillespie \u6a21\u62df\uff0c\u5e76\u5728\u67d0\u4e2a\u7279\u5b9a\u65f6\u95f4\u70b9 \\(t\\) \u6536\u96c6\u6240\u6709\u8f68\u8ff9\u7684\u7cfb\u7edf\u72b6\u6001\uff08\u4f8b\u5982\uff0c\u79cd\u7fa4\u6570\u91cf \\(n\\)\uff09\uff0c\u7136\u540e\u7ed8\u5236\u8fd9\u4e9b\u72b6\u6001\u7684\u76f4\u65b9\u56fe\uff0c\u90a3\u4e48\u5f53\u6a21\u62df\u6b21\u6570\u8db3\u591f\u591a\u65f6\uff0c\u8fd9\u4e2a\u76f4\u65b9\u56fe\u5c06\u6536\u655b\u4e8e\u4e3b\u65b9\u7a0b\u6240\u9884\u6d4b\u7684\u771f\u5b9e\u6982\u7387\u5206\u5e03 \\(p(n,t)\\) \u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#_2","title":"\u4e3a\u4f55\u9700\u8981\u968f\u673a\u6a21\u578b\uff1f","text":"<p>\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u63cf\u8ff0\u79cd\u7fa4\u589e\u957f\u7684\u786e\u5b9a\u6027\u6a21\u578b\uff08\u5982\u903b\u8f91\u65af\u8c1b\u65b9\u7a0b\uff09\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u5f15\u5165\u5982\u6b64\u590d\u6742\u7684\u968f\u673a\u6846\u67b6\uff1f</p> <p>\u7b54\u6848\u5728\u4e8e\u7269\u7406\u73b0\u5b9e\u7684\u6839\u672c\u6027\u8d28\u3002\u79cd\u7fa4\u662f\u7531\u79bb\u6563\u7684\u4e2a\u4f53\u7ec4\u6210\u7684\uff0c\u800c\u4e2a\u4f53\u7684\u884c\u4e3a\u2014\u2014\u51fa\u751f\u3001\u6b7b\u4ea1\u3001\u6355\u98df\u3001\u4ea4\u914d\u2014\u2014\u672c\u8d28\u4e0a\u662f\u6982\u7387\u6027\u7684\u4e8b\u4ef6\u3002\u786e\u5b9a\u6027\u6a21\u578b\u5c06\u79cd\u7fa4\u6570\u91cf\u89c6\u4e3a\u8fde\u7eed\u53d8\u91cf\uff0c\u5ffd\u7565\u4e86\u4e2a\u4f53\u6027\u548c\u968f\u673a\u6027\uff0c\u8fd9\u5728\u79cd\u7fa4\u6570\u91cf\u5de8\u5927\u65f6\u662f\u4e00\u4e2a\u5408\u7406\u7684\u8fd1\u4f3c\u3002\u7136\u800c\uff0c\u5f53\u79cd\u7fa4\u89c4\u6a21\u8f83\u5c0f\u65f6\uff0c\u968f\u673a\u6ce2\u52a8\uff08\u5373\"\u4eba\u53e3\u566a\u97f3\"\uff0cdemographic noise\uff09\u53ef\u80fd\u4e3b\u5bfc\u7cfb\u7edf\u7684\u884c\u4e3a\u3002\u4e00\u4e2a\u968f\u673a\u7684\u6b7b\u4ea1\u4e8b\u4ef6\u5e8f\u5217\u53ef\u80fd\u5bfc\u81f4\u4e00\u4e2a\u5c0f\u79cd\u7fa4\u610f\u5916\u706d\u7edd\uff0c\u800c\u8fd9\u662f\u786e\u5b9a\u6027\u6a21\u578b\u65e0\u6cd5\u9884\u6d4b\u7684\u3002</p> <p>\u56e0\u6b64\uff0c\u968f\u673a\u6a21\u578b\u4e0d\u4ec5\u4ec5\u662f\u786e\u5b9a\u6027\u6a21\u578b\u7684\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u66ff\u4ee3\u54c1\uff0c\u5b83\u4eec\u662f\u5bf9\u751f\u547d\u7cfb\u7edf\u66f4\u57fa\u672c\u3001\u66f4\u771f\u5b9e\u7684\u63cf\u8ff0\u3002\u5b83\u4eec\u4f7f\u6211\u4eec\u80fd\u591f\u7406\u89e3\u548c\u91cf\u5316\u7531\u968f\u673a\u6027\u672c\u8eab\u9a71\u52a8\u7684\u73b0\u8c61\uff0c\u5982\u706d\u7edd\u98ce\u9669\u3001\u75be\u75c5\u7206\u53d1\u7684\u6982\u7387\u4ee5\u53ca\u751f\u7269\u591a\u6837\u6027\u7684\u7ef4\u6301\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6559\u6388\u5c06\u9996\u5148\u4ece\u6700\u7b80\u5355\u7684\"\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\"\u5165\u624b\uff0c\u7136\u540e\u9010\u6b65\u6784\u5efa\u4e00\u4e2a\u590d\u6742\u7684\u3001\u5305\u542b\u6355\u98df\u8005\u548c\u730e\u7269\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u5e76\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u63ed\u793a\u968f\u673a\u6027\u5982\u4f55\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u6211\u4eec\u5bf9\u7cfb\u7edf\u884c\u4e3a\u7684\u7406\u89e3\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#2","title":"2. \u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\uff1a\u968f\u673a\u79cd\u7fa4\u6a21\u578b\u7684\u57fa\u7840","text":"<p>\u4e3a\u4e86\u5efa\u7acb\u5bf9\u968f\u673a\u79cd\u7fa4\u52a8\u6001\u7684\u76f4\u89c2\u7406\u89e3\uff0c\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u975e\u5e73\u51e1\u6a21\u578b\u5f00\u59cb\uff1a\u4e00\u4e2a\u79cd\u7fa4\u4e2d\u7684\u4e2a\u4f53\u53ea\u80fd\u6b7b\u4ea1\uff0c\u4e0d\u80fd\u51fa\u751f\u3002\u6211\u4eec\u5c06\u4ece\u4e09\u4e2a\u4e0d\u540c\u7684\u89d2\u5ea6\u6765\u5256\u6790\u8fd9\u4e2a\u8fc7\u7a0b\uff1a\u786e\u5b9a\u6027\u7684\u5e73\u5747\u573a\u89c6\u89d2\u3001\u968f\u673a\u7684\u4e3b\u65b9\u7a0b\u89c6\u89d2\uff0c\u4ee5\u53ca\u7cbe\u786e\u7684\u89e3\u6790\u89e3\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#21","title":"2.1 \u786e\u5b9a\u6027\u89c6\u89d2\uff08\u5e73\u5747\u573a\u7406\u8bba\uff09","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u63cf\u8ff0\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u7269\u79cd \\(A\\)\uff0c\u5176\u4e2a\u4f53\u4ee5\u6052\u5b9a\u7684\u901f\u7387 \\(\\lambda\\) \u6b7b\u4ea1\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7c7b\u4f3c\u5316\u5b66\u53cd\u5e94\u7684\u5f0f\u5b50\u6765\u8868\u793a\u8fd9\u4e2a\u8fc7\u7a0b\uff1a</p> \\[A \\xrightarrow{\\lambda} \\varnothing\\] <p>\u8fd9\u91cc\u7684 \\(\\lambda\\) \u4ee3\u8868\u6bcf\u4e2a\u4e2a\u4f53\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u6b7b\u4ea1\u7684\u6982\u7387\uff0c\u5373\u4eba\u5747\u6b7b\u4ea1\u7387\u3002</p> <p>\u5728\u5e73\u5747\u573a\uff08mean-field\uff09\u8fd1\u4f3c\u4e0b\uff0c\u6211\u4eec\u5047\u8bbe\u79cd\u7fa4\u6570\u91cf\u975e\u5e38\u5927\uff0c\u5e76\u4e14\u6df7\u5408\u5f97\u975e\u5e38\u5747\u5300\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u4e2a\u4f53\u7684\u79bb\u6563\u6027\u548c\u968f\u673a\u6ce2\u52a8\uff0c\u5c06\u79cd\u7fa4\u6570\u91cf \\(n(t)\\) \u89c6\u4e3a\u4e00\u4e2a\u8fde\u7eed\u7684\u3001\u786e\u5b9a\u6027\u7684\u53d8\u91cf\u3002</p> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6574\u4e2a\u79cd\u7fa4\u6570\u91cf\u7684\u51cf\u5c11\u901f\u7387\uff0c\u5c31\u7b49\u4e8e\u4eba\u5747\u6b7b\u4ea1\u7387 \\(\\lambda\\) \u4e58\u4ee5\u5f53\u524d\u7684\u79cd\u7fa4\u6570\u91cf \\(n(t)\\)\u3002\u8fd9\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\uff08ODE\uff09\uff1a</p> \\[\\frac{d}{dt}n(t) = -\\lambda n(t)\\] <p>\u8fd9\u662f\u4e00\u4e2a\u6211\u4eec\u975e\u5e38\u719f\u6089\u7684\u4e00\u9636\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u3002\u7ed9\u5b9a\u521d\u59cb\u6761\u4ef6 \\(n(t=0)=n_0\\)\uff0c\u5b83\u7684\u89e3\u662f\u7ecf\u5178\u7684\u6307\u6570\u8870\u51cf\uff1a</p> \\[n(t) = n_0 e^{-\\lambda t}\\] <p>\u8fd9\u4e2a\u786e\u5b9a\u6027\u89e3\u544a\u8bc9\u6211\u4eec\u79cd\u7fa4\u7684\u5e73\u5747\u884c\u4e3a\u8d8b\u52bf\u3002\u5b83\u5c06\u4f5c\u4e3a\u6211\u4eec\u8bc4\u4f30\u66f4\u5b8c\u6574\u7684\u968f\u673a\u6a21\u578b\u7684\u4e00\u4e2a\u57fa\u51c6\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#22","title":"2.2 \u66f4\u6df1\u5c42\u6b21\u7684\u63a2\u7d22\uff1a\u901a\u8fc7\u4e3b\u65b9\u7a0b\u8fdb\u884c\u968f\u673a\u63cf\u8ff0","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u653e\u5f03\u5e73\u5747\u573a\u8fd1\u4f3c\uff0c\u5c06\u79cd\u7fa4\u6570\u91cf \\(N(t)\\) \u89c6\u4e3a\u4e00\u4e2a\u79bb\u6563\u7684\u968f\u673a\u53d8\u91cf\u3002\u6211\u4eec\u7684\u76ee\u6807\u4e0d\u518d\u662f\u6c42\u89e3\u4e00\u4e2a\u786e\u5b9a\u7684\u8f68\u8ff9 \\(n(t)\\)\uff0c\u800c\u662f\u627e\u5230\u5728\u4efb\u610f\u65f6\u523b \\(t\\)\uff0c\u79cd\u7fa4\u6570\u91cf\u6070\u597d\u4e3a \\(n\\) \u7684\u6982\u7387\u5206\u5e03\uff0c\u5373 \\(p(n,t) = \\text{Prob}(N(t)=n)\\)\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6784\u5efa\u8be5\u8fc7\u7a0b\u7684\u4e3b\u65b9\u7a0b\u3002</p> <p>\u6211\u4eec\u518d\u6b21\u8fd0\u7528\"\u589e\u76ca-\u635f\u5931\"\u539f\u7406\u6765\u6784\u5efa\u65b9\u7a0b\uff1a</p> \\[\\frac{d}{dt}p(n,t) = \\text{gain} - \\text{loss}\\] <ul> <li> <p>\u635f\u5931\u9879 (Loss Term)\uff1a\u7cfb\u7edf\u5982\u4f55\u79bb\u5f00\u72b6\u6001 \\(n\\)\uff1f\u552f\u4e00\u7684\u9014\u5f84\u662f\u53d1\u751f\u4e00\u6b21\u6b7b\u4ea1\u4e8b\u4ef6\u3002\u5f53\u79cd\u7fa4\u6570\u91cf\u4e3a \\(n\\) \u65f6\uff0c\u6bcf\u4e2a\u4e2a\u4f53\u90fd\u53ef\u80fd\u4ee5\u901f\u7387 \\(\\lambda\\) \u6b7b\u4ea1\u3002\u7531\u4e8e\u6240\u6709\u4e2a\u4f53\u7684\u6b7b\u4ea1\u4e8b\u4ef6\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff08\u8fd9\u662f\"\u7ebf\u6027\"\u8fc7\u7a0b\u7684\u6838\u5fc3\u5047\u8bbe\uff09\uff0c\u6574\u4e2a\u79cd\u7fa4\u53d1\u751f\u6b7b\u4ea1\u4e8b\u4ef6\u7684\u603b\u901f\u7387\u662f \\(n \\times \\lambda\\)\u3002\u56e0\u6b64\uff0c\u7cfb\u7edf\u4ee5\u901f\u7387 \\(\\lambda n\\) \u79bb\u5f00\u72b6\u6001 \\(n\\)\u3002\u8fd9\u4e00\u9879\u5bf9 \\(p(n,t)\\) \u7684\u8d21\u732e\u662f\u8d1f\u7684\uff0c\u5373 \\(-\\lambda n p(n,t)\\)\u3002</p> </li> <li> <p>\u589e\u76ca\u9879 (Gain Term)\uff1a\u7cfb\u7edf\u5982\u4f55\u8fdb\u5165\u72b6\u6001 \\(n\\)\uff1f\u552f\u4e00\u7684\u9014\u5f84\u662f\uff0c\u7cfb\u7edf\u539f\u672c\u5904\u4e8e\u72b6\u6001 \\(n+1\\)\uff0c\u7136\u540e\u53d1\u751f\u4e86\u4e00\u6b21\u6b7b\u4ea1\u4e8b\u4ef6\u3002\u5f53\u79cd\u7fa4\u6570\u91cf\u4e3a \\(n+1\\) \u65f6\uff0c\u6574\u4e2a\u79cd\u7fa4\u53d1\u751f\u6b7b\u4ea1\u7684\u603b\u901f\u7387\u662f \\((n+1) \\times \\lambda\\)\u3002\u56e0\u6b64\uff0c\u4ece\u72b6\u6001 \\(n+1\\) \u8f6c\u79fb\u5230\u72b6\u6001 \\(n\\) \u7684\u901f\u7387\u662f \\(\\lambda(n+1)p(n+1,t)\\)\u3002\u8fd9\u4e00\u9879\u5bf9 \\(p(n,t)\\) \u7684\u8d21\u732e\u662f\u6b63\u7684\u3002</p> </li> </ul> <p>\u5c06\u589e\u76ca\u9879\u548c\u635f\u5931\u9879\u7ec4\u5408\u8d77\u6765\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u7684\u5b8c\u6574\u4e3b\u65b9\u7a0b\uff1a</p> \\[\\frac{d}{dt}p(n,t) = \\lambda(n+1)p(n+1,t) - \\lambda n p(n,t)\\] <p>\u8fd9\u662f\u4e00\u4e2a\u65e0\u9650\u7ef4\u7684\u8026\u5408\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\uff08\u5bf9\u4e8e \\(n=0,1,2,...,n_0\\)\uff09\uff0c\u76f4\u63a5\u6c42\u89e3\u5b83\u76f8\u5f53\u56f0\u96be\u3002\u5e78\u8fd0\u7684\u662f\uff0cFrey \u6559\u6388\u5c55\u793a\u4e86\u4e00\u79cd\u66f4\u4f18\u96c5\u3001\u66f4\u5177\u7269\u7406\u76f4\u89c9\u7684\u65b9\u6cd5\u6765\u83b7\u5f97\u5176\u7cbe\u786e\u89e3\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#23","title":"2.3 \u7cbe\u786e\u89e3\uff1a\u63ed\u793a\u5b58\u6d3b\u7684\u4e8c\u9879\u5206\u5e03\u672c\u8d28","text":"<p>\u4e0e\u5176\u76f4\u63a5\u6c42\u89e3\u4e3b\u65b9\u7a0b\uff0c\u4e0d\u5982\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u95ee\u9898\u5165\u624b\uff0c\u7136\u540e\u9010\u6b65\u63a8\u5e7f\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#231","title":"2.3.1 \u5355\u4e2a\u4e2a\u4f53\u7684\u5b58\u6d3b","text":"<p>\u9996\u5148\uff0c\u8003\u8651\u521d\u59cb\u65f6\u53ea\u6709\u4e00\u4e2a\u4e2a\u4f53\uff08\\(n_0=1\\)\uff09\u7684\u60c5\u51b5\u3002\u8fd9\u4e2a\u4e2a\u4f53\u5728\u65f6\u95f4 \\(t\\) \u4ecd\u7136\u5b58\u6d3b\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6307\u6570\u7b49\u5f85\u95ee\u9898\u3002\u5728\u4efb\u4f55\u4e00\u4e2a\u5fae\u5c0f\u7684\u65f6\u95f4\u95f4\u9694 \\(dt\\) \u5185\uff0c\u5b83\u6b7b\u4ea1\u7684\u6982\u7387\u662f \\(\\lambda dt\\)\u3002\u56e0\u6b64\uff0c\u5b83\u5728\u65f6\u95f4 \\(t\\) \u4ecd\u7136\u5b58\u6d3b\u7684\u6982\u7387 \\(p(t)\\) \u9075\u5faa\uff1a</p> \\[\\frac{d}{dt}p(t) = -\\lambda p(t)\\] <p>\u89e3\u5f97 \\(p(t) = e^{-\\lambda t}\\)\u3002\u76f8\u5e94\u5730\uff0c\u5b83\u5728\u65f6\u95f4 \\(t\\) \u5df2\u7ecf\u6b7b\u4ea1\u7684\u6982\u7387\u4e3a \\(q(t) = 1 - p(t) = 1 - e^{-\\lambda t}\\) \u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#232-n_0","title":"2.3.2 \u63a8\u5e7f\u81f3 \\(n_0\\) \u4e2a\u4e2a\u4f53","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u56de\u5230\u521d\u59cb\u79cd\u7fa4\u4e3a \\(n_0\\) \u7684\u60c5\u51b5\u3002\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u7684\u4e00\u4e2a\u6838\u5fc3\u5047\u8bbe\u662f\uff0c\u6bcf\u4e2a\u4e2a\u4f53\u7684\u6b7b\u4ea1\u4e8b\u4ef6\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002\u4e00\u4e2a\u4eba\u7684\u6b7b\u4ea1\u4e0d\u4f1a\u5f71\u54cd\u53e6\u4e00\u4e2a\u4eba\u7684\u6b7b\u4ea1\u6982\u7387\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5728\u65f6\u95f4 \\(t\\)\uff0c\u6574\u4e2a\u79cd\u7fa4\u7684\u5b58\u6d3b\u60c5\u51b5\u53ef\u4ee5\u770b\u4f5c\u662f\u8fdb\u884c\u4e86 \\(n_0\\) \u6b21\u72ec\u7acb\u7684\"\u4f2f\u52aa\u5229\u8bd5\u9a8c\"\u3002</p> <p>\u6bcf\u4e00\u6b21\u8bd5\u9a8c\u5bf9\u5e94\u4e00\u4e2a\u521d\u59cb\u4e2a\u4f53\uff0c\u8bd5\u9a8c\u7684\u7ed3\u679c\u53ea\u6709\u4e24\u79cd\uff1a</p> <p>1.\"\u6210\u529f\"\uff1a\u8be5\u4e2a\u4f53\u5728\u65f6\u95f4 \\(t\\) \u4ecd\u7136\u5b58\u6d3b\uff0c\u5176\u6982\u7387\u4e3a \\(p(t) = e^{-\\lambda t}\\)\u3002</p> <p>2.\"\u5931\u8d25\"\uff1a\u8be5\u4e2a\u4f53\u5728\u65f6\u95f4 \\(t\\) \u5df2\u7ecf\u6b7b\u4ea1\uff0c\u5176\u6982\u7387\u4e3a \\(q(t) = 1 - e^{-\\lambda t}\\)\u3002</p> <p>\u6211\u4eec\u5173\u5fc3\u7684\u662f\uff0c\u5728 \\(n_0\\) \u6b21\u8bd5\u9a8c\u4e2d\uff0c\u6070\u597d\u6709 \\(n\\) \u6b21\"\u6210\u529f\"\uff08\u5373\u6709 \\(n\\) \u4e2a\u4e2a\u4f53\u5b58\u6d3b\uff09\u7684\u6982\u7387\u662f\u591a\u5c11\u3002\u8fd9\u6b63\u662f\u4e8c\u9879\u5206\u5e03\u7684\u5b9a\u4e49\uff01\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5199\u51fa\u5176\u6982\u7387\u5206\u5e03\uff1a</p> \\[p(n,t) = \\binom{n_0}{n} [p(t)]^n [q(t)]^{n_0-n} = \\binom{n_0}{n} (e^{-\\lambda t})^n (1 - e^{-\\lambda t})^{n_0-n}\\] <p>\u8fd9\u4e2a\u7ed3\u679c\u975e\u5e38\u6df1\u523b\u3002\u5b83\u63ed\u793a\u4e86\u6a21\u578b\u6570\u5b66\u5f62\u5f0f\u4e0e\u5176\u7269\u7406\u5047\u8bbe\u4e4b\u95f4\u7684\u76f4\u63a5\u8054\u7cfb\uff1a</p> <p>\u7ebf\u6027\u901f\u7387\uff08\u603b\u901f\u7387 \\(\\propto n\\)\uff09 \\(\\implies\\) \u4e2a\u4f53\u72ec\u7acb\u6027\uff08\u65e0\u76f8\u4e92\u4f5c\u7528\uff09 \\(\\implies\\) \u4f2f\u52aa\u5229\u8bd5\u9a8c\uff08\u6bcf\u4e2a\u4e2a\u4f53\u72ec\u7acb\u5b58\u6d3b\u6216\u6b7b\u4ea1\uff09 \\(\\implies\\) \u4e8c\u9879\u5206\u5e03\u89e3\u3002</p> <p>\u8fd9\u4e2a\u903b\u8f91\u94fe\u6761\u662f\u7406\u89e3\u968f\u673a\u8fc7\u7a0b\u7269\u7406\u610f\u4e49\u7684\u5173\u952e\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#24","title":"2.4 \u5206\u5e03\u7684\u77e9\uff1a\u5e73\u5747\u503c\u4e0e\u65b9\u5dee","text":"<p>\u4e00\u65e6\u6211\u4eec\u77e5\u9053\u4e86\u6982\u7387\u5206\u5e03\u662f\u4e8c\u9879\u5206\u5e03\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u5176\u5df2\u77e5\u7684\u6027\u8d28\u6765\u8ba1\u7b97\u5e73\u5747\u503c\u548c\u65b9\u5dee\u3002\u5bf9\u4e8e\u4e00\u4e2a\u53c2\u6570\u4e3a \\((N,p)\\) \u7684\u4e8c\u9879\u5206\u5e03\uff0c\u5176\u5747\u503c\u4e3a \\(Np\\)\uff0c\u65b9\u5dee\u4e3a \\(Np(1-p)\\)\u3002</p> <p>\u5728\u6211\u4eec\u7684\u6a21\u578b\u4e2d\uff0c\\(N\\) \u5bf9\u5e94\u4e8e\u521d\u59cb\u79cd\u7fa4 \\(n_0\\)\uff0c\\(p\\) \u5bf9\u5e94\u4e8e\u5355\u4e2a\u4e2a\u4f53\u7684\u5b58\u6d3b\u6982\u7387 \\(p(t) = e^{-\\lambda t}\\)\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7acb\u5373\u5f97\u5230\uff1a</p> <p>\u5e73\u5747\u79cd\u7fa4\u6570\u91cf (Mean)\uff1a</p> \\[\\langle n(t) \\rangle = n_0 p(t) = n_0 e^{-\\lambda t}\\] <p>\u79cd\u7fa4\u6570\u91cf\u7684\u65b9\u5dee (Variance)\uff1a</p> \\[\\sigma^2(t) = n_0 p(t) (1 - p(t)) = n_0 e^{-\\lambda t} (1 - e^{-\\lambda t})\\] <p>\u8fd9\u91cc\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u7ed3\u8bba\uff1a\u968f\u673a\u8fc7\u7a0b\u7684\u5e73\u5747\u503c \\(\\langle n(t) \\rangle\\) \u4e0e\u6211\u4eec\u4e4b\u524d\u63a8\u5bfc\u7684\u786e\u5b9a\u6027\u5e73\u5747\u573a\u89e3 \\(n(t)\\) \u5b8c\u5168\u76f8\u540c\uff01\u8fd9\u5bf9\u4e8e\u6240\u6709\u7ebf\u6027\u8fc7\u7a0b\u90fd\u662f\u4e00\u4e2a\u666e\u904d\u6210\u7acb\u7684\u4f18\u7f8e\u7ed3\u679c\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u786e\u5b9a\u6027\u65b9\u7a0b\u786e\u5b9e\u6b63\u786e\u5730\u6355\u6349\u4e86\u7cfb\u7edf\u7684\u5e73\u5747\u884c\u4e3a\u3002</p> <p>\u7136\u800c\uff0c\u65b9\u5dee \\(\\sigma^2(t)\\) \u662f\u4e00\u4e2a\u5168\u65b0\u7684\u3001\u7eaf\u7cb9\u7531\u968f\u673a\u6027\u5e26\u6765\u7684\u91cf\u3002\u5b83\u91cf\u5316\u4e86\"\u4eba\u53e3\u566a\u97f3\"\u7684\u5927\u5c0f\u2014\u2014\u5373\u7531\u4e8e\u4e2a\u4f53\u6b7b\u4ea1\u4e8b\u4ef6\u53d1\u751f\u7684\u968f\u673a\u6027\uff0c\u5b9e\u9645\u79cd\u7fa4\u8f68\u8ff9\u56f4\u7ed5\u7740\u5e73\u5747\u503c\u7684\u6ce2\u52a8\u7a0b\u5ea6\u3002\u8fd9\u662f\u5e73\u5747\u573a\u65b9\u6cd5\u5b8c\u5168\u65e0\u6cd5\u6355\u6349\u5230\u7684\u4fe1\u606f\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#25","title":"2.5 \u8ba1\u7b97\u9a8c\u8bc1\uff1a\u6a21\u62df\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b","text":"<p>\u6211\u4eec\u5c06\u4f7f\u7528 Gillespie \u7b97\u6cd5\u6765\u6a21\u62df\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\uff0c\u5e76\u751f\u6210\u8bb2\u5ea7 PPT \u4e2d\u7684\u7b2c\u4e00\u5f20\u56fe\u3002</p> <p> Gillespie \u7b97\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a</p> <p>1.\u521d\u59cb\u5316\uff1a\u5728\u65f6\u95f4 \\(t=0\\) \u65f6\uff0c\u8bbe\u7f6e\u79cd\u7fa4\u6570\u91cf \\(N(0)=n_0\\)\u3002</p> <p>2.\u8ba1\u7b97\u603b\u901f\u7387\uff1a\u5728\u4efb\u610f\u65f6\u523b\uff0c\u5f53\u79cd\u7fa4\u6570\u91cf\u4e3a \\(N\\) \u65f6\uff0c\u53d1\u751f\u4e0b\u4e00\u6b21\u4e8b\u4ef6\uff08\u4efb\u4f55\u4e00\u6b21\u6b7b\u4ea1\uff09\u7684\u603b\u901f\u7387\u4e3a \\(\\alpha = \\lambda N\\)\u3002</p> <p>3.\u786e\u5b9a\u7b49\u5f85\u65f6\u95f4\uff1a\u4e0b\u4e00\u6b21\u4e8b\u4ef6\u53d1\u751f\u7684\u7b49\u5f85\u65f6\u95f4 \\(\\tau\\) \u670d\u4ece\u901f\u7387\u4e3a \\(\\alpha\\) \u7684\u6307\u6570\u5206\u5e03\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9006\u53d8\u6362\u91c7\u6837\u6cd5\u751f\u6210\u8fd9\u4e2a\u65f6\u95f4\uff1a\\(\\tau = -\\frac{1}{\\alpha} \\ln(\\xi)\\)\uff0c\u5176\u4e2d \\(\\xi\\) \u662f\u4e00\u4e2a\u5728 \\((0, 1]\\) \u533a\u95f4\u5185\u5747\u5300\u5206\u5e03\u7684\u968f\u673a\u6570\u3002</p> <p>4.\u6267\u884c\u4e8b\u4ef6\uff1a\u7531\u4e8e\u7cfb\u7edf\u4e2d\u53ea\u6709\u4e00\u79cd\u4e8b\u4ef6\uff08\u6b7b\u4ea1\uff09\uff0c\u6211\u4eec\u76f4\u63a5\u66f4\u65b0\u79cd\u7fa4\u6570\u91cf\uff1a\\(N \\to N-1\\)\u3002</p> <p>5.\u66f4\u65b0\u65f6\u95f4\uff1a\u5c06\u5f53\u524d\u65f6\u95f4\u5411\u524d\u63a8\u8fdb\uff1a\\(t \\to t+\\tau\\)\u3002</p> <p>6.\u91cd\u590d\uff1a\u56de\u5230\u7b2c 2 \u6b65\uff0c\u7ee7\u7eed\u6a21\u62df\uff0c\u76f4\u5230\u79cd\u7fa4\u6570\u91cf \\(N=0\\) \u6216\u8fbe\u5230\u9884\u8bbe\u7684\u6a21\u62df\u603b\u65f6\u957f\u3002</p> <p>\u4e0b\u9762\u662f\u5b9e\u73b0\u8fd9\u4e00\u8fc7\u7a0b\u5e76\u590d\u73b0\u8bb2\u5ea7\u4e2d\u4e24\u5f20\u56fe\u7684 Python \u4ee3\u7801\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.special import comb\n\n# --- Simulation parameters ---\nn0 = 20      # Initial population size\nlambda_rate = 1.0  # Per capita death rate\nt_max = 4.0    # Maximum simulation time\nnum_simulations = 10000 # Total number of simulated trajectories\n\n# --- Gillespie algorithm implementation for linear death process ---\ndef linear_death_gillespie(n_start, rate, t_end):\n    \"\"\"\n    Simulate linear death process using Gillespie algorithm\n    \"\"\"\n    t = 0.0\n    n = n_start\n\n    times = [t]\n    populations = [n]\n\n    while n &gt; 0 and t &lt; t_end:\n        # Total reaction rate\n        alpha = rate * n\n\n        # Generate waiting time tau\n        xi1 = np.random.uniform(0, 1)\n        tau = -np.log(xi1) / alpha\n\n        # Update time and population\n        t += tau\n        n -= 1 # Only death events\n\n        times.append(t)\n        populations.append(n)\n\n    return np.array(times), np.array(populations)\n\n# --- Run multiple simulations ---\nall_trajectories = []\nfor _ in range(num_simulations):\n    times, populations = linear_death_gillespie(n0, lambda_rate, t_max)\n    all_trajectories.append((times, populations))\n\n# --- Plotting ---\nplt.style.use('default')\nfig, axes = plt.subplots(1, 2, figsize=(12, 5))\n\n# --- Figure 1: Stochastic trajectories and deterministic solution ---\nax = axes[0]\n# Plot some example trajectories\nfor i in range(3):\n    times, populations = all_trajectories[i]\n    ax.step(times, populations, where='post')\n\n# Plot deterministic solution\nt_deterministic = np.linspace(0, t_max, 200)\nn_deterministic = n0 * np.exp(-lambda_rate * t_deterministic)\nax.plot(t_deterministic, n_deterministic, color='black', lw=2, label=r'$n(t) = n_0 e^{-\\lambda t}$')\n\nax.set_xlabel('t', fontsize=14)\nax.set_ylabel('population size', fontsize=14)\nax.set_title('stochastic trajectories', fontsize=16)\nax.set_ylim(0, n0 + 2)\nax.set_xlim(0, t_max - 0.5)\n\n# --- Figure 2: Histogram and theoretical solution at different times ---\nax = axes[1]\ntime_points = [0.1, 1.0, 4.0]\ncolors = ['darkgreen', 'saddlebrown', 'darkred']\nbar_width = 0.8\n\n# Helper function: get population size at a specific time from a trajectory\ndef get_population_at_time(trajectory, t_point):\n    times, populations = trajectory\n    # Find the index of the last time point &lt;= t_point\n    idx = np.searchsorted(times, t_point, side='right') - 1\n    return populations[idx]\n\nfor t, color in zip(time_points, colors):\n    # Collect population sizes at this time point from all simulations\n    populations_at_t = [get_population_at_time(traj, t) for traj in all_trajectories]\n\n    # Calculate histogram\n    n_values, counts = np.unique(populations_at_t, return_counts=True)\n    probabilities = counts / num_simulations\n\n    # Plot histogram\n    ax.bar(n_values, probabilities, width=bar_width, color=color, alpha=0.7, ec='black', label=f't = {t}')\n\n    # Plot theoretical binomial distribution\n    p_survival = np.exp(-lambda_rate * t)\n    n_range = np.arange(0, n0 + 1)\n    p_n_t = comb(n0, n_range) * (p_survival**n_range) * ((1 - p_survival)**(n0 - n_range))\n    # For visualization, only plot points with significant probabilities\n    # ax.plot(n_range, p_n_t, 'o', color=color, markersize=4)\n\nax.set_xlabel('n', fontsize=14)\nax.set_ylabel('p(n, t)', fontsize=14)\nax.set_title('histogram', fontsize=16)\nax.set_xlim(-1, n0 + 1)\nax.set_ylim(0, 0.7)\n\n# Add theoretical formula text\nax.text(10, 0.5, r'$p(n,t) = \\binom{n_0}{n} p^n q^{n_0-n}$', fontsize=14, color='saddlebrown')\nax.text(1.5, 0.65, 't = 4', fontsize=12, color='darkred')\nax.text(7, 0.2, 't = 1', fontsize=12, color='saddlebrown')\nax.text(17, 0.35, 't = 0.1', fontsize=12, color='darkgreen')\n\nfig.suptitle('Linear Death Process', fontsize=20, color='darkgreen', y=1.02)\nplt.tight_layout()\nplt.show()\n</code></pre> \u53f3\u56fe (histogram)\uff1a\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u5728\u4e09\u4e2a\u4e0d\u540c\u65f6\u95f4\u70b9\uff08\\(t=0.1, 1, 4\\)\uff09\u79cd\u7fa4\u6570\u91cf\u7684\u6982\u7387\u5206\u5e03\u3002\u6761\u5f62\u56fe\u662f\u6211\u4eec\u901a\u8fc7\u8fd0\u884c\u4e0a\u4e07\u6b21 Gillespie \u6a21\u62df\u5f97\u5230\u7684\u7ecf\u9a8c\u5206\u5e03\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5206\u5e03\u7684\u5cf0\u503c\u5411\u5de6\u79fb\u52a8\uff08\u5e73\u5747\u79cd\u7fa4\u6570\u91cf\u51cf\u5c11\uff09\uff0c\u5e76\u4e14\u5206\u5e03\u53d8\u5f97\u66f4\u5bbd\uff08\u76f8\u5bf9\u4e0d\u786e\u5b9a\u6027\u589e\u52a0\uff09\uff0c\u6700\u7ec8\u5728\u65f6\u95f4\u5f88\u957f\u65f6\uff0c\u5927\u90e8\u5206\u6a21\u62df\u90fd\u4ee5\u79cd\u7fa4\u706d\u7edd\uff08\\(n=0\\)\uff09\u544a\u7ec8\u3002\u8fd9\u4e0e\u6211\u4eec\u63a8\u5bfc\u7684\u4e8c\u9879\u5206\u5e03\u7684\u52a8\u6001\u884c\u4e3a\u5b8c\u5168\u4e00\u81f4\u3002</p> <p>\u5de6\u56fe (stochastic trajectories)\uff1a\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u4e09\u6b21\u72ec\u7acb\u7684\u6a21\u62df\u8f68\u8ff9\uff08\u5f69\u8272\u9636\u68af\u7ebf\uff09\u3002\u6bcf\u4e00\u6761\u8f68\u8ff9\u90fd\u4ee3\u8868\u4e86\u4e00\u79cd\u53ef\u80fd\u7684\u5386\u53f2\u3002\u9ed1\u8272\u7684\u5e73\u6ed1\u66f2\u7ebf\u662f\u6211\u4eec\u63a8\u5bfc\u51fa\u7684\u786e\u5b9a\u6027\u89e3 \\(n(t)=n_0e^{-\\lambda t}\\)\uff0c\u4e5f\u5c31\u662f\u968f\u673a\u8fc7\u7a0b\u7684\u5e73\u5747\u503c\u3002\u8fd9\u5f20\u56fe\u76f4\u89c2\u5730\u5c55\u793a\u4e86\u968f\u673a\u8fc7\u7a0b\u7684\u6838\u5fc3\u7279\u5f81\uff1a\u5355\u6b21\u5b9e\u73b0\uff08\u8f68\u8ff9\uff09\u662f\u968f\u673a\u7684\u3001\u79bb\u6563\u7684\uff0c\u4f46\u5927\u91cf\u5b9e\u73b0\u7684\u5e73\u5747\u884c\u4e3a\u5219\u6536\u655b\u4e8e\u786e\u5b9a\u6027\u7684\u5747\u573a\u89e3\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#3-lotka-volterra-process-","title":"3. \u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u8fc7\u7a0b(Lotka-Volterra Process)\uff1a\u6a21\u62df\u6355\u98df\u8005-\u730e\u7269\u4e92\u52a8","text":"<p>\u5728\u638c\u63e1\u4e86\u6700\u7b80\u5355\u7684\u5355\u4e00\u79cd\u7fa4\u6a21\u578b\u540e\uff0c\u6211\u4eec\u73b0\u5728\u5c06\u6311\u6218\u4e00\u4e2a\u66f4\u590d\u6742\u3001\u4e5f\u66f4\u6709\u8da3\u7684\u7cfb\u7edf\uff1a\u4e00\u4e2a\u5305\u542b\u4e24\u79cd\u76f8\u4e92\u4f5c\u7528\u7269\u79cd\u7684\u751f\u6001\u7cfb\u7edf\u2014\u2014\u6355\u98df\u8005\uff08predator\uff09\u548c\u730e\u7269\uff08prey\uff09\u3002\u8fd9\u5c31\u662f\u8457\u540d\u7684\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\uff08Lotka-Volterra\uff09\u6a21\u578b\u3002\u6211\u4eec\u5c06\u770b\u5230\uff0c\u7269\u79cd\u95f4\u7684\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528\u4f1a\u4ea7\u751f\u8fdc\u6bd4\u7ebf\u6027\u8fc7\u7a0b\u4e30\u5bcc\u548c\u4ee4\u4eba\u60ca\u8bb6\u7684\u52a8\u6001\u884c\u4e3a\u3002</p> <p>\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u65b9\u7a0b\u662f\u4e00\u7ec4\u63cf\u8ff0\u6355\u98df\u8005-\u730e\u7269\u751f\u6001\u7cfb\u7edf\u52a8\u6001\u7684\u8026\u5408\u975e\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\u3002\u8fd9\u4e2a\u6a21\u578b\u6e90\u4e8e20\u4e16\u7eaa\u521d\u751f\u6001\u5b66\u7814\u7a76\u7684\u9700\u6c42\uff0c\u7531\u963f\u5c14\u5f17\u96f7\u5fb7\u00b7\u6d1b\u7279\u5361\u548c\u7ef4\u6258\u00b7\u6c83\u5c14\u6cf0\u62c9\u5206\u522b\u72ec\u7acb\u63d0\u51fa\uff0c\u7528\u4e8e\u89e3\u91ca\u81ea\u7136\u754c\u4e2d\u6355\u98df\u8005\u548c\u730e\u7269\u79cd\u7fa4\u6570\u91cf\u7684\u5468\u671f\u6027\u6ce2\u52a8\u73b0\u8c61\u3002</p> <p>\u8be5\u65b9\u7a0b\u7ec4\u7684\u5efa\u7acb\u57fa\u4e8e\u4ee5\u4e0b\u751f\u7269\u5b66\u5047\u8bbe\uff1a</p> <p>1.\u6355\u98df\u8005\u79cd\u7fa4\u56e0\u81ea\u7136\u6b7b\u4ea1\u800c\u51cf\u5c11\uff0c\u901f\u7387\u4e3a \\(-\\lambda a\\)</p> <p>2.\u6355\u98df\u8005\u901a\u8fc7\u6355\u98df\u730e\u7269\u800c\u7e41\u6b96\uff0c\u589e\u6b96\u901f\u7387\u4e3a \\(+\\gamma_p ab\\)</p> <p>3.\u730e\u7269\u79cd\u7fa4\u56e0\u81ea\u8eab\u7e41\u6b96\u800c\u589e\u957f\uff0c\u901f\u7387\u4e3a \\(+\\mu b\\)</p> <p>4.\u730e\u7269\u56e0\u88ab\u6355\u98df\u800c\u51cf\u5c11\uff0c\u901f\u7387\u4e3a \\(-\\gamma_p ab\\)</p> <p>5.\u730e\u7269\u4e4b\u95f4\u56e0\u8d44\u6e90\u7ade\u4e89\u800c\u6b7b\u4ea1\uff0c\u901f\u7387\u4e3a \\(-\\gamma_c b^2\\)</p> <p>\u8fd9\u4e9b\u5047\u8bbe\u6700\u7ec8\u5f62\u6210\u4e86\u5982\u4e0b\u7684\u8026\u5408\u65b9\u7a0b\u7ec4\uff1a $$ \\frac{d}{dt}a(t) = (-\\lambda + \\gamma_p b) \\cdot a $$</p> \\[ \\frac{d}{dt}b(t) = (\\mu - \\gamma_p a - \\gamma_c b) \\cdot b \\] <p>\u5176\u4e2d \\(a(t)\\) \u548c \\(b(t)\\) \u5206\u522b\u4ee3\u8868\u6355\u98df\u8005\u548c\u730e\u7269\u7684\u79cd\u7fa4\u5bc6\u5ea6\u3002</p> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u65b9\u7a0b\u5e7f\u6cdb\u7528\u4e8e\uff1a</p> <p>1.\u751f\u6001\u7cfb\u7edf\u5efa\u6a21\uff1a\u5206\u6790\u6355\u98df\u8005-\u730e\u7269\u5173\u7cfb\uff0c\u5982\u72fc\u4e0e\u9e7f\u3001\u732b\u4e0e\u9f20\u7b49\u751f\u6001\u7cfb\u7edf\u7684\u884c\u4e3a</p> <p>2.\u6e14\u4e1a\u8d44\u6e90\u7ba1\u7406\uff1a\u6307\u5bfc\u53ef\u6301\u7eed\u6355\u635e\u7b56\u7565\u7684\u5236\u5b9a</p> <p>3.\u5bb3\u866b\u751f\u7269\u9632\u6cbb\uff1a\u8bbe\u8ba1\u5229\u7528\u5929\u654c\u63a7\u5236\u519c\u4e1a\u5bb3\u866b\u7684\u65b9\u6848</p> <p>4.\u6d41\u884c\u75c5\u5b66\u7814\u7a76\uff1a\u6a21\u62df\u75be\u75c5\u4f20\u64ad\u4e2d\u75c5\u6bd2\u4e0e\u5bbf\u4e3b\u7684\u76f8\u4e92\u4f5c\u7528</p> <p>5.\u7ecf\u6d4e\u5b66\u5efa\u6a21\uff1a\u63cf\u8ff0\u5546\u4e1a\u7ade\u4e89\u4e2d\u4e0d\u540c\u4f01\u4e1a\u95f4\u7684\u52a8\u6001\u5173\u7cfb</p> <p>\u8be5\u6a21\u578b\u867d\u7136\u7b80\u5316\u4e86\u73b0\u5b9e\u751f\u6001\u7cfb\u7edf\u7684\u590d\u6742\u6027\uff0c\u4f46\u5176\u63ed\u793a\u7684\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528\u539f\u7406\u5bf9\u7406\u89e3\u590d\u6742\u7cfb\u7edf\u884c\u4e3a\u5177\u6709\u91cd\u8981\u610f\u4e49\u3002\u7279\u522b\u662f\u5f53\u5f15\u5165\u968f\u673a\u6027\u540e\uff0c\u8be5\u6a21\u578b\u80fd\u66f4\u597d\u5730\u53cd\u6620\u771f\u5b9e\u751f\u6001\u7cfb\u7edf\u4e2d\u79cd\u7fa4\u6570\u91cf\u7684\u6ce2\u52a8\u7279\u6027\uff0c\u4e3a\u751f\u6001\u98ce\u9669\u8bc4\u4f30\u548c\u751f\u7269\u591a\u6837\u6027\u4fdd\u62a4\u63d0\u4f9b\u7406\u8bba\u57fa\u7840\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#31","title":"3.1 \u6784\u5efa\u751f\u6001\u7cfb\u7edf\uff1a\u57fa\u672c\u968f\u673a\u8fc7\u7a0b","text":"<p>\u6211\u4eec\u5b9a\u4e49\u7cfb\u7edf\u4e2d\u7684\u4e24\u4e2a\u7269\u79cd\uff1a</p> <ul> <li>A: \u6355\u98df\u8005 (Predator)</li> <li>B: \u730e\u7269 (Prey)</li> </ul> <p>\u8fd9\u4e2a\u751f\u6001\u7cfb\u7edf\u7684\u52a8\u6001\u7531\u56db\u4e2a\u57fa\u672c\uff08\u6216\u79f0\u5143\uff09\u968f\u673a\u8fc7\u7a0b\u5171\u540c\u51b3\u5b9a\uff1a</p> <ol> <li> <p>\u6355\u98df\u8005\u6b7b\u4ea1 (Predator Death)\uff1a\u6355\u98df\u8005\u4f1a\u56e0\u81ea\u7136\u539f\u56e0\u6b7b\u4ea1\u3002\u8fd9\u662f\u4e00\u4e2a\u7ebf\u6027\u7684\u6b7b\u4ea1\u8fc7\u7a0b\uff0c\u4e0e\u6211\u4eec\u4e4b\u524d\u5206\u6790\u7684\u7c7b\u4f3c\u3002    \\(\\(\\varnothing \\xleftarrow{\\lambda} A\\)\\)</p> </li> <li> <p>\u730e\u7269\u51fa\u751f (Prey Birth)\uff1a\u730e\u7269\u4f1a\u81ea\u6211\u7e41\u6b96\u3002\u5047\u8bbe\u8d44\u6e90\u5145\u8db3\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u7ebf\u6027\u7684\u51fa\u751f\u8fc7\u7a0b\u3002    \\(\\(B \\xrightarrow{\\mu} B + B\\)\\)</p> </li> <li> <p>\u6355\u98df (Predation)\uff1a\u8fd9\u662f\u6a21\u578b\u7684\u6838\u5fc3\u4e92\u52a8\u3002\u5f53\u4e00\u4e2a\u6355\u98df\u8005 A \u9047\u5230\u4e00\u4e2a\u730e\u7269 B \u65f6\uff0c\u5b83\u4f1a\u5403\u6389\u730e\u7269\uff0c\u5e76\u5728\u6b64\u8fc7\u7a0b\u4e2d\u7e41\u6b96\u51fa\u4e00\u4e2a\u65b0\u7684\u6355\u98df\u8005\u3002</p> </li> </ol> <p>$$    A + B \\xrightarrow{\\gamma_p} A + A    $$</p> <ol> <li>\u730e\u7269\u7ade\u4e89 (Prey Competition)\uff1a\u5f53\u730e\u7269\u6570\u91cf\u8fc7\u591a\u65f6\uff0c\u5b83\u4eec\u4f1a\u56e0\u4e3a\u4e89\u593a\u6709\u9650\u7684\u8d44\u6e90\uff08\u5982\u98df\u7269\u3001\u7a7a\u95f4\uff09\u800c\u53d1\u751f\u7ade\u4e89\uff0c\u5bfc\u81f4\u5176\u4e2d\u4e00\u4e2a\u4e2a\u4f53\u6b7b\u4ea1\u3002    $$    B + B \\xrightarrow{\\gamma_c} B    $$</li> </ol>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#32","title":"3.2 \u91cf\u5316\u53d8\u5316\uff1a\u53cd\u5e94\u503e\u5411\u6027","text":"<p>\u4e3a\u4e86\u7528 Gillespie \u7b97\u6cd5\u6a21\u62df\u8fd9\u4e2a\u7cfb\u7edf\u6216\u63a8\u5bfc\u5176\u5e73\u5747\u573a\u65b9\u7a0b\uff0c\u6211\u4eec\u9700\u8981\u5c06\u4e0a\u8ff0\u7684\u7b26\u53f7\u5316\u53cd\u5e94\u8f6c\u5316\u4e3a\u6570\u5b66\u4e0a\u7684\u901f\u7387\u8868\u8fbe\u5f0f\uff0c\u5373\u503e\u5411\u6027\u51fd\u6570 (propensity function) \\(\\alpha_\\mu\\)\u3002\u503e\u5411\u6027 \\(\\alpha_\\mu\\) \u8868\u793a\u53cd\u5e94 \\(\\mu\\) \u5728\u5355\u4f4d\u65f6\u95f4\u5185\u53d1\u751f\u7684\u6982\u7387\u3002</p> <p>\u5047\u8bbe\u7cfb\u7edf\u5f53\u524d\u7684\u72b6\u6001\u662f \\((N_A, N_B)\\)\uff0c\u5176\u4e2d \\(N_A\\) \u662f\u6355\u98df\u8005\u6570\u91cf\uff0c\\(N_B\\) \u662f\u730e\u7269\u6570\u91cf\u3002</p> <p>\\(\\alpha_1 = \\lambda N_A\\)\uff1a\u6355\u98df\u8005\u6b7b\u4ea1\u7684\u603b\u901f\u7387\u3002\u4e0e\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u4e00\u6837\uff0c\u5b83\u6b63\u6bd4\u4e8e\u6355\u98df\u8005\u7684\u6570\u91cf \\(N_A\\)\u3002</p> <p>\\(\\alpha_2 = \\mu N_B\\)\uff1a\u730e\u7269\u51fa\u751f\u7684\u603b\u901f\u7387\uff0c\u6b63\u6bd4\u4e8e\u730e\u7269\u6570\u91cf \\(N_B\\)\u3002</p> <p>\\(\\alpha_3 = \\gamma_p N_A N_B\\)\uff1a\u6355\u98df\u4e8b\u4ef6\u7684\u603b\u901f\u7387\u3002\u8fd9\u4e2a\u4e8c\u6b21\u9879\u662f\u6a21\u578b\u7684\u5173\u952e\u3002\u5b83\u6e90\u4e8e\"\u8d28\u91cf\u4f5c\u7528\u5b9a\u5f8b\"\u7684\u5047\u8bbe\uff1a\u5728\u4e00\u4e2a\u5145\u5206\u6df7\u5408\u7684\u7cfb\u7edf\u4e2d\uff0c\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u4e2a\u4f53\u76f8\u9047\u7684\u9891\u7387\u6b63\u6bd4\u4e8e\u5b83\u4eec\u5404\u81ea\u6570\u91cf\u7684\u4e58\u79ef\u3002</p> <p>\\(\\alpha_4 = \\gamma_c N_B(N_B - 1)\\)\uff1a\u730e\u7269\u7ade\u4e89\u7684\u603b\u901f\u7387\u3002\u7ade\u4e89\u9700\u8981\u4e24\u4e2a\u730e\u7269\u4e2a\u4f53\u53c2\u4e0e\u3002\u5728 \\(N_B\\) \u4e2a\u730e\u7269\u4e2d\uff0c\u53ef\u4ee5\u7ec4\u6210\u7684\u4e0d\u540c\u4e2a\u4f53\u5bf9\u7684\u6570\u91cf\u662f \\(\\binom{N_B}{2} = \\frac{1}{2}N_B(N_B - 1)\\)\u3002\u56e0\u6b64\uff0c\u603b\u901f\u7387\u6b63\u6bd4\u4e8e\u6b64\u3002Frey \u6559\u6388\u7684\u8bb2\u4e49\u4e2d\u5c06\u901f\u7387\u5e38\u6570\u5b9a\u4e49\u4e3a \\(\\gamma_c\\)\uff0c\u5438\u6536\u4e86\u56e0\u5b50 \\(1/2\\)\uff0c\u56e0\u6b64\u503e\u5411\u6027\u5199\u4e3a \\(\\gamma_c N_B(N_B - 1)\\)\u3002\u5f53 \\(N_B\\) \u5f88\u5927\u65f6\uff0c\u8fd9\u8fd1\u4f3c\u4e8e \\(\\gamma_c N_B^2\\)\u3002</p> <p>\u4e3a\u4e86\u6e05\u6670\u5730\u7ec4\u7ec7\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u8868\u683c\uff0c\u5b83\u5c06\u6210\u4e3a\u6211\u4eec\u7406\u89e3\u548c\u7f16\u7a0b\u7684\u84dd\u56fe\uff1a</p> \u8fc7\u7a0b\u540d\u79f0 \u5316\u5b66\u53cd\u5e94\u5f0f \u901f\u7387\u5e38\u6570 \u503e\u5411\u6027\u51fd\u6570 \\(\\alpha_\\mu(N_A, N_B)\\) \u72b6\u6001\u53d8\u5316 \\((\\Delta N_A, \\Delta N_B)\\) \u6355\u98df\u8005\u6b7b\u4ea1 \\(A \\xrightarrow{\\lambda} \\emptyset\\) \\(\\lambda\\) \\(\\lambda N_A\\) \\((-1, 0)\\) \u730e\u7269\u51fa\u751f \\(B \\xrightarrow{\\mu} B + B\\) \\(\\mu\\) \\(\\mu N_B\\) \\((0, +1)\\) \u6355\u98df \\(A + B \\xrightarrow{\\gamma_p} A + A\\) \\(\\gamma_p\\) \\(\\gamma_p N_A N_B\\) \\((+1, -1)\\) \u730e\u7269\u7ade\u4e89 \\(B + B \\xrightarrow{\\gamma_c} B\\) \\(\\gamma_c\\) \\(\\gamma_c N_B (N_B - 1)\\) \\((0, -1)\\) <p>\u8fd9\u4e2a\u8868\u683c\u5b8c\u6574\u5730\u5b9a\u4e49\u4e86\u6211\u4eec\u7684\u968f\u673a\u6a21\u578b\u3002\u6bcf\u4e00\u884c\u90fd\u544a\u8bc9\u6211\u4eec\u4e00\u4e2a\u4e8b\u4ef6\u7684\"\u53d1\u751f\u901f\u7387\"\uff08\u503e\u5411\u6027\uff09\u4ee5\u53ca\"\u53d1\u751f\u540e\u4f1a\u600e\u6837\"\uff08\u72b6\u6001\u53d8\u5316\uff09\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#33","title":"3.3 \u5e73\u5747\u573a\u8fd1\u4f3c\uff1a\u8026\u5408\u901f\u7387\u65b9\u7a0b","text":"<p>\u4e0e\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u7c7b\u4f3c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5ffd\u7565\u968f\u673a\u6ce2\u52a8\u6765\u63a8\u5bfc\u63cf\u8ff0\u7cfb\u7edf\u5e73\u5747\u884c\u4e3a\u7684\u786e\u5b9a\u6027\u65b9\u7a0b\u3002\u6211\u4eec\u7528\u8fde\u7eed\u53d8\u91cf \\(a(t)\\) \u548c \\(b(t)\\) \u5206\u522b\u4ee3\u8868\u6355\u98df\u8005\u548c\u730e\u7269\u7684\u79cd\u7fa4\u5bc6\u5ea6\u3002</p> <p>\u6355\u98df\u8005\u5bc6\u5ea6 \\(a(t)\\) \u7684\u53d8\u5316\uff1a</p> <ul> <li> <p>\u56e0\u81ea\u7136\u6b7b\u4ea1\u800c\u51cf\u5c11\uff0c\u901f\u7387\u4e3a \\(-\\lambda a\\)\u3002</p> </li> <li> <p>\u56e0\u6355\u98df\u730e\u7269\u800c\u589e\u52a0\uff0c\u901f\u7387\u4e3a \\(+\\gamma_p ab\\)\u3002</p> </li> <li> <p>\u5408\u5e76\u5f97\u5230\uff1a\\(\\frac{d}{dt}a(t) = (-\\lambda + \\gamma_p b) \\cdot a\\)</p> </li> </ul> <p>\u730e\u7269\u5bc6\u5ea6 \\(b(t)\\) \u7684\u53d8\u5316\uff1a</p> <ul> <li> <p>\u56e0\u81ea\u8eab\u7e41\u6b96\u800c\u589e\u52a0\uff0c\u901f\u7387\u4e3a \\(+\\mu b\\)\u3002</p> </li> <li> <p>\u56e0\u88ab\u6355\u98df\u800c\u51cf\u5c11\uff0c\u901f\u7387\u4e3a \\(-\\gamma_p ab\\)\u3002</p> </li> <li> <p>\u56e0\u5185\u90e8\u7ade\u4e89\u800c\u51cf\u5c11\uff0c\u901f\u7387\u4e3a \\(-\\gamma_c b^2\\)\uff08\u8fd9\u91cc\u6211\u4eec\u7528 \\(b^2\\) \u4f5c\u4e3a \\(b(b-1)\\) \u7684\u8fde\u7eed\u8fd1\u4f3c\uff09\u3002</p> </li> <li> <p>\u5408\u5e76\u5f97\u5230\uff1a\\(\\frac{d}{dt}b(t) = (\\mu - \\gamma_p a - \\gamma_c b) \\cdot b\\)</p> </li> </ul> <p>\u8fd9\u4e24\u4e2a\u8026\u5408\u7684\u975e\u7ebf\u6027\u5e38\u5fae\u5206\u65b9\u7a0b\u5c31\u662f\u786e\u5b9a\u6027\u7684\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u65b9\u7a0b\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#34","title":"3.4 \u76f8\u7a7a\u95f4\u4e2d\u7684\u52a8\u6001\uff1a\u4e0d\u52a8\u70b9\u4e0e\u76f8\u56fe","text":"<p>\u786e\u5b9a\u6027\u65b9\u7a0b\u7684\u957f\u671f\u884c\u4e3a\u53ef\u4ee5\u901a\u8fc7\u5206\u6790\u5176\u5728 \\((a,b)\\) \u76f8\u7a7a\u95f4\u4e2d\u7684\u6d41\u573a\u6765\u7406\u89e3\u3002\u6211\u4eec\u5173\u5fc3\u7684\u662f\u4e0d\u52a8\u70b9\uff08fixed points\uff09\uff0c\u5373\u79cd\u7fa4\u5bc6\u5ea6\u4e0d\u518d\u53d8\u5316\u7684\u70b9\uff08\\(\\partial_t a=0\\) \u548c \\(\\partial_t b=0\\)\uff09\u3002</p> <p></p> <p>\u7279\u6b8a\u60c5\u51b5 (\\(\\gamma_c=0\\))\uff1a\u8fd9\u662f\u6700\u7ecf\u5178\u7684\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b\uff0c\u6ca1\u6709\u730e\u7269\u7ade\u4e89\u3002</p> <p>\u4e0d\u52a8\u70b9\u6709\u4e24\u4e2a\uff1a\u4e00\u4e2a\u662f\u706d\u7edd\u70b9 \\((0,0)\\)\uff0c\u53e6\u4e00\u4e2a\u662f\u5171\u5b58\u4e0d\u52a8\u70b9 \\((a^*,b^*)=(\\mu/\\gamma_p,\\lambda/\\gamma_p)\\)\u3002</p> <p>\u5206\u6790\u8868\u660e\uff0c\u8fd9\u4e2a\u5171\u5b58\u4e0d\u52a8\u70b9\u662f\u4e00\u4e2a\u4e2d\u6027\u7a33\u5b9a\u4e2d\u5fc3 (neutrally stable center)\u3002\u7cfb\u7edf\u7684\u8f68\u8ff9\u662f\u56f4\u7ed5\u8fd9\u4e2a\u4e2d\u5fc3\u7684\u4e00\u7cfb\u5217\u5c01\u95ed\u7684\u8f68\u9053\uff08\u5468\u671f\u6027\u632f\u8361\uff09\u3002\u7cfb\u7edf\u6240\u5728\u7684\u5177\u4f53\u8f68\u9053\u7531\u521d\u59cb\u6761\u4ef6\u51b3\u5b9a\u3002</p> <p>\u8fd9\u4e2a\u7cfb\u7edf\u662f\u4fdd\u5b88\u7684\uff0c\u5b58\u5728\u4e00\u4e2a\u5b88\u6052\u91cf \\(E = \\mu \\ln a + \\lambda \\ln b - \\gamma_p(a+b)\\)\u3002\u6bcf\u6761\u8f68\u9053\u5bf9\u5e94\u4e00\u4e2a\u6052\u5b9a\u7684 \\(E\\) \u503c\u3002</p> <p>\u4e00\u822c\u60c5\u51b5 (\\(\\gamma_c&gt;0\\))\uff1a\u5f15\u5165\u730e\u7269\u7ade\u4e89\u540e\uff0c\u60c5\u51b5\u53d1\u751f\u4e86\u8d28\u53d8\u3002</p> <p>\u5171\u5b58\u4e0d\u52a8\u70b9\u7684\u4f4d\u7f6e\u53d8\u4e3a \\((a^*,b^*)\\)\uff0c\u5176\u4e2d \\(b^* = (\\mu-\\gamma_p a^*)/\\gamma_c\\)\u3002</p> <p>\u7ade\u4e89\u9879 \\(\\gamma_c b^2\\) \u8d77\u5230\u4e86\"\u963b\u5c3c\"\u7684\u4f5c\u7528\u3002\u4e0d\u52a8\u70b9\u4e0d\u518d\u662f\u4e2d\u6027\u4e2d\u5fc3\uff0c\u800c\u662f\u4e00\u4e2a\u7a33\u5b9a\u87ba\u7ebf\u70b9 (stable spiral)\u3002\u65e0\u8bba\u4ece\u54ea\u4e2a\u521d\u59cb\u6761\u4ef6\u51fa\u53d1\uff08\u53ea\u8981\u79cd\u7fa4\u4e0d\u706d\u7edd\uff09\uff0c\u7cfb\u7edf\u7684\u8f68\u8ff9\u90fd\u4f1a\u4ee5\u632f\u8361\u7684\u65b9\u5f0f\u87ba\u65cb\u5f0f\u5730\u6536\u655b\u5230\u8fd9\u4e2a\u552f\u4e00\u7684\u5171\u5b58\u4e0d\u52a8\u70b9\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed8\u5236\u76f8\u56fe\uff08Phase Portraits\uff09\u6765\u5c06\u8fd9\u4e9b\u52a8\u6001\u884c\u4e3a\u53ef\u89c6\u5316\u3002 <pre><code># --- Import necessary libraries ---\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import odeint\n\n# --- Define Lotka-Volterra ODE system ---\ndef lotka_volterra_ode(y, t, lambda_rate, mu_rate, gamma_p, gamma_c):\n    a, b = y\n    da_dt = mu_rate * a - gamma_p * a * b\n    db_dt = -lambda_rate * b + gamma_p * a * b - gamma_c * b\n    return [da_dt, db_dt]\n\n# --- Set parameters ---\nlambda_rate = 1.0\nmu_rate = 1.0\ngamma_p = 1.0\ngamma_c = 0.0\n\n# --- Plot phase diagrams ---\nfig, axes = plt.subplots(1, 2, figsize=(12, 6))\n\n# --- Case 1: gamma_c = 0 (neutral center) ---\ngamma_c = 0.0\nax = axes[0]\na_max, b_max = 2.0, 2.0\na_grid, b_grid = np.meshgrid(np.linspace(0, a_max, 20), np.linspace(0, b_max, 20))\n\nu, v = np.zeros_like(a_grid), np.zeros_like(b_grid)\nNI, NJ = a_grid.shape\nfor i in range(NI):\n    for j in range(NJ):\n        y = [a_grid[i, j], b_grid[i, j]]\n        dydt = lotka_volterra_ode(y, 0, lambda_rate, mu_rate, gamma_p, gamma_c)\n        u[i, j], v[i, j] = dydt[0], dydt[1]\n\n# Plot flow field\nax.streamplot(a_grid, b_grid, u, v, density=1.2, color='darkslategrey')\n\n# Plot fixed point\na_star = mu_rate / gamma_p\nb_star = lambda_rate / gamma_p\nax.plot(a_star, b_star, 'o', markersize=8, markerfacecolor='white', markeredgecolor='black', markeredgewidth=1.5)\n\n# Plot sample trajectories\ninitial_conditions = [[a_star*1.5, b_star*1.5], [a_star*0.5, b_star*0.5]]\nt_span = np.linspace(0, 50, 500)\ncolors = ['red', 'orange']\nfor i, y0 in enumerate(initial_conditions):\n    sol = odeint(lotka_volterra_ode, y0, t_span, args=(lambda_rate, mu_rate, gamma_p, gamma_c))\n    ax.plot(sol[:, 0], sol[:, 1], color=colors[i], lw=2, alpha=0.8)\n\nax.set_xlabel('a', fontsize=14)\nax.set_ylabel('b', fontsize=14)\nax.set_xlim(0, a_max)\nax.set_ylim(0, b_max)\n\n# --- Case 2: gamma_c &gt; 0 (stable spiral point) ---\ngamma_c = 0.001\nax = axes[1]\na_max, b_max = 2.0, 2.0\na_grid, b_grid = np.meshgrid(np.linspace(0, a_max, 20), np.linspace(0, b_max, 20))\n\nu, v = np.zeros_like(a_grid), np.zeros_like(b_grid)\nNI, NJ = a_grid.shape\nfor i in range(NI):\n    for j in range(NJ):\n        y = [a_grid[i, j], b_grid[i, j]]\n        dydt = lotka_volterra_ode(y, 0, lambda_rate, mu_rate, gamma_p, gamma_c)\n        u[i, j], v[i, j] = dydt[0], dydt[1]\n\nax.streamplot(a_grid, b_grid, u, v, density=1.2, color='darkslategrey')\n\n# Plot fixed point\nb_star_damped = lambda_rate / gamma_p\na_star_damped = (mu_rate - gamma_c * b_star_damped) / gamma_p\nax.plot(a_star_damped, b_star_damped, 'o', markersize=8, markerfacecolor='red', markeredgecolor='black', markeredgewidth=1.5)\n\n# Plot sample trajectories\ninitial_conditions = [[a_star_damped*1.5, b_star_damped*1.5], [a_star_damped*0.5, b_star_damped*0.5]]\nt_span = np.linspace(0, 50, 500)\ncolors = ['red', 'orange']\nfor i, y0 in enumerate(initial_conditions):\n    sol = odeint(lotka_volterra_ode, y0, t_span, args=(lambda_rate, mu_rate, gamma_p, gamma_c))\n    ax.plot(sol[:, 0], sol[:, 1], color=colors[i], lw=2, alpha=0.8)\n\nax.set_xlabel('a', fontsize=14)\nax.set_ylabel('b', fontsize=14)\nax.set_xlim(0, a_max)\nax.set_ylim(0, b_max)\n\nfig.suptitle('Phase Portraits', fontsize=20, color='darkgreen', y=1.0)\nplt.tight_layout()\nplt.show()\n</code></pre> </p> <p>\u5de6\u56fe (\\(\\gamma_c=0\\)): \u8be5\u56fe\u6e05\u6670\u5730\u5c55\u793a\u4e86\u4e00\u4e2a\u4e2d\u6027\u7a33\u5b9a\u4e2d\u5fc3\u3002\u6d41\u7ebf\uff08streamplot\uff09\u5f62\u6210\u4e86\u56f4\u7ed5\u4e2d\u5fc3\u4e0d\u52a8\u70b9\uff08\u767d\u8272\u5706\u5708\uff09\u7684\u95ed\u5408\u73af\u8def\u3002\u6211\u4eec\u7ed8\u5236\u7684\u4e24\u6761\u8f68\u8ff9\uff08\u6a59\u8272\u548c\u6a58\u7ea2\u8272\uff09\u4e5f\u6cbf\u7740\u8fd9\u4e9b\u95ed\u5408\u8f68\u9053\u8fd0\u884c\uff0c\u6c38\u4e0d\u9760\u8fd1\u4e5f\u4e0d\u8fdc\u79bb\u4e2d\u5fc3\u3002\u8fd9\u4ee3\u8868\u4e86\u6355\u98df\u8005\u548c\u730e\u7269\u6570\u91cf\u7684\u6301\u7eed\u5468\u671f\u6027\u632f\u8361\u3002</p> <p>\u53f3\u56fe (\\(\\gamma_c&gt;0\\)): \u8be5\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u7a33\u5b9a\u87ba\u7ebf\u70b9\u3002\u6d41\u7ebf\u73b0\u5728\u90fd\u6307\u5411\u5185\u90e8\u7684\u4e2d\u5fc3\u4e0d\u52a8\u70b9\uff08\u7ea2\u8272\u5706\u5708\uff09\u3002\u6211\u4eec\u7ed8\u5236\u7684\u4e00\u6761\u8f68\u8ff9\uff08\u7ea2\u8272\uff09\u4e5f\u663e\u793a\u4e86\u79cd\u7fa4\u6570\u91cf\u4e00\u8fb9\u632f\u8361\u4e00\u8fb9\u8870\u51cf\uff0c\u6700\u7ec8\u8d8b\u5411\u4e8e\u7a33\u5b9a\u7684\u5171\u5b58\u72b6\u6001\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#4-gillespie","title":"4. \u5b8c\u6574\u7684\u968f\u673a\u6a21\u62df\uff1aGillespie \u7b97\u6cd5","text":"<p>\u786e\u5b9a\u6027\u6a21\u578b\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u7cfb\u7edf\u5e73\u5747\u884c\u4e3a\u7684\u84dd\u56fe\uff0c\u4f46\u771f\u5b9e\u7684\u6545\u4e8b\u9690\u85cf\u5728\u968f\u673a\u6027\u4e4b\u4e2d\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Gillespie \u7b97\u6cd5\u6765\u6a21\u62df\u5b8c\u6574\u7684\u968f\u673a\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u8fc7\u7a0b\u3002</p> <p></p> <p></p> <p>\u9002\u7528\u4e8e\u591a\u4e2a\u53cd\u5e94\u901a\u9053\u7684 Gillespie \u7b97\u6cd5\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <p>1.\u521d\u59cb\u5316\uff1a\u5728 \\(t=0\\) \u65f6\uff0c\u8bbe\u7f6e\u72b6\u6001 \\((N_A,N_B)\\)\u3002</p> <p>2.\u8ba1\u7b97\u6240\u6709\u503e\u5411\u6027\uff1a\u6839\u636e\u5f53\u524d\u72b6\u6001 \\((N_A,N_B)\\)\uff0c\u8ba1\u7b97\u51fa\u6240\u6709\u56db\u4e2a\u53cd\u5e94\u7684\u503e\u5411\u6027 \\(\\alpha_1,\\alpha_2,\\alpha_3,\\alpha_4\\)\u3002</p> <p>3.\u8ba1\u7b97\u603b\u901f\u7387\uff1a\u5c06\u6240\u6709\u503e\u5411\u6027\u76f8\u52a0\uff0c\u5f97\u5230\u603b\u901f\u7387 \\(\\alpha_{\\text{tot}} = \\sum_{\\mu=1}^{4} \\alpha_\\mu\\)\u3002</p> <p>4.\u786e\u5b9a\u7b49\u5f85\u65f6\u95f4\uff1a\u751f\u6210\u4e0b\u4e00\u6b21\u4e8b\u4ef6\u7684\u7b49\u5f85\u65f6\u95f4 \\(\\tau = -\\frac{1}{\\alpha_{\\text{tot}}} \\ln(\\xi_1)\\)\uff0c\u5176\u4e2d \\(\\xi_1\\) \u662f \\((0, 1]\\) \u4e0a\u7684\u5747\u5300\u968f\u673a\u6570\u3002</p> <p>5.\u9009\u62e9\u53d1\u751f\u7684\u4e8b\u4ef6\uff1a\u8fd9\u662f\u5173\u952e\u4e00\u6b65\u3002\u6211\u4eec\u9700\u8981\u6839\u636e\u6bcf\u4e2a\u53cd\u5e94\u7684\u76f8\u5bf9\u6982\u7387 \\(\\alpha_\\mu/\\alpha_{\\text{tot}}\\) \u6765\u51b3\u5b9a\u5177\u4f53\u53d1\u751f\u54ea\u4e2a\u4e8b\u4ef6\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\"\u8f6e\u76d8\u8d4c\"\u9009\u62e9\u6cd5\u5b9e\u73b0\uff1a\u751f\u6210\u7b2c\u4e8c\u4e2a\u5747\u5300\u968f\u673a\u6570 \\(\\xi_2 \\in [0,1]\\)\uff0c\u7136\u540e\u9009\u62e9\u6ee1\u8db3 \\(\\sum_{\\nu=1}^{\\mu-1} \\alpha_\\nu &lt; \\xi_2 \\alpha_{\\text{tot}} \\leq \\sum_{\\nu=1}^{\\mu} \\alpha_\\nu\\) \u7684\u53cd\u5e94 \\(\\mu\\)\u3002</p> <p>6.\u6267\u884c\u4e8b\u4ef6\uff1a\u6839\u636e\u9009\u4e2d\u7684\u53cd\u5e94\u7c7b\u578b\uff0c\u6309\u7167\u72b6\u6001\u53d8\u5316\u8868\u66f4\u65b0\u7cfb\u7edf\u72b6\u6001\u3002</p> <p>7.\u66f4\u65b0\u65f6\u95f4\uff1a\u5c06\u5f53\u524d\u65f6\u95f4\u5411\u524d\u63a8\u8fdb\uff1a\\(t \\to t+\\tau\\)\u3002</p> <p>8.\u91cd\u590d\uff1a\u56de\u5230\u7b2c 2 \u6b65\uff0c\u7ee7\u7eed\u6a21\u62df\uff0c\u76f4\u5230\u8fbe\u5230\u9884\u8bbe\u7684\u6a21\u62df\u603b\u65f6\u957f\u3002</p> <p>\u4e0b\u9762\u662f\u5b9e\u73b0\u8fd9\u4e00\u7b97\u6cd5\u7684 Python \u4ee3\u7801\uff1a</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.integrate import odeint\n\n# --- Parameter Setup ---\nlambda_rate = 1.0  # Predator death rate\nmu_rate = 1.0      # Prey birth rate\ngamma_p = 0.01     # Predation rate\n\n# --- Deterministic ODE Definition ---\ndef lotka_volterra_ode(y, t, lambda_r, mu_r, gamma_p_r, gamma_c_r):\n    \"\"\"\n    Defines the system of ordinary differential equations for the Lotka-Volterra model.\n    \"\"\"\n    a, b = y\n    dadt = (-lambda_r + gamma_p_r * b) * a\n    dbdt = (mu_r - gamma_p_r * a - gamma_c_r * b) * b\n    return [dadt, dbdt]\n\n# --- Gillespie Algorithm for Lotka-Volterra Process ---\ndef lotka_volterra_gillespie(n_a, n_b, rates, t_end):\n    \"\"\"\n    Simulates the Lotka-Volterra process using the Gillespie algorithm.\n\n    Args:\n        n_a (int): Initial number of predators.\n        n_b (int): Initial number of prey.\n        rates (tuple): A tuple of rate constants (lambda_r, mu_r, gamma_p_r, gamma_c_r).\n        t_end (float): The end time for the simulation.\n\n    Returns:\n        A tuple containing arrays for times, predator populations, and prey populations.\n    \"\"\"\n    lambda_r, mu_r, gamma_p_r, gamma_c_r = rates\n\n    t = 0.0\n    # Ensure populations are floats to avoid potential integer division issues\n    n_a = float(n_a)\n    n_b = float(n_b)\n\n    times = [t]\n    populations_a = [n_a]\n    populations_b = [n_b]\n\n    # Stoichiometry matrix: rows are reactions, columns are species (A, B)\n    nu = np.array([\n        [-1,  0],  # Reaction 1: A -&gt; 0 (Predator death)\n        [ 0, +1],  # Reaction 2: B -&gt; 2B (Prey birth)\n        [+1, -1],  # Reaction 3: A+B -&gt; 2A (Predation)\n        [ 0, -1]   # Reaction 4: 2B -&gt; B (Prey competition)\n    ])\n\n    while t &lt; t_end:\n        if n_a == 0 or n_b == 0:\n            break  # Stop if one species goes extinct\n\n        # Calculate propensities for each reaction\n        propensities = np.array([\n            lambda_r * n_a,\n            mu_r * n_b,\n            gamma_p_r * n_a * n_b,\n            gamma_c_r * n_b * (n_b - 1)\n        ])\n\n        a_total = np.sum(propensities)\n\n        if a_total == 0:\n            break # No more reactions can occur\n\n        # Generate waiting time (tau) until the next reaction\n        xi1 = np.random.uniform(0, 1)\n        tau = -np.log(xi1) / a_total\n\n        # Choose which reaction occurs\n        xi2 = np.random.uniform(0, 1)\n        p_normalized = propensities / a_total\n        reaction_idx = np.random.choice(len(propensities), p=p_normalized)\n\n        # Update time and populations\n        t += tau\n        n_a += nu[reaction_idx, 0]\n        n_b += nu[reaction_idx, 1]\n\n        times.append(t)\n        populations_a.append(n_a)\n        populations_b.append(n_b)\n\n    return np.array(times), np.array(populations_a), np.array(populations_b)\n\n# --- Initial Conditions ---\n# The deterministic fixed point is (100, 100) for gamma_c=0.\n# We start away from the fixed point to observe oscillations.\nn_a0 = 50\nn_b0 = 100\n\n# --- Plot 1: Stochastic Oscillations Time Series (Reproducing PPT_1.jpg) ---\nplt.style.use('seaborn-v0_8-whitegrid')\nfig1, ax1 = plt.subplots(figsize=(10, 6))\n\ngamma_c_1 = 0.0\nrates_1 = (lambda_rate, mu_rate, gamma_p, gamma_c_1)\n# For a better single trajectory view, let's start this one away from the fixed point too\nt_sim_1, n_a_sim_1, n_b_sim_1 = lotka_volterra_gillespie(50, 100, rates_1, 100)\n\nax1.plot(t_sim_1, n_a_sim_1, label='Predator', lw=1.5, color='royalblue')\nax1.plot(t_sim_1, n_b_sim_1, label='Prey', lw=1.5, color='darkorange')\nax1.set_xlabel('Time', fontsize=14)\nax1.set_ylabel('Population', fontsize=14)\nax1.set_title(f'Stochastic Simulation of Predator-Prey Dynamics\\n'\n              f'$\\lambda={lambda_rate}, \\mu={mu_rate}, \\gamma_p={gamma_p}, \\gamma_c={gamma_c_1}$', \n              fontsize=16)\nax1.legend(fontsize=12)\nax1.tick_params(axis='both', which='major', labelsize=12)\nax1.set_xlim(0, 100)\nax1.set_ylim(0, max(np.max(n_a_sim_1), np.max(n_b_sim_1)) * 1.1 if len(n_a_sim_1) &gt; 0 else 100)\nplt.tight_layout()\nplt.show()\n\n# --- Plot 2: Stochastic vs. Deterministic (Reproducing PPT2.jpg) ---\nfig2, axes = plt.subplots(1, 2, figsize=(16, 6))\n\n# --- Left Subplot: gamma_c = 0 ---\nax2_left = axes[0]\ngamma_c_left = 0.0\nrates_left = (lambda_rate, mu_rate, gamma_p, gamma_c_left)\nnum_simulations = 50  # Number of stochastic trajectories to plot\n\n# Run and plot multiple stochastic simulations\nfor i in range(num_simulations):\n    t_sim, n_a_sim, n_b_sim = lotka_volterra_gillespie(n_a0, n_b0, rates_left, 70)\n    # Use a low alpha to create a \"cloud\" effect\n    ax2_left.plot(t_sim, n_a_sim, color='gray', lw=0.5, alpha=0.4, \n                  label='Stochastic Simulation' if i == 0 else \"\")\n    ax2_left.plot(t_sim, n_b_sim, color='gray', lw=0.5, alpha=0.4)\n\n\n# Deterministic solution\nt_ode = np.linspace(0, 70, 1000)\ny0 = [n_a0, n_b0]\nsol_left = odeint(lotka_volterra_ode, y0, t_ode, args=rates_left)\n# Plot deterministic solution with a thick black line for contrast\nax2_left.plot(t_ode, sol_left[:, 0], color='black', lw=2.0, label='Deterministic Solution')\nax2_left.plot(t_ode, sol_left[:, 1], color='black', lw=2.0)\n\n\nax2_left.set_xlabel('Time', fontsize=12)\nax2_left.set_ylabel('Population', fontsize=12)\nax2_left.set_title(f'$\\gamma_p = {gamma_p}, \\gamma_c = {gamma_c_left}$', fontsize=14)\nax2_left.legend()\nax2_left.set_xlim(0, 70)\nax2_left.set_ylim(0, 850)\n\n\n# --- Right Subplot: gamma_c &gt; 0 ---\nax2_right = axes[1]\ngamma_c_right = 0.001\nrates_right = (lambda_rate, mu_rate, gamma_p, gamma_c_right)\n\n# Run and plot multiple stochastic simulations\nfor i in range(num_simulations):\n    t_sim, n_a_sim, n_b_sim = lotka_volterra_gillespie(n_a0, n_b0, rates_right, 70)\n    ax2_right.plot(t_sim, n_a_sim, color='gray', lw=0.5, alpha=0.4,\n                   label='Stochastic Simulation' if i == 0 else \"\")\n    ax2_right.plot(t_sim, n_b_sim, color='gray', lw=0.5, alpha=0.4)\n\n\n# Deterministic solution\nsol_right = odeint(lotka_volterra_ode, y0, t_ode, args=rates_right)\nax2_right.plot(t_ode, sol_right[:, 0], color='black', lw=2.0, label='Deterministic Solution')\nax2_right.plot(t_ode, sol_right[:, 1], color='black', lw=2.0)\n\nax2_right.set_xlabel('Time', fontsize=12)\nax2_right.set_ylabel('Population', fontsize=12)\nax2_right.set_title(f'$\\gamma_p = {gamma_p}, \\gamma_c = {gamma_c_right}$', fontsize=14)\nax2_right.legend()\nax2_right.set_xlim(0, 70)\nax2_right.set_ylim(0, 650)\n\n\nfig2.suptitle('Comparison of Stochastic Trajectories and Deterministic Solutions', fontsize=20, y=1.02)\nplt.tight_layout()\nplt.show()\n</code></pre> \u7b2c\u4e00\u5f20\u56fe (\u968f\u673a\u632f\u8361\u65f6\u95f4\u5e8f\u5217)\uff1a\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u5728\u6ca1\u6709\u730e\u7269\u7ade\u4e89\uff08\\(\\gamma_c=0\\)\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u6b21\u5178\u578b\u7684\u968f\u673a\u6a21\u62df\u7ed3\u679c\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6e05\u6670\u7684\u6355\u98df\u8005-\u730e\u7269\u632f\u8361\uff1a\u730e\u7269\uff08\u6a59\u8272\u7ebf\uff09\u6570\u91cf\u5148\u589e\u52a0\uff0c\u968f\u540e\u6355\u98df\u8005\uff08\u84dd\u8272\u7ebf\uff09\u6570\u91cf\u56e0\u98df\u7269\u5145\u8db3\u800c\u589e\u52a0\uff1b\u6355\u98df\u8005\u589e\u591a\u5bfc\u81f4\u730e\u7269\u6570\u91cf\u4e0b\u964d\uff0c\u63a5\u7740\u6355\u98df\u8005\u56e0\u98df\u7269\u77ed\u7f3a\u800c\u6570\u91cf\u4e0b\u964d\uff0c\u5b8c\u6210\u4e00\u4e2a\u5faa\u73af\u3002\u7136\u800c\uff0c\u4e0e\u786e\u5b9a\u6027\u6a21\u578b\u7684\u5b8c\u7f8e\u5468\u671f\u4e0d\u540c\uff0c\u8fd9\u91cc\u7684\u632f\u8361\u5e45\u5ea6\u548c\u5468\u671f\u90fd\u662f\u968f\u673a\u53d8\u5316\u7684\u3002</p> <p></p> <p>\u7b2c\u4e8c\u5f20\u56fe (\u968f\u673a vs \u786e\u5b9a\u6027\u5bf9\u6bd4)\uff1a\u8fd9\u5f20\u56fe\u662f\u672c\u8bb2\u5ea7\u6700\u6838\u5fc3\u3001\u6700\u53d1\u4eba\u6df1\u7701\u7684\u7ed3\u679c\u3002</p> <p></p> <p>\u5de6\u5b50\u56fe (\\(\\gamma_c=0\\)): \u786e\u5b9a\u6027\u89e3\uff08\u7c97\u9ed1\u7ebf\uff09\u662f\u4e00\u6761\u5b8c\u7f8e\u7684\u3001\u7a33\u5b9a\u7684\u5468\u671f\u8f68\u9053\u3002\u7136\u800c\uff0c\u968f\u673a\u6a21\u62df\uff08\u7ec6\u7070\u7ebf\uff09\u7684\u884c\u4e3a\u622a\u7136\u4e0d\u540c\u3002\u968f\u673a\u8f68\u8ff9\u7684\u632f\u8361\u5e45\u5ea6\u503e\u5411\u4e8e\u4e0d\u65ad\u589e\u5927\uff0c\u51fa\u73b0\u8d8a\u6765\u8d8a\u9ad8\u7684\u6ce2\u5cf0\u548c\u8d8a\u6765\u8d8a\u4f4e\u7684\u6ce2\u8c37\u3002\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u786e\u5b9a\u6027\u7cfb\u7edf\u662f\u4fdd\u5b88\u7684\uff0c\u88ab\"\u56da\u7981\"\u5728\u7531\u521d\u59cb\u6761\u4ef6\u51b3\u5b9a\u7684\u4e00\u6761\u8f68\u9053\u4e0a\u3002\u800c\u968f\u673a\u4e8b\u4ef6\uff08\u51fa\u751f\u3001\u6b7b\u4ea1\uff09\u5c31\u50cf\u662f\u5bf9\u7cfb\u7edf\u7684\u968f\u673a\"\u8e22\u52a8\"\uff0c\u4f7f\u5f97\u7cfb\u7edf\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u8f68\u9053\u4e4b\u95f4\u8fdb\u884c\u968f\u673a\u6e38\u8d70\u3002\u7531\u4e8e\u6ca1\u6709\u4e00\u4e2a\u529b\u628a\u5b83\u62c9\u56de\u5230\u67d0\u4e2a\u7279\u5b9a\u7684\u8f68\u9053\uff0c\u8fd9\u79cd\u6e38\u8d70\u4f1a\u4f7f\u632f\u8361\u5e45\u5ea6\u6269\u6563\uff0c\u6781\u5927\u5730\u589e\u52a0\u4e86\u67d0\u4e2a\u7269\u79cd\u6570\u91cf\u89e6\u53ca\u96f6\uff08\u5373\u706d\u7edd\uff09\u7684\u98ce\u9669\u3002\u5728\u8fd9\u91cc\uff0c\u5185\u5728\u566a\u97f3\u8d77\u5230\u4e86\u7834\u574f\u7a33\u5b9a\u6027\u7684\u4f5c\u7528\u3002</p> <p>\u53f3\u5b50\u56fe (\\(\\gamma_c &gt; 0\\)): \u5f15\u5165\u730e\u7269\u7ade\u4e89\u540e\uff0c\u786e\u5b9a\u6027\u89e3\uff08\u7c97\u9ed1\u7ebf\uff09\u8868\u73b0\u4e3a\u963b\u5c3c\u632f\u8361\uff0c\u6700\u7ec8\u7a33\u5b9a\u5728\u4e00\u4e2a\u4e0d\u52a8\u70b9\u4e0a\u3002\u751f\u6001\u7cfb\u7edf\u8fbe\u5230\u4e86\u4e00\u4e2a\u9759\u6001\u7684\u5e73\u8861\u3002\u7136\u800c\uff0c\u968f\u673a\u6a21\u62df\uff08\u7ec6\u7070\u7ebf\uff09\u518d\u6b21\u8bb2\u8ff0\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u6545\u4e8b\u3002\u8f68\u8ff9\u786e\u5b9e\u88ab\u5438\u5f15\u5230\u4e86\u4e0d\u52a8\u70b9\u9644\u8fd1\uff0c\u4f46\u5b83\u5e76\u6ca1\u6709\u505c\u4e0b\u6765\u3002\u76f8\u53cd\uff0c\u5b83\u5728\u4e0d\u52a8\u70b9\u5468\u56f4\u6301\u7eed\u5730\u8fdb\u884c\u7740\u968f\u673a\u6ce2\u52a8\u3002\u8fd9\u91cc\uff0c\u786e\u5b9a\u6027\u52a8\u529b\u50cf\u4e00\u4e2a\"\u6062\u590d\u529b\"\uff0c\u603b\u662f\u8bd5\u56fe\u5c06\u7cfb\u7edf\u62c9\u56de\u5230\u5e73\u8861\u70b9\uff1b\u800c\u968f\u673a\u4e8b\u4ef6\u5219\u50cf\u4e00\u4e2a\u6301\u7eed\u7684\"\u9a71\u52a8\u529b\"\uff0c\u4e0d\u65ad\u5730\u5c06\u7cfb\u7edf\u8e22\u79bb\u5e73\u8861\u70b9\u3002\u8fd9\u4e24\u8005\u4e4b\u95f4\u8fbe\u6210\u7684\u52a8\u6001\u5e73\u8861\uff0c\u4f7f\u5f97\u7cfb\u7edf\u80fd\u591f\u7ef4\u6301\u6301\u7eed\u7684\u3001\u6709\u566a\u58f0\u7684\u632f\u8361\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5185\u5728\u566a\u97f3\u8d77\u5230\u4e86\u7ef4\u6301\u52a8\u6001\u3001\u9632\u6b62\u7cfb\u7edf\"\u6b7b\u4ea1\"\u7684\u4f5c\u7528\u3002</p>"},{"location":"zh/notes/5.%20%E7%A7%8D%E7%BE%A4%E5%8A%A8%E6%80%81%E5%AD%A6%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%AD%BB%E4%BA%A1%E8%BF%87%E7%A8%8B%E4%B8%8ELotka-Volterra%20%E7%B3%BB%E7%BB%9F/#_3","title":"\u603b\u7ed3","text":"<p>\u901a\u8fc7\u672c\u6b21\u8bfe\u7684\u5b66\u4e60\uff0c\u6211\u4eec\u5b8c\u6210\u4e86\u4e00\u6b21\u4ece\u7b80\u5355\u5230\u590d\u6742\u7684\u65c5\u7a0b\uff0c\u4ece\u4e00\u4e2a\u7269\u79cd\u7684\u6307\u6570\u8870\u51cf\uff0c\u5230\u4e00\u4e2a\u5b8c\u6574\u751f\u6001\u7cfb\u7edf\u7684\u590d\u6742\u4e92\u52a8\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u6df1\u5165\u63a2\u8ba8\u4e86\u63cf\u8ff0\u8fd9\u4e9b\u7cfb\u7edf\u7684\u4e24\u79cd\u4e0d\u540c\u54f2\u5b66\uff1a\u786e\u5b9a\u6027\u5e73\u5747\u573a\u7406\u8bba\u548c\u5b8c\u6574\u7684\u968f\u673a\u7406\u8bba\u3002</p> <p>\u6211\u4eec\u603b\u7ed3\u51fa\u4ee5\u4e0b\u5173\u952e\u6559\u8bad\uff1a</p> <p>1.\u786e\u5b9a\u6027\u6a21\u578b\u6355\u6349\u5e73\u5747\u884c\u4e3a\uff1a\u5bf9\u4e8e\u7ebf\u6027\u8fc7\u7a0b\uff0c\u6216\u8005\u5bf9\u4e8e\u79cd\u7fa4\u89c4\u6a21\u6781\u5927\u7684\u975e\u7ebf\u6027\u8fc7\u7a0b\uff0c\u786e\u5b9a\u6027\uff08\u5e73\u5747\u573a\uff09\u65b9\u7a0b\u80fd\u591f\u5f88\u597d\u5730\u63cf\u8ff0\u7cfb\u7edf\u7684\u5e73\u5747\u52a8\u6001\u3002\u4f8b\u5982\uff0c\u7ebf\u6027\u6b7b\u4ea1\u8fc7\u7a0b\u7684\u5e73\u5747\u503c\u4e0e\u786e\u5b9a\u6027\u89e3\u5b8c\u5168\u4e00\u81f4\u3002</p> <p>2.\u968f\u673a\u6027\u63ed\u793a\u4e86\u6ce2\u52a8\u7684\u672c\u8d28\uff1a\u968f\u673a\u6a21\u578b\u4e0d\u4ec5\u7ed9\u51fa\u4e86\u5e73\u5747\u884c\u4e3a\uff0c\u8fd8\u7cbe\u786e\u5730\u91cf\u5316\u4e86\u56f4\u7ed5\u5e73\u5747\u503c\u7684\u6ce2\u52a8\uff08\u65b9\u5dee\u6216\u6574\u4e2a\u6982\u7387\u5206\u5e03\uff09\u3002\u8fd9\u4e9b\"\u4eba\u53e3\u566a\u97f3\"\u5728\u786e\u5b9a\u6027\u4e16\u754c\u4e2d\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u4f46\u5728\u771f\u5b9e\u7684\u751f\u7269\u7cfb\u7edf\u4e2d\uff0c\u5b83\u4eec\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3001\u6838\u5fc3\u7684\u7ec4\u6210\u90e8\u5206\u3002</p> <p>3.\u566a\u97f3\u7684\u89d2\u8272\u662f\u5fae\u5999\u4e14\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u7684\uff1a\u901a\u8fc7\u5bf9\u6bd4\u6709\u65e0\u7ade\u4e89\u7684\u6d1b\u7279\u5361-\u6c83\u5c14\u6cf0\u62c9\u6a21\u578b\uff0c\u6211\u4eec\u770b\u5230\u4e86\u4e00\u4e2a\u6700\u6df1\u523b\u7684\u7ed3\u8bba\uff1a\u566a\u97f3\u5e76\u975e\u603b\u662f\"\u8ba8\u538c\u7684\"\u968f\u673a\u6270\u52a8\u3002\u5b83\u7684\u4f5c\u7528\u4e0e\u7cfb\u7edf\u672c\u8eab\u7684\u786e\u5b9a\u6027\u52a8\u529b\u5b66\u7ed3\u6784\u5bc6\u5207\u76f8\u5173\u3002</p> <pre><code>* \u5728\u4fdd\u5b88\u7684\u3001\u5177\u6709\u4e2d\u6027\u7a33\u5b9a\u8f68\u9053\u7684\u7cfb\u7edf\u4e2d\uff08\u5982 $\\gamma_c=0$\uff09\uff0c\u566a\u97f3\u662f**\u7834\u574f\u6027\u7684**\uff0c\u5b83\u4f1a\u653e\u5927\u632f\u8361\uff0c\u9a71\u52a8\u7cfb\u7edf\u8d70\u5411\u706d\u7edd\u3002\n* \u5728\u8017\u6563\u7684\u3001\u5177\u6709\u7a33\u5b9a\u5438\u5f15\u5b50\u7684\u7cfb\u7edf\u4e2d\uff08\u5982 $\\gamma_c&gt;0$\uff09\uff0c\u566a\u97f3\u662f**\u521b\u9020\u6027\u7684**\uff0c\u5b83\u80fd\u4e0e\u786e\u5b9a\u6027\u7684\u5438\u5f15\u529b\u76f8\u6297\u8861\uff0c\u7ef4\u6301\u7cfb\u7edf\u6301\u7eed\u7684\u52a8\u6001\u6ce2\u52a8\uff0c\u9632\u6b62\u5176\u9677\u5165\u6b7b\u5bc2\u7684\u5e73\u8861\u3002\n</code></pre> <p>\u6700\u7ec8\uff0c\u8fd9\u8282\u8bfe\u544a\u8bc9\u6211\u4eec\uff0c\u8981\u771f\u6b63\u7406\u89e3\u751f\u6001\u7cfb\u7edf\u3001\u7ec6\u80de\u7f51\u7edc\u6216\u6d41\u884c\u75c5\u4f20\u64ad\u7b49\u73b0\u8c61\uff0c\u6211\u4eec\u5fc5\u987b\u62e5\u62b1\u968f\u673a\u6027\u3002\u968f\u673a\u6ce2\u52a8\u4e0d\u662f\u9700\u8981\u88ab\u5e73\u5747\u6389\u7684\u7ec6\u8282\uff0c\u800c\u662f\u9a71\u52a8\u7cfb\u7edf\u4ea7\u751f\u4e30\u5bcc\u3001\u590d\u6742\u751a\u81f3\u53cd\u76f4\u89c9\u884c\u4e3a\u7684\u5173\u952e\u56e0\u7d20\u3002\u6211\u4eec\u5efa\u7acb\u7684\"\u4e3b\u65b9\u7a0b-Gillespie\u7b97\u6cd5\"\u6846\u67b6\uff0c\u4e3a\u63a2\u7d22\u8fd9\u4e2a\u968f\u673a\u4e16\u754c\u63d0\u4f9b\u4e86\u5f3a\u5927\u800c\u7cbe\u786e\u7684\u5de5\u5177\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/","title":"\u5f15\u8a00","text":"<p>\u5728\u524d\u51e0\u8bb2\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u63a5\u89e6\u4e86\u591a\u79cd\u968f\u673a\u8fc7\u7a0b\u7684\u5177\u4f53\u5b9e\u4f8b\u3002\u4ece\u7b2c\u4e00\u8bb2\u4e2d\u7c92\u5b50\u5728\u4e00\u7ef4\u6676\u683c\u4e0a\u7684\"\u7b80\u5355\u968f\u673a\u6e38\u8d70\"\uff0c\u5230\u7b2c\u56db\u8bb2\u4e2d\u63cf\u8ff0\u751f\u7269\u79cd\u7fa4\u6570\u91cf\u751f\u706d\u7684\"\u79cd\u7fa4\u52a8\u6001\u5b66\"\uff0c\u6211\u4eec\u770b\u5230\u4e86\u968f\u673a\u6027\u5728\u7269\u7406\u548c\u751f\u7269\u7cfb\u7edf\u4e2d\u7684\u6838\u5fc3\u4f5c\u7528\u3002\u8fd9\u4e9b\u4f8b\u5b50\u867d\u7136\u5177\u4f53\uff0c\u4f46\u5f15\u51fa\u4e86\u4e00\u4e2a\u66f4\u6df1\u5c42\u6b21\u7684\u95ee\u9898\uff1a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u666e\u9002\u7684\u6570\u5b66\u6846\u67b6\uff0c\u4e00\u79cd\u901a\u7528\u7684\u8bed\u8a00\uff0c\u6765\u63cf\u8ff0\u6240\u6709\u90a3\u4e9b\"\u4e0d\u8ba1\u8fc7\u5f80\uff0c\u53ea\u770b\u4eca\u671d\"\u7684\u968f\u673a\u6f14\u5316\u8fc7\u7a0b\uff1f</p> <p>\u8fd9\u8282\u8bfe\u7684\u76ee\u6807\u6b63\u662f\u8981\u5efa\u7acb\u5e76\u7406\u89e3\u8fd9\u4e00\u901a\u7528\u8bed\u8a00\u3002Erwin Frey\u5c06\u5e26\u9886\u6211\u4eec\u63a8\u5bfc\u5e76\u9610\u91ca\u652f\u914d\u6240\u6709\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\uff08Markov Processes\uff09\u7684\u4e24\u4e2a\u57fa\u672c\u65b9\u7a0b\u3002\u9996\u5148\u662f\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b (Chapman-Kolmogorov Equation)\uff0c\u5b83\u5982\u540c\u5b8f\u89c2\u4e16\u754c\u7684\u6865\u6881\uff0c\u8fde\u63a5\u4e86\u4e0d\u540c\u65f6\u95f4\u70b9\u4e0a\u7684\u6982\u7387\u5206\u5e03\u3002\u968f\u540e\uff0c\u6211\u4eec\u5c06\u4ece\u5b8f\u89c2\u6df1\u5165\u5fae\u89c2\uff0c\u63a8\u5bfc\u51fa\u4e3b\u65b9\u7a0b (Master Equation)\uff0c\u5b83\u4ee5\u77ac\u65f6\"\u901f\u7387\"\u7684\u5f62\u5f0f\uff0c\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u63cf\u8ff0\u7cfb\u7edf\u72b6\u6001\u6982\u7387\u5982\u4f55\u968f\u65f6\u95f4\u8fde\u7eed\u6f14\u5316\u7684\u5f3a\u5927\u5de5\u5177\u3002\u8fd9\u4e24\u4e2a\u65b9\u7a0b\u5171\u540c\u6784\u6210\u4e86\u968f\u673a\u8fc7\u7a0b\u7406\u8bba\u7684\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#1","title":"1. \u968f\u673a\u8fc7\u7a0b\u7684\u6982\u7387\u63cf\u8ff0","text":""},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#11-defining-a-stochastic-process","title":"1.1 \u5b9a\u4e49\u968f\u673a\u8fc7\u7a0b (Defining a Stochastic Process)","text":"<p>\u4e3a\u4e86\u6784\u5efa\u4e00\u4e2a\u901a\u7528\u7684\u7406\u8bba\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u4e00\u4e2a\u7cbe\u786e\u7684\u6570\u5b66\u5b9a\u4e49\u3002\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b\uff08Stochastic Process\uff09\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u4e2a\u7531\u65f6\u95f4\\(t\\)\u7d22\u5f15\u7684\u968f\u673a\u53d8\u91cf\u7684\u96c6\u5408\u3002\u5728\u6700\u4e00\u822c\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u591a\u7ef4\u5411\u91cf\uff1a</p> \\[ X(t) = (X_1(t), X_2(t), \\ldots) \\] <p>\u5176\u4e2d\uff0c\u6bcf\u4e2a\u5206\u91cf\\(X_i(t)\\)\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5b83\u7684\u53d6\u503c\u53ef\u4ee5\u662f\u8fde\u7eed\u7684\u5b9e\u6570\uff08\\(X_i \\in \\mathbb{R}\\)\uff09\uff0c\u4f8b\u5982\u5e03\u6717\u8fd0\u52a8\u4e2d\u7c92\u5b50\u7684\u4f4d\u7f6e\uff1b\u4e5f\u53ef\u4ee5\u662f\u79bb\u6563\u7684\u6574\u6570\uff08\\(X_i \\in \\mathbb{Z}\\)\uff09\uff0c\u4f8b\u5982\u79cd\u7fa4\u4e2d\u7684\u4e2a\u4f53\u6570\u91cf\u3002</p> <p>\u4e3a\u4e86\u7b80\u5316\u8ba8\u8bba\u5e76\u6293\u4f4f\u6838\u5fc3\u6982\u5ff5\uff0c\u6211\u4eec\u9075\u5faa\u6559\u6388\u5728\u8bb2\u5ea7\u4e2d\u7684\u505a\u6cd5\uff0c\u6682\u65f6\u53ea\u8003\u8651\u4e00\u4e2a\u5355\u5206\u91cf\u7684\u968f\u673a\u53d8\u91cf\\(X(t)\\)\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#12-joint-probability-density-the-complete-description","title":"1.2 \u8054\u5408\u6982\u7387\u5bc6\u5ea6\uff1a\u5b8c\u6574\u7684\u63cf\u8ff0 (Joint Probability Density: The Complete Description)","text":"<p>\u5982\u4f55\u624d\u80fd\u5b8c\u6574\u5730\u63cf\u8ff0\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b\u5462\uff1f\u7b54\u6848\u662f\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u5728\u4efb\u610f\u4e00\u7cfb\u5217\u65f6\u95f4\u70b9\\(t_1, t_2, \\ldots, t_n\\)\u4e0a\uff0c\u968f\u673a\u53d8\u91cf\\(X(t)\\)\u5206\u522b\u53d6\u503c\u4e3a\\(x_1, x_2, \\ldots, x_n\\)\u7684\u8054\u5408\u6982\u7387\u3002\u8fd9\u7531\u8054\u5408\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\\(P(x_n, t_n; x_{n-1}, t_{n-1}; \\ldots; x_1, t_1)\\)\u6765\u523b\u753b\u3002\u5176\u4e25\u683c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[ P(x_n, t_n; \\ldots; x_1, t_1) dx_n \\ldots dx_1 = \\mathrm{Prob}\\{x_n \\leq X(t_n) \\leq x_n + dx_n; \\ldots; x_1 \\leq X(t_1) \\leq x_1 + dx_1\\} \\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u542b\u4e49\u662f\uff0c\u5728\u65f6\u95f4\\(t_1\\)\u89c2\u6d4b\u5230\u7cfb\u7edf\u72b6\u6001\u5728\\(x_1\\)\u9644\u8fd1\uff0c\u5e76\u4e14\u5728\u65f6\u95f4\\(t_2\\)\u89c2\u6d4b\u5230\u72b6\u6001\u5728\\(x_2\\)\u9644\u8fd1\uff0c...\uff0c\u4e00\u76f4\u5230\u5728\u65f6\u95f4\\(t_n\\)\u89c2\u6d4b\u5230\u72b6\u6001\u5728\\(x_n\\)\u9644\u8fd1\u7684\u8054\u5408\u6982\u7387\u3002</p> <p>\u8fd9\u4e2a\u8054\u5408\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u662f\u63cf\u8ff0\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b\u6700\u6839\u672c\u3001\u6700\u5b8c\u6574\u7684\u65b9\u5f0f\uff0c\u5b83\u5305\u542b\u4e86\u7cfb\u7edf\u5728\u4e0d\u540c\u65f6\u95f4\u70b9\u4e4b\u95f4\u6240\u6709\u53ef\u80fd\u7684\u5173\u8054\u4fe1\u606f\u3002\u7136\u800c\uff0c\u8fd9\u79cd\"\u5b8c\u6574\u6027\"\u4e5f\u5e26\u6765\u4e86\u5de8\u5927\u7684\u590d\u6742\u6027\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u8981\u4e3a\u4e00\u4e2a\u771f\u5b9e\u7cfb\u7edf\u786e\u5b9a\u8fd9\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u9700\u8981\u6d4b\u91cf\u6216\u8ba1\u7b97\u51fa\u6240\u6709\u53ef\u80fd\u5386\u53f2\u8def\u5f84\u7684\u6982\u7387\u3002\u968f\u7740\u65f6\u95f4\u70b9\\(n\\)\u7684\u589e\u52a0\u6216\u72b6\u6001\u7a7a\u95f4\u7ef4\u5ea6\u7684\u6269\u5927\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u590d\u6742\u6027\u4f1a\u7206\u70b8\u5f0f\u589e\u957f\uff0c\u4f7f\u5176\u5728\u5b9e\u8df5\u4e2d\u51e0\u4e4e\u65e0\u6cd5\u4f7f\u7528\u3002\u8fd9\u6b63\u662f\u7406\u8bba\u5efa\u6a21\u4e2d\u4e00\u4e2a\u6838\u5fc3\u6311\u6218\u7684\u4f53\u73b0\uff1a\u6211\u4eec\u5fc5\u987b\u5f15\u5165\u5408\u7406\u7684\u7269\u7406\u7b80\u5316\u5047\u8bbe\uff0c\u624d\u80fd\u4ece\u8fd9\u79cd\u65e0\u6cd5\u9a7e\u9a6d\u7684\u590d\u6742\u6027\u4e2d\u63d0\u53d6\u51fa\u6709\u7528\u7684\u3001\u53ef\u89e3\u7684\u6570\u5b66\u6a21\u578b\u3002\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff0c\u6b63\u662f\u6211\u4eec\u5c06\u8981\u4ecb\u7ecd\u7684\u6700\u91cd\u8981\u3001\u6700\u5f3a\u5927\u7684\u7b80\u5316\u5047\u8bbe\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#13-stochastic-trajectory-and-conditional-probability","title":"1.3 \u968f\u673a\u8f68\u8ff9\u4e0e\u6761\u4ef6\u6982\u7387 (Stochastic Trajectory and Conditional Probability)","text":"<p>\u4e3a\u4e86\u66f4\u76f4\u89c2\u5730\u7406\u89e3\u968f\u673a\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f15\u5165\"\u968f\u673a\u8f68\u8ff9\"\uff08Stochastic Trajectory\uff09\u7684\u6982\u5ff5\u3002\u968f\u673a\u8fc7\u7a0b\u7684\u6bcf\u4e00\u6b21\u5177\u4f53\u5b9e\u73b0\uff0c\u5373\\(X(t)\\)\u968f\u65f6\u95f4\\(t\\)\u6f14\u5316\u6240\u5f62\u6210\u7684\u4e00\u6761\u5177\u4f53\u8def\u5f84\uff0c\u5c31\u662f\u4e00\u6761\u968f\u673a\u8f68\u8ff9\u3002\u5b83\u63cf\u7ed8\u4e86\u7cfb\u7edf\u72b6\u6001\u968f\u65f6\u95f4\u7684\u4e00\u6b21\u5177\u4f53\u6f14\u5316\u5386\u53f2\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u8981\u5206\u6790\u4e0d\u540c\u65f6\u95f4\u70b9\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u2014\u2014\u5373\u8fc7\u53bb\u5982\u4f55\u5f71\u54cd\u672a\u6765\u2014\u2014\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6761\u4ef6\u6982\u7387\uff08Conditional Probability\uff09\u8fd9\u4e00\u6570\u5b66\u5de5\u5177\u3002\u6839\u636e\u5176\u5b9a\u4e49\uff0c\u5728\u5df2\u77e5\u8fc7\u53bb\u4e00\u7cfb\u5217\u4e8b\u4ef6\uff08\u5728\\(t_1, \\ldots, t_n\\)\u65f6\u523b\u72b6\u6001\u4e3a\\(x_1, \\ldots, x_n\\)\uff09\u7684\u6761\u4ef6\u4e0b\uff0c\u672a\u6765\u4e00\u7cfb\u5217\u4e8b\u4ef6\uff08\u5728\\(t_{n+1}, \\ldots, t_{n+m}\\)\u65f6\u523b\u72b6\u6001\u4e3a\\(x_{n+1}, \\ldots, x_{n+m}\\)\uff09\u53d1\u751f\u7684\u6982\u7387\u4e3a\uff1a</p> \\[ P(x_{n+m}, t_{n+m}; \\ldots; x_{n+1}, t_{n+1} \\mid x_n, t_n; \\ldots; x_1, t_1) = \\frac{P(x_{n+m}, t_{n+m}; \\ldots; x_{n+1}, t_{n+1}; x_n, t_n; \\ldots; x_1, t_1)}{P(x_n, t_n; \\ldots; x_1, t_1)} \\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u8ba8\u8bba\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\u7684\u51fa\u53d1\u70b9\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#2","title":"2. \u6838\u5fc3\u5047\u8bbe\uff1a\u9a6c\u5c14\u53ef\u592b\u6027\u8d28","text":""},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#21-defining-a-memoryless-process","title":"2.1 \"\u65e0\u8bb0\u5fc6\"\u8fc7\u7a0b\u7684\u5b9a\u4e49 (Defining a \"Memoryless\" Process)","text":"<p>\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff08Markov Property\uff09\u662f\u5bf9\u968f\u673a\u8fc7\u7a0b\"\u8bb0\u5fc6\"\u7684\u9650\u5236\uff0c\u5b83\u6784\u6210\u4e86\u672c\u8bb2\u5ea7\u540e\u7eed\u6240\u6709\u7406\u8bba\u7684\u57fa\u77f3\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\"\u65e0\u8bb0\u5fc6\u6027\"\uff08memoryless\uff09\u3002\u4e00\u4e2a\u8fc7\u7a0b\u5982\u679c\u5177\u6709\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff0c\u90a3\u4e48\u5176\u672a\u6765\u7684\u72b6\u6001\u53ea\u4f9d\u8d56\u4e8e\u5f53\u524d\u7684\u72b6\u6001\uff0c\u800c\u4e0e\u5230\u8fbe\u5f53\u524d\u72b6\u6001\u7684\u6574\u4e2a\u5386\u53f2\u8def\u5f84\u65e0\u5173\u3002</p> <p>\u7528\u6761\u4ef6\u6982\u7387\u7684\u8bed\u8a00\u6765\u8868\u8ff0\uff0c\u8fd9\u4e2a\u6027\u8d28\u53ef\u4ee5\u5199\u6210\uff1a</p> \\[ P(x_n, t_n \\mid x_{n-1}, t_{n-1}; \\ldots; x_1, t_1) = P(x_n, t_n \\mid x_{n-1}, t_{n-1}) \\] <p>\u8fd9\u4e2a\u7b49\u5f0f\u610f\u5473\u7740\uff0c\u4e3a\u4e86\u9884\u6d4b\u5728\\(t_n\\)\u65f6\u523b\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001\\(x_n\\)\u7684\u6982\u7387\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5b83\u5728\u7d27\u90bb\u7684\u524d\u4e00\u4e2a\u65f6\u523b\\(t_{n-1}\\)\u6240\u5904\u7684\u72b6\u6001\\(x_{n-1}\\)\u5c31\u8db3\u591f\u4e86\u3002\u6240\u6709\u66f4\u65e9\u7684\u5386\u53f2\u4fe1\u606f\uff08\\(x_{n-2}, \\ldots, x_1\\)\uff09\u5bf9\u4e8e\u9884\u6d4b\u672a\u6765\u90fd\u662f\u5197\u4f59\u7684\u3002\u5f53\u524d\u72b6\u6001\\(x_{n-1}\\)\u5df2\u7ecf\u5305\u542b\u4e86\u9884\u6d4b\u672a\u6765\u6240\u9700\u7684\u5168\u90e8\u4fe1\u606f\u3002</p> <p>\u8fd9\u4e2a\u770b\u4f3c\u7b80\u5355\u7684\u6570\u5b66\u5047\u8bbe\u80cc\u540e\uff0c\u8574\u542b\u7740\u6df1\u523b\u7684\u7269\u7406\u6d1e\u89c1\u3002\u4e00\u4e2a\u7269\u7406\u7cfb\u7edf\u4e4b\u6240\u4ee5\u80fd\u88ab\u8fd1\u4f3c\u4e3a\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\uff0c\u901a\u5e38\u662f\u56e0\u4e3a\u5b58\u5728\u7740\u65f6\u95f4\u5c3a\u5ea6\u7684\u5206\u79bb\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4e00\u4e2a\u5728\u6db2\u4f53\u4e2d\u8fd0\u52a8\u7684\u5927\u9897\u7c92\uff08\u5e03\u6717\u8fd0\u52a8\uff09\u3002\u5b83\u7684\u4f4d\u7f6e\\(X(t)\\)\u662f\u6211\u4eec\u5173\u5fc3\u7684\u968f\u673a\u53d8\u91cf\u3002\u4e25\u683c\u6765\u8bf4\uff0c\u5b83\u7684\u8fd0\u52a8\u662f\u6709\u8bb0\u5fc6\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u901f\u5ea6\u5728\u77ed\u65f6\u95f4\u5185\u4f1a\u4fdd\u6301\u3002\u4e00\u4e2a\u5b8c\u6574\u7684\u63cf\u8ff0\u9700\u8981\u8003\u8651\u72b6\u6001\\((X(t), V(t))\\)\u3002\u7136\u800c\uff0c\u9897\u7c92\u4e0e\u5927\u91cf\u5fae\u5c0f\u7684\u6db2\u4f53\u5206\u5b50\u78b0\u649e\uff0c\u5bfc\u81f4\u5176\u901f\u5ea6\u7684\u5173\u8054\u65f6\u95f4\uff08\u8bb0\u5fc6\u65f6\u95f4\uff09\u975e\u5e38\u77ed\u3002\u5982\u679c\u6211\u4eec\u89c2\u5bdf\u9897\u7c92\u4f4d\u7f6e\u7684\u65f6\u95f4\u5c3a\u5ea6\u8fdc\u5927\u4e8e\u8fd9\u4e2a\u901f\u5ea6\u5173\u8054\u65f6\u95f4\uff0c\u90a3\u4e48\u5728\u6211\u4eec\u7684\u89c2\u5bdf\u5c3a\u5ea6\u4e0a\uff0c\u9897\u7c92\u7684\u4e0b\u4e00\u6b65\u4f4d\u79fb\u5c31\u51e0\u4e4e\u53ea\u4e0e\u5176\u5f53\u524d\u4f4d\u7f6e\u6709\u5173\uff0c\u800c\u4e0e\u5176\u4e4b\u524d\u7684\u901f\u5ea6\u5386\u53f2\u65e0\u5173\u3002\u56e0\u6b64\uff0c\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\u5e76\u975e\u4e00\u4e2a\u7edd\u5bf9\u7684\u7269\u7406\u5b9a\u5f8b\uff0c\u800c\u662f\u4e00\u4e2a\u6781\u5176\u6709\u6548\u7684\u8fd1\u4f3c\uff0c\u5b83\u9002\u7528\u4e8e\u90a3\u4e9b\u6240\u6709\u672a\u88ab\u89c2\u6d4b\u7684\u3001\u643a\u5e26\u8bb0\u5fc6\u7684\"\u5feb\u53d8\u91cf\"\u80fd\u591f\u5728\u5176\u5f1b\u8c6b\u65f6\u95f4\u5c3a\u5ea6\u4e0a\u8fc5\u901f\u8fbe\u5230\u5e73\u8861\uff0c\u4ece\u800c\u4e0d\u5f71\u54cd\u6211\u4eec\u6240\u5173\u5fc3\u7684\"\u6162\u53d8\u91cf\"\u7684\u6f14\u5316\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#22-simplifying-the-joint-probability","title":"2.2 \u7b80\u5316\u8054\u5408\u6982\u7387 (Simplifying the Joint Probability)","text":"<p>\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\u7684\u5a01\u529b\u5728\u4e8e\u5b83\u80fd\u6781\u5927\u5730\u7b80\u5316\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u3001\u6781\u5176\u590d\u6742\u7684\u8054\u5408\u6982\u7387\u5bc6\u5ea6\u3002\u5229\u7528\u6761\u4ef6\u6982\u7387\u7684\u94fe\u5f0f\u6cd5\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8054\u5408\u6982\u7387\u5206\u89e3\uff1a</p> \\[ P(x_n, t_n; \\ldots; x_1, t_1) = P(x_n, t_n \\mid x_{n-1}, t_{n-1}; \\ldots; x_1, t_1) \\cdot P(x_{n-1}, t_{n-1}; \\ldots; x_1, t_1) \\] <p>\u5e94\u7528\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff0c\u4e0a\u5f0f\u4e2d\u7684\u6761\u4ef6\u6982\u7387\u88ab\u5927\u5927\u7b80\u5316\u3002\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6574\u4e2a\u8054\u5408\u6982\u7387\u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u4e24\u70b9\u8f6c\u79fb\u6982\u7387\uff08transition probability\uff09\u7684\u4e58\u79ef\uff1a</p> \\[ P(x_n, t_n; \\ldots; x_1, t_1) = P(x_n, t_n \\mid x_{n-1}, t_{n-1}) P(x_{n-1}, t_{n-1} \\mid x_{n-2}, t_{n-2}) \\cdots P(x_2, t_2 \\mid x_1, t_1) P(x_1, t_1) \\] <p>\u8fd9\u4e2a\u7ed3\u679c\u610f\u4e49\u975e\u51e1\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u4e00\u4e2a\u590d\u6742\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u5b8c\u6574\u7edf\u8ba1\u7279\u6027\uff0c\u5b8c\u5168\u7531\u4e24\u4e2a\u8981\u7d20\u51b3\u5b9a\uff1a</p> <ol> <li> <p>\u521d\u59cb\u6761\u4ef6\uff1a\u7cfb\u7edf\u5728\u8d77\u59cb\u65f6\u523b\\(t_1\\)\u7684\u6982\u7387\u5206\u5e03\\(P(x_1, t_1)\\)\u3002</p> </li> <li> <p>\u8f6c\u79fb\u89c4\u5219\uff1a\u63cf\u8ff0\u7cfb\u7edf\u4ece\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684\u6761\u4ef6\u6982\u7387\\(P(x_j, t_j \\mid x_{j-1}, t_{j-1})\\)\u3002</p> </li> </ol> <p>\u6211\u4eec\u4e0d\u518d\u9700\u8981\u5904\u7406\u90a3\u4e2a\u5305\u542b\u6240\u6709\u5386\u53f2\u4fe1\u606f\u7684\u3001\u96be\u4ee5\u9a7e\u9a6d\u7684\u8054\u5408\u6982\u7387\u51fd\u6570\u3002\u6574\u4e2a\u7cfb\u7edf\u7684\u6f14\u5316\uff0c\u73b0\u5728\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u901a\u8fc7\u8f6c\u79fb\u6982\u7387\uff0c\u5c06\u521d\u59cb\u6982\u7387\u5206\u5e03\u4e00\u6b65\u6b65\u5730\u5411\u524d\"\u4f20\u64ad\"\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#3-","title":"3. \u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b\uff1a\u8fde\u63a5\u4e0d\u540c\u65f6\u95f4\u70b9\u7684\u6865\u6881","text":"<p>\u6709\u4e86\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\u8fd9\u4e00\u5229\u5668\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u63a8\u5bfc\u7b2c\u4e00\u4e2a\u57fa\u672c\u65b9\u7a0b\uff1a\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\uff08CK\uff09\u65b9\u7a0b\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#31-derivation-the-power-of-marginalization","title":"3.1 \u63a8\u5bfc\uff1a\u8fb9\u7f18\u5316\u7684\u529b\u91cf (Derivation: The Power of Marginalization)","text":"<p>CK\u65b9\u7a0b\u7684\u63a8\u5bfc\u57fa\u4e8e\u6982\u7387\u8bba\u4e2d\u7684\u4e00\u4e2a\u57fa\u672c\u6cd5\u5219\u2014\u2014\u5168\u6982\u7387\u516c\u5f0f\uff0c\u4e5f\u79f0\u4e3a\u8fb9\u7f18\u5316\uff08Marginalization\uff09\u3002\u8003\u8651\u4e09\u4e2a\u65f6\u95f4\u70b9\\(t_1 &lt; t_2 &lt; t_3\\)\u3002\u6211\u4eec\u60f3\u77e5\u9053\u7cfb\u7edf\u4ece\u72b6\u6001\\((x_1, t_1)\\)\u8f6c\u79fb\u5230\u72b6\u6001\\((x_3, t_3)\\)\u7684\u6982\u7387\\(P(x_3, t_3 \\mid x_1, t_1)\\)\u3002</p> <p>\u8981\u4ece\\(t_1\\)\u5230\u8fbe\\(t_3\\)\uff0c\u7cfb\u7edf\u5fc5\u987b\u5728\u4e2d\u95f4\u65f6\u523b\\(t_2\\)\u7ecf\u8fc7\u67d0\u4e2a\u4e2d\u95f4\u72b6\u6001\\(x_2\\)\u3002\u7531\u4e8e\\(x_2\\)\u53ef\u4ee5\u662f\u4efb\u4f55\u53ef\u80fd\u7684\u72b6\u6001\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u4e2d\u95f4\u72b6\u6001\u8fdb\u884c\u6c42\u548c\uff08\u6216\u79ef\u5206\uff09\uff0c\u8fd9\u6b63\u662f\u8fb9\u7f18\u5316\u7684\u601d\u60f3\uff1a</p> \\[ P(x_3, t_3 \\mid x_1, t_1) = \\int dx_2 P(x_3, t_3; x_2, t_2 \\mid x_1, t_1) \\] <p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6761\u4ef6\u6982\u7387\u7684\u5b9a\u4e49\u548c\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\u6765\u7b80\u5316\u88ab\u79ef\u51fd\u6570\uff1a</p> \\[ P(x_3, t_3; x_2, t_2 \\mid x_1, t_1) = \\frac{P(x_3, t_3; x_2, t_2; x_1, t_1)}{P(x_1, t_1)} \\] <p>\u5bf9\u5206\u5b50\u5e94\u7528\u94fe\u5f0f\u6cd5\u5219\u548c\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff1a</p> \\[ P(x_3, t_3; x_2, t_2; x_1, t_1) = P(x_3, t_3 \\mid x_2, t_2) P(x_2, t_2 \\mid x_1, t_1) P(x_1, t_1) \\] <p>\u5c06\u6b64\u7ed3\u679c\u4ee3\u56de\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[ P(x_3, t_3; x_2, t_2 \\mid x_1, t_1) = P(x_3, t_3 \\mid x_2, t_2) P(x_2, t_2 \\mid x_1, t_1) \\] <p>\u6700\u540e\uff0c\u5c06\u8fd9\u4e2a\u7b80\u5316\u7684\u8868\u8fbe\u5f0f\u4ee3\u5165\u8fb9\u7f18\u5316\u7684\u79ef\u5206\u4e2d\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b\u3002</p> <p></p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#32-form-and-physical-meaning-of-the-equation","title":"3.2 \u65b9\u7a0b\u7684\u5f62\u5f0f\u4e0e\u7269\u7406\u610f\u4e49 (Form and Physical Meaning of the Equation)","text":"<p>CK\u65b9\u7a0b\u6839\u636e\u72b6\u6001\u53d8\u91cf\u662f\u8fde\u7eed\u8fd8\u662f\u79bb\u6563\uff0c\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a</p> <ul> <li>\u8fde\u7eed\u72b6\u6001\u53d8\u91cf\uff1a</li> </ul> \\[ P(x_3, t_3 \\mid x_1, t_1) = \\int dx_2 P(x_3, t_3 \\mid x_2, t_2) P(x_2, t_2 \\mid x_1, t_1) \\] <ul> <li>\u79bb\u6563\u72b6\u6001\u53d8\u91cf\uff08\u7528\\(n\\)\u8868\u793a\u72b6\u6001\uff0c\u5e76\u8bbe\\(t_1 = t_0, t_2 = t', t_3 = t\\)\uff09\uff1a</li> </ul> \\[ P(n, t \\mid n_0, t_0) = \\sum_{n'} P(n, t \\mid n', t') P(n', t' \\mid n_0, t_0) \\] <p>\u7269\u7406\u610f\u4e49\uff1aCK\u65b9\u7a0b\u7684\u7269\u7406\u610f\u4e49\u975e\u5e38\u76f4\u89c2\u3002\u5b83\u8868\u660e\uff0c\u4ece\u72b6\u6001\\(n_0\\)\u5230\\(n\\)\u7684\u6574\u4e2a\u6f14\u5316\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e24\u4e2a\u72ec\u7acb\u7684\u9a6c\u5c14\u53ef\u592b\u6b65\u9aa4\uff1a\u5148\u4ece\\(n_0\\)\u6f14\u5316\u5230\u67d0\u4e2a\u4e2d\u95f4\u72b6\u6001\\(n'\\)\uff0c\u518d\u4ece\\(n'\\)\u6f14\u5316\u5230\u6700\u7ec8\u72b6\u6001\\(n\\)\u3002\u65b9\u7a0b\u7684\u6838\u5fc3\u601d\u60f3\u662f\"\u5bf9\u6240\u6709\u53ef\u80fd\u8def\u5f84\u6c42\u548c\"\u3002\u5b83\u5c06\u4e00\u4e2a\u5927\u65f6\u95f4\u95f4\u9694\u5185\u7684\u8f6c\u79fb\u6982\u7387\uff0c\u8868\u793a\u4e3a\u6240\u6709\u53ef\u80fd\u4e2d\u95f4\u8def\u5f84\u7684\u6982\u7387\u4e4b\u548c\uff0c\u4f53\u73b0\u4e86\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u6f14\u5316\u5408\u6210\u6cd5\u5219\u3002</p> <p>\u5bf9\u4e8e\u79bb\u6563\u72b6\u6001\u7cfb\u7edf\uff0cCK\u65b9\u7a0b\u7684\u5f62\u5f0f\u6697\u793a\u4e86\u4e00\u79cd\u4e0e\u7ebf\u6027\u4ee3\u6570\u7684\u6df1\u523b\u8054\u7cfb\u3002\u5982\u679c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u8f6c\u79fb\u6982\u7387\u77e9\u9635\\(\\mathbf{T}(t_a \\to t_b)\\)\uff0c\u5176\u77e9\u9635\u5143\\((\\mathbf{T})_{ij} = P(j, t_b \\mid i, t_a)\\)\uff0c\u90a3\u4e48\u79bb\u6563\u5f62\u5f0f\u7684CK\u65b9\u7a0b\u5c31\u53ef\u4ee5\u88ab\u7b80\u6d01\u5730\u5199\u6210\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\uff1a</p> \\[ \\mathbf{T}(t_1 \\to t_3) = \\mathbf{T}(t_2 \\to t_3) \\mathbf{T}(t_1 \\to t_2) \\] <p>\u8fd9\u4e2a\u89c6\u89d2\u6781\u4e3a\u91cd\u8981\uff0c\u5b83\u5c06\u968f\u673a\u8fc7\u7a0b\u7684\u6982\u7387\u6f14\u5316\u95ee\u9898\uff0c\u8f6c\u5316\u4e3a\u4e86\u6211\u4eec\u6240\u719f\u6089\u7684\u3001\u5f3a\u5927\u7684\u7ebf\u6027\u4ee3\u6570\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u7cfb\u7edf\u7684\u957f\u671f\u884c\u4e3a\uff08\u7a33\u6001\u5206\u5e03\uff09\u5c31\u4e0e\u8f6c\u79fb\u77e9\u9635\u7684\u7279\u5f81\u5411\u91cf\u548c\u7279\u5f81\u503c\u7d27\u5bc6\u76f8\u5173\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#4","title":"4. \u4ece\u5b8f\u89c2\u5230\u5fae\u89c2\uff1a\u4e3b\u65b9\u7a0b","text":"<p>\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b\u63cf\u8ff0\u4e86\u5728\u6709\u9650\u65f6\u95f4\u95f4\u9694\u5185\u6982\u7387\u7684\u6f14\u5316\u3002\u7136\u800c\uff0c\u5728\u8bb8\u591a\u7269\u7406\u548c\u5316\u5b66\u95ee\u9898\u4e2d\uff0c\u6211\u4eec\u66f4\u5173\u5fc3\u6982\u7387\u77ac\u65f6\u7684\u53d8\u5316\u7387\u3002\u4e3a\u4e86\u5f97\u5230\u4e00\u4e2a\u63cf\u8ff0\u8fd9\u79cd\u77ac\u65f6\u53d8\u5316\u7684\u5fae\u5206\u65b9\u7a0b\uff0c\u6211\u4eec\u9700\u8981\u4eceCK\u65b9\u7a0b\u51fa\u53d1\uff0c\u8003\u8651\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u65f6\u95f4\u6b65\u957f\uff0c\u8fd9\u4fbf\u5f15\u51fa\u4e86\u4e3b\u65b9\u7a0b\uff08Master Equation\uff09\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#41-from-finite-steps-to-instantaneous-rates","title":"4.1 \u4ece\u6709\u9650\u6b65\u957f\u5230\u77ac\u65f6\u901f\u7387 (From Finite Steps to Instantaneous Rates)","text":"<p>\u6211\u4eec\u4ece\u79bb\u6563\u5f62\u5f0f\u7684CK\u65b9\u7a0b\u51fa\u53d1\uff0c\u5e76\u5c06\u65f6\u95f4\u95f4\u9694\\(t-t'\\)\u8bbe\u4e3a\u4e00\u4e2a\u65e0\u7a77\u5c0f\u91cf\\(\\Delta t\\)\uff0c\u5373\\(t' = t, t = t + \\Delta t\\)\u3002\u65b9\u7a0b\u53d8\u4e3a\uff1a</p> \\[ P(n, t + \\Delta t \\mid n_0, t_0) = \\sum_m P(n, t + \\Delta t \\mid m, t) P(m, t \\mid n_0, t_0) \\] <p>\u6211\u4eec\u611f\u5174\u8da3\u7684\u662f\u6982\u7387\u968f\u65f6\u95f4\u7684\u53d8\u5316\u7387\uff0c\u5373\u65f6\u95f4\u5bfc\u6570\uff1a</p> \\[ \\frac{d}{dt} P(n, t \\mid n_0, t_0) = \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} [P(n, t + \\Delta t \\mid n_0, t_0) - P(n, t \\mid n_0, t_0)] \\] <p>\u5c06CK\u65b9\u7a0b\u4ee3\u5165\u4e0a\u5f0f\uff0c\u5e76\u5229\u7528\\(P(n, t \\mid n_0, t_0) = \\sum_m \\delta_{n,m} P(m, t \\mid n_0, t_0)\\)\uff08\u5176\u4e2d\\(\\delta_{n,m}\\)\u662f\u514b\u7f57\u5185\u514b\u7b26\u53f7\uff09\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[ \\frac{d}{dt} P(n, t \\mid n_0, t_0) = \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} \\sum_m [P(n, t + \\Delta t \\mid m, t) - \\delta_{n,m}] P(m, t \\mid n_0, t_0) \\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u6838\u5fc3\u5728\u4e8e\u65b9\u62ec\u53f7\u5185\u7684\u9879\uff0c\u5b83\u63cf\u8ff0\u4e86\u5728\u6781\u77ed\u65f6\u95f4\\(\\Delta t\\)\u5185\uff0c\u4ece\u72b6\u6001\\(m\\)\u8f6c\u79fb\u5230\u72b6\u6001\\(n\\)\u7684\u6982\u7387\u53d8\u5316\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#42-q-the-transition-rate-matrix-q","title":"4.2 \u8f6c\u79fb\u901f\u7387\u77e9\u9635 Q (The Transition Rate Matrix, Q)","text":"<p>\u4e3a\u4e86\u7b80\u5316\u4e0a\u8ff0\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5173\u952e\u7684\u7269\u7406\u91cf\u2014\u2014\u8f6c\u79fb\u901f\u7387\u77e9\u9635\uff08Transition Rate Matrix\uff09\\(\\mathbf{Q}\\)\u3002\u5176\u77e9\u9635\u5143\\(Q(n,m)\\)\uff08\u6709\u65f6\u4e5f\u5199\u4f5c\\(Q_{nm}\\)\uff09\u5b9a\u4e49\u4e3a\uff1a</p> \\[ Q(n, m) := \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} [P(n, t + \\Delta t \\mid m, t) - \\delta_{n,m}] \\] <p>\u8fd9\u4e2a\u77e9\u9635\u7684\u5143\u7d20\u5177\u6709\u6e05\u6670\u7684\u7269\u7406\u610f\u4e49\uff1a</p> <p>\u975e\u5bf9\u89d2\u5143\u7d20 (Gain): \u5f53\\(n \\neq m\\)\u65f6\uff0c\\(\\delta_{n,m} = 0\\)\u3002\u6b64\u65f6\u7684\u77e9\u9635\u5143\u901a\u5e38\u8bb0\u4e3a\\(w_{m \\to n}\\)\uff1a</p> <p>$$  w_{m \\to n} := Q(n, m) = \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} P(n, t + \\Delta t \\mid m, t)  $$</p> <p>\\(w_{m \\to n}\\)\u8868\u793a\u7cfb\u7edf\u4ece\u72b6\u6001\\(m\\)\u8f6c\u79fb\u5230\u72b6\u6001\\(n\\)\u7684\u77ac\u65f6\u901f\u7387\u3002\u5b83\u7684\u5355\u4f4d\u662f\\([\\text{\u65f6\u95f4}]^{-1}\\)\u3002\u5728\u65e0\u7a77\u5c0f\u65f6\u95f4\\(d\\tau\\)\u5185\uff0c\u4ece\\(m\\)\u8f6c\u79fb\u5230\\(n\\)\u7684\u65e0\u91cf\u7eb2\u6982\u7387\u5c31\u662f\\(w_{m \\to n} d\\tau\\)\u3002\u8fd9\u4ee3\u8868\u4e86\u6d41\u5165\u72b6\u6001\\(n\\)\u7684\u6982\u7387\"\u589e\u76ca\"\uff08Gain\uff09\u9879\u3002</p> <p>\u5bf9\u89d2\u5143\u7d20 (Loss): \u5f53\\(n = m\\)\u65f6\uff0c\\(\\delta_{n,m} = 1\\)\u3002\u6b64\u65f6\u7684\u77e9\u9635\u5143\u4e3a\uff1a</p> \\[ Q(m, m) = \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} [P(m, t + \\Delta t \\mid m, t) - 1] \\] <p>\u7531\u4e8e\u5728\u77ed\u65f6\u95f4\u5185\u4e0d\u53d1\u751f\u8f6c\u79fb\u7684\u6982\u7387\\(P(m, t + \\Delta t \\mid m, t)\\)\u63a5\u8fd1\u4e8e1\uff0c\u6240\u4ee5\\(Q(m,m)\\)\u662f\u4e00\u4e2a\u8d1f\u6570\u3002\u6211\u4eec\u901a\u5e38\u5b9a\u4e49\u4e00\u4e2a\u6b63\u7684\u79bb\u5f00\u901f\u7387\uff08exit rate\uff09\\(w_m\\)\uff1a</p> \\[ w_m := -Q(m, m) = \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} [1 - P(m, t + \\Delta t \\mid m, t)] \\] <p>\\(w_m\\)\u8868\u793a\u7cfb\u7edf\u79bb\u5f00\u72b6\u6001\\(m\\)\uff08\u8f6c\u79fb\u5230\u4efb\u4f55\u5176\u4ed6\u72b6\u6001\uff09\u7684\u603b\u901f\u7387\u3002\u8fd9\u4ee3\u8868\u4e86\u6d41\u51fa\u72b6\u6001\\(m\\)\u7684\u6982\u7387\"\u635f\u5931\"\uff08Loss\uff09\u9879\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#43-the-final-form-of-the-master-equation","title":"4.3 \u4e3b\u65b9\u7a0b\u7684\u6700\u7ec8\u5f62\u5f0f (The Final Form of the Master Equation)","text":"<p>\u5c06\u8f6c\u79fb\u901f\u7387\u77e9\u9635\\(\\mathbf{Q}\\)\u7684\u5b9a\u4e49\u4ee3\u5165\u4e4b\u524d\u7684\u65f6\u95f4\u5bfc\u6570\u8868\u8fbe\u5f0f\u4e2d\uff0c\u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u4e3b\u65b9\u7a0b\u7684\u77e9\u9635\u5f62\u5f0f\uff1a</p> \\[ \\frac{d}{dt} P(n, t \\mid n_0, t_0) = \\sum_m Q(n, m) P(m, t \\mid n_0, t_0) \\] <p>\u4e3a\u4e86\u66f4\u76f4\u89c2\u5730\u7406\u89e3\u5176\u7269\u7406\u610f\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5199\u6210\"\u589e\u76ca-\u635f\u5931\"\u7684\u5f62\u5f0f\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#44-the-manifestation-of-probability-conservation","title":"4.4 \u6982\u7387\u5b88\u6052\u7684\u4f53\u73b0 (The Manifestation of Probability Conservation)","text":"<p>\u7531\u4e8e\u4ece\u4efb\u4f55\u4e00\u4e2a\u72b6\u6001\\(m\\)\u51fa\u53d1\uff0c\u7cfb\u7edf\u5728\u4e0b\u4e00\u65f6\u523b\u5fc5\u7136\u4f1a\u5904\u4e8e\u67d0\u4e2a\u72b6\u6001\uff08\u5305\u62ec\\(m\\)\u81ea\u8eab\uff09\uff0c\u56e0\u6b64\u603b\u6982\u7387\u5fc5\u987b\u5b88\u6052\uff1a\\(\\sum_n P(n, t + \\Delta t \\mid m, t) = 1\\)\u3002\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\\(\\mathbf{Q}\\)\u77e9\u9635\u7684\u6bcf\u4e00\u5217\u4e4b\u548c\u4e3a\u96f6\uff1a</p> \\[ \\sum_n Q(n, m) = \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} \\left[ \\sum_n P(n, t + \\Delta t \\mid m, t) - \\sum_n \\delta_{n,m} \\right] = \\lim_{\\Delta t \\to 0} \\frac{1}{\\Delta t} [1-1] = 0 \\] <p>\u8fd9\u4e2a\u6570\u5b66\u6027\u8d28\u662f\u7269\u7406\u4e0a\u6982\u7387\u5b88\u6052\u5b9a\u5f8b\u7684\u76f4\u63a5\u4f53\u73b0\u3002\u5b83\u610f\u5473\u7740\u5bf9\u89d2\u5143\u7684\u635f\u5931\u901f\u7387\uff0c\u7cbe\u786e\u5730\u7b49\u4e8e\u8be5\u72b6\u6001\u6d41\u5411\u6240\u6709\u5176\u4ed6\u72b6\u6001\u7684\u589e\u76ca\u901f\u7387\u4e4b\u548c\uff1a</p> \\[ -Q(m, m) = \\sum_{n \\neq m} Q(n, m) \\quad \\implies \\quad w_m = \\sum_{n \\neq m} w_{m \\to n} \\] <p>\u8fd9\u4e00\u5173\u7cfb\u662f\u6784\u5efa\"\u589e\u76ca-\u635f\u5931\"\u65b9\u7a0b\u7684\u5173\u952e\u3002\u4e3b\u65b9\u7a0b\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u72b6\u6001\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u8fde\u7eed\u6027\u65b9\u7a0b\u3002\u603b\u6982\u7387\u662f\u4e00\u4e2a\u5b88\u6052\u91cf\uff0c\u5b83\u4e0d\u4f1a\u51ed\u7a7a\u4ea7\u751f\u6216\u6d88\u5931\uff0c\u53ea\u4f1a\u5728\u4e0d\u540c\u72b6\u6001\u4e4b\u95f4\u91cd\u65b0\u5206\u5e03\u3002\u800c\\(w_{m \\to n} P(m,t)\\)\u8fd9\u6837\u7684\u9879\uff0c\u5c31\u626e\u6f14\u4e86\u4ece\u72b6\u6001\\(m\\)\u6d41\u5411\u72b6\u6001\\(n\\)\u7684\"\u6982\u7387\u6d41\"\u7684\u89d2\u8272\u3002\\(\\mathbf{Q}\\)\u77e9\u9635\u5217\u548c\u4e3a\u96f6\u7684\u7ea6\u675f\uff0c\u4fdd\u8bc1\u4e86\u603b\u7684\u6982\u7387\u6d41\u4e3a\u96f6\uff0c\u5373\u603b\u6982\u7387\u4e0d\u968f\u65f6\u95f4\u53d8\u5316\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e3b\u65b9\u7a0b\u5199\u6210\u6700\u7ec8\u7684\u3001\u6700\u76f4\u89c2\u7684\u5f62\u5f0f\u3002\u4e3a\u7b80\u5316\u7b26\u53f7\uff0c\u6211\u4eec\u7528\\(P_n(t)\\)\u4ee3\u8868\\(P(n, t \\mid n_0, t_0)\\)\uff1a</p> \\[ \\frac{d}{dt} P_n(t) = \\sum_m Q_{nm} P_m(t) = \\sum_{m \\neq n} Q_{nm} P_m(t) + Q_{nn} P_n(t) \\] <p>\u5229\u7528\\(w_{m \\to n} = Q_{nm}\\)\u548c\\(w_n = -Q_{nn} = \\sum_{m \\neq n} w_{n \\to m}\\)\uff0c\u4e0a\u5f0f\u53d8\u4e3a\uff1a</p> \\[ \\frac{d}{dt} P_n(t) = \\underbrace{\\sum_{m \\neq n} w_{m \\to n} P_m(t)}_{\\text{Gain: from all } m \\text{ into } n} - \\underbrace{\\sum_{m \\neq n} w_{n \\to m} P_n(t)}_{\\text{Loss: from } n \\text{ to all } m} \\] <p>\u8fd9\u4e2a\u5f62\u5f0f\u5b8c\u7f8e\u5730\u8be0\u91ca\u4e86\u4e3b\u65b9\u7a0b\u7684\u7269\u7406\u5185\u6db5\uff1a\u5904\u4e8e\u72b6\u6001\\(n\\)\u7684\u6982\u7387\u968f\u65f6\u95f4\u7684\u53d8\u5316\u7387\uff0c\u7b49\u4e8e\u6240\u6709\u5176\u4ed6\u72b6\u6001\\(m\\)\u6d41\u5165\\(n\\)\u7684\u6982\u7387\u901a\u91cf\u4e4b\u548c\uff08\u589e\u76ca\u9879\uff09\uff0c\u51cf\u53bb\u4ece\u72b6\u6001\\(n\\)\u6d41\u51fa\u5230\u6240\u6709\u5176\u4ed6\u72b6\u6001\\(m\\)\u7684\u6982\u7387\u901a\u91cf\u4e4b\u548c\uff08\u635f\u5931\u9879\uff09\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#45-forward-vs-backward-master-equations","title":"4.5 \u524d\u5411\u4e0e\u540e\u5411\u4e3b\u65b9\u7a0b (Forward vs. Backward Master Equations)","text":"<p>\u8bb2\u5ea7\u6700\u540e\u7b80\u5355\u63d0\u53ca\uff0c\u6211\u4eec\u63a8\u5bfc\u7684\u8fd9\u4e2a\u4e3b\u65b9\u7a0b\uff0c\u5176\u65f6\u95f4\u5bfc\u6570\u662f\u9488\u5bf9\u6f14\u5316\u7684\"\u7ec8\u70b9\"\u65f6\u95f4\\(t\\)\u7684\uff08\\(\\partial_t\\)\uff09\uff0c\u88ab\u79f0\u4e3a\u524d\u5411\u4e3b\u65b9\u7a0b (Forward Master Equation)\u3002\u5b83\u56de\u7b54\u7684\u95ee\u9898\u662f\uff1a\"\u7ed9\u5b9a\u521d\u59cb\u72b6\u6001\uff0c\u672a\u6765\u7684\u6982\u7387\u5206\u5e03\u5982\u4f55\u6f14\u5316\uff1f\"</p> <p>\u4e0e\u4e4b\u5bf9\u5e94\uff0c\u8fd8\u5b58\u5728\u4e00\u4e2a\u540e\u5411\u4e3b\u65b9\u7a0b (Backward Master Equation)\uff0c\u5176\u65f6\u95f4\u5bfc\u6570\u662f\u9488\u5bf9\"\u8d77\u70b9\"\u65f6\u95f4\\(t_0\\)\u7684\uff08\\(\\partial_{t_0}\\)\uff09\u3002\u5b83\u56de\u7b54\u4e00\u4e2a\u4e0d\u540c\u7684\u95ee\u9898\uff1a\"\u8981\u60f3\u5230\u8fbe\u67d0\u4e2a\u56fa\u5b9a\u7684\u7ec8\u70b9\u72b6\u6001\uff0c\u521d\u59cb\u72b6\u6001\u7684\u6982\u7387\u5206\u5e03\u5e94\u8be5\u5982\u4f55\u9009\u62e9\uff1f\" \u524d\u5411\u65b9\u7a0b\u5728\u7269\u7406\u548c\u5316\u5b66\u4e2d\u5e94\u7528\u66f4\u4e3a\u5e7f\u6cdb\uff0c\u56e0\u4e3a\u5b83\u81ea\u7136\u5730\u63cf\u8ff0\u4e86\u7cfb\u7edf\u968f\u65f6\u95f4\u7684\u6b63\u5411\u6f14\u5316\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#5-python","title":"5. Python\u6a21\u62df\uff1a\u53ef\u89c6\u5316\u4e00\u4e2a\u79bb\u6563\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b","text":"<p>\u4e3a\u4e86\u5c06\u4e3b\u65b9\u7a0b\u4e2d\u5b9a\u4e49\u7684\"\u901f\u7387\"\u4e0e\u5b9e\u9645\u7684\u968f\u673a\u8f68\u8ff9\u8054\u7cfb\u8d77\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6570\u503c\u6a21\u62df\u65b9\u6cd5\u3002\u5bf9\u4e8e\u7531\u4e3b\u65b9\u7a0b\u63cf\u8ff0\u7684\u79bb\u6563\u72b6\u6001\u3001\u8fde\u7eed\u65f6\u95f4\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\uff0c\u6700\u7ecf\u5178\u7684\u6a21\u62df\u7b97\u6cd5\u662fGillespie\u7b97\u6cd5\uff08\u5728\u7b2c3\u8bb2\u4e2d\u5df2\u6709\u4ecb\u7ecd\uff09\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#51","title":"5.1 \u7cfb\u7edf\u8bbe\u5b9a","text":"<p>\u6211\u4eec\u8bbe\u5b9a\u4e00\u4e2a\u7b80\u5355\u7684\u4e09\u72b6\u6001\u6a21\u578b\uff0c\u4f8b\u5982\u4e00\u4e2a\u86cb\u767d\u8d28\u5206\u5b50\u53ef\u80fd\u5904\u4e8e\u4e09\u79cd\u6784\u8c61\uff1a\u5f00\u653e\u6001\uff08Open, O\uff09\u3001\u5173\u95ed\u6001\uff08Closed, C\uff09\u548c\u5931\u6d3b\u6001\uff08Inhibited, I\uff09\u3002\u6211\u4eec\u7528\u6570\u5b570, 1, 2\u5206\u522b\u4ee3\u8868\u8fd9\u4e09\u79cd\u72b6\u6001\u3002\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u79fb\u901f\u7387\u5982\u4e0b\uff1a</p> <p>\\(O \\leftrightarrow C\\)\uff1a\u5f00\u653e\u6001\u548c\u5173\u95ed\u6001\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\uff0c\u901f\u7387\u5206\u522b\u4e3a\\(w_{0 \\to 1} = k_{OC}\\)\u548c\\(w_{1 \\to 0} = k_{CO}\\)\u3002</p> <p>\\(C \\to I\\)\uff1a\u5173\u95ed\u6001\u53ef\u4ee5\u4e0d\u53ef\u9006\u5730\u53d8\u4e3a\u5931\u6d3b\u6001\uff0c\u901f\u7387\u4e3a\\(w_{1 \\to 2} = k_{CI}\\)\u3002</p> <p>\u5bf9\u5e94\u7684\u8f6c\u79fb\u901f\u7387\u77e9\u9635\\(\\mathbf{Q}\\)\u4e3a\uff1a</p> \\[ \\mathbf{Q} = \\begin{pmatrix} -k_{OC} &amp; k_{CO} &amp; 0 \\\\ k_{OC} &amp; -k_{CO} - k_{CI} &amp; 0 \\\\ 0 &amp; k_{CI} &amp; 0 \\end{pmatrix} \\] <p>\u6ce8\u610f\uff0c\u6bcf\u4e00\u5217\u7684\u548c\u90fd\u4e3a\u96f6\uff0c\u6ee1\u8db3\u6982\u7387\u5b88\u6052\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#52","title":"5.2 \u7b97\u6cd5\u4e0e\u4ee3\u7801\u5b9e\u73b0","text":"<p>Gillespie\u7b97\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u5728\u4efb\u610f\u65f6\u523b\uff0c\u7cfb\u7edf\u4e0b\u4e00\u6b65\u4f1a\u53d1\u751f\u4ec0\u4e48\u4ee5\u53ca\u9700\u8981\u7b49\u5f85\u591a\u4e45\uff0c\u90fd\u662f\u968f\u673a\u7684\u3002\u7b97\u6cd5\u901a\u8fc7\u4e24\u6b65\u968f\u673a\u62bd\u6837\u6765\u786e\u5b9a\uff1a</p> <ol> <li> <p>\u786e\u5b9a\u7b49\u5f85\u65f6\u95f4\uff1a\u603b\u7684\u79bb\u5f00\u901f\u7387\\(W\\)\u662f\u5f53\u524d\u72b6\u6001\u6240\u6709\u53ef\u80fd\u51fa\u8def\u7684\u901f\u7387\u4e4b\u548c\u3002\u7b49\u5f85\u65f6\u95f4\\(\\Delta t\\)\u670d\u4ece\u6307\u6570\u5206\u5e03\uff0c\u53ef\u4ee5\u901a\u8fc7\\(\\Delta t = -\\frac{1}{W} \\ln(r_1)\\)\u751f\u6210\uff0c\u5176\u4e2d\\(r_1\\)\u662f\\((0,1]\\)\u4e0a\u7684\u968f\u673a\u6570\u3002</p> </li> <li> <p>\u786e\u5b9a\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\uff1a\u7528\u7b2c\u4e8c\u4e2a\u968f\u673a\u6570\\(r_2\\)\u6765\u51b3\u5b9a\u5177\u4f53\u53d1\u751f\u54ea\u4e00\u4e2a\u8f6c\u79fb\u3002\u5c06\u533a\u95f4\u6309\u5404\u4e2a\u8f6c\u79fb\u901f\u7387\u7684\u6bd4\u4f8b\u5212\u5206\uff0c\u770b\\(r_2 \\cdot W\\)\u843d\u5728\u54ea\u4e00\u4e2a\u5b50\u533a\u95f4\uff0c\u5c31\u53d1\u751f\u5bf9\u5e94\u7684\u8f6c\u79fb\u3002</p> </li> </ol> <p>\u4ee5\u4e0b\u662f\u5b9e\u73b0\u8be5\u8fc7\u7a0b\u7684Python\u4ee3\u7801\uff1a</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import FancyBboxPatch, ArrowStyle\nimport matplotlib.patches as mpatches\nfrom collections import Counter\n\ndef simulate_markov_process(initial_state, rates, t_max):\n    \"\"\"\n    Simulate a discrete state, continuous time Markov process using the Gillespie algorithm.\n\n    Parameters:\n        initial_state (int): Initial state of the system (0, 1 or 2).\n        rates (dict): Dictionary of transition rates, e.g. {'k_oc': 1.0,...}.\n        t_max (float): Maximum simulation time.\n\n    Returns:\n        tuple: A tuple containing lists of times and states.\n    \"\"\"\n    # Unpack rate parameters\n    k_oc = rates.get('k_oc', 0)\n    k_co = rates.get('k_co', 0)\n    k_ci = rates.get('k_ci', 0)\n\n    # Store trajectory data\n    times = [0.0]\n    states = [initial_state]\n\n    current_time = 0.0\n    current_state = initial_state\n\n    while current_time &lt; t_max:\n        # Define possible transitions and their rates in the current state\n        possible_transitions = []\n        if current_state == 0:  # State O\n            possible_transitions = [(1, k_oc)]\n        elif current_state == 1:  # State C\n            possible_transitions = [(0, k_co), (2, k_ci)]\n        elif current_state == 2:  # State I (absorbing state)\n            # No outward transitions from state I\n            break\n\n        # Calculate total exit rate W\n        total_rate = sum(rate for _, rate in possible_transitions)\n\n        if total_rate == 0:\n            # Absorbing state, simulation ends\n            break\n\n        # Step 1: Determine time interval to next event\n        r1 = np.random.rand()\n        dt = -np.log(r1) / total_rate\n\n        current_time += dt\n        if current_time &gt; t_max:\n            break\n\n        # Step 2: Determine which event occurs\n        r2 = np.random.rand()\n        cumulative_prob = 0.0\n        next_state = -1\n        for state, rate in possible_transitions:\n            cumulative_prob += rate / total_rate\n            if r2 &lt; cumulative_prob:\n                next_state = state\n                break\n\n        # Update state and store results\n        current_state = next_state\n        times.append(current_time)\n        states.append(current_state)\n\n    return times, states\n\ndef plot_state_diagram(rates):\n    \"\"\"\n    Plot state transition diagram\n    \"\"\"\n    fig, ax = plt.subplots(1, 1, figsize=(10, 6))\n\n    # State positions\n    positions = {0: (2, 4), 1: (2, 2), 2: (2, 0)}  # O, C, I\n    state_names = {0: 'Open (O)', 1: 'Closed (C)', 2: 'Inhibited (I)'}\n    colors = {0: '#FF6B6B', 1: '#4ECDC4', 2: '#45B7D1'}\n\n    # Draw state nodes (larger circles)\n    for state, pos in positions.items():\n        circle = plt.Circle(pos, 0.5, color=colors[state], alpha=0.8)  # Increased radius from 0.3 to 0.5\n        ax.add_patch(circle)\n        ax.text(pos[0], pos[1], state_names[state], ha='center', va='center', \n                fontsize=10, fontweight='bold', color='white')\n\n    # Draw transition arrows\n    k_oc = rates.get('k_oc', 0)\n    k_co = rates.get('k_co', 0)\n    k_ci = rates.get('k_ci', 0)\n\n    # O &lt;-&gt; C\n    if k_oc &gt; 0:\n        arrow1 = mpatches.FancyArrowPatch((2, 3.5), (2, 2.5), \n                                          arrowstyle='-&gt;', mutation_scale=20, \n                                          color='gray', alpha=0.7, \n                                          connectionstyle=\"arc3,rad=-0.3\")\n        ax.add_patch(arrow1)\n        ax.text(2.5, 3, f'k_OC = {k_oc}', fontsize=9, rotation=-90, ha='center')\n\n    if k_co &gt; 0:\n        arrow2 = mpatches.FancyArrowPatch((2, 2.5), (2, 3.5), \n                                          arrowstyle='-&gt;', mutation_scale=20, \n                                          color='gray', alpha=0.7,\n                                          connectionstyle=\"arc3,rad=-0.3\")\n        ax.add_patch(arrow2)\n        ax.text(1.5, 3, f'k_CO = {k_co}', fontsize=9, rotation=90, ha='center')\n\n    # C -&gt; I\n    if k_ci &gt; 0:\n        arrow3 = mpatches.FancyArrowPatch((2, 1.5), (2, 0.5), \n                                          arrowstyle='-&gt;', mutation_scale=20, \n                                          color='gray', alpha=0.7)\n        ax.add_patch(arrow3)\n        ax.text(2.5, 1, f'k_CI = {k_ci}', fontsize=9, rotation=-90, ha='center')\n\n    ax.set_xlim(0, 4)\n    ax.set_ylim(-0.5, 5)\n    ax.set_aspect('equal')\n    ax.axis('off')\n    ax.set_title('State Transition Diagram', fontsize=14, fontweight='bold')\n\n    return fig\n\ndef plot_multiple_trajectories(initial_state, rates, t_max, num_trajectories=5):\n    \"\"\"\n    Plot multiple trajectories to show randomness\n    \"\"\"\n    fig, ax = plt.subplots(1, 1, figsize=(12, 6))\n\n    colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FECA57']\n    state_labels = ['Open (O)', 'Closed (C)', 'Inhibited (I)']\n\n    for i in range(num_trajectories):\n        times, states = simulate_markov_process(initial_state, rates, t_max)\n        # Add small offset to each trajectory for better visualization\n        offset_states = [s + (i*0.05) for s in states]\n        ax.step(times, offset_states, where='post', alpha=0.7, \n                color=colors[i % len(colors)], linewidth=1.5)\n\n    ax.set_yticks([0, 1, 2])\n    ax.set_yticklabels(state_labels)\n    ax.set_xlabel('Time')\n    ax.set_ylabel('State')\n    ax.set_title(f'Multiple Stochastic Trajectories (N={num_trajectories})')\n    ax.grid(True, alpha=0.3)\n\n    return fig\n\ndef plot_state_probability_distribution(initial_state, rates, t_max, num_samples=1000):\n    \"\"\"\n    Plot state probability distribution\n    \"\"\"\n    # Run multiple simulations to get statistics\n    final_states = []\n    all_times = []\n    all_states = []\n\n    for _ in range(num_samples):\n        times, states = simulate_markov_process(initial_state, rates, t_max)\n        if times:\n            final_states.append(states[-1])\n            all_times.extend(times)\n            all_states.extend(states)\n\n    # Count final state distribution\n    state_counts = Counter(final_states)\n    total = sum(state_counts.values())\n    state_probs = {state: count/total for state, count in state_counts.items()}\n\n    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 6))\n\n    # Final state distribution\n    state_labels = ['Open (O)', 'Closed (C)', 'Inhibited (I)']\n    state_colors = ['#FF6B6B', '#4ECDC4', '#45B7D1']\n    probs = [state_probs.get(i, 0) for i in range(3)]\n\n    bars = ax1.bar(state_labels, probs, color=state_colors, alpha=0.7)\n    ax1.set_ylabel('Probability')\n    ax1.set_title(f'Steady-State Distribution (t={t_max}, N={num_samples})')\n    ax1.set_ylim(0, 1)\n\n    # Add value labels on bars\n    for bar, prob in zip(bars, probs):\n        height = bar.get_height()\n        ax1.text(bar.get_x() + bar.get_width()/2., height + 0.01,\n                f'{prob:.2f}', ha='center', va='bottom')\n\n    # State occupancy over time (simplified)\n    time_points = np.linspace(0, t_max, 50)\n    state_occupancy = {0: [], 1: [], 2: []}\n\n    for t in time_points:\n        count = {0: 0, 1: 0, 2: 0}\n        total_count = 0\n        for _ in range(100):  # Sample 100 trajectories at each time point\n            times, states = simulate_markov_process(initial_state, rates, t_max)\n            # Find state at time t\n            state_at_t = states[0]  # Default to initial state\n            for i in range(len(times)-1):\n                if times[i] &lt;= t &lt; times[i+1]:\n                    state_at_t = states[i]\n                    break\n                elif t &gt;= times[-1]:\n                    state_at_t = states[-1]\n                    break\n            count[state_at_t] += 1\n            total_count += 1\n\n        for state in [0, 1, 2]:\n            state_occupancy[state].append(count[state] / total_count if total_count &gt; 0 else 0)\n\n    # Plot state occupancy over time\n    for state in [0, 1, 2]:\n        ax2.plot(time_points, state_occupancy[state], \n                label=state_labels[state], color=state_colors[state], linewidth=2)\n\n    ax2.set_xlabel('Time')\n    ax2.set_ylabel('Probability')\n    ax2.set_title('State Probability Evolution')\n    ax2.legend()\n    ax2.grid(True, alpha=0.3)\n\n    return fig\n\n# --- Simulation parameters ---\nparams = {\n    'k_oc': 0.5,  # Rate O -&gt; C\n    'k_co': 0.2,  # Rate C -&gt; O\n    'k_ci': 0.1   # Rate C -&gt; I\n}\ninitial_state = 0  # Start from state O\nsimulation_time = 100.0\n\n# --- Create enhanced visualizations ---\n# 1. State transition diagram\nfig1 = plot_state_diagram(params)\nplt.show()\n\n# 2. Multiple trajectories\nfig2 = plot_multiple_trajectories(initial_state, params, simulation_time, num_trajectories=10)\nplt.show()\n\n# 3. State probability distribution\nfig3 = plot_state_probability_distribution(initial_state, params, simulation_time, num_samples=500)\nplt.show()\n</code></pre> <p>\u86cb\u767d\u8d28\u5206\u5b50\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u7ed3\u6784\uff0c\u5176\u4e2d\u4ece\u5173\u95ed\u6001\u5230\u5931\u6d3b\u6001\u662f\u4e0d\u53ef\u9006\u7684\uff0c\u800c\u5f00\u653e\u6001\u548c\u5173\u95ed\u6001\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\u3002 </p> <p>\u968f\u673a\u6027\uff1a\u4e0d\u540c\u8f68\u8ff9\u5728\u76f8\u540c\u65f6\u95f4\u70b9\u7684\u72b6\u6001\u5404\u4e0d\u76f8\u540c\uff0c\u4f53\u73b0\u4e86\u7cfb\u7edf\u7684\u968f\u673a\u6027\u8d28</p> <p>\u72b6\u6001\u8df3\u8dc3\uff1a\u7cfb\u7edf\u5728\u4e0d\u540c\u72b6\u6001\u95f4\u77ac\u65f6\u8df3\u53d8\uff0c\u7b26\u5408\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\u7279\u6027</p> <p>\u5438\u6536\u6001\uff1a\u6240\u6709\u8f68\u8ff9\u6700\u7ec8\u90fd\u8fdb\u5165\u5931\u6d3b\u6001\uff08Inhibited\uff09\uff0c\u56e0\u4e3a\u8fd9\u662f\u5438\u6536\u6001</p> <p>\u505c\u7559\u65f6\u95f4\uff1a\u7cfb\u7edf\u5728\u6bcf\u4e2a\u72b6\u6001\u505c\u7559\u7684\u65f6\u95f4\u662f\u968f\u673a\u7684\uff0c\u670d\u4ece\u6307\u6570\u5206\u5e03</p> <p></p> <p>\u663e\u793a\u4e86\u7cfb\u7edf\u5728\u957f\u65f6\u95f4\u8fd0\u884c\u540e\uff08t=100\uff09\u7684\u6700\u7ec8\u72b6\u6001\u5206\u5e03\uff0c\u6240\u6709\u6837\u672c\u90fd\u8fdb\u5165\u4e86\u5931\u6d3b\u6001\uff08Inhibited\uff09\uff0c\u6982\u7387\u63a5\u8fd11.0\uff0c\u5f00\u653e\u6001\u548c\u5173\u95ed\u6001\u7684\u6982\u7387\u63a5\u8fd10\uff0c\u8bf4\u660e\u7cfb\u7edf\u6700\u7ec8\u90fd\u4f1a\u88ab\"\u6355\u83b7\"\u5728\u5931\u6d3b\u6001\u3002</p>"},{"location":"zh/notes/6.%20%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E8%BF%87%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E7%A8%8B%EF%BC%9A%E6%9F%A5%E6%99%AE%E6%9B%BC-%E7%A7%91%E5%B0%94%E8%8E%AB%E6%88%88%E7%BD%97%E5%A4%AB%E6%96%B9%E7%A8%8B/#_2","title":"\u603b\u7ed3","text":"<p> \u8fd9\u8282\u8bfe\u6559\u6388\u5e26\u9886\u6211\u4eec\u5b8c\u6210\u4e86\u4e00\u6b21\u4ece\u666e\u9002\u6027\u63cf\u8ff0\u5230\u5177\u4f53\u52a8\u529b\u5b66\u65b9\u7a0b\u7684\u903b\u8f91\u6784\u5efa\u3002\u6574\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u603b\u7ed3\u4e3a\u4e00\u6761\u6e05\u6670\u7684\u601d\u8def\uff1a</p> <ol> <li> <p>\u6211\u4eec\u4ece\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b\u6700\u5b8c\u5907\u4f46\u6700\u590d\u6742\u7684\u63cf\u8ff0\u8054\u5408\u6982\u7387\u5bc6\u5ea6\u51fa\u53d1\u3002</p> </li> <li> <p>\u4e3a\u4e86\u4f7f\u5176\u53d8\u5f97\u53ef\u63a7\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u6838\u5fc3\u7684\u7269\u7406\u7b80\u5316\u2014\u2014\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff0c\u5373\"\u65e0\u8bb0\u5fc6\u6027\"\u3002</p> </li> <li> <p>\u57fa\u4e8e\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff0c\u6211\u4eec\u63a8\u5bfc\u51fa\u4e86\u7b2c\u4e00\u4e2a\u57fa\u672c\u65b9\u7a0b\u2014\u2014\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b\u3002\u5b83\u662f\u4e00\u4e2a\u79ef\u5206/\u6c42\u548c\u65b9\u7a0b\uff0c\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5728\u6709\u9650\u65f6\u95f4\u6b65\u957f\u5185\u4ece\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u7684\u6982\u7387\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\"\u5bf9\u6240\u6709\u4e2d\u95f4\u8def\u5f84\u6c42\u548c\"\u3002</p> </li> <li> <p>\u6700\u540e\uff0c\u901a\u8fc7\u5bf9CK\u65b9\u7a0b\u53d6\u65e0\u7a77\u5c0f\u65f6\u95f4\u6781\u9650\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u66f4\u4e3a\u5f3a\u5927\u7684\u4e3b\u65b9\u7a0b\u3002\u5b83\u662f\u4e00\u4e2a\u5fae\u5206\u65b9\u7a0b\uff0c\u901a\u8fc7\u5b9a\u4e49\u8f6c\u79fb\u901f\u7387\uff0c\u7cbe\u786e\u63cf\u8ff0\u4e86\u7cfb\u7edf\u72b6\u6001\u6982\u7387\u7684\u77ac\u65f6\u53d8\u5316\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\u6982\u7387\u5728\u4e0d\u540c\u72b6\u6001\u95f4\u7684\"\u589e\u76ca-\u635f\u5931\"\u5e73\u8861\u3002</p> </li> </ol> <p>\u4e3a\u4e86\u66f4\u6e05\u6670\u5730\u5bf9\u6bd4\u8fd9\u4e24\u4e2a\u6838\u5fc3\u65b9\u7a0b\uff0c\u4e0b\u8868\u603b\u7ed3\u4e86\u5b83\u4eec\u7684\u5173\u952e\u7279\u5f81\uff1a</p> \u7279\u5f81 \u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b \u4e3b\u65b9\u7a0b \u65f6\u95f4\u5c3a\u5ea6 \u6709\u9650\u65f6\u95f4\u6b65\u957f (\\(t \\to t + \\Delta t\\)) \u65e0\u7a77\u5c0f\u65f6\u95f4\u6b65\u957f (\\(dt\\)) \u63cf\u8ff0\u5bf9\u8c61 \u8f6c\u79fb\u6982\u7387 \\(P(n, t + \\Delta t \\mid m, t)\\) \u8f6c\u79fb\u901f\u7387 \\(w_{m \\to n}\\) \u6570\u5b66\u5f62\u5f0f \u79ef\u5206/\u6c42\u548c\u65b9\u7a0b \u5fae\u5206\u65b9\u7a0b \u6838\u5fc3\u601d\u60f3 \u8def\u5f84\u53e0\u52a0 (Sum over intermediate paths) \u6982\u7387\u6d41\u7684\u5e73\u8861 (Balance of probability flux) <p>\u4e3b\u65b9\u7a0b\u4e0d\u4ec5\u662f\u7406\u8bba\u7684\u7ec8\u70b9\uff0c\u66f4\u662f\u5e94\u7528\u7814\u7a76\u7684\u8d77\u70b9\u3002\u638c\u63e1\u4e86\u4e3b\u65b9\u7a0b\uff0c\u6211\u4eec\u5c31\u62e5\u6709\u4e86\u5206\u6790\u5404\u7c7b\u968f\u673a\u7cfb\u7edf\u7684\u5f3a\u5927\u5de5\u5177\u3002\u5728\u540e\u7eed\u7684\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5b83\u6765\uff1a</p> <ul> <li> <p>\u6c42\u89e3\u7cfb\u7edf\u7684\u7a33\u6001\u5206\u5e03\uff08Steady-State Distribution\uff09\uff1a\u5f53\u65f6\u95f4\u8d8b\u4e8e\u65e0\u7a77\u65f6\uff0c\u7cfb\u7edf\u5904\u4e8e\u5404\u4e2a\u72b6\u6001\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\u8fd9\u901a\u5e38\u5bf9\u5e94\u4e8e\u4e3b\u65b9\u7a0b\u7684\u96f6\u89e3\u3002</p> </li> <li> <p>\u8ba1\u7b97\u7cfb\u7edf\u7684\u5f1b\u8c6b\u65f6\u95f4\uff08Relaxation Times\uff09\uff1a\u7cfb\u7edf\u53d7\u5230\u6270\u52a8\u540e\uff0c\u9700\u8981\u591a\u957f\u65f6\u95f4\u624d\u80fd\u6062\u590d\u5230\u7a33\u6001\uff1f\u8fd9\u4e0e\u8f6c\u79fb\u901f\u7387\u77e9\u9635\u7684\u7279\u5f81\u503c\u6709\u5173\u3002</p> </li> <li> <p>\u5206\u6790\u9996\u6b21\u901a\u8fc7\u65f6\u95f4\uff08First-Passage Time\uff09\uff1a\u7cfb\u7edf\u4ece\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\u51fa\u53d1\uff0c\u5e73\u5747\u9700\u8981\u591a\u957f\u65f6\u95f4\u624d\u80fd\u9996\u6b21\u5230\u8fbe\u67d0\u4e2a\u76ee\u6807\u72b6\u6001\uff1f</p> </li> </ul> <p>\u8fd9\u4e9b\u95ee\u9898\u5728\u7269\u7406\u3001\u5316\u5b66\u3001\u751f\u7269\u548c\u91d1\u878d\u7b49\u9886\u57df\u90fd\u6709\u7740\u81f3\u5173\u91cd\u8981\u7684\u5e94\u7528\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/","title":"\u5f15\u8a00:\u4ece\u5168\u5c40\u8df3\u8f6c\u5230\u77ac\u65f6\u901f\u7387","text":"<p>\u5728\u4e0a\u4e00\u8bb2\u4e2d,\u6211\u4eec\u5b66\u4e60\u4e86\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b(Chapman-Kolmogorov, CK)\u65b9\u7a0b,\u5b83\u662f\u63cf\u8ff0\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u6f14\u5316\u7684\u57fa\u77f3\u3002CK\u65b9\u7a0b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5168\u5c40\u89c6\u89d2,\u544a\u8bc9\u6211\u4eec\u7cfb\u7edf\u5728\u6709\u9650\u65f6\u95f4\u95f4\u9694\u5185\u4ece\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u7684\u6982\u7387\u662f\u5982\u4f55\u901a\u8fc7\u6240\u6709\u53ef\u80fd\u7684\u4e2d\u95f4\u72b6\u6001\u8054\u7cfb\u8d77\u6765\u7684\u3002\u7136\u800c,\u5728\u7269\u7406\u548c\u5316\u5b66\u7684\u8bb8\u591a\u5b9e\u9645\u95ee\u9898\u4e2d,\u6211\u4eec\u66f4\u5173\u5fc3\u7684\u662f\u7cfb\u7edf\u72b6\u6001\u968f\u65f6\u95f4\u77ac\u65f6\u5982\u4f55\u53d8\u5316\u3002\u6211\u4eec\u5e0c\u671b\u6709\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u725b\u987f\u529b\u5b66\u4e2d \\(F = ma\\) \u7684\u65b9\u7a0b,\u5b83\u4e0d\u63cf\u8ff0\u6574\u4e2a\u8f68\u8ff9,\u800c\u662f\u63cf\u8ff0\u5728\u4efb\u610f\u65f6\u523b\u7cfb\u7edf\u72b6\u6001\u53d8\u5316\u7684\"\u9a71\u52a8\u529b\"\u6216\u901f\u7387\u3002</p> <p>\u8fd9\u8282\u8bfe Erwin Frey\u6559\u6388\u7684\u76ee\u6807\u6b63\u662f\u5e26\u9886\u6211\u4eec\u63a8\u5bfc\u51fa\u8fd9\u6837\u4e00\u4e2a\u66f4\u4e3a\u5f3a\u5927\u7684\u5de5\u5177:\u4e00\u4e2a\u63cf\u8ff0\u6982\u7387\u5206\u5e03\u77ac\u65f6\u53d8\u5316\u7387\u7684\u5fae\u5206\u65b9\u7a0b(\u4e3b\u65b9\u7a0b)\u3002\u901a\u8fc7\u5c06CK\u65b9\u7a0b\u4e2d\u6709\u9650\u7684\u65f6\u95f4\u6b65\u957f\u63a8\u5411\u65e0\u7a77\u5c0f\u6781\u9650,\u6211\u4eec\u5c06\u4ece\u4e00\u4e2a\u63cf\u8ff0\u6709\u9650\u65f6\u95f4\u8df3\u8f6c\u7684\u79ef\u5206\u578b\u65b9\u7a0b,\u8fc7\u6e21\u5230\u4e00\u4e2a\u63cf\u8ff0\u77ac\u65f6\u6982\u7387\u6d41\u52a8\u7684\u5fae\u5206\u578b\u65b9\u7a0b\u3002\u8fd9\u79cd\u4ece\u5168\u5c40\u5230\u5c40\u90e8\u7684\u89c6\u89d2\u8f6c\u53d8,\u4e0d\u4ec5\u5728\u6570\u5b66\u4e0a\u66f4\u6613\u4e8e\u5904\u7406,\u4e5f\u66f4\u7b26\u5408\u6211\u4eec\u5bf9\u52a8\u6001\u8fc7\u7a0b\u7684\u7269\u7406\u76f4\u89c9\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#1","title":"1. \u4e3b\u65b9\u7a0b\u7684\u63a8\u5bfc","text":""},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#11-","title":"1.1 \u56de\u987e:\u4f5c\u4e3a\u8d77\u70b9\u7684\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b","text":"<p>\u8ba9\u6211\u4eec\u4ece\u4e0a\u4e00\u8bb2\u7684\u6838\u5fc3\u5185\u5bb9\u2014\u2014CK\u65b9\u7a0b\u5f00\u59cb\u3002\u5bf9\u4e8e\u4e00\u4e2a\u79bb\u6563\u72b6\u6001\u7a7a\u95f4\u4e2d\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b,CK\u65b9\u7a0b\u63cf\u8ff0\u4e86\u6761\u4ef6\u6982\u7387\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u3002\u7ed9\u5b9a\u4e09\u4e2a\u65f6\u95f4\u70b9 \\(t_0 &lt; t' &lt; t\\),\u7cfb\u7edf\u4ece\u521d\u59cb\u72b6\u6001 \\(n_0\\) \u6f14\u5316\u5230\u6700\u7ec8\u72b6\u6001 \\(n\\) \u7684\u6982\u7387,\u53ef\u4ee5\u901a\u8fc7\u5bf9\u6240\u6709\u53ef\u80fd\u5728\u4e2d\u95f4\u65f6\u523b \\(t'\\) \u51fa\u73b0\u7684\u4e2d\u95f4\u72b6\u6001 \\(m\\) \u8fdb\u884c\u6c42\u548c\u5f97\u5230:</p> \\[ P(n,t|n_0,t_0) = \\sum_m P(n,t|m,t')P(m,t'|n_0,t_0) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u4f53\u73b0\u4e86\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u7684\"\u65e0\u8bb0\u5fc6\u6027\":\u7cfb\u7edf\u5728 \\(t'\\) \u65f6\u523b\u4e4b\u540e\u5982\u4f55\u6f14\u5316,\u53ea\u53d6\u51b3\u4e8e\u5b83\u5728 \\(t'\\) \u65f6\u523b\u6240\u5904\u7684\u72b6\u6001 \\(m\\),\u800c\u4e0e\u5b83\u5982\u4f55\u5230\u8fbe\u8be5\u72b6\u6001\u7684\u5386\u53f2\u65e0\u5173\u3002</p> <p>\u6b63\u5982\u6559\u6388\u5728\u8bfe\u5802\u4e0a\u56de\u987e\u7684,\u57fa\u4e8eCK\u65b9\u7a0b,\u6211\u4eec\u53ef\u4ee5\u4ece\u4e24\u4e2a\u4e0d\u540c\u7684\u89d2\u5ea6\u6765\u8003\u5bdf\u65f6\u95f4\u7684\u6f14\u5316:</p> <ul> <li> <p>\u524d\u5411\u65b9\u7a0b(Forward Equation):\u56fa\u5b9a\u521d\u59cb\u72b6\u6001 \\((n_0,t_0)\\) \u548c\u4e2d\u95f4\u65f6\u523b \\(t'\\),\u8003\u5bdf\u6700\u7ec8\u72b6\u6001\u7684\u6982\u7387 \\(P(n,t|\\cdot)\\) \u5982\u4f55\u968f\u7740\u65f6\u95f4 \\(t\\) \u5411\u524d\u6f14\u5316\u3002</p> </li> <li> <p>\u540e\u5411\u65b9\u7a0b(Backward Equation):\u56fa\u5b9a\u6700\u7ec8\u72b6\u6001 \\((n,t)\\) \u548c\u4e2d\u95f4\u65f6\u523b \\(t'\\),\u8003\u5bdf\u521d\u59cb\u72b6\u6001\u7684\u6982\u7387 \\(P(\\cdot|n_0,t_0)\\) \u5982\u4f55\u968f\u7740\u65f6\u95f4 \\(t_0\\) \u5411\u540e\u6f14\u5316\u3002</p> </li> </ul> <p>\u5728\u672c\u8282\u8bfe\u4e2d,\u6211\u4eec\u7684\u7126\u70b9\u5c06\u5b8c\u5168\u96c6\u4e2d\u5728\u524d\u5411\u4e3b\u65b9\u7a0b\u4e0a,\u56e0\u4e3a\u5b83\u63cf\u8ff0\u4e86\u6211\u4eec\u901a\u5e38\u6700\u5173\u5fc3\u7684\u7269\u7406\u8fc7\u7a0b:\u4e00\u4e2a\u7cfb\u7edf\u4ece\u4e00\u4e2a\u786e\u5b9a\u7684\u521d\u59cb\u72b6\u6001\u51fa\u53d1,\u5176\u6982\u7387\u5206\u5e03\u5982\u4f55\u968f\u7740\u65f6\u95f4\u7684\u6d41\u901d\u800c\u6f14\u53d8\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#12","title":"1.2 \u4ece\u6709\u9650\u65f6\u95f4\u6b65\u5230\u77ac\u65f6\u89c6\u89d2","text":"<p>\u4e3a\u4e86\u5f97\u5230\u4e00\u4e2a\u63cf\u8ff0\u6982\u7387\u77ac\u65f6\u53d8\u5316\u7684\u5fae\u5206\u65b9\u7a0b,\u6211\u4eec\u7684\u6838\u5fc3\u7b56\u7565\u662f\u8003\u5bdf\u5728\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u65f6\u95f4\u95f4\u9694 \\(d\\tau\\) \u5185\u6982\u7387\u7684\u53d8\u5316\u3002\u6211\u4eec\u4ece\u6982\u7387 \\(P(n,\\tau|n_0,t_0)\\) \u5bf9\u65f6\u95f4 \\(\\tau\\) \u7684\u5bfc\u6570\u7684\u5b9a\u4e49\u51fa\u53d1:</p> \\[ \\partial_\\tau P(n,\\tau|n_0,t_0) = \\lim_{d\\tau \\to 0} \\frac{1}{d\\tau}[P(n,\\tau+d\\tau|n_0,t_0) - P(n,\\tau|n_0,t_0)] \\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7269\u7406\u610f\u4e49\u662f\u6982\u7387 \\(P(n,\\tau|\\cdot)\\) \u7684\u77ac\u65f6\u53d8\u5316\u7387\u3002\u73b0\u5728,\u6211\u4eec\u7684\u4efb\u52a1\u662f\u5229\u7528CK\u65b9\u7a0b\u6765\u5904\u7406\u5206\u5b50\u4e2d\u7684\u7b2c\u4e00\u9879 \\(P(n,\\tau+d\\tau|n_0,t_0)\\)\u3002\u6211\u4eec\u5c06CK\u65b9\u7a0b\u4e2d\u7684\u65f6\u95f4\u70b9\u8bbe\u7f6e\u4e3a \\(t=\\tau+d\\tau\\),\\(t'=\\tau\\) \u548c \\(t_0\\)\u3002\u8fd9\u6837,CK\u65b9\u7a0b\u5c31\u53d8\u6210\u4e86:</p> \\[ P(n,\\tau+d\\tau|n_0,t_0) = \\sum_m P(n,\\tau+d\\tau|m,\\tau)P(m,\\tau|n_0,t_0) \\] <p>\u8fd9\u4e2a\u5f0f\u5b50\u544a\u8bc9\u6211\u4eec,\u8981\u5728 \\(\\tau+d\\tau\\) \u65f6\u523b\u5904\u4e8e\u72b6\u6001 \\(n\\),\u7cfb\u7edf\u5fc5\u987b\u5728 \\(\\tau\\) \u65f6\u523b\u5904\u4e8e\u67d0\u4e2a\u4e2d\u95f4\u72b6\u6001 \\(m\\),\u7136\u540e\u5728\u65e0\u7a77\u5c0f\u7684\u65f6\u95f4\u95f4\u9694 \\(d\\tau\\) \u5185\u4ece \\(m\\) \u8f6c\u79fb\u5230 \\(n\\)\u3002</p> <p>\u73b0\u5728,\u6211\u4eec\u5c06\u8fd9\u4e2a\u7ed3\u679c\u4ee3\u5165\u5bfc\u6570\u7684\u5b9a\u4e49\u5f0f\u4e2d:</p> \\[ \\partial_\\tau P(n,\\tau|\\cdot) = \\lim_{d\\tau \\to 0} \\frac{1}{d\\tau}\\left[\\sum_m P(n,\\tau+d\\tau|m,\\tau)P(m,\\tau|\\cdot) - P(n,\\tau|\\cdot)\\right] \\] <p>\u4e3a\u4e86\u5c06\u5206\u5b50\u4e2d\u7684\u7b2c\u4e8c\u9879\u4e5f\u7eb3\u5165\u6c42\u548c\u7b26\u53f7\u4e2d,\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5de7\u5999\u7684\u6280\u5de7:\u5f15\u5165\u514b\u7f57\u5185\u514b(Kronecker)delta\u51fd\u6570 \\(\\delta_{nm}\\)\u3002\u6211\u4eec\u77e5\u9053 \\(\\sum_m \\delta_{nm}P(m,\\tau|\\cdot) = P(n,\\tau|\\cdot)\\)\u3002\u5229\u7528\u8fd9\u4e2a\u6052\u7b49\u5f0f,\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u5f0f\u6539\u5199\u4e3a (1):</p> \\[ \\partial_{\\tau} P(n, \\tau \\mid \\cdot) = \\lim_{d\\tau \\to 0} \\frac{1}{d\\tau} \\sum_{m} \\left[ P(n, \\tau + d\\tau \\mid m, \\tau) P(m, \\tau \\mid \\cdot) - \\delta_{nm} P(m, \\tau \\mid \\cdot) \\right] \\] <p>\u6574\u7406\u540e\u5f97\u5230:</p> \\[ \\partial_{\\tau} P(n, \\tau \\mid \\cdot) = \\sum_{m} \\left( \\lim_{d\\tau \\to 0} \\frac{P(n, \\tau + d\\tau \\mid m, \\tau) - \\delta_{nm}}{d\\tau} \\right) P(m, \\tau \\mid \\cdot) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u5c31\u662f\u524d\u5411\u4e3b\u65b9\u7a0b\u7684\u96cf\u5f62\u3002\u5b83\u5c06\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\u968f\u65f6\u95f4\u7684\u77ac\u65f6\u53d8\u5316(\u5de6\u4fa7)\u4e0e\u6240\u6709\u5176\u4ed6\u72b6\u6001 \\(m\\) \u7684\u6982\u7387(\u53f3\u4fa7\u7684 \\(P(m,\\tau|\\cdot)\\))\u4ee5\u53ca\u5b83\u4eec\u5411\u72b6\u6001 \\(n\\) \u7684\u8f6c\u79fb\u80fd\u529b(\u62ec\u53f7\u5185\u7684\u6781\u9650\u9879)\u8054\u7cfb\u4e86\u8d77\u6765\u3002</p> <p>\u8fd9\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u6807\u5fd7\u7740\u6211\u4eec\u5206\u6790\u65b9\u6cd5\u7684\u4e00\u6b21\u6839\u672c\u6027\u8f6c\u53d8\u3002CK\u65b9\u7a0b\u56de\u7b54\u7684\u662f\u4e00\u4e2a\u5168\u5c40\u6027\u7684\u95ee\u9898:\"\u7cfb\u7edf\u5982\u4f55\u901a\u8fc7\u4e2d\u95f4\u72b6\u6001B\u4eceA\u5230\u8fbeC?\" \u800c\u6211\u4eec\u521a\u521a\u63a8\u5bfc\u51fa\u7684\u4e3b\u65b9\u7a0b,\u901a\u8fc7\u53d6 \\(d\\tau \\to 0\\) \u7684\u6781\u9650,\u56de\u7b54\u4e86\u4e00\u4e2a\u66f4\u5f3a\u5927\u3001\u66f4\u5c40\u90e8\u7684\u7269\u7406\u95ee\u9898:\"\u5728\u6b64\u523b,\u6982\u7387\u662f\u5982\u4f55\u6d41\u5165\u548c\u6d41\u51fa\u5f53\u524d\u72b6\u6001\u7684?\" \u8fd9\u7c7b\u4f3c\u4e8e\u5728\u7ecf\u5178\u529b\u5b66\u4e2d,\u4ece\u8ba1\u7b97\u4e00\u6bb5\u65c5\u7a0b\u7684\u5e73\u5747\u901f\u5ea6,\u53d1\u5c55\u5230\u5b9a\u4e49\u4efb\u610f\u65f6\u523b\u7684\u77ac\u65f6\u901f\u5ea6\u3002\u8fd9\u79cd\u5c40\u57df\u5316\u7684\u5fae\u5206\u5f62\u5f0f,\u662f\u7269\u7406\u5b66\u4e2d\u7edd\u5927\u591a\u6570\u52a8\u529b\u5b66\u7406\u8bba\u7684\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#2-q","title":"2. Q \u77e9\u9635:\u65f6\u95f4\u6f14\u5316\u7684\u5f15\u64ce","text":"<p>\u5728\u4e0a\u4e00\u8282\u7684\u63a8\u5bfc\u4e2d,\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u6838\u5fc3\u7684\u6570\u5b66\u7ed3\u6784,\u5b83\u63cf\u8ff0\u4e86\u5728\u65e0\u7a77\u5c0f\u65f6\u95f4\u95f4\u9694\u5185\u4ece\u4e00\u4e2a\u72b6\u6001\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u7684\u8f6c\u79fb\u6982\u7387\u3002\u4e3a\u4e86\u7b80\u5316\u8868\u8fbe\u5e76\u63ed\u793a\u5176\u6df1\u523b\u7684\u7269\u7406\u5185\u6db5,\u6211\u4eec\u5c06\u5176\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u77e9\u9635,\u5373Q\u77e9\u9635,\u4e5f\u79f0\u4e3a\u65e0\u7a77\u5c0f\u751f\u6210\u5143(infinitesimal generator)\u6216\u8f6c\u79fb\u901f\u7387\u77e9\u9635(transition rate matrix)\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#21-q","title":"2.1 Q \u77e9\u9635\u7684\u6b63\u5f0f\u5b9a\u4e49","text":"<p>\u6839\u636e\u4e0a\u4e00\u8282\u7684\u63a8\u5bfc,Q\u77e9\u9635\u7684\u5143\u7d20 \\(Q_\\tau(n,m)\\) \u88ab\u5b9a\u4e49\u4e3a:</p> \\[ Q_{\\tau}(n, m) = \\lim_{d\\tau \\to 0} \\frac{1}{d\\tau} \\left[ P(n, \\tau + d\\tau \\mid m, \\tau) - \\delta_{nm} \\right] \\] <p>\u8fd9\u4e2a\u5b9a\u4e49\u975e\u5e38\u7cbe\u70bc,\u5b83\u5c06\u7cfb\u7edf\u5728\u65e0\u7a77\u5c0f\u65f6\u95f4\u5185\u7684\u6240\u6709\u8f6c\u79fb\u4fe1\u606f\u90fd\u5c01\u88c5\u5728\u4e86\u77e9\u9635 \\(Q\\) \u4e2d\u3002\u5f15\u5165Q\u77e9\u9635\u540e,\u4e0a\u4e00\u8282\u63a8\u5bfc\u51fa\u7684\u4e3b\u65b9\u7a0b\u53ef\u4ee5\u88ab\u5199\u6210\u4e00\u4e2a\u6781\u4e3a\u7d27\u51d1\u548c\u4f18\u7f8e\u7684\u77e9\u9635\u5f62\u5f0f:</p> <p>\u4e3a\u907f\u514d\u8bb0\u53f7\u6df7\u6dc6,\u672c\u6587\u91c7\u7528\u5982\u4e0b\u7ea6\u5b9a: \\(Q_{\\text{row},\\,\\text{col}}\\) \u8868\u793a\u4ece\u201c\u5217\u201d\u5bf9\u5e94\u7684\u72b6\u6001\u8df3\u5230\u201c\u884c\u201d\u5bf9\u5e94\u7684\u72b6\u6001(\u5373 col\u2192row \u7684\u901f\u7387),\u56e0\u6b64 \\(Q\\) \u7684\u201c\u5217\u548c\u201d\u4e3a\u96f6\u3002</p> \\[ \\partial_{\\tau} P(n, \\tau \\mid \\cdot) = \\sum_{m} Q_{\\tau}(n, m) P(m, \\tau \\mid \\cdot) \\] <p>\u5982\u679c\u6211\u4eec\u7528\u5411\u91cf \\(\\vec{P}(\\tau)\\) \u6765\u8868\u793a\u6240\u6709\u72b6\u6001\u7684\u6982\u7387\u5206\u5e03,\u5176\u4e2d\u7b2c \\(n\\) \u4e2a\u5206\u91cf\u662f \\(P(n, \\tau)\\),\u90a3\u4e48\u6574\u4e2a\u7cfb\u7edf\u7684\u65f6\u95f4\u6f14\u5316\u53ef\u4ee5\u88ab\u4e00\u4e2a\u7b80\u6d01\u7684\u7ebf\u6027\u5e38\u5fae\u5206\u65b9\u7a0b\u7ec4\u63cf\u8ff0:</p> \\[ \\partial_{\\tau} \\vec{P}(\\tau \\mid t_0) = Q_{\\tau} \\vec{P}(\\tau \\mid t_0) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u5c31\u662f\u524d\u5411\u4e3b\u65b9\u7a0b\u7684\u6700\u7ec8\u5f62\u5f0f\u3002\u5b83\u8868\u660e,\u6982\u7387\u5411\u91cf\u7684\u65f6\u95f4\u5bfc\u6570(\u5373\u6982\u7387\u5206\u5e03\u7684\u53d8\u5316\u901f\u7387)\u5b8c\u5168\u7531Q\u77e9\u9635\u4f5c\u7528\u5728\u5f53\u524d\u7684\u6982\u7387\u5411\u91cf\u4e0a\u51b3\u5b9a\u3002\u7ed9\u5b9a\u4e00\u4e2a\u521d\u59cb\u6982\u7387\u5206\u5e03 \\(\\vec{P}(t_0)\\),\u6c42\u89e3\u8fd9\u4e2a\u5fae\u5206\u65b9\u7a0b\u7ec4\u5c31\u80fd\u5f97\u5230\u7cfb\u7edf\u5728\u4efb\u4f55\u672a\u6765\u65f6\u523b\u7684\u6982\u7387\u5206\u5e03\u3002Q\u77e9\u9635\u5c31\u50cf\u662f\u9a71\u52a8\u7cfb\u7edf\u6982\u7387\u6f14\u5316\u7684\u5f15\u64ce\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#22-q","title":"2.2 \u89e3\u6784Q\u77e9\u9635","text":"<p>\u4e3a\u4e86\u6df1\u523b\u7406\u89e3Q\u77e9\u9635\u7684\u7269\u7406\u610f\u4e49,\u6211\u4eec\u9700\u8981\u4ed4\u7ec6\u5206\u6790\u5176\u77e9\u9635\u5143\u7d20\u7684\u6784\u6210\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#q_nmn-neq-m","title":"\u975e\u5bf9\u89d2\u5143\u7d20 (\\(Q_{nm}\\),\\(n \\neq m\\)):\u8f6c\u79fb\u901f\u7387","text":"<p>\u5f53 \\(n \\neq m\\) \u65f6,\u514b\u7f57\u5185\u514bdelta\u51fd\u6570 \\(\\delta_{nm} = 0\\)\u3002\u6b64\u65f6,Q\u77e9\u9635\u7684\u975e\u5bf9\u89d2\u5143\u7d20\u5b9a\u4e49\u4e3a:</p> \\[ Q_{nm} = w(n,m) = \\lim_{d\\tau \\to 0} \\frac{P(n,\\tau+d\\tau|m,\\tau)}{d\\tau} \\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7269\u7406\u610f\u4e49\u662f,\u5f53\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001 \\(m\\) \u65f6,\u5728\u65e0\u7a77\u5c0f\u7684\u65f6\u95f4\u95f4\u9694 \\(d\\tau\\) \u5185\u8f6c\u79fb\u5230\u72b6\u6001 \\(n\\) \u7684\u6982\u7387 \\(P(n,\\tau+d\\tau|m,\\tau)\\),\u9664\u4ee5\u8be5\u65f6\u95f4\u95f4\u9694 \\(d\\tau\\)\u3002\u8fd9\u6b63\u662f\u4ece\u72b6\u6001 \\(m\\) \u8df3\u8f6c\u5230\u72b6\u6001 \\(n\\) \u7684\u77ac\u65f6\u6982\u7387\u901f\u7387,\u6211\u4eec\u79f0\u4e4b\u4e3a\u8f6c\u79fb\u901f\u7387(transition rate)\u3002\u7531\u4e8e\u6982\u7387 \\(P\\) \u662f\u975e\u8d1f\u7684,\u6240\u4ee5\u6240\u6709\u7684\u975e\u5bf9\u89d2\u5143\u7d20\u5fc5\u7136\u6ee1\u8db3 \\(Q_{nm} \\geq 0\\)\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#q_mm","title":"\u5bf9\u89d2\u5143\u7d20 (\\(Q_{mm}\\)): \u8d1f\u7684\u79bb\u5f00\u901f\u7387","text":"<p>\u5f53 \\(n = m\\) \u65f6,\u514b\u7f57\u5185\u514bdelta\u51fd\u6570 \\(\\delta_{mm} = 1\\)\u3002\u6b64\u65f6,Q\u77e9\u9635\u7684\u5bf9\u89d2\u5143\u7d20\u5b9a\u4e49\u4e3a:</p> \\[ Q_{mm} = \\lim_{d\\tau \\to 0} \\frac{P(m,\\tau+d\\tau|m,\\tau) - 1}{d\\tau} \\] <p>\u8fd9\u91cc\u7684 \\(P(m,\\tau+d\\tau|m,\\tau)\\) \u662f\u7cfb\u7edf\u5728 \\(d\\tau\\) \u65f6\u95f4\u5185\u4fdd\u6301\u5728\u72b6\u6001 \\(m\\) \u7684\u6982\u7387\u3002\u56e0\u6b64,\\(1-P(m,\\tau+d\\tau|m,\\tau)\\) \u5c31\u662f\u7cfb\u7edf\u79bb\u5f00\u72b6\u6001 \\(m\\) \u7684\u603b\u6982\u7387\u3002\u6240\u4ee5,\\(Q_{mm}\\) \u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u8d1f\u7684\u5355\u4f4d\u65f6\u95f4\u79bb\u5f00\u6982\u7387,\u6211\u4eec\u5b9a\u4e49 \\(w(m) = -Q_{mm}\\) \u4e3a\u4ece\u72b6\u6001 \\(m\\) \u7684\u603b\u79bb\u5f00\u901f\u7387(exit rate)\u3002\u7531\u4e8e\u4fdd\u6301\u6982\u7387 \\(P(m,\\tau+d\\tau|m,\\tau) \\leq 1\\),\u6240\u4ee5\u5bf9\u89d2\u5143\u7d20\u5fc5\u7136\u6ee1\u8db3 \\(Q_{mm} \\leq 0\\)\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#23","title":"2.3 \u57fa\u672c\u7ea6\u675f:\u6982\u7387\u5b88\u6052","text":"<p>Q\u77e9\u9635\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u6027\u8d28\u662f:\u6bcf\u4e00\u5217\u7684\u5143\u7d20\u4e4b\u548c\u6052\u4e3a\u96f6\u3002\u8fd9\u4e2a\u6027\u8d28\u5e76\u975e\u51ed\u7a7a\u800c\u6765,\u5b83\u76f4\u63a5\u6e90\u4e8e\u6982\u7387\u5b88\u6052\u8fd9\u4e00\u57fa\u672c\u7269\u7406\u539f\u7406\u3002</p> <p>\u8003\u8651\u7cfb\u7edf\u5728 \\(\\tau\\) \u65f6\u523b\u5904\u4e8e\u72b6\u6001 \\(m\\)\u3002\u5728\u7ecf\u8fc7\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u65f6\u95f4\u95f4\u9694 \\(d\\tau\\) \u540e,\u5b83\u5fc5\u7136\u4f1a\u8f6c\u79fb\u5230\u72b6\u6001\u7a7a\u95f4\u4e2d\u7684\u67d0\u4e2a\u72b6\u6001 \\(n\\)(\u5305\u62ec\u4fdd\u6301\u5728\u72b6\u6001 \\(m\\) \u672c\u8eab)\u3002\u56e0\u6b64,\u4ece\u72b6\u6001 \\(m\\) \u51fa\u53d1\u5230\u6240\u6709\u53ef\u80fd\u72b6\u6001 \\(n\\) \u7684\u8f6c\u79fb\u6982\u7387\u4e4b\u548c\u5fc5\u987b\u4e3a1:</p> \\[ \\sum_n P(n,\\tau+d\\tau|m,\\tau) = 1 \\] <p>\u73b0\u5728,\u6211\u4eec\u4ece\u8fd9\u4e2a\u7b49\u5f0f\u4e24\u8fb9\u540c\u65f6\u51cf\u53bb1,\u7136\u540e\u9664\u4ee5 \\(d\\tau\\) \u5e76\u53d6\u6781\u9650\u3002\u6ce8\u610f\u5230 \\(1 = \\sum_n \\delta_{nm}\\),\u6211\u4eec\u53ef\u4ee5\u5f97\u5230:</p> \\[ \\lim_{d\\tau \\to 0} \\frac{1}{d\\tau} \\left( \\sum_{n} P(n, \\tau + d\\tau \\mid m, \\tau) - \\sum_{n} \\delta_{nm} \\right) = 0 \\] <p>\u5c06\u6c42\u548c\u4e0e\u6781\u9650\u4ea4\u6362\u987a\u5e8f(\u5bf9\u4e8e\u6709\u9650\u72b6\u6001\u7a7a\u95f4),\u6211\u4eec\u5f97\u5230:</p> \\[ \\sum_{n} \\left( \\lim_{d\\tau \\to 0} \\frac{P(n, \\tau + d\\tau \\mid m, \\tau) - \\delta_{nm}}{d\\tau} \\right) = 0 \\] <p>\u62ec\u53f7\u5185\u7684\u8868\u8fbe\u5f0f\u6b63\u662fQ\u77e9\u9635\u5143\u7d20\u7684\u5b9a\u4e49,\u56e0\u6b64\u6211\u4eec\u5f97\u5230\u4e86\u6838\u5fc3\u7ed3\u8bba:</p> \\[ \\sum_{n} Q_{nm} = 0 \\] <p>\u8fd9\u4e2a\u6027\u8d28\u5177\u6709\u6df1\u523b\u7684\u7269\u7406\u542b\u4e49\u3002\u5b83\u8868\u660e,\u5bf9\u89d2\u5143\u7d20(\u8d1f\u7684\u79bb\u5f00\u901f\u7387)\u5fc5\u987b\u7cbe\u786e\u5730\u7b49\u4e8e\u8be5\u5217\u6240\u6709\u975e\u5bf9\u89d2\u5143\u7d20(\u5230\u5176\u4ed6\u6240\u6709\u72b6\u6001\u7684\u8f6c\u79fb\u901f\u7387)\u4e4b\u548c:</p> \\[ w(m) = -Q_{mm} = \\sum_{n \\neq m} Q_{nm} = \\sum_{n \\neq m} w(n, m) \\] <p>\u6362\u53e5\u8bdd\u8bf4,\u7cfb\u7edf\u79bb\u5f00\u4e00\u4e2a\u72b6\u6001\u7684\u603b\u901f\u7387,\u5fc5\u987b\u7b49\u4e8e\u5b83\u8df3\u8f6c\u5230\u6240\u6709\u5176\u4ed6\u53ef\u80fd\u72b6\u6001\u7684\u901f\u7387\u4e4b\u548c\u3002Q\u77e9\u9635\u7684\u4ee3\u6570\u6027\u8d28\u5e76\u975e\u62bd\u8c61\u7684\u6570\u5b66\u89c4\u5219,\u800c\u662f\u6982\u7387\u5b88\u6052\u8fd9\u4e00\u7269\u7406\u5b9a\u5f8b\u7684\u76f4\u63a5\u6570\u5b66\u4f53\u73b0\u3002\u4ece\u6982\u7387\u5fc5\u987b\u5f52\u4e00\u5316\u51fa\u53d1,\u6211\u4eec\u63a8\u5bfc\u51fa\u5728\u4e00\u4e2a\u5c0f\u65f6\u95f4\u6b65\u5185,\u79bb\u5f00\u548c\u4fdd\u6301\u7684\u6982\u7387\u4e4b\u548c\u4e3a1\u3002Q\u77e9\u9635\u6b63\u662f\u57fa\u4e8e\u8fd9\u4e9b\u6982\u7387\u5728\u65e0\u7a77\u5c0f\u6781\u9650\u4e0b\u7684\u5b9a\u4e49\u3002\u56e0\u6b64,Q\u77e9\u9635\u201c\u5217\u548c\u4e3a\u96f6\u201d\u7684\u6570\u5b66\u7ea6\u675f,\u5c31\u662f\u6982\u7387\u5b88\u6052\u5b9a\u5f8b\u7684\u4ee3\u6570\u7f16\u7801\u3002\u5bf9\u89d2\u5143\u7d20\u7684\"\u635f\u5931\"\u5fc5\u987b\u4e0e\u8be5\u5217\u6240\u6709\u975e\u5bf9\u89d2\u5143\u7d20\u7684\"\u589e\u76ca\"\u5b8c\u7f8e\u5e73\u8861\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u5feb\u901f\u638c\u63e1,\u5c06Q\u77e9\u9635\u7684\u6838\u5fc3\u7279\u6027\u603b\u7ed3\u5728\u4e0b\u8868\u4e2d\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#1q","title":"\u88681:Q\u77e9\u9635\u7684\u89e3\u6784","text":"\u77e9\u9635\u5143\u7d20 \u6570\u5b66\u5b9a\u4e49 \u7269\u7406\u610f\u4e49 \u7ea6\u675f\u6761\u4ef6 \u975e\u5bf9\u89d2\u5143 \\(Q_{nm}\\) (\\(n \\neq m\\)) \\(w(n,m) = \\lim_{d\\tau \\to 0} \\frac{P(n,\\tau+d\\tau\\|m,\\tau)}{d\\tau}\\) \u4ece\u72b6\u6001 \\(m\\) \u5230\u72b6\u6001 \\(n\\) \u7684\u8f6c\u79fb\u901f\u7387 \\(Q_{nm} \\geq 0\\) \u5bf9\u89d2\u5143 \\(Q_{mm}\\) \\(-w(m) = \\lim_{d\\tau \\to 0} \\frac{P(m,\\tau+d\\tau\\|m,\\tau) - 1}{d\\tau}\\) \u8d1f\u7684\u4ece\u72b6\u6001 \\(m\\) \u7684\u603b\u79bb\u5f00\u901f\u7387 \\(Q_{mm} \\leq 0\\) \u884c\u548c\u7ea6\u675f \\(\\sum_n Q_{nm} = 0\\) \u6982\u7387\u5b88\u6052\u5b9a\u5f8b \u5bf9\u6240\u6709 \\(m\\) \u6210\u7acb"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#3","title":"3. \u4e3b\u65b9\u7a0b\u7684\u7269\u7406\u76f4\u89c9:\u589e\u76ca\u4e0e\u635f\u5931\u7684\u5e73\u8861","text":"<p>\u867d\u7136\u4e3b\u65b9\u7a0b\u7684\u77e9\u9635\u5f62\u5f0f \\(\\partial_\\tau P = QP\\) \u975e\u5e38\u7b80\u6d01,\u4f46\u5b83\u7684\u53e6\u4e00\u4e2a\u7b49\u4ef7\u5f62\u5f0f\u2014\u2014\"\u589e\u76ca-\u635f\u5931\"\u5f62\u5f0f,\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u6e05\u6670\u7684\u7269\u7406\u56fe\u50cf\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#31","title":"3.1 \u91cd\u5199\u4e3b\u65b9\u7a0b","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e0a\u4e00\u8282\u5bf9Q\u77e9\u9635\u5143\u7d20\u7684\u5b9a\u4e49,\u5c06\u4e3b\u65b9\u7a0b \\(\\partial_\\tau P(n,\\tau) = \\sum_m Q_{nm} P(m,\\tau)\\) \u5c55\u5f00\u3002\u6211\u4eec\u5c06\u6c42\u548c\u9879\u4e2d\u7684\u5bf9\u89d2\u9879 (\\(m=n\\)) \u548c\u975e\u5bf9\u89d2\u9879 (\\(m \\neq n\\)) \u5206\u5f00:</p> \\[ \\partial_\\tau P(n,\\tau) = Q_{nn} P(n,\\tau) + \\sum_{m \\neq n} Q_{nm} P(m,\\tau) \\] <p>\u4ee3\u5165 \\(Q_{nm} = w(n,m)\\) \u548c \\(Q_{nn} = -\\sum_{m \\neq n} w(m,n)\\),\u6211\u4eec\u5f97\u5230:</p> \\[ \\partial_{\\tau} P(n, \\tau) = \\sum_{m \\neq n} w(n, m) P(m, \\tau) - \\left( \\sum_{m \\neq n} w(m, n) \\right) P(n, \\tau) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6574\u7406\u6210\u4e00\u4e2a\u5bf9\u79f0\u4e14\u76f4\u89c2\u7684\u5f62\u5f0f:</p> \\[ \\partial_{\\tau} P(n, \\tau) = \\sum_{m \\neq n} \\left[ w(n, m) P(m, \\tau) - w(m, n) P(n, \\tau) \\right] \\] <p>\u8fd9\u5c31\u662f\u4e3b\u65b9\u7a0b\u7684\u589e\u76ca-\u635f\u5931(Gain-Loss)\u5f62\u5f0f\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#32","title":"3.2 \u7269\u7406\u8be0\u91ca","text":"<p>\u8fd9\u4e2a\u5f62\u5f0f\u7684\u65b9\u7a0b\u4e3a\u6211\u4eec\u63cf\u7ed8\u4e86\u4e00\u5e45\u7269\u7406\u56fe\u666f,\u5373\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\u53d8\u5316\u662f\u7531\u6d41\u5165\u548c\u6d41\u51fa\u7684\"\u6982\u7387\u6d41\"\u51b3\u5b9a\u7684\u3002</p> <p></p> <p>\u589e\u76ca\u9879(Gain Term): \\(w(n,m)P(m,\\tau)\\)</p> <ul> <li> <p>\u8fd9\u4e2a\u9879\u4ee3\u8868\u4ece\u72b6\u6001 \\(m\\) \u6d41\u5165\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\u6d41\u3002</p> </li> <li> <p>\\(P(m,\\tau)\\) \u662f\u7cfb\u7edf\u5728 \\(\\tau\\) \u65f6\u523b\u5904\u4e8e\u72b6\u6001 \\(m\\) \u7684\u6982\u7387\u3002</p> </li> <li> <p>\\(w(n,m)\\) \u662f\u4ece \\(m\\) \u8f6c\u79fb\u5230 \\(n\\) \u7684\u901f\u7387\u3002</p> </li> <li> <p>\u4e24\u8005\u7684\u4e58\u79ef \\(w(n,m)P(m,\\tau)\\) \u5c31\u662f\u5355\u4f4d\u65f6\u95f4\u5185,\u7531\u4e8e\u4ece\u72b6\u6001 \\(m\\) \u7684\u8df3\u8f6c\u800c\u4f7f\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\u589e\u52a0\u7684\u91cf\u3002</p> </li> <li> <p>\u603b\u7684\u589e\u76ca\u662f\u628a\u6240\u6709\u5176\u4ed6\u72b6\u6001 \\(m\\) \u7684\u8d21\u732e\u52a0\u8d77\u6765:\\(\\sum_{m \\neq n} w(n,m) P(m,\\tau)\\)\u3002</p> </li> </ul> <p>\u635f\u5931\u9879(Loss Term): \\(-w(m,n)P(n,\\tau)\\)</p> <ul> <li>\u8fd9\u4e2a\u9879\u4ee3\u8868\u4ece\u72b6\u6001 \\(n\\) \u6d41\u51fa\u5230\u72b6\u6001 \\(m\\) \u7684\u6982\u7387\u6d41\u3002</li> <li>\\(P(n,\\tau)\\) \u662f\u7cfb\u7edf\u5728 \\(\\tau\\) \u65f6\u523b\u5904\u4e8e\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\u3002</li> <li>\\(w(m,n)\\) \u662f\u4ece \\(n\\) \u8f6c\u79fb\u5230 \\(m\\) \u7684\u901f\u7387\u3002</li> <li>\u4e24\u8005\u7684\u4e58\u79ef \\(w(m,n)P(n,\\tau)\\) \u5c31\u662f\u5355\u4f4d\u65f6\u95f4\u5185,\u7531\u4e8e\u5411\u72b6\u6001 \\(m\\) \u7684\u8df3\u8f6c\u800c\u4f7f\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\u51cf\u5c11\u7684\u91cf\u3002</li> <li>\u603b\u7684\u635f\u5931\u662f\u628a\u6240\u6709\u53ef\u80fd\u7684\u53bb\u5411 \\(m\\) \u7684\u8d21\u732e\u52a0\u8d77\u6765:\\(\\sum_{m \\neq n} w(m,n) P(n,\\tau)\\)\u3002</li> </ul> <p>\u56e0\u6b64,\u589e\u76ca-\u635f\u5931\u65b9\u7a0b\u7684\u7269\u7406\u610f\u4e49\u662f:\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\u7684\u51c0\u53d8\u5316\u7387 = (\u6240\u6709\u6d41\u5165\u72b6\u6001 \\(n\\) \u7684\u603b\u6982\u7387\u6d41\u901f\u7387) - (\u6240\u6709\u4ece\u72b6\u6001 \\(n\\) \u6d41\u51fa\u7684\u603b\u6982\u7387\u6d41\u901f\u7387)\u3002</p> <p>\u8fd9\u79cd\u8868\u8ff0\u65b9\u5f0f\u63ed\u793a\u4e86\u4e3b\u65b9\u7a0b\u7684\u672c\u8d28\u3002\u5728\u7269\u7406\u5b66\u4e2d,\u63cf\u8ff0\u5b88\u6052\u91cf\u8f93\u8fd0\u7684\u65b9\u7a0b\u88ab\u79f0\u4e3a\u8fde\u7eed\u6027\u65b9\u7a0b\u3002\u4f8b\u5982,\u7535\u8377\u5b88\u6052\u65b9\u7a0b \\(\\partial\\rho/\\partial t + \\nabla \\cdot J = 0\\) \u8868\u660e,\u4e00\u4e2a\u4f53\u79ef\u5185\u7535\u8377\u5bc6\u5ea6\u7684\u53d8\u5316\u7387\u7b49\u4e8e\u901a\u8fc7\u5176\u8fb9\u754c\u7684\u51c0\u7535\u6d41\u901a\u91cf\u3002\u6211\u4eec\u8fd9\u91cc\u7684\u589e\u76ca-\u635f\u5931\u65b9\u7a0b\u6b63\u662f\u6982\u7387\u5728\u79bb\u6563\u72b6\u6001\u7a7a\u95f4\u4e2d\u7684\u8fde\u7eed\u6027\u65b9\u7a0b\u3002</p> <p>\\(P(n,\\tau)\\) \u76f8\u5f53\u4e8e\u5728\"\u4f4d\u7f6e\" \\(n\\) \u7684\"\u6982\u7387\u5bc6\u5ea6\",\\(\\partial_\\tau P(n,\\tau)\\) \u662f\u8fd9\u4e2a\u5bc6\u5ea6\u7684\u53d8\u5316\u7387,\u800c\u53f3\u8fb9\u7684\u9879 \\(\\sum_{m \\neq n}[J_{n \\leftarrow m} - J_{m \\leftarrow n}]\\)(\u5176\u4e2d\u6982\u7387\u6d41 \\(J_{n \\leftarrow m} = w(n,m)P(m,\\tau)\\))\u5219\u4ee3\u8868\u4e86\u6d41\u5165\"\u4f4d\u7f6e\" \\(n\\) \u7684\u51c0\"\u6982\u7387\u6d41\"\u3002\u901a\u8fc7\u8fd9\u79cd\u7c7b\u6bd4,\u6211\u4eec\u5c06\u4e3b\u65b9\u7a0b\u4ece\u4e00\u4e2a\u666e\u901a\u7684\u5e38\u5fae\u5206\u65b9\u7a0b,\u63d0\u5347\u5230\u4e86\u4e00\u4e2a\u63cf\u8ff0\u57fa\u672c\u5b88\u6052\u5b9a\u5f8b\u7684\u8f93\u8fd0\u65b9\u7a0b\u7684\u9ad8\u5ea6,\u5c06\u5b83\u4e0e\u7269\u7406\u5b66\u4e2d\u5176\u4ed6\u5e7f\u6cdb\u7684\u73b0\u8c61\u8054\u7cfb\u8d77\u6765\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#4-","title":"4. \u6848\u4f8b\u7814\u7a76:\u7ebf\u6027\u51fa\u751f-\u6b7b\u4ea1\u8fc7\u7a0b","text":"<p>\u73b0\u5728,\u6211\u4eec\u5c06\u5e94\u7528\u4e3b\u65b9\u7a0b\u548cQ\u77e9\u9635\u7684\u6846\u67b6\u6765\u5206\u6790\u4e00\u4e2a\u5728\u79cd\u7fa4\u52a8\u529b\u5b66\u3001\u5316\u5b66\u53cd\u5e94\u548c\u6392\u961f\u8bba\u4e2d\u90fd\u975e\u5e38\u91cd\u8981\u7684\u6a21\u578b:\u7ebf\u6027\u51fa\u751f-\u6b7b\u4ea1\u8fc7\u7a0b\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#41","title":"4.1 \u5b9a\u4e49\u7cfb\u7edf","text":"<p>\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u7531\u8bb8\u591a\u76f8\u540c\u4e2a\u4f53(\u4f8b\u5982\u5206\u5b50\u3001\u7ec6\u80de\u6216\u751f\u7269)\u7ec4\u6210\u7684\u79cd\u7fa4,\u5176\u6570\u91cf\u4e3a \\(n\\)\u3002\u8fd9\u4e2a\u7cfb\u7edf\u53ea\u5141\u8bb8\u53d1\u751f\u4e24\u79cd\u7c7b\u578b\u7684\u968f\u673a\u4e8b\u4ef6:</p> <ul> <li> <p>\u51fa\u751f(Birth): \u67d0\u4e2a\u4e2a\u4f53\u4ee5\u901f\u7387 \\(\\mu\\) \u590d\u5236\u81ea\u8eab,\u5bfc\u81f4\u79cd\u7fa4\u6570\u91cf\u589e\u52a01\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u8868\u793a\u4e3a \\(A \\xrightarrow{\\mu} 2A\\)\u3002\u5982\u679c\u79cd\u7fa4\u4e2d\u6709 \\(n\\) \u4e2a\u4e2a\u4f53,\u90a3\u4e48\u603b\u7684\u51fa\u751f\u901f\u7387\u4e0e \\(n\\) \u6210\u6b63\u6bd4\u3002\u56e0\u6b64,\u4ece\u72b6\u6001 \\(n\\) \u8f6c\u79fb\u5230 \\(n+1\\) \u7684\u901f\u7387\u4e3a \\(w(n+1,n) = \\mu n\\)\u3002</p> </li> <li> <p>\u6b7b\u4ea1(Death): \u67d0\u4e2a\u4e2a\u4f53\u4ee5\u901f\u7387 \\(\\lambda\\) \u4ece\u7cfb\u7edf\u4e2d\u6d88\u5931\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u8868\u793a\u4e3a \\(A \\xrightarrow{\\lambda} \\emptyset\\)\u3002\u540c\u6837,\u603b\u7684\u6b7b\u4ea1\u901f\u7387\u4e0e\u79cd\u7fa4\u6570\u91cf \\(n\\) \u6210\u6b63\u6bd4\u3002\u56e0\u6b64,\u4ece\u72b6\u6001 \\(n\\) \u8f6c\u79fb\u5230 \\(n-1\\) \u7684\u901f\u7387\u4e3a \\(w(n-1,n) = \\lambda n\\)\u3002</p> </li> </ul> <p>\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d,\u72b6\u6001 \\(n=0\\) \u662f\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u7684\u72b6\u6001\u3002\u5f53\u79cd\u7fa4\u6570\u91cf\u4e3a\u96f6\u65f6,\u6ca1\u6709\u4e2a\u4f53\u53ef\u4ee5\u8fdb\u884c\u51fa\u751f\u6216\u6b7b\u4ea1,\u56e0\u6b64\u7cfb\u7edf\u7684\u603b\u51fa\u751f\u548c\u6b7b\u4ea1\u901f\u7387\u90fd\u4e3a\u96f6\u3002\u8fd9\u610f\u5473\u7740,\u4e00\u65e6\u7cfb\u7edf\u8fdb\u5165 \\(n=0\\) \u7684\u72b6\u6001,\u5b83\u5c06\u6c38\u8fdc\u505c\u7559\u5728\u90a3\u91cc\u3002\u8fd9\u79cd\u72b6\u6001\u88ab\u79f0\u4e3a\u5438\u6536\u6001(absorbing state)\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#42-q","title":"4.2 \u6784\u5efa\u51fa\u751f-\u6b7b\u4ea1\u8fc7\u7a0b\u7684Q\u77e9\u9635","text":"<p>\u73b0\u5728,\u6211\u4eec\u6839\u636e\u4e0a\u8ff0\u89c4\u5219,\u4e00\u6b65\u6b65\u5730\u6784\u5efa\u8fd9\u4e2a\u8fc7\u7a0b\u7684Q\u77e9\u9635\u3002\u77e9\u9635\u7684\u884c\u548c\u5217\u90fd\u7531\u79cd\u7fa4\u6570\u91cf \\(n=0,1,2,\\ldots\\) \u6765\u7d22\u5f15\u3002</p> <p>\u975e\u5bf9\u89d2\u5143\u7d20:</p> <ul> <li>\u5bf9\u4e8e\u4ece \\(n\\) \u5230 \\(n+1\\) \u7684\u8f6c\u79fb(\u51fa\u751f),\u6211\u4eec\u6709 \\(Q_{n+1,n} = w(n+1,n) = \\mu n\\)\u3002\u8fd9\u4e9b\u5143\u7d20\u4f4d\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u7684\u4e0a\u65b9(\u4e0a\u5bf9\u89d2\u7ebf)\u3002</li> <li>\u5bf9\u4e8e\u4ece \\(n\\) \u5230 \\(n-1\\) \u7684\u8f6c\u79fb(\u6b7b\u4ea1),\u6211\u4eec\u6709 \\(Q_{n-1,n} = w(n-1,n) = \\lambda n\\)\u3002\u8fd9\u4e9b\u5143\u7d20\u4f4d\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u7684\u4e0b\u65b9(\u4e0b\u5bf9\u89d2\u7ebf)\u3002</li> <li>\u7531\u4e8e\u6bcf\u6b21\u53ea\u80fd\u51fa\u751f\u6216\u6b7b\u4ea1\u4e00\u4e2a\u4e2a\u4f53,\u6240\u4ee5\u4e0d\u5b58\u5728\u8df3\u8dc3\u8d85\u8fc7\u4e00\u4e2a\u5355\u4f4d\u7684\u8f6c\u79fb,\u4f8b\u5982\u4ece \\(n\\) \u5230 \\(n+2\\)\u3002\u56e0\u6b64,\u6240\u6709\u5176\u4ed6\u7684\u975e\u5bf9\u89d2\u5143\u7d20\u90fd\u4e3a\u96f6\u3002</li> </ul> <p>\u5bf9\u89d2\u5143\u7d20:</p> <ul> <li> <p>\u5bf9\u89d2\u5143\u7d20 \\(Q_{n,n}\\) \u662f\u8d1f\u7684\u603b\u79bb\u5f00\u901f\u7387\u3002\u4ece\u72b6\u6001 \\(n\\) \u51fa\u53d1,\u7cfb\u7edf\u53ea\u80fd\u8f6c\u79fb\u5230 \\(n+1\\) \u6216 \\(n-1\\)\u3002\u56e0\u6b64,\u603b\u79bb\u5f00\u901f\u7387\u662f\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\u7684\u901f\u7387\u4e4b\u548c:\\(w(n) = w(n+1,n) + w(n-1,n) = \\mu n + \\lambda n = (\\mu + \\lambda)n\\)\u3002</p> </li> <li> <p>\u6240\u4ee5,\u5bf9\u89d2\u5143\u7d20\u4e3a \\(Q_{n,n} = -(\\mu + \\lambda)n\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u5438\u6536\u6001 \\(n=0\\),\u79bb\u5f00\u901f\u7387\u4e3a\u96f6,\u6240\u4ee5 \\(Q_{0,0} = 0\\)\u3002</p> </li> </ul> <p></p> <p>\u7efc\u4e0a\u6240\u8ff0,\u7ebf\u6027\u51fa\u751f-\u6b7b\u4ea1\u8fc7\u7a0b\u7684Q\u77e9\u9635\u5177\u6709\u4e00\u4e2a\u975e\u5e38\u6e05\u6670\u7684\u4e09\u5bf9\u89d2\u7ed3\u6784:</p> \\[ Q = \\begin{pmatrix} 0 &amp; 0 &amp; 0 &amp; 0 &amp; \\cdots \\\\ \\lambda &amp; -(\\mu+\\lambda) &amp; \\mu &amp; 0 &amp; \\cdots \\\\ 0 &amp; 2\\lambda &amp; -2(\\mu+\\lambda) &amp; 2\\mu &amp; \\cdots \\\\ 0 &amp; 0 &amp; 3\\lambda &amp; -3(\\mu+\\lambda) &amp; \\cdots \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots \\end{pmatrix} \\] <p>\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u539f\u7406:Q\u77e9\u9635\u7684\u7ed3\u6784\u662f\u7cfb\u7edf\u5fae\u89c2\u52a8\u529b\u5b66\u89c4\u5219\u7684\u76f4\u63a5\"\u6307\u7eb9\"\u3002\u51fa\u751f-\u6b7b\u4ea1\u8fc7\u7a0b\u53ea\u5141\u8bb8\u79cd\u7fa4\u6570\u91cf\u53d8\u5316 \\(\\pm 1\\),\u8fd9\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\u6784\u6210\u4e86\"\u6700\u8fd1\u90bb\"\u7684\u8df3\u8f6c\u3002\u5f53\u6211\u4eec\u628a\u8fd9\u4e9b\u89c4\u5219\u7ffb\u8bd1\u6210Q\u77e9\u9635\u65f6,\u6211\u4eec\u81ea\u7136\u5730\u5f97\u5230\u4e86\u4e00\u4e2a\u53ea\u6709\u4e3b\u5bf9\u89d2\u7ebf\u548c\u7d27\u90bb\u7684\u4e0a\u4e0b\u4e24\u6761\u5bf9\u89d2\u7ebf\u975e\u96f6\u7684\u7a00\u758f\u77e9\u9635\u3002\u8fd9\u662f\u4e00\u4e2a\u666e\u904d\u7684\u89c4\u5f8b:Q\u77e9\u9635\u7684\u7a00\u758f\u6a21\u5f0f\u76f4\u63a5\u53cd\u6620\u4e86\u72b6\u6001\u7a7a\u95f4\u56fe\u7684\u8fde\u901a\u6027\u3002\u4e00\u4e2a\u4e09\u5bf9\u89d2\u77e9\u9635\u610f\u5473\u7740\u72b6\u6001\u6784\u6210\u4e86\u4e00\u4e2a\u4e00\u7ef4\u94fe\u3002\u76f8\u53cd,\u5982\u679c\u4e00\u4e2aQ\u77e9\u9635\u662f\u7a20\u5bc6\u7684,\u5219\u610f\u5473\u7740\u4efb\u4f55\u72b6\u6001\u90fd\u53ef\u80fd\u76f4\u63a5\u8f6c\u79fb\u5230\u4efb\u4f55\u5176\u4ed6\u72b6\u6001\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#43-python","title":"4.3 Python\u6a21\u62df\u4e0e\u53ef\u89c6\u5316:\u4ece\u9759\u6001\u7ed3\u6784\u5230\u52a8\u6001\u6f14\u5316","text":"<p>\u4e3a\u4e86\u66f4\u76f4\u89c2\u5730\u7406\u89e3Q\u77e9\u9635\u7684\u7ed3\u6784,\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Python\u4ee3\u7801\u6765\u751f\u6210\u5e76\u53ef\u89c6\u5316\u5b83\u3002\u8fd9\u4e0e\u6559\u6388\u5728\u9ed1\u677f\u4e0a\u7ed8\u5236\u7684\u793a\u610f\u56fe\u662f\u4e00\u81f4\u7684\u3002</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndef create_birth_death_q_matrix(N, mu, lam):\n    \"\"\"\n    Construct the Q matrix for a linear birth-death process.\n\n    Parameters:\n    N (int): Size of the state space (from 0 to N-1). This is a truncation, as theoretically the state space is infinite.\n    mu (float): Birth rate per individual.\n    lam (float): Death rate per individual (lambda is a keyword in python, so we use lam).\n\n    Returns:\n    numpy.ndarray: Q matrix of size (N, N).\n    \"\"\"\n    # Initialize an N x N zero matrix\n    Q = np.zeros((N, N))\n\n    # Fill non-diagonal elements\n    for n in range(1, N):\n        # Death process: n -&gt; n-1\n        # Q_{n-1, n} = w(n-1, n) = lambda * n\n        Q[n-1, n] = lam * n\n        # Birth process: n-1 -&gt; n\n        # Q_{n, n-1} = w(n, n-1) = mu * (n-1)\n        Q[n, n-1] = mu * (n-1)\n\n    # Fill diagonal elements\n    # Q_{n,n} = - (exit rate) = - (birth rate + death rate)\n    for n in range(N):\n        # Exit rate is the negative sum of all non-diagonal elements in this column\n        # This is also equivalent to - (mu * n + lam * n)\n        # Note: The row sum of Q matrix is 0, but here we follow the professor's board notation,\n        # where transition rates are placed in Q_{destination, source}, so the column sum is 0.\n        # If it's the standard mathematical notation Q_{i,j} representing transition from j-&gt;i, then the column sum is 0.\n        # If it's the common notation in probability theory Q_{i,j} representing transition from i-&gt;j, then the row sum is 0.\n        # The implementation here follows Q[row, col] = Q_{row, col}, i.e., transition from col to row, so the column sum is 0.\n        # Q_{n,n} = - sum_{m!=n} Q_{m,n}\n        Q[n, n] = -np.sum(Q[:, n])\n\n    return Q\n\n# --- Parameter settings ---\nN_states = 15  # State space size (0, 1,..., 14)\nmu = 1.0       # Birth rate\nlambda_rate = 1.2 # Death rate\n\n# Create Q matrix\nQ_matrix = create_birth_death_q_matrix(N_states, mu, lambda_rate)\n\n# --- Visualization ---\nplt.figure(figsize=(10, 8))\nsns.heatmap(Q_matrix, annot=True, fmt=\".1f\", cmap=\"vlag\", linewidths=.5, cbar=True)\nplt.title(f'Q-Matrix for Linear Birth-Death Process (N={N_states}, \u03bc={mu}, \u03bb={lambda_rate})', fontsize=16)\nplt.xlabel('Source State (m)', fontsize=12)\nplt.ylabel('Destination State (n)', fontsize=12)\nplt.gca().xaxis.tick_top()\nplt.gca().xaxis.set_label_position('top')\nplt.show()\n\nprint(\"Q Matrix (truncated):\")\nprint(np.round(Q_matrix, 2))\n</code></pre> <p></p> <p>\u4e3b\u5bf9\u89d2\u7ebf(\u84dd\u8272):\u8fd9\u4e9b\u662f\u8d1f\u7684\u79bb\u5f00\u901f\u7387 \\(Q_{n,n} = -(\\mu + \\lambda)n\\),\u5176\u7edd\u5bf9\u503c\u968f \\(n\\) \u7ebf\u6027\u589e\u52a0\u3002\u4e0a\u5bf9\u89d2\u7ebf(\u7ea2\u8272):\u8fd9\u4e9b\u662f\u51fa\u751f\u7387 \\(Q_{n+1,n} = \\mu n\\),\u4e5f\u968f \\(n\\) \u7ebf\u6027\u589e\u52a0\u3002\u4e0b\u5bf9\u89d2\u7ebf(\u7ea2\u8272):\u8fd9\u4e9b\u662f\u6b7b\u4ea1\u7387 \\(Q_{n-1,n} = \\lambda n\\),\u540c\u6837\u968f \\(n\\) \u7ebf\u6027\u589e\u52a0\u3002\u5176\u4ed6\u533a\u57df:\u5168\u90e8\u4e3a\u96f6,\u8868\u793a\u4e0d\u5b58\u5728\"\u957f\u8ddd\u79bb\"\u7684\u8df3\u8f6c\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#44","title":"4.4 \u6982\u7387\u4e0e\u76f8\u7a7a\u95f4\u6f14\u5316","text":"<p>\u6709\u4e86Q\u77e9\u9635\u8fd9\u4e2a\"\u5f15\u64ce\",\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u6570\u503c\u6c42\u89e3\u4e3b\u65b9\u7a0b \\(\\partial_\\tau \\vec{P} = Q\\vec{P}\\),\u89c2\u5bdf\u6982\u7387\u5206\u5e03\u5982\u4f55\u4ece\u4e00\u4e2a\u786e\u5b9a\u7684\u521d\u59cb\u72b6\u6001\u6f14\u5316\u5230\u7a33\u6001\u5206\u5e03\u3002\u7406\u8bba\u544a\u8bc9\u6211\u4eec\u7a33\u6001\u662f\u4ec0\u4e48,\u4f46\u6ca1\u6709\u8bf4\u660e\u7cfb\u7edf\u5982\u4f55\u5230\u8fbe\u7a33\u6001,\u800c\u6f14\u5316\u8fc7\u7a0b\u4e2d\u7684\u77ac\u6001\u884c\u4e3a\u540c\u6837\u91cd\u8981,\u5b83\u53cd\u6620\u4e86\u7cfb\u7edf\u7684\u677e\u5f1b\u52a8\u529b\u5b66,\u52a8\u753b\u80fd\u76f4\u89c2\u5c55\u793a\"\u6982\u7387\u6d41\"\u8fd9\u4e00\u62bd\u8c61\u6982\u5ff5\u7684\u5177\u4f53\u8868\u73b0\u3002 \u73b0\u5728\u6211\u4eec\u6c42\u89e3\u4e3b\u65b9\u7a0b,\u89c2\u5bdf\u6982\u7387\u5206\u5e03\u5982\u4f55\u968f\u65f6\u95f4\u52a8\u6001\u6f14\u5316:</p> <pre><code>\"\"\"\nProbability Evolution and Phase Space Animation Demonstration\n\n\"\"\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\nfrom scipy.integrate import odeint\n\n# Set English font and mathematical formula display\nplt.rcParams['font.sans-serif'] = ['SimHei', 'Microsoft YaHei']\nplt.rcParams['axes.unicode_minus'] = False\nplt.rcParams['mathtext.fontset'] = 'stix'  \n\nclass BirthDeathAnimator:\n    \"\"\"Birth-Death Process Animation Demonstration Class\"\"\"\n\n    def __init__(self, N=15, mu=1.0, lam=1.2):\n        \"\"\"\n        Initialize parameters\n        N: State space size\n        mu: Birth rate\n        lam: Death rate\n        \"\"\"\n        self.N = N\n        self.mu = mu\n        self.lam = lam\n        self.Q = self._create_q_matrix()\n\n        # Animation time settings\n        self.t_max = 10\n        self.n_frames = 150\n        self.t_points = np.linspace(0, self.t_max, self.n_frames)\n\n    def _create_q_matrix(self):\n        \"\"\"Create Q matrix for birth-death process\"\"\"\n        Q = np.zeros((self.N, self.N))\n\n        # Fill transition rates\n        for n in range(1, self.N):\n            if n &lt; self.N - 1:\n                Q[n+1, n] = self.mu * n  # Birth: n -&gt; n+1\n            Q[n-1, n] = self.lam * n     # Death: n -&gt; n-1\n\n        # Fill diagonal elements (negative exit rates)\n        for n in range(self.N):\n            Q[n, n] = -np.sum(Q[:, n])\n\n        return Q\n\n    def solve_master_equation(self, initial_state):\n        \"\"\"Solve master equation dP/dt = Q\u00b7P\"\"\"\n        def master_eq(P, t):\n            return self.Q @ P\n\n        # Initial condition: all probability concentrated at initial_state\n        P0 = np.zeros(self.N)\n        P0[initial_state] = 1.0\n\n        # Numerically solve ODE\n        P_t = odeint(master_eq, P0, self.t_points)\n        return P_t\n\n    def create_probability_evolution_animation(self, initial_state=5, save_path=None):\n        \"\"\"\n        Create probability evolution animation\n        Display: 1) Probability distribution bar chart 2) Time series of key states\n        \"\"\"\n        P_t = self.solve_master_equation(initial_state)\n\n        # Create figure and subplots\n        fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(10, 8))\n        fig.suptitle(f'Probability Distribution Evolution Animation\\n' + \n                    f'Birth-Death Process: \u03bc={self.mu}, \u03bb={self.lam}, Initial State={initial_state}', \n                    fontsize=14, fontweight='bold')\n\n        # === Subplot 1: Probability distribution bar chart ===\n        states = np.arange(self.N)\n        bars = ax1.bar(states, P_t[0], alpha=0.8, color='skyblue', edgecolor='navy')\n        ax1.set_xlim(-0.5, self.N-0.5)\n        ax1.set_ylim(0, 1.0)\n        ax1.set_xlabel('State n')\n        ax1.set_ylabel('Probability P(n,t)')\n        ax1.set_title('Instantaneous Probability Distribution')\n        ax1.grid(True, alpha=0.3)\n\n        # Statistics text (avoid overlap)\n        stats_text = ax1.text(0.7, 0.95, '', transform=ax1.transAxes, \n                             verticalalignment='top', fontsize=10,\n                             bbox=dict(boxstyle=\"round,pad=0.3\", facecolor=\"lightblue\", alpha=0.8))\n\n        # === Subplot 2: Time evolution of key states ===\n        key_states = [0, max(1, initial_state-2), initial_state, \n                     min(initial_state+2, self.N-1), min(initial_state+4, self.N-1)]\n        colors = ['red', 'orange', 'blue', 'green', 'purple']\n        lines = []\n\n        for state, color in zip(key_states, colors):\n            line, = ax2.plot([], [], color=color, linewidth=2, \n                           label=f'State {state}', marker='o', markersize=2)\n            lines.append((line, state))\n\n        ax2.set_xlim(0, self.t_max)\n        ax2.set_ylim(0, 1.0)\n        ax2.set_xlabel('Time t')\n        ax2.set_ylabel('Probability P(n,t)')\n        ax2.set_title('Key State Probabilities Over Time')\n        ax2.legend(loc='upper right', fontsize=10)\n        ax2.grid(True, alpha=0.3)\n\n        # Time indicator line\n        time_line = ax2.axvline(x=0, color='black', linestyle='--', alpha=0.7)\n\n        def animate(frame):\n            \"\"\"Animation update function\"\"\"\n            current_time = self.t_points[frame]\n            current_prob = P_t[frame]\n\n            # Update bar chart\n            for bar, prob in zip(bars, current_prob):\n                bar.set_height(prob)\n                # Adjust color intensity based on probability\n                intensity = prob / np.max(current_prob) if np.max(current_prob) &gt; 0 else 0\n                bar.set_color(plt.cm.viridis(intensity))\n\n            # Calculate and display statistics\n            mean_state = np.sum(states * current_prob)\n            max_prob_state = states[np.argmax(current_prob)]\n\n            stats_text.set_text(\n                f'Time: {current_time:.2f}\\n'\n                f'Mean State: {mean_state:.2f}\\n'\n                f'Most Probable State: {max_prob_state}'\n            )\n\n            # Update time series\n            for line, state in lines:\n                if frame &gt; 0:\n                    x_data = self.t_points[:frame+1]\n                    y_data = P_t[:frame+1, state]\n                    line.set_data(x_data, y_data)\n\n            # Update time indicator line\n            time_line.set_xdata([current_time, current_time])\n\n            return [*bars, stats_text, *[line for line, _ in lines], time_line]\n\n        # Create animation\n        anim = animation.FuncAnimation(fig, animate, frames=self.n_frames, \n                                     interval=80, blit=False, repeat=True)\n\n        # Save animation\n        if save_path:\n            print(f\"Saving probability evolution animation to {save_path}...\")\n            anim.save(save_path, writer='pillow', fps=12, dpi=100)\n            print(\"Save complete!\")\n\n        plt.tight_layout()\n        plt.show()\n        return anim\n\n    def create_phase_space_animation(self, initial_state=5, save_path=None):\n        \"\"\"\n        Create phase space evolution animation\n        Display comparison of statistical moment evolution trajectories for multiple initial states\n        \"\"\"\n        # Calculate evolution for multiple different initial states\n        initial_states = [1, max(2, initial_state-2), initial_state, \n                         min(initial_state+2, self.N-2), min(initial_state+4, self.N-2)]\n        colors = ['red', 'orange', 'blue', 'green', 'purple']\n        all_moments = []\n\n        for init_state in initial_states:\n            P_t = self.solve_master_equation(init_state)\n\n            # Calculate statistical moments\n            states = np.arange(self.N)\n            moments = np.zeros((len(self.t_points), 3))\n\n            for i, prob in enumerate(P_t):\n                # First moment: mean\n                moments[i, 0] = np.sum(states * prob)\n                # Second central moment: variance\n                moments[i, 1] = np.sum((states - moments[i, 0])**2 * prob)\n                # Third normalized moment: skewness (simplified calculation)\n                if moments[i, 1] &gt; 1e-6:  # Avoid division by zero\n                    moments[i, 2] = np.sum((states - moments[i, 0])**3 * prob) / (moments[i, 1]**(1.5))\n                else:\n                    moments[i, 2] = 0\n\n            all_moments.append(moments)\n\n        # Create 3D figure\n        fig = plt.figure(figsize=(12, 8))\n        ax = fig.add_subplot(111, projection='3d')\n\n        # Initialize multiple trajectory lines and current points\n        lines = []\n        points = []\n        for i, (color, init_state) in enumerate(zip(colors, initial_states)):\n            line, = ax.plot([], [], [], color=color, linewidth=2, alpha=0.8, \n                           label=f'Initial State {init_state}')\n            point, = ax.plot([], [], [], 'o', color=color, markersize=6)\n            lines.append(line)\n            points.append(point)\n\n        # Set axes\n        ax.set_xlabel('Mean &lt;n&gt;')\n        ax.set_ylabel('Variance Var(n)')\n        ax.set_zlabel('Skewness Skew(n)')\n        ax.set_title(f'Statistical Moment Evolution Comparison for Multiple Initial States\\n\u03bc={self.mu}, \u03bb={self.lam}')\n        ax.legend()\n\n        # Dynamically set axis ranges (based on all trajectories)\n        all_moments_combined = np.concatenate(all_moments, axis=0)\n        margin = 0.1\n        ax.set_xlim(np.min(all_moments_combined[:, 0])*(1-margin), \n                   np.max(all_moments_combined[:, 0])*(1+margin))\n        ax.set_ylim(np.min(all_moments_combined[:, 1])*(1-margin), \n                   np.max(all_moments_combined[:, 1])*(1+margin))\n        z_range = np.max(all_moments_combined[:, 2]) - np.min(all_moments_combined[:, 2])\n        ax.set_zlim(np.min(all_moments_combined[:, 2])-z_range*margin, \n                   np.max(all_moments_combined[:, 2])+z_range*margin)\n\n        # Information text (avoid obstruction)\n        time_text = ax.text2D(0.02, 0.98, '', transform=ax.transAxes, fontsize=11,\n                             verticalalignment='top',\n                             bbox=dict(boxstyle=\"round,pad=0.3\", facecolor=\"lightgreen\", alpha=0.8))\n\n        def animate_phase(frame):\n            \"\"\"Phase space animation update function\"\"\"\n            current_time = self.t_points[frame]\n\n            # Update all trajectory lines and current points\n            for i, (line, point, moments) in enumerate(zip(lines, points, all_moments)):\n                if frame &gt; 0:\n                    line.set_data_3d(moments[:frame+1, 0], moments[:frame+1, 1], moments[:frame+1, 2])\n                    point.set_data_3d([moments[frame, 0]], [moments[frame, 1]], [moments[frame, 2]])\n\n            # Update time information (display information from main trajectory)\n            main_moments = all_moments[2]  # Use middle initial state (index 2) as main display\n            time_text.set_text(\n                f'Time: {current_time:.2f}\\n'\n                f'Main Trajectory (Initial={initial_state}):\\n'\n                f'  Mean: {main_moments[frame, 0]:.2f}\\n'\n                f'  Variance: {main_moments[frame, 1]:.2f}\\n'\n                f'  Skewness: {main_moments[frame, 2]:.2f}'\n            )\n\n            return [*lines, *points, time_text]\n\n        # Create animation\n        anim = animation.FuncAnimation(fig, animate_phase, frames=self.n_frames, \n                                     interval=80, blit=False, repeat=True)\n\n        # Save animation\n        if save_path:\n            print(f\"Saving phase space animation to {save_path}...\")\n            anim.save(save_path, writer='pillow', fps=12, dpi=100)\n            print(\"Save complete!\")\n\n        plt.show()\n        return anim\n\n# Demonstration usage\nif __name__ == \"__main__\":\n    print(\"=== Section 4.3 Probability Evolution and Phase Space Animation Demonstration ===\\n\")\n\n    # Create animation demonstrator\n    animator = BirthDeathAnimator(N=15, mu=1.0, lam=1.2)\n\n    print(\"1. Generating probability evolution animation...\")\n    anim1 = animator.create_probability_evolution_animation(\n        initial_state=5, \n        save_path=\"probability_evolution.gif\"\n    )\n\n    print(\"\\n2. Generating phase space evolution animation...\")\n    anim2 = animator.create_phase_space_animation(\n        initial_state=5, \n        save_path=\"phase_space_evolution.gif\"\n    )\n\n    print(\"\\nAnimation generation complete!\")\n</code></pre> <p></p> <p>\u4e0a\u56fe\u663e\u793a\u6bcf\u4e2a\u65f6\u523b\u6240\u6709\u72b6\u6001\u7684\u6982\u7387 \\(P(n,t)\\),\u989c\u8272\u6df1\u5ea6\u52a8\u6001\u53cd\u6620\u6982\u7387\u5927\u5c0f(\u6df1\u8272=\u9ad8\u6982\u7387),\u5c55\u793a\u6982\u7387\u5982\u4f55\u4ece\u521d\u59cb\u7684\"\u5c16\u5cf0\"\u9010\u6e10\"\u6269\u6563\"\u3002\u4e0b\u56fe\u8ffd\u8e2a5\u4e2a\u4ee3\u8868\u6027\u72b6\u6001\u7684\u6982\u7387\u968f\u65f6\u95f4\u53d8\u5316:\u72b6\u60010\u662f\u5438\u6536\u6001,\u6982\u7387\u5355\u8c03\u589e\u52a0;\u72b6\u60013\u4f4d\u4e8e\u521d\u59cb\u72b6\u6001\u4e0b\u65b9,\u5c55\u793a\u5411\u4f4e\u72b6\u6001\u7684\u6982\u7387\u8f6c\u79fb;\u72b6\u60015\u662f\u521d\u59cb\u72b6\u6001,\u6982\u7387\u5148\u51cf\u5c11\u540e\u8d8b\u4e8e\u7a33\u6001\u503c;\u72b6\u60017\u4f4d\u4e8e\u521d\u59cb\u72b6\u6001\u4e0a\u65b9,\u5c55\u793a\u6982\u7387\u6269\u6563\u6548\u5e94;\u72b6\u60019\u662f\u66f4\u9ad8\u72b6\u6001,\u5c55\u793a\u9ad8\u72b6\u6001\u533a\u57df\u7684\u884c\u4e3a\u3002</p> <p></p> <p>\u53ef\u4ee5\u6e05\u6670\u770b\u5230\u6982\u7387\u4ece\u9ad8\u72b6\u6001\u5411\u4f4e\u72b6\u6001\u7684\u51c0\u6d41\u52a8,\u7cfb\u7edf\u5728(\u5747\u503c\u3001\u65b9\u5dee\u3001\u504f\u5ea6)\u7a7a\u95f4\u4e2d\u7684\u6f14\u5316\u8def\u5f84,\u8f68\u8ff9\u6700\u7ec8\u6536\u655b\u5230\u7a33\u6001\u5bf9\u5e94\u7684\u56fa\u5b9a\u70b9,\u53cd\u6620\u4e86\u7cfb\u7edf\u7684\u677e\u5f1b\u52a8\u529b\u5b66\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#5","title":"5. \u957f\u671f\u52a8\u529b\u5b66\u4e0e\u4e00\u822c\u6027\u8d28","text":"<p>\u6784\u5efa\u4e86\u4e3b\u65b9\u7a0b\u548cQ\u77e9\u9635\u4e4b\u540e,\u4e00\u4e2a\u81ea\u7136\u800c\u7136\u7684\u95ee\u9898\u662f:\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb,\u7cfb\u7edf\u6700\u7ec8\u4f1a\u6f14\u5316\u5230\u4ec0\u4e48\u72b6\u6001?\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u7a33\u5b9a\u7684\u5e73\u8861\u6001?</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#51","title":"5.1 \u8fbe\u5230\u5e73\u8861:\u7a33\u6001","text":"<p>\u5f53\u7cfb\u7edf\u8fbe\u5230\u7a33\u6001(steady state)\u6216\u5e73\u7a33\u5206\u5e03(stationary distribution)\u65f6,\u5176\u6982\u7387\u5206\u5e03\u5c06\u4e0d\u518d\u968f\u65f6\u95f4\u53d8\u5316\u3002\u6211\u4eec\u7528\u5411\u91cf \\(\\vec{\\pi}\\) \u6765\u8868\u793a\u8fd9\u4e2a\u7a33\u6001\u5206\u5e03\u3002\u4ece\u6570\u5b66\u4e0a\u8bb2,\u8fd9\u610f\u5473\u7740\u6982\u7387\u7684\u65f6\u95f4\u5bfc\u6570\u4e3a\u96f6:</p> \\[ \\partial_\\tau \\vec{P}(\\tau) = 0 \\] <p>\u5c06\u8fd9\u4e2a\u6761\u4ef6\u4ee3\u5165\u4e3b\u65b9\u7a0b \\(\\partial_\\tau \\vec{P} = Q\\vec{P}\\),\u6211\u4eec\u7acb\u523b\u5f97\u5230\u4e86\u5bfb\u627e\u7a33\u6001\u5206\u5e03\u7684\u6838\u5fc3\u65b9\u7a0b:</p> \\[ Q\\vec{\\pi} = 0 \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u7684\u542b\u4e49\u662f:\u7a33\u6001\u5206\u5e03 \\(\\vec{\\pi}\\) \u662fQ\u77e9\u9635\u5bf9\u5e94\u4e8e\u7279\u5f81\u503c\u4e3a0\u7684\u53f3\u7279\u5f81\u5411\u91cf\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6df1\u523b\u7684\u7ed3\u8bba,\u5b83\u5c06\u4e00\u4e2a\u52a8\u529b\u5b66\u95ee\u9898(\u5bfb\u627e\u4e0d\u968f\u65f6\u95f4\u53d8\u5316\u7684\u5206\u5e03)\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u7ebf\u6027\u4ee3\u6570\u95ee\u9898(\u5bfb\u627e\u77e9\u9635\u7684\u96f6\u7a7a\u95f4)\u3002</p> <p>\u540c\u65f6,\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u77e5\u9053,\u7531\u4e8e\u6982\u7387\u5b88\u6052,\\(Q\\) \u7684\u6bcf\u4e00\u5217\u4e4b\u548c\u4e3a\u96f6\u3002\u8fd9\u53ef\u4ee5\u7528\u5411\u91cf\u5f62\u5f0f\u5199\u6210 \\((1,1,\\ldots,1)Q = 0\\),\u5176\u4e2d \\((1,1,\\ldots,1)\\) \u662f\u4e00\u4e2a\u51681\u7684\u884c\u5411\u91cf\u3002\u8fd9\u610f\u5473\u7740,\u51681\u5411\u91cf\u662f \\(Q\\) \u5bf9\u5e94\u4e8e\u7279\u5f81\u503c\u4e3a0\u7684\u5de6\u7279\u5f81\u5411\u91cf\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#52","title":"5.2 \u72b6\u6001\u7a7a\u95f4\u7684\u7ed3\u6784","text":"<p>\u4e00\u4e2a\u7cfb\u7edf\u7684\u957f\u671f\u884c\u4e3a\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u8f6c\u79fb\u901f\u7387,\u8fd8\u6df1\u523b\u5730\u4f9d\u8d56\u4e8e\u5176\u72b6\u6001\u7a7a\u95f4\u7684\"\u62d3\u6251\u7ed3\u6784\",\u5373\u72b6\u6001\u4e4b\u95f4\u662f\u5982\u4f55\u8fde\u63a5\u7684\u3002</p> <ul> <li>\u5438\u6536\u6001(Absorbing States): \u5982\u524d\u6240\u8ff0,\u4e00\u4e2a\u72b6\u6001 \\(i\\) \u5982\u679c\u4e00\u65e6\u8fdb\u5165\u5c31\u65e0\u6cd5\u79bb\u5f00,\u5219\u79f0\u4e3a\u5438\u6536\u6001\u3002\u5728 \\(Q\\) \u77e9\u9635(\u91c7\u7528 col\u2192row \u8bb0\u6cd5)\u4e2d,\u8fd9\u610f\u5473\u7740\u4ece\u72b6\u6001 \\(i\\) \u7684\u603b\u79bb\u5f00\u901f\u7387\u4e3a\u96f6,\u5373 \\(Q_{ii} = 0\\)\u3002\u7531\u4e8e\u5217\u548c\u4e3a\u96f6,\u5e76\u4e14\u5438\u6536\u6001\u65e0\u51fa\u8fb9,\u8fd9\u4e5f\u610f\u5473\u7740\u8be5\u5217\u9664\u5bf9\u89d2\u5143\u5916\u5176\u4f59\u5143\u7d20\u5168\u4e3a\u96f6,\u5373\u5bf9\u6240\u6709 \\(j\\ne i\\) \u6709 \\(Q_{ji}=0\\)\u3002\u6211\u4eec\u4f8b\u5b50\u4e2d\u7684 \\(n=0\\) \u72b6\u6001\u5c31\u662f\u4e00\u4e2a\u5438\u6536\u6001\u3002 </li> <li> <p>\u6682\u6001(Transient States): \u4e00\u4e2a\u72b6\u6001\u5982\u679c\u7cfb\u7edf\u53ef\u4ee5\u79bb\u5f00\u5b83,\u5e76\u4e14\u5b58\u5728\u4e00\u4e2a\u975e\u96f6\u7684\u6982\u7387\u6c38\u8fdc\u4e0d\u518d\u8fd4\u56de,\u90a3\u4e48\u8fd9\u4e2a\u72b6\u6001\u5c31\u662f\u6682\u6001\u3002\u5728\u6709\u5438\u6536\u6001\u7684\u7cfb\u7edf\u4e2d,\u6240\u6709\u975e\u5438\u6536\u6001\u90fd\u662f\u6682\u6001,\u56e0\u4e3a\u7cfb\u7edf\u6700\u7ec8\u4f1a\u88ab\u5438\u6536\u6001\"\u6355\u83b7\"\u3002</p> </li> <li> <p>\u4e0d\u53ef\u7ea6\u6027(Irreducibility): \u5982\u679c\u4e00\u4e2a\u7cfb\u7edf(\u6216\u5176\u72b6\u6001\u7684\u4e00\u4e2a\u5b50\u96c6)\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u72b6\u6001\u90fd\u53ef\u4ee5\u4ece\u4efb\u4f55\u5176\u4ed6\u72b6\u6001\u7ecf\u8fc7\u6709\u9650\u6b65\u8f6c\u79fb\u5230\u8fbe,\u90a3\u4e48\u8fd9\u4e2a\u7cfb\u7edf\u5c31\u662f\u4e0d\u53ef\u7ea6\u7684(irreducible)\u3002\u8fd9\u610f\u5473\u7740\u6574\u4e2a\u72b6\u6001\u7a7a\u95f4\u662f\"\u5b8c\u5168\u8fde\u901a\"\u7684,\u4e0d\u4f1a\u5206\u88c2\u6210\u51e0\u4e2a\u4e92\u4e0d\u901a\u4fe1\u7684\u90e8\u5206 \u3002\u6559\u6388\u5728\u9ed1\u677f\u4e0a\u753b\u7684\u5757\u5bf9\u89d2\u5f62\u5f0f\u7684Q\u77e9\u9635(\u5982\u4e0b\u6240\u793a)\u5c31\u4ee3\u8868\u4e86\u4e00\u4e2a\u53ef\u7ea6\u7684(reducible)\u7cfb\u7edf,\u56e0\u4e3a\u5b83\u5206\u88c2\u6210\u4e86\u4e24\u4e2a\u72ec\u7acb\u7684\u5b50\u7cfb\u7edfA\u548cB,\u5f7c\u6b64\u4e4b\u95f4\u65e0\u6cd5\u901a\u4fe1\u3002</p> </li> </ul> \\[ Q = \\begin{pmatrix} A &amp; 0 \\\\ 0 &amp; B \\end{pmatrix} \\]"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#53-","title":"5.3 \u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406:\u552f\u4e00\u7269\u7406\u73b0\u5b9e\u7684\u4fdd\u8bc1","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u53ef\u7ea6\u7684\u7cfb\u7edf,\u6211\u4eec\u5173\u5fc3\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u7269\u7406\u4e0a\u6709\u610f\u4e49\u7684(\u5373\u6240\u6709\u6982\u7387\u5206\u91cf\u90fd\u4e3a\u6b63)\u7a33\u6001,\u4ee5\u53ca\u8fd9\u4e2a\u7a33\u6001\u662f\u5426\u662f\u552f\u4e00\u7684\u3002\u5f3a\u5927\u7684\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af(Perron-Frobenius)\u5b9a\u7406\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u80af\u5b9a\u7684\u7b54\u6848\u3002</p> <p>\u8fd9\u4e2a\u5b9a\u7406\u662f\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u4e00\u4e2a\u6df1\u523b\u7ed3\u679c,\u5bf9\u4e8e\u5177\u6709\u975e\u8d1f\u975e\u5bf9\u89d2\u5143\u7d20\u7684\u77e9\u9635(\u5982Q\u77e9\u9635\u7684\u53d8\u4f53)\u6709\u8bb8\u591a\u7ed3\u8bba\u3002\u5bf9\u4e8e\u6211\u4eec\u6240\u5173\u5fc3\u7684\u4e0d\u53ef\u7ea6Q\u77e9\u9635,\u8be5\u5b9a\u7406\u6700\u91cd\u8981\u7684\u63a8\u8bba\u53ef\u4ee5\u901a\u4fd7\u5730\u8868\u8ff0\u4e3a:</p> <ol> <li> <p>\u552f\u4e00\u6027\u4fdd\u8bc1: \u7279\u5f81\u503c0\u662f\u5355\u91cd\u6839(simple),\u5373\u5b83\u7684\u4ee3\u6570\u91cd\u6570\u4e3a1\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u5e94\u4e8e\u7279\u5f81\u503c0\u7684\u7279\u5f81\u7a7a\u95f4\u662f\u4e00\u7ef4\u7684\u3002\u56e0\u6b64,\u6ee1\u8db3 \\(Q\\vec{\\pi} = 0\\) \u7684\u89e3 \\(\\vec{\\pi}\\) \u5728\u5f52\u4e00\u5316(\\(\\sum_n \\pi_n = 1\\))\u4e4b\u540e\u662f\u552f\u4e00\u7684\u3002</p> </li> <li> <p>\u7269\u7406\u6027\u4fdd\u8bc1: \u8fd9\u4e2a\u552f\u4e00\u7684\u7a33\u6001\u7279\u5f81\u5411\u91cf \\(\\vec{\\pi}\\) \u7684\u6240\u6709\u5206\u91cf\u90fd\u53ef\u4ee5\u88ab\u9009\u62e9\u4e3a\u4e25\u683c\u6b63\u503c(\\(\\pi_n &gt; 0\\) for all \\(n\\))\u3002\u8fd9\u4fdd\u8bc1\u4e86\u89e3\u662f\u4e00\u4e2a\u7269\u7406\u4e0a\u6709\u610f\u4e49\u7684\u6982\u7387\u5206\u5e03,\u5176\u4e2d\u6bcf\u4e2a\u72b6\u6001\u5728\u957f\u671f\u6765\u770b\u90fd\u6709\u975e\u96f6\u7684\u6982\u7387\u88ab\u5360\u636e\u3002</p> </li> </ol> <p>\u8fd9\u4e2a\u5b9a\u7406\u7684\u610f\u4e49\u662f\u5de8\u5927\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4e3a\u4efb\u4f55\u4e00\u7ec4\u89c4\u5219\u5199\u4e0b\u4e00\u4e2aQ\u77e9\u9635,\u4f46\u6c42\u89e3 \\(Q\\vec{\\pi} = 0\\) \u53ef\u80fd\u4f1a\u5f97\u5230\u591a\u4e2a\u89e3,\u6216\u8005\u89e3\u4e2d\u5305\u542b\u8d1f\u6570,\u8fd9\u5c06\u5bfc\u81f4\u7269\u7406\u4e0a\u7684\u56f0\u5883\u3002</p> <p>\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\u544a\u8bc9\u6211\u4eec,\u53ea\u8981\u7cfb\u7edf\u6ee1\u8db3\u4e00\u4e2a\u76f4\u89c2\u7684\u7269\u7406\u6761\u4ef6\u2014\u2014\u4e0d\u53ef\u7ea6\u6027(\u5373\u7cfb\u7edf\u5185\u90e8\u662f\"\u5145\u5206\u6df7\u5408\"\u7684),\u90a3\u4e48\u6570\u5b66\u5c31\u80fd\u4fdd\u8bc1\u7cfb\u7edf\u6700\u7ec8\u4f1a\u6f14\u5316\u5230\u4e00\u4e2a\u552f\u4e00\u7684\u3001\u7269\u7406\u4e0a\u5408\u7406\u7684\u5e73\u8861\u6001\u3002\u4e00\u4e2a\u53ef\u7ea6\u7684\u7cfb\u7edf(\u4f8b\u5982\u6709\u5438\u6536\u6001\u7684\u7cfb\u7edf)\u7684\u6700\u7ec8\u72b6\u6001\u53ef\u80fd\u4f9d\u8d56\u4e8e\u5b83\u7684\u521d\u59cb\u4f4d\u7f6e\u3002\u4f46\u5982\u679c\u7cfb\u7edf\u662f\u4e0d\u53ef\u7ea6\u7684,\u5b83\u603b\u80fd\u4ece\u4efb\u4f55\u5730\u65b9\u5230\u8fbe\u4efb\u4f55\u5730\u65b9,\u4e0d\u65ad\u5730\u6df7\u5408\u3002</p> <p>\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\u4ece\u6570\u5b66\u4e0a\u8bc1\u660e\u4e86,\u6b63\u662f\u8fd9\u79cd\"\u6df7\u5408\"\u7279\u6027(\u4e0d\u53ef\u7ea6\u6027),\u4fdd\u8bc1\u4e86\u7cfb\u7edf\u6700\u7ec8\u4f1a\u7a33\u5b9a\u5728\u4e00\u4e2a\u660e\u786e\u7684\u5e73\u8861\u6001,\u5e76\u4e14\u5728\u8fd9\u4e2a\u5e73\u8861\u6001\u4e2d,\u6bcf\u4e00\u79cd\u6784\u578b\u90fd\u6709\u53ef\u80fd\u51fa\u73b0(\\(\\pi_n &gt; 0\\))\u3002\u5b83\u5c06\u4e00\u4e2a\u56fe\u8bba\u6027\u8d28(\u72b6\u6001\u7a7a\u95f4\u7684\u5f3a\u8fde\u901a\u6027)\u4e0e\u4e00\u4e2a\u8c31\u6027\u8d28(\u7279\u5f81\u503c0\u7684\u7b80\u5e76\u6027)\u8054\u7cfb\u8d77\u6765,\u800c\u540e\u8005\u53c8\u4fdd\u8bc1\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u7269\u7406\u6027\u8d28(\u552f\u4e00\u7a33\u6001\u7684\u5b58\u5728)\u3002</p>"},{"location":"zh/notes/7.%20%E5%89%8D%E5%90%91%E4%B8%BB%E6%96%B9%E7%A8%8B%E4%B8%8EQ%E7%9F%A9%E9%98%B5/#_2","title":"\u603b\u7ed3","text":"<p>\u672c\u8bb2\u6559\u6388\u5e26\u9886\u6211\u4eec\u5b8c\u6210\u4e86\u4e00\u6b21\u4ece\u5b8f\u89c2\u5230\u5fae\u89c2,\u518d\u56de\u5f52\u5b8f\u89c2\u7684\u7406\u8bba\u6784\u5efa:</p> <ol> <li> <p>\u6211\u4eec\u4ece\u63cf\u8ff0\u6709\u9650\u65f6\u95f4\u6f14\u5316\u7684\u67e5\u666e\u66fc-\u79d1\u5c14\u83ab\u6208\u7f57\u592b\u65b9\u7a0b\u51fa\u53d1\u3002</p> </li> <li> <p>\u901a\u8fc7\u53d6\u65e0\u7a77\u5c0f\u65f6\u95f4\u6781\u9650,\u6211\u4eec\u63a8\u5bfc\u51fa\u4e86\u63cf\u8ff0\u6982\u7387\u77ac\u65f6\u53d8\u5316\u7684\u524d\u5411\u4e3b\u65b9\u7a0b,\u8fd9\u662f\u4e00\u4e2a\u5fae\u5206\u65b9\u7a0b\u3002</p> </li> <li> <p>\u6211\u4eec\u5c06\u7cfb\u7edf\u7684\u6240\u6709\u8f6c\u79fb\u901f\u7387\u4fe1\u606f\u5c01\u88c5\u5728\u4e86\u4e00\u4e2a\u6838\u5fc3\u7684\u6570\u5b66\u5bf9\u8c61\u2014\u2014Q\u77e9\u9635\u4e2d,\u5b83\u6210\u4e3a\u4e86\u9a71\u52a8\u6982\u7387\u6f14\u5316\u7684\"\u5f15\u64ce\"\u3002</p> </li> <li> <p>\u901a\u8fc7\u5206\u6790Q\u77e9\u9635\u7684\u5143\u7d20,\u6211\u4eec\u5c06\u4e3b\u65b9\u7a0b\u8be0\u91ca\u4e3a\u4e00\u79cd\u7269\u7406\u4e0a\u975e\u5e38\u76f4\u89c2\u7684\u589e\u76ca-\u635f\u5931\u5e73\u8861,\u5b83\u672c\u8d28\u4e0a\u662f\u6982\u7387\u7684\u8fde\u7eed\u6027\u65b9\u7a0b\u3002</p> </li> <li> <p>\u6211\u4eec\u5c06\u8fd9\u5957\u7406\u8bba\u6846\u67b6\u5e94\u7528\u4e8e\u4e00\u4e2a\u5177\u4f53\u7684\u7ebf\u6027\u51fa\u751f-\u6b7b\u4ea1\u8fc7\u7a0b,\u5c55\u793a\u4e86\u5982\u4f55\u6839\u636e\u5fae\u89c2\u89c4\u5219\u6784\u5efaQ\u77e9\u9635,\u5e76\u7406\u89e3\u5176\u7ed3\u6784\u4e0e\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u5173\u7cfb\u3002</p> </li> <li> <p>\u6700\u540e,\u6211\u4eec\u63a2\u8ba8\u4e86\u7cfb\u7edf\u7684\u957f\u671f\u884c\u4e3a,\u5e76\u5f15\u5165\u4e86\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406,\u63ed\u793a\u4e86\u72b6\u6001\u7a7a\u95f4\u7684\u62d3\u6251\u7ed3\u6784(\u4e0d\u53ef\u7ea6\u6027)\u662f\u5982\u4f55\u4fdd\u8bc1\u7cfb\u7edf\u80fd\u591f\u8fbe\u5230\u4e00\u4e2a\u552f\u4e00\u7684\u3001\u7269\u7406\u4e0a\u5408\u7406\u7684\u7a33\u6001\u5e73\u8861\u7684\u3002</p> </li> </ol> <p>\u901a\u8fc7\u8fd9\u4e00\u8bb2\u7684\u5b66\u4e60,\u6211\u4eec\u786e\u7acb\u4e86\u4e3b\u65b9\u7a0b\u4f5c\u4e3a\u63cf\u8ff0\u8fde\u7eed\u65f6\u95f4\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u6982\u7387\u6f14\u5316\u7684\u57fa\u672c\u8fd0\u52a8\u65b9\u7a0b\u7684\u5730\u4f4d\u3002\u5b83\u4e0d\u4ec5\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u8ba1\u7b97\u5de5\u5177,\u66f4\u662f\u4e00\u4e2a\u6df1\u523b\u63ed\u793a\u968f\u673a\u7cfb\u7edf\u52a8\u529b\u5b66\u672c\u8d28\u7684\u7406\u8bba\u6846\u67b6\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/","title":"\u5f15\u8a00\uff1a\u63a2\u5bfb\u552f\u4e00\u4e14\u7269\u7406\u7684\u7a33\u6001","text":"<p>\u5728\u4e0a\u4e00\u8bb2\u4e2d\uff0cErwin Frey \u6559\u6388\u6df1\u5165\u63a2\u8ba8\u4e86\u63cf\u8ff0\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u57fa\u672c\u65b9\u7a0b\u7684\u6838\u5fc3\u5de5\u5177\u2014\u2014\u524d\u5411\u4e3b\u65b9\u7a0b (Forward Master Equation) \u548c Q\u77e9\u9635 (Q-matrix)\u3002\u6211\u4eec\u77e5\u9053\uff0c\u4e00\u4e2a\u7cfb\u7edf\u7684\u6982\u7387\u5206\u5e03\u968f\u65f6\u95f4\u7684\u6f14\u5316\u7531\u4ee5\u4e0b\u7b80\u6d01\u7684\u77e9\u9635\u65b9\u7a0b\u6240\u652f\u914d\uff1a</p> \\[\\frac{dP}{dt}(t) = QP(t)\\] <p>\u5176\u4e2d\uff0c\\(P(t)\\) \u662f\u4e00\u4e2a\u5217\u5411\u91cf\uff0c\u5176\u7b2c \\(n\\) \u4e2a\u5143\u7d20 \\(P_n(t)\\) \u4ee3\u8868\u7cfb\u7edf\u5728\u65f6\u523b \\(t\\) \u5904\u4e8e\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\u3002\\(Q\\) \u77e9\u9635\uff0c\u4e5f\u79f0\u4e3a\u8f6c\u79fb\u901f\u7387\u77e9\u9635\uff0c\u5176\u5143\u7d20\u5b9a\u4e49\u4e3a\uff1a</p> <ul> <li> <p>\u975e\u5bf9\u89d2\u5143\u7d20 \\(Q_{nm} = w_{m \\to n} \\geq 0\\) \uff08\u5bf9\u4e8e \\(n \\neq m\\)\uff09\uff0c\u8868\u793a\u4ece\u72b6\u6001 \\(m\\) \u8f6c\u79fb\u5230\u72b6\u6001 \\(n\\) \u7684\u901f\u7387\u3002</p> </li> <li> <p>\u5bf9\u89d2\u5143\u7d20 \\(Q_{nn} = -\\sum_{m \\neq n} w_{n \\to m}\\)\uff0c\u8868\u793a\u79bb\u5f00\u72b6\u6001 \\(n\\) \u7684\u603b\u901f\u7387\u3002</p> </li> </ul> <p>\u6211\u4eec\u8fd8\u63a8\u5bfc\u51fa\u4e86 \\(Q\\) \u77e9\u9635\u7684\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u6027\u8d28\uff1a\u5b83\u7684\u5217\u548c\u4e3a\u96f6\u3002</p> \\[\\sum_n Q_{nm} = 0\\] <p></p> <p>\u5728\u7269\u7406\u5b66\u3001\u5316\u5b66\u3001\u751f\u7269\u5b66\u548c\u8bb8\u591a\u5176\u4ed6\u9886\u57df\uff0c\u6211\u4eec\u6700\u5173\u5fc3\u7684\u5f80\u5f80\u4e0d\u662f\u77ac\u6001\u884c\u4e3a\uff0c\u800c\u662f\u7cfb\u7edf\u5728\u957f\u65f6\u95f4\u6f14\u5316\u540e\u6700\u7ec8\u4f1a\u8fbe\u5230\u4ec0\u4e48\u6837\u7684\u72b6\u6001\u3002\u8fd9\u4e2a\u6700\u7ec8\u7684\u3001\u4e0d\u968f\u65f6\u95f4\u6539\u53d8\u7684\u72b6\u6001\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u7a33\u6001\uff08steady state\uff09\u6216\u5e73\u8861\u6001\uff08equilibrium\uff09\u3002\u6b63\u5982\u6559\u6388\u5728\u9ed1\u677f\u4e0a\u6307\u51fa\u7684\u90a3\u6837\uff0c\u8fd9\u4e2a\u6570\u5b66\u6027\u8d28\u76f4\u63a5\u4fdd\u8bc1\u4e86\u7cfb\u7edf\u4e2d\u5b58\u5728\u7a33\u6001 (steady states)\u3002\u4e00\u4e2a\u7a33\u6001\u5206\u5e03 \\(\\pi\\) \u662f\u6307\u4e0d\u968f\u65f6\u95f4\u53d8\u5316\u7684\u6982\u7387\u5206\u5e03\uff0c\u5373 \\(\\frac{d\\pi}{dt} = 0\\)\u3002\u4ee3\u5165\u4e3b\u65b9\u7a0b\uff0c\u6211\u4eec\u5f97\u5230\u7a33\u6001\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\uff1a</p> \\[Q\\pi = 0\\] <p>\u8fd9\u6b63\u662f\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u4e00\u4e2a\u672c\u5f81\u65b9\u7a0b\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\u7a33\u6001 \\(\\pi\\) \u662f \\(Q\\) \u77e9\u9635\u5bf9\u5e94\u4e8e\u672c\u5f81\u503c\u4e3a 0 \u7684\u672c\u5f81\u5411\u91cf\u3002\u5217\u548c\u4e3a\u96f6\u7684\u6027\u8d28\u786e\u4fdd\u4e86 0 \u5fc5\u5b9a\u662f \\(Q\\) \u77e9\u9635\u7684\u4e00\u4e2a\u672c\u5f81\u503c\u3002</p> <p>\u7136\u800c\uff0c\u4e0a\u4e00\u8bb2\u7684\u77e5\u8bc6\u5728\u8fd9\u91cc\u7ed9\u6211\u4eec\u7559\u4e0b\u4e86\u4e00\u4e9b\u5173\u952e\u7684\u3001\u60ac\u800c\u672a\u51b3\u7684\u7269\u7406\u95ee\u9898\uff1a</p> <ol> <li> <p>\u552f\u4e00\u6027 (Uniqueness): \u8fd9\u4e2a\u7a33\u6001\u89e3 \\(\\pi\\) \u662f\u7cfb\u7edf\u552f\u4e00\u7684\u957f\u671f\u5f52\u5bbf\u5417\uff1f\u8fd8\u662f\u8bf4\u7cfb\u7edf\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u4e0d\u540c\u7684\u7a33\u6001\uff0c\u5176\u6700\u7ec8\u72b6\u6001\u53d6\u51b3\u4e8e\u521d\u59cb\u6761\u4ef6\uff1f</p> </li> <li> <p>\u7269\u7406\u6027 (Physicality): \u4f5c\u4e3a\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u7a33\u6001\u5411\u91cf\u7684\u6bcf\u4e2a\u5206\u91cf \\(\\pi_n\\) \u90fd\u5fc5\u987b\u662f\u975e\u8d1f\u7684\uff0c\u5373 \\(\\pi_n \\geq 0\\)\u3002\u6211\u4eec\u80fd\u5426\u4fdd\u8bc1\u8fd9\u4e2a\u6570\u5b66\u89e3\u5728\u7269\u7406\u4e0a\u662f\u6709\u610f\u4e49\u7684\uff1f\u66f4\u8fdb\u4e00\u6b65\uff0c\u6211\u4eec\u80fd\u5426\u4fdd\u8bc1 \\(\\pi_n &gt; 0\\)\uff0c\u5373\u5728\u7a33\u6001\u4e0b\uff0c\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u72b6\u6001\u662f\u5b8c\u5168\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\uff1f</p> </li> <li> <p>\u53ef\u8fbe\u6027 (Reachability): \u5728\u4ec0\u4e48\u6837\u7684\u7269\u7406\u6761\u4ef6\u4e0b\uff0c\u8fd9\u79cd\u552f\u4e00\u6027\u548c\u6b63\u5b9a\u6027\u624d\u80fd\u591f\u6210\u7acb\uff1f</p> </li> </ol> <p>\u4e3a\u4e86\u56de\u7b54\u8fd9\u4e9b\u5173\u4e8e\u7cfb\u7edf\u957f\u671f\u884c\u4e3a\u7684\u6838\u5fc3\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5f3a\u5927\u7684\u6570\u5b66\u5de5\u5177\uff0c\u5b83\u4e13\u95e8\u5904\u7406\u5177\u6709\u7279\u5b9a\u6027\u8d28\u7684\u77e9\u9635\u3002\u8fd9\u4e2a\u5de5\u5177\u5c31\u662f\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406 (Perron-Frobenius theorem)\u3002\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u5c31\u662f\u5229\u7528\u8fd9\u4e2a\u5b9a\u7406\uff0c\u4e3a\u6211\u4eec\u6240\u5173\u5fc3\u7684\u968f\u673a\u8fc7\u7a0b\u5efa\u7acb\u4e00\u4e2a\u575a\u5b9e\u7684\u7406\u8bba\u57fa\u7840\uff0c\u8bc1\u660e\u5176\u5728\u7279\u5b9a\u6761\u4ef6\u4e0b\u5fc5\u7136\u4f1a\u6f14\u5316\u5230\u4e00\u4e2a\u552f\u4e00\u7684\u3001\u7269\u7406\u4e0a\u6709\u610f\u4e49\u7684\u7a33\u6001\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#1-","title":"1. \u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\uff1a\u4e00\u4e2a\u5173\u4e8e\u6b63\u77e9\u9635\u7684\u5f3a\u5927\u4fdd\u8bc1","text":"<p>\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\uff08\u7b80\u79f0PF\u5b9a\u7406\uff09\u662f\u7ebf\u6027\u4ee3\u6570\u4e2d\u4e00\u4e2a\u6df1\u523b\u7684\u7ed3\u679c\uff0c\u5b83\u63ed\u793a\u4e86\u5177\u6709\u975e\u8d1f\u5143\u7d20\u7684\u77e9\u9635\u5176\u672c\u5f81\u503c\u548c\u672c\u5f81\u5411\u91cf\u7684\u7279\u6b8a\u6027\u8d28\u3002</p> <p>\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\uff08Perron-Frobenius theorem\uff09\u8d77\u6e90\u4e8e20\u4e16\u7eaa\u521d\uff0c\u7531\u5fb7\u56fd\u6570\u5b66\u5bb6\u5965\u65af\u5361\u00b7\u4f69\u9f99\uff08Oskar Perron\uff0c1907\u5e74\uff09\u548c\u8d39\u8fea\u5357\u5fb7\u00b7\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\uff08Ferdinand Frobenius\uff0c1912\u5e74\uff09\u5206\u522b\u63d0\u51fa\u548c\u5b8c\u5584\u3002\u8be5\u5b9a\u7406\u4e13\u95e8\u7814\u7a76\u975e\u8d1f\u77e9\u9635\uff08\u6240\u6709\u5143\u7d20\u22650\uff09\u548c\u6b63\u77e9\u9635\uff08\u6240\u6709\u5143\u7d20&gt;0\uff09\u7684\u672c\u5f81\u503c\u6027\u8d28\uff0c\u5176\u6838\u5fc3\u7ed3\u8bba\u662f\uff1a\u5bf9\u4e8e\u4e0d\u53ef\u7ea6\u7684\u975e\u8d1f\u77e9\u9635\uff0c\u5b58\u5728\u4e00\u4e2a\u552f\u4e00\u7684\u6700\u5927\u5b9e\u672c\u5f81\u503c\uff08\u4f69\u9f99\u6839\uff09\uff0c\u4e14\u5bf9\u5e94\u7684\u672c\u5f81\u5411\u91cf\u6240\u6709\u5206\u91cf\u90fd\u4e3a\u6b63\u3002</p> <p>\u8fd9\u4e2a\u5b9a\u7406\u5728\u73b0\u4ee3\u79d1\u5b66\u4e2d\u6709\u7740\u6781\u5176\u5e7f\u6cdb\u7684\u5e94\u7528\uff1a\u5728\u9a6c\u5c14\u53ef\u592b\u94fe\u7406\u8bba\u4e2d\u4fdd\u8bc1\u7a33\u6001\u5206\u5e03\u7684\u552f\u4e00\u6027\u548c\u7269\u7406\u6027\uff1b\u5728\u4eba\u53e3\u52a8\u6001\u5b66\u4e2d\u5206\u6790\u79cd\u7fa4\u589e\u957f\u7684\u957f\u671f\u884c\u4e3a\uff1b\u5728\u7ecf\u6d4e\u5b66\u4e2d\u7814\u7a76\u6295\u5165\u4ea7\u51fa\u6a21\u578b\u548c\u7ecf\u6d4e\u589e\u957f\u7406\u8bba\uff1b\u5728\u7f51\u7edc\u79d1\u5b66\u4e2d\u8ba1\u7b97\u7f51\u9875\u6392\u540d\uff08\u5982Google\u7684PageRank\u7b97\u6cd5\uff09\u548c\u793e\u4ea4\u7f51\u7edc\u7684\u5f71\u54cd\u529b\uff1b\u5728\u751f\u6001\u5b66\u4e2d\u5efa\u6a21\u751f\u6001\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff1b\u5728\u91cf\u5b50\u7269\u7406\u4e2d\u5206\u6790\u5f00\u653e\u91cf\u5b50\u7cfb\u7edf\u7684\u6f14\u5316\u3002</p> <p>PF\u5b9a\u7406\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u6570\u5b66\u5de5\u5177\uff0c\u80fd\u591f\u4ece\u7eaf\u6570\u5b66\u7684\u89d2\u5ea6\u4fdd\u8bc1\u8bb8\u591a\u7269\u7406\u548c\u751f\u7269\u7cfb\u7edf\u5fc5\u7136\u4f1a\u6f14\u5316\u5230\u4e00\u4e2a\u552f\u4e00\u7684\u3001\u7269\u7406\u4e0a\u6709\u610f\u4e49\u7684\u7a33\u6001\uff0c\u8fd9\u4f7f\u5f97\u5b83\u6210\u4e3a\u8fde\u63a5\u62bd\u8c61\u6570\u5b66\u7406\u8bba\u4e0e\u73b0\u5b9e\u4e16\u754c\u590d\u6742\u7cfb\u7edf\u884c\u4e3a\u7684\u91cd\u8981\u6865\u6881\u3002</p> <p></p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#11","title":"1.1 \u5b9a\u7406\u7684\u9648\u8ff0","text":"<p>\u8be5\u5b9a\u7406\u53ef\u4ee5\u901a\u4fd7\u5730\u9648\u8ff0\u5982\u4e0b\uff1a</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u6240\u6709\u5143\u7d20\u5747\u4e3a\u975e\u8d1f (\\(M_{nm} \\geq 0\\)) \u4e14\u4e0d\u53ef\u5206\u89e3 (indecomposable) \u7684\u5b9e\u65b9\u9635 \\(M\\)\uff0c\u4ee5\u4e0b\u7ed3\u8bba\u6210\u7acb\uff1a</p> <ol> <li> <p>\u5b58\u5728\u4e00\u4e2a\u552f\u4e00\u7684\u3001\u5b9e\u7684\u6b63\u672c\u5f81\u503c \\(\\lambda\\)\uff0c\u5b83\u5728\u6240\u6709\u672c\u5f81\u503c\u4e2d\u62e5\u6709\u6700\u5927\u7684\u7edd\u5bf9\u503c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e \\(M\\) \u7684\u4efb\u4f55\u5176\u4ed6\u672c\u5f81\u503c \\(\\mu\\)\uff08\u53ef\u80fd\u662f\u590d\u6570\uff09\uff0c\u90fd\u6709 \\(|\\mu| &lt; \\lambda\\)\u3002\u8fd9\u4e2a\u7279\u6b8a\u7684\u672c\u5f81\u503c \\(\\lambda\\) \u88ab\u79f0\u4e3a\u4f69\u9f99\u6839 (Perron root) \u6216\u4e3b\u5bfc\u672c\u5f81\u503c\u3002</p> </li> <li> <p>\u5bf9\u5e94\u4e8e\u4f69\u9f99\u6839 \\(\\lambda\\) \u7684\u672c\u5f81\u5411\u91cf \\(p^{(\\lambda)}\\) \u662f\u552f\u4e00\u7684\uff08\u5728\u4e58\u4ee5\u4e00\u4e2a\u6b63\u5e38\u6570\u56e0\u5b50\u7684\u610f\u4e49\u4e0b\uff09\uff0c\u5e76\u4e14\u53ef\u4ee5\u9009\u62e9\u4f7f\u5176\u6240\u6709\u5206\u91cf\u90fd\u4e25\u683c\u4e3a\u6b63 (\\(p_n^{(\\lambda)} &gt; 0\\) \u5bf9\u6240\u6709 \\(n\\) \u6210\u7acb)\u3002</p> </li> </ol> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u5f20\u9891\u8c31\u56fe\u6765\u76f4\u89c2\u5730\u7406\u89e3\u8fd9\u4e2a\u5b9a\u7406\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u77e9\u9635 \\(M\\)\uff0c\u5176\u6240\u6709\u672c\u5f81\u503c\u90fd\u4f4d\u4e8e\u590d\u5e73\u9762\u4e0a\u4e00\u4e2a\u4ee5\u539f\u70b9\u4e3a\u4e2d\u5fc3\u3001\u534a\u5f84\u4e3a \\(\\lambda\\) \u7684\u5706\u76d8\u5185\u3002\u4f69\u9f99\u6839 \\(\\lambda\\) \u672c\u8eab\u662f\u4f4d\u4e8e\u6b63\u5b9e\u8f74\u4e0a\u7684\u4e00\u4e2a\u5b64\u7acb\u70b9\uff0c\u800c\u6240\u6709\u5176\u4ed6\u672c\u5f81\u503c \\(\\mu\\) \u90fd\u4e25\u683c\u5730\u5904\u4e8e\u5b83\u7684\u5185\u4fa7\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#12","title":"1.2 \u6838\u5fc3\u6761\u4ef6\u7684\u7269\u7406\u5185\u6db5","text":"<p>\u8981\u7406\u89e3PF\u5b9a\u7406\u7684\u5a01\u529b\uff0c\u6211\u4eec\u5fc5\u987b\u6df1\u5165\u5256\u6790\u5176\u4e24\u4e2a\u6838\u5fc3\u524d\u63d0\u6761\u4ef6\u3002</p> <p>\u672f\u8bed\u8bf4\u660e\uff1a\u5728\u672c\u7ae0\u4e2d\uff0c\u201c\u4e0d\u53ef\u5206\u89e3\uff08indecomposable\uff09\u201d\u4e0e\u201c\u4e0d\u53ef\u7ea6\uff08irreducible\uff09\u201d\u540c\u4e49\u3002\u4e3a\u4e0e\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u4e0ePF\u5b9a\u7406\u7684\u901a\u7528\u8868\u8ff0\u4fdd\u6301\u4e00\u81f4\uff0c\u540e\u6587\u7edf\u4e00\u91c7\u7528\u201c\u4e0d\u53ef\u7ea6\uff08irreducible\uff09\u201d\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#m_nm-geq-0","title":"\u975e\u8d1f\u6027 (\\(M_{nm} \\geq 0\\))","text":"<p>\u8fd9\u4e2a\u6761\u4ef6\u5728\u7269\u7406\u548c\u751f\u7269\u6a21\u578b\u4e2d\u975e\u5e38\u81ea\u7136\u3002\u77e9\u9635\u7684\u5143\u7d20\u5e38\u5e38\u4ee3\u8868\u90a3\u4e9b\u672c\u8d28\u4e0a\u4e0d\u53ef\u80fd\u662f\u8d1f\u6570\u7684\u91cf\uff0c\u4f8b\u5982\u7269\u79cd\u7684\u6570\u91cf\u3001\u5316\u5b66\u7269\u8d28\u7684\u6d53\u5ea6\uff0c\u6216\u8005\u5728\u9a6c\u5c14\u53ef\u592b\u94fe\u4e2d\uff0c\u8f6c\u79fb\u7684\u6982\u7387\u3002\u8fd9\u4e2a\u6761\u4ef6\u662f\u6574\u4e2a\u5b9a\u7406\u7684\u57fa\u77f3\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#indecomposability-irreducibility","title":"\u4e0d\u53ef\u5206\u89e3\u6027 (Indecomposability) \u6216 \u4e0d\u53ef\u7ea6\u6027 (Irreducibility)","text":"<p>\u8fd9\u662f\u5e94\u7528PF\u5b9a\u7406\u65f6\u6700\u5173\u952e\u7684\u7269\u7406\u6761\u4ef6\u3002\u4e00\u4e2a\u77e9\u9635\u662f\u4e0d\u53ef\u5206\u89e3\u7684\uff0c\u610f\u5473\u7740\u5b83\u6240\u63cf\u8ff0\u7684\u7cfb\u7edf\u662f\u4e00\u4e2a\u6574\u4f53\uff0c\u800c\u4e0d\u662f\u7531\u51e0\u4e2a\u76f8\u4e92\u9694\u79bb\u3001\u4e92\u4e0d\u8fde\u901a\u7684\u5b50\u7cfb\u7edf\u7ec4\u6210\u7684\u3002\u8fd9\u4e2a\u6982\u5ff5\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u6765\u7406\u89e3\uff0c\u4ee5\u5efa\u7acb\u6700\u5f3a\u7684\u7269\u7406\u76f4\u89c9\uff1a</p> <ul> <li> <p>\u56fe\u8bba\u89c6\u89d2\uff1a \u6211\u4eec\u53ef\u4ee5\u5c06\u7cfb\u7edf\u7684\u6bcf\u4e2a\u72b6\u6001 \\(n\\) \u60f3\u8c61\u6210\u4e00\u4e2a\u56fe\u7684\u8282\u70b9\u3002\u5982\u679c\u77e9\u9635\u5143\u7d20 \\(M_{nm} &gt; 0\\)\uff0c\u6211\u4eec\u5c31\u5728\u8282\u70b9 \\(m\\) \u548c\u8282\u70b9 \\(n\\) \u4e4b\u95f4\u753b\u4e00\u4e2a\u6709\u5411\u8fb9\uff0c\u8868\u793a\u7cfb\u7edf\u53ef\u4ee5\u4ece\u72b6\u6001 \\(m\\) \u8f6c\u79fb\u5230\u72b6\u6001 \\(n\\)\u3002\u90a3\u4e48\uff0c\u77e9\u9635\u7684\u4e0d\u53ef\u5206\u89e3\u6027\u5c31\u7b49\u4ef7\u4e8e\u8fd9\u4e2a\u6709\u5411\u56fe\u662f\u5f3a\u8fde\u901a\u7684 (strongly connected)\u3002\u5f3a\u8fde\u901a\u610f\u5473\u7740\uff0c\u4ece\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u51fa\u53d1\uff0c\u90fd\u5b58\u5728\u4e00\u6761\u7531\u6709\u5411\u8fb9\u7ec4\u6210\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u5230\u8fbe\u56fe\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u8282\u70b9\u3002</p> </li> <li> <p>\u7269\u7406\u89c6\u89d2\uff1a \u4e00\u4e2a\u4e0d\u53ef\u5206\u89e3\uff08\u6216\u4e0d\u53ef\u7ea6\uff09\u7684\u7cfb\u7edf\uff0c\u5728\u7269\u7406\u4e0a\u610f\u5473\u7740\u7cfb\u7edf\u80fd\u591f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u63a2\u7d22\u5176\u6240\u6709\u53ef\u80fd\u7684\u72b6\u6001\u7a7a\u95f4\u3002\u7cfb\u7edf\u4e2d\u4e0d\u5b58\u5728\u6240\u8c13\u7684\"\u9677\u9631\"\u6216\u8005\"\u5b64\u5c9b\"\u2014\u2014\u5373\u67d0\u4e9b\u72b6\u6001\u7684\u96c6\u5408\uff0c\u7cfb\u7edf\u4e00\u65e6\u8fdb\u5165\u5c31\u518d\u4e5f\u65e0\u6cd5\u79bb\u5f00\uff0c\u6216\u8005\u67d0\u4e9b\u72b6\u6001\u6c38\u8fdc\u65e0\u6cd5\u4ece\u7cfb\u7edf\u7684\u5176\u4ed6\u90e8\u5206\u5230\u8fbe\u3002\u6b63\u5982\u6559\u6388\u5728\u8bfe\u5802\u4e0a\u63d0\u5230\u7684\uff0c\u8fd9\u7b49\u4ef7\u4e8e\"\u6240\u6709\u72b6\u6001\u90fd\u662f\u53ef\u8fbe\u7684\" (all states are reachable)\u3002</p> </li> <li> <p>\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a \u5728\u6570\u5b66\u4e0a\uff0c\u4e0d\u53ef\u5206\u89e3\u6027\u88ab\u5b9a\u4e49\u4e3a\u77e9\u9635\u4e0d\u5b58\u5728\u975e\u5e73\u51e1\u7684\u4e0d\u53d8\u5b50\u7a7a\u95f4 (invariant subspaces)\u3002\u4e00\u4e2a\u5b50\u7a7a\u95f4 \\(V\\) \u662f\u4e0d\u53d8\u7684\uff0c\u6307\u7684\u662f\u5bf9\u4e8e\u4efb\u4f55\u5c5e\u4e8e\u8be5\u5b50\u7a7a\u95f4\u7684\u5411\u91cf \\(v \\in V\\)\uff0c\u7ecf\u8fc7\u77e9\u9635 \\(M\\) \u7684\u53d8\u6362\u540e\uff0c\u7ed3\u679c \\(Mv\\) \u4ecd\u7136\u4f4d\u4e8e\u8fd9\u4e2a\u5b50\u7a7a\u95f4\u5185\u3002</p> </li> </ul> <p>\u4e0d\u53ef\u5206\u89e3\u6027\u662f\u4fdd\u8bc1\u7cfb\u7edf\u6574\u4f53\u884c\u4e3a\u4e00\u81f4\u6027\u7684\u6570\u5b66\u8bed\u8a00\u3002\u5982\u679c\u4e00\u4e2a\u7cfb\u7edf\u662f\u53ef\u5206\u89e3\u7684\uff0c\u5c31\u597d\u50cf\u5b83\u88ab\u4e00\u9053\u65e0\u5f62\u7684\u5899\u5206\u6210\u4e86\u51e0\u4e2a\u90e8\u5206\u3002\u4ece\u7269\u7406\u4e0a\u770b\uff0c\u8fd9\u610f\u5473\u7740\u7cfb\u7edf\u7684\u957f\u671f\u884c\u4e3a\u5c06\u5b8c\u5168\u53d6\u51b3\u4e8e\u5b83\u7684\u521d\u59cb\u72b6\u6001\u3002\u5982\u679c\u5b83\u4ece\"\u533a\u57dfA\"\u5f00\u59cb\uff0c\u5b83\u5c06\u6c38\u8fdc\u88ab\u56f0\u5728\"\u533a\u57dfA\"\u7684\u7a33\u6001\u4e2d\uff1b\u5982\u679c\u4ece\"\u533a\u57dfB\"\u5f00\u59cb\uff0c\u5b83\u5c06\u8fbe\u5230\"\u533a\u57dfB\"\u7684\u7a33\u6001\u3002\u8fd9\u5c31\u5bfc\u81f4\u4e86\u591a\u4e2a\u53ef\u80fd\u7684\u7a33\u6001\uff0c\u7834\u574f\u4e86\u552f\u4e00\u6027\u3002</p> <p>\u56e0\u6b64\uff0c\u4e0d\u53ef\u5206\u89e3\u6027\u8fd9\u4e2a\u6761\u4ef6\uff0c\u901a\u8fc7\u6392\u9664\u8fd9\u79cd\"\u56da\u7981\"\u53ef\u80fd\u6027\uff0c\u8feb\u4f7f\u7cfb\u7edf\u65e0\u8bba\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u6700\u7ec8\u90fd\u5fc5\u987b\u63a2\u7d22\u6240\u6709\u72b6\u6001\uff0c\u5e76\u8d8b\u5411\u4e8e\u4e00\u4e2a\u5168\u5c40\u7edf\u4e00\u7684\u7a33\u6001\u3002\u8fd9\u6df1\u523b\u5730\u5c06\u4e00\u4e2a\u62bd\u8c61\u7684\u6570\u5b66\u6761\u4ef6\u4e0e\u4e00\u4e2a\u5173\u952e\u7684\u7269\u7406\u6027\u8d28\u2014\u2014\u7a33\u6001\u7684\u552f\u4e00\u6027\u2014\u2014\u8054\u7cfb\u5728\u4e86\u4e00\u8d77\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#2-q","title":"2. \u5c06\u5b9a\u7406\u5e94\u7528\u4e8eQ\u77e9\u9635\uff1a\u552f\u4e00\u7a33\u6001\u7684\u8bc1\u660e","text":"<p>\u6211\u4eec\u9762\u4e34\u4e00\u4e2a\u76f4\u63a5\u7684\u6311\u6218\uff1a\u6211\u4eec\u60f3\u8981\u5206\u6790\u7684 \\(Q\\) \u77e9\u9635\u5e76\u4e0d\u6ee1\u8db3PF\u5b9a\u7406\u7684\"\u975e\u8d1f\u6027\"\u6761\u4ef6\uff0c\u56e0\u4e3a\u5b83\u7684\u5bf9\u89d2\u5143\u7d20 \\(Q_{nn}\\) \u662f\u8d1f\u6570\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u624d\u80fd\u5229\u7528\u8fd9\u4e2a\u5f3a\u5927\u7684\u5b9a\u7406\u5462\uff1f</p> <p>\u8fd9\u91cc\u7684\u5173\u952e\u601d\u60f3\u975e\u5e38\u5de7\u5999\uff1a\u6211\u4eec\u4e0d\u76f4\u63a5\u5206\u6790 \\(Q\\) \u77e9\u9635\uff0c\u800c\u662f\u6784\u9020\u4e00\u4e2a\u4e0e\u4e4b\u76f8\u5173\u4e14\u6ee1\u8db3PF\u5b9a\u7406\u6761\u4ef6\u7684\u8f85\u52a9\u77e9\u9635 \\(M\\)\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#21-m","title":"2.1 \u6784\u9020\u4e00\u4e2a\u975e\u8d1f\u77e9\u9635 \\(M\\)","text":"<p>\u6211\u4eec\u9075\u5faa\u6559\u6388\u5728\u9ed1\u677f\u4e0a\u7684\u63a8\u5bfc\uff0c\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u77e9\u9635 \\(M\\) \u5982\u4e0b\uff1a</p> \\[ M_{nm} := Q_{nm} + \\alpha \\delta_{nm} \\] <p>\u6ce8\uff1a:= \u7b26\u53f7\u7684\u610f\u601d\u662f\uff1a\u201c\u5b9a\u4e49\u4e3a\u6216\u8bbe\u7b49\u4e8e\u201d</p> <p>\u5176\u4e2d\uff0c\\(\\delta_{nm}\\) \u662f\u514b\u7f57\u5185\u514b\u51fd\u6570\uff08\u5f53 \\(n = m\\) \u65f6\u4e3a 1\uff0c\u5426\u5219\u4e3a 0\uff09\uff0c\u800c \\(\\alpha\\) \u662f\u4e00\u4e2a\u7cbe\u5fc3\u9009\u62e9\u7684\u6b63\u5e38\u6570\uff0c\u5176\u503c\u4e3a\u7cfb\u7edf\u4e2d\u6240\u6709\u72b6\u6001\u7684\u6700\u5927\u51fa\u5c04\u901f\u7387\uff1a</p> \\[\\alpha = \\max_n |Q_{nn}| = \\max_n \\sum_{m \\neq n} w_{n \\to m}\\] <p>\u8fd9\u4e2a\u6784\u9020\u7684\u672c\u8d28\u662f\u5728 \\(Q\\) \u77e9\u9635\u7684\u5bf9\u89d2\u7ebf\u4e0a\u52a0\u4e0a\u4e00\u4e2a\u8db3\u591f\u5927\u7684\u6b63\u6570 \\(\\alpha\\)\uff0c\u4ece\u800c\"\u62ac\u5347\"\u6240\u6709\u5bf9\u89d2\u5143\u7d20\uff0c\u4f7f\u5176\u53d8\u4e3a\u975e\u8d1f\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#22","title":"2.2 \u9010\u6b65\u63a8\u5bfc","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u4e00\u6b65\u6b65\u5730\u5b8c\u6210\u8fd9\u4e2a\u8bc1\u660e\uff0c\u5b83\u5c06\u56de\u7b54\u6211\u4eec\u6700\u521d\u5173\u4e8e\u7a33\u6001\u552f\u4e00\u6027\u548c\u7269\u7406\u6027\u7684\u95ee\u9898\u3002</p> <p>1.\u8bc1\u660e \\(M\\) \u662f\u975e\u8d1f\u77e9\u9635\uff1a</p> <p>\u5bf9\u4e8e\u975e\u5bf9\u89d2\u5143\u7d20 (\\(n \\neq m\\))\uff0c\\(M_{nm} = Q_{nm} = w_{m \\to n} \\geq 0\\)\u3002</p> <p>\u5bf9\u4e8e\u5bf9\u89d2\u5143\u7d20 (\\(n = m\\))\uff0c\\(M_{nn} = Q_{nn} + \\alpha = -\\sum_{m \\neq n} w_{n \\to m} + \\alpha\\)\u3002\u6839\u636e \\(\\alpha\\) \u7684\u5b9a\u4e49\uff0c\u5b83\u662f\u6240\u6709\u51fa\u5c04\u901f\u7387\u603b\u548c\u4e2d\u7684\u6700\u5927\u503c\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4efb\u4f55\u72b6\u6001 \\(n\\)\uff0c\u90fd\u6709 \\(\\alpha \\geq \\sum_{m \\neq n} w_{n \\to m}\\)\u3002\u8fd9\u5c31\u4fdd\u8bc1\u4e86 \\(M_{nn} \\geq 0\\)\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u6784\u9020\u7684\u77e9\u9635 \\(M\\) \u7684\u6240\u6709\u5143\u7d20\u90fd\u662f\u975e\u8d1f\u7684\u3002</p> <p>2.\u5173\u8054 \\(Q\\) \u548c \\(M\\) \u7684\u672c\u5f81\u95ee\u9898\uff1a</p> <p>\\(M\\) \u7684\u672c\u5f81\u65b9\u7a0b\u662f \\(Mp = \\lambda p\\)\u3002\u5c06 \\(M\\) \u7684\u5b9a\u4e49\u4ee3\u5165\uff0c\u6211\u4eec\u5f97\u5230 \\((Q + \\alpha I)p = \\lambda p\\)\uff0c\u5176\u4e2d \\(I\\) \u662f\u5355\u4f4d\u77e9\u9635\u3002\u6574\u7406\u540e\u5f97\u5230\uff1a</p> \\[ Qp = (\\lambda - \\alpha)p \\] <p>\u8fd9\u4e2a\u5173\u7cfb\u5f0f\u975e\u5e38\u91cd\u8981\u3002\u5b83\u8868\u660e \\(Q\\) \u548c \\(M\\) \u62e5\u6709\u5b8c\u5168\u76f8\u540c\u7684\u672c\u5f81\u5411\u91cf\uff0c\u800c\u5b83\u4eec\u7684\u672c\u5f81\u503c\u4ec5\u4ec5\u76f8\u5dee\u4e00\u4e2a\u5e38\u6570 \\(\\alpha\\)\u3002\\(Q\\) \u7684\u672c\u5f81\u503c\u662f \\(M\\) \u7684\u672c\u5f81\u503c\u51cf\u53bb \\(\\alpha\\)\u3002</p> <p>3.\u5bf9 \\(M\\) \u5e94\u7528\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\uff1a</p> <p>\u6211\u4eec\u5047\u8bbe\u6240\u7814\u7a76\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u662f\u4e0d\u53ef\u7ea6\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5176\u72b6\u6001\u7a7a\u95f4\u662f\u5f3a\u8fde\u901a\u7684\u3002\u8fd9\u4e2a\u6027\u8d28\u76f4\u63a5\u4fdd\u8bc1\u4e86\u6211\u4eec\u6784\u9020\u7684\u77e9\u9635 \\(M\\) \u662f\u4e0d\u53ef\u5206\u89e3\u7684\u3002\u56e0\u6b64\uff0c\\(M\\) \u6ee1\u8db3PF\u5b9a\u7406\u7684\u6240\u6709\u6761\u4ef6\u3002</p> <p>\u6839\u636ePF\u5b9a\u7406\uff0c\\(M\\) \u5b58\u5728\u4e00\u4e2a\u552f\u4e00\u7684\u3001\u5b9e\u7684\u6b63\u7684\u4e3b\u5bfc\u672c\u5f81\u503c\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \\(\\lambda_{PF}\\)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6240\u6709\u5206\u91cf\u90fd\u4e25\u683c\u4e3a\u6b63\u7684\u5bf9\u5e94\u672c\u5f81\u5411\u91cf \\(p^{(\\lambda_{PF})}\\)\u3002</p> <p>4.\u786e\u5b9a\u4e3b\u5bfc\u672c\u5f81\u503c \\(\\lambda_{PF}\\) \u7684\u503c\uff1a</p> <p></p> <p>\u8fd9\u662f\u8bc1\u660e\u7684\u6838\u5fc3\u6b65\u9aa4\uff0c\u5b8c\u5168\u590d\u73b0\u4e86\u6559\u6388\u7684\u9ed1\u677f\u63a8\u5bfc\u3002\u6211\u4eec\u5c06 \\(M\\) \u7684\u672c\u5f81\u65b9\u7a0b\u5bf9\u6240\u6709\u5206\u91cf \\(n\\) \u6c42\u548c\uff1a</p> \\[ \\sum_n (Mp^{(\\lambda_{PF})})_n = \\sum_n \\sum_m M_{nm} p_m^{(\\lambda_{PF})} = \\sum_n \\lambda_{PF} p_n^{(\\lambda_{PF})} \\] <p>\u5728\u5de6\u4fa7\uff0c\u6211\u4eec\u4ea4\u6362\u6c42\u548c\u6b21\u5e8f\uff0c\u5e76\u4ee3\u5165 \\(M\\) \u7684\u5b9a\u4e49\uff1a</p> \\[ \\sum_m \\left(\\sum_n M_{nm}\\right) p_m^{(\\lambda_{PF})} = \\sum_m \\left(\\sum_n (Q_{nm} + \\alpha \\delta_{nm})\\right) p_m^{(\\lambda_{PF})} = \\lambda_{PF} \\sum_n p_n^{(\\lambda_{PF})} \\] <p>\u62ec\u53f7\u5185\u7684\u6c42\u548c\u53ef\u4ee5\u88ab\u8ba1\u7b97\u51fa\u6765\u3002\u6211\u4eec\u77e5\u9053 \\(Q\\) \u77e9\u9635\u7684\u5217\u548c\u4e3a\u96f6\uff0c\u5373 \\(\\sum_n Q_{nm} = 0\\)\u3002\u800c \\(\\sum_n \\alpha \\delta_{nm}\\) \u53ea\u6709\u5728 \\(n = m\\) \u65f6\u4e0d\u4e3a\u96f6\uff0c\u5176\u503c\u4e3a \\(\\alpha\\)\u3002\u56e0\u6b64\uff0c\u62ec\u53f7\u5185\u7684\u503c\u4e3a \\(\\alpha\\)\u3002\u65b9\u7a0b\u53d8\u4e3a\uff1a</p> \\[ \\sum_m \\alpha p_m^{(\\lambda_{PF})} = \\lambda_{PF} \\sum_n p_n^{(\\lambda_{PF})} \\] <p>\u7531\u4e8e \\(\\sum_m p_m^{(\\lambda_{PF})}\\) \u548c \\(\\sum_n p_n^{(\\lambda_{PF})}\\) \u662f\u540c\u4e00\u4e2a\u548c\uff0c\u5e76\u4e14\u6839\u636ePF\u5b9a\u7406\uff0c\\(p^{(\\lambda_{PF})}\\) \u7684\u6240\u6709\u5206\u91cf\u90fd\u4e3a\u6b63\uff0c\u6240\u4ee5\u8fd9\u4e2a\u548c\u4e5f\u4e3a\u6b63\uff0c\u53ef\u4ee5\u4ece\u7b49\u5f0f\u4e24\u8fb9\u7ea6\u53bb\u3002\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u60ca\u4eba\u5730\u7b80\u6d01\u7684\u7ed3\u679c\uff1a</p> \\[ \\lambda_{PF} = \\alpha \\] <p>5.\u56de\u5230 \\(Q\\) \u77e9\u9635\uff0c\u5f97\u51fa\u6700\u7ec8\u7ed3\u8bba\uff1a</p> <p>\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86 \\(M\\) \u7684\u4e3b\u5bfc\u672c\u5f81\u503c\u662f \\(\\alpha\\)\u3002\u73b0\u5728\uff0c\u5229\u7528\u6b65\u9aa42\u4e2d\u7684\u5173\u7cfb\u5f0f \\(Qp = (\\lambda - \\alpha)p\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230 \\(Q\\) \u77e9\u9635\u5bf9\u5e94\u4e8e\u8fd9\u4e2a\u4e3b\u5bfc\u672c\u5f81\u5411\u91cf\u7684\u672c\u5f81\u503c \\(\\lambda_Q\\)\uff1a</p> \\[ \\lambda_Q = \\lambda_{PF} - \\alpha = \\alpha - \\alpha = 0 \\]"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#23","title":"2.3 \u8bc1\u660e\u7684\u603b\u7ed3\u4e0e\u7269\u7406\u610f\u4e49","text":"<p>\u8fd9\u4e2a\u8bc1\u660e\u56de\u7b54\u4e86\u6211\u4eec\u6700\u521d\u7684\u95ee\u9898\u3002\u5b83\u544a\u8bc9\u6211\u4eec\uff1a</p> <p>\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u72b6\u6001\u7a7a\u95f4\u4e0d\u53ef\u7ea6\uff08\u5373\u6240\u6709\u72b6\u6001\u76f8\u4e92\u53ef\u8fbe\uff09\u7684\u8fde\u7eed\u65f6\u95f4\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\uff0c\u5176\u8f6c\u79fb\u901f\u7387\u77e9\u9635 \\(Q\\) \u5b58\u5728\u4e00\u4e2a\u552f\u4e00\u7684\u672c\u5f81\u503c\u4e3a 0 \u7684\u672c\u5f81\u5411\u91cf\u3002\u6839\u636e\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\uff0c\u8fd9\u4e2a\u672c\u5f81\u5411\u91cf\u53ef\u4ee5\u88ab\u9009\u62e9\u4e3a\u6240\u6709\u5206\u91cf\u90fd\u4e25\u683c\u4e3a\u6b63\u3002</p> <p>\u8fd9\u4e2a\u5411\u91cf\u5c31\u662f\u6211\u4eec\u82e6\u82e6\u8ffd\u5bfb\u7684**\u552f\u4e00\u7684\u3001\u7269\u7406\u4e0a\u6709\u610f\u4e49\u7684\u7a33\u6001\u5206\u5e03 \\(\\pi\\)\u3002\u5b83\u7684\u552f\u4e00\u6027\u4fdd\u8bc1\u4e86\u7cfb\u7edf\u7684\u957f\u671f\u884c\u4e3a\u662f\u786e\u5b9a\u7684\uff0c\u4e0e\u521d\u59cb\u72b6\u6001\u65e0\u5173\u3002\u5b83\u7684\u6b63\u5b9a\u6027 (\\(\\pi_n &gt; 0\\)) \u4fdd\u8bc1\u4e86\u5728\u7a33\u6001\u4e0b\uff0c\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\u90fd\u6709\u53ef\u80fd\u88ab\u8bbf\u95ee\u5230\uff0c\u8fd9\u7b26\u5408\u6211\u4eec\u5bf9\u4e00\u4e2a\"\u6d3b\u8dc3\"\u7684\u3001\u4e0d\u53ef\u7ea6\u7cfb\u7edf\u7684\u7269\u7406\u76f4\u89c9\u3002</p> <p>\u6b64\u5916\uff0c\u7531\u4e8e \\(\\lambda_{PF} = \\alpha\\) \u662f \\(M\\) \u7684\u4e3b\u5bfc\u672c\u5f81\u503c\uff0c\u8fd9\u610f\u5473\u7740 \\(M\\) \u7684\u6240\u6709\u5176\u4ed6\u672c\u5f81\u503c \\(\\mu\\) \u90fd\u6ee1\u8db3 \\(|\\mu| &lt; \\alpha\\)\u3002\u56e0\u6b64\uff0c\\(Q\\) \u7684\u6240\u6709\u5176\u4ed6\u672c\u5f81\u503c \\(\\lambda_Q' = \\mu - \\alpha\\) \u90fd\u5c06\u6ee1\u8db3 \\(\\text{Re}(\\lambda_Q') &lt; 0\\)\u3002\u8fd9\u4e9b\u5bf9\u5e94\u4e8e\u8d1f\u5b9e\u90e8\u7684\u672c\u5f81\u503c\u4ee3\u8868\u4e86\u7cfb\u7edf\u4e2d\u6240\u6709\u4f1a\u968f\u65f6\u95f4\u6307\u6570\u8870\u51cf\u7684\"\u6682\u6001\u6a21\u5f0f\"\u3002\u968f\u7740\u65f6\u95f4\u8d8b\u4e8e\u65e0\u7a77\uff0c\u8fd9\u4e9b\u6a21\u5f0f\u90fd\u4f1a\u6d88\u5931\uff0c\u53ea\u7559\u4e0b\u5bf9\u5e94\u4e8e\u672c\u5f81\u503c\u4e3a 0 \u7684\u7a33\u6001\u6a21\u5f0f\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#3","title":"3. \u523b\u753b\u5e73\u8861\uff1a\u7a33\u6001\u8fc7\u7a0b\u4e0e\u53ef\u9006\u8fc7\u7a0b","text":"<p>\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\u4e86\u5728\u4e00\u4e2a\u4e0d\u53ef\u7ea6\u7cfb\u7edf\u4e2d\uff0c\u603b\u4f1a\u5b58\u5728\u4e00\u4e2a\u552f\u4e00\u7684\u7a33\u6001 \\(\\pi\\)\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u63a2\u8ba8\u7cfb\u7edf\u8fbe\u5230\u8fd9\u4e2a\u7a33\u6001\u540e\u7684\u6027\u8d28\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#31-stationary-process","title":"3.1 \u7a33\u6001\u8fc7\u7a0b (Stationary Process)","text":"<p>\u5f53\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b \\(X(t)\\) \u5df2\u7ecf\u8fbe\u5230\u4e86\u5b83\u7684\u7a33\u6001\u5206\u5e03\uff0c\u6211\u4eec\u5c31\u79f0\u4e4b\u4e3a\u4e00\u4e2a\u7a33\u6001\u8fc7\u7a0b\u3002\u5176\u7edf\u8ba1\u7279\u6027\u5728\u65f6\u95f4\u5e73\u79fb\u4e0b\u4fdd\u6301\u4e0d\u53d8\u3002\u8fd9\u610f\u5473\u7740\uff1a</p> <ul> <li> <p>\u5728\u4efb\u4f55\u65f6\u523b \\(t\\)\uff0c\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001 \\(n\\) \u7684\u6982\u7387\u90fd\u662f\u6052\u5b9a\u7684\uff0c\u5373 \\(\\text{Prob}\\{X(t) = n\\} = \\pi_n\\)\u3002</p> </li> <li> <p>\u7cfb\u7edf\u7684\u8054\u5408\u6982\u7387\u53ea\u4f9d\u8d56\u4e8e\u65f6\u95f4\u95f4\u9694\uff0c\u800c\u4e0e\u7edd\u5bf9\u65f6\u95f4\u65e0\u5173\u3002\u4f8b\u5982\uff0c\\(\\text{Prob}\\{X(t_1) = n_1, X(t_2) = n_2\\}\\) \u7684\u503c\u53ea\u53d6\u51b3\u4e8e\u65f6\u95f4\u5dee \\(t_2 - t_1\\)\u3002</p> </li> </ul>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#32-reversible-process","title":"3.2 \u53ef\u9006\u8fc7\u7a0b (Reversible Process)","text":"<p>\u53ef\u9006\u6027\u662f\u4e00\u4e2a\u66f4\u5f3a\u3001\u4e5f\u66f4\u5fae\u5999\u7684\u6761\u4ef6\u3002\u4e00\u4e2a\u7a33\u6001\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u53ef\u9006\u7684\uff0c\u5982\u679c\u5b83\u7684\u7edf\u8ba1\u7279\u6027\u5728\u65f6\u95f4\u53cd\u6f14\u4e0b\u4e5f\u4fdd\u6301\u4e0d\u53d8\u3002\u8fd9\u6709\u4e00\u4e2a\u975e\u5e38\u76f4\u89c2\u7684\u7269\u7406\u89e3\u91ca\uff1a\u60f3\u8c61\u4e00\u4e0b\u6211\u4eec\u7528\u6444\u50cf\u673a\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u6f14\u5316\u8f68\u8ff9\uff0c\u7136\u540e\u5c06\u5f55\u50cf\u5e26\u5012\u7740\u64ad\u653e\u3002\u5982\u679c\u4ece\u7edf\u8ba1\u4e0a\u770b\uff0c\u5012\u653e\u7684\u5f71\u7247\u548c\u4e00\u4e2a\u6b63\u5e38\u64ad\u653e\u7684\u5f71\u7247\u662f\u65e0\u6cd5\u533a\u5206\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u53ef\u9006\u7684\u3002</p> <p>\u5f62\u5f0f\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u72b6\u6001\u5e8f\u5217\u7684\u8054\u5408\u6982\u7387\u7b49\u4e8e\u5176\u65f6\u95f4\u53cd\u6f14\u5e8f\u5217\u7684\u8054\u5408\u6982\u7387\uff1a</p> \\[\\text{Prob}\\{X(t_1) = n_1, \\ldots, X(t_k) = n_k\\} = \\text{Prob}\\{X(t_1) = n_k, \\ldots, X(t_k) = n_1\\}\\] <p>\u5982\u679c\u4e00\u4e2a\u8fc7\u7a0b\u662f\u53ef\u9006\u7684\uff0c\u90a3\u4e48\u5b83\u5fc5\u7136\u662f\u7a33\u6001\u7684\u3002\u56e0\u4e3a\u5982\u679c\u7edf\u8ba1\u7279\u6027\u5728\u65f6\u95f4\u4e0a\u5b58\u5728\u4e00\u4e2a\"\u7bad\u5934\"\uff08\u4f8b\u5982\uff0c\u6982\u7387\u5206\u5e03\u6b63\u5728\u6f14\u5316\uff09\uff0c\u90a3\u4e48\u6b63\u653e\u548c\u5012\u653e\u7684\u5f71\u7247\u5728\u7edf\u8ba1\u4e0a\u5c31\u4f1a\u6709\u660e\u663e\u7684\u533a\u522b\u3002\u56e0\u6b64\uff0c\u65f6\u95f4\u53cd\u6f14\u5bf9\u79f0\u6027\u8574\u542b\u4e86\u65f6\u95f4\u5e73\u79fb\u5bf9\u79f0\u6027\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#4","title":"4. \u7ec6\u81f4\u5e73\u8861\uff1a\u70ed\u529b\u5b66\u5e73\u8861\u7684\u5fae\u89c2\u6807\u5fd7","text":"<p>\u53ef\u9006\u6027\u8fd9\u4e2a\u770b\u4f3c\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u5177\u4f53\u800c\u5f3a\u5927\u7684\u6570\u5b66\u6761\u4ef6\u6765\u8868\u8fbe\uff0c\u8fd9\u5c31\u662f\u7ec6\u81f4\u5e73\u8861 (Detailed Balance)\u3002</p> <p>\u5728\u968f\u673a\u8fc7\u7a0b\u7406\u8bba\u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u8fbe\u5230\u7a33\u6001\uff08steady state\uff09\u7684\u7cfb\u7edf\u90fd\u5fc5\u987b\u6ee1\u8db3\u4e00\u4e2a\u57fa\u672c\u6761\u4ef6\uff0c\u5373\u603b\u4f53\u5e73\u8861\uff08Overall Balance\uff09\u3002\u8fd9\u4e2a\u6761\u4ef6\u6307\u7684\u662f\uff0c\u5bf9\u4e8e\u7cfb\u7edf\u4e2d\u4efb\u610f\u4e00\u4e2a\u72b6\u6001\uff0c\u6240\u6709\u6d41\u5165\u8be5\u72b6\u6001\u7684\u603b\u6982\u7387\u901a\u91cf\u5fc5\u987b\u7cbe\u786e\u7b49\u4e8e\u6240\u6709\u4ece\u8be5\u72b6\u6001\u6d41\u51fa\u7684\u603b\u6982\u7387\u901a\u91cf\uff0c\u5426\u5219\u8be5\u72b6\u6001\u7684\u6982\u7387\u5c31\u4f1a\u968f\u65f6\u95f4\u53d8\u5316\uff0c\u7cfb\u7edf\u4e5f\u5c31\u4e0d\u662f\u7a33\u6001\u4e86 \u3002\u7136\u800c\uff0c\u603b\u4f53\u5e73\u8861\u5141\u8bb8\u7cfb\u7edf\u5185\u90e8\u5b58\u5728\u6301\u7eed\u7684\u51c0\u6982\u7387\u73af\u6d41\uff08net currents\uff09\uff0c\u5c31\u50cf\u4e00\u4e2a\u73af\u5f62\u6c34\u7ba1\u7cfb\u7edf\uff0c\u867d\u7136\u6bcf\u4e2a\u70b9\u7684\u6c34\u4f4d\uff08\u6982\u7387\uff09\u4fdd\u6301\u4e0d\u53d8\uff0c\u4f46\u6c34\u6d41\uff08\u6982\u7387\u6d41\uff09\u53ef\u4ee5\u6301\u7eed\u5730\u5355\u5411\u6d41\u52a8 \u3002</p> <p>\u201c\u7ec6\u81f4\u5e73\u8861\u201d\u5219\u662f\u4e00\u4e2a\u66f4\u4e3a\u4e25\u683c\u3001\u4e5f\u66f4\u4e3a\u6df1\u523b\u7684\u7269\u7406\u6761\u4ef6\u3002\u5b83\u4e0d\u4ec5\u8981\u6c42\u6bcf\u4e2a\u72b6\u6001\u7684\u603b\u6d41\u5165\u548c\u603b\u6d41\u51fa\u76f8\u7b49\uff0c\u8fd8\u8981\u6c42\u5728\u6bcf\u4e00\u5bf9\u76f4\u63a5\u76f8\u8fde\u7684\u72b6\u6001\u4e4b\u95f4\uff0c\u53cc\u5411\u7684\u6982\u7387\u6d41\u90fd\u7cbe\u786e\u76f8\u7b49 \u3002\u5176\u6838\u5fc3\u601d\u60f3\u53ef\u4ee5\u6982\u62ec\u4e3a\uff1a</p> <p>\u5728\u4e00\u4e2a\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u7684\u7a33\u6001\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u72b6\u6001 \\(j\\) \u548c \\(k\\)\uff0c\u4ece\u72b6\u6001 \\(j\\) \u8f6c\u79fb\u5230\u72b6\u6001 \\(k\\) \u7684\u901f\u7387\uff0c\u7cbe\u786e\u5730\u7b49\u4e8e\u4ece\u72b6\u6001 \\(k\\) \u53cd\u5411\u8f6c\u79fb\u56de\u72b6\u6001 \\(j\\) \u7684\u901f\u7387\u3002</p> <p></p> <p>\u8fd9\u5f20\u56fe\u7684\u6838\u5fc3\u5728\u4e8e\u5bf9\u6bd4\u4e24\u79cd\u4e0d\u540c\u7684\u5e73\u8861\u6761\u4ef6\uff0c\u5b83\u4eec\u63cf\u8ff0\u4e86\u5728\u7a33\u6001\u4e0b\u6982\u7387\u5982\u4f55\u5728\u4e0d\u540c\u72b6\u6001\u4e4b\u95f4\u6d41\u52a8\u548c\u5206\u5e03\u3002</p> <p>\u5de6\u56fe\u662f\u603b\u4f53\u5e73\u8861\u3002\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u590d\u6742\u7684\u3001\u5e26\u6709\u8bb8\u591a\u95ed\u73af\uff08loops\uff09\u7684\u201c\u7f51\u72b6\u201d\u72b6\u6001\u7f51\u7edc\u3002\u84dd\u8272\u7684\u66f2\u7ebf\u201cCut\u201d\u5c06\u6574\u4e2a\u72b6\u6001\u7a7a\u95f4\u4efb\u610f\u5730\u5206\u6210\u4e86\u4e24\u4e2a\u5b50\u96c6\uff0c\\(S_+\\) \u548c \\(S_-\\)\u3002\u8fd9\u4ee3\u8868\u4e86\u4efb\u4f55\u7a33\u6001\u90fd\u5fc5\u987b\u6ee1\u8db3\u7684\u6700\u57fa\u672c\u6761\u4ef6\u2014\u2014\u603b\u4f53\u5e73\u8861\u3002\u5b83\u7684\u610f\u601d\u662f\uff0c\u5728\u7a33\u6001\u4e0b\uff0c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u79cd\u5212\u5206\u7cfb\u7edf\u7684\u65b9\u5f0f\uff0c\u4ece \\(S_-\\) \u5b50\u96c6\u603b\u5171\u6d41\u5165 \\(S_+\\) \u5b50\u96c6\u7684\u6982\u7387\u901a\u91cf\uff08\u6240\u6709\u8de8\u8d8a\u8fb9\u754c\u7684\u7bad\u5934\u6d41\u91cf\u4e4b\u548c\uff09\uff0c\u5fc5\u987b\u7cbe\u786e\u5730\u7b49\u4e8e\u4ece \\(S_+\\) \u603b\u5171\u6d41\u56de \\(S_-\\) \u7684\u6982\u7387\u901a\u91cf\u3002</p> <p>\u5982\u679c\u8fd9\u4e24\u4e2a\u603b\u901a\u91cf\u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u6982\u7387\u5c31\u4f1a\u5728\u5176\u4e2d\u4e00\u4e2a\u5b50\u96c6\u4e2d\u4e0d\u65ad\u7d2f\u79ef\uff0c\u5bfc\u81f4\u6982\u7387\u5206\u5e03\u968f\u65f6\u95f4\u53d8\u5316\uff0c\u8fd9\u5c31\u4e0e\u201c\u7a33\u6001\u201d\u7684\u5b9a\u4e49\u76f8\u77db\u76fe\u3002\u603b\u4f53\u5e73\u8861\u662f\u4e00\u4e2a\u666e\u9002\u7684\u6761\u4ef6\uff0c\u4f46\u5b83\u5141\u8bb8\u5b58\u5728\u51c0\u73af\u6d41\uff08net currents\uff09\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u5b58\u5728\u4e00\u4e2a \\(A\\to B\\to C\\to A\\) \u7684\u51c0\u6982\u7387\u73af\u6d41\uff0c\u53ea\u8981\u6d41\u5165\u548c\u6d41\u51fa\u6bcf\u4e2a\u72b6\u6001\uff08\u6216\u6bcf\u4e2a\u5b50\u96c6\uff09\u7684\u603b\u901a\u91cf\u662f\u5e73\u8861\u7684\u5373\u53ef\u3002</p> <p>\u53f3\u56fe\u662f\u7ec6\u81f4\u5e73\u8861\u3002\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u6ca1\u6709\u95ed\u73af\u7684\u201c\u6811\u72b6\u201d\uff08Tree\uff09\u72b6\u6001\u7f51\u7edc\u3002\u8fd9\u91cc\u7684 \u201cCut\u201d \u53ea\u5212\u5206\u4e86\u4e24\u4e2a\u76f4\u63a5\u76f8\u8fde\u7684\u76f8\u90bb\u72b6\u6001\u3002\u5b83\u7684\u610f\u601d\u662f\uff0c\u5728\u7a33\u6001\u4e0b\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u5bf9\u76f4\u63a5\u76f8\u8fde\u7684\u72b6\u6001 \\(j\\) \u548c \\(k\\)\uff0c\u4ece \\(j\\) \u6d41\u5411 \\(k\\) \u7684\u6982\u7387\u901a\u91cf\uff0c\u5fc5\u987b\u7cbe\u786e\u5730\u7b49\u4e8e\u4ece \\(k\\) \u6d41\u56de \\(j\\) \u7684\u6982\u7387\u901a\u91cf\u3002\u201c\u5e73\u8861\u201d\u53d1\u751f\u5728\u6bcf\u4e00\u6761\u5177\u4f53\u7684\u201c\u8fde\u63a5\u8fb9\u201d\u4e0a\uff0c\u800c\u4e0d\u662f\u50cf\u603b\u4f53\u5e73\u8861\u90a3\u6837\u5728\u4e00\u4e2a\u5b8f\u89c2\u7684\u8fb9\u754c\u4e0a\u3002\u7ec6\u81f4\u5e73\u8861\u662f\u4e00\u4e2a\u975e\u5e38\u5f3a\u7684\u7ea6\u675f\u3002\u5982\u679c\u6bcf\u4e00\u5bf9\u72b6\u6001\u4e4b\u95f4\u7684\u6d41\u91cf\u90fd\u7cbe\u786e\u5e73\u8861\uff0c\u90a3\u4e48\u7cfb\u7edf\u5185\u4e0d\u53ef\u80fd\u5b58\u5728\u4efb\u4f55\u51c0\u73af\u6d41\u3002\u7531\u4e8e\u6ca1\u6709\u95ed\u73af\uff0c\u6982\u7387\u6d41\u65e0\u6cd5\u201c\u7ed5\u56de\u6765\u201d\uff0c\u56e0\u6b64\u7cfb\u7edf\u4e3a\u4e86\u7ef4\u6301\u7a33\u6001\uff0c\u5fc5\u987b\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u3002</p> <p>\u603b\u7ed3\u5bf9\u6bd4:</p> \u7279\u6027 \u603b\u4f53\u5e73\u8861 (Overall Balance) \u7ec6\u81f4\u5e73\u8861 (Detailed Balance) \u5e73\u8861\u8303\u56f4 \u4efb\u610f\u5212\u5206\u7684\u5b8f\u89c2\u5b50\u96c6\u8fb9\u754c \u6bcf\u4e00\u5bf9\u76f8\u8fde\u72b6\u6001\u7684\u5fae\u89c2\u8fde\u63a5\u8fb9 \u9002\u7528\u6027 \u6240\u6709\u7a33\u6001\u90fd\u5fc5\u987b\u6ee1\u8db3 \u53ea\u6709\u90e8\u5206\u7279\u5b9a\u7cfb\u7edf\uff08\u53ef\u9006\u8fc7\u7a0b\uff09\u7684\u7a33\u6001\u624d\u6ee1\u8db3 \u73af\u6d41 \u5141\u8bb8\u5b58\u5728\u51c0\u73af\u6d41 \u4e0d\u5141\u8bb8\u5b58\u5728\u4efb\u4f55\u51c0\u73af\u6d41 \u6761\u4ef6\u5f3a\u5ea6 \u8f83\u5f31\u7684\u57fa\u672c\u6761\u4ef6 \u975e\u5e38\u5f3a\u7684\u7ea6\u675f\u6761\u4ef6"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#41","title":"4.1 \u7ec6\u81f4\u5e73\u8861\u6761\u4ef6","text":"<p>\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u662f\u672c\u8282\u8bfe\u540e\u534a\u90e8\u5206\u7684\u6838\u5fc3\u65b9\u7a0b\uff1a</p> \\[\\pi_j w_{j \\to k} = \\pi_k w_{k \\to j}\\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5904\u4e8e\u7a33\u6001 \\(\\pi\\) \u65f6\uff0c\u4efb\u610f\u4e24\u4e2a\u76f8\u4e92\u8fde\u63a5\u7684\u72b6\u6001 \\(j\\) \u548c \\(k\\) \u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#42","title":"4.2 \u7269\u7406\u8be0\u91ca\uff1a\u6ca1\u6709\u51c0\u6982\u7387\u6d41","text":"<p>\u65b9\u7a0b\u7684\u5de6\u4fa7 \\(\\pi_j w_{j \\to k}\\) \u4ee3\u8868\u5728\u7a33\u6001\u4e0b\uff0c\u5355\u4f4d\u65f6\u95f4\u5185\u4ece\u72b6\u6001 \\(j\\) \u6d41\u5411\u72b6\u6001 \\(k\\) \u7684\u6982\u7387\u6d41 (probability flux) \u6216\u6982\u7387\u6d41\u5bc6\u5ea6 (probability current)\u3002\u5b83\u662f\u5728\u72b6\u6001 \\(j\\) \u627e\u5230\u7cfb\u7edf\u7684\u6982\u7387 (\\(\\pi_j\\)) \u4e58\u4ee5\u4ece \\(j\\) \u8f6c\u79fb\u5230 \\(k\\) \u7684\u901f\u7387 (\\(w_{j \\to k}\\))\u3002</p> <p>\u56e0\u6b64\uff0c\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u7684\u7269\u7406\u610f\u4e49\u662f\uff1a\u5728\u7a33\u6001\u4e0b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u76f8\u4e92\u8fde\u63a5\u7684\u72b6\u6001 \\((j,k)\\)\uff0c\u4ece \\(j\\) \u5230 \\(k\\) \u7684\u6982\u7387\u6d41\u7cbe\u786e\u5730\u88ab\u4ece \\(k\\) \u5230 \\(j\\) \u7684\u53cd\u5411\u6982\u7387\u6d41\u6240\u5e73\u8861\u3002\u8fd9\u610f\u5473\u7740\u5728\u7cfb\u7edf\u7684\u4efb\u4f55\u5c40\u90e8\uff0c\u90fd\u6ca1\u6709\u51c0\u7684\u6982\u7387\u6d41\u3002\u6574\u4e2a\u7cfb\u7edf\u867d\u7136\u5185\u90e8\u5728\u4e0d\u505c\u5730\u53d1\u751f\u72b6\u6001\u8f6c\u79fb\uff0c\u4f46\u8fd9\u4e9b\u8f6c\u79fb\u5728\u6bcf\u4e00\u4e2a\"\u5fae\u89c2\"\u7684\u8def\u5f84\u4e0a\u90fd\u662f\u53cc\u5411\u5e73\u8861\u7684\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#43","title":"4.3 \u63a8\u5bfc\uff1a\u53ef\u9006\u6027 \u27fa \u7ec6\u81f4\u5e73\u8861","text":"<p>\u6559\u6388\u5728\u8bfe\u5802\u4e0a\u5c55\u793a\u4e86\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u662f\u53ef\u9006\u6027\u7684\u76f4\u63a5\u6570\u5b66\u4f53\u73b0\u3002\u63a8\u5bfc\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <p>1.\u4ece\u53ef\u9006\u6027\u7684\u5b9a\u4e49\u51fa\u53d1\uff0c\u8003\u8651\u4efb\u610f\u4e24\u4e2a\u72b6\u6001 \\(j,k\\) \u548c\u4e24\u4e2a\u65f6\u523b \\(t, t+\\tau\\)\uff1a $$ \\text{Prob}{X(t) = j, X(t+\\tau) = k} = \\text{Prob}{X(t) = k, X(t+\\tau) = j} $$</p> <p>2.\u5229\u7528\u6761\u4ef6\u6982\u7387\u516c\u5f0f\u5c55\u5f00\uff0c\u5e76\u5047\u8bbe\u8fc7\u7a0b\u5904\u4e8e\u7a33\u6001\uff08\u6982\u7387\u5206\u5e03\u4e3a \\(\\pi\\)\uff09\uff1a $$ P(k, t+\\tau | j, t) \\pi_j = P(j, t+\\tau | k, t) \\pi_k $$</p> <p>3.\u8003\u8651\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u65f6\u95f4\u6b65\u957f \\(\\tau = \\Delta t\\)\u3002\u5bf9\u4e8e \\(j \\neq k\\)\uff0c\u4ece\u72b6\u6001 \\(j\\) \u8f6c\u79fb\u5230\u72b6\u6001 \\(k\\) \u7684\u6761\u4ef6\u6982\u7387\u8fd1\u4f3c\u4e3a \\(P(k, t+\\Delta t | j, t) \\approx w_{j \\to k} \\Delta t\\)\u3002</p> <p>4.\u5c06\u6b64\u8fd1\u4f3c\u4ee3\u5165\u4e0a\u5f0f\uff0c\u5e76\u4e24\u8fb9\u540c\u9664\u4ee5 \\(\\Delta t\\)\uff0c\u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\uff1a $$ w_{j \\to k} \\pi_j = w_{k \\to j} \\pi_k $$</p> <p>\u8fd9\u4e2a\u63a8\u5bfc\u8868\u660e\uff0c\u4e00\u4e2a\u7a33\u6001\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u662f\u53ef\u9006\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#vs","title":"\u5173\u952e\u533a\u522b\uff1a\u5168\u5c40\u5e73\u8861 vs. \u7ec6\u81f4\u5e73\u8861","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u6982\u5ff5\u533a\u5206\uff0c\u5b83\u5173\u7cfb\u5230\u6211\u4eec\u5982\u4f55\u7406\u89e3\u4e0d\u540c\u7c7b\u578b\u7684\u7a33\u6001\u3002 </p> <p>\u6211\u4eec\u4e4b\u524d\u7531 \\(Q\\pi = 0\\) \u5f97\u5230\u7684\u7a33\u6001\u6761\u4ef6\uff0c\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5168\u5c40\u5e73\u8861 (Overall Balance) \u6761\u4ef6\u3002\u5b83\u8981\u6c42\u6bcf\u4e2a\u72b6\u6001\u7684\u603b\u6d41\u5165\u6982\u7387\u7b49\u4e8e\u603b\u6d41\u51fa\u6982\u7387\uff1a</p> \\[\\text{\u603b\u6d41\u5165 } j \\text{ \u7684\u6982\u7387\u6d41} = \\sum_{k \\neq j} \\pi_k w_{k \\to j} = \\text{\u603b\u6d41\u51fa } j \\text{ \u7684\u6982\u7387\u6d41} = \\sum_{k \\neq j} \\pi_j w_{j \\to k}\\] <p>\u7ec6\u81f4\u5e73\u8861\u662f\u4e00\u4e2a\u8fdc\u6bd4\u5168\u5c40\u5e73\u8861\u66f4\u5f3a\u7684\u6761\u4ef6\u3002\u5982\u679c\u7ec6\u81f4\u5e73\u8861\u6210\u7acb\uff0c\u5373 \\(\\pi_k w_{k \\to j} = \\pi_j w_{j \\to k}\\) \u5bf9\u6240\u6709 \\(k\\) \u90fd\u6210\u7acb\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e2a\u7b49\u5f0f\u5bf9\u6240\u6709 \\(k \\neq j\\) \u6c42\u548c\uff0c\u81ea\u7136\u5c31\u80fd\u5f97\u5230\u5168\u5c40\u5e73\u8861\u3002\u53cd\u4e4b\u5219\u4e0d\u7136\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u7269\u7406\u7c7b\u6bd4\u6765\u6df1\u523b\u7406\u89e3\u4e8c\u8005\u7684\u533a\u522b\u3002\u60f3\u8c61\u4e00\u4e2a\u6e56\u6cca\u548c\u4e00\u4e2a\u6cb3\u6d41\u3002</p> <ul> <li> <p>\u6e56\u6cca\uff08\u70ed\u529b\u5b66\u5e73\u8861\uff09\uff1a \u6e56\u6c34\u5904\u4e8e\u5e73\u8861\u72b6\u6001\uff0c\u5b8f\u89c2\u6c34\u4f4d\u4e0d\u53d8\u3002\u5728\u5fae\u89c2\u5c42\u9762\uff0c\u6c34\u5206\u5b50\u5728\u4e0d\u505c\u8fd0\u52a8\uff0c\u4f46\u4ece\u4efb\u610f\u70b9A\u5230\u70b9B\u7684\u6c34\u5206\u5b50\u6d41\uff0c\u90fd\u4f1a\u88ab\u4ece\u70b9B\u5230\u70b9A\u7684\u5206\u5b50\u6d41\u7cbe\u786e\u62b5\u6d88\u3002\u8fd9\u5c31\u662f\u7ec6\u81f4\u5e73\u8861\uff0c\u6ca1\u6709\u5b8f\u89c2\u7684\u51c0\u6c34\u6d41\u3002</p> </li> <li> <p>\u6cb3\u6d41\uff08\u975e\u5e73\u8861\u7a33\u6001\uff09\uff1a \u6cb3\u6d41\u7684\u6c34\u4f4d\u4e5f\u53ef\u4ee5\u662f\u7a33\u5b9a\u7684\uff08\u7a33\u6001\uff09\uff0c\u4f46\u6cb3\u6c34\u6574\u4f53\u6709\u4e00\u4e2a\u660e\u786e\u7684\u4e0b\u6e38\u65b9\u5411\u3002\u5728\u4efb\u610f\u4e00\u4e2a\u6a2a\u622a\u9762\uff0c\u4ece\u4e0a\u6e38\u6d41\u5165\u7684\u6c34\u91cf\u7b49\u4e8e\u5411\u4e0b\u6e38\u6d41\u51fa\u7684\u6c34\u91cf\uff0c\u8fd9\u7ef4\u6301\u4e86\u6c34\u4f4d\u7684\u7a33\u5b9a\u3002\u8fd9\u5c31\u662f\u5168\u5c40\u5e73\u8861\u3002\u7136\u800c\uff0c\u5982\u679c\u4f60\u8003\u5bdf\u6cb3\u6d41\u4e2d\u7684\u4e24\u70b9A\u548cB\uff08A\u5728\u4e0a\u6e38\uff09\uff0c\u4eceA\u5230B\u7684\u51c0\u6c34\u6d41\u8fdc\u5927\u4e8e\u4eceB\u5230A\u7684\u9006\u6d41\u3002\u8fd9\u91cc\u5b58\u5728\u7740\u51c0\u7684\u6982\u7387\u6d41\uff08\u6c34\u6d41\uff09\u3002</p> </li> </ul> <p>\u8fd9\u4e2a\u7c7b\u6bd4\u63ed\u793a\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u7269\u7406\u539f\u7406\uff1a\u7ec6\u81f4\u5e73\u8861\u4e0e\u5168\u5c40\u5e73\u8861\u7684\u533a\u522b\uff0c\u6b63\u662f\u5728\u968f\u673a\u8fc7\u7a0b\u4e2d\u5bf9\u70ed\u529b\u5b66\u5e73\u8861 (Thermodynamic Equilibrium) \u548c\u975e\u5e73\u8861\u7a33\u6001 (Non-Equilibrium Steady States, NESS) \u7684\u533a\u5206\u3002</p> <p>\u4e00\u4e2a\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u7684\u7cfb\u7edf\u5904\u4e8e\u771f\u6b63\u7684\u70ed\u529b\u5b66\u5e73\u8861\uff0c\u6ca1\u6709\u80fd\u91cf\u6216\u7269\u8d28\u7684\u51c0\u6d41\u52a8\u3002\u800c\u4e00\u4e2a\u53ea\u6ee1\u8db3\u5168\u5c40\u5e73\u8861\u7684\u7cfb\u7edf\u5219\u5904\u4e8e\u7531\u6301\u7eed\u7684\u5916\u90e8\u9a71\u52a8\uff08\u4f8b\u5982\u80fd\u91cf\u8f93\u5165\uff09\u6240\u7ef4\u6301\u7684\u975e\u5e73\u8861\u7a33\u6001\uff0c\u6bd4\u5982\u4e00\u4e2a\u6d3b\u7ec6\u80de\u3002\u8fd9\u4e2a\u533a\u5206\u5c06\u672c\u8bb2\u5ea7\u7684\u62bd\u8c61\u6570\u5b66\u6982\u5ff5\u4e0e\u7269\u7406\u5b66\u548c\u751f\u7269\u5b66\u4e2d\u7684\u6df1\u523b\u539f\u7406\u8054\u7cfb\u4e86\u8d77\u6765\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#5","title":"5. \u5b9e\u4f8b\u5206\u6790\uff1a\u6a21\u62df\u4e0e\u7269\u7406\u76f4\u89c9","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u901a\u8fc7\u4e24\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u6765\u770b\u770b\u8fd9\u4e9b\u7406\u8bba\u539f\u7406\u5728\u5b9e\u8df5\u4e2d\u662f\u5982\u4f55\u5e94\u7528\u7684\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#51","title":"5.1 \u7ebf\u6027\u751f\u706d\u8fc7\u7a0b\uff1a\u4e00\u4e2a\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u7684\u7cfb\u7edf","text":"<p>\u6211\u4eec\u9996\u5148\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u6b65\u8fc7\u7a0b (one-step process)\uff1a\u7ebf\u6027\u751f\u706d\u8fc7\u7a0b\u3002 </p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#_2","title":"\u6a21\u578b\u8bbe\u5b9a","text":"<p>\u60f3\u8c61\u4e00\u4e2a\u7c92\u5b50\uff08\u6216\u4e2a\u4f53\uff09\u7ec4\u6210\u7684\u79cd\u7fa4\uff0c\u5176\u6570\u91cf\u4e3a \\(n\\)\u3002</p> <ul> <li> <p>\"\u751f\" (Birth): \u6bcf\u4e2a\u7c92\u5b50\u4ee5\u901f\u7387 \\(\\lambda\\) \u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u7c92\u5b50\uff0c\u6240\u4ee5\u4ece\u72b6\u6001 \\(n\\) \u53d8\u4e3a \\(n+1\\) \u7684\u603b\u901f\u7387\u4e3a \\(\\lambda_n = \\lambda n\\)\u3002</p> </li> <li> <p>\"\u706d\" (Death): \u6bcf\u4e2a\u7c92\u5b50\u4ee5\u901f\u7387 \\(\\mu\\) \u6d88\u5931\uff0c\u6240\u4ee5\u4ece\u72b6\u6001 \\(n\\) \u53d8\u4e3a \\(n-1\\) \u7684\u603b\u901f\u7387\u4e3a \\(\\mu_n = \\mu n\\)\u3002</p> </li> </ul> <p>\u8fd9\u662f\u4e00\u4e2a\u4e00\u7ef4\u94fe\u5f0f\u8fc7\u7a0b\uff0c\u72b6\u6001\u53ea\u80fd\u5728\u76f8\u90bb\u6574\u6570\u95f4\u8f6c\u79fb\u3002\u5bf9\u4e8e\u8fd9\u7c7b\u7cfb\u7edf\uff0c\u53ea\u8981\u5b58\u5728\u4e00\u4e2a\u7a33\u6001\uff0c\u5b83\u5c31\u5fc5\u987b\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\uff0c\u56e0\u4e3a\u4e0d\u5b58\u5728\u53ef\u4ee5\u5f62\u6210\u73af\u6d41\u7684\u65c1\u8def\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#_3","title":"\u5229\u7528\u7ec6\u81f4\u5e73\u8861\u6c42\u89e3\u7a33\u6001","text":"<p>\u6211\u4eec\u5e94\u7528\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u4e8e\u76f8\u90bb\u7684\u72b6\u6001 \\(n\\) \u548c \\(n-1\\) \u4e4b\u95f4\uff1a</p> \\[\\pi_{n-1} w_{n-1 \\to n} = \\pi_n w_{n \\to n-1}\\] <p>\u4ee3\u5165\u8f6c\u79fb\u901f\u7387\uff1a</p> \\[\\pi_{n-1} \\cdot \\lambda(n-1) = \\pi_n \\cdot \\mu n\\] <p>\u8fd9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5173\u4e8e\u7a33\u6001\u6982\u7387\u7684\u9012\u63a8\u5173\u7cfb\uff1a</p> \\[\\pi_n = \\pi_{n-1} \\frac{\\lambda(n-1)}{\\mu n}\\] <p>\u6211\u4eec\u53ef\u4ee5\u4ece \\(\\pi_1\\) \u5f00\u59cb\u9012\u63a8\uff1a</p> \\[\\pi_1 = \\pi_0 \\frac{\\lambda \\cdot 0}{\\mu \\cdot 1} = 0\\] <p>\u65e2\u7136 \\(\\pi_1 = 0\\)\uff0c\u90a3\u4e48 \\(\\pi_2 = \\pi_1 \\frac{\\lambda \\cdot 1}{\\mu \\cdot 2} = 0\\)\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5bf9\u4e8e\u6240\u6709 \\(n &gt; 0\\)\uff0c\u90fd\u6709 \\(\\pi_n = 0\\)\u3002</p> <p>\u8fd9\u610f\u5473\u7740\uff0c\u5bf9\u4e8e\u7ebf\u6027\u7684\u751f\u706d\u8fc7\u7a0b\uff0c\u65e0\u8bba\u51fa\u751f\u7387 \\(\\lambda\\) \u548c\u6b7b\u4ea1\u7387 \\(\\mu\\) \u7684\u5927\u5c0f\u5982\u4f55\uff0c\u7cfb\u7edf\u552f\u4e00\u7684\u7a33\u6001\u5c31\u662f\u706d\u7edd\u72b6\u6001\uff0c\u5373 \\(\\pi_0 = 1\\)\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7ed3\u8bba\uff0c\u8bf4\u660e\u4e86\u5728\u8fd9\u79cd\u7b80\u5355\u7684\u7ebf\u6027\u6a21\u578b\u4e2d\uff0c\u79cd\u7fa4\u7684\u968f\u673a\u6ce2\u52a8\u6700\u7ec8\u5c06\u4e0d\u53ef\u907f\u514d\u5730\u5bfc\u81f4\u5176\u6d88\u4ea1\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#python-gillespie","title":"Python \u6a21\u62df (Gillespie \u7b97\u6cd5)","text":"<p>\u4e3a\u4e86\u9a8c\u8bc1\u8fd9\u4e2a\u7406\u8bba\u9884\u6d4b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Gillespie \u7b97\u6cd5\u8fdb\u884c\u7cbe\u786e\u7684\u968f\u673a\u6a21\u62df\u3002Gillespie \u7b97\u6cd5\u662f\u6a21\u62df\u5316\u5b66\u53cd\u5e94\u548c\u79cd\u7fa4\u52a8\u6001\u5b66\u7b49\u968f\u673a\u8fc7\u7a0b\u7684\u9ec4\u91d1\u6807\u51c6\u3002</p> <p>\u4ee5\u4e0b\u662f\u6a21\u62df\u7ebf\u6027\u751f\u706d\u8fc7\u7a0b\u7684 Python \u4ee3\u7801\u3002\u4ee3\u7801\u903b\u8f91\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u5728\u4efb\u610f\u72b6\u6001 \\(n\\)\uff0c\u8ba1\u7b97\u603b\u4e8b\u4ef6\u53d1\u751f\u7387 \\(R_{total} = \\lambda n + \\mu n\\)\u3002</p> </li> <li> <p>\u4ece\u6307\u6570\u5206\u5e03\u4e2d\u62bd\u53d6\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u95f4\u95f4\u9694 \\(\\Delta t \\sim \\text{Exp}(R_{total})\\)\u3002</p> </li> <li> <p>\u901a\u8fc7\u6bd4\u8f83\u4e00\u4e2a\u5747\u5300\u968f\u673a\u6570\u548c\u6bd4\u7387 \\(\\frac{\\lambda n}{R_{total}}\\)\uff0c\u6765\u51b3\u5b9a\u53d1\u751f\u7684\u4e8b\u4ef6\u662f\"\u751f\"\u8fd8\u662f\"\u706d\"\u3002</p> </li> <li> <p>\u66f4\u65b0\u79cd\u7fa4\u6570\u91cf \\(n\\) \u548c\u65f6\u95f4 \\(t\\)\u3002</p> </li> <li> <p>\u91cd\u590d\u6b64\u8fc7\u7a0b\uff0c\u76f4\u5230\u8fbe\u5230\u8bbe\u5b9a\u7684\u6700\u957f\u65f6\u95f4\u3002</p> </li> </ol> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef linear_birth_death_gillespie(n0, lamb, mu, t_max):\n    \"\"\"\n    Simulate linear birth-death process using Gillespie algorithm.\n\n    Parameters:\n    n0 (int): Initial population size\n    lamb (float): Birth rate per individual (lambda)\n    mu (float): Death rate per individual (mu)\n    t_max (float): Maximum simulation time\n\n    Returns:\n    tuple: (list of time points, list of population sizes)\n    \"\"\"\n    t = 0.0\n    n = n0\n\n    times = [t]\n    populations = [n]\n\n    while t &lt; t_max:\n        if n == 0:\n            # Population extinct, process stops\n            break\n\n        # Calculate total rate\n        birth_rate = lamb * n\n        death_rate = mu * n\n        total_rate = birth_rate + death_rate\n\n        # Calculate time to next event\n        dt = np.random.exponential(1.0 / total_rate)\n        t += dt\n\n        # Decide whether it's a birth or death\n        if np.random.rand() &lt; birth_rate / total_rate:\n            n += 1  # Birth\n        else:\n            n -= 1  # Death\n\n        times.append(t)\n        populations.append(n)\n\n    return np.array(times), np.array(populations)\n\n# --- Simulation parameters ---\ninitial_population = 10\nlambda_rate = 1.0  # Birth rate\nmu_rate = 1.1      # Death rate (slightly greater than birth rate to accelerate extinction)\nsimulation_time = 50.0\nnum_simulations = 500\n\n# --- Run multiple simulations ---\nfinal_populations = []\nplt.figure(figsize=(12, 8))\n\n# Plot some example trajectories\nplt.subplot(2, 1, 1)\nfor i in range(5):\n    times, populations = linear_birth_death_gillespie(initial_population, lambda_rate, mu_rate, simulation_time)\n    plt.step(times, populations, where='post', alpha=0.7)\n\nplt.title(f'Example Trajectories of Linear Birth-Death Process ($n_0={initial_population}, \\\\lambda={lambda_rate}, \\\\mu={mu_rate}$)')\nplt.xlabel('Time')\nplt.ylabel('Population Size')\nplt.grid(True)\n\n# Collect final population sizes\nfor _ in range(num_simulations):\n    _, populations = linear_birth_death_gillespie(initial_population, lambda_rate, mu_rate, simulation_time)\n    final_populations.append(populations[-1])\n\n# Plot histogram of final population sizes\nplt.subplot(2, 1, 2)\nplt.hist(final_populations, bins=np.arange(-0.5, max(final_populations) + 1.5, 1), density=True, rwidth=0.8)\nplt.title(f'Distribution of Final Population Size after {num_simulations} Simulations (Steady State)')\nplt.xlabel('Final Population Size')\nplt.ylabel('Probability Density')\nplt.xticks(np.arange(0, max(final_populations) + 1, 1))\nplt.grid(True)\n\nplt.tight_layout()\nplt.rcParams['font.sans-serif'] = ['SimHei']  # Used to properly display Chinese labels\nplt.rcParams['axes.unicode_minus'] = False  # Used to properly display minus sign\nplt.show()\n</code></pre> </p> <p>\u6a21\u62df\u7ed3\u679c\u6e05\u6670\u5730\u663e\u793a\uff0c\u5c3d\u7ba1\u5355\u6761\u8f68\u8ff9\u4f1a\u968f\u673a\u6ce2\u52a8\uff0c\u4f46\u6700\u7ec8\u6240\u6709\u8f68\u8ff9\u90fd\u8d8b\u5411\u4e8e 0\u3002\u6700\u7ec8\u79cd\u7fa4\u6570\u91cf\u7684\u76f4\u65b9\u56fe\u8868\u660e\uff0c\u5728\u8db3\u591f\u957f\u7684\u65f6\u95f4\u540e\uff0c\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001 0 \u7684\u6982\u7387\u8d8b\u8fd1\u4e8e 1\uff0c\u8fd9\u4e0e\u6211\u4eec\u901a\u8fc7\u7ec6\u81f4\u5e73\u8861\u5f97\u5230\u7684\u89e3\u6790\u89e3 \\(\\pi_0 = 1, \\pi_{n&gt;0} = 0\\) \u5b8c\u5168\u543b\u5408\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#52","title":"5.2 \u5e26\u5438\u6536\u8fb9\u754c\u7684\u4e00\u7ef4\u968f\u673a\u6e38\u8d70\uff1a\u4e00\u4e2a\u6ca1\u6709\u975e\u5e73\u51e1\u7a33\u6001\u7684\u7cfb\u7edf","text":"<p>\u73b0\u5728\u6211\u4eec\u8f6c\u5411\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5b83\u5c06\u5c55\u793a\u5f53PF\u5b9a\u7406\u7684\u524d\u63d0\u6761\u4ef6\u88ab\u7834\u574f\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#_4","title":"\u4e00\u7ef4\u968f\u673a\u6e38\u8d70\u6a21\u578b","text":"<p>\u8003\u8651\u4e00\u4e2a\u7c92\u5b50\u5728\u4e00\u7ef4\u6574\u6570\u683c\u70b9\u4e0a\u8fdb\u884c\u968f\u673a\u6e38\u8d70\u3002\u5047\u8bbe\u5728\u4f4d\u7f6e 0 \u5904\u6709\u4e00\u4e2a\u5438\u6536\u8fb9\u754c (Absorbing Boundary)\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4e00\u65e6\u7c92\u5b50\u5230\u8fbe\u4f4d\u7f6e 0\uff0c\u5b83\u5c31\u4f1a\u88ab\"\u5438\u6536\"\u5e76\u6c38\u8fdc\u505c\u7559\u5728\u90a3\u91cc\uff0c\u8fc7\u7a0b\u7ed3\u675f\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#-","title":"\u4e3a\u4f55\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\u5931\u6548\uff1f","text":"<p>\u8fd9\u4e2a\u7cfb\u7edf\u662f\u53ef\u5206\u89e3\u7684 (reducible)\u3002\u72b6\u6001 0 \u662f\u4e00\u4e2a\u9677\u9631\u3002\u7c92\u5b50\u53ef\u4ee5\u4ece\u4efb\u4f55\u72b6\u6001 \\(n &gt; 0\\) \u7ecf\u8fc7\u4e00\u7cfb\u5217\u6b65\u9aa4\u5230\u8fbe\u72b6\u6001 0\uff0c\u4f46\u6c38\u8fdc\u65e0\u6cd5\u4ece\u72b6\u6001 0 \u8fd4\u56de\u5230\u4efb\u4f55 \\(n &gt; 0\\) \u7684\u72b6\u6001\u3002\u7528\u56fe\u8bba\u7684\u8bed\u8a00\u6765\u8bf4\uff0c\u8fd9\u4e2a\u7cfb\u7edf\u7684\u72b6\u6001\u56fe\u4e0d\u662f\u5f3a\u8fde\u901a\u7684\u3002\u56e0\u6b64\uff0c\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\u7684\u4e0d\u53ef\u5206\u89e3\u6027\u6761\u4ef6\u4e0d\u88ab\u6ee1\u8db3\uff0c\u6211\u4eec\u4e0d\u518d\u88ab\u4fdd\u8bc1\u4f1a\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u3001\u6240\u6709\u5206\u91cf\u90fd\u4e3a\u6b63\u7684\u7a33\u6001\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#_5","title":"\u5e73\u51e1\u7684\"\u7a33\u6001\"","text":"<p>\u8fd9\u4e2a\u7cfb\u7edf\u7684\u957f\u671f\u884c\u4e3a\u662f\u786e\u5b9a\u65e0\u7591\u7684\uff1a\u6700\u7ec8\u88ab\u5438\u6536\u3002\u968f\u7740\u65f6\u95f4\u63a8\u79fb\uff0c\u7c92\u5b50\u5904\u4e8e\u4efb\u4f55\u72b6\u6001 \\(n &gt; 0\\) \u7684\u6982\u7387\u90fd\u4f1a\u8870\u51cf\u5230 0\uff0c\u800c\u5904\u4e8e\u72b6\u6001 0 \u7684\u6982\u7387\u5219\u4f1a\u8d8b\u5411\u4e8e 1\u3002\u56e0\u6b64\uff0c\u7cfb\u7edf\u5b58\u5728\u4e00\u4e2a\u7a33\u6001\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u5e73\u51e1\u7684 (trivial) \u7a33\u6001\uff1a\\(\\pi_0 = 1, \\pi_{n&gt;0} = 0\\)\u3002\u4e0d\u5b58\u5728\u4e00\u4e2a\u8ba9\u6240\u6709\u72b6\u6001\u90fd\u6709\u975e\u96f6\u6982\u7387\u88ab\u8bbf\u95ee\u7684\u52a8\u6001\u5e73\u8861\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#python","title":"Python \u6a21\u62df","text":"<p>\u4e0b\u9762\u7684 Python \u4ee3\u7801\u6a21\u62df\u4e86\u591a\u4e2a\u4ece\u540c\u4e00\u70b9\u51fa\u53d1\u7684\u968f\u673a\u6e38\u8d70\u7c92\u5b50\uff0c\u76f4\u5230\u5b83\u4eec\u88ab\u5438\u6536\u8fb9\u754c\u6355\u83b7\u4e3a\u6b62\u3002\u901a\u8fc7\u53ef\u89c6\u5316\u8fd9\u4e9b\u8f68\u8ff9\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u89c2\u5730\u7406\u89e3\u4e3a\u4ec0\u4e48\u7cfb\u7edf\u65e0\u6cd5\u7ef4\u6301\u4e00\u4e2a\u975e\u5e73\u51e1\u7684\u7a33\u6001\u3002</p> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef random_walk_1d_two_boundaries(start_pos, n_steps, boundary_left=0, boundary_right=10):\n    \"\"\"\n    Simulate a one-dimensional random walk with two absorbing boundaries.\n\n    Parameters:\n    start_pos (int): Initial position\n    n_steps (int): Maximum number of steps\n    boundary_left (int): Position of the left absorbing boundary\n    boundary_right (int): Position of the right absorbing boundary\n\n    Returns:\n    list: List of positions in the walk trajectory\n    \"\"\"\n    position = start_pos\n    path = [position]\n\n    for _ in range(n_steps):\n        # Check if either absorbing boundary has been reached\n        if position == boundary_left or position == boundary_right:\n            # Absorbing boundary reached, stay in place until simulation ends\n            path.append(position)\n            continue\n\n        # Equal probability to move left or right by one step\n        step = np.random.choice([-1, 1])\n        position += step\n        path.append(position)\n\n    return path\n\n# --- Simulation parameters ---\ninitial_position = 5\nmax_steps = 500\nnum_trajectories = 20\nboundary_left_pos = 0\nboundary_right_pos = 20\n\n# --- Run and plot multiple trajectories ---\nplt.figure(figsize=(12, 7))\n\nfor i in range(num_trajectories):\n    path = random_walk_1d_two_boundaries(\n        initial_position, \n        max_steps, \n        boundary_left_pos, \n        boundary_right_pos\n    )\n    # To make trajectories clearer, give different trajectories some color variation\n    plt.plot(path, alpha=0.7, color=plt.cm.cool(i / num_trajectories))\n\n# Plot absorbing boundaries\nplt.axhline(y=boundary_left_pos, color='r', linestyle='--', linewidth=2, label=f'Left Absorbing Boundary (Position {boundary_left_pos})')\nplt.axhline(y=boundary_right_pos, color='r', linestyle='--', linewidth=2, label=f'Right Absorbing Boundary (Position {boundary_right_pos})')\n\nplt.title(f'{num_trajectories} Random Walk Trajectories in [{boundary_left_pos}, {boundary_right_pos}] Interval')\nplt.xlabel('Steps')\nplt.ylabel('Position')\nplt.legend()\nplt.grid(True)\n# Adjust y-axis range to better display boundaries\nplt.ylim(bottom=boundary_left_pos - 1, top=boundary_right_pos + 1) \n\n# Set Chinese font\nplt.rcParams['font.sans-serif'] = ['SimHei']\nplt.rcParams['axes.unicode_minus'] = False \n\nplt.savefig('1D_random_walk_two_boundaries.jpg', dpi=300)\nplt.show()\nplt.close()\n</code></pre> </p> <p>\u8fd9\u5f20\u56fe\u590d\u73b0\u4e86\u6559\u6388\u5728\u9ed1\u677f\u4e0a\u7684\u793a\u610f\u56fe\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5c3d\u7ba1\u6bcf\u6761\u8def\u5f84\u90fd\u662f\u968f\u673a\u7684\uff0c\u4f46\u5b83\u4eec\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u7684\u547d\u8fd0\uff1a\u6700\u7ec8\u90fd\u4f1a\u4e0d\u53ef\u907f\u514d\u5730\u649e\u4e0a\u67d0\u4e00\u4e2a\u5438\u6536\u8fb9\u754c\uff08\u5de6\u6216\u53f3\uff09\u5e76\u7ec8\u6b62\u5728\u90a3\u91cc\u3002\u8fd9\u5f20\u56fe\u76f4\u89c2\u5730\u5c55\u793a\u4e86\u6982\u7387\u662f\u5982\u4f55\u4ece\u5185\u90e8\u72b6\u6001\uff08\u4f8b\u5982 \\(0&lt;n&lt;20\\)\uff09\u4e2d\u201c\u6cc4\u6f0f\u201d\u51fa\u53bb\uff0c\u5e76\u6700\u7ec8\u6c47\u96c6\u5230\u5438\u6536\u8fb9\u754c\u6001\u4e0a\u3002\u8fd9\u6e05\u6670\u5730\u8bf4\u660e\u4e86\uff0c\u5f53\u7cfb\u7edf\u53ef\u5206\u89e3\u65f6\uff0c\u6982\u7387\u4f1a\u6d41\u5411\u90a3\u4e9b\u201c\u9677\u9631\u201d\u72b6\u6001\uff0c\u4ece\u800c\u65e0\u6cd5\u5f62\u6210\u4e00\u4e2a\u8986\u76d6\u6574\u4e2a\u72b6\u6001\u7a7a\u95f4\u7684\u3001\u52a8\u6001\u7684\u3001\u975e\u5e73\u51e1\u7684\u7a33\u6001\u3002</p>"},{"location":"zh/notes/8.%20%E4%BD%A9%E9%BE%99-%E5%BC%97%E7%BD%97%E8%B4%9D%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%AE%9A%E7%90%86%E3%80%81%E7%A8%B3%E6%80%81%E4%B8%8E%E7%BB%86%E8%87%B4%E5%B9%B3%E8%A1%A1/#_6","title":"\u7ed3\u8bba","text":"<p>\u672c\u8282\u8bfe\u6559\u6388\u5e26\u9886\u6211\u4eec\u5b8c\u6210\u4e86\u4e00\u6bb5\u4ece\u63d0\u51fa\u95ee\u9898\u5230\u89e3\u51b3\u95ee\u9898\u7684\u5b8c\u6574\u65c5\u7a0b\u3002\u6211\u4eec\u4ece\u4e00\u4e2a\u57fa\u672c\u95ee\u9898\u5f00\u59cb\uff1a\u7531 \\(Q\\) \u77e9\u9635\u63cf\u8ff0\u7684\u968f\u673a\u8fc7\u7a0b\uff0c\u5176\u957f\u671f\u884c\u4e3a\u662f\u5426\u662f\u53ef\u9884\u6d4b\u4e14\u552f\u4e00\u7684\uff1f</p> <ol> <li> <p>\u4f69\u9f99-\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u5b9a\u7406\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u6838\u5fc3\u6570\u5b66\u6b66\u5668\u3002\u8be5\u5b9a\u7406\u4fdd\u8bc1\u4efb\u4f55\u4e0d\u53ef\u7ea6\u7684\u7cfb\u7edf\u2014\u2014\u5373\u5185\u90e8\u6240\u6709\u90e8\u5206\u90fd\u76f8\u4e92\u8fde\u901a\u7684\u7cfb\u7edf\u2014\u2014\u90fd\u5c06\u6536\u655b\u5230\u4e00\u4e2a\u552f\u4e00\u7684\u3001\u6240\u6709\u72b6\u6001\u90fd\u53ef\u80fd\u88ab\u8bbf\u95ee\u5230\u7684\u7a33\u6001\u3002\u8fd9\u4e3a\u5927\u91cf\u7269\u7406\u3001\u5316\u5b66\u548c\u751f\u7269\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u7406\u8bba\u57fa\u7840\u3002</p> </li> <li> <p>\u63a5\u7740\uff0c\u6211\u4eec\u6df1\u5165\u63a2\u7a76\u4e86\u7a33\u6001\u7684\u7269\u7406\u672c\u8d28\u3002\u901a\u8fc7\u5f15\u5165\u53ef\u9006\u6027\u548c\u7ec6\u81f4\u5e73\u8861\u7684\u6982\u5ff5\uff0c\u6211\u4eec\u5b66\u4f1a\u4e86\u5982\u4f55\u533a\u5206\u4e24\u79cd\u6839\u672c\u4e0d\u540c\u7c7b\u578b\u7684\u7a33\u6001\u3002\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u7684\u7cfb\u7edf\u5904\u4e8e\u771f\u6b63\u7684\u70ed\u529b\u5b66\u5e73\u8861\uff0c\u5185\u90e8\u6ca1\u6709\u4efb\u4f55\u51c0\u7684\u6d41\u52a8\uff1b\u800c\u53ea\u6ee1\u8db3\u5168\u5c40\u5e73\u8861\u7684\u7cfb\u7edf\u5219\u53ef\u80fd\u5904\u4e8e\u4e00\u4e2a\u7531\u5916\u90e8\u9a71\u52a8\u7ef4\u6301\u7684\u975e\u5e73\u8861\u7a33\u6001\u3002\u8fd9\u4e2a\u533a\u5206\u662f\u8054\u7cfb\u968f\u673a\u8fc7\u7a0b\u7406\u8bba\u4e0e\u7edf\u8ba1\u7269\u7406\u5b66\u7684\u5173\u952e\u6865\u6881\u3002</p> </li> <li> <p>\u6700\u540e\uff0c\u901a\u8fc7\u4e24\u4e2a\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u770b\u5230\u4e86\u8fd9\u4e9b\u539f\u7406\u7684\u5b9e\u9645\u5e94\u7528\u3002\u7ebf\u6027\u751f\u706d\u8fc7\u7a0b\u5c55\u793a\u4e86\u4e00\u4e2a\u7cfb\u7edf\u5982\u4f55\u5728\u7ec6\u81f4\u5e73\u8861\u7684\u6761\u4ef6\u4e0b\u8fbe\u5230\u4e00\u4e2a\uff08\u867d\u7136\u662f\u5e73\u51e1\u7684\uff09\u5e73\u8861\u6001\u3002\u800c\u5e26\u5438\u6536\u8fb9\u754c\u7684\u968f\u673a\u6e38\u8d70\u5219\u6e05\u6670\u5730\u8b66\u793a\u6211\u4eec\uff0c\u5f53\u4e0d\u53ef\u7ea6\u6027\u8fd9\u4e2a\u5173\u952e\u6761\u4ef6\u88ab\u7834\u574f\u65f6\uff0c\u7cfb\u7edf\u5c06\u65e0\u6cd5\u7ef4\u6301\u52a8\u6001\u5e73\u8861\uff0c\u800c\u662f\u4f1a\u8870\u53d8\u5230\u4e00\u4e2a\u6216\u51e0\u4e2a\u5438\u6536\u6001\u4e2d\u3002</p> </li> </ol> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u8282\u8bfe\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u5206\u6790\u5de5\u5177\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u7406\u89e3\u548c\u9884\u6d4b\u4e00\u5927\u7c7b\u968f\u673a\u7cfb\u7edf\u5728\u957f\u65f6\u95f4\u6f14\u5316\u540e\u7684\u6700\u7ec8\u547d\u8fd0\u3002</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/","title":"\u5f15\u8a00","text":"<p>\u8fd9\u8282\u8bfe\u662f\u968f\u673a\u8fc7\u7a0b\u7406\u8bba\u5b66\u4e60\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u8282\u70b9\u3002\u5728\u524d\u51e0\u8bb2\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e3b\u65b9\u7a0b (Master Equation) \u8fd9\u4e00\u6838\u5fc3\u6846\u67b6\uff0c\u5b83\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5728\u4e0d\u540c\u72b6\u6001\u95f4\u8df3\u8f6c\u7684\u6982\u7387\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u4ece\u5355\u7eaf\u63cf\u8ff0\"\u5982\u4f55\"\u6f14\u5316\uff0c\u6df1\u5165\u5230\u63a2\u8ba8\u5176\u80cc\u540e\u66f4\u6df1\u5c42\u6b21\u7684\u7269\u7406\"\u4e3a\u4ec0\u4e48\"\uff0c\u5373\u8fd9\u4e9b\u6f14\u5316\u8fc7\u7a0b\u7684\u70ed\u529b\u5b66\u610f\u4e49\u3002</p> <p>\u6211\u4eec\u5c06\u8e0f\u51fa\u5e73\u8861\u6001\u7684\u7406\u60f3\u4e16\u754c\uff0c\u8fdb\u5165\u4e00\u4e2a\u66f4\u5e7f\u9614\u3001\u66f4\u771f\u5b9e\u7684\u9886\u57df\uff1a\u975e\u5e73\u8861\u6001\u7269\u7406 (Non-equilibrium Physics)\u3002\u5f53\u7ec6\u81f4\u5e73\u8861\u88ab\u6253\u7834\u65f6\uff0c\u7cfb\u7edf\u4f1a\u51fa\u73b0\u6301\u7eed\u7684\u6982\u7387\u6d41\uff0c\u5c31\u50cf\u6cb3\u6d41\u4e2d\u7a33\u5b9a\u7684\u6c34\u6d41\u4e00\u6837\u3002\u8fd9\u79cd\u5355\u5411\u7684\u3001\u4e0d\u53ef\u9006\u7684\u6d41\u52a8\u6b63\u662f\u751f\u547d\u6d3b\u52a8\u3001\u5316\u5b66\u53cd\u5e94\u548c\u6240\u6709\u7531\u5916\u90e8\u80fd\u91cf\u9a71\u52a8\u7684\u7cfb\u7edf\u7684\u6807\u5fd7\u3002\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4ece\u5355\u6761\u968f\u673a\u8f68\u8ff9\u51fa\u53d1\uff0c\u7cbe\u786e\u5730\u91cf\u5316\u8fd9\u79cd\u4e0d\u53ef\u9006\u6027 (Irreversibility)\uff0c\u5e76\u6700\u7ec8\u5b9a\u4e49\u51fa\u71b5\u4ea7\u751f (Entropy Production)\u3002\u8fd9\u4e2a\u91cf\uff0c\u6b63\u662f\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u5728\u5fae\u89c2\u968f\u673a\u4e16\u754c\u4e2d\u7684\u76f4\u63a5\u4f53\u73b0\u3002</p> <p>\u53ef\u4ee5\u8bf4\uff0c\u8fd9\u4e00\u8bb2\u662f\u8fde\u63a5\u5fae\u89c2\u968f\u673a\u4e8b\u4ef6\u4e0e\u5b8f\u89c2\u70ed\u529b\u5b66\u201c\u65f6\u95f4\u4e4b\u7bad\u201d\u7684\u5173\u952e\u6865\u6881\u3002</p> <p>\u672c\u8282\u8bfe\u7684\u6838\u5fc3\u4e3b\u9898\u662f\u533a\u5206\u4e24\u7c7b\u622a\u7136\u4e0d\u540c\u7684\u968f\u673a\u8fc7\u7a0b\uff1a</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#reversible-process","title":"\u53ef\u9006\u8fc7\u7a0b (Reversible Process)","text":"<p>\u8fd9\u7c7b\u8fc7\u7a0b\u662f\u968f\u673a\u7cfb\u7edf\u8fbe\u5230\u70ed\u529b\u5b66\u5e73\u8861 (Thermodynamic Equilibrium) \u7684\u5fae\u89c2\u4f53\u73b0\uff0c\u5176\u6838\u5fc3\u6807\u5fd7\u662f\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861 (Detailed Balance) \u6761\u4ef6\u3002\u5728\u8fd9\u6837\u7684\u7cfb\u7edf\u4e2d\uff0c\u65f6\u95f4\u7684\u201c\u7bad\u5934\u201d\u6d88\u5931\u4e86\uff0c\u8fc7\u53bb\u4e0e\u672a\u6765\u5728\u7edf\u8ba1\u4e0a\u65e0\u6cd5\u533a\u5206\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u51e0\u4e2a\u5c42\u9762\u6765\u7406\u89e3\u5176\u6df1\u523b\u5185\u6db5\uff1a</p> <ol> <li> <p>\u65f6\u95f4\u7684\u5bf9\u79f0\u6027\uff1a\u60f3\u8c61\u4e00\u4e0b\u6211\u4eec\u7528\u6444\u50cf\u673a\u8bb0\u5f55\u4e0b\u4e00\u4e2a\u53ef\u9006\u8fc7\u7a0b\u7684\u6f14\u5316\u8f68\u8ff9\uff0c\u7136\u540e\u5c06\u5f55\u50cf\u5e26\u5012\u7740\u64ad\u653e\u3002\u4ece\u7edf\u8ba1\u5b66\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5012\u653e\u7684\u5f71\u7247\u548c\u4e00\u4e2a\u6b63\u5e38\u64ad\u653e\u7684\u5f71\u7247\u662f\u65e0\u6cd5\u533a\u5206\u7684\u3002\u4f8b\u5982\uff0c\u89c2\u5bdf\u4e00\u4e2a\u5904\u4e8e\u5e73\u8861\u6001\u7684\u6c14\u4f53\u4e2d\u7684\u5355\u4e2a\u82b1\u7c89\u7c92\uff08\u5e03\u6717\u8fd0\u52a8\uff09\uff0c\u5b83\u5728\u6c34\u4e2d\u968f\u673a\u5730\u3001\u6beb\u65e0\u76ee\u7684\u5730\u98d8\u52a8\u3002\u65e0\u8bba\u6b63\u653e\u8fd8\u662f\u5012\u653e\uff0c\u6211\u4eec\u770b\u5230\u7684\u90fd\u662f\u540c\u6837\u6742\u4e71\u65e0\u7ae0\u7684\u968f\u673a\u8fd0\u52a8\u3002\u8fd9\u79cd\u65f6\u95f4\u4e0a\u7684\u5bf9\u79f0\u6027\uff0c\u662f\u53ef\u9006\u8fc7\u7a0b\u6700\u76f4\u89c2\u7684\u7279\u5f81\u3002</p> </li> <li> <p>\u5fae\u89c2\u7684\u5b8c\u7f8e\u5e73\u8861\uff1a\u8fd9\u79cd\u5b8f\u89c2\u4e0a\u7684\u65f6\u95f4\u5bf9\u79f0\u6027\uff0c\u6e90\u4e8e\u5fae\u89c2\u5c42\u9762\u6bcf\u4e00\u4e2a\u72ec\u7acb\u8fc7\u7a0b\u90fd\u4e0e\u5176\u9006\u8fc7\u7a0b\u8fbe\u5230\u4e86\u5b8c\u7f8e\u7684\u5e73\u8861\u3002\u8fd9\u6b63\u662f\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u7684\u6570\u5b66\u8868\u8fbe\uff1a     \\(\\(\\pi_j w_{j \\to k} = \\pi_k w_{k \\to j}\\)\\)     \u8fd9\u4e2a\u516c\u5f0f\u544a\u8bc9\u6211\u4eec\uff0c\u5728\u7a33\u6001\u4e0b\uff0c\u4ece\u4efb\u610f\u72b6\u6001 \\(j\\) \u8df3\u8f6c\u5230\u72b6\u6001 \\(k\\) \u7684\u603b\u6982\u7387\u6d41\uff08\u5de6\u4fa7\uff09\uff0c\u90fd\u7cbe\u786e\u5730\u88ab\u4ece \\(k\\) \u53cd\u5411\u8df3\u8f6c\u56de \\(j\\) \u7684\u603b\u6982\u7387\u6d41\uff08\u53f3\u4fa7\uff09\u6240\u62b5\u6d88\u3002\u8fd9\u79cd\u5e73\u8861\u53d1\u751f\u5728\u6bcf\u4e00\u5bf9\u76f4\u63a5\u76f8\u8fde\u7684\u72b6\u6001\u4e4b\u95f4\uff0c\u800c\u975e\u4ec5\u4ec5\u662f\u6574\u4e2a\u7cfb\u7edf\u7684\u5b8f\u89c2\u5e73\u8861\u3002</p> </li> <li> <p>\u65e0\u51c0\u73af\u6d41\u7684\u201c\u9759\u6001\u201d\u5e73\u8861\uff1a\u7531\u4e8e\u6bcf\u4e00\u6761\u201c\u5fae\u89c2\u8def\u5f84\u201d\u90fd\u4e0e\u5176\u9006\u8fc7\u7a0b\u5b8c\u5168\u5e73\u8861\uff0c\u7cfb\u7edf\u5185\u90e8\u4e0d\u53ef\u80fd\u5b58\u5728\u4efb\u4f55\u6301\u7eed\u7684\u3001\u51c0\u7684\u6982\u7387\u73af\u6d41\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6e56\u6cca\u6765\u6bd4\u55bb\uff1a\u6e56\u6c34\u5904\u4e8e\u5e73\u8861\u72b6\u6001\uff0c\u5b8f\u89c2\u6c34\u4f4d\u4e0d\u53d8\u3002\u5728\u5fae\u89c2\u5c42\u9762\uff0c\u6c34\u5206\u5b50\u5728\u4e0d\u505c\u8fd0\u52a8\uff0c\u4f46\u4ece\u4efb\u610f\u70b9A\u5230\u70b9B\u7684\u6c34\u5206\u5b50\u6d41\uff0c\u90fd\u4f1a\u88ab\u4ece\u70b9B\u5230\u70b9A\u7684\u5206\u5b50\u6d41\u7cbe\u786e\u62b5\u6d88\u3002\u6574\u4e2a\u6e56\u6cca\u867d\u7136\u5185\u90e8\u9ad8\u5ea6\u52a8\u6001\uff0c\u4f46\u5b8f\u89c2\u4e0a\u6ca1\u6709\u4efb\u4f55\u51c0\u6c34\u6d41\u3002\u8fd9\u6b63\u662f\u70ed\u529b\u5b66\u5e73\u8861\u7684\u672c\u8d28\u2014\u2014\u4e00\u4e2a\u770b\u4f3c\u201c\u5bc2\u9759\u201d\uff0c\u5b9e\u5219\u5728\u5fae\u89c2\u5c42\u9762\u201c\u55a7\u95f9\u201d\u4e0d\u4f11\u7684\u52a8\u6001\u5e73\u8861\u3002</p> </li> <li> <p>\u7b80\u5355\u7684\u52a8\u529b\u5b66\u884c\u4e3a\uff1a\u6b63\u5982\u8bb2\u5ea7\u4e2d\u6240\u63a8\u5bfc\u7684\uff0c\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u7684\u7cfb\u7edf\uff0c\u5176\u52a8\u529b\u5b66\u6f14\u5316\u4e5f\u5f02\u5e38\u201c\u7eaf\u7cb9\u201d\u3002\u7cfb\u7edf\u4ece\u4efb\u610f\u521d\u59cb\u72b6\u6001\u8d8b\u5411\u5e73\u8861\u7684\u8fc7\u7a0b\uff0c\u662f\u4e00\u79cd\u5e73\u6ed1\u7684\u3001\u65e0\u632f\u8361\u7684\u6307\u6570\u5f1b\u8c6b\u3002\u8fd9\u8868\u660e\u7cfb\u7edf\u4f1a\u4ee5\u6700\u76f4\u63a5\u3001\u6700\u5355\u8c03\u7684\u65b9\u5f0f\u201c\u6ed1\u5411\u201d\u5176\u6700\u7a33\u5b9a\u7684\u5e73\u8861\u6001\uff0c\u4e0d\u4f1a\u51fa\u73b0\u590d\u6742\u7684\u5468\u671f\u6027\u884c\u4e3a\u3002</p> </li> </ol>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#irreversible-process","title":"\u4e0d\u53ef\u9006\u8fc7\u7a0b (Irreversible Process)","text":"<p>\u8fd9\u7c7b\u8fc7\u7a0b\u6253\u7834\u4e86\u7ec6\u81f4\u5e73\u8861\u7684\u4e25\u683c\u7ea6\u675f\uff0c\u662f\u6240\u6709\u6d3b\u8dc3\u7684\u3001\u6d88\u8017\u80fd\u91cf\u7684\u975e\u5e73\u8861\u7cfb\u7edf (Non-equilibrium Systems) \u7684\u5171\u540c\u7279\u5f81\u3002\u6b63\u662f\u8fd9\u79cd\u4e0d\u5e73\u8861\uff0c\u8d4b\u4e88\u4e86\u65f6\u95f4\u4e00\u4e2a\u660e\u786e\u7684\u65b9\u5411\uff0c\u662f\u6211\u4eec\u4f53\u9a8c\u5230\u7684\u201c\u65f6\u95f4\u4e4b\u7bad\u201d\u5728\u5fae\u89c2\u4e16\u754c\u7684\u8d77\u6e90\u3002</p> <ol> <li> <p>\u65f6\u95f4\u7684\u975e\u5bf9\u79f0\u6027\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u53ef\u9006\u8fc7\u7a0b\uff0c\u6b63\u653e\u548c\u5012\u653e\u7684\u5f55\u50cf\u5728\u7edf\u8ba1\u4e0a\u662f\u622a\u7136\u4e0d\u540c\u7684\u3002\u60f3\u8c61\u4e00\u4e2a\u7ec6\u80de\u5185\u7684\u5206\u5b50\u9a6c\u8fbe\u6cbf\u7740\u5fae\u7ba1\u201c\u884c\u8d70\u201d\uff0c\u5b83\u6d88\u8017ATP\u63d0\u4f9b\u7684\u80fd\u91cf\uff0c\u7a33\u5b9a\u5730\u671d\u4e00\u4e2a\u65b9\u5411\u8fd0\u52a8\u3002\u5982\u679c\u6211\u4eec\u5012\u653e\u8fd9\u4e2a\u5f55\u50cf\uff0c\u4f1a\u770b\u5230\u4e00\u4e2a\u5206\u5b50\u9a6c\u8fbe\u201c\u53cd\u5411\u201d\u884c\u8d70\uff0c\u5e76\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u201c\u5408\u6210\u201dATP\u2014\u2014\u8fd9\u5728\u7269\u7406\u4e0a\u662f\u4e0d\u53ef\u80fd\u81ea\u53d1\u53d1\u751f\u7684\u3002\u8fd9\u79cd\u7edf\u8ba1\u4e0a\u7684\u975e\u5bf9\u79f0\u6027\uff0c\u4e3a\u65f6\u95f4\u8d4b\u4e88\u4e86\u660e\u786e\u7684\u65b9\u5411\u3002</p> </li> <li> <p>\u6301\u7eed\u7684\u5fae\u89c2\u6d41\u52a8\uff1a\u4e0d\u53ef\u9006\u6027\u7684\u6839\u6e90\u5728\u4e8e\u7ec6\u81f4\u5e73\u8861\u88ab\u6253\u7834\uff0c\u5373 \\(\\pi_j w_{j \\to k} \\neq \\pi_k w_{k \\to j}\\)\u3002\u8fd9\u610f\u5473\u7740\u5728\u72b6\u6001 \\(j\\) \u548c \\(k\\) \u4e4b\u95f4\uff0c\u5b58\u5728\u4e00\u4e2a\u51c0\u7684\u6982\u7387\u6d41\u3002\u5f53\u8fd9\u4e9b\u51c0\u6d41\u5728\u7cfb\u7edf\u4e2d\u5f62\u6210\u4e00\u4e2a\u6216\u591a\u4e2a\u95ed\u5408\u5faa\u73af\u65f6\uff08\u5373\u4e0d\u6ee1\u8db3\u67ef\u5c14\u83ab\u54e5\u6d1b\u592b\u5faa\u73af\u51c6\u5219\uff09\uff0c\u7cfb\u7edf\u5c31\u5904\u5728\u4e00\u4e2a\u975e\u5e73\u8861\u7a33\u6001 (Non-Equilibrium Steady State, NESS)\u3002</p> </li> <li> <p>\u7531\u80fd\u91cf\u9a71\u52a8\u7684\u201c\u52a8\u6001\u201d\u5e73\u8861\uff1a\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u6761\u6cb3\u6d41\u6765\u6bd4\u55bb\u8fd9\u79cd\u72b6\u6001\u3002\u6cb3\u6d41\u7684\u6c34\u4f4d\u53ef\u4ee5\u662f\u7a33\u5b9a\u7684\uff08\u7a33\u6001\uff09\uff0c\u4f46\u8fd9\u9700\u8981\u6709\u6e90\u6e90\u4e0d\u65ad\u7684\u6c34\u4ece\u4e0a\u6e38\u6d41\u5165\uff08\u80fd\u91cf\u8f93\u5165\uff09\u3002\u5728\u6cb3\u6d41\u7684\u4efb\u4f55\u4e00\u4e2a\u622a\u9762\uff0c\u6d41\u5165\u548c\u6d41\u51fa\u7684\u6c34\u91cf\u76f8\u7b49\uff0c\u7ef4\u6301\u4e86\u6c34\u4f4d\u7684\u7a33\u5b9a\uff08\u8fd9\u5bf9\u5e94\u4e8e\u6bd4\u7ec6\u81f4\u5e73\u8861\u66f4\u5f31\u7684\u201c\u5168\u5c40\u5e73\u8861\u201d\u6761\u4ef6\uff09\u3002\u7136\u800c\uff0c\u6cb3\u6c34\u6574\u4f53\u6709\u4e00\u4e2a\u660e\u786e\u7684\u4e0b\u6e38\u65b9\u5411\uff0c\u5b58\u5728\u7740\u51c0\u7684\u6c34\u6d41\u3002\u751f\u547d\u7cfb\u7edf\uff0c\u5982\u4e00\u4e2a\u6d3b\u7ec6\u80de\uff0c\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u7531\u6301\u7eed\u7684\u65b0\u9648\u4ee3\u8c22\uff08\u80fd\u91cf\u6d41\uff09\u7ef4\u6301\u7684\u3001\u9ad8\u5ea6\u6709\u5e8f\u7684\u975e\u5e73\u8861\u7a33\u6001\u3002</p> </li> <li> <p>\u71b5\u7684\u6301\u7eed\u4ea7\u751f\uff1a\u8fd9\u79cd\u5355\u5411\u7684\u3001\u4e0d\u53ef\u9006\u7684\u6d41\u52a8\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u8fd9\u4e2a\u4ee3\u4ef7\u5c31\u662f\u71b5\u7684\u6301\u7eed\u4ea7\u751f\u3002\u6b63\u5982\u8bb2\u5ea7\u4e2d\u6240\u5b9a\u4e49\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u4e00\u6761\u6b63\u5411\u8f68\u8ff9 \\(\\gamma\\) \u4e0e\u5176\u9006\u5411\u8f68\u8ff9 \\(\\bar{\\gamma}\\) \u7684\u53d1\u751f\u6982\u7387\uff0c\u6765\u7cbe\u786e\u91cf\u5316\u8fd9\u79cd\u4e0d\u53ef\u9006\u6027\u3002\u5176\u5bf9\u6570\u6bd4\u503c\uff0c\u5373\u71b5\u4ea7\u751f \\(\\Delta s[\\gamma] = \\ln(P[\\gamma]/P[\\bar{\\gamma}])\\)\uff0c\u603b\u662f\u975e\u8d1f\u7684\u3002\u5bf9\u4e8e\u4e00\u4e2a\u975e\u5e73\u8861\u7a33\u6001\u7cfb\u7edf\uff0c\u5176\u5e73\u5747\u71b5\u4ea7\u751f\u901f\u7387 \\(\\sigma\\) \u662f\u4e00\u4e2a\u5927\u4e8e\u96f6\u7684\u5e38\u6570\uff0c\u5b83\u8861\u91cf\u4e86\u7cfb\u7edf\u7ef4\u6301\u5176\u52a8\u6001\u6d3b\u52a8\u6240\u9700\u8981\u4ed8\u51fa\u7684\u3001\u5411\u73af\u5883\u4e2d\u201c\u8017\u6563\u201d\u80fd\u91cf\u7684\u901f\u7387\u3002\u8fd9\u4e2a\u91cf\uff0c\u6b63\u662f\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u5728\u968f\u673a\u8fc7\u7a0b\u5c42\u9762\u6700\u7cbe\u786e\u7684\u6570\u5b66\u8868\u8fbe\u3002</p> </li> </ol>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#1","title":"1. \u7ec6\u81f4\u5e73\u8861","text":"<p>\u70ed\u5e73\u8861\u8fd9\u4e00\u7269\u7406\u6761\u4ef6\u4f1a\u7ed9\u7cfb\u7edf\u7684\u6570\u5b66\u63cf\u8ff0\u5e26\u6765\u5f3a\u5927\u7684\u7ea6\u675f\uff0c\u4f7f\u5f97\u5176\u52a8\u6001\u884c\u4e3a\u53d8\u5f97\u5f02\u5e38\u7b80\u6d01\u548c\u53ef\u9884\u6d4b\u3002</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#11","title":"1.1 \u518d\u63a2\u4e3b\u65b9\u7a0b\uff1a\u968f\u673a\u8fc7\u7a0b\u7684\u6e38\u620f\u89c4\u5219","text":"<p>\u8bb2\u5ea7\u4ece\u56de\u987e\u4e3b\u65b9\u7a0b\u5f00\u59cb\uff0c\u8fd9\u662f\u6211\u4eec\u6574\u4e2a\u7406\u8bba\u4f53\u7cfb\u7684\u57fa\u77f3\u3002</p> \\[ \\frac{d\\mathbf{p}(t)}{dt} = Q \\cdot \\mathbf{p}(t) \\] <p>\u8fd9\u4e2a\u65b9\u7a0b\u63cf\u8ff0\u4e86\u5728\u4e00\u4e2a\u8fde\u7eed\u65f6\u95f4\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u4e2d\uff0c\u6982\u7387\u5982\u4f55\u968f\u65f6\u95f4\u6f14\u5316\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5199\u6210\u5206\u91cf\u7684\u5f62\u5f0f\uff0c\u4ee5\u4fbf\u66f4\u6e05\u6670\u5730\u7406\u89e3\u5176\u7269\u7406\u610f\u4e49\uff1a</p> \\[ \\frac{dp_n(t)}{dt} = \\sum_{m \\neq n} (p_m(t) w_{m \\to n} - p_n(t) w_{n \\to m}) \\] <p>\u7269\u7406\u610f\u4e49\uff1a\u8fd9\u4e2a\u5f62\u5f0f\u6e05\u695a\u5730\u5c55\u793a\u4e86\u72b6\u6001 \\(n\\) \u7684\u6982\u7387 \\(p_n(t)\\) \u968f\u65f6\u95f4\u7684\u53d8\u5316\uff0c\u662f\u7531\u4e00\u4e2a\"\u6d41\u5165\u9879\"\u548c\u4e00\u4e2a\"\u6d41\u51fa\u9879\"\u5171\u540c\u51b3\u5b9a\u7684\u3002</p> <p>\u6d41\u5165\u9879 (Gain Term): \\(\\sum_{m \\neq n} p_m(t) w_{m \\to n}\\) \u8868\u793a\u4ece\u6240\u6709\u5176\u4ed6\u72b6\u6001 \\(m\\) \u8df3\u8f6c\u5230\u72b6\u6001 \\(n\\) \u7684\u603b\u901f\u7387\u3002</p> <p>\u6d41\u51fa\u9879 (Loss Term): \\(\\sum_{m \\neq n} p_n(t) w_{n \\to m} = p_n(t) \\sum_{m \\neq n} w_{n \\to m}\\) \u8868\u793a\u4ece\u72b6\u6001 \\(n\\) \u8df3\u8f6c\u5230\u4efb\u4f55\u5176\u4ed6\u72b6\u6001\u7684\u603b\u901f\u7387\u3002</p> <p>Q-\u77e9\u9635\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\u662f\u5176\u5217\u548c\u4e3a\u96f6\uff1a</p> \\[ \\sum_n Q_{nm} = 0 \\] <p>\u7269\u7406\u610f\u4e49\uff1a\u8fd9\u4e2a\u6027\u8d28\u662f\u6982\u7387\u5b88\u6052\u7684\u6570\u5b66\u4f53\u73b0\u3002\\(Q_{mm} = -\\sum_{n \\neq m} w_{m \\to n}\\) \u662f\u4ece\u72b6\u6001 \\(m\\) \u6d41\u51fa\u7684\u603b\u901f\u7387\uff0c\u800c \\(\\sum_{n \\neq m} Q_{nm} = \\sum_{n \\neq m} w_{m \\to n}\\) \u662f\u6d41\u5165\u5230\u5176\u4ed6\u6240\u6709\u72b6\u6001\u7684\u603b\u901f\u7387\u3002\u4e24\u8005\u76f8\u52a0\u4e3a\u96f6\uff0c\u610f\u5473\u7740\u7c92\u5b50\u79bb\u5f00\u72b6\u6001 \\(m\\) \u540e\uff0c\u5fc5\u7136\u4f1a\u8fdb\u5165\u67d0\u4e2a\u5176\u4ed6\u72b6\u6001 \\(n\\)\uff0c\u603b\u6982\u7387\u59cb\u7ec8\u4fdd\u6301\u4e3a1\u3002</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#12","title":"1.2 \u7ec6\u81f4\u5e73\u8861\u539f\u7406\uff1a\u5e73\u8861\u6001\u7684\u6807\u5fd7","text":"<p>\u5bf9\u4e8e\u4e00\u7c7b\u7279\u6b8a\u7684\u8fc7\u7a0b\uff0c\u5373\u53ef\u9006\u8fc7\u7a0b (Reversible Processes)\uff0c\u7cfb\u7edf\u4f1a\u8fbe\u5230\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u7684\u7a33\u6001\uff0c\u8fd9\u4e2a\u7a33\u6001\u7531\u7ec6\u81f4\u5e73\u8861 (Detailed Balance, DB) \u6761\u4ef6\u5b9a\u4e49\u3002</p> \\[ \\pi_i w_{i \\to j} = \\pi_j w_{j \\to i} \\] <p>\\(\\pi_i\\) \u548c \\(\\pi_j\\) \u662f\u7cfb\u7edf\u5904\u4e8e\u72b6\u6001 \\(i\\) \u548c \\(j\\) \u7684\u7a33\u6001\u6982\u7387\u3002 \\(w_{i \\to j}\\) \u662f\u4ece \\(i\\) \u5230 \\(j\\) \u7684\u8f6c\u79fb\u901f\u7387\u3002 \\(\\pi_i w_{i \\to j}\\) \u662f\u5728\u7a33\u6001\u4e0b\uff0c\u5355\u4f4d\u65f6\u95f4\u5185\u4ece\u72b6\u6001 \\(i\\) \u8df3\u8f6c\u5230\u72b6\u6001 \\(j\\) \u7684\u6982\u7387\u6d41 (Probability Flux)\u3002</p> <p>\u7269\u7406\u610f\u4e49\uff1a\u7ec6\u81f4\u5e73\u8861\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6570\u5b66\u516c\u5f0f\uff0c\u5b83\u662f\u4e00\u4e2a\u6df1\u523b\u7684\u7269\u7406\u9648\u8ff0\uff0c\u5373\u5fae\u89c2\u53ef\u9006\u6027\u539f\u7406\u3002\u5728\u70ed\u5e73\u8861\u72b6\u6001\u4e0b\uff0c\u4efb\u4f55\u4e24\u4e2a\u72b6\u6001\u4e4b\u95f4\u7684\u6982\u7387\u6d41\u90fd\u662f\u53cc\u5411\u4e14\u5b8c\u5168\u76f8\u7b49\u7684\u3002\u4ece \\(i\\) \u5230 \\(j\\) \u7684\u6d41\u91cf\u88ab\u4ece \\(j\\) \u5230 \\(i\\) \u7684\u6d41\u91cf\u7cbe\u786e\u62b5\u6d88\u3002\u8fd9\u610f\u5473\u7740\u51c0\u6982\u7387\u6d41 \\(J_{ij} = \\pi_i w_{i \\to j} - \\pi_j w_{j \\to i}\\) \u5bf9\u6240\u6709\u72b6\u6001\u5bf9 \\((i,j)\\) \u90fd\u7cbe\u786e\u4e3a\u96f6\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u6bd4\u4f5c\u4e00\u6761\u7e41\u5fd9\u7684\u53cc\u5411\u8857\u9053\uff0c\u5411\u5317\u884c\u9a76\u7684\u8f66\u8f86\u6570\u91cf\u6070\u597d\u7b49\u4e8e\u5411\u5357\u884c\u9a76\u7684\u8f66\u8f86\u6570\u91cf\uff0c\u56e0\u6b64\u6ca1\u6709\u51c0\u4ea4\u901a\u6d41\u3002</p> <p>\u91cd\u8981\u8fa8\u6790\uff1a\u7ec6\u81f4\u5e73\u8861\u662f\u7a33\u6001\u7684\u5145\u5206\u975e\u5fc5\u8981\u6761\u4ef6</p> <p>\u7a33\u6001 (Steady State) \u7684\u5b9a\u4e49\u662f\u6982\u7387\u5206\u5e03\u4e0d\u968f\u65f6\u95f4\u53d8\u5316\uff0c\u5373 \\(\\frac{d\\mathbf{p}(t)}{dt} = 0\\)\uff0c\u4e5f\u5c31\u662f \\(Q \\cdot \\boldsymbol{\\pi} = 0\\)\u3002</p> <p>\u7ec6\u81f4\u5e73\u8861 (Detailed Balance) \u662f\u4e00\u4e2a\u66f4\u5f3a\u7684\u6761\u4ef6\u3002\u5982\u679c\u7ec6\u81f4\u5e73\u8861\u6210\u7acb\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u7a33\u6001\u6761\u4ef6\u4e5f\u5fc5\u7136\u6210\u7acb\u3002\u7136\u800c\uff0c\u53cd\u8fc7\u6765\u4e0d\u4e00\u5b9a\u3002\u7cfb\u7edf\u53ef\u4ee5\u5904\u4e8e\u4e00\u4e2a\u6982\u7387\u5206\u5e03\u6052\u5b9a\uff0c\u4f46\u5185\u90e8\u5b58\u5728\u6301\u7eed\u7684\u3001\u975e\u96f6\u7684\u51c0\u6982\u7387\u6d41\u7684\u7a33\u6001\u3002\u8fd9\u79cd\u72b6\u6001\u88ab\u79f0\u4e3a\u975e\u5e73\u8861\u7a33\u6001 (Non-Equilibrium Steady State, NESS)\uff0c\u6211\u4eec\u5c06\u5728\u7b2c\u4e8c\u90e8\u5206\u8be6\u7ec6\u63a2\u8ba8\u3002</p> <p>\u56e0\u6b64\uff0c\u7ec6\u81f4\u5e73\u8861\u5b9a\u4e49\u4e86\u6240\u6709\u7a33\u6001\u4e2d\u7684\u4e00\u4e2a\u7279\u6b8a\u5b50\u96c6\u2014\u2014\u5e73\u8861\u6001\u3002</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#13","title":"1.3 \u5bf9\u79f0\u6027\u7684\u529b\u91cf\uff1a\u7b80\u5316\u7cfb\u7edf\u52a8\u529b\u5b66","text":"<p>\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u7684\u4e00\u4e2a\u5f3a\u5927\u63a8\u8bba\u662f\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u76f8\u4f3c\u53d8\u6362\uff0c\u5c06\u901a\u5e38\u4e0d\u5bf9\u79f0\u7684 Q-\u77e9\u9635\u5bf9\u79f0\u5316 \u3002\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u77e9\u9635 \\(\\tilde{Q}\\)\uff1a</p> \\[ \\tilde{Q}_{mn} := \\pi_m^{-1/2} Q_{mn} \\pi_n^{1/2} \\] <p>\u5982\u679c\u7cfb\u7edf\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65b0\u7684 \\(\\tilde{Q}\\) \u77e9\u9635\u662f\u5bf9\u79f0\u7684\uff0c\u5373 \\(\\tilde{Q}_{mn} = \\tilde{Q}_{nm}\\)\u3002</p> <p>\u63a8\u5bfc\u8fc7\u7a0b\uff1a</p> <p>\u5bf9\u4e8e\u975e\u5bf9\u89d2\u5143\u7d20 (\\(m \\neq n\\))\uff0c\u6211\u4eec\u6709 \\(Q_{mn} = w_{n \\to m}\\)\u3002</p> \\[ \\tilde{Q}_{mn} = \\pi_m^{-1/2} w_{n \\to m} \\pi_n^{1/2} \\] <p>\u5229\u7528\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6 \\(w_{n \\to m} = w_{m \\to n} \\frac{\\pi_n}{\\pi_m}\\)\uff0c\u4ee3\u5165\u4e0a\u5f0f\uff1a</p> \\[ \\tilde{Q}_{mn} = \\pi_m^{-1/2} (w_{m \\to n} \\frac{\\pi_n}{\\pi_m}) \\pi_n^{1/2} = \\pi_m^{1/2} w_{m \\to n} \\pi_n^{-1/2} \\] <p>\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u8ba1\u7b97 \\(\\tilde{Q}_{nm}\\)\uff1a</p> \\[ \\tilde{Q}_{nm} = \\pi_n^{-1/2} Q_{nm} \\pi_m^{1/2} = \\pi_n^{-1/2} w_{m \\to n} \\pi_m^{1/2} \\] <p>\u6bd4\u8f83\u4e24\u5f0f\uff0c\u6211\u4eec\u53d1\u73b0 \\(\\tilde{Q}_{mn} = \\tilde{Q}_{nm}\\)\uff0c\u8bc1\u660e\u4e86\u5176\u5bf9\u79f0\u6027\u3002</p> <p>\u8fd9\u4e2a\u6570\u5b66\u4e0a\u7684\"\u6280\u5de7\"\u4e3a\u4f55\u5982\u6b64\u91cd\u8981\uff1f\u56e0\u4e3a\u5b83\u63ed\u793a\u4e86\u5e73\u8861\u7cfb\u7edf\u52a8\u529b\u5b66\u7684\u6df1\u523b\u7269\u7406\u7279\u6027\uff1a</p> <p>1.\u5b9e\u6570\u7279\u5f81\u503c\uff1a\u5bf9\u79f0\u77e9\u9635\uff08\u6216\u66f4\u5e7f\u4e49\u7684\u5384\u7c73\u77e9\u9635\uff09\u4fdd\u8bc1\u5176\u6240\u6709\u7279\u5f81\u503c\u90fd\u662f\u5b9e\u6570\u3002\u5728\u6211\u4eec\u7684\u95ee\u9898\u4e2d\uff0cQ-\u77e9\u9635\u7684\u7279\u5f81\u503c\u4e3a \\(-\\lambda\\)\u3002\u8fd9\u610f\u5473\u7740\u5f1b\u8c6b\u901f\u7387 \\(\\lambda\\) \u90fd\u662f\u5b9e\u6570\u3002</p> <p>2.\u975e\u632f\u8361\u5f1b\u8c6b\uff1a\u7279\u5f81\u503c\u4e3a\u5b9e\u6570\uff0c\u610f\u5473\u7740\u7cfb\u7edf\u5411\u5e73\u8861\u6001\u7684\u6f14\u5316\u8fc7\u7a0b\u662f\u7eaf\u7cb9\u7684\u6307\u6570\u8870\u51cf\uff0c\u800c\u4e0d\u4f1a\u51fa\u73b0\u632f\u8361\u3002\u4e3b\u65b9\u7a0b\u7684\u901a\u89e3\u53ef\u4ee5\u5199\u6210\u7279\u5f81\u6a21\u5f0f\u7684\u53e0\u52a0\uff1a $$ p(t) = \\sum_{\\lambda} c_{\\lambda} \\Phi(\\lambda) e^{-\\lambda t} $$</p> <p>\u5176\u4e2d \\(\\lambda &gt; 0\\)\uff08\u5bf9\u4e8e\u975e\u7a33\u6001\u6a21\u5f0f\uff09\uff0c\u8fd9\u4ee3\u8868\u4e86\u7cfb\u7edf\u4ece\u4efb\u610f\u521d\u59cb\u72b6\u6001\u5411\u552f\u4e00\u7a33\u6001 \\(\\boldsymbol{\\pi}\\)\uff08\u5bf9\u5e94\u4e8e \\(\\lambda = 0\\) \u7684\u6a21\u5f0f\uff09\u7684\u5f1b\u8c6b\u8fc7\u7a0b\u662f\u5e73\u6ed1\u7684\u3001\u975e\u632f\u8361\u7684\u3002</p> <p>3.\u6b63\u4ea4\u57fa\u5e95\uff1a\u5bf9\u79f0\u77e9\u9635\u7684\u7279\u5f81\u5411\u91cf\u6784\u6210\u4e00\u4e2a\u5b8c\u5907\u7684\u6b63\u4ea4\u57fa\u5e95\u3002\u8fd9\u610f\u5473\u7740\u4efb\u4f55\u521d\u59cb\u6982\u7387\u5206\u5e03\u90fd\u53ef\u4ee5\u552f\u4e00\u5730\u5206\u89e3\u4e3a\u8fd9\u4e9b\u57fa\u672c\"\u5f1b\u8c6b\u6a21\u5f0f\"\u7684\u7ebf\u6027\u7ec4\u5408\u3002</p> <p>\u603b\u4e4b\uff0cQ-\u77e9\u9635\u7684\u53ef\u5bf9\u79f0\u5316\u662f\u5e73\u8861\u7cfb\u7edf\u4e0d\u5b58\u5728\u5185\u5728\u5faa\u73af\u52a8\u529b\u5b66\u7684\u6570\u5b66\u4f53\u73b0\uff0c\u5b83\u5c06\u62bd\u8c61\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u4e0e\u4fdd\u5b88\u7cfb\u7edf\u7684\u7269\u7406\u5b66\u8054\u7cfb\u8d77\u6765\u3002</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#14","title":"1.4 \u67ef\u5c14\u83ab\u54e5\u6d1b\u592b\u5faa\u73af\u51c6\u5219\uff1a\u4e00\u4e2a\u76f4\u89c2\u7684\u5e73\u8861\u6001\u5224\u636e","text":"<p>\u9664\u4e86\u4ee3\u6570\u5f62\u5f0f\u7684\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\uff0c\u8fd8\u6709\u4e00\u4e2a\u7b49\u4ef7\u7684\u3001\u66f4\u76f4\u89c2\u7684\u51e0\u4f55\u5224\u636e\u2014\u2014\u67ef\u5c14\u83ab\u54e5\u6d1b\u592b\u5faa\u73af\u51c6\u5219 (Kolmogorov's Loop Criterion) \u3002\u8be5\u51c6\u5219\u6307\u51fa\uff0c\u4e00\u4e2a\u4e0d\u53ef\u7ea6\u7684\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u662f\u53ef\u9006\u7684\uff08\u5373\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\uff09\uff0c\u5f53\u4e14\u4ec5\u5f53\u5bf9\u4e8e\u72b6\u6001\u7a7a\u95f4\u4e2d\u7684\u4efb\u4f55\u95ed\u5408\u5faa\u73af\uff0c\u987a\u65f6\u9488\u65b9\u5411\u7684\u8f6c\u79fb\u901f\u7387\u4e4b\u79ef\u7b49\u4e8e\u9006\u65f6\u9488\u65b9\u5411\u7684\u8f6c\u79fb\u901f\u7387\u4e4b\u79ef\u3002</p> \\[w_{1 \\to 2} w_{2 \\to 3} \\cdots w_{N \\to 1} = w_{1 \\to N} w_{N \\to N-1} \\cdots w_{2 \\to 1}\\] <p>\u76f4\u89c2\u7406\u89e3\uff1a\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u4e09\u72b6\u6001\u7cfb\u7edf \\(\\{1, 2, 3\\}\\) \u4e3a\u4f8b\uff0c\u6b64\u51c6\u5219\u8981\u6c42\uff1a</p> \\[ w_{1 \\to 2} w_{2 \\to 3} w_{3 \\to 1} = w_{2 \\to 1} w_{3 \\to 2} w_{1 \\to 3} \\] <p>\u5982\u679c\u8fd9\u4e2a\u7b49\u5f0f\u4e0d\u6210\u7acb\uff0c\u4f8b\u5982\u987a\u65f6\u9488\u7684\u4e58\u79ef\u5927\u4e8e\u9006\u65f6\u9488\uff0c\u5c31\u610f\u5473\u7740\u7cfb\u7edf\u5185\u90e8\u5b58\u5728\u4e00\u4e2a\u6301\u7eed\u7684\u3001\u987a\u65f6\u9488\u65b9\u5411\u7684\u51c0\u6982\u7387\u73af\u6d41 (Net Probability Circulation)\u3002\u8fd9\u79cd\u51c0\u73af\u6d41\u662f\u4e0d\u53ef\u9006\u6027\u7684\u6839\u672c\u6807\u5fd7\u3002\u53ea\u8981\u7cfb\u7edf\u4e2d\u5b58\u5728\u54ea\u6015\u4e00\u4e2a\u5faa\u73af\u4e0d\u6ee1\u8db3\u6b64\u51c6\u4ee4\uff0c\u7cfb\u7edf\u5c31\u5fc5\u7136\u5904\u4e8e\u975e\u5e73\u8861\u72b6\u6001\uff0c\u5176\u7a33\u6001\u5fc5\u987b\u7531\u5916\u90e8\u80fd\u91cf\u8f93\u5165\u6765\u7ef4\u6301\u3002</p> <p>\u8fd9\u4e2a\u51c6\u5219\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u89c6\u89c9\u5de5\u5177\uff0c\u5b83\u5c06\u4e0d\u53ef\u9006\u6027\u4e0e\u72b6\u6001\u7a7a\u95f4\u4e2d\u7684\"\u5faa\u73af\"\u76f4\u63a5\u8054\u7cfb\u8d77\u6765\uff0c\u4e3a\u6211\u4eec\u63a5\u4e0b\u6765\u91cf\u5316\u71b5\u4ea7\u751f\u548c\u901a\u91cf\u5960\u5b9a\u4e86\u6982\u5ff5\u57fa\u7840\u3002</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#2","title":"2. \u8d85\u8d8a\u5e73\u8861\u6001 \u2014\u2014 \u4e0d\u53ef\u9006\u6027\u4e0e\u65f6\u95f4\u4e4b\u7bad","text":"<p>\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u544a\u522b\u7b80\u6d01\u7684\u5e73\u8861\u4e16\u754c\uff0c\u8fdb\u5165\u66f4\u4e3a\u666e\u904d\u7684\u975e\u5e73\u8861\u9886\u57df\u3002\u8fd9\u4e9b\u7cfb\u7edf\u662f\u6d3b\u8dc3\u7684\u3001\u52a8\u6001\u7684\uff0c\u5e76\u4e14\u5177\u6709\u660e\u786e\u7684\u65f6\u95f4\u65b9\u5411\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u91cf\u5316\u8fd9\u79cd\"\u65b9\u5411\u6027\"\u3002</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#21-ness","title":"2.1 \u5f53\u5e73\u8861\u88ab\u6253\u7834\uff1a\u975e\u5e73\u8861\u7a33\u6001 (NESS)","text":"<p>\u5f53\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\u4e0d\u88ab\u6ee1\u8db3\u65f6\uff0c\u7cfb\u7edf\u4ecd\u7136\u53ef\u4ee5\u8fbe\u5230\u4e00\u4e2a\u7a33\u6001\uff0c\u5373\u6982\u7387\u5206\u5e03\u4e0d\u968f\u65f6\u95f4\u6539\u53d8 \\(\\frac{d\\mathbf{p}(t)}{dt} = 0\\)\u3002\u7136\u800c\uff0c\u6b64\u65f6\u7cfb\u7edf\u5185\u90e8\u5b58\u5728\u6301\u7eed\u7684\u3001\u975e\u96f6\u7684\u51c0\u6982\u7387\u6d41 \\(J_{ij} = \\pi_i w_{i \\to j} - \\pi_j w_{j \\to i} \\neq 0\\)\u3002\u8fd9\u5c31\u662f\u975e\u5e73\u8861\u7a33\u6001 (Non-Equilibrium Steady State, NESS) \u3002</p> <p>\u4e00\u4e2a\u7edd\u4f73\u7684\u7c7b\u6bd4\u662f\u55b7\u6cc9\uff1a\u6c34\u6c60\u4e2d\u7684\u6c34\u4f4d\uff08\u5bf9\u5e94\u6982\u7387\uff09\u4fdd\u6301\u6052\u5b9a\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u56e0\u4e3a\u6c34\u662f\u9759\u6b62\u7684\uff0c\u800c\u662f\u56e0\u4e3a\u6c34\u6cf5\u5728\u6301\u7eed\u5730\u5c06\u6c34\u62bd\u4e0a\u9ad8\u5904\uff0c\u6c34\u53c8\u4e0d\u65ad\u5730\u6d41\u56de\u6c34\u6c60\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7ef4\u6301\u4e86\u4e00\u4e2a\u52a8\u6001\u7684\u5e73\u8861\uff0c\u9700\u8981\u6301\u7eed\u7684\u80fd\u91cf\u8f93\u5165\uff08\u6c34\u6cf5\u505a\u529f\uff09\u6765\u62b5\u6297\u91cd\u529b\uff08\u8017\u6563\uff09\u3002\u540c\u6837\uff0c\u751f\u547d\u7cfb\u7edf\u3001\u7535\u8def\u3001\u4ee5\u53ca\u6240\u6709\u6267\u884c\u529f\u80fd\u7684\u5206\u5b50\u673a\u5668\u90fd\u5de5\u4f5c\u5728 NESS \u72b6\u6001\u3002</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#22","title":"2.2 \u6b63\u5411\u4e0e\u53cd\u5411\u8f68\u8ff9","text":"<p>\u4e3a\u4e86\u91cf\u5316\u4e0d\u53ef\u9006\u6027\uff0c\u6211\u4eec\u9700\u8981\u6bd4\u8f83\u7cfb\u7edf\u6f14\u5316\u7684\u4e00\u6761\u6b63\u5411\u8f68\u8ff9 (Forward Trajectory) \u4e0e\u5176\u65f6\u95f4\u53cd\u6f14\u540e\u7684\u53cd\u5411\u8f68\u8ff9 (Backward Trajectory) \u53d1\u751f\u7684\u6982\u7387\u3002</p> <p></p> <p>\u9996\u5148\u5b9a\u4e49\u4e00\u6761\u6b63\u5411\u8f68\u8ff9 \\(\\gamma\\) \u4e3a\u4e00\u4e2a\u72b6\u6001\u5e8f\u5217\u548c\u5728\u6bcf\u4e2a\u72b6\u6001\u7684\u505c\u7559\u65f6\u95f4\uff1a</p> \\[\\gamma: 0 \\xrightarrow{\\tau_1} 1 \\xrightarrow{\\tau_2} \\cdots \\xrightarrow{\\tau_n} n\\] <p>\u8fd9\u6761\u8f68\u8ff9\u7684\u6982\u7387\uff08\u4e25\u683c\u6765\u8bf4\u662f\u6982\u7387\u5bc6\u5ea6\uff09\\(P[\\gamma]\\) \u662f\u5982\u4f55\u6784\u5efa\u7684\u5462\uff1f\u5b83\u7531\u4e00\u7cfb\u5217\u4e8b\u4ef6\u6982\u7387\u7684\u4e58\u79ef\u6784\u6210\uff1a</p> <ol> <li> <p>\u521d\u59cb\u6982\u7387: \u9996\u5148\uff0c\u7cfb\u7edf\u5728\u65f6\u523b \\(t=0\\) \u5904\u4e8e\u72b6\u6001 \\(0\\) \u7684\u6982\u7387\u662f \\(\\pi_0\\)\u3002</p> </li> <li> <p>\u7b49\u5f85\u6982\u7387: \u5728\u72b6\u6001 \\(k\\) \u505c\u7559\u65f6\u95f4 \\(\\tau_k\\) \u800c\u4e0d\u53d1\u751f\u8df3\u8f6c\u7684\u6982\u7387\u3002\u8fd9\u662f\u4e00\u4e2a\u6cca\u677e\u8fc7\u7a0b\uff0c\u5176\u6982\u7387\u4e3a \\(e^{-\\alpha_k \\tau_k}\\)\uff0c\u5176\u4e2d \\(\\alpha_k = \\sum_{\\ell \\neq k} w_{k \\to \\ell}\\) \u662f\u79bb\u5f00\u72b6\u6001 \\(k\\) \u7684\u603b\u901f\u7387\uff0c\u4e5f\u53eb\u51fa\u5c04\u901f\u7387 (exit rate) \u3002</p> </li> <li> <p>\u8df3\u8f6c\u6982\u7387: \u53d1\u751f\u4e00\u6b21\u4ece \\(k\\) \u5230 \\(k+1\\) \u8df3\u8f6c\u7684\u6982\u7387\u6b63\u6bd4\u4e8e\u8f6c\u79fb\u901f\u7387 \\(w_{k \\to k+1}\\)\u3002</p> </li> </ol> <p>\u5c06\u8fd9\u4e9b\u90e8\u5206\u7ec4\u5408\u8d77\u6765\uff0c\u6211\u4eec\u5f97\u5230\u6b63\u5411\u8f68\u8ff9\u7684\u6982\u7387\uff1a</p> \\[P[\\gamma] = \\pi_0 \\cdot e^{-\\alpha_0 \\tau_0} \\cdot w_{0 \\to 1} \\cdot e^{-\\alpha_1 \\tau_1} \\cdot w_{1 \\to 2} \\cdots w_{n-1 \\to n} \\cdot e^{-\\alpha_n \\tau_n}\\] <p>\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u65f6\u95f4\u53cd\u6f14\u7684\u8f68\u8ff9 \\(\\bar{\\gamma}\\)\uff0c\u5b83\u4ece\u72b6\u6001 \\(n\\) \u5f00\u59cb\uff0c\u9006\u5e8f\u7ecf\u8fc7\u76f8\u540c\u7684\u72b6\u6001\uff0c\u6700\u7ec8\u56de\u5230\u72b6\u6001 \\(0\\)\u3002\u5176\u6982\u7387\u4e3a\uff1a</p> \\[P[\\bar{\\gamma}] = \\pi_n \\cdot e^{-\\alpha_n \\tau_n} \\cdot w_{n \\to n-1} \\cdots w_{1 \\to 0} \\cdot e^{-\\alpha_0 \\tau_0}\\]"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#23","title":"2.3 \u91cf\u5316\u4e0d\u53ef\u9006\u6027\uff1a\u6cbf\u8def\u5f84\u7684\u71b5\u4ea7\u751f","text":"<p>\u4e0d\u53ef\u9006\u6027\u7684\u6838\u5fc3\u5728\u4e8e\u6b63\u5411\u548c\u53cd\u5411\u8f68\u8ff9\u7684\u6982\u7387\u4e0d\u518d\u76f8\u7b49\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u5b83\u4eec\u7684\u6bd4\u503c\u6765\u91cf\u5316\u8fd9\u79cd\u4e0d\u5bf9\u79f0\u6027\uff1a</p> \\[\\frac{P[\\bar{\\gamma}]}{P[\\gamma]} = \\frac{\\pi_n e^{-\\alpha_n \\tau_n} w_{n \\to n-1} \\cdots w_{1 \\to 0} e^{-\\alpha_0 \\tau_0}}{\\pi_0 e^{-\\alpha_0 \\tau_0} w_{0 \\to 1} \\cdots w_{n-1 \\to n} e^{-\\alpha_n \\tau_n}}\\] <p>\u4e00\u4e2a\u975e\u5e38\u6df1\u523b\u7684\u7ed3\u679c\u662f\uff0c\u6240\u6709\u4e0e\u505c\u7559\u65f6\u95f4\u76f8\u5173\u7684\u6307\u6570\u9879 \\(e^{-\\alpha_k \\tau_k}\\) \u90fd\u88ab\u7cbe\u786e\u5730\u6d88\u6389\u4e86\uff01\u8fd9\u544a\u8bc9\u6211\u4eec\uff0c\u4e0d\u53ef\u9006\u6027\uff08\u4ee5\u53ca\u540e\u7eed\u5b9a\u4e49\u7684\u71b5\u4ea7\u751f\uff09\u7684\u6839\u6e90\u5728\u4e8e\u72b6\u6001\u4e4b\u95f4\u7684\u8df3\u8f6c\uff0c\u800c\u4e0d\u662f\u5728\u67d0\u4e2a\u72b6\u6001\u4e0a\u7684\u7b49\u5f85\u3002</p> <p>\u7b80\u5316\u540e\uff0c\u6211\u4eec\u5f97\u5230\uff1a</p> \\[\\frac{P[\\bar{\\gamma}]}{P[\\gamma]} = \\frac{\\pi_n}{\\pi_0} \\cdot \\frac{w_{n \\to n-1} w_{n-1 \\to n-2} \\cdots w_{1 \\to 0}}{w_{0 \\to 1} w_{1 \\to 2} \\cdots w_{n-1 \\to n}}\\] <p>\u57fa\u4e8e\u8fd9\u4e2a\u6bd4\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u6cbf\u8f68\u8ff9 \\(\\gamma\\) \u7684\u603b\u71b5\u4ea7\u751f (Total Entropy Production) \\(\\Delta s[\\gamma]\\)\uff1a</p> \\[\\Delta s[\\gamma] = \\ln \\frac{P[\\bar{\\gamma}]}{P[\\gamma]}\\] <p>\u8fd9\u4e2a\u5bf9\u6570\u6bd4\u503c\u7684\u5f62\u5f0f\u5e76\u975e\u5076\u7136\uff0c\u5b83\u4e0e\u4fe1\u606f\u8bba\u4e2d\u7684\u76f8\u5bf9\u71b5 (Kullback-Leibler Divergence) \u6709\u7740\u6df1\u523b\u7684\u8054\u7cfb\u3002</p> <p>\u7269\u7406\u610f\u4e49\uff1a\\(\\Delta s[\\gamma]\\) \u91cf\u5316\u4e86\u6211\u4eec\u533a\u5206\u6b63\u5411\u8f68\u8ff9\u548c\u53cd\u5411\u8f68\u8ff9\u7684\u80fd\u529b\u3002</p> <p>\u5982\u679c \\(\\Delta s[\\gamma] \\gg 0\\)\uff0c\u610f\u5473\u7740 \\(P[\\gamma] \\gg P[\\bar{\\gamma}]\\)\uff0c\u6b63\u5411\u8fc7\u7a0b\u6bd4\u53cd\u5411\u8fc7\u7a0b\u66f4\u5bb9\u6613\u53d1\u751f\uff0c\u65f6\u95f4\u4e4b\u7bad\u7684\u65b9\u5411\u975e\u5e38\u660e\u786e\u3002</p> <p>\u5982\u679c\u7cfb\u7edf\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\uff0c\u90a3\u4e48\u5e73\u5747\u800c\u8a00\uff0c\u8fd9\u4e2a\u6bd4\u503c\u4f1a\u662f1\uff0c\\(\\Delta s[\\gamma]\\) \u4f1a\u57280\u9644\u8fd1\u6ce2\u52a8\uff0c\u8868\u660e\u8fc7\u7a0b\u662f\u65f6\u95f4\u5bf9\u79f0\u7684\u3002</p> <p>\u4fe1\u606f\u8bba\u89c6\u89d2\uff1a\u71b5\u4ea7\u751f\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u6211\u4eec\u901a\u8fc7\u89c2\u5bdf\u8f68\u8ff9\u6765\u5224\u65ad\u65f6\u95f4\u6d41\u5411\u6240\u83b7\u5f97\u7684\u4fe1\u606f\u91cf\u3002\u4e00\u4e2a\u4e0d\u53ef\u9006\u7684\u8fc7\u7a0b\u4f1a\u4e0d\u65ad\u4ea7\u751f\u4fe1\u606f\uff0c\u4ece\u800c\u533a\u5206\u8fc7\u53bb\u548c\u672a\u6765\u3002</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#24","title":"2.4 \u89e3\u6784\u71b5\uff1a\u7cfb\u7edf\u4e0e\u73af\u5883","text":"<p>\u603b\u71b5\u4ea7\u751f\u53ef\u4ee5\u88ab\u5206\u89e3\u4e3a\u4e24\u4e2a\u6709\u660e\u786e\u7269\u7406\u610f\u4e49\u7684\u90e8\u5206\uff1a</p> \\[\\Delta s[\\gamma] = \\ln\\left(\\frac{\\pi_n}{\\pi_0}\\right) + \\sum_{k=1}^{n} \\ln\\left(\\frac{w_{k \\to k-1}}{w_{k-1 \\to k}}\\right)\\] <p>\u6211\u4eec\u5c06\u8fd9\u4e24\u9879\u5206\u522b\u5b9a\u4e49\u4e3a\uff1a</p> <ol> <li>\u7cfb\u7edf\u71b5\u53d8 (System Entropy Change): </li> </ol> \\[ (\\Delta s)_{\\text{system}} = \\ln\\left(\\frac{\\pi_n}{\\pi_0}\\right) = -\\ln \\pi_n - (-\\ln \\pi_0) \\] <p>\u8fd9\u4e00\u9879\u53ea\u4f9d\u8d56\u4e8e\u8f68\u8ff9\u7684\u521d\u672b\u72b6\u6001\uff0c\u800c\u4e0e\u4e2d\u95f4\u7ecf\u8fc7\u7684\u8def\u5f84\u65e0\u5173\u3002\u8fd9\u662f\u72b6\u6001\u51fd\u6570 (State Function) \u7684\u5178\u578b\u7279\u5f81\u3002\u5b83\u4ee3\u8868\u4e86\u7cfb\u7edf\u81ea\u8eab\u4fe1\u606f\u71b5\u7684\u53d8\u5316\uff08\u4ee5\u73bb\u5c14\u5179\u66fc\u71b5 \\(S = -k_B \\ln p\\) \u7684\u5f62\u5f0f\uff09\u3002</p> <ol> <li>\u73af\u5883\u71b5\u53d8 (Environment Entropy Change): </li> </ol> \\[ (\\Delta s)_{\\text{env}} = \\sum_{k=1}^{n} \\ln\\left(\\frac{w_{k \\to k-1}}{w_{k-1 \\to k}}\\right) \\] <p>\u8fd9\u4e00\u9879\u662f\u8f68\u8ff9\u4e2d\u6bcf\u4e00\u6b65\u8df3\u8f6c\u8d21\u732e\u7684\u603b\u548c\u3002\u5982\u679c\u4ece\u72b6\u60010\u5230\u72b6\u6001n\u6362\u4e00\u6761\u4e0d\u540c\u7684\u8def\u5f84\uff0c\u8fd9\u4e2a\u503c\u5c31\u4f1a\u6539\u53d8\u3002\u8fd9\u662f\u8def\u5f84\u51fd\u6570 (Path Function) \u7684\u7279\u5f81\uff0c\u7c7b\u4f3c\u4e8e\u7ecf\u5178\u70ed\u529b\u5b66\u4e2d\u7684\u70ed\u548c\u529f\u3002\u5b83\u4ee3\u8868\u4e86\u4e3a\u4e86\u9a71\u52a8\u8fd9\u6761\u8f68\u8ff9\u53d1\u751f\uff0c\u7cfb\u7edf\u4e0e\u73af\u5883\u4e4b\u95f4\u4ea4\u6362\u7684\u71b5\uff08\u901a\u5e38\u4ee5\u70ed\u91cf\u7684\u5f62\u5f0f\uff09\u3002</p> <p>\u8fd9\u4e2a\u5206\u89e3\u662f\u968f\u673a\u70ed\u529b\u5b66\u7684\u57fa\u77f3\uff0c\u5b83\u5c06\u5b8f\u89c2\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u5728\u5355\u6761\u5fae\u89c2\u8f68\u8ff9\u7684\u5c42\u9762\u4e0a\u8fdb\u884c\u4e86\u7cbe\u786e\u7684\u91cd\u8ff0\uff1a</p> \\[ \\Delta s_{\\text{total}} = \\Delta s_{\\text{sys}} + \\Delta s_{\\text{env}} \\]"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#25-sigma","title":"2.5 \u5e73\u5747\u71b5\u4ea7\u751f\u901f\u7387 \\(\\sigma\\)","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5904\u4e8e\u975e\u5e73\u8861\u7a33\u6001 (NESS) \u7684\u7cfb\u7edf\uff0c\u6211\u4eec\u66f4\u5173\u5fc3\u7684\u662f\u5176\u957f\u671f\u3001\u6301\u7eed\u7684\u71b5\u4ea7\u751f\u80fd\u529b\u3002\u8fd9\u901a\u8fc7\u5e73\u5747\u71b5\u4ea7\u751f\u901f\u7387 (Average Entropy Production Rate) \\(\\sigma\\) \u6765\u8861\u91cf\u3002</p> \\[\\sigma = \\lim_{T \\to \\infty} \\frac{1}{T} \\langle \\Delta s[\\gamma] \\rangle\\] <p>\u8fd9\u91cc\u7684 \\(\\langle \\cdot \\rangle\\) \u8868\u793a\u5bf9\u6240\u6709\u5728\u65f6\u95f4 \\(T\\) \u5185\u53ef\u80fd\u53d1\u751f\u7684\u8f68\u8ff9\u8fdb\u884c\u5e73\u5747\u3002\u5728\u957f\u65f6\u95f4\u6781\u9650\u4e0b\uff0c\u7cfb\u7edf\u71b5\u53d8 \\((\\Delta s)_{\\text{system}}\\) \u7684\u8d21\u732e\u4f1a\u56e0\u5176\u4ec5\u4f9d\u8d56\u4e8e\u521d\u672b\u72b6\u6001\u800c\u88ab\u5e73\u5747\u6389\uff0c\u8d77\u4e3b\u5bfc\u4f5c\u7528\u7684\u662f\u73af\u5883\u71b5\u53d8\u3002</p> <p>\u7ecf\u8fc7\u63a8\u5bfc\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6781\u5176\u4f18\u7f8e\u7684\u6700\u7ec8\u8868\u8fbe\u5f0f\uff1a</p> \\[ \\sigma = \\frac{1}{2} \\sum_{i,j} (\\pi_i w_{i \\to j} - \\pi_j w_{j \\to i}) \\ln\\left(\\frac{\\pi_j w_{j \\to i}}{\\pi_i w_{i \\to j}}\\right) \\] <p>\u8fd9\u4e2a\u516c\u5f0f\u4e5f\u53ef\u4ee5\u5199\u4f5c\uff1a</p> \\[ \\sigma = \\sum_{i &lt; j} J_{ij} \\ln \\left( \\frac{w_{i \\to j}}{w_{j \\to i}} \\right) \\] <p>\u6df1\u523b\u7684\u7269\u7406\u7ed3\u6784\uff1a\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u5177\u6709\uff08\u901a\u91cf\uff09x\uff08\u70ed\u529b\u5b66\u529b\uff09\u7684\u666e\u9002\u7ed3\u6784\uff0c\u8fd9\u662f\u6240\u6709\u4e0d\u53ef\u9006\u8fc7\u7a0b\u8017\u6563\u7406\u8bba\u7684\u6838\u5fc3\u3002</p> <p>\u901a\u91cf (Flux): \\(J_{ij} = \\pi_i w_{i \\to j} - \\pi_j w_{j \\to i}\\) \u662f\u72b6\u6001\u95f4\u7684\u51c0\u6982\u7387\u6d41\u3002</p> <p>\u70ed\u529b\u5b66\u529b (Thermodynamic Force): \\(A_{ij} = \\ln\\left(\\frac{w_{j \\to i}}{w_{i \\to j}}\\right)\\) \u662f\u9a71\u52a8\u8be5\u901a\u91cf\u4ea7\u751f\u7684\"\u529b\"\u3002</p> <p>\u975e\u8d1f\u6027\uff1a\u5229\u7528\u4e0d\u7b49\u5f0f \\((x-y)\\ln(x/y) \\geq 0\\)\uff0c\u53ef\u4ee5\u8bc1\u660e \\(\\sigma \\geq 0\\)\u3002\u7b49\u53f7\u6210\u7acb\u7684\u552f\u4e00\u6761\u4ef6\u662f\uff0c\u5bf9\u6240\u6709\u7684\u72b6\u6001\u5bf9 \\((i,j)\\)\uff0c\u51c0\u901a\u91cf \\(J_{ij} = 0\\)\u3002\u8fd9\u6070\u6070\u5c31\u662f\u7ec6\u81f4\u5e73\u8861\u7684\u6761\u4ef6\u3002</p> <p>\u56e0\u6b64\uff0c\u4efb\u4f55\u504f\u79bb\u70ed\u5e73\u8861\u7684\u7cfb\u7edf\uff08\u4efb\u4f55 NESS\uff09\u90fd\u5fc5\u7136\u662f\u4e00\u4e2a\u6301\u7eed\u4ea7\u751f\u71b5\u7684\"\u673a\u5668\"\u3002\\(\\sigma\\) \u5c31\u662f\u7ef4\u6301\u5176\u975e\u5e73\u8861\u7ed3\u6784\u548c\u529f\u80fd\u6240\u5fc5\u987b\u4ed8\u51fa\u7684\u3001\u4e0d\u53ef\u907f\u514d\u7684\u70ed\u529b\u5b66\u4ee3\u4ef7\u3002</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#3-python","title":"3. Python \u6a21\u62df","text":""},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#31","title":"3.1 \u6a21\u62df\u4e00\u4e2a\u53ef\u9006\u7cfb\u7edf\uff1a\u7c92\u5b50\u5728\u4e09\u52bf\u9631\u4e2d\u7684\u70ed\u8fd0\u52a8","text":"<p>\u60f3\u8c61\u4e00\u4e2a\u5fae\u89c2\u7c92\u5b50\uff08\u4f8b\u5982\u80f6\u4f53\u9897\u7c92\uff09\u6d78\u6da6\u5728\u6052\u6e29\u7684\u70ed\u6d74\u4e2d\uff0c\u5e76\u88ab\u9650\u5236\u5728\u4e00\u4e2a\u5177\u6709\u4e09\u4e2a\u7a33\u5b9a\u6df1\u5ea6\u7684\u201c\u52bf\u9631\u201d\uff08Potential Well\uff09\u4e2d\u8fd0\u52a8\u3002\u7531\u4e8e\u6765\u81ea\u5468\u56f4\u6db2\u4f53\u5206\u5b50\u7684\u968f\u673a\u78b0\u649e\uff08\u70ed\u6da8\u843d\uff09\uff0c\u8fd9\u4e2a\u7c92\u5b50\u6709\u8db3\u591f\u7684\u80fd\u91cf\u8df3\u8d8a\u52bf\u9631\u4e4b\u95f4\u7684\u201c\u80fd\u5792\u201d\uff0c\u4ece\u800c\u5728\u4e09\u4e2a\u72b6\u6001\uff08\u9631A\u3001\u9631B\u3001\u9631C\uff09\u4e4b\u95f4\u968f\u673a\u8dc3\u8fc1\u3002\u7531\u4e8e\u6574\u4e2a\u7cfb\u7edf\u4e0e\u4e00\u4e2a\u5355\u4e00\u6e29\u5ea6\u7684\u70ed\u6d74\u8fbe\u5230\u5e73\u8861\uff0c\u5b83\u5fc5\u7136\u6ee1\u8db3\u7ec6\u81f4\u5e73\u8861\u6761\u4ef6\uff0c\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u53ef\u9006\u8fc7\u7a0b\u3002</p> <p>\u5b9e\u73b0\u601d\u8def:</p> <ol> <li>\u6784\u5efa\u80fd\u91cf\u666f\u89c2: \u6211\u4eec\u8bbe\u5b9a\u4e09\u4e2a\u52bf\u9631\u7684\u80fd\u91cf\u6df1\u5ea6 (\\(E_A, E_B, E_C\\)) \u548c\u5b83\u4eec\u4e4b\u95f4\u7684\u80fd\u5792\u9ad8\u5ea6\u3002</li> <li>\u8ba1\u7b97\u901f\u7387: \u8dc3\u8fc1\u901f\u7387\u7531\u963f\u4f26\u5c3c\u4e4c\u65af\u5b9a\u5f8b\u7ed9\u51fa\uff0c\u5373\u4ece\u4e00\u4e2a\u6df1\u9631\u8df3\u5230\u4e00\u4e2a\u6d45\u9631\u8981\u6bd4\u53cd\u5411\u8fc7\u7a0b\u5bb9\u6613\u5f97\u591a\u3002\u4ece\u72b6\u6001 \\(i\\) \u5230 \\(j\\) \u7684\u901f\u7387 \\(w_{i \\to j} \\propto \\exp(-\\frac{\\Delta E_{\\text{barrier}}}{k_B T})\\)\u3002</li> <li>\u7406\u8bba\u7a33\u6001: \u5728\u70ed\u5e73\u8861\u4e0b\uff0c\u7c92\u5b50\u5728\u6bcf\u4e2a\u52bf\u9631\u4e2d\u88ab\u53d1\u73b0\u7684\u6982\u7387\u9075\u5faa\u73bb\u5c14\u5179\u66fc\u5206\u5e03\uff0c\u5373 \\(\\pi_i \\propto \\exp(-\\frac{E_i}{k_B T})\\)\u3002\u80fd\u91cf\u8d8a\u4f4e\u7684\u52bf\u9631\uff0c\u7c92\u5b50\u5f85\u5728\u91cc\u9762\u7684\u6982\u7387\u8d8a\u9ad8\u3002</li> <li>\u5206\u6790\u4e0e\u9a8c\u8bc1: \u6211\u4eec\u5c06\u8fd0\u884c Gillespie \u6a21\u62df\uff0c\u5e76\u9a8c\u8bc1\u5176\u8f68\u8ff9\u5728\u7edf\u8ba1\u4e0a\u6ca1\u6709\u51c0\u7684\u73af\u6d41\uff0c\u4e14\u6700\u7ec8\u7684\u5360\u636e\u6982\u7387\u7cbe\u786e\u5730\u6536\u655b\u5230\u7406\u8bba\u4e0a\u7684\u73bb\u5c14\u5179\u66fc\u5206\u5e03\u3002</li> </ol> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n\ndef gillespie_simulation(Q, initial_state, T_max):\n    \"\"\"\n    Simulates a continuous-time Markov process using the Gillespie algorithm.\n\n    Args:\n        Q (np.array): The transition rate matrix (Q_ij = w_j-&gt;i).\n        initial_state (int): The starting state.\n        T_max (float): The maximum simulation time.\n\n    Returns:\n        tuple: A tuple containing lists of times, states, and transitions.\n    \"\"\"\n    num_states = Q.shape[0]\n    states = np.arange(num_states)\n\n    current_state = initial_state\n    t = 0.0\n\n    time_points = [t]\n    state_trajectory = [current_state]\n    transitions = []\n\n    while t &lt; T_max:\n        rates_out = np.array([Q[j, current_state] for j in states if j != current_state])\n        total_rate_out = np.sum(rates_out)\n\n        if total_rate_out == 0:\n            break\n\n        dt = np.random.exponential(1.0 / total_rate_out)\n        t += dt\n        if t &gt;= T_max:\n            break\n\n        possible_next_states = [j for j in states if j != current_state]\n        probabilities = rates_out / total_rate_out\n        next_state = np.random.choice(possible_next_states, p=probabilities)\n\n        transitions.append((current_state, next_state))\n        current_state = next_state\n\n        time_points.append(t)\n        state_trajectory.append(current_state)\n\n    return time_points, state_trajectory, transitions\n\n# --- 1. Reversible System: Particle in a Triple-Well Potential ---\nprint(\"--- Simulating Reversible System (Thermal Equilibrium) ---\")\n\n# Physical Parameters (in units of k_B*T, so k_B*T=1)\nE = np.array([-1.5, -2.0, -0.5]) # Energy of wells A, B, C\nE_barrier_base = 0.5 # Energy barrier height relative to the higher well\nprefactor = 1.0 # Arrhenius prefactor\n\n# Calculate theoretical steady-state (Boltzmann distribution)\nZ = np.sum(np.exp(-E))\npi_theory = np.exp(-E) / Z\n\n# Calculate transition rates from energy landscape (Arrhenius law)\n# w_ij = A * exp(-(E_barrier_ij - E_i))\nrates = {}\nrates[(0, 1)] = prefactor * np.exp(-(E_barrier_base + max(E[0], E[1]) - E[0])) # A -&gt; B\nrates[(1, 0)] = prefactor * np.exp(-(E_barrier_base + max(E[0], E[1]) - E[1])) # B -&gt; A\nrates[(1, 2)] = prefactor * np.exp(-(E_barrier_base + max(E[1], E[2]) - E[1])) # B -&gt; C\nrates[(2, 1)] = prefactor * np.exp(-(E_barrier_base + max(E[1], E[2]) - E[2])) # C -&gt; B\nrates[(2, 0)] = prefactor * np.exp(-(E_barrier_base + max(E[2], E[0]) - E[2])) # C -&gt; A\nrates[(0, 2)] = prefactor * np.exp(-(E_barrier_base + max(E[2], E[0]) - E[0])) # A -&gt; C\n\n# Construct the Q-matrix\nQ_rev = np.zeros((3, 3))\nfor (i, j), rate in rates.items():\n    Q_rev[j, i] = rate\nfor i in range(3):\n    Q_rev[i, i] = -np.sum(Q_rev[:, i])\n\n# Verify Kolmogorov's loop criterion\nprod_clockwise = rates[(0,1)] * rates[(1,2)] * rates[(2,0)]\nprod_counter_clockwise = rates[(0,2)] * rates[(2,1)] * rates[(1,0)]\nprint(\"Kolmogorov's Loop Criterion Check:\")\nprint(f\"  Clockwise rate product = {prod_clockwise:.4f}\")\nprint(f\"  Counter-clockwise rate product = {prod_counter_clockwise:.4f}\")\nprint(f\"  Ratio (should be 1.0): {prod_clockwise / prod_counter_clockwise:.4f}\\n\")\n\n# Run a long simulation\nT_max_rev = 200000\ntimes, states, transitions = gillespie_simulation(Q_rev, 0, T_max_rev)\n\n# Analyze net flux\ntransition_counts = Counter(transitions)\nclockwise_jumps = transition_counts.get((0,1),0) + transition_counts.get((1,2),0) + transition_counts.get((2,0),0)\ncounter_clockwise_jumps = transition_counts.get((0,2),0) + transition_counts.get((2,1),0) + transition_counts.get((1,0),0)\n\nprint(f\"In a simulation of T={T_max_rev}:\")\nprint(f\"  Total clockwise jumps: {clockwise_jumps}\")\nprint(f\"  Total counter-clockwise jumps: {counter_clockwise_jumps}\")\nprint(\"The counts are very close, indicating no net probability flux.\\n\")\n\n# Calculate simulated steady-state distribution\noccupancy_times = np.zeros(3)\nfor i in range(len(times) - 1):\n    occupancy_times[states[i]] += times[i+1] - times[i]\noccupancy_times[states[-1]] += T_max_rev - times[-1]\npi_simulated = occupancy_times / T_max_rev\n\nprint(\"Steady-State Distribution (Boltzmann) Comparison:\")\nprint(f\"  Theoretical pi = {np.round(pi_theory, 4)}\")\nprint(f\"  Simulated pi   = {np.round(pi_simulated, 4)}\")\n\n# --- Visualization ---\nplt.style.use('seaborn-v0_8-whitegrid')\nfig = plt.figure(figsize=(12, 9))\ngs = fig.add_gridspec(2, 2)\n\n# Plot 1: Potential Energy Landscape\nax1 = fig.add_subplot(gs[0, :])\nx_coords = np.linspace(-1, 5, 500)\n# A simple polynomial to represent a triple-well potential visually\nU = 0.1 * (x_coords**6 - 12*x_coords**5 + 47*x_coords**4 - 60*x_coords**3 + 16*x_coords**2 + 10*x_coords)\n# Adjust wells to roughly match energy levels E\nU -= np.min(U)\nU[x_coords &lt; 1.5] += E[0] - np.min(U[x_coords &lt; 1.5]) + 2.5\nU[(x_coords &gt;= 1.5) &amp; (x_coords &lt;= 3.5)] += E[1] - np.min(U[(x_coords &gt;= 1.5) &amp; (x_coords &lt;= 3.5)]) + 2.5\nU[x_coords &gt; 3.5] += E[2] - np.min(U[x_coords &gt; 3.5]) + 2.5\n\nax1.plot(x_coords, U, color='black', linewidth=2.5)\nax1.set_title('Physical Model: Particle in a Triple-Well Potential')\nax1.set_xlabel('Position (arbitrary units)')\nax1.set_ylabel(r'Potential Energy $U(x)$')\nax1.text(0.5, E[0]+2.8, 'Well A (State 0)', ha='center')\nax1.text(2.5, E[1]+2.8, 'Well B (State 1)', ha='center')\nax1.text(4.5, E[2]+2.8, 'Well C (State 2)', ha='center')\nax1.set_yticks([]) # Hide y-axis ticks for a cleaner look\n\n# Plot 2: Trajectory\nax2 = fig.add_subplot(gs[1, 0])\nstate_labels = ['Well A (0)', 'Well B (1)', 'Well C (2)']\nt_display_limit = min(500, T_max_rev)\ndisplay_indices = np.where(np.array(times) &lt;= t_display_limit)\nax2.step(np.array(times)[display_indices], np.array(states)[display_indices], where='post')\nax2.set_title(f'Sample Trajectory (First {t_display_limit} time units)')\nax2.set_xlabel('Time')\nax2.set_ylabel('State')\nax2.set_yticks([0, 1, 2])\nax2.set_yticklabels(state_labels)\nax2.set_ylim(-0.5, 2.5)\n\n# Plot 3: Steady-State Distribution\nax3 = fig.add_subplot(gs[1, 1])\nax3.bar(state_labels, pi_simulated, color='cornflowerblue', edgecolor='black', label='Simulation Result')\nax3.plot(state_labels, pi_theory, 'ro', markersize=10, label=r'Theory (Boltzmann $\\pi$)')\nax3.set_title('Steady-State Probability Distribution')\nax3.set_ylabel('Probability')\nax3.set_ylim(0, max(np.max(pi_theory), np.max(pi_simulated)) * 1.2)\nax3.legend()\nfor i, p in enumerate(pi_simulated):\n    ax3.text(i, p, f'{p:.3f}', ha='center', va='bottom', fontsize=10)\n\nplt.tight_layout()\nplt.show()\n</code></pre> \u8fd0\u884c\u4ee3\u7801\u8f93\u51fa\uff1a <pre><code>--- Simulating Reversible System (Thermal Equilibrium) ---\nKolmogorov's Loop Criterion Check:\n  Clockwise rate product = 0.0498\n  Counter-clockwise rate product = 0.0498\n  Ratio (should be 1.0): 1.0000\n\nIn a simulation of T=200000:\n  Total clockwise jumps: 69792\n  Total counter-clockwise jumps: 69734\nThe counts are very close, indicating no net probability flux.\n\nSteady-State Distribution (Boltzmann) Comparison:\n  Theoretical pi = [0.3315 0.5465 0.122 ]\n  Simulated pi   = [0.3318 0.5461 0.122 ]\n</code></pre> </p> <p>\u4e0a\u56fe (Physical Model) \u663e\u793a\u4e86\u7cfb\u7edf\u7684\u7269\u7406\u89c4\u5219\uff1a\u4e00\u4e2a\u7c92\u5b50\u5728\u5177\u6709\u4e09\u4e2a\u4e0d\u540c\u6df1\u5ea6\u52bf\u9631\u7684\u80fd\u91cf\u666f\u89c2\u4e2d\u8fd0\u52a8\u3002\u52bf\u9631B\u6700\u6df1\uff08\u6700\u7a33\u5b9a\uff09\uff0c\u800c\u52bf\u9631C\u6700\u6d45\uff08\u6700\u4e0d\u7a33\u5b9a\uff09\u3002</p> <p>\u5de6\u4e0b\u56fe (Sample Trajectory) \u5c55\u793a\u4e86\u7cfb\u7edf\u7684\u5fae\u89c2\u52a8\u6001\uff1a\u5728\u70ed\u80fd\u7684\u9a71\u52a8\u4e0b\uff0c\u7c92\u5b50\u5728\u4e09\u4e2a\u52bf\u9631\u4e4b\u95f4\u8fdb\u884c\u7740\u6c38\u4e0d\u505c\u6b47\u7684\u968f\u673a\u8df3\u8dc3\u3002</p> <p>\u53f3\u4e0b\u56fe (Steady-State Probability) \u63ed\u793a\u4e86\u7cfb\u7edf\u7684\u5b8f\u89c2\u7edf\u8ba1\u7ed3\u679c\uff1a\u7ecf\u8fc7\u957f\u65f6\u95f4\u7684\u6f14\u5316\uff0c\u7c92\u5b50\u5728\u6bcf\u4e2a\u52bf\u9631\u4e2d\u505c\u7559\u7684\u65f6\u95f4\u6bd4\u4f8b\uff08\u84dd\u8272\u6761\u5f62\u56fe\uff09\u4e0e\u57fa\u4e8e\u5176\u80fd\u91cf\u6df1\u5ea6\u9884\u6d4b\u7684\u7406\u8bba\u73bb\u5c14\u5179\u66fc\u5206\u5e03\uff08\u7ea2\u8272\u5706\u70b9\uff09\u5b8c\u5168\u543b\u5408\u3002\u7c92\u5b50\u5728\u6700\u6df1\u7684\u52bf\u9631B\u4e2d\u505c\u7559\u7684\u65f6\u95f4\u6700\u957f\uff0c\u5728\u6700\u6d45\u7684\u52bf\u9631C\u4e2d\u505c\u7559\u7684\u65f6\u95f4\u6700\u77ed\u3002</p> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u8be5\u56fe\u76f4\u89c2\u5730\u8bc1\u660e\u4e86\u7269\u7406\u89c4\u5219\uff08\u80fd\u91cf\u666f\u89c2\uff09\u5982\u4f55\u51b3\u5b9a\u5fae\u89c2\u7684\u968f\u673a\u884c\u4e3a\uff0c\u5e76\u6700\u7ec8\u6d8c\u73b0\u51fa\u4e00\u4e2a\u53ef\u9884\u6d4b\u7684\u3001\u7a33\u5b9a\u7684\u5b8f\u89c2\u5e73\u8861\u6001\u3002</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#32","title":"3.2 \u6a21\u62df\u4e00\u4e2a\u4e0d\u53ef\u9006\u7cfb\u7edf\uff1a\u53d7\u9a71\u52a8\u529b\u4f5c\u7528\u7684\u73af\u72b6\u7cfb\u7edf","text":"<p>\u7269\u7406\u6a21\u578b: \u60f3\u8c61\u4e00\u4e2a\u5e26\u7535\u7c92\u5b50\u88ab\u675f\u7f1a\u5728\u4e09\u4e2a\u79bb\u6563\u7684\u7ad9\u70b9\uff08\u7ad9\u70b9A\u3001\u7ad9\u70b9B\u3001\u7ad9\u70b9C\uff09\u6784\u6210\u7684\u73af\u4e0a\u3002\u73b0\u5728\uff0c\u6211\u4eec\u65bd\u52a0\u4e00\u4e2a\u6052\u5b9a\u7684\u73af\u5f62\u7535\u573a\uff08\u975e\u4fdd\u5b88\u529b\uff09\u3002\u8fd9\u4e2a\u7535\u573a\u4f1a\u9a71\u52a8\u5e26\u7535\u7c92\u5b50\u503e\u5411\u4e8e\u6cbf\u4e00\u4e2a\u65b9\u5411\uff08\u4f8b\u5982\uff0c\u987a\u65f6\u9488\uff09\u8fd0\u52a8\u3002\u867d\u7136\u70ed\u6da8\u843d\u4ecd\u7136\u5141\u8bb8\u7c92\u5b50\u5076\u5c14\u201c\u9006\u6d41\u800c\u4e0a\u201d\uff0c\u4f46\u6574\u4f53\u4e0a\u4f1a\u5f62\u6210\u4e00\u4e2a\u6301\u7eed\u7684\u3001\u51c0\u7684\u7c92\u5b50\u6d41\u3002\u8fd9\u4e2a\u7cfb\u7edf\u4e3a\u4e86\u7ef4\u6301\u8fd9\u4e2a\u7a33\u6001\u201c\u7535\u6d41\u201d\uff0c\u5fc5\u987b\u6301\u7eed\u4ece\u5916\u90e8\u7535\u573a\u83b7\u53d6\u80fd\u91cf\uff0c\u5e76\u4ee5\u70ed\u91cf\u7684\u5f62\u5f0f\u8017\u6563\u6389\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u4e2a\u5178\u578b\u7684\u975e\u5e73\u8861\u7a33\u6001 (NESS)\u3002</p> <p>\u5b9e\u73b0\u601d\u8def:</p> <ol> <li>\u6784\u5efa\u6a21\u578b: \u6211\u4eec\u76f4\u63a5\u8bbe\u5b9a\u987a\u65f6\u9488\u7684\u8df3\u8f6c\u901f\u7387\uff08\\(w_{cw}\\)\uff09\u8fdc\u5927\u4e8e\u9006\u65f6\u9488\u7684\u901f\u7387\uff08\\(w_{ccw}\\)\uff09\uff0c\u4ee5\u6a21\u62df\u5916\u90e8\u9a71\u52a8\u529b\u3002</li> <li>\u9a8c\u8bc1\u4e0e\u6a21\u62df: \u8be5\u901f\u7387\u8bbe\u7f6e\u660e\u663e\u8fdd\u53cd\u67ef\u5c14\u83ab\u54e5\u6d1b\u592b\u51c6\u5219\u3002\u6211\u4eec\u8fd0\u884c Gillespie \u6a21\u62df\u3002</li> <li>\u5206\u6790:<ul> <li>\u7edf\u8ba1\u987a\u9006\u65f6\u9488\u7684\u8df3\u8f6c\u6b21\u6570\uff0c\u9884\u671f\u4f1a\u89c2\u5bdf\u5230\u5de8\u5927\u7684\u5dee\u5f02\uff0c\u8fd9\u4fbf\u662f\u51c0\u6982\u7387\u7535\u6d41\u7684\u8bc1\u636e\u3002</li> <li>\u8ba1\u7b97\u5e76\u7ed8\u5236\u7d2f\u79ef\u71b5\u4ea7\u751f\u968f\u65f6\u95f4\u53d8\u5316\u7684\u56fe\u50cf\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u88ab\u9a71\u52a8\u7684\u7684\u7cfb\u7edf\uff0c\u8be5\u66f2\u7ebf\u5e94\u5448\u7ebf\u6027\u589e\u957f\uff0c\u5176\u659c\u7387\u5373\u4e3a\u5e73\u5747\u71b5\u4ea7\u751f\u901f\u7387 \\(\\sigma\\)\u3002</li> </ul> </li> </ol> <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom collections import Counter\nimport matplotlib.patches as patches\n\ndef gillespie_simulation(Q, initial_state, T_max):\n    \"\"\"\n    Simulates a continuous-time Markov process using the Gillespie algorithm.\n\n    Args:\n        Q (np.array): The transition rate matrix (Q_ij = w_j-&gt;i).\n        initial_state (int): The starting state.\n        T_max (float): The maximum simulation time.\n\n    Returns:\n        tuple: A tuple containing lists of times, states, and transitions.\n    \"\"\"\n    num_states = Q.shape[0]\n    states = np.arange(num_states)\n\n    current_state = initial_state\n    t = 0.0\n\n    time_points = [t]\n    state_trajectory = [current_state]\n    transitions = []\n\n    while t &lt; T_max:\n        rates_out = np.array([Q[j, current_state] for j in states if j != current_state])\n        total_rate_out = np.sum(rates_out)\n\n        if total_rate_out == 0:\n            break\n\n        dt = np.random.exponential(1.0 / total_rate_out)\n        t += dt\n        if t &gt;= T_max:\n            break\n\n        possible_next_states = [j for j in states if j != current_state]\n        probabilities = rates_out / total_rate_out\n        next_state = np.random.choice(possible_next_states, p=probabilities)\n\n        transitions.append((current_state, next_state))\n        current_state = next_state\n\n        time_points.append(t)\n        state_trajectory.append(current_state)\n\n    return time_points, state_trajectory, transitions\n\n# --- 2. Irreversible System: Driven Particle on a Ring ---\nprint(\"--- Simulating Irreversible System (Non-Equilibrium Steady State) ---\")\nQ_irrev = np.zeros((3, 3))\n\n# Define rates that model a strong clockwise driving force\nw_cw = 10.0  # High rate for clockwise jumps\nw_ccw = 0.5   # Low rate for counter-clockwise jumps\n\nw01_i, w12_i, w20_i = w_cw, w_cw, w_cw\nw10_i, w21_i, w02_i = w_ccw, w_ccw, w_ccw\n\n# Populate Q-matrix\nQ_irrev[1, 0] = w01_i; Q_irrev[0, 1] = w10_i\nQ_irrev[2, 1] = w12_i; Q_irrev[1, 2] = w21_i\nQ_irrev[0, 2] = w20_i; Q_irrev[2, 0] = w02_i\n\nfor i in range(3):\n    Q_irrev[i, i] = -np.sum(Q_irrev[:, i])\n\n# Verify violation of Kolmogorov's criterion\nprod_clockwise_i = w01_i * w12_i * w20_i\nprod_counter_clockwise_i = w02_i * w21_i * w10_i\nprint(\"Kolmogorov's Loop Criterion Check:\")\nprint(f\"  Clockwise rate product = {prod_clockwise_i:.4f}\")\nprint(f\"  Counter-clockwise rate product = {prod_counter_clockwise_i:.4f}\")\nprint(\"The products are unequal, confirming the system is irreversible.\\n\")\n\n# Run simulation\nT_max_irrev = 5000\ntimes_irrev, states_irrev, transitions_irrev = gillespie_simulation(Q_irrev, 0, T_max_irrev)\n\n# Count jumps to show net flux\ntransition_counts_i = Counter(transitions_irrev)\nclockwise_jumps_i = transition_counts_i.get((0,1),0) + transition_counts_i.get((1,2),0) + transition_counts_i.get((2,0),0)\ncounter_clockwise_jumps_i = transition_counts_i.get((0,2),0) + transition_counts_i.get((2,1),0) + transition_counts_i.get((1,0),0)\n\nprint(f\"In a simulation of T={T_max_irrev}:\")\nprint(f\"  Total clockwise jumps: {clockwise_jumps_i}\")\nprint(f\"  Total counter-clockwise jumps: {counter_clockwise_jumps_i}\")\nprint(\"A strong net clockwise probability current is observed.\\n\")\n\n# Calculate and plot cumulative entropy production\nrates_map = {\n    (0,1): w01_i, (1,0): w10_i, \n    (1,2): w12_i, (2,1): w21_i, \n    (2,0): w20_i, (0,2): w02_i\n}\nentropy_production = 0.0\ncumulative_entropy = [0.0]\nentropy_times = [0.0]\n\nfor i in range(len(transitions_irrev)):\n    start, end = transitions_irrev[i]\n    ds_env = np.log(rates_map[(start, end)] / rates_map[(end, start)])\n    entropy_production += ds_env\n    cumulative_entropy.append(entropy_production)\n    entropy_times.append(times_irrev[i+1])\n\n# Calculate average entropy production rate, sigma\navg_sigma = cumulative_entropy[-1] / entropy_times[-1]\nprint(f\"Simulated average entropy production rate (sigma) ~ {avg_sigma:.4f}\")\n\n# --- Visualization ---\nplt.style.use('seaborn-v0_8-whitegrid')\nfig = plt.figure(figsize=(12, 6))\ngs = fig.add_gridspec(1, 2, width_ratios=[1, 2])\n\n# Plot 1: System Diagram\nax1 = fig.add_subplot(gs[0])\npos = {0: (0, 1), 1: (0.866, -0.5), 2: (-0.866, -0.5)}\nax1.scatter([p[0] for p in pos.values()], [p[1] for p in pos.values()], s=1000, c=['#FF6B6B', '#4ECDC4', '#45B7D1'])\nlabels = ['Site A (0)', 'Site B (1)', 'Site C (2)']\nfor i, p in pos.items():\n    ax1.text(p[0], p[1], labels[i], ha='center', va='center', color='white', fontweight='bold')\n\n# Arrows for rates\n# Clockwise (strong)\nax1.add_patch(patches.FancyArrowPatch(pos[0], pos[1], connectionstyle=\"arc3,rad=.3\", color=\"black\", arrowstyle='-&gt;,head_length=10,head_width=8', linewidth=2.5))\nax1.add_patch(patches.FancyArrowPatch(pos[1], pos[2], connectionstyle=\"arc3,rad=.3\", color=\"black\", arrowstyle='-&gt;,head_length=10,head_width=8', linewidth=2.5))\nax1.add_patch(patches.FancyArrowPatch(pos[2], pos[0], connectionstyle=\"arc3,rad=.3\", color=\"black\", arrowstyle='-&gt;,head_length=10,head_width=8', linewidth=2.5))\n# Counter-clockwise (weak)\nax1.add_patch(patches.FancyArrowPatch(pos[1], pos[0], connectionstyle=\"arc3,rad=.3\", color=\"gray\", arrowstyle='-&gt;,head_length=5,head_width=4', linewidth=1, linestyle='--'))\nax1.add_patch(patches.FancyArrowPatch(pos[2], pos[1], connectionstyle=\"arc3,rad=.3\", color=\"gray\", arrowstyle='-&gt;,head_length=5,head_width=4', linewidth=1, linestyle='--'))\nax1.add_patch(patches.FancyArrowPatch(pos[0], pos[2], connectionstyle=\"arc3,rad=.3\", color=\"gray\", arrowstyle='-&gt;,head_length=5,head_width=4', linewidth=1, linestyle='--'))\n\nax1.text(0, 1.5, 'Driving Force', ha='center', fontsize=12, style='italic', color='darkred')\nax1.set_xlim(-1.5, 1.5); ax1.set_ylim(-1.5, 2.0)\nax1.set_aspect('equal'); ax1.axis('off')\nax1.set_title('Physical Model: Driven Particle on a Ring')\n\n\n# Plot 2: Cumulative Entropy Production\nax2 = fig.add_subplot(gs[1])\nax2.plot(entropy_times, cumulative_entropy, '-', label=r'Cumulative Entropy Production $\\Delta s(t)$')\nax2.plot(entropy_times, avg_sigma * np.array(entropy_times), 'k--', linewidth=2, label=fr'Average Rate $\\sigma \\approx {avg_sigma:.3f}$')\nax2.set_title('Entropy Production in the Driven System')\nax2.set_xlabel('Time')\nax2.set_ylabel(r'Total Entropy Production, $\\Delta s(t)$')\nax2.legend()\nax2.grid(True, linestyle='--', alpha=0.7)\n\nplt.tight_layout()\nplt.show()\n</code></pre> \u8fd0\u884c\u4ee3\u7801\u8f93\u51fa</p> <pre><code>--- Simulating Irreversible System (Non-Equilibrium Steady State) ---\nKolmogorov's Loop Criterion Check:\n  Clockwise rate product = 1000.0000\n  Counter-clockwise rate product = 0.1250\nThe products are unequal, confirming the system is irreversible.\n\nIn a simulation of T=5000:\n  Total clockwise jumps: 50008\n  Total counter-clockwise jumps: 2508\nA strong net clockwise probability current is observed.\n\nSimulated average entropy production rate (sigma) ~ 28.4600\n</code></pre> <p></p> <p>\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u4e00\u4e2a\u7531\u5916\u90e8\u9a71\u52a8\u529b\u7ef4\u6301\u7684\u975e\u5e73\u8861\u7a33\u6001 (Non-Equilibrium Steady State) \u7684\u6838\u5fc3\u7279\u5f81\u3002</p> <p>\u5de6\u56fe (Physical Model): \u5c55\u793a\u4e86\u6211\u4eec\u7684\u7269\u7406\u6a21\u578b\uff1a\u4e00\u4e2a\u7c92\u5b50\u5728\u73af\u72b6\u7684\u4e09\u4e2a\u7ad9\u70b9\u95f4\u8fd0\u52a8\uff0c\u5e76\u53d7\u5230\u4e00\u4e2a\u6052\u5b9a\u7684\u201c\u9a71\u52a8\u529b\u201d\u4f5c\u7528\u3002\u8fd9\u4e2a\u529b\u4f7f\u5f97\u7c92\u5b50\u987a\u65f6\u9488\u8df3\u8f6c\u7684\u901f\u7387\uff08\u7c97\u9ed1\u7bad\u5934\uff09\u8fdc\u5927\u4e8e\u9006\u65f6\u9488\u8df3\u8f6c\u7684\u901f\u7387\uff08\u7ec6\u865a\u7ebf\u7bad\u5934\uff09\u3002\u8fd9\u5728\u7269\u7406\u4e0a\u4ee3\u8868\u4e86\u4e00\u4e2a\u6301\u7eed\u6d88\u8017\u80fd\u91cf\u6765\u7ef4\u6301\u5b9a\u5411\u8fd0\u52a8\u7684\u7cfb\u7edf\uff0c\u5b83\u4ece\u6839\u672c\u4e0a\u6253\u7834\u4e86\u7ec6\u81f4\u5e73\u8861\u3002</p> <p>\u53f3\u56fe (Entropy Production): \u4e0d\u53ef\u9006\u6027\u7684\u4ee3\u4ef7 \u5b83\u663e\u793a\u4e86\u7cfb\u7edf\u7d2f\u79ef\u71b5\u4ea7\u751f\u968f\u65f6\u95f4\u7684\u53d8\u5316\u3002\u6211\u4eec\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u5230\uff1a\u603b\u71b5\u4ea7\u751f\uff08\u84dd\u8272\u5b9e\u7ebf\uff09\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5728\u6da8\u843d\u4e2d\u6301\u7eed\u5730\u3001\u7ebf\u6027\u5730\u589e\u52a0\u3002\u8fd9\u4e0e\u53ef\u9006\u7cfb\u7edf\uff08\u71b5\u4ea7\u751f\u5e73\u5747\u4e3a\u96f6\uff09\u5f62\u6210\u4e86\u9c9c\u660e\u5bf9\u6bd4\u3002\u71b5\u4ea7\u751f\u7684\u589e\u52a0\u4e0d\u662f\u968f\u673a\u7684\uff0c\u800c\u662f\u9075\u5faa\u4e00\u4e2a\u975e\u5e38\u7a33\u5b9a\u7684\u5e73\u5747\u901f\u7387\uff0c\u5373\u56fe\u4e2d\u865a\u7ebf\u6240\u793a\u7684\u659c\u7387 \\(\\\\sigma\\)\uff08\u8fd9\u91cc\u7ea6\u4e3a 28.46\uff09\u3002</p>"},{"location":"zh/notes/9.%20%E9%9D%9E%E5%B9%B3%E8%A1%A1%E6%80%81%EF%BC%9A%E4%B8%8D%E5%8F%AF%E9%80%86%E6%80%A7%E4%B8%8E%E7%86%B5%E4%BA%A7%E7%94%9F%E7%9A%84%E6%8E%A8%E8%AE%BA/#_2","title":"\u7ed3\u8bba","text":"<p>\u8fd9\u8282\u8bfe\u6559\u6388\u6b63\u5f0f\u5e26\u9886\u6211\u4eec\u4ece\u5e73\u8861\u5230\u975e\u5e73\u8861\u7269\u7406\u7684\u8f6c\u53d8\u3002\u672c\u8282\u7684\u6838\u5fc3\u8981\u70b9\u5982\u4e0b\uff1a</p> <p>\u5e73\u8861\u6001\u7531\u7ec6\u81f4\u5e73\u8861\u5b9a\u4e49\uff0c\u5176\u6807\u5fd7\u662f\u6ca1\u6709\u51c0\u6982\u7387\u6d41 (\\(J_{ij} = 0\\))\uff0c\u5e73\u5747\u71b5\u4ea7\u751f\u901f\u7387\u4e3a\u96f6 (\\(\\sigma = 0\\))\uff0c\u5176\u52a8\u529b\u5b66\u5728\u65f6\u95f4\u4e0a\u662f\u53ef\u9006\u7684\u3002\u5176\u6570\u5b66\u4e0a\u7684\u7b80\u6d01\u6027\uff08Q-\u77e9\u9635\u53ef\u5bf9\u79f0\u5316\uff09\u53cd\u6620\u4e86\u5176\u7269\u7406\u4e0a\u7684\"\u5bc2\u9759\"\u3002</p> <p>\u975e\u5e73\u8861\u6001\u5219\u6253\u7834\u4e86\u7ec6\u81f4\u5e73\u8861\uff0c\u5176\u7279\u5f81\u662f\u5b58\u5728\u6301\u7eed\u7684\u51c0\u6982\u7387\u6d41 (\\(J_{ij} \\neq 0\\))\uff0c\u71b5\u4ea7\u751f\u901f\u7387\u6052\u4e3a\u6b63 (\\(\\sigma &gt; 0\\))\uff0c\u56e0\u800c\u5177\u6709\u660e\u786e\u7684\u65f6\u95f4\u65b9\u5411\u6027\u3002</p> <p>\u901a\u8fc7\u5f15\u5165\u8f68\u8ff9\u71b5\u7684\u6982\u5ff5\uff0c\u6211\u4eec\u5f97\u4ee5\u5728\u5355\u5206\u5b50\u3001\u5355\u8f68\u8ff9\u7684\u5fae\u89c2\u5c42\u9762\u7cbe\u786e\u5730\u5b9a\u4e49\u548c\u91cf\u5316\u70ed\u529b\u5b66\u91cf\uff0c\u5982\u7cfb\u7edf\u71b5\u3001\u73af\u5883\u71b5\u548c\u603b\u71b5\u4ea7\u751f\u3002\u6700\u7ec8\u5f97\u5230\u7684\u5e73\u5747\u71b5\u4ea7\u751f\u901f\u7387\u516c\u5f0f \\(\\sigma = \\sum J \\cdot A\\) \u63ed\u793a\u4e86\u6240\u6709\u8017\u6563\u8fc7\u7a0b\u7684\u666e\u904d\u7ed3\u6784\u3002</p> <p>\u8fd9\u4e9b\u6982\u5ff5\u8fdc\u975e\u7406\u8bba\u4e0a\u7684\u62bd\u8c61\uff0c\u5b83\u4eec\u662f\u7406\u89e3\u6211\u4eec\u6240\u5904\u52a8\u6001\u4e16\u754c\u7684\u57fa\u672c\u8bed\u6cd5\u3002\u71b5\u7684\u6301\u7eed\u4ea7\u751f\uff0c\u662f\u6240\u6709\u5177\u5907\u529f\u80fd\u548c\u65b9\u5411\u6027\u7684\u8fc7\u7a0b\u6240\u5fc5\u987b\u4ed8\u51fa\u7684\u3001\u4e0d\u53ef\u907f\u514d\u7684\u7269\u7406\u4ee3\u4ef7\u3002\u6211\u4eec\u770b\u5230\u5b83\u5728\u5fae\u89c2\u5c3a\u5ea6\u4e0a\u9a71\u52a8\u7740\u751f\u547d\u672c\u8eab\uff1a\u5b83\u662f\u7ec6\u80de\u5185\u7684\u5206\u5b50\u9a6c\u8fbe\u62d6\u7740\u8d27\u7269\u6cbf\u8f68\u9053\u884c\u8d70\u7684\u80fd\u91cf\u6d88\u8017\uff0c\u662f\u79bb\u5b50\u6cf5\u9006\u6d53\u5ea6\u68af\u5ea6\u5de5\u4f5c\u3001\u7ef4\u6301\u795e\u7ecf\u7535\u4f4d\u7684\u6839\u672c\u673a\u5236\uff0c\u4e5f\u662f\u6574\u4e2a\u65b0\u9648\u4ee3\u8c22\u7f51\u7edc\u5c06\u98df\u7269\u8f6c\u5316\u4e3a\u6709\u5e8f\u751f\u7269\u7ed3\u6784\u7684\u57fa\u7840\u3002\u5728\u5b8f\u89c2\u5c3a\u5ea6\u4e0a\uff0c\u5b83\u540c\u6837\u65e0\u5904\u4e0d\u5728\uff1a\u5b83\u662f\u8ba1\u7b97\u673a\u5904\u7406\u4fe1\u606f\u65f6\u5fc5\u987b\u6563\u53d1\u70ed\u91cf\u7684\u539f\u56e0\uff0c\u662f\u5316\u5b66\u53cd\u5e94\uff08\u5982\u71c3\u70e7\uff09\u4e0d\u53ef\u9006\u5730\u91ca\u653e\u80fd\u91cf\u7684\u4f53\u73b0\uff0c\u662f\u7535\u6d41\u5728\u7535\u8def\u4e2d\u7a33\u5b9a\u6d41\u52a8\u7684\u6807\u5fd7\uff0c\u751a\u81f3\u662f\u5730\u7403\u4e0a\u592a\u9633\u80fd\u9a71\u52a8\u5929\u6c14\u7cfb\u7edf\u5f62\u6210\u58ee\u4e3d\u98ce\u66b4\u7684\u5f15\u64ce\u3002</p> <p>\u6700\u7ec8\uff0c\u8fd9\u63ed\u793a\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u7269\u7406\u5b66\u771f\u7406\uff1a\u4efb\u4f55\u4e00\u4e2a\u60f3\u8981\u5728\u8fdc\u79bb\u201c\u70ed\u5bc2\u201d\uff08\u5373\u5b8c\u7f8e\u5e73\u8861\u6001\uff09\u7684\u6761\u4ef6\u4e0b\u7ef4\u6301\u5176\u590d\u6742\u7ed3\u6784\u548c\u529f\u80fd\u7684\u7cfb\u7edf\uff0c\u90fd\u5fc5\u987b\u6301\u7eed\u5730\u4ece\u73af\u5883\u4e2d\u6c72\u53d6\u80fd\u91cf\u5e76\u4ee5\u71b5\u7684\u5f62\u5f0f\u8017\u6563\u6389\u3002\u5728\u975e\u5e73\u8861\u7684\u4e16\u754c\u91cc\uff0c\u71b5\u7684\u4ea7\u751f\u5e76\u975e\u4ec5\u4ec5\u662f\u6df7\u4e71\u548c\u8870\u8d25\u7684\u6807\u5fd7\uff0c\u66f4\u662f\u590d\u6742\u6027\u3001\u529f\u80fd\u6027\u4e43\u81f3\u751f\u547d\u672c\u8eab\u5f97\u4ee5\u5b58\u5728\u7684\u5fc5\u8981\u6761\u4ef6\u3002</p>"}]}